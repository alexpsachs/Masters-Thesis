{
    "Hello71": "IIRC, I saw a bug report somewhere saying that links clicked inside incognito mode stayed in history even when incognito mode was left. Was this fixed?\n. Oh yeah, GitHub has integrated editing now!\n. Well, bashing it with UglifyJS seems to have quartered (is that even a word?) the file size - 802,990 bytes down to 240,697 bytes. Gzipping it crushes it down to 65,446 bytes, which is (slightly) more reasonable. But only just.\n. Can't you just gzip the whole package server-side?\n. I've managed to stab the thing down to 158,503 bytes using Google Closure Compiler (on ADVANCED_OPTIMIZATIONS, so it may be broken) instead of UglifyJS (oddly, using them together increases file size).\n. Oh, you wanted it to be usable?\n. I think it would be more effective to use, say, Pagedown and modify that for RES (not many changes needed...).\n. Grr... Fixing the pull request.\n. I only made the change because JSHint was complaining about mixed tabs and spaces. I can convert it all to tabs if you want though.\n. I only made the change because JSHint was complaining about mixed tabs and spaces. I can convert it all to tabs if you want though.\n. Unfortunately, #24 will still use spaces, as Git doesn't track file \"splits\".\n. Unfortunately, #24 will still use spaces, as Git doesn't track file \"splits\".\n. Hehe... unfortunately, the separation of modules makes it impossible to automatically merge other pull requests.\n. Hehe... unfortunately, the separation of modules makes it impossible to automatically merge other pull requests.\n. I suspect that what you're looking for is an auto-compilation tool, similar to how CoffeeScript works.\n. Would requiring Node.js for automatic re-compilation be acceptable?\n. {{citation needed}}\n. I recall sending a pull request after running fixmyjs. Also, Node.js seems like a somewhat reasonable requirement. If anyone wants, I can also make a small C# program to watch and re-compile the files. (Assuming that most reasonable people have at least .NET Framework 3.5 installed on their computer already.)\n. Also... if you're using Git on Windows, you have Bash already.\n. I don't see how I didn't address it. Allow me to make myself more clear: \nAutomatic re-compilation. Edit, Save, Refresh, Test.\nOn 2012-05-27 10:41 PM, Spencer Hakim wrote:\n\nStill doesn't address his issue with debugging concerns, which is understandable. I wonder if the larger JS projects have a better solution than just Edit, Compile, Test, Repeat.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/141#issuecomment-5958391\n. This whole thing was for the purpose of making it easier for newcomers to contribute.\n. LGPL doesn't actually make sense for RES.\n\nChanging the license will require obtaining the permission of all 40 contributors, since you haven't required people to sign a contributor agreement. (a good thing, IMO)\n. Yer not doin' it right: http://stackoverflow.com/questions/75980/best-practice-escape-or-encodeuri-encodeuricomponent\nurlencode: function(string) {\n-    // Javascript's escape function is stupid, and ignores the + character. Why? I have no idea.\n+    // Javascript's escape function is stupid, and ignores the + character. Why? Because it's not supposed to.\n-    // string = string.replace('+', '%2B');\n-    return escape(this._utf8_encode(string)).replace('+', '%2B');\n+    return encodeURIComponent(this._utf8_encode(string));\n }\n. Apparently, it's ridiculously hard to find documentation on this thing.\nhttp://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010823/events.html#Events-MouseEvent\nRoot cause is likely to be some kind of security feature similar to Greasemonkey's window wrapping.\nAha.\n. I'm... not sure how, but this seems to work in Chromium too.\n. I think it would be safe to use window.wrappedJSObject || window for guaranteed compatibility at the cost of readability.\nI still don't know what security feature conflicts with this. It's also possible that it's conflicting with NoScript or something like that.\n. http://code.google.com/p/chromium/issues/detail?id=27185\nSays that this was fixed for unpacked extensions back in May 2012.\n. http://code.google.com/p/chromium/issues/detail?id=27185\nSays that this was fixed for unpacked extensions back in May 2012.\n. $ sed -i -e 's/\\s*$//' lib/*\n$ sed -i -e 's/^ /\\t/' lib/reddit_enhancement_suite.user.js\n. $ sed -i -e 's/\\s*$//' lib/*\n$ sed -i -e 's/^ /\\t/' lib/reddit_enhancement_suite.user.js\n. ",
    "honestbleeps": "yes it was!\n. I just wanted to add a comment to this issue:\nit's far from \"trivial\" to make this update... I'm trying to see if I can get emscripten running and use it to compile the C version of Sundown into JS, but my linode at 512mb of RAM totally choked trying to compile it... i'm going to see if I can get it on my windows machine but it looks as if that may be a daunting process, unfortunately.\n. Wow! 12k lines is crazy. Thanks for trying this out. My worry is how\nheavyweight that may be to include in RES but hopefully it works!\nOn Nov 22, 2011 12:27 PM, \"Protuhj\" \nreply@reply.github.com\nwrote:\n\nI have it converted to javascript, which is a 12,000 line file, and by no\nmeans beautiful code. Now I just need to figure out how to invoke the\nconversion.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/12#issuecomment-2838161\n. thanks for taking a crack at it...  sorry for the curt reply but I'm on\nin-flight wifi on my way home now...\n\nmy concern with the size (if not gzipped) is that people seem to be\nrequesting greasemonkey support come back - so gzip isn't an option in that\ncase...\ni'll try and take a look at it when I get home, though, and see if at 240k\nit's worth including. my worry is that the overhead is not worth it.\nOn Nov 29, 2011 5:34 PM, \"Alex Xu\" \nreply@reply.github.com\nwrote:\n\nWell, bashing it with UglifyJS seems to have quartered (is that even a\nword?) the file size - 802,990 bytes down to 240,697 bytes. Gzipping it\ncrushes it down to 65,446 bytes, which is (slightly) more reasonable. But\nonly just.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/12#issuecomment-2952433\n. Sure... I can do that... but it won't install gzipped unless you're talking\nabout the whole web server \"on the fly\" gzip thing (as in, not actually\nserving it up as a gzip file)...\n\nIt's not so much bandwidth I'm concerned about as the overhead of parsing a\nmetric crapton of code (even if not executing it) on every page load...\nOn Nov 29, 2011 6:01 PM, \"Alex Xu\" \nreply@reply.github.com\nwrote:\n\nCan't you just gzip the whole package server-side?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/12#issuecomment-2952754\n. In the future, please be careful about global search/replace ... I see you didn't regression test, but even a first test on this would've revealed broken syntax - the JS wouldn't even run at all with the changes that were made...\n\nThe fixes were relatively easy for the most part, but I probably shouldn't have accepted the pull request without checking better first...\n. this is fixed in the latest code that's on github... \n. I've pulled in the greasemonkey fix manually since it was simple and I've been having weird windows related git issues so i'm out of sync.\ni had already fixed the array issues independently, too.. my apologies for not making clearer note of it :-\\ that's my bad.\n. i believe i've covered these fixes manually/separately... thanks!\n. eesh... i'll come back and look at this but I strongly prefer tabs to spaces... :-\\\nI'll look at the other stuff you changed and see if it's easy to make a manual patch or something...\n. eesh... i'll come back and look at this but I strongly prefer tabs to spaces... :-\\\nI'll look at the other stuff you changed and see if it's easy to make a manual patch or something...\n. Thanks for this -- in response about the other copies of the user.js -- unfortunately I discovered too late that git does not support windows symbolic links, which is a huge pain in the ass / problem :-(\nShort of switching to a linux machine to do all of my development I'm a bit stuck there and I'm just going to have to try and remember to be better about updating the other copies...\n. On its surface, I like his idea of separating the modules.\nUnfortunately, in practice I really don't like that idea at all.\nhere's my view on it / explanation why:\nMy workflow when I'm fixing a bug may involve as many as 20-30 quick\nedit/save/refreshes in a row over the course of just a few minutes as\nI'm making minor tweaks and seeing the effects...\nRequiring that I now go through an entire build process would make\nthese sorts of processes exceedingly tedious / cumbersome.\nThe benefits of separate files for each module basically boil down to\neasily finding a chunk of code... The difficulty of hitting ctrl-f and\nfinding \"module['nameHere'] =\" is far less than the difficulty of\nhaving to run a build script every single time I make a minor change\nthat I want to see the effect of...\nOn Thu, Dec 1, 2011 at 10:25 AM, Scott McClaugherty\nreply@reply.github.com\nwrote:\n\nMake script of some kind to copy them over, instead of editing the per-browser copies just edit the one in lib and run the script.\nAlso, I really approve of Hello72's idea of splitting reddit_enhancement_suite.user.js into separate scripts per module and then 'building' them into a single script before deployment/testing. While doing this would ruin any pending merges I really recommend doing so because in the long run it would greatly improve maintainability (prototype makefile).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/25#issuecomment-2976679\n. this is fixed for the next release, thanks!\n. this is fixed in the version on github, it just hasn't been released yet as there are other bugs and issues to address before next release, thanks!\n. pull request has been merged, thanks!\n. taken care of!\n. added/done.\n. I've manually pulled this in since github won't let the pull request be merged automatically, thank you!\n. I realize a number of people have asked for this, but making RES a porn assistant is just not something I'm really interested in, so I'm going to close this.  There are better ways... and imho that sort of thing should just be its own addon.\n. should be pretty simple, sure!\n. this issue on github is being denied only because a complete rework is coming that I believe would negate this request... \n. merged manually since github wouldn't let me do it automatically...\n. fixed, but calling targetTextArea.focus() only after refreshPreview is called by each button, rather than at the end of every refreshPreview call - saves CPU cycles.\n. gah, my bad.. had to do this manually, done!\n. fixed via pull request, thanks!\n. this is resolved\n. fixed for next release, thanks\n. merged manually, thanks\n. this is now resolved\n. addressed for latest release\n. resolved!\n. resolved.\n. Hrm I have the same settings and can't replicate.. it's possible I fixed this prior to checking this report out.  I'll reopen if I can replicate!\n. this happens when people are impatient and click it twice.. I'll add prevention for that... \n\nit's easily rectified by subscribing to any new subreddit (and/or unsubscribing) so that the cache is cleared and they must be re-downloaded.\n. the eho.st admin had told me extensions would always be jpg.\nthere is no way for RES to work well with eho.st without an API here when people don't post direct links.\nconsidering eho.st sees only a few posts a day (in fact none in the past 3 days), I don't really feel this is worth pursuing until a properly \"consistent\" means of URL conversion exists.\n. I am aware, but the time required to test the difference, etc, just isn't really worth it to me for a site that barely sees  any posts at all on the whole of reddit.\nI realize that may seem cold, but my todo list for RES is gigantic.\nI completely welcome anyone who wants to submit a pull request that fixes it... I just need to prioritize how I spend my debugging / fixing time.\n. can you provide more info than that?  I can't replicate the issue... \n. ah that helps, fixed for next release, thanks!\n. this is a known bug that's a result of the Firefox Addon SDK, it is already fixed for the next release, it simply needs to be compiled with the correct addon sdk version.\n. I can understand maybe wanting a show/hide toggle, but moving it to the bottom is probably not something that would work well on threads with large numbers of comments... \nI'm not sure how soon this sort of thing might get added, but I will leave this issue open for when I can get to it\n. this issue is resolved\n. this issue is resolved, there is now an option in the keyboard nav module\n. This pull request uses code that could cause conflicts and have the setting get lost... it also doesn't make this setting optional, which I feel is a must, for two reasons:\n1) Some users may not like this change\n2) It's also an unfair change to webhosts such as imgur that already lose enough traffic to hotlinking... automating the expansion of images even when sometimes the user may just want to leave that page ends up wasting resources....  If such a behavior should be in RES, it needs to be optional, and off by default...\nAs for the storage issue:  This would really need to use RESStorage to even be considered.  normal use of localStorage is unfortunately even more vulnerable to loss (by clearing browser data, etc) than RESStorage - which uses each browser's native storage method and/or at least localStorage on the \"background page\", rather than the reddit.com domain...\nI'll consider adding code in myself and making this optional, but for now I regretfully can't pull this one, sorry.\n. Hey there... I do appreciate the pull request... however, I'm actually hoping to implement imgur albums in a friendlier manner - by actually grabbing each image and making it drag/resizable, which this I don't believe would support...\nI'm not opposed to reopening this pull request as a short term solution, but for the time being (for purposes of housekeeping) I'm going to go ahead and close it... \n. fixed this a while ago for next release but never closed this out, thanks\n. this issue is resolved\n. quick comment here: I'll need to update this a little bit to account for excessive macro adding getting clipped.. maybe make a dropdown for them or something... thanks!\n. I don't really mind the namespace shortcut. It's not \"consistent\" but it doesn't bother me and it still leaves the verbose syntax in tact.\nNot using RESStorage is a killer though because localStorage is much easier for a user to accidentally destroy.  RESStorage just \"abstracts\" that -- it pretty much just uses localStorage that's tied to the background page (except in the case of Firefox, which has its own similar-but-not-the-same storage tool)\nAs for storage it might be worth considering what an \"extreme\" use case looks like and prune accordingly... Even 250 posts seems like a real lot more than I'll ever come back to and expect comments to still be collapsed... \nUnfortunately, because localStorage provides no \"elegant\" means of detecting that you've run out of space, you have to be overly conservative about filling that space up.\n. Thanks for the update - sorry for my lack of followup, I definitely want to pull this in I've just been swamped with bug fixing... I'll give it a test shortly! How soon do you think you'll update for using RESStorage?\n. good call, thank you\n. question before I merge this:  what about adding custom stuff then that's a part of Reddit but not in snudown?  Stuff I added under the \"user scripts\" comment section?  Is that included - and how do we add new stuff?  Recompile SnuOwnd every time?\n. gotcha.. Snudown was missing things like strikethrough, which Reddit added... looks like Snuownd doesn't suffer that problem.. thanks!\n. Also not seeing it over here on my end...\nOn Wed, Apr 25, 2012 at 5:42 PM, Scott McClaugherty\nreply@reply.github.com\nwrote:\n\nI'm not seeing it.\nCould you provide a screenshot?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/112#issuecomment-5345603\n. I just tested and confirmed:\n\nthis issue is already resolved by the new SnuDown markdown parser port that's been contributed to the RES source.\n. fixed for next release!\n. haven't heard any more reports of issues with this, so I'm going to close it.\n. quick question as I've given only a cursory review:\nyou mention leaving the thumbnail as the original URL...\nI may be missing something as I didn't read the code super thoroughly,\nbut if I'm understanding correctly, this would mean:\nthumbnail.href != link.href\nif that's true, that's a problem that contributes to peoples' \"it's\nnot purpling my links!\" complaints, because some people click the\nthumbnails and expect the main link to go purple...\nif that's not true, I skimmed the code too fast...\nOn Wed, May 2, 2012 at 1:16 PM, Scott McClaugherty\nreply@reply.github.com\nwrote:\n\nI created a system for preserving the original link (when necessary)\nwithout the trouble of loading entire webpages to mark history.\nWhen necessary, the original link is saved to a property called\nhrefOverride. If that is detected during expand creation then\nmouseover/mouseout handlers will be attached to swap the href on demand.\nThis works well but it can cause the link to turn blue on mouseover.\nWithout marking the history this has been made nearly impossible to\nprevent in the name of user privacy.\nI also went back to the original link on thumbnails so there is a fallback method for all links.\n\nOn a less closely related change, galleries now display per image captions/titles.\nYou can merge this Pull Request by running:\ngit pull https://github.com/gamefreak/Reddit-Enhancement-Suite showimage-behavior\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/129\n-- Commit Summary --\n- Display per-image titles/captions for galleries.\n- Keep the original link on the thumbnail.\n- Attempt to preserve the original urls when following links.\n-- File Changes --\nM lib/reddit_enhancement_suite.user.js (149)\n-- Patch Links --\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/129.patch\n\u00a0https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/129.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/129\n. I do agree with you about the artist credit philosophy - that's why I\nsuggested having \"credits\" be non-optional, and link to the original\npage... so clicking the \"main\" link (or thumbnail) goes to the image..\nbut clicking the credits link goes to the page...\n\nI'll also look at your idea of making it an option...  Like you - I\nNEVER would've thought people would click the thumbnail.. but finally\nit came out that most of the people complaining about purple links\nwere, in fact, clicking thumbnails and/or the l+c link - both of which\nI wasn't rewriting...\nOn Wed, May 2, 2012 at 5:35 PM, Scott McClaugherty\nreply@reply.github.com\nwrote:\n\nBeing able to click on the thumbnail at all is barely on my mind. I don't think I have ever even clicked on the thumbnail and I didn't know that it was a link until I saw people complaining about it not purpling their links.\nThe big issue here a collision of mindsets. I tend to hang around a community that is highly art/artist oriented and considers attribution to be far more important than most subs do. Since I'm used to attribution being serious business I have been treating it as such, hence why I find linking back to the original more important than coloring the browser history.\nI expect that if deviantart didn't link back to the art page then you would see plenty of complaints about that too.\nIt's well known that you can't please everybody, but we need to try pick the way that pleases the most people. Since one of the nice things about computer programs is that they are easily reconfigurable, I say take the easy way out and pick both.\nJust pick the default.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/129#issuecomment-5474401\n. I think that about covers it... I could be missing a technical\nsolution you have in mind, but if you do not rewrite the link, then\nmarking things in history on click is a shady proposition for anything\nthat's not super fast - as the page will be immediately unloaded\n(unless you open in new tab)....\n\nin related news: I did find a way to access XPCOM objects via Addon\nSDK and add urls to history... so the two (by far) biggest browsers\nnow have efficient / non-hacky URL history tracking\nOn Wed, May 2, 2012 at 6:33 PM, Scott McClaugherty\nreply@reply.github.com\nwrote:\n\nOkay instead of tweaking things around more lets stop and think about what it does now and what it needs to do.\nAs of 0a56b0d5415d719a5e442c1e1f2a049b9794165d:\n- L+C opens the original, doesn't mark history.\n- The main link is set to direct, switches to original for clicking/selection, does not mark.\n- The thumbnail keeps the original, doesn't mark.\n- Expando marks, provides link to original.\n\n\nCreate a function to add a URL to the queue without needing to involve the image..\nMake L+C mark history on click.\nMake thumbnail mark history on click.\nMake the main link mark history on click.\n\n\nAm I missing anything here?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/129#issuecomment-5475317\n. that's a possibility.. for now I think I want to hold off on further\nimage viewer changes as a number of issues have cropped up... I've\nfixed most of them, but I'm still struggling to figure out why, in\nFirefox, animated gifs stutter / start over after a second.. really\nweird ..\n\nI want to get a new release out tonight because there are some kinda\ncritical bugs I want squashed so I can stop getting emails :-\\\nOn Wed, May 2, 2012 at 7:53 PM, Scott McClaugherty\nreply@reply.github.com\nwrote:\n\nHow about instead of queueing up URLs in the browser window, send the URLs to the background page for all browsers.\nThe background page could then send a foreground tab URLs one by one.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/129#issuecomment-5476284\n. This issue seems to have been put to bed (outside of this pull request, so closing)... that was fun... I certainly underestimated some things in that little excursion.. eesh.\n. Thanks! I appreciate the contribution.  I may adjust the appearance a bit or maybe leave as-is, will talk with sws.\n. alright. I'm going to pull this in at least for the time being because you went to the work to do it and you seem like a nice guy...\n\nthat being said: if it doesn't take off, I may remove support... ultimately - it's ~25-100 extra regexp tests on every page load for thousands of users for each host, so I don't want to go overboard just letting every single person add their hosts...\n. some of these are being addressed individually, so closing this request, thanks!\n. Hey Spencer,\nThanks for the submission... Regretfully, I'm not sure I'm sold on the idea of a makefile system just yet...\nI recognize the advantages and have considered this route myself.  However, it throws a rather frustrating/annoying wrench into my typical debugging / dev workflow - which is it makes quick changes / refreshes to see if I've fixed a minor bug into a longer process by requiring a build in between...\nThere's also the issue that I'm not currently running anything that'll support even using the makefile... I suppose I could get cygwin going if I needed to...\nI'm not writing the idea off, but I think it poses some issues that require discussion first...\nThe biggest issues I see are:\n- slows down debugging workflow\n- limits the potential contributing audience to RES, because right now anyone who can write JS can do it... just moving to a makefile system raises the barrier to entry by potentially requiring people to either use a specific OS or at the very least install software that allows them to \"make\" the project....\n. Spencer:\nHere's a quick example...  say someone found a goofy quirk in RES that I think is an off by one error... this should only take me 30 seconds to fix...\nI identify the line of code, update it, go to my chrome extensions panel and click \"reload\", then load a page on reddit to test...\ndidn't work?  Oops... say it just turns out I misspelled something... fix my typo, save file, click reload again - bam. I'm testing.\nI may do this 5 times in 2 minutes as I'm tweaking, checking the console, refreshing, and tweaking again.\nWith a makefile setup, I would have to:\n1) go to the correct file in my text editor (module_whatever.js) and make the change there... this isn't so bad... maybe even nicer since I'm not ctrl-f'ing in a 19k line file... but...\n2) Now I have to open up a command prompt if I don't have one open already, and run make\n3) THEN I can go to my browser, click reload extension, and refresh my page...\nThis one extra step (#2) may seem minor... but I may hit up steps 1 / 3 many times in very rapid succession.. so adding an in between step can be a cumbersome annoyance...\nI'm still not totally writing off the idea... just expressing my reservations... \n. Well yes, you could edit the raw assembled file and reload...\nBut that means hand-patching the modules after the fact, which\nintroduces an additional potential for human error since you're\nbasically hand-patching the module file then... at that point doesn't\nit defeat the purpose of separating them out into modules in the first\nplace? Because I'm working within the 19k line big file anyway?\nOn Fri, May 11, 2012 at 4:42 PM, Jay Rossiter\nreply@reply.github.com\nwrote:\n\nIMO, rebuilding via makefile is not necessary during debugging. \u00a0The process doesn't change at all. \u00a0It does mean that once you have finalized your changes, you need to move them into the raw files, compile, and verify that they work, but that's only necessary as a final step before checking in.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/141#issuecomment-5661878\n. Sorry I've left this untouched for so long... been REALLY busy...\n\nI still really am not sure that this is the way I want to go... not only does it raise the barrier to entry for people who want to contribute (and in the past 2 weeks since I last replied, we got a number of nice quick fixes from people), but it also will make my debugging life hellishly annoying.\nAs a windows user, I don't even have the option of tools like cat and sed ... yes, I know \"get linux you doofus\" .. but my life and job REQUIRE windows due to tools I need to use frequently... and dual booting isn't a viable option because i'd be going back and forth all the time -- again, making my workflow more pain than it's worth...\nThe upside is certainly neater organization... which I agree is nicer, and would even be willing to concede is \"more correct\" from a programming standpoint...\nThe downsides, however, are still outweighing the upsides for me:\n1) The workflow of making quick edits, adding a console.log statement to see what's going wrong, coming back and editing again, etc - will become an utter nightmare for me.  I do not personally care for the idea of editing the assembled file and then having to hand copy/paste those edits back into the module file.. it's another workflow hurdle and it also leaves room for mistakes/errors.\n2) As mentioned, the barrier to entry goes from \"people with text editors who know javascript and/or CSS\" to \"people who have the right tools installed and/or are willing to work to install and learn how to use them\"...\nI've gotten a number of one or two line fixes from people who fit in the \"people with text editors\" camp... and while the text editing itself may not have saved me much time - the work they put into figuring out the little one or two pixel tweaks or adding/updating a few lines of JS really did save me time...\nI hate to be the naysayer when you've put thought and work and time into splitting things up and writing build scripts, etc... I feel like a jerk... but ultimately - especially due to the increase in workflow lag for simple fixes/tasks - I just don't think this fits with my development workflow.\n. Hey all...\nI know this is a closed pull request from ages ago... but I wanted to post an update here:\nFinally, Opera will soon be in-line with the rest of the browsers in its ability to load JS files dynamically and avoid having to have some silly concatenating-script-mess that I've wanted to avoid...\nThis would mean that the only reason to really concatenate scripts together anymore would be for Greasemonkey support -- and even in that instance it could theoretically be avoidable by using @include and pointing to the latest module file[s] on github or some other host...\nSo, for those reasons, RES may finally be split into module files for easier organization, which I hope pleases everyone! :-)\n. posted my comments in the other pull request thread\n. fixed\n. Before that feature existed, a massive number of people complained\nthat RES was \"broken\" because it showed the same image multiple\ntimes... unfortunately I think this is a case of a pretty split\ncrowd...  I don't think either default will prevent complaints :-\\\nOn Fri, May 18, 2012 at 4:30 AM, SmartViking\nreply@reply.github.com\nwrote:\n\nI'm sorry if this has been discussed before.\nI don't think most people like it. The way I see it, it is a little irritating because you might want to see the image where it's located even though it's a duplicate. It is useful though in that you can know it's a duplicate before you even open it, but this could also be achieved by a small notice by the button saying [dublicate], and then you could open the image well knowing that you'd seen it before.\nSo I think that option should be disabled by default. But that's only my opinion.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/146\n. sorry i left this open. been closed for 2 months.\n. I think this seems like a good idea on its surface, but after imagining how I would implement it, I think this would more than likely cause UI problems by blocking the view of comments, etc... I can't envision this working without being more of a hindrance than a help... most images on reddit take up at least 1/4 or more of my screen...\n. Is there a specific purpose you have in mind for wanting this\nparameter?  What extensions would need to discover this, and why?\n\nOn Tue, May 29, 2012 at 8:00 PM, Joel Thornton\nreply@reply.github.com\nwrote:\n\nPlease add the openerTabId parameter to all chrome.tabs.create() calls in /Chrome/background.html. When this parameter is not set, it is impossible for other Chrome extensions to discover the opener/opened relationship of tabs that are created by RES.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/151\n. pulled / closed\n. Thanks for the submission, I pulled in gamefreak's request because it adds a little extra to what you had... thank you!\n. fixed for next release, looks unique to that feature, thanks!\n. Both of your posts are likely problems because you've got 3rd party cookies disabled. However, RES can't be guaranteed to work on unsupported browsers - it's only known for sure to work on Chrome, Firefox, Opera and Safari ... I realize Iceweasel is based off of Firefox, but it's not the same codebase.\n. as in my other note: iceweasel is not supported, but this can likely be fixed by enabling 3rd party cookies.\n. thanks, this is fixed!\n. this was closed separately and I forgot to close this pull request, sorry and thanks!\n. manually merged all of this minus one of the .live things -- I'll revisit all of this and look at .on which is preferred these days.\n. on way, WAY late review, I actually believe this issue is resolved.\n\nif not, and it can be replicated in some way I can test, let me know.\n. closing due to dormancy, still no sites present at reddit.com/domains/thatme.me\n. I truly doubt that any sort of a fix is possible via RES.\nAll RES does is use Chrome's localStorage API from the extension's \"background page\" -- localStorage is outlined here:\nhttps://developer.mozilla.org/en-US/docs/DOM/Storage#localStorage\nAs you can see, it's a very simple key/value store and all RES does is get and set values from it.  It's highly, highly unlikely that RES itself has anything to do with the store getting corrupt.  This is far more likely to be a Chrome issue than an RES issue, because there's so little possible functionality for RES to even use (again - just \"get\" and \"set\")\nMy guess is that one or maybe both of you are running dev or canary builds of Chrome... is that true?\n. I truly doubt that any sort of a fix is possible via RES.\nAll RES does is use Chrome's localStorage API from the extension's \"background page\" -- localStorage is outlined here:\nhttps://developer.mozilla.org/en-US/docs/DOM/Storage#localStorage\nAs you can see, it's a very simple key/value store and all RES does is get and set values from it.  It's highly, highly unlikely that RES itself has anything to do with the store getting corrupt.  This is far more likely to be a Chrome issue than an RES issue, because there's so little possible functionality for RES to even use (again - just \"get\" and \"set\")\nMy guess is that one or maybe both of you are running dev or canary builds of Chrome... is that true?\n. I cannot recommend this solution be used long term -- what you're doing here is looping through every localStorage item and sending it back to the foreground page every single time anything changes.  This can become pretty inefficient in the long term for users with tons of data...\n. I cannot recommend this solution be used long term -- what you're doing here is looping through every localStorage item and sending it back to the foreground page every single time anything changes.  This can become pretty inefficient in the long term for users with tons of data...\n. this has been addressed via other, more comprehensive changes, thanks :-)\n. this has been addressed via other, more comprehensive changes, thanks :-)\n. This is not a bug in RES.  It's a common issue with Chrome profiles getting corrupted, and thus RES can't store any data -- including the data that says you've seen the what's new page before.\nThis is outlined in the FAQ on the RES website, as well as in the message that pops up on the what's new page.\n. This is not a bug in RES.  It's a common issue with Chrome profiles getting corrupted, and thus RES can't store any data -- including the data that says you've seen the what's new page before.\nThis is outlined in the FAQ on the RES website, as well as in the message that pops up on the what's new page.\n. @xpaulbettsx I will not put out a hack fix because RES is not supported in dev builds of browsers for the very explicit and in this case prescient reason that dev builds of browsers should not be expected to be stable.\nSupporting dev builds causes two major problems:\n1) If the cause, like in this case, is actually a browser bug and not an issue with RES, that cause may later be fixed - meaning not only am I potentially doing that debugging and work to fix something that will later be fixed before the browser goes stable - but I may also have to undo that fix... in this case, that fix is inefficient and not one I'd recommend putting in.\n2) I support 4 browsers, each of which has at least 2 and sometimes 4 alternative channels.  Supporting beta/dev browsers would multiply my testing requirements by a factor of at least 3x.\nMy (somewhat harsh) opinion on all of it is this:  Chrome and Firefox are really starting to upset me, quite frankly, by making it too easy for users to run dev/beta builds without HUGE caveats that stuff can and will break in those builds.\nThere's no reason that 99% of people should ever install those builds.  The bleeding edge features they support, etc, are not even slightly used, let alone widely used on the internet anyway for the very reason that they are so new.\n. @xpaulbettsx I will not put out a hack fix because RES is not supported in dev builds of browsers for the very explicit and in this case prescient reason that dev builds of browsers should not be expected to be stable.\nSupporting dev builds causes two major problems:\n1) If the cause, like in this case, is actually a browser bug and not an issue with RES, that cause may later be fixed - meaning not only am I potentially doing that debugging and work to fix something that will later be fixed before the browser goes stable - but I may also have to undo that fix... in this case, that fix is inefficient and not one I'd recommend putting in.\n2) I support 4 browsers, each of which has at least 2 and sometimes 4 alternative channels.  Supporting beta/dev browsers would multiply my testing requirements by a factor of at least 3x.\nMy (somewhat harsh) opinion on all of it is this:  Chrome and Firefox are really starting to upset me, quite frankly, by making it too easy for users to run dev/beta builds without HUGE caveats that stuff can and will break in those builds.\nThere's no reason that 99% of people should ever install those builds.  The bleeding edge features they support, etc, are not even slightly used, let alone widely used on the internet anyway for the very reason that they are so new.\n. @bbhoss absolutely - I'm fine with looking into things and staying ahead of the curve as/when I can. I just can't spend time releasing officially sanctioned patches - especially in an example like this one when it's definitely a browser bug...\nAs I hope you can understand, I'm a little bit fatigued from people's demands...\n. Unfortunately I've never seen a corrupted profile first hand - but from the reports I've seen, peoples' localStorage data is entirely gone, so I don't believe I can distinguish between new and corrupted.\nHowever, the message he's posted a screenshot of is actually not meant for him.  It's meant for people whose profiles have become corrupted.  He just happens to see it as a symptom of this Chrome 25 bug, which unfortunately manifests itself in a similar way to my absurdly rudimentary cookie check on the RES website.\nCertainly I want to make things as straightforward and user friendly as I can (when I can), but I don't think I can differentiate new/corrupt profile here.\nUltimately, I spend so much time supporting RES elsewhere that when it comes to matters of beta/dev builds I've made the decision to put my foot down and leave it up to the end user who is choosing to run such a build to at least do a little due diligence to help themselves.\nHopefully the newly activated AutoModerator will help a little...\n. I'm not sure, to be honest. I was led to believe from prior bug reports that localStorage was only broken on the extension's background page side... if it's broken in both places, however, then yes - this would work.\n. oops. way old. closing.\n. > It has been tested in Opera, Firefox, Chrome, Safari, and IE 7/8/9.\nCool, how did you test this in IE7-9?\nI'm definitely going to check this out and see how it works, but I'm a little nervous about relying on a 3rd party service that is untested, etc...  Clearly it seems your intentions are good - I just have to be careful with over 1 million users - especially their security, so I'll need a little more time than normal to look at this code.\n. > It has been tested in Opera, Firefox, Chrome, Safari, and IE 7/8/9.\nCool, how did you test this in IE7-9?\nI'm definitely going to check this out and see how it works, but I'm a little nervous about relying on a 3rd party service that is untested, etc...  Clearly it seems your intentions are good - I just have to be careful with over 1 million users - especially their security, so I'll need a little more time than normal to look at this code.\n. This is really a feature request, since what you're doing is unintended behavior, but I will certainly take it into consideration! :-)\n. This is really a feature request, since what you're doing is unintended behavior, but I will certainly take it into consideration! :-)\n. sorry this never got pulled in time for a release. as far as I'm aware this is no longer a bug in chrome's dev channel.  If I'm incorrect please reopen this and I'll pull it in, though I'd want to add a check of some sort, since it's less than efficient.\n. closing due to inactivity - I'm pretty sure this has been fixed for a long time. If you're still having issues/concerns, let me know...\nEXCEPT: note that there seems to be a big conflict with Firefox 23 and Ghostery, so... if you run Ghostery and are having 100% CPU usage, that's likely Ghostery.\n. I'm going to pull this to check it out, but it may become obsolete very soon as supposedly Reddit is doing their own live preview.  However, maybe it won't be as nice and we'll keep this... sorry for the long time before responding, things have been a little crazy.\n. this is one I'll have to take a deeper look at when I have some time. I'm not sure what other stuff might be broken by going to 'res-collapsed' instead... will have to poke around at it, but won't get to look at it for a bit unfortunately\n. fixed\n. fixed\n. Sorry for the very slow response on this, life has kept me way too busy to mess with RES as much as I'd like.\nI'm going to pull in this request, and then upload via subreddit and update accordingly to avoid future issues per @spladug's request.\n. sorry this has sat for forever and I've lost it in the shuffle... if I can get a working test case thread for this I'll gladly fix it... I'm hoping to push a new release very shortly so I don't want to rush this in without messing around with it a bit...\n. pretty sure this one's fixed\n. thank you so much for this, sorry it took so long to pull in... much appreciated!\n. that would be fantastic if you can! I'm on an airplane right now reading\ncode and accepting pull requests... :-p\nOn Sun, Feb 3, 2013 at 3:23 PM, Andy Tuba notifications@github.com wrote:\n\nGlad it's useful.\nThere are still a few popups that need this treatment: keyboard shortcut\nreference, console, alert popup (used by RESstorage get/update). How about\nI do those right now and send another PR?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/229#issuecomment-13054736.\n. I've traditionally been a little hesitant to add 3rd party services to RES because they can appear/disappear at any time... are you the guy behind unedditreddit.com by any chance?\n\nNot saying I definitely won't pull this in, just explaining why it's not already there :-)\n. Yeah, if I pull this in it would definitely be disabled by default and I think that'd be my practice for any 3rd party service, for the following reasons:\n- to minimize load on their services -- RES has well over 1,000,000 users at this point...\n- to semi-obfuscate them and minimize support requests -- if a 3rd party services is down, most people just think RES is broken and come to me about it\n- by ensuring people enable the module themselves, I may even put in some kind of \"relies on 3rd party service flag\" in the module that pops up a notification when you enable it, explaining that if the service is down, it won't work right...\nso, if we disable by default and I add some code to handle that messaging, I think we'd be good!\n. For the time being, I'm going to go ahead and close this, sorry.  It seems to have generated some controversy and there are some people less than thrilled with the existence of it, let alone further propagation of it.\nFurthermore, now that I've given some thought to how the reddit admins may react: I'm figuring it would be negative.  They put the delete feature in because they believe users should have it, even if it's abhorrently bad stuff they're deleting to hide their tracks... so I feel like I should do my best not to contribute to breaking from their philosophy...\n. there was already a PR for this earlier that I hadn't pulled in yet, but thank you for contributing!\n. fixed\n. @patricksnape - thanks to @gamefreak's rework I actually think the showImages module is quite well modularized.  I will be splitting all modules into separate files soon now that all browsers natively support that and we (I think, will require testing) won't have to rely on requirejs or similar on all platforms...\nThat being said: I'm not necessarily in support of every imagehost being added to RES for a number of reasons:\n- It's more CPU cycles -- hundreds of regex checks per page on a big comments page, etc - for relatively little benefit unless it's a frequently used image host\n- Many of these image hosts pop up and die off quite quickly, which means to keep RES as efficient as possible we need to stay vigilant on checking each ones' use level and eliminate those that aren't linked to frequently, etc.\n- Sometimes, patches aren't submitted by the owners of those sites themselves, and hotlinking is still frowned upon / disliked by many providers.  imgur and min.us have given their OK (minus even ASKED for support), but not everyone is cool with it - it takes away potential ad views, etc...\nTo address @mercurato directly: I do appreciate your submission.  With 1million+ users of RES, I do have to carefully consider adding code that causes dozens or hundreds of regexp checks on every pageview.  I see if I order by 'new', there hasn't been a post to your domain for 12 days (aside from your test post), but I suppose as an actual content creator and not a \"general image host\" your site is probably never going to see that level of frequency of posts.\nGive me some time to noodle on the idea of perhaps an opt-in to content creator site RES support, or something else clever... Basically I want to avoid saying \"no, no smaller sites get RES support!\" but I also want to avoid chewing up billions of CPU cycles on things that will very rarely match... I'm sure there's some creative thinking we can do!\n. @patricksnape - thanks to @gamefreak's rework I actually think the showImages module is quite well modularized.  I will be splitting all modules into separate files soon now that all browsers natively support that and we (I think, will require testing) won't have to rely on requirejs or similar on all platforms...\nThat being said: I'm not necessarily in support of every imagehost being added to RES for a number of reasons:\n- It's more CPU cycles -- hundreds of regex checks per page on a big comments page, etc - for relatively little benefit unless it's a frequently used image host\n- Many of these image hosts pop up and die off quite quickly, which means to keep RES as efficient as possible we need to stay vigilant on checking each ones' use level and eliminate those that aren't linked to frequently, etc.\n- Sometimes, patches aren't submitted by the owners of those sites themselves, and hotlinking is still frowned upon / disliked by many providers.  imgur and min.us have given their OK (minus even ASKED for support), but not everyone is cool with it - it takes away potential ad views, etc...\nTo address @mercurato directly: I do appreciate your submission.  With 1million+ users of RES, I do have to carefully consider adding code that causes dozens or hundreds of regexp checks on every pageview.  I see if I order by 'new', there hasn't been a post to your domain for 12 days (aside from your test post), but I suppose as an actual content creator and not a \"general image host\" your site is probably never going to see that level of frequency of posts.\nGive me some time to noodle on the idea of perhaps an opt-in to content creator site RES support, or something else clever... Basically I want to avoid saying \"no, no smaller sites get RES support!\" but I also want to avoid chewing up billions of CPU cycles on things that will very rarely match... I'm sure there's some creative thinking we can do!\n. Relying on a 3rd party service is something I'm very hesitant to do for a number of reasons, most of which is stability, but also privacy, etc...  It's not everyday someone can run a host that handles the needs of 1million+ users well...\nFor reference: Reddit sees over 60 requests per second from RES users.\n. Relying on a 3rd party service is something I'm very hesitant to do for a number of reasons, most of which is stability, but also privacy, etc...  It's not everyday someone can run a host that handles the needs of 1million+ users well...\nFor reference: Reddit sees over 60 requests per second from RES users.\n. I'm curious what exactly you have in mind... I'm hesitant to bring 3rd party services in the mix, to be honest... I'm imagining whatever you have in mind might rely on a lot of queries per page load, which would probably be too slow even with a fast backend... can you elaborate a bit?\n. I'm curious what exactly you have in mind... I'm hesitant to bring 3rd party services in the mix, to be honest... I'm imagining whatever you have in mind might rely on a lot of queries per page load, which would probably be too slow even with a fast backend... can you elaborate a bit?\n. closing due to age.  I'm supportive of eventually having optional sitemodules that run for sure.  However, I'm closing out old PRs at this point due to the massive purge/rebase change making these impossible to merge anyhow.\n. I'm not in the habit of disabling reddit features because they're [temporarily] broken... seems to work now, in fact...\n. I'm not in the habit of disabling reddit features because they're [temporarily] broken... seems to work now, in fact...\n. thanks guys, I was about to work on this but I've been really sick for the last several days and haven't had the opportunity... you guys ROCK!\n. thanks guys, I was about to work on this but I've been really sick for the last several days and haven't had the opportunity... you guys ROCK!\n. ack, this can't be auto merged... that makes me a sad panda... \nconfession time: I don't know a better way than manually making all these changes by hand... before I go and take on that task - is there a better way?\n. yikes, that's problematic.  I haven't had time to look at this yet but Firefox is the very reason I'm using MutationObserver in the first place.  It was a change they mandated before they'd approve RES on AMO.\nNot good if it's not firing anymore.\n. it'd be related if pages loaded with NER don't get RES-stuff applied, yes.\nOn Mon, Feb 25, 2013 at 5:15 PM, Andy Tuba notifications@github.com wrote:\n\nwhomp whomp.\nI think I saw some RESissues reports about NER not working in FF19 -- is\nthat related?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14082566.\n. what's wrong with Firebug?\n\nOn Mon, Feb 25, 2013 at 7:02 PM, Andy Tuba notifications@github.com wrote:\n\nStrike that, Chromebug is way out of date. Venkmenhttp://qabs.cz/doc/VenkmanGuide/is my next attempt...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14086557\n.\n. as long as you don't need to debug the background page, it should \"just\nwork\", and show errors etc from within reddit_enhancement_suite.user.js ...\nof course console.log should log to firebug also.\n\nif you're looking for chrome style breakpoints/debugging... firebug is\nactually the king of that, but I'm not sure it works with addons :-\\\nOn Tue, Feb 26, 2013 at 12:06 AM, Andy Tuba notifications@github.comwrote:\n\nHow do you get Firebug to attach to RES?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14097253\n.\n. wonder if Firefox's own inspector has gotten any better? I haven't tried it\nmuch.... ctrl-shift-k opens it I think...\n\notherwise I'm not sure :-\\\nOn Tue, Feb 26, 2013 at 2:39 AM, Patrick Snape notifications@github.comwrote:\n\nAll my Google-fu turned up was that firebug can't attach to add-ons\nbecause of the sandboxing. It did indeed show errors but not console.log\nand RES wasn't in the list of attachable scripts. Makes trying to find out\nwhat's going on with the MutationObserver very difficult.\nOn Tue, Feb 26, 2013 at 6:11 AM, honestbleeps notifications@github.com\nwrote:\n\nas long as you don't need to debug the background page, it should \"just\nwork\", and show errors etc from within reddit_enhancement_suite.user.js\n...\nof course console.log should log to firebug also.\nif you're looking for chrome style breakpoints/debugging... firebug is\nactually the king of that, but I'm not sure it works with addons :-\\\nOn Tue, Feb 26, 2013 at 12:06 AM, Andy Tuba notifications@github.comwrote:\n\nHow do you get Firebug to attach to RES?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14097253>\n.\n\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14097360\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14101053\n.\n. I've mostly been nursing a 101 fever for the better part of this week but\nI'd love to get a release out soon :-\\  I have really not touched code.\n\nOn Thu, Feb 28, 2013 at 5:52 PM, Patrick Snape notifications@github.comwrote:\n\nAre we working towards a release? I assume we need to fix a lot of the\nbugs for Firefox 19/Chrome 24. What are the major fixes we need to make?\nAnyone made any headway on Firefox extension debugging?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14265399\n.\n. fyi I talked with reddit about the siteTable issue and they're fixing it\nprobably tomorrow.\n\nI've still accepted your PR for it though because it can't hurt to check\nanyway, in case this regression happens again.\nOn Thu, Mar 7, 2013 at 10:37 PM, Andy Tuba notifications@github.com wrote:\n\n272 https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/272is an unrelated bug -- reddit's \"sponsored link\" block is hijacking the\nsiteTable MutationObserver.\nIt may well be what's breaking FF, too -- I'll look at that tomorrow night.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14605537\n.\n. From what I had gathered about Chrome's MutationObserver, it's still a concern in extensions.  See here:\n\nhttps://code.google.com/p/chromium/issues/detail?id=160985#c32\nThe code has made it in to Canary as of a couple of weeks ago, so it should be usable soon, but at least from what I gather here it should still not be used just yet.  However, if your real world testing contradicts that and your'e confident we should enable it, let me know!\nAs for Firefox MutationObserver - I'll try and get in #jetpack on freenode and ask the guys in there - they tend to be pretty knowledgeable/helpful on that kind of thing.\n. I'm pretty sure that the latest commit to master fixes this.\nNote: I've enabled MutationObserver in Chrome for now. Seems to be working and not causing me memory leak havoc.\nI've tested both with and without MutationObserver in chrome though (using the nullout line in the code) and can't replicate this issue.  Mind testing yourself from master? Thanks!\n. pretty certain I've eliminated all known issues here now as well as in the other issue. please reopen if I'm mistaken!\n. where have you noticed this exactly?  besides needing to change the test for opera, typeof(chrome), safari etc I think are used pretty consistently.  If not I'm up for having it fixed to be sure, but I'm curious where?  Maybe in some code I folded in but didn't write?\n. ah gotcha, that one was added by the guy who made an attempt to get RES working in IE... it never fully got there.\nagree a helper function would make maintenance easier!\n. Greasemonkey is no longer officially supported at this time, unfortunately.  Is there a specific reason you're not using the XPI version?\n. sorry it has taken so long to respond, but my main issue with this PR is that it only supports Chrome... I try to ensure all RES features are available on all RES browsers. Have you tried with FF, Safari, Opera?\n. closing because we lost touch on this and now that the RES repo has recently undergone a huge change that requires all contributors to rebase (or just fork fresh), the changes etc can't realistically even be reviewed.\n. Nightly, beta and aurora builds are not supported because they're likely to have bugs.  I can pretty much guarantee that this is a bug in Firefox Nightly, and not a bug in RES.  The reason I can guarantee that is because RES uses Firefox's storage in a \"black box\" sort of way.. RES just says \"save this\", and Firefox does it.  RES has no deeper control than that.\nI would not recommend running nightly builds of browsers unless you have a strong reason to do so.\n. although I suppose this is a legitimate bug, it's probably a very low priority to fix, because the likelihood of anyone (intentionally) linking an empty album is quite low.  the todo list is quite large, unfortunately :-\\\n. absolutely!\nOn Tue, Mar 5, 2013 at 11:04 PM, Jacob Greenleaf\nnotifications@github.comwrote:\n\nI can fix this myself and issue a pull request for you. Would you accept a\npull request?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/270#issuecomment-14485685\n.\n. thanks, let me know what you find. my sincere hope is to get a release out\nat the end of this coming weekend.\n\nOn Thu, Mar 7, 2013 at 5:15 PM, Andy Tuba notifications@github.com wrote:\n\nthanks. I think the root cause is #259https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259,\nbut I'll double-check that fixing 259 also fixes this.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/272#issuecomment-14597281\n.\n. well you beat me to the punch on committing, and did it a little more elegantly than I did because I was coding on a plane with a timer (e.g. wifi being shut off when we get close), so I'll ditch my changes and pull this in, thanks :)\n. I'm pretty sure it's necessary.. the reason it \"looks\" unnecessary is that\nthere's a DOMNodeInserted check fallback ... to get Firefox to actually use\nMutationObserver you have to force it, because\nBrowserDetect.MutationObserver is null otherwise.\n\nOn Sat, Mar 9, 2013 at 1:14 PM, Andy Tuba notifications@github.com wrote:\n\nFun fun. I suspect your double-check in 8b3ae11https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/8b3ae115d82ba52ae622aa56a5db2f65d6aa7cfamay be unnecessary, but it can't hurt. I'll go post my findings on the bug\nyou posted, though.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/275#issuecomment-14668704\n.\n. we can't add MutationObserver to the OR chain do to the firefox bug that\nreturns null for it, so no... that's the whole point of the hack...\n\nwe can't detect firefox that way because the user could conceivably be\nusing Greasemonkey ... there's still a surprising number of those,\nunfortunately.. I guess they're using Greasemonkey's @require to include\nthe other scripts?\nI'm close to ready to abandon them though...\nOn Sat, Mar 9, 2013 at 2:04 PM, Patrick Snape notifications@github.comwrote:\n\nTwo things to nitpick:\n- cant we just add that MutationObserver to the existing OR chain?\n- can we use the browser detect isFirefox instead of the self.on?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/275#issuecomment-14669560\n.\n. oh jesus, I forgot about that code... because I didn't write it and I suck\nat life. yes.\n\nOn Sat, Mar 9, 2013 at 2:10 PM, Patrick Snape notifications@github.comwrote:\n\nYikes that's a crappy bug, fair enough. I could be wrong, but doesn't the\nFirefox check just do self.on inside of it?\nOn Sat, Mar 9, 2013 at 8:08 PM, honestbleeps notifications@github.com\nwrote:\n\nwe can't add MutationObserver to the OR chain do to the firefox bug that\nreturns null for it, so no... that's the whole point of the hack...\nwe can't detect firefox that way because the user could conceivably be\nusing Greasemonkey ... there's still a surprising number of those,\nunfortunately.. I guess they're using Greasemonkey's @require to include\nthe other scripts?\nI'm close to ready to abandon them though...\nOn Sat, Mar 9, 2013 at 2:04 PM, Patrick Snape notifications@github.comwrote:\n\nTwo things to nitpick:\n- cant we just add that MutationObserver to the existing OR chain?\n- can we use the browser detect isFirefox instead of the self.on?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/275#issuecomment-14669560>\n.\n\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/275#issuecomment-14669621\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/275#issuecomment-14669647\n.\n. I'm struggling to remember, but something after Reddit added support for\nflair editing had broken RES and/or RES was breaking it... I remember a\nlate night of frustration on this one but I can't even remember the details\nnow... I should've put in better comments... :-\\\n\nOn Sat, Mar 9, 2013 at 11:37 AM, Andy Tuba notifications@github.com wrote:\n\n@honestbleeps https://github.com/honestbleeps Do you remember the\nreasoning behind bringing in all the jquery.reddit.js code in afeea81https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/afeea8182b617691f8668fb39f76eaec9633b77d\n?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14667034\n.\n. tear it out, do a little testing and if we have to we can always put it\nback in.\n\nman I wish I had an automated system to \"push\" RESIssues posts to Github\nissues when they're legit... I need to better organize my todo list... and\nshare it with you guys.\nOn Sat, Mar 9, 2013 at 12:45 PM, Andy Tuba notifications@github.com wrote:\n\nheh..\nafeea81https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/afeea81commit timestamp: 2012-11-14 T 14:53:13 -08:00\nRES for Operahttps://addons.opera.com/en/extensions/details/reddit-enhancement-suite-2/?display=enlast release: Nov 15.\nWell, editing flair still works in Opera 12.14 on OSX after removing that\nwhole chunk. I'll investigate a little to see if I can figure out why\nexactly v4.1.5 needed it and why it's now broken in master, but I'm\ninclined to just tear it out and hope for the best.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14668257\n.\n. do you guys (and @patricksnape ??) use gtalk or some similar outlet we\ncould collaborate on more easily?\n\nalso: maybe I'll build a browser extension to push any webpage into a\ngithub issue.. you know.. in all my copious spare time! ;-)\nOn Sat, Mar 9, 2013 at 12:57 PM, Andy Tuba notifications@github.com wrote:\n\n@tio24 hah.. I should also be exercising my wiki privileges and copypasta\ncontent over ... after a release.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14668445\n.\n. I like @andytuba 's idea of IRC since it's better for multiway chat...\nhttp://webchat.snoonet.org\n\nOn Sat, Mar 9, 2013 at 1:03 PM, Patrick Snape notifications@github.comwrote:\n\n@honestbleeps https://github.com/honestbleeps yep, count me in, I can\nuse gtalk via my patricksnape gmail account.\nI need to pull these commits in so I can continue testing the\nMutationEvents, they are a bit of a pig because they seem to fire more than\nonce sometimes. Bit busy this evening but got a lazy Sunday mapped out to\nmake sure they're filtered correctly. @andytubahttps://github.com/andytubanice catch on the MutationObserver\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14668525\n.\n. #enhancement\n\nOn Sat, Mar 9, 2013 at 2:07 PM, Patrick Snape notifications@github.comwrote:\n\nSo we're communicating on #reddit? Or #enhancement?\nOn Sat, Mar 9, 2013 at 7:17 PM, honestbleeps notifications@github.com\nwrote:\n\nI like @andytuba 's idea of IRC since it's better for multiway chat...\nhttp://webchat.snoonet.org\nOn Sat, Mar 9, 2013 at 1:03 PM, Patrick Snape notifications@github.comwrote:\n\n@honestbleeps https://github.com/honestbleeps yep, count me in, I\ncan\nuse gtalk via my patricksnape gmail account.\nI need to pull these commits in so I can continue testing the\nMutationEvents, they are a bit of a pig because they seem to fire more\nthan\nonce sometimes. Bit busy this evening but got a lazy Sunday mapped out\nto\nmake sure they're filtered correctly. @andytuba<\nhttps://github.com/andytuba>nice catch on the MutationObserver\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14668525>\n.\n\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14668774\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14669597\n.\n. updated\n. this was already accepted here:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/258\n. I can't replicate this, but it may be because I've reworked all of my \"watcher\" code (MutationObservers and DOMNodeInserted events where MO doesn't run)...\nBefore I accept this pull request - can you try from master on a use case you know had problems?\n. I believe I've fixed all of these.\nA couple required stealing a line or two of your code from the observers\nbranch.\nMost of it results from a complete rework of both MutationObserver and\nDOMNodeInserted events.  It was... scary.\nSome re-testing would be really appreciated.\nOn Sun, Mar 10, 2013 at 8:34 PM, Patrick Snape notifications@github.comwrote:\n\nCurrently these are the issues I've found. I'm still investigating but\nit's 1:33am and I need to get to bed. Will sneak some time in tomorrow\nmorning at work.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/285#issuecomment-14694024\n.\n. it's possible reddit behavior has changed.  in the past, forms didn't exist\nas hidden, they were added as new elements to the DOM.\n\nif that's no longer the behavior, that code may be obsolete.\nOn Mon, Mar 11, 2013 at 6:39 PM, Patrick Snape notifications@github.comwrote:\n\nEditing is broken:\nThe only thing in the whole codebase that listens on newCommentsForms is Line\n7942https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/reddit_enhancement_suite.user.js#L7942.\nThis seems to be the wrong behaviour to me, however? Why doesn't it just\nlisten for new comments? Changing it from newCommentsForms to newCommentsseems to make it work again? What exactly is the point in\nnewCommentsForms versus newComments? Obviously it allows you to attach to\nthe form that gets added to the page, but the form is hidden so can't we\njust latch on straight away? That's what the code does already when it\nwires up existing elements on the page.\nIn order to fix the save-edit-save functionality we probably need to\neither clear the 'seen before' flag or hook in to the save button ourselves\nand manually fire a DOM change event. Or perhaps we need to listen for a\nDOM change? Since we only listen for insertions (at least in the\nMutationEvents code).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/285#issuecomment-14750220\n.\n. grah! somehow I missed those. I was so excited I'd fixed the other beast of\nan issue that I must've skimmed over those that involved replying to\ncomments.  I'll have to have a look at those later.\n\nOn Wed, Apr 10, 2013 at 3:22 AM, Patrick Snape notifications@github.comwrote:\n\nIssues I still see:\n1.\n- Edit a parent comment, save it\n- Load it's children (comment level 'load more comments')\n- No RES settings applied to child comments\n1.\n  - Reply to a comment\n  - Reply to the comment you just added\n  - No RES settings applied\n    2.\n  - Load more comments (top level - for page)\n  - Reply to a comment\n  - Comment gets two source links and two save-RES links\nThis flow obviously appears to be a bit of a nightmare - so here's what\nI'm thinking: Much hooking in to the Load more comments link, we\nindividually hook in to the edit, reply and save (after editing) buttons.\nThis means that we are less likely to miss elements being added. Since,\napart from at initial page load, all new comments added are through user\ninteraction, perhaps we should be hooking in to those interactions rather\nthan trying to listen to all the correct form elements etc being added?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/285#issuecomment-16161288\n.\n. I might give myself a tiny bit of credit for helping enhance your work on settings search... beyond that nothing jumps out immediately...\n. not sure that 'pops' much more either, really... especially once you size\nit down...\n\nI used to have \"photographic\" icons and people bitched incessantly... they\nseem to want plain single color sorta stuff that fits in with Reddit's\nscheme (understandable)...\ntbh - I've never heard of anyone having trouble distinguishing the two\nuntil these two guys posted...  do you guys see it as a pain point?\nOn Mon, Mar 18, 2013 at 5:12 PM, Travis notifications@github.com wrote:\n\nCould do something like this or similar for future ref\nhttp://i.imgur.com/ngKis3a.png\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/297#issuecomment-15085433\n.\n. closing for inactivity / lack of agreement that this is a real issue.\n\nif people are that concerned about it, they can userstyle it.\n. what happens if I don't want to sort in either of these, and I want my custom dragged/dropped sort to stay as is? can't tell from a quick glance at the code, maybe you've got that covered already?\n. This is already on the todo list but it will never be super user friendly\nbecause javascript of course has no filesystem access. Best case scenario\nis a cut and paste job.\nI have some code for this locally set aside.\nOn Mar 13, 2013 4:43 AM, \"Patrick Snape\" notifications@github.com wrote:\n\nI see a lot of requests about backing up RES data/getting access to saved\ncomments/links. What is the feasability/scope for adding a backup button?\nWould this be acceptable? Perhaps it could just generate a JSON file that\nthe user can save and then import?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/300\n.\n. just what reddit needs more of :-\\\n\nOn Wed, Mar 13, 2013 at 12:49 PM, Andy Tuba notifications@github.comwrote:\n\nI'd also like to eventually make a macro import/export feature to pair\nwith adding a macro groups feature. (I want to add a \"group\" string\nproperty to macros, and macros with the same group are displayed in a\nsubmenu in the macros dropdown menu. I think this would be great for\ndistributing collections of emote macros.)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/300#issuecomment-14857452\n.\n. I've looked into it on and off periodically.\n\nThe main obstacle is that not all browsers have a useful file API. That may be different now, but last time I checked (probably months ago now) it was an issue.\nAlso remember that RES needs to be cross browser compatible, and consider that the user experience needs to be sufficiently simple / useful as compared to what you can already do today.\nLet's not forget that right now, this process is as simple as copying one file already.  Making it a button click inside RES might be a slight improvement, but it's not exactly rocket science right now...\nhttp://www.reddit.com/r/Enhancement/wiki/backing_up_res_settings\n. I've looked into it on and off periodically.\nThe main obstacle is that not all browsers have a useful file API. That may be different now, but last time I checked (probably months ago now) it was an issue.\nAlso remember that RES needs to be cross browser compatible, and consider that the user experience needs to be sufficiently simple / useful as compared to what you can already do today.\nLet's not forget that right now, this process is as simple as copying one file already.  Making it a button click inside RES might be a slight improvement, but it's not exactly rocket science right now...\nhttp://www.reddit.com/r/Enhancement/wiki/backing_up_res_settings\n. hm, why not just avoid running filterNSFW if RESUtils.currentSubreddit() is in that options table?\nis this so it works on the homepage or /r/all etc?  I'm not sure that's necessarily what users might want.  I think (I may be wrong!) the idea is to allow NSFW posts when browsing that sub specifically.... so they never see NSFW on their homepage, but if they directly navigate to a NSFW sub, they can... \n. gotcha... that makes more sense...\nI'd still perhaps suggest that we only do all of this DOM modification\n(adding classes) when necessary... so on homepage or /r/all ...\nwhen directly browsing a sub we can safely just not execute the function...\nthoughts?\nOn Thu, Mar 14, 2013 at 2:33 AM, Tim Collins notifications@github.comwrote:\n\nUsers want some NSFW stuff on their feeds too. The specific example I saw\nis that they want to see the subreddits that use the NSFW tag to prevent\nspoilers, but don't want the normal NSFW stuff in their feed.\nRegards,\nTim Collins\nThis email was sent using a mobile device.\nOn 14 Mar 2013, at 07:29, honestbleeps notifications@github.com wrote:\n\nhm, why not just avoid running filterNSFW if RESUtils.currentSubreddit()\nis in that options table?\nis this so it works on the homepage or /r/all etc? I'm not sure that's\nnecessarily what users might want. I think (I may be wrong!) the idea is to\nallow NSFW posts when browsing that sub specifically.... so they never see\nNSFW on their homepage, but if they directly navigate to a NSFW sub, they\ncan...\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/301#issuecomment-14889920\n.\n. I'll just merge this in and make those updates myself, as well as add subreddit autocomplete...\n. as I think about it more I don't really think we need to support both use\ncases, but I dunno.. what do you guys think?\n\nOn Thu, Mar 14, 2013 at 9:40 AM, Andy Tuba notifications@github.com wrote:\n\nSteve, your ideas sound fine.\nI had Tim's use case in mind when I threw this together, so that\n/r/crazystairs et al wouldn't be hidden.\nTo support Steve's use case, we could a \"Everywhere / Only in\nsubreddit/multi\" toggle per subreddit.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/301#issuecomment-14905769\n.\n. well, the implication there is having to convert the options format to a\nnew one....\n\nshould we just go the whole 9 right now? :-\\\nOn Thu, Mar 14, 2013 at 10:56 PM, Andy Tuba notifications@github.comwrote:\n\nI think what we have now is sufficient. If enough people complain request\nit, we can add finer-grained controls later.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/301#issuecomment-14942783\n.\n. yes you can, it's being done already in filtereddit exclusions .. check it\nout\n\nOn Fri, Mar 15, 2013 at 1:51 PM, Andy Tuba notifications@github.com wrote:\n\nmight be worth it. Can you inline the subreddit autocomplete option inside\na table option?\nAnother idea: add a \"whitelistNSFWwhenvisiting\" option to parallel the\n\"whitelistNSFW [everywhere]\" option.. but that feels kinda icky.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/301#issuecomment-14978471\n.\n. yea unfortunately with the OAuth issue I think this feature is probably\ndone for once API v1 is gone :(\n\nOn Thu, Mar 14, 2013 at 5:14 AM, Patrick Snape notifications@github.comwrote:\n\nPossible library to use - https://github.com/mynetx/codebird-js\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/302#issuecomment-14894901\n.\n. using embedded tweets now (except in firefox, using oembed)\n. fascinating... their twitter source does seem to use v1.1 ...\n\nhttps://github.com/leedo/noembed/blob/master/lib/Noembed/Source/Twitter.pm\nOn Thu, Mar 14, 2013 at 4:26 AM, Patrick Snape notifications@github.comwrote:\n\nHow about https://noembed.com/ and then we can even make pull requests to\nget our other providers supported?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/303#issuecomment-14893048\n.\n. I'm always wary of 3rd party services because they can go down at any time,\nbut it seems to have potential for sure...\n\nOn Thu, Mar 14, 2013 at 12:20 PM, Patrick Snape notifications@github.comwrote:\n\nYes, but it's a node implementation so they can keep their authentication\ndetails secret. Thoughts on replacing the twitter/image grabbing with this?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/303#issuecomment-14916008\n.\n. speaking of GPLv3.. I'm considering a change to the RES license... I've\nstarted to become concerned about GPLv3's implications... would love to\nhear other devs thoughts.\n\nOn Thu, Mar 14, 2013 at 12:25 PM, Patrick Snape notifications@github.comwrote:\n\nArs Technica use it! But, I do agree. Maybe, because it's in Javascript,\nwe could just steal some of the logic, in a friendly GPL v3 way.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/303#issuecomment-14916279\n.\n. now using noEmbed for Vine videos, no reason it can't be used for other stuff too at some point...\n. it's not a bug.\n\nyou used to not have to toggle it.\nthen I started doing beforeLoad stuff to get CSS in before pageload so it\nperformed much better without the FOUC...\nbeforeLoad would have to be updated or called separately just for nightmode\nI guess.. because right now, nightmode gets jammed in with all other CSS in\none fat variable during beforeLoad, which is why it now requires refresh,\nand didn't use to.\nOn Fri, Mar 15, 2013 at 10:50 AM, Patrick Snape notifications@github.comwrote:\n\nHmm. Is this a bug? It seems reasonable to have to reload the page to\napply css changes to it. And when you've toggled it, it makes sense that\nyou should reload, not immediately re-toggle it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/307#issuecomment-14968378\n.\n. Unfortunately there's no way around 3rd party cookies. It's set up that way\nfor security reasons.\n\nMy only hope here is that jetpack SDK addons may recognize cookies as 1st\nparty when from the same domain, which technically they should, but for\nsome reason do not. :-\\\nOn Mar 15, 2013 10:22 PM, \"ginaux\" notifications@github.com wrote:\n\nProblem: RES relies on 3rd party cookies for functions like Never Ending\nReddit to work correctly. Firefox will be disabling 3rd party cookies by\ndefault in Firefox 22.\nRecreate the error: Disable 3rd party cookies on Firefox and reload\nReddit.com\nThe best case solution would be to find a workaround that doesn't use 3rd\nparty cookies.\nOtherwise a popup telling the user to enable 3rd party cookies will reduce\na shitload of \"RES is broken\" type reports.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/309\n.\n. thanks for that update, we'll have a look!\n. no it's not. it uses 1.14\n. despite using 1.14, neverending reddit (at the least. I haven't had time to test more) does still seem broken.  @patricksnape - which version of FF did you test?\n. so it turns out the changes from https://github.com/mozilla/addon-sdk/pull/768 did not make it in to 1.14 ... RES users who don't check \"allow 3rd party cookies\" are essentially out of luck unless this makes it in to the Addon SDK unfortunately.\n. sorry, this should've been closed a while ago - this is fixed as of.. long ago!\n. The problem with this one is the issue of purple links, which is the #1 irritation that I used to be flooded with from people...  \"I expanded the image, but the link doesn't go purple!\"...\n\nIf we make it link to the page, then the link can't go purple unless we load the WHOLE PAGE in an iFrame for both Safari and Opera... (though FF and Chrome finally both have APIs to add full URLs to history)...\nThe problem with this is that every image, bit of JS, etc gets loaded in those iframes too, it's a hog... especially when someone clicks \"view images\" on a page with 100 of them, etc...\nHaving some alternate original link may be a possibility, but the tech complaint headaches of allowing an option to preserve the original link probably aren't worth the pain...\n. thanks so much for knocking this out @patricksnape - appreciate it!\n@tico24 - collaborators wield great power!\n. There have been 3 posts in the last day, 1 the day before, and the next one is still 5 days ago... there's not enough volume of posts on here to justify adding to RES still, sorry.\n. closing because we lost touch on this and now that the RES repo has recently undergone a huge change that requires all contributors to rebase (or just fork fresh), the changes etc can't realistically even be reviewed.\n. fixed\n. thanks for the contribution, @dshafik - scrapeHTML used to be used for flickr also and I do remember one problem: certain types of flickr pages required a different selector and I can't for the life of me remember what it was, though I suppose I could dig through the commit history.\nfor the time being I'll just accept this anyway because it at least gets us to a better state... if you happen to remember which URL format requires a different selector to grab the image, let me know.\n. ah, nice!  sorry I skimmed a little too quick then :)\nOn Fri, Mar 29, 2013 at 10:08 AM, Davey Shafik notifications@github.comwrote:\n\n@honestbleeps https://github.com/honestbleeps This ensures that they\nalways end up on the sizes page, which should always use the same selector.\nBefore, it would try to handle this page, and the regular image page, and\nthat's where it would break (and most people link to the regular image\npage).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/328#issuecomment-15644835\n.\n. bah, why can't this be auto merged? boooo... will look when I have more time.. just have a short break right now :(\n. manually merging.\n. I haven't seen my balance etc yet because I needed to make some fixes that maybe you've already made here... I'll have a look and come up with an alternative if need be. maybe it's only shown on hover or something and is a dropdown type deal.\n. The biggest reasons this hasn't happened yet (don't TL;DR this one!) were:\n\n1) barrier to entry for JS devs who don't have an OS where a build script is convenient... Windows just blows for this, for example... and is my primary platform for personal use.\n2) Legacy Greasemonkey support, which required build process in #1....\n3) Lack of multi-file support in browsers extension architecture....\n4) Adding a build step to the process during rapid debugging is actually a huge PITA and slows down the \"edit, refresh debug, edit, refresh, debug\" cycle that's often needed with the ridiculous amount of crazy DOM stuff going on...\nI believe, but I will need to test, that #3 is no longer a problem.  The reason I need to test is still order of loading - I don't know if all the browsers guarantee load completion prior to the next one - and unfortunately there are a couple of modules that rely on others having executed (or at least been defined) first...\nIf that's the case, I'm about ready to abandon Greasemonkey support anyhow.  The reasons to keep it before were:\n1) Memory issues in FF that weren't present in GM, only in compiled XPIs...\n2) Legacy support for FF3.6 which some small subset of RES users were stuck on in their corporate worlds much like people are stuck on IE8, 7, 6...\nSince 1 is no longer an issue, and the # of people affected by 2 is arguably negligibly small, I'm ready to abandon GM support at this point.\n. not sure I follow how that works...\nif we have all separate files, how is the debug version all one big file?\n are you suggesting the build process splits them?\nOn Sun, Mar 31, 2013 at 10:36 AM, Patrick Snape notifications@github.comwrote:\n\nThat's why I've been working with python where you have activepython for\nwindows and easy ways to wrap build scripts in .bat files.\nIn terms of building it's pretty easy if you make both debug and release\nversions. The debug version is non-minified and thus the same workflow\nexists. Like you said, for release we build a minified version with a build\nstep (which is basically require anyway) but for debug we use non-minified\nfolder structures.\nI'd like to take a leaf out of the Firefox addon SDKs book and also allow\nyou to start temporary profiles for each browser for testing.\nOn Sun, Mar 31, 2013 at 5:30 PM, honestbleeps notifications@github.com\nwrote:\n\nThe biggest reasons this hasn't happened yet (don't TL;DR this one!)\nwere:\n1) barrier to entry for JS devs who don't have an OS where a build\nscript is convenient... Windows just blows for this, for example... and is\nmy primary platform for personal use.\n2) Legacy Greasemonkey support, which required build process in #1....\n3) Lack of multi-file support in browsers extension architecture....\n4) Adding a build step to the process during rapid debugging is actually\na huge PITA and slows down the \"edit, refresh debug, edit, refresh, debug\"\ncycle that's often needed with the ridiculous amount of crazy DOM stuff\ngoing on...\nI believe, but I will need to test, that #3 is no longer a problem. The\nreason I need to test is still order of loading - I don't know if all the\nbrowsers guarantee load completion prior to the next one - and\nunfortunately there are a couple of modules that rely on others having\nexecuted (or at least been defined) first...\nIf that's the case, I'm about ready to abandon Greasemonkey support\nanyhow. The reasons to keep it before were:\n1) Memory issues in FF that weren't present in GM, only in compiled\nXPIs...\n2) Legacy support for FF3.6 which some small subset of RES users were\nstuck on in their corporate worlds much like people are stuck on IE8, 7,\n6...\nSince 1 is no longer an issue, and the # of people affected by 2 is\narguably negligibly small, I'm ready to abandon GM support at this point.\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692846\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692923\n.\n. to be honest I'm not even sure a single file will become necessary.  Now\nthat all browser extension frameworks support multiple files, this may all\nbe moot.  I just need to test the order of ops thing.\n\nMinification is likely an unnecessary step at this point as well.  It\ndoesn't affect performance in any positive way since the file(s) not being\ndownloaded, it's already present locally.  It does nothing for actual JS\nperformance.\nAlso, minification might be a negative for some because at least in a\ncertain subset of the RES population, they're comfortable unzipping the\nextension, editing a file and repacking it when they really really want a\nbugfix that's not in a release yet...\nI think if we can just get separate files running normally in the browser\n(worst case I need to implement AMD or some such?) we wouldn't even need a\nbuild process.\nOn Sun, Mar 31, 2013 at 10:48 AM, Patrick Snape notifications@github.comwrote:\n\nI just admit, that wasn't terribly clear and writing on my phone is not a\ngood way to get my thoughts down.\nProposal:\nPython script builds both debug and release versions.\nRelease: minified single script, pack to appropriate file extension. I\nhave this working for chrome and opera and presumably can just hook in to\nthe addon SDK for Firefox. Need to look in to safari.\nDebug: start the browser with a temporary profile that points to a folder\nthat contains the extension. Firefox, chrome and opera definitely let you\ndo this. I'm pretty sure Safari does too, but I need to check. Then to edit\nthe debug versions you just edit the folder and refresh that browser\nsession. Also lets you start res without any other extensions.\nAlso, I would propose a single manifest file that contains all the\ninformation needed for each browser manifest file. This is then manipulated\nby the build script to build the appropriate extension format. Easy to keep\ntrack of dependencies and versions etc. probably some bastardisation of the\nchrome manifest format.\nOn Sun, Mar 31, 2013 at 5:41 PM, honestbleeps notifications@github.com\nwrote:\n\nnot sure I follow how that works...\nif we have all separate files, how is the debug version all one big\nfile?\nare you suggesting the build process splits them?\nOn Sun, Mar 31, 2013 at 10:36 AM, Patrick Snape \nnotifications@github.comwrote:\n\nThat's why I've been working with python where you have activepython\nfor\nwindows and easy ways to wrap build scripts in .bat files.\nIn terms of building it's pretty easy if you make both debug and\nrelease\nversions. The debug version is non-minified and thus the same workflow\nexists. Like you said, for release we build a minified version with a\nbuild\nstep (which is basically require anyway) but for debug we use\nnon-minified\nfolder structures.\nI'd like to take a leaf out of the Firefox addon SDKs book and also\nallow\nyou to start temporary profiles for each browser for testing.\nOn Sun, Mar 31, 2013 at 5:30 PM, honestbleeps notifications@github.com\nwrote:\n\nThe biggest reasons this hasn't happened yet (don't TL;DR this one!)\nwere:\n1) barrier to entry for JS devs who don't have an OS where a build\nscript is convenient... Windows just blows for this, for example... and\nis\nmy primary platform for personal use.\n2) Legacy Greasemonkey support, which required build process in\n1....\n3) Lack of multi-file support in browsers extension architecture....\n4) Adding a build step to the process during rapid debugging is\nactually\na huge PITA and slows down the \"edit, refresh debug, edit, refresh,\ndebug\"\ncycle that's often needed with the ridiculous amount of crazy DOM stuff\ngoing on...\nI believe, but I will need to test, that #3 is no longer a problem.\nThe\nreason I need to test is still order of loading - I don't know if all\nthe\nbrowsers guarantee load completion prior to the next one - and\nunfortunately there are a couple of modules that rely on others having\nexecuted (or at least been defined) first...\nIf that's the case, I'm about ready to abandon Greasemonkey support\nanyhow. The reasons to keep it before were:\n1) Memory issues in FF that weren't present in GM, only in compiled\nXPIs...\n2) Legacy support for FF3.6 which some small subset of RES users were\nstuck on in their corporate worlds much like people are stuck on IE8,\n7,\n6...\nSince 1 is no longer an issue, and the # of people affected by 2 is\narguably negligibly small, I'm ready to abandon GM support at this\npoint.\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692846\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692923>\n.\n\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693005\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693126\n.\n. absolutely agree on the post commit process.\n\nIt sucks that links don't survive when you check out of git, etc...\nin BabelExt I have a really rudimentary makelinks.bat that remakes symlinks\n(whcih on OSX unfortunately and probably Linux need to be hardlinks, not\nsymlinks)...\nOn Sun, Mar 31, 2013 at 11:01 AM, Patrick Snape notifications@github.comwrote:\n\nThis is true, I hadn't thought about the accessibility of the code.\nProbably best to skip minification then.\nI was also just thinking in terms of making it easy to build the\nextensions for testing release versions. I'm fine to test the loading\norder. Still, there's a lot of redundancy in files right now and it would\nbe good to just have one external libraries and one modules folder rather\nthan copying them. Hard links don't survive git checkouts etc and it would\nbe really annoying to have to constantly relink the files. That makes an\nalmost mandatory build which may be easier as part of a process.\nI suppose a small batch script to relink files as a post commit process\nwould also work.\nOn Sun, Mar 31, 2013 at 5:56 PM, honestbleeps notifications@github.com\nwrote:\n\nto be honest I'm not even sure a single file will become necessary. Now\nthat all browser extension frameworks support multiple files, this may\nall\nbe moot. I just need to test the order of ops thing.\nMinification is likely an unnecessary step at this point as well. It\ndoesn't affect performance in any positive way since the file(s) not\nbeing\ndownloaded, it's already present locally. It does nothing for actual JS\nperformance.\nAlso, minification might be a negative for some because at least in a\ncertain subset of the RES population, they're comfortable unzipping the\nextension, editing a file and repacking it when they really really want\na\nbugfix that's not in a release yet...\nI think if we can just get separate files running normally in the\nbrowser\n(worst case I need to implement AMD or some such?) we wouldn't even need\na\nbuild process.\nOn Sun, Mar 31, 2013 at 10:48 AM, Patrick Snape \nnotifications@github.comwrote:\n\nI just admit, that wasn't terribly clear and writing on my phone is not\na\ngood way to get my thoughts down.\nProposal:\nPython script builds both debug and release versions.\nRelease: minified single script, pack to appropriate file extension. I\nhave this working for chrome and opera and presumably can just hook in\nto\nthe addon SDK for Firefox. Need to look in to safari.\nDebug: start the browser with a temporary profile that points to a\nfolder\nthat contains the extension. Firefox, chrome and opera definitely let\nyou\ndo this. I'm pretty sure Safari does too, but I need to check. Then to\nedit\nthe debug versions you just edit the folder and refresh that browser\nsession. Also lets you start res without any other extensions.\nAlso, I would propose a single manifest file that contains all the\ninformation needed for each browser manifest file. This is then\nmanipulated\nby the build script to build the appropriate extension format. Easy to\nkeep\ntrack of dependencies and versions etc. probably some bastardisation of\nthe\nchrome manifest format.\nOn Sun, Mar 31, 2013 at 5:41 PM, honestbleeps notifications@github.com\nwrote:\n\nnot sure I follow how that works...\nif we have all separate files, how is the debug version all one big\nfile?\nare you suggesting the build process splits them?\nOn Sun, Mar 31, 2013 at 10:36 AM, Patrick Snape \nnotifications@github.comwrote:\n\nThat's why I've been working with python where you have activepython\nfor\nwindows and easy ways to wrap build scripts in .bat files.\nIn terms of building it's pretty easy if you make both debug and\nrelease\nversions. The debug version is non-minified and thus the same\nworkflow\nexists. Like you said, for release we build a minified version with\na\nbuild\nstep (which is basically require anyway) but for debug we use\nnon-minified\nfolder structures.\nI'd like to take a leaf out of the Firefox addon SDKs book and also\nallow\nyou to start temporary profiles for each browser for testing.\nOn Sun, Mar 31, 2013 at 5:30 PM, honestbleeps \nnotifications@github.com\nwrote:\n\nThe biggest reasons this hasn't happened yet (don't TL;DR this\none!)\nwere:\n1) barrier to entry for JS devs who don't have an OS where a build\nscript is convenient... Windows just blows for this, for example...\nand\nis\nmy primary platform for personal use.\n2) Legacy Greasemonkey support, which required build process in\n1....\n3) Lack of multi-file support in browsers extension\narchitecture....\n4) Adding a build step to the process during rapid debugging is\nactually\na huge PITA and slows down the \"edit, refresh debug, edit, refresh,\ndebug\"\ncycle that's often needed with the ridiculous amount of crazy DOM\nstuff\ngoing on...\nI believe, but I will need to test, that #3 is no longer a\nproblem.\nThe\nreason I need to test is still order of loading - I don't know if\nall\nthe\nbrowsers guarantee load completion prior to the next one - and\nunfortunately there are a couple of modules that rely on others\nhaving\nexecuted (or at least been defined) first...\nIf that's the case, I'm about ready to abandon Greasemonkey\nsupport\nanyhow. The reasons to keep it before were:\n1) Memory issues in FF that weren't present in GM, only in\ncompiled\nXPIs...\n2) Legacy support for FF3.6 which some small subset of RES users\nwere\nstuck on in their corporate worlds much like people are stuck on\nIE8,\n7,\n6...\nSince 1 is no longer an issue, and the # of people affected by 2\nis\narguably negligibly small, I'm ready to abandon GM support at this\npoint.\nReply to this email directly or view it on GitHub:\n\n\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692846\n\n\n\u2014\nReply to this email directly or view it on GitHub<\n\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692923>\n\n\n.\n\nReply to this email directly or view it on GitHub:\n\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693005\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693126>\n.\n\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693234\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693307\n.\n. we were discussing on IRC. I was going to do it after we release, but if\nyou're keen to do it and would rather take it on, I'm not going to complain\n:-p\n\nthe rough part is going to be testing, because there are modules that\ndepend on the existence of others (memory doesn't serve me well at the\nmoment, not sure which), so loading order will matter.\nOn Thu, Apr 4, 2013 at 3:28 AM, Patrick Snape notifications@github.comwrote:\n\nI'm keen to do this - but would propose that I do it after we make the\nrelease? This way there's a sort of development freeze that will prevent\nthe merging nightmare caused by splitting the files. Once this is done\neveryone needs to move to it quickly in order to prevent merging hell.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15885491\n.\n. it looks like a start, my main concern about modules being in a separate\ndirectory is making a user friendly-ish symlink / hardlink script that will\nwork within all 4 extension directory structures... We still need\nreddit_enhancement_suite.user.js to exist I believe (silly Opera quirk,\nmust be a .user.js file) and will have to live in the same directory to\nmake symlinks less dirty, probably...\n\nthen again I've not yet had coffee and I'm groggy... but that's my only\nconcern thus far... that... and testing that order of loading doesn't break\nstuff!\nOn Wed, Apr 10, 2013 at 4:05 AM, Patrick Snape notifications@github.comwrote:\n\nSince I feel we are nearing a release, take a look at thishttps://github.com/patricksnape/Reddit-Enhancement-Suite/tree/split_files- this refactors out the bitcoin module (only for Chrome so far).\nDoes this look like a reasonable setup to continue on with?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-16162943\n.\n. Firefox fixed by 7360ffd776c0602a21ed24bcdbe70ef75f3fde7f\n\nopera to come.\n. Opera is fixed in a61dd86564e781a5db38e510b1e75395dab679a3\nSafari is won'tfix - it still doesn't allow localStorage in private browsing, so RES essentially can't run at all.\n. i think it's good as-is, no need to merge this one! no worries it slipped in the other commit, was happy to see you'd beaten me to it. been miserably sick :-\\\n. FYI, you can do:\nele.classList.add('thing','entry');\nis \"thing\" truly unnecessary here?\n. I believe you can avoid adding X css classes by looking for a class that\ncontains a unique user id string. Pretty sure there is one for each user so\nyou can just set css. Replying from phone so can't verify.\nOn Apr 5, 2013 7:29 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nhttp://www.reddit.com/r/Enhancement/comments/1bpnm9/feature_request_highlighted_username_for_first/\nI'd like to implement this by adding a [highlight] button to the user\ntagger which selects an arbitrary highlighter (background color, etc.) and\nadds a new CSS class for that user.\nA cool upgrade would be to persist the highlights across pageloads.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/343\n.\n. this OK to pull yet?\n. what's the reasoning behind moving the about page out into a module exactly?\n\nOn Sat, Apr 6, 2013 at 9:39 PM, Andy Tuba notifications@github.com wrote:\n\nSomewhat related: I'd like to see a modules['settingsSetters'] that will\nhave button options to \"set a bunch of related settings at once\". e.g.\n\"Disable all popups\" and \"Disable all on-hover actions\". A \"copy\nusername-specific settings to another username\" tool could fit neatly into\nthat.\nAlso related: @gavin19 https://github.com/gavin19 was hacking together\na \"troubleshooting\" module today too. That could go under a new category or\nunder the About RES category.\nand while I'm on the subject, I'd like to convert all the About RES pages\nto informational modules so they don't have to be exceptional. I think it'd\nwork great if I abused the \"description\" field to embed all the text.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/347#issuecomment-16008276\n.\n. all fair enough :-)\n\nOn Sun, Apr 7, 2013 at 10:30 AM, Andy Tuba notifications@github.com wrote:\n\nwhat's the reasoning behind moving the about page out into a module\nexactly?\nRight now, the entire About pane is a huge blob of custom HTML/CSS/JS\ninside RESConsolehttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/41742a5756e3e387a7d063e485cc65d47c858ad5/lib/reddit_enhancement_suite.user.js#L3578.\nIf it were refactored into modules['donate'] { category: 'About' },\nmodules['team'], etc., then they could leverage the RESConsole's\nframework for managing category module listings and drawing module pages,\nwhich means:\n- no custom CSS/JS to wire up each \"About Us\" section --> less\n  maintenance\n- can link directly to a section and\n  programmatically switch to those pages easier*\n- can add new pages (e.g. Troubleshooting) easier\n- can swap out the \"about\" pages if RESConsole is migrated to another\n  app (maybe as part of BabelExt)\nOkay, I don't have super-compelling reasons, but I think it's an easy\nthing to refactor and doesn't have serious downsides. While I foresee one\nsmall hiccup with programmatically passing search queries, I don't think\nI'll have to jump through too many hoops to sort it out.\n- I'd also like refactor loading/drawing a category because RESConsole.menuClick('category\n  name') feels smelly. While it's a good idea to programmatically click\n  buttons to trigger reddit actions like upvote, etc., but it's unnecessary\n  in RES GUI-land.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/347#issuecomment-16017019\n.\n. fixed in 400\n. can't replicate. report seems to be from old build maybe.\n. great idea. can't hurt anything!\n\nOn Fri, Apr 12, 2013 at 6:03 AM, Patrick Snape notifications@github.comwrote:\n\nSuggestion:\nAdd whether or not the user is using night mode to the list of config\ninformation in RESIssues. Nightmode seems to come with it's own host of\nissues and I'm wondering if automatically flagging whether or not a user is\nusing it would be helpful?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/357\n.\n. I've been wanting to discuss something related to this anyway... join us in\n\nenhancement on snoonet when you're able :-)\nOn Fri, Apr 12, 2013 at 2:32 PM, Tim Collins notifications@github.comwrote:\n\nI think all.\nIt'll make it easier for you to maintain too because the defaults change\nfrom release to release.\nRegards,\nTim Collins\nThis email was sent using a mobile device.\nOn 12 Apr 2013, at 20:26, Patrick Snape notifications@github.com wrote:\n\n@tico24 Yeah, I can see from browsing RESIssues that this would be a\ntruly massive boon. Would it be better to list ALL options, or just those\nthat differ from the defaults?\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/357#issuecomment-16312938\n.\n. yeah, hotfixes first, then split for sure... I do want to get there, but\nthere's definitely some more fixes that need to get out :-\\\n\nthoughts on module settings info: output should be human readable stuff,\nnot JSON, for a variety of reasons we discussed on IRC earlier.\nOn Fri, Apr 12, 2013 at 2:17 PM, Patrick Snape notifications@github.comwrote:\n\nI'm interested in implementing this - but feel like it would be a separate\nmodule that only shows up for RESIssues and Enhancement. However, I'm\nreluctant to add a new module before we split the modules apart. Thoughts?\n@honestbleeps https://github.com/honestbleeps Shall I slap a pull\nrequest up for my module split branch? Or do we want to discuss the\nmodularity better before we start splitting it up?\nAlthough, having thought about it, you might be waiting until you iron out\nall the hotfixes before splitting it up, which is fair enough really.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/357#issuecomment-16312155\n.\n. Thanks, confirmed / replicated\n. why the close? going to revise?\n. awesome!  I'd still need to fix a bug that turns new modules on by default, right?  Or do you want this on for everyone now? :-)\n. this would seem to mean that the iframe load hack is broken... ugh.\n. nope, kill it with fire.\n\nsorry opera 12 folks :(\ni'm not opposed to someone stepping in and maintaining opera 12 support but\nat this point it's just not tenable.\nOn Thu, Mar 6, 2014 at 2:30 PM, Carl notifications@github.com wrote:\n\nIs opera 12 still being supported by RES? As it may be worth closing this\noff if not (I'm assuming the webkit versions won't have the issue).\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/369#issuecomment-36933096\n.\n. merged manually\n. this one was fixed with my refactor of some of the showImages module\n. this one was fixed with my refactor of some of the showImages module\n. merged manually, thanks!\n. Are we considering it inappropriate because \"if you went to the detail page, you obviously want to see the content\"? If that's the case, I'm not 100% sure I agree it's inappropriate actually.  Maybe we should remind the user the filter is on or something, but... shouldn't the content still be hidden since the filter's on?\n. upon revisiting this I think it's fine as is... if we want to add a new issue as a feature request for \"give me a reminder that my filter is on\", that's fine, but I haven't seen any reports of confusion other than this single one, so I'm going to close out this issue.\n. upon revisiting this I think it's fine as is... if we want to add a new issue as a feature request for \"give me a reminder that my filter is on\", that's fine, but I haven't seen any reports of confusion other than this single one, so I'm going to close out this issue.\n. fixed by 400\n. yea this is fixed, good catch.\n. Reddit (and thus RES) already tells you on every page load, so if you're actively browsing reddit, this wouldn't really do anything.  What exactly is the change / improvement you're looking for?\n. this appears to be fixed based on my passthrough of open issues / a quick test\n. this is already fixed, woop!\n. d'oh, this can't be automerged and it's gigantic... any chance you could rebase?  I'm happy to get this in.. I won't pull any other requests before this one next time you submit it :-\\\n. I just merged a different purge IE pr recently. On my phone so can't easily\nlook up. Not sure why you can't clone it. That's odd.\nOn Sep 1, 2013 12:06 PM, \"aidanhs\" notifications@github.com wrote:\nPing @patricksnape https://github.com/patricksnape.\nKeen to get this in, I appear to be literally unable to clone this repo at\nthe moment.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23628755\n.\n. okay I must confess my git-fu is what I'd consider \"intermediate\" here... I\ndo rebases with relative frequency to sync up branches so that merges will\nwork smoothly, etc and I know what a rebase actually does - but what rebase\naction would I perform to purge all that IE stuff \"properly\" then?  I'm\nconfused on that... although I haven't had a full cup of coffee yet...\n\nOn Sun, Sep 1, 2013 at 12:42 PM, Kevin Ji notifications@github.com wrote:\n\nI just removed them from the head; I thought that'd be an improvement over\nthe original repo. We still do need to rebase though.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23629382\n.\n. Oh he was talking about rebasing your commit / pr. That makes more sense!\n\nI was imagining some magic \"Rebase that crap out of here\" thing and got\nconfused. Need more coffee.\nOn Sep 2, 2013 12:52 PM, \"Patrick Snape\" notifications@github.com wrote:\n\nThe commit rewrite history so that the IE commits never happened.\nTherefore, all the changes after I committed this need to be rebased on\ntop of it and then master needs to be force pushed to the new HEAD.\nThis HEAD represents the the new history that never contained those IE\ncommits. That latest push that deletes the IE code may be cause an issue\nsince it will try to delete items that never existed...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23672359\n.\n. the voodoo has been performed... will add a note to the readme.md right now about people with existing forks, thank you loads, @mc10 and @patricksnape \n. oh no.. I just ran your stuff verbatim! :-\\\n\nhow much was lost off the top of your head?\nOn Mon, Sep 2, 2013 at 4:46 PM, Kevin Ji notifications@github.com wrote:\n\n@honestbleeps https://github.com/honestbleeps I think you nuked some of\nthe commits from today.... uh oh.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23679527\n.\n. ugh, yeah I see it... is there a way to reopen those pull requests and\nreapply them?\n\nor I could cherry pick the commits if need be...\nOn Mon, Sep 2, 2013 at 4:46 PM, Kevin Ji notifications@github.com wrote:\n\n@honestbleeps https://github.com/honestbleeps I think you nuked some of\nthe commits from today.... uh oh.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23679527\n.\n. I may have forgotten to do a git pull before running those commands. crap.\n fortunately not much was lost, just those last couple of PRs.\n\nI'll have to try pulling in your master later as I'm on my way out :-\\\nOn Mon, Sep 2, 2013 at 4:50 PM, Kevin Ji notifications@github.com wrote:\n\nThat's weird, since my stuff shouldn't have affected it... are you sure\nyou had an updated copy of the repo from the computer where you ran the\ncommands?\nAlso, I should have an up-to-date copy of the master branch in my repohttps://github.com/mc10/Reddit-Enhancement-Suite,\nso perhaps you could force update your master from my repo, and try again?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23679645\n.\n. before I head out: the other 2 PRs that are lost would be really easy to\nmanually patch in.  Only your JSHint stuff would be trickier.\n\nWhat I could do is really just fetch the user.js file from your branch and\noverwrite mine and commit it... that's probably easiest and won't require\nre-running all the IE purge stuff.\nOn Mon, Sep 2, 2013 at 4:57 PM, Kevin Ji notifications@github.com wrote:\n\n@patricksnape https://github.com/patricksnape I'm not quite sure how\nyou do that exactly... it'd be nice if you could tell us how.\n@honestbleeps https://github.com/honestbleeps If you can rebase the\nother commits back onto HEAD, that'd be great (though I'm not sure how to\ndo so); otherwise, you can try the following (which is essentially going\nback to the previous state, and redoing the branch filtering) (I assume\nyou're running this in master):\ngit remote add mc10 https://github.com/mc10/Reddit-Enhancement-Suite.git\ngit fetch mc10 master\ngit reset --hard mc10/master\nThen, re-run the filter-branch commands.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23679847\n.\n. I've cherry picked everything over, I believe we're good now!\n\nOn Mon, Sep 2, 2013 at 7:15 PM, Kevin Ji notifications@github.com wrote:\n\nCan you cherry pick the rest of the commits into master?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23683883\n.\n. So far as I can tell, this issue is now resolved.  I just cloned the repo fresh and it took just a few seconds.\n. how big is the output? I thought last time we'd looked at emscripten /\nsnudown it was like a 2mb javascript file?\n\nOn Thu, Jun 27, 2013 at 11:08 PM, aidanhs notifications@github.com wrote:\n\nInitial testing and benchmarking looks promising.\nEmSnudown currently passes all Snudown sanity tests (SnuOwnd fails one\nedge case).\nSANITY\n=== BODY:\n/r/all-minus-something\n=== SNUDOWN:\n/r/all-minus-something\n=== EMSNUDOWN:\n/r/all-minus-something\n=== SNUOWND:\n/r/all-minus-something\n\nFAIL: 1\nSUCCESS: 51\nFAILED SANITY TESTS\nRunning through a few thousand random comments has EmSnudown, Snudown and\nSnuOwnd all producing identical results.\nBenchmarking shows EmSnudown as actually being faster than SnuOwnd which I\nfound a little surprising. I might play around with this some more and see\nif minifying SnuOwnd helps it. They are micro-benchmarks though and were\nrun on a virtual machine just to see if EmSnudown would be badly slower\n(apparently not).\nBENCHMARK\nPREPARING\nRUNNING\nTesting initialisation speed\nSnuOwnd  9.1412460804\nEmSnudown  8.01900315285\nTesting medium number of renders\nSnuOwnd  6.8896510601\nEmSnudown  5.82095980644\nTesting large number of renders\nSnuOwnd  5.66779303551\nEmSnudown  2.73442697525\nSize of a minified EmSnudown is 235KB. Size of the current unminified\nSnuOwnd is ~100KB. I can't actually check because closure compiler chokes\non variables named 'char', but uglifyjs suggests SnuOwnd might be reducible\nto about 33KB.\nThe current status is that EmSnudown seems to work, and reasonably well.\nGiven that RES currently (I think) only uses a single simple call to\nSnuOwnd it would be replacable as-is with a few line changes (and putting\nin the EmSnudown code instead of SnuOwnd).\nTodo:\n- it'd be nice if it was a smaller file\n- @gamefreak https://github.com/gamefreak mentioned callbacks for\n  sanitisation\n- benchmarks\n- better tests\nCode at https://github.com/aidanhs/emsnudown, tests at\nhttps://github.com/aidanhs/emsnudown/blob/79588aff539102adcc321f4634ca3f6f5d974d2d/test/test.py\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/452#issuecomment-20169468\n.\n. thanks for this, I've been both travelling for work and sick, so I've not yet had a chance to look at this - but I also don't have Mavericks installed so I can't really test... I trust that this works and all, but I am going to see if I can actually test it out somewhere before merging it.. it's definitely not the most efficient way of operating so I'd prefer to go back to the normal code if Safari 7 fixes the issue.. but.. gotta do what we gotta do!\n. I've also considered moving vote weight into the user hover, to avoid\nbiased voting due to just a few ups/downs of someone...\n\nOn Sat, Jun 29, 2013 at 11:37 AM, Andy Tuba notifications@github.comwrote:\n\n\nRefactor vote weight tallies into a separate module. (Should it\n   keep sharing data with userTagger?)\nTool to prune votes\nOption to hide vote weight within a certain range (e.g. do not show\n   vote weight if -3 < x < 3)\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/456\n.\n. has anyone tested it in Safari or Opera?  I'm out of town at the moment...\n. hmm.. I'm hesitant to pull it in until I have a better understanding... I'm\na little confused as to how it even works\n\nOn Tue, Jul 16, 2013 at 9:30 PM, Alex notifications@github.com wrote:\n\nI think it would be safe to use window.wrappedJSObject || window for\nguaranteed compatibility at the cost of readability.\nI still don't know what security feature conflicts with this. It's also\npossible that it's conflicting with NoScript or something like that.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/464#issuecomment-21088450\n.\n. you think I should just merge for now? or we just wait?\n. ahh, just read spladug's comment.. I guess we wait and maybe modify this.\n. Best to ask the rts mods.\n\nThey asked me to disable that button by default a while back because of\noveruse / abuse.\nOn Jul 16, 2013 12:28 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nhttp://www.reddit.com/r/Enhancement/comments/1iezvh/feature_request_can_the_rts_button_be_made_to\nIs there a good reason against making \"submit to /r/reportthespammers\" a\none-click?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/468\n.\n. yikes, just the kind of change I was worried about! This is why I'd\nsuggested the URL scheme include the media type :-)\n\nI suppose the JSON API is probably best. I can't examine mime types in RES\nwithout downloading first via XHR and at that point it's too late - I've\nalready rendered a tag (the wrong one)...  an iframe is not preferable\nbecause of rendering/sizing concerns...\nOf course the fastest/easiest possible route that'd eliminate unnecessary\nAPI calls would be if the URL schema included the media type somehow.\nOn Wed, Jul 17, 2013 at 12:51 PM, Drew DeVault notifications@github.comwrote:\n\nStatic images (PNG, JPG) now use the same URL scheme as gifs and videos.\nImage: http://gifquick.net/fzhtBRcoEJQT\nGif: http://gifquick.net/L_CzY99_tykT\nThere are a number of ways to address this, which we'll be implementing on\ngifquick.net today:\n- Check the Original-Filetype header, which will have the MIME type of\n  the file the user originally uploaded (image/png, image/gif, video/mp4, etc)\n- Request gifquick.net/fileID.json to get machine-readable file\n  information\n- Place gifquick.net/embed/fileID in an iframe, which will include\n  whatever is appropriate.\nLet me know which of these you think would work best.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469\n.\n. yep, I can understand that... we'll just have to do an imgur-like API sort\nof thing to properly support things then.\n\nhow soon can something like that be up?\nOn Wed, Jul 17, 2013 at 2:32 PM, Drew DeVault notifications@github.comwrote:\n\nWe changed the static image page to HTML because we need to eventually\ninclude a report button on there. I don't like the idea of ending a URL\nwith .jpg or something if it's not served as image/jpeg.\nIncluding the filetype in the URL just gets messy. /hash is a great URL\nscheme, but /type/hash or something introduces ugliness, like how to\nhandle the wrong type.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21138223\n.\n. oh no, don't need it that fast... I'm at a conference this week and can't\nreally focus on RES.. was more curious \"days\" or \"weeks\" or \"a month\" :-)\n\nOn Wed, Jul 17, 2013 at 2:36 PM, Drew DeVault notifications@github.comwrote:\n\nToday. As soon as the backend guy gets back from whatever thing he's\ndoing, I'll have him make it the highest priority. If you need it done\nsuper fast, I can take a crack at it myself.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21138495\n.\n. looks good... is that a typo though? image/ogv?  ogv should be video/ogv\nright?\n\nOn Wed, Jul 17, 2013 at 2:53 PM, Jos\u00e9 Manuel D\u00edez\nnotifications@github.comwrote:\n\nRevised API:\n{\n  \"original\": \"/hash.gif\",\n  \"files\": [\n    { \"type\": \"video/mp4\", \"path\": \"/hash.mp4\" },\n    { \"type\": \"image/ogv\", \"path\": \"/hash.ogv\" },\n    { \"type\": \"image/gif\", \"path\": \"/hash.gif\" }\n  ]\n}\nAnd for images:\n{\n  \"original\": \"/hash.jpg\",\n  \"files\": [\n    { \"type\": \"image/jpg\", \"path\": \"/hash.jpg\" }\n  ]\n}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21139680\n.\n. so I tried to access the API tonight, and I get an SSL connection error... any idea why? is the API down right now?\n. so I tried to access the API tonight, and I get an SSL connection error... any idea why? is the API down right now?\n. it may have something to do with my current wifi connection, which is at\n34,000 ft in the air.. I'll try when I'm on the ground :-)\n\nOn Fri, Jul 19, 2013 at 9:19 PM, Drew DeVault notifications@github.comwrote:\n\nWorks fine for me. Maybe your DNS is out of date? We switched nameservers\nrecently. Try google DNS: 8.8.8.8 and 8.8.4.4\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21286778\n.\n. it may have something to do with my current wifi connection, which is at\n34,000 ft in the air.. I'll try when I'm on the ground :-)\n\nOn Fri, Jul 19, 2013 at 9:19 PM, Drew DeVault notifications@github.comwrote:\n\nWorks fine for me. Maybe your DNS is out of date? We switched nameservers\nrecently. Try google DNS: 8.8.8.8 and 8.8.4.4\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21286778\n.\n. works now...\n\nas I look at this, an idea: would it be feasible/favorable to allow\nmultiple hashes to be sent to an API request?  something like\ngifquick.net/api/hashes?list=hash1,hash2,hash3,hash4 or some such? (I\nimagine you can think of a better scheme than that, just pulling something\nout of thin air)  not sure if you'd rather reduce individual hits to the\nAPI or not, but that's the idea I've got here... would be a little more\ncomplicated for me on the client side to do this because of how the image\nviewer works, but would be less AJAX requests.. what do you think?\nOn Fri, Jul 19, 2013 at 9:41 PM, Jos\u00e9 Manuel D\u00edez\nnotifications@github.comwrote:\n\nLet us know if it doesn't work for you when you're on the ground. Enjoy\nthe flight!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21287001\n.\n. works now...\n\nas I look at this, an idea: would it be feasible/favorable to allow\nmultiple hashes to be sent to an API request?  something like\ngifquick.net/api/hashes?list=hash1,hash2,hash3,hash4 or some such? (I\nimagine you can think of a better scheme than that, just pulling something\nout of thin air)  not sure if you'd rather reduce individual hits to the\nAPI or not, but that's the idea I've got here... would be a little more\ncomplicated for me on the client side to do this because of how the image\nviewer works, but would be less AJAX requests.. what do you think?\nOn Fri, Jul 19, 2013 at 9:41 PM, Jos\u00e9 Manuel D\u00edez\nnotifications@github.comwrote:\n\nLet us know if it doesn't work for you when you're on the ground. Enjoy\nthe flight!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21287001\n.\n. that looks great.\n\ndefinitely prefer an object under each hash as you've shown in example #2...\nin the short term, RES still may make individual calls, because it's a\npretty significant refactor to the image viewer to group them up and send\nout one big call, but I'll see what I can do!\nOn Sat, Jul 20, 2013 at 2:45 PM, Jos\u00e9 Manuel D\u00edez\nnotifications@github.comwrote:\n\nOkay, so hitting our API is very cheap on our end (only one redis\noperation) but may affect load time for RES users. So I think we could go\nfor an API endpoint like /api/info?hashes=h1,h2,h3 that would return a\nJSON like this:\nGET /api/info?hashes=h1,h2,h3\n{\n    'h1': {\n        \"original\": \"/hash.gif\",\n        \"files\": [{\n            \"type\": \"video/mp4\",\n            \"path\": \"/hash.mp4\"\n        }, {\n            \"type\": \"image/ogv\",\n            \"path\": \"/hash.ogv\"\n        }, {\n            \"type\": \"image/gif\",\n            \"path\": \"/hash.gif\"\n        }]\n    },\n    'h2': {\n        \"original\": \"/h2.gif\",\n        \"files\": [{\n            \"type\": \"video/mp4\",\n            \"path\": \"/h2.mp4\"\n        }, {\n            \"type\": \"image/ogv\",\n            \"path\": \"/h2.ogv\"\n        }, {\n            \"type\": \"image/gif\",\n            \"path\": \"/h2.gif\"\n        }]\n    }\n}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21299265\n.\n. that looks great.\n\ndefinitely prefer an object under each hash as you've shown in example #2...\nin the short term, RES still may make individual calls, because it's a\npretty significant refactor to the image viewer to group them up and send\nout one big call, but I'll see what I can do!\nOn Sat, Jul 20, 2013 at 2:45 PM, Jos\u00e9 Manuel D\u00edez\nnotifications@github.comwrote:\n\nOkay, so hitting our API is very cheap on our end (only one redis\noperation) but may affect load time for RES users. So I think we could go\nfor an API endpoint like /api/info?hashes=h1,h2,h3 that would return a\nJSON like this:\nGET /api/info?hashes=h1,h2,h3\n{\n    'h1': {\n        \"original\": \"/hash.gif\",\n        \"files\": [{\n            \"type\": \"video/mp4\",\n            \"path\": \"/hash.mp4\"\n        }, {\n            \"type\": \"image/ogv\",\n            \"path\": \"/hash.ogv\"\n        }, {\n            \"type\": \"image/gif\",\n            \"path\": \"/hash.gif\"\n        }]\n    },\n    'h2': {\n        \"original\": \"/h2.gif\",\n        \"files\": [{\n            \"type\": \"video/mp4\",\n            \"path\": \"/h2.mp4\"\n        }, {\n            \"type\": \"image/ogv\",\n            \"path\": \"/h2.ogv\"\n        }, {\n            \"type\": \"image/gif\",\n            \"path\": \"/h2.gif\"\n        }]\n    }\n}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/469#issuecomment-21299265\n.\n. oh yea, forgot to close this guy. should be workin' great!\n. oh yea, forgot to close this guy. should be workin' great!\n. okay, I've pulled this in and I have some feedback... it's awesome, but I think the discoverability of the 1 second thing is lacking (not to mention you can't see the instructional tooltip until you've hovered for probably more than a second)... but I try not to give criticism without potential solutions, so here goes!\n- maybe we just treat it like the user/subreddit hover where there's a slight delay before it disappears when you hover off of the trigger link... \n\nalternatively, we could get a little more creative with one or more of the following combined:\n- perhaps a CSS transition animation that \"fills up\" the parent background color could be used to indicate that something is going on with hover, so the background color highlight \"slides in\" like a progress bar... or there's just a fade from 0% to 100% opacity or something like that (well, maybe you can't fade a background color in CSS... not sure.. some fakery of \"background-image\" maybe? I dunno)\n- assuming we have a \"something is happening\" indicator, we may want to disable the popup on hover that comes up immediately, and only show it after you've hovered for X time, because until I figured it out, I kept rolling off parent and having it disappear\n- in response to the above, maybe we add an [x] button to the top right of the hover window to close it? not sure. also close via esc key is always nice...\nI'm definitely liking it, and it's a great idea.. I just think the initial experience needs a little TLC. would love to get your thoughts on any/all of the above ideas!\n. okay, I've pulled this in and I have some feedback... it's awesome, but I think the discoverability of the 1 second thing is lacking (not to mention you can't see the instructional tooltip until you've hovered for probably more than a second)... but I try not to give criticism without potential solutions, so here goes!\n- maybe we just treat it like the user/subreddit hover where there's a slight delay before it disappears when you hover off of the trigger link... \nalternatively, we could get a little more creative with one or more of the following combined:\n- perhaps a CSS transition animation that \"fills up\" the parent background color could be used to indicate that something is going on with hover, so the background color highlight \"slides in\" like a progress bar... or there's just a fade from 0% to 100% opacity or something like that (well, maybe you can't fade a background color in CSS... not sure.. some fakery of \"background-image\" maybe? I dunno)\n- assuming we have a \"something is happening\" indicator, we may want to disable the popup on hover that comes up immediately, and only show it after you've hovered for X time, because until I figured it out, I kept rolling off parent and having it disappear\n- in response to the above, maybe we add an [x] button to the top right of the hover window to close it? not sure. also close via esc key is always nice...\nI'm definitely liking it, and it's a great idea.. I just think the initial experience needs a little TLC. would love to get your thoughts on any/all of the above ideas!\n. I started to manually merge this, checked out your branch and worked on it, but I get a JS error from the showParent module:\nthis.resolve(\"Parents\", container);\nI am not sure why there's a this.resolve here... should \"this\" be a deferred?  is the deferred ever passed in?\n. I started to manually merge this, checked out your branch and worked on it, but I get a JS error from the showParent module:\nthis.resolve(\"Parents\", container);\nI am not sure why there's a this.resolve here... should \"this\" be a deferred?  is the deferred ever passed in?\n. Neither hard links nor symlinks cooperate in my experience, especially in\nSafari.\nThe status of the bug you linked is \"assigned\", and I see no indication\nfrom that bug report nor my personal experience that hardlinks or symlinks\nwill work, unfortunately.\nBelieve me, I'd love for them to work. I hate that there's a makelinks.sh\nin here.\nOn Jul 24, 2013 9:00 PM, \"Alex\" notifications@github.com wrote:\n\nhttp://code.google.com/p/chromium/issues/detail?id=27185\nSays that this was fixed for unpacked extensions back in May 2012.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/477#issuecomment-21529001\n.\n. Neither hard links nor symlinks cooperate in my experience, especially in\nSafari.\n\nThe status of the bug you linked is \"assigned\", and I see no indication\nfrom that bug report nor my personal experience that hardlinks or symlinks\nwill work, unfortunately.\nBelieve me, I'd love for them to work. I hate that there's a makelinks.sh\nin here.\nOn Jul 24, 2013 9:00 PM, \"Alex\" notifications@github.com wrote:\n\nhttp://code.google.com/p/chromium/issues/detail?id=27185\nSays that this was fixed for unpacked extensions back in May 2012.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/477#issuecomment-21529001\n.\n. it would be more efficient to check for nightmode without a querySelector... would be best to check the module option itself, something like (untested):\n\nif (modules['styleTweaks'].options.lightOrDark.value === 'dark')\n. it would be more efficient to check for nightmode without a querySelector... would be best to check the module option itself, something like (untested):\nif (modules['styleTweaks'].options.lightOrDark.value === 'dark')\n. nothing is busted, the CSS is just jenky due to what appears to be a reddit-side change, and this was already fixed by fc8f17a1ba92b8454eb1e6083f43d2e1a4867deb\n. nothing is busted, the CSS is just jenky due to what appears to be a reddit-side change, and this was already fixed by fc8f17a1ba92b8454eb1e6083f43d2e1a4867deb\n. hotfix coming for chrome tonight, probably... maybe tomorrow instead.\nthis will get into FF/Opera/Safari for sure.\nOn Tue, Aug 6, 2013 at 12:43 PM, Drew DeVault notifications@github.comwrote:\n\nCool. Any ETA on deploying the fix to users? Will it get into the\nfirefox/opera/safari updates?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/494#issuecomment-22197063\n.\n. hotfix coming for chrome tonight, probably... maybe tomorrow instead.\n\nthis will get into FF/Opera/Safari for sure.\nOn Tue, Aug 6, 2013 at 12:43 PM, Drew DeVault notifications@github.comwrote:\n\nCool. Any ETA on deploying the fix to users? Will it get into the\nfirefox/opera/safari updates?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/494#issuecomment-22197063\n.\n. I like the idea here... how does it look in night mode?\n. I like the idea here... how does it look in night mode?\n. nice, thank you for the contribution! this is a good idea and something we probably should've done from the start.\n. I see there's been a couple extra commits since the original PR... let me know when you've kicked the tires enough / tested enough to feel it's ready!\n. alright, I'm going to merge this and do a little tinkering... it'll be a good guinea pig for Chrome's new \"optional permissions\" feature I'll need to test out!\n. ok, my immediate question is: why show it as a GIF in RES rather than HTML5 video?\n\nRES is only running in browsers that support HTML5 video, and your website shows it in HTML5 video?\n. sorry, I should've marked fixed!\n. how extensively have you tested this?  We've done a global search/replace style \"strict equality\" update before, and it ended up breaking a number of things, because === can't be used everywhere.  No doubt it should be better utilized, but unfortunately it's not as simple as wholesale replacement...\nalso, generally speaking it's better to separate pull requests by function (e.g. the strict equality thing separate from the imgur fix)..\nhave you done extensive testing that none of the strict equality stuff breaks any functionality in each/any modules?\n. yeah, on things like typeof it's not a concern, but sometimes there's other issues.. we experienced some the last time we did a big strict equality update and ended up reverting.\n. thank you for splitting this off, appreciate it!\n. I'm going to approve, but change a misspelling (Commentor --> Commenter) :-)\n. burrrrninating the countryside... buurrrninating the peasaaaants.\n. you are a glutton for punishment, sir! thanks for taking care of so much housekeeping stuff :-)\n. I don't want to be a PITA here, but this is a pretty specific exemption I've never heard of a need for, and I'm concerned about getting into the habit of adding extraneous classes for who-knows-what addon.. I wonder if we should discuss making this an option in the module's config or something...\ni'm probably being excessively picky here - someone feel free to put me in my place!\n. moving to 4.3.0.4 actually, thanks :)\n. to me, toggleable (first it's a weird word, but that's beside the point)\nfilters implies \"each of these can be toggleable\"...\nrather, I think what this feature is after is one toggle button that\ntoggles on and off \"all those filters marked as toggleable\", right?\nSo ... does it make more sense to call it \"universal toggle\" or some such?\n or better yet do we have/need \"toggle groups\"?  e.g. \"spoiler filters\" vs.\n\"trend filters\"? I dunno...\nI like the idea though!\nOn Mon, Sep 2, 2013 at 1:34 PM, Andy Tuba notifications@github.com wrote:\n\nhmm any opinions?\n[image: screen shot 2013-08-31 at 11 49 08 am]https://f.cloud.github.com/assets/455632/1068851/2ca4f538-13fe-11e3-9102-710fc1fbc887.png\n[image: screen shot 2013-08-31 at 11 48 40 am]https://f.cloud.github.com/assets/455632/1068852/2cc8b68a-13fe-11e3-9455-1d79fdcbf3be.png\nhttps://github.com/andytuba/Reddit-Enhancement-Suite/tree/custom-filter-toggle\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/548#issuecomment-23673719\n.\n. this was fixed long ago, closing.\n. that's really odd.. shouldn't be getting injected into non-reddit sites...\nmight be a firefox specific problem, thanks we'll look into it!\n\nOn Tue, Sep 3, 2013 at 3:32 PM, Harris Miller notifications@github.comwrote:\n\n(Tested in Firefox only)\nI've noticed that some RES styling present themselves on other sites.\nRealized that it's because res.css is loaded into firefox as a user-agent\nstylesheet, it works on all site.\nCommon class names get effected, for example:\n.moduleHeader\n.editButton\n.moduleButton\n.aboutPanel,\netc...\nplease consider prepending these all with .res (since you're adding this\nclass to the body tag already) to eliminate this issue. or maybe add\n.res-daymode to body and prepend the css with res-daymode the same way\nyou're doing with nightmode.css\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/559\n.\n. we'll have to verify.. the night mode FOUC was the main problem :-\\\n\nOn Tue, Sep 3, 2013 at 3:39 PM, Gavin notifications@github.com wrote:\n\nIt is FF specific indeed. Seems safe to remove the workaroundhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/XPI/lib/main.js#L31and uncomment the default\nmethodhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/XPI/lib/main.js#L158since the two bugs have since been marked resolved/fixed.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/559#issuecomment-23744963\n.\n. at my workplace, we hate that var syntax. it's always:\n\nvar foo = 'bar',\n     baz = bot;\nI'm agnostic, really.. but I can see how it's wasteful to keep doing var x var y var b....\n. I think it makes sense to add a wiki pagetype -- but that may break lots of\nother stuff expected to run on it (image viewer, user tagger, etc) that may\nneed a slight update...\nI've got the wiki page type added locally, but no time to test 'til later\ntoday.\nOn Wed, Sep 4, 2013 at 1:11 PM, Andy Tuba notifications@github.com wrote:\n\nThe fix might also be \"disable NER on wiki pages\" [image: :grin:]\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/562#issuecomment-23811129\n.\n. sorry for the delay - minor comment on this: it also needs to be updated in the OperaBlink directory then... but I'll merge this and take care of that side - thanks for looking into this!\n. sorry i let this sit... it needs a rebase.. are you able to do that reasonably easily?\n. sorry i let this sit... it needs a rebase.. are you able to do that reasonably easily?\n. done via SublimeText jsFormat plugin (the sed command was... destructive... I'm not a frequent sed user, there may have been a typo\n. done via SublimeText jsFormat plugin (the sed command was... destructive... I'm not a frequent sed user, there may have been a typo\n. does your default shell not even work if you chmod +x the file?\n\nI suppose bin/bash is probably common enough that almost nobody should fail with that... will check around just a bit and probably merge.\n. I do appreciate the suggestion, and I've been following Dropbox's datastore situation.  It seems it has improved, but it's still not something I'll likely do for RES for the following reasons:\n1) If it relies on a user having a 3rd party service like Dropbox - you can already get RES data sync with dropbox without me writing any more code.  Just look at the RES FAQ (on our wiki) about where RES data is stored per browser, sync that between your computers and you're set.\n2) Beyond that, it doesn't meet my greater goals for RES related syncing, which would include community involvement/sharing data between users.\nSince you can already get the same thing (self-only sync) today with Dropbox without me writing a single line of additional code, there's not really a good reason for me to use dropbox as a data storage engine for RES.\n. we know... thanks...\n. sorry it has taken so long for me to respond to this, I've been really busy of late with work etc...\nanyway - I think there should be some conditional code added here just for legacy's sake that uses chrome.extension where valid, and chrome.runtime where valid - chrome's documentation has some advice on this...\nthoughts?\n. sorry it has taken so long for me to respond to this, I've been really busy of late with work etc...\nanyway - I think there should be some conditional code added here just for legacy's sake that uses chrome.extension where valid, and chrome.runtime where valid - chrome's documentation has some advice on this...\nthoughts?\n. That's fair. Will do!\nOn Oct 20, 2013 4:37 PM, \"Kevin Ji\" notifications@github.com wrote:\n\nI think it'd be best to just bump the minimum Chrome version in Chrome's\nand OperaBlink's manifest.json to 26.0; adding extra conditional code seems\n(IMO) to just clutter the code, and it's highly unlikely that a user will\nnot have upgraded to a version later than 26.0.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/586#issuecomment-26683403\n.\n. That's fair. Will do!\nOn Oct 20, 2013 4:37 PM, \"Kevin Ji\" notifications@github.com wrote:\nI think it'd be best to just bump the minimum Chrome version in Chrome's\nand OperaBlink's manifest.json to 26.0; adding extra conditional code seems\n(IMO) to just clutter the code, and it's highly unlikely that a user will\nnot have upgraded to a version later than 26.0.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/586#issuecomment-26683403\n.\n. hey, very cool, was thinking of adding this myself and you've beaten me to it...\n\nas for redditbooru - is that your site?\nmy biggest concern about adding new hosts at this point is the permissions problem on Chrome causes me LOADS of headaches from people who just don't understand what's going on when that dialog pops up, so I'm very hesitant to add more sites.\nThing is, if redditbooru supported CORS, we wouldn't need to add permission for it...\n. just wanted to check if CORS is supported and tested thoroughly before I merge, can ya let me know? thanks!\n. just wanted to check if CORS is supported and tested thoroughly before I merge, can ya let me know? thanks!\n. also, now that we've merged some PRs this will need a rebase to be mergeable, sorry!\n. also, now that we've merged some PRs this will need a rebase to be mergeable, sorry!\n. egads, I'm terribly sorry, can you rebase once more?  I think you'd done it right but I merged some other stuff and this can't be merged... I'm fresh off of a surgery and such so I've been out of commission for a while\n. egads, I'm terribly sorry, can you rebase once more?  I think you'd done it right but I merged some other stuff and this can't be merged... I'm fresh off of a surgery and such so I've been out of commission for a while\n. I prefer not to add things to RES that are better off solved by external\naddons, personally.\nThings like \"save the contents of my form in case I close the tab on\naccident\", and this too, are far better for people to have for the entire\ninternet, thus I don't feel they're great candidates for RES specifically.\n It's not that I don't find the features useful, it's that I think those\nsorts of features shouldn't be reddit specific.\nOn Sat, Jan 11, 2014 at 2:12 PM, Pavol Rusnak notifications@github.comwrote:\n\nThis would be cool to have directly in RES\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/610#issuecomment-32105694\n.\n. I've merged this because we're going to refactor the image viewer module to not need to run all regexes soon :)\n. yep, that's why this is really a \"missing feature\" and not a bug. ;-)\n\narguably, it's debatable whether or not using an expando should even mark\nsomething as read.\nTake for example tumblr, or kickstarter or soundcloud - which get expandos\nfrom RES and reddit (and reddit again) respectively...  There is far more\ncontent on the pages (not just comments!) than just the video/audio.\nTechnically you've not visited the link...\nI understand there are people who can't stand seeing blue links - but I\nalso think it's \"wrong\" to mark certain things visited when you really\nhaven't consumed the content at the destination...\nOn Thu, Nov 21, 2013 at 9:52 PM, Navarr Barnier notifications@github.comwrote:\n\nI'm looking at just throwing in an ajax call. I didn't realize reddit had\nnative expandos (been using res for too long) - though they too don't\nmark posts as read :| Looks like I'll have to look into that too.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/647#issuecomment-29047160\n.\n. not ignoring this one, just haven't had time to look deeply yet. will try and look later tonight or tomorrow.\n. heck yes! I love it when I come up with an idea and someone else implements it so I don't even have to do the work :-p\n. i'm assuming you've tested the var --> let on Firefox?  looks good just want to make sure!\n. turn off RES.\n\nyou will almost definitely find that the comments are gone that way, too.\nthey have disappeared because /r/AskScience is a heavily moderated sub that deletes \"joke\" comments, etc.\n. Here's my key arguments against -- and let me be clear I'm still more in the \"undecided\" camp, but there are concerns here...\nThe main concern about trust is an obvious issue that simply doesn't disappear because we say it will.  There has already been outcry over much lesser things - anything from a permissions change in Chrome to the quickmeme fiasco.\nHowever, the biggest argument against has a few points to it:\n1) The user experience for an iframe is suboptimal at best - you have to use some grotesque resizing hacks to make the iframe big enough to adapt to content... this means either hiding it until size is determined and then a \"snap in\" effect, or picking a sensible default and then watching it \"snap to size\" after, which isn't great.   Before anyone argues \"plenty of things in RES are suboptimal user experiences\" - yep, I'll agree with you and I want to fix those - that doesn't justify adding more.\n2) The only real advantage to an iframe here is your own convenience.  It lets you update how the RES expando behaves without having to submit a PR to RES. Every single beef you have with iFrame vs. non-iFrame support is solved by simply adding your unified video player controls and whatever else you want to your module (which you're correct and very clear about you being the contributor)...\nThe benefit it brings you is that you can change the behavior of the expando without submitting any code to RES and waiting for a patch/update to come out. It doesn't make anything go from impossible to possible, etc.\nSo the question is what the community favors:\n- that any MediaCrush related code be peer reviewed before making it in to RES, at the expense of speedy deployment of design changes to MediaCrush's expandos\nOR\n- that MediaCrush has some added flexibility in accelerating (by anywhere from a few days to a few weeks or maybe a couple of months if we're far from a good release time) the deployment of new HTML5 video controls and/or other content - at the expense of a couple of user interface niggles (and slower load times) and the potential (even if unlikely, I'm just laying out the possibility here) eventual deployment of unfavorable changes/code to RES without any approval from the RES development team or its users.\nAs an example, and I'm not suggesting you'd do this especially with your recent announcement about adwords ads etc -- but the possibility needs to be mentioned because an iframe solution would make it trivially easy for you to ad ads, tracking code, etc to RES without any changes being made to RES.\nJust because I have no reason to distrust you doesn't mean that we should open RES up to these possibilities without sufficient and thought out discourse, especially because the key advantages of an iframe solution really exist for MediaCrush's convenience in terms of making it easier to change appearance/behavior without ever updating RES.\nEDIT: I should also add that bytes have little to do with the iframe slowness -- it's the extra http request, which can be tiny or huge depending on the latency of the end user's connection... so comparing it to the video size itself isn't really relevant - it's entirely about latency, and not about the size of that extra request.\n. this may well become a wontFix... sorry to say, but there's just not a good way to manage for this...\ncheck out the readme for this library:\nhttps://github.com/tombigel/detect-zoom\nif nobody disagrees, I'll likely close this and the related issues...\n. this may well become a wontFix... sorry to say, but there's just not a good way to manage for this...\ncheck out the readme for this library:\nhttps://github.com/tombigel/detect-zoom\nif nobody disagrees, I'll likely close this and the related issues...\n. this appears ok to close.\n. going to hold off on merging this for just a bit until i can test thoroughly including how it treats the back button.\nI remember trying to do this myself, and so did @andytuba - and we each independently came to the conclusion that an edge case or two made this infeasible at least with our own attempted implementations...\nNot suggesting you couldn't have found something we didn't... just wanting to test/verify all the crazy goofy edge cases I can (especially as it pertains to the back button) as people are unfortunately quite fiddly with their back buttons in RES.\n. and that's why it's not closed?\n. and that's why it's not closed?\n. we'd like to go that route but I need to do some work to make that happen,\nprobably. specifically to ensure that his siteModule is defined after the\nproper object exists, etc...\nit's 100% in the near-future plans to split RES into many files.\nOn Fri, Dec 20, 2013 at 2:38 PM, Kevin Ji notifications@github.com wrote:\n\nJust curious, but is there a reason why you don't include a separate\nMediaCrush file into lib/ instead of embedding it straight into the\n(already enormous) reddit_enhancement_suite.user.js file?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/684#issuecomment-31039810\n.\n. thanks for this, @andrewachen, these kinds of little housekeeping things may go unnoticed by the teeming masses, but they're very much appreciated!\n. are you one of the people who runs gfycat? I tried to check the site, but I can't tell...\n\nthere's an awful lot of (sometimes nested) XHR going on here, and if I'm going to ask you to go to the effort of making some changes / reorganization to this code, I don't want to waste your time if you're not one of the owners of the site -- because if you're not one of the owners, I really can't accept this PR until I talk to someone who is...\nthe influx of 2 million RES users hitting gfycat with multiple XHRs is no small amount of traffic to deal with, so in fairness/respect to their server and bandwidth costs, I'd want to know that this was coming from someone affiliated with the site and that permission is granted...\nif that's the case, let me know!\n. hey @JonBons - i see you've made some changes based on suggestions from @joey5755  -- do you feel this is merge-ready now, or are you still working on it?\n. @joey5755 - is there any possibility of you adding CORS support to gfycat?\nRES users are a wide mix of technical proficiency and unfortunately a vocal group of them freak out any time a permission is added to RES because of the scary wording of the popup message... this is actually making me hesitant to add new hosts...\nadding CORS removes the need for us to add a permission.\n. @joey5755 - is there any possibility of you adding CORS support to gfycat?\nRES users are a wide mix of technical proficiency and unfortunately a vocal group of them freak out any time a permission is added to RES because of the scary wording of the popup message... this is actually making me hesitant to add new hosts...\nadding CORS removes the need for us to add a permission.\n. Thanks so much, really appreciate it!\nOn Sat, Jan 18, 2014 at 4:31 PM, joey5755 notifications@github.com wrote:\n\nOk CORS should cooperate on all endpoints now. I've added the widest\npermission to every api response-- Access-Control-Allow-Origin: *. This\nshould work without any OPTION calls.\nWe had this set previously for /cajax/get requests and it seems to work\nfine for embeds and extensions, but let me know if there are any issues or\nanything else I can adjust to make things smoother.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/698#issuecomment-32695221\n.\n. Thanks so much, really appreciate it!\n\nOn Sat, Jan 18, 2014 at 4:31 PM, joey5755 notifications@github.com wrote:\n\nOk CORS should cooperate on all endpoints now. I've added the widest\npermission to every api response-- Access-Control-Allow-Origin: *. This\nshould work without any OPTION calls.\nWe had this set previously for /cajax/get requests and it seems to work\nfine for embeds and extensions, but let me know if there are any issues or\nanything else I can adjust to make things smoother.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/698#issuecomment-32695221\n.\n. i think once you remove the extra manifest stuff, and pull latest from master (all files are split into many, now!) you can copy/paste your changes into showImages.js and we should be good to merge this.. sorry that the big change happened while this was outstanding, hope that's not too big of a pain to fix\n. i think once you remove the extra manifest stuff, and pull latest from master (all files are split into many, now!) you can copy/paste your changes into showImages.js and we should be good to merge this.. sorry that the big change happened while this was outstanding, hope that's not too big of a pain to fix\n. can you rebase this when you get the chance? :)\n. aaaand i let this go too long and it's not auto mergable again... probably in part because of other gfycat related changes that were contributed...  sorry :(\n. nope, lots of priorities to juggle. perhaps you could consider contributing a pull request to add the feature?. on one hand: @andytuba is right to note that tons of people just don't\nnotice the reddit prefs. they don't even notice the blue cog for RES!\n\non the other hand: i think abstracting their stuff is dangerous and subject\nto too much fragility/breakage and I'd rather the solution be something\nlike \"come up with a good way to point out reddit specific preferences\"\nthan to try and house/integrate them.\nthat may be as simple as just linking to them from the top of the console\nor something, I dunno.\nOn Fri, Jan 3, 2014 at 2:09 PM, Sam E. Lawrence notifications@github.comwrote:\n\nAt the top right of the page, there's a small gear that links to Settings\nConsole and then there's a big label that says \"Preferences\". Just based on\nthe size / label differences, I find it hard to imagine people don't know\nReddit prefs exist there (though you probably know better than me). Would\nit make more sense, from a hierarchical perspective, to make RES\npreferences behave as an extention of Reddit's native prefs page, either as\nadditional tabs, or embedded options below / among theirs?\nI do think that Reddit prefs could stand a good redesign / vertical pixel\nreduction.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/703#issuecomment-31549788\n.\n. that'd be super welcome! we'd be glad to have you back!  Life does take precedence over RES, though... :-)\n. although I did address it, his bulleted list says he addresses some things that I screwed up.. namely:\n\nEnsure click actions always register on video controls.\nI'll have a look at this, thank you very much for submitting!\n. awesome, thanks!\ndoes the 40 pixel rule of thumb apply to most browsers' native controls, do\nyou know? I've not had the chance to look at safari/firefox controls\nOn Fri, Jan 10, 2014 at 12:35 PM, Carl notifications@github.com wrote:\n\nHello,\nI've just updated my pull request to remove functionality duplicating that\nwhich already existed in RES. The pull now just contains the code I added\nto ignore the native HTML5 video controls.\nHopefully this is more helpful than my initial pull.\nThanks,\nCarl\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/707#issuecomment-32052797\n.\n. awesome, thanks!\n\ndoes the 40 pixel rule of thumb apply to most browsers' native controls, do\nyou know? I've not had the chance to look at safari/firefox controls\nOn Fri, Jan 10, 2014 at 12:35 PM, Carl notifications@github.com wrote:\n\nHello,\nI've just updated my pull request to remove functionality duplicating that\nwhich already existed in RES. The pull now just contains the code I added\nto ignore the native HTML5 video controls.\nHopefully this is more helpful than my initial pull.\nThanks,\nCarl\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/707#issuecomment-32052797\n.\n. > (due to cross browser issues/support headaches it could cause).\n\nthis is really the main reason I haven't done this myself yet. most people who care to back their stuff up can do so using the files outlined on our wiki page.\nHowever, I do think we want something like this in the future.  For now I'll leave this open until I have a chance to do some thorough testing, etc.  It's not exactly as I imagined writing it myself, but it's close - I'd like to kick the tires on it etc :)\n. > (due to cross browser issues/support headaches it could cause).\nthis is really the main reason I haven't done this myself yet. most people who care to back their stuff up can do so using the files outlined on our wiki page.\nHowever, I do think we want something like this in the future.  For now I'll leave this open until I have a chance to do some thorough testing, etc.  It's not exactly as I imagined writing it myself, but it's close - I'd like to kick the tires on it etc :)\n. as we discussed on IRC - not sure about Grunt just yet... we may just be able to load the files separately once we split them!  I won't close this PR just yet, let's test that out first and decide!\n. as we discussed on IRC - not sure about Grunt just yet... we may just be able to load the files separately once we split them!  I won't close this PR just yet, let's test that out first and decide!\n. if you feel comfortable with this being merge-ready (minus the TODOs), I'll merge it... \nThe ultimate goal here is to make RES eventually use BabelExt as a backend, so GMXHR will become BabelExt.xhr probably.  To get there, we need all storage calls to be async - right now the whole RESStorage object thing is brought forward from the background because this was a GM script when it started and relied on storage calls being synchronous...\n. if you feel comfortable with this being merge-ready (minus the TODOs), I'll merge it... \nThe ultimate goal here is to make RES eventually use BabelExt as a backend, so GMXHR will become BabelExt.xhr probably.  To get there, we need all storage calls to be async - right now the whole RESStorage object thing is brought forward from the background because this was a GM script when it started and relied on storage calls being synchronous...\n. cool, has this been tested in at least FF + Chrome?\n. d'oh... we might just need to load styletweaks module first.. have you tried reordering?\n. d'oh... we might just need to load styletweaks module first.. have you tried reordering?\n. this functionality no longer works... seems maybe youtube has changed something.\nI'm struggling to find a fix. Either of you guys familiar with this?\n. i like it... agree with 'vendor' as it's a standard practice...\nwe should also think about where sitemodules should go for the image viewer, as I believe we'll consider separating those out.  maybe just modules/showImages/someSite.js or whatever...\nof course 'show images' no longer just shows images :)\n. i like it... agree with 'vendor' as it's a standard practice...\nwe should also think about where sitemodules should go for the image viewer, as I believe we'll consider separating those out.  maybe just modules/showImages/someSite.js or whatever...\nof course 'show images' no longer just shows images :)\n. thanks for going back and making all of those changes, I'll merge this and give it a whirl!\n. thanks for going back and making all of those changes, I'll merge this and give it a whirl!\n. Powers that be speaking, I guess... sorry it has taken a while to weigh in - I've been super busy with work.\nI think there's valid arguments on both sides, to be honest. Selfishly I'd like for RES to have a consistent UI for everything because it's \"cleaner\".\nHowever, I also feel we (\"we\" being the core RES team of developers) need to be respectful / mindful of external sites' desire to maintain branding and functionality / UX between offsite and onsite players.  After all, we're not paying their bandwidth bills, and if anything we're (sometimes) leeching potential ad revenue, etc.\nOf course if the core people involved with HTML5 video could agree on a common interface, that'd be lovely - but it sounds like there's an impasse here.\nI'd like to hear thoughts from @andytuba and @mc10 here since they're frequent contributors to the source as of late, but my preliminary response is that we should probably try and find some sort of happy medium here, where we agree on some minimal baseline functionality, but if you want to custom design a player, then so be it.  However, we should do our best to minimize the number / size of assets that we must package in (e.g. using a common icon set would be strongly preferable to adding one for each host)...\nI do feel that all HTML5 videos (even if meant to be \"gif like\") need to have play/pause functionality and at least enough to make it readily apparent that HTML5 is different from (and superior to) GIF as a solution.\nI do understand @joey5755's point that there's a niche place where people \"prefer GIF\", and that's fine - but I also think it should be a mission of gfycat and mediacrush (and all other similar providers) to make it clear that these aren't gifs, and they're better - even if just for bandwidth reasons...\n. okay, sorry this has sat stagnant a while guys...\n@joey5755 I respect your want to have some uniqueness to your site's player, so my suggestion is that we merge this (though it requires a rebase first) and that you have a look and make any tweaks you feel are necessary from there.\nI see arguments on both sides, and I'd say that we should stick with consistency unless there are compelling reasons to stray from a unified interface.  In your particular site's use case, you show some valid reasons. I would say that we need to address this on a case by case basis go forward and be careful about allowing too much latitude (and therefore bloat) - but I do think your site/audience has a sort of niche need that justifies you wanting to have some of your own interface here.\n. my guess is it's not ignored because there are no node modules required for developing in RES ;-)\nI do not have a node_modules directory... I don't necessarily mind merging this (it's harmless to me), but what node modules are you using in RES?\n. I think where we're miscommunicating here is that this isn't a node based\nproject.\nA recent PR did include a Gruntfile because makelinks.sh is *nix specific,\nbut I've personally never once used it. I accepted the PR because of the\nconvenience it offers to others.\nIf that PR should've included ignoring node_modules in it, then so be it,\nI'm fine merging it since it comes in concert with the use of Grunt.\nOn Wed, Feb 12, 2014 at 5:16 PM, Byron notifications@github.com wrote:\n\nIt doesn't hurt, but it is not common practice, and generally discouraged\nagainst, because it is not any developers responsibility to track various\nversions of dependencies (again, that is what package.json is for).\nGenerally you would give a developer documentation on how to bootstrap the\ndevelopment environment.\nHonestly, I don't care, I'm recommending a best practice (go find a node\nbased project that does include it -- try any top required items on\nhttps://www.npmjs.org/)\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/767#issuecomment-34930514\n.\n. Yeah, I just responded about this exact issue with a request for the same sort of frontend to imgur.\n\nI have concerns about \"alignment\" with any one host whether implied or explicit... I won't close this just yet...\nfrom a technical and an end user perspective I love the idea of better and better RES integration with other services, but there's \"political\"-ish and business-ish implications of doing so that I have some serious concerns about.\n. regarding preserving order: I have found through completely anecdotal experience, of course, that so long as you're not manipulating that object, order is preserved.\nSo in RES, the modules[] object seems to execute in consistent order across all browsers because we're never modifying it aside from appending to it, for example...\nI can't say with 100% certainty, of course, because I haven't done extensive testing under varying scenarios -- but at least based on what i've experienced thus far it doesn't seem that order has been inconsistent.\n. sorry this has sat so long, I've been insanely busy...\nso - this code will only ever run on reddit.com - therefore only redirecting you from mobile reddit to regular reddit... you're aware of that, right?\nRES doesn't run outside of reddit... which in this case is good because your regex would match, for example, i.imgur.com - a non-mobile site...\nI gather from your description that it implies it redirects ANY mobile site (e.g. let's say the NY times mobile site) to its corresponding desktop site, and that's not really what it'll do... is that the intent?\n. closing due to inactivity / need more info on intent.\n. I've wanted it myself actually, just never put it in a github issue :)\nOn Thu, Feb 20, 2014 at 10:36 AM, Andy Tuba notifications@github.comwrote:\n\n\"next comment via commentNavigator\"\n\"previous comment via commentNavigator\"\nDon't know if there's any real demand for this, but it's a nice idea.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/787\n.\n. can you rebase your PR to master? it can't be auto merged right now, thanks!\n. reference: https://bugzilla.mozilla.org/show_bug.cgi?id=973750\n. fixed by 6e2f6bea2cec15369dd188ac35f040e0a29e3550 I believe\n. i think this is debatable.\n\nit sucks the question keeps coming up, but this is an insecure behavior to keep on by default...\nNot that people should install RES in a library or other public computer, but... I'm concerned about the pros/cons of both sides here... thoughts from anyone else reading this are welcome.\n. this is off by default in the interest of security.\nalthough I understand most users will want it on, I personally feel like a \"leave me always logged in\" feature being on by default is just bad practice in spite of any inconvenience to users who will need to find/turn this on.\ncould we move it above the other options? sure.\nam I open to maybe having it on by default? I guess, but the security-minded part of me is very hesitant.\n. agree we should make saveComments disabled by default go forward.\nagree on adding a utility to \"transfer\" saves to reddit, with the caveat\nthat if text has been edited since you saved, that's what's getting saved...\nOn Tue, Mar 4, 2014 at 2:26 PM, Andy Tuba notifications@github.com wrote:\n\nNow everybody can save comments on their reddit account.\nWhat to do about the RES saveComments module? My opinion is to leave it\nin, but make it automatically disabled for new users. We should also offer\na utility (probably a button option in saveComments) to automatically\nreddit-save any RES-saved comments and maybe also prune the RES-saved\ncomments or indicate that it's been reddit-saved or something.\nAdvantages of saveComments:\n- preserve deleted comments\n- not tied to an account (or being logged in) etc. etc.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/809\n.\n. I think the way you're imagining RES works (from my interpretation of your\nresponse here) is a bit different from how it actually works.\n\nRES doesn't prefetch \"n\" pages, where \"n\" is a choice made by RES.  It\nmerely loads the URL that the \"next\" button points to - which would be the\nnext 25 posts, not 100, for most users since they don't change that\nsetting.\nCertainly RES could start loading pages a bit earlier - but the more we do\nthat, the more API calls - and at the default of 25 per page, that's not a\nlot of vertical real estate, so paging before you get there basically means\nbefore you even scroll on a larger monitor - I can see 19 posts (well,\n18.5) and my browser isn't even max height.\nOn Tue, Mar 11, 2014 at 5:59 AM, Behrang Saeedzadeh \nnotifications@github.com wrote:\n\n@andytuba https://github.com/andytuba I can think of at least one way\nthat shouldn't increase load on Reddit servers. As Reddit itself allows up\nto 100 entries to be displayed per page, RES can prefetch 100 items but\nonly display the first 50. When the user reaches the end of the page, RES\ndisplays the next 50, and prefetches the next 100. You get the idea.\nThis gives the user the impression that the next page is loaded\ninstantaneously when he reaches the end of the current page.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/810#issuecomment-37283748\n.\n. Try running RES from source. That gear has been gone for a long time now. \n. Sorry I should note that I do appreciate the contribution, it's just moot at this point \n. yea probably fine to remove all of those. old website URL isn't used for\nanything.\n\nOn Thu, Mar 6, 2014 at 11:13 AM, Carl notifications@github.com wrote:\n\nHello,\nI noticed RES still has a couple of permissions listed in its manifest\nthat are no longer needed & I thought i may as well add a housekeeping task\nto clean them up.\nNow support CORS (meaning permissions are no longer needed.)\n- mediacru.sh\n- noembed\nNo longer active:\n- http://imgclean.com/ *http://reddit.honestbleeps.com/ (just links to\n  http://redditenhancementsuite.com/ , although may still be needed?)\nWill try and have a test of the others to, to see if CORS support has been\nadded.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/813\n.\n. funny, I had a similar (but not the same) idea just the other day - what do you think of it?\n\nmy idea is to have an option called \"fit to screen\" that would make the image as large as possible while still being within the visible viewport...  if this option was selected, maxWidth / maxHeight would be ignored.\n. Easy fix for that with fit to window is to not enlarge pics greater than\ntheir original size (or to some percent greater)\nOn Mar 7, 2014 11:27 AM, \"Andy Tuba\" notifications@github.com wrote:\n\nFYI I took the liberty of editing the issue topic.\nfitToWindow and fitToPreviousImage are both cool ideas.. The first\ndownside I can think for fitToWindow is enlarging and pixellating small\nimages (e.g. lo-res gifs).\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/815#issuecomment-37046590\n.\n. I'll try and review this weekend. I have been both busy with work and\noccupied with some personal difficulties for the past week or so that have\nkept me from being active with RES.\nOn Mar 22, 2014 2:49 PM, \"gablank\" notifications@github.com wrote:\nI understand that @honestbleeps https://github.com/honestbleeps might\nbe busy, but can I ask how long it is usual to wait for a review / comment\non a pull request? I don't mean to be rude, it's just that I'm eager to\nknow what he thinks of my work. I check this page more than once daily :)\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/819#issuecomment-38362138\n.\n. sorry this has gone unchecked for so long... would you mind rebasing to master?\n. I appreciate the contribution!  I do want to hold off on merging though, because /u/skeeto who already created the bitcointip module may help out by working to incorporate dogetipbot into his... I would prefer from a cleanliness/organization standpoint that we not have multiple modules, though I'll leave this open for now until we have a concrete decision...\n. Sorry, here's a reference to the thread:\n\nhttp://www.reddit.com/r/dogecoin/comments/201keo/morning_all_i_feel_like_doing_a_giveaway_see/cfyy922?context=3\n. this is on the todo list of what would be 'res pro', but as you note, requires a web service and therefore a lot more care/concern/time taken on security, stability, etc.\n. yeah, it's chrome only though, and the amount of data is miniscule compared\nto what we'd need.\nthe only way to offer this is a centralized server, really.\nOn Wed, Apr 9, 2014 at 3:42 PM, matheod notifications@github.com wrote:\n\nChrome offer function do load/save data over the clound for chrome\nextension with chrome.storage.Sync.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/827#issuecomment-40013853\n.\n. sorry for the slow response on this, as you're probably aware we've had a lot going on in the last several weeks!\n\none suggestion I'd have is to perhaps implement this by adding a class to the BODY tag and have the CSS be a part of res.css.  Also I'll comment on a couple of the lines...\n. on further thought/discussion, I think it makes more sense to rethink this a bit because there are competing / overlapping options that conflict with each other here.\nmight it make more sense for us to consolidate RES modules that pertain with showing karma (uppersAndDowners, showKarma), and then have an option in that module that affects output like this?\nI realize it's a much bigger task, but adding a new module that has options that directly conflict with options from other modules (e.g. you turn on showKarma, then turn on Zen Mode - we're doing work to show something, then hide it again) isn't really the most efficient way of doing things, nor is it intuitive for the end user.\nI appreciate the contribution and I know some users would like this sort of idea, I just think perhaps there's a cleaner / more \"correct\" way of doing this. What do you think?\n. The concern here would be user confusion because of options that conflict with each other between modules. Having certain options on (e.g. show comment karma) would be negated by having other options on (e.g. zen mode).\nI think if you're just interested in the single feature, and not the (admittedly much tougher / time consuming) process of reorganizing things, maybe this is best served as an individual userscript / mini extension that runs on its own.\nI can completely understand that it's a ton more work to start looking at how things can be combined / adjusted to avoid overlapping / conflicting options like this - we're all working for $0 here. We'll look at the potential of adding this idea in a cleaner way on our todo list...\n. adding more !important to RES is the opposite of the direction we should be going. use specificity, e.g:\n.md .usertext-body img { display: block; }\n. I'm still only seeing one post to reddit with this domain, I appreciate that you've done the work to make it easy to add to RES, but I'd like to refrain from bloat code that'll almost never be used... If it gains some popularity we can certainly revisit!\n. None of the browser APIs really allow this, unfortunately.  You can only define what site(s) an extension runs on in the manifest (manifest.json for Chrome/Opera, info.plist for Safari, etc) and I don't think having RES run on * (and then whitelisting thereafter) is an option that privacy-paranoid people will accept. In fact I'm certain it's not.\nYour best bet is to clone/fork RES and update the manifest for whatever browser you use at work. If you use Chrome, it's especially easy.\n. how come this is tagged \"confirmed bug\"?\n. there is indeed a requirement order, yes... I haven't tested since the file\nsplit if the requirement order is as necessary, but at least when RES was\nall one file, some things needed to be in order.\nOn Sat, Mar 29, 2014 at 7:10 PM, Andy Tuba notifications@github.com wrote:\n\nOn further thought, concatenating templates seems like a bad idea:\n- ## one bad template kills any following templates\nneed duplicate workflows in makelinks.sh and Gruntfile.js to\n  concatenate them in order to support lightweight dev and full dev\n## environments. bleh.\nit should be plenty possible to load templates as needed from\n  javascript with a little restructuring of template loader\n- don't expect it to take noticeably longer than the single-file\n  alternative\n- only need to load required templates. very minor memory win.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/853#issuecomment-39013442\n.\n. in the future would prefer \"if (foo)\" over \"if(foo)\", but not going to reject the PR over that, thanks :)\n. this will likely be pulled very soon post-release since we're about to push one out and it's a little big to change without ample time to test\n. we were just discussing this on IRC, thanks for adding it to the official\nlist :)\n\nOn Wed, Apr 2, 2014 at 8:21 PM, Kevin Ji notifications@github.com wrote:\n\nPer the official bitcointip posthttp://www.reddit.com/r/bitcointip/comments/220zzh/bitcointip_will_be_shutting_down_soon/,\nbitcointip is officially shutting down, as they are being superseded by\nChangeTip. As such, we need to update our bitcointip module.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/868\n.\n. this appears to be fixed\n. you'll have to talk to @sircmpwn about that one - mediacrush offers its\nusers the option of autoplay on/off in their embeds, which makes this\noption a little dicey even though I do like the idea.\n\nwe also need to ensure that when multiple videos are expanded, only the\nFIRST gets set to autoplay (if any do at all)\nOn Fri, Apr 4, 2014 at 5:01 AM, Carl notifications@github.com wrote:\n\nHappy to take this one on.\nWould we want similar functionality for HTML5 video at all? (as there may\nbe some expectation for html5 content to also no autoplay if a \"video\nautoplay\" feature is disabled.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/879#issuecomment-39549207\n.\n. fixed via https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/904/f\n. back when it was added, it was posted to maybe once or twice a week.\n\nclearly it has picked up some...\nwe should just invalidate all of this by doing something like I've done\nwith BetterZoom and making a hash lookup so that we don't have to concern\nourselves with running a for loop on all of our hosts on every link. Then\nthey can all be on by default guilt free.\nOn Sat, Apr 5, 2014 at 8:56 AM, Drew DeVault notifications@github.comwrote:\n\nhttp://www.reddit.com/domain/awwni.me/new\nIt gets used pretty often and it's weird that it's the only one disabled\nby default.\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/883#issuecomment-39638699\n.\n. would you mind rebasing this to master when you get a chance? thanks!\n. merged manually.\n. the culprit here might be reddit's own hidecomment() function here, but I've not had sufficient time to explore deeper yet:\n\nhttps://github.com/reddit/reddit/blob/b50f91c53149671c4039ff1de4250ac0d5bc89c0/r2/r2/public/static/js/reddit.js#L404\n. i think the issue is actually this line, showcomment, not hidecomment\nhttps://github.com/reddit/reddit/blob/master/r2/r2/public/static/js/reddit.js#L419\n. https://github.com/reddit/reddit/pull/1037\n. yeah, the english term for that is \"Daylight Savings Time\", and it's\nunderstandably quite confusing.\nOn Sun, Apr 13, 2014 at 8:30 PM, matheod notifications@github.com wrote:\n\nBy the way, I looked to allowing user to choose is timezone, but I giveup\nbecause I'm not really understanding how UTC time work (the problem is for\nSummer time (not sure of the english term, when you change the hours of one\nhours), because it's seems not all country manage it the same way (some add\none, some remove one, some add half hours, etc.).\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/908#issuecomment-40326881\n.\n. I think reddit already has its own stuff in place for this via API limits\nand whatnot. Not sure we should step in to solving this issue. Too much\npotential for conflict\nOn Apr 11, 2014 10:36 AM, \"Andy Tuba\" notifications@github.com wrote:\nSometimes people ajajaja or zjzjzjzjz. This is bad, yo.\nShould RES detect mass-voting and enforce a short cool-off period?\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/923\n.\n. Last time I had checked it was unfortunately not supported in all 4\nbrowsers. I forget which browser(s)  were missing support but\nwww.caniuse.com is helpful for looking that up. (unable to at the moment\nmyself)\nOn Apr 11, 2014 6:14 PM, \"matheod\" notifications@github.com wrote:\nI think it could be a good thing to use input type color for any input\nexpecting a color (ex:focusFGColorNight).\n\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/925\n.\n. we're definitely open to smartening things up, consolidating modules here or there, etc... \n. okay, this is an interesting one...\n\nif we keep highlight across many pages -- why not +friend instead... or just.. user tag?  Is there a sufficiently different use case here?\n. i feel like that might lead to confusion... RES users span a rather wide gamut of technical know-how, and I'd be concerned about a flood of \"RES didn't save my highlight\" posts from people who don't understand the (roughly) 3 options:\n- this page load only\n- this \"session\" only, where session requires a bit of a technical explanation\n- permanent storage\nI'd be concerned that #2 is especially confusing to non technical users, and if we implement something like this, we need some sort of explanatory message presented to the user, but I'm of course open to other thoughts!\n. awesome! you'll also find that RES should call this a lot less anyhow because it's no longer (next version) drawing the console until there's demand for it.\n. turn off mediabrowsemode. this is a known conflict between view images and\nmediabrowse mode. we're working on it.\nOn Thu, Apr 17, 2014 at 3:42 PM, Gant Laborde notifications@github.comwrote:\n\nUsed in Chrome: Not sure when the last update came out, but I have noticed\nthat I'm slowly losing my mind.\nWhen I use RES, I browse like so:\n- Press View Images\n- Use VIM shortcut j and k to move up and down.\nThis USED to work awesome. Somehow it's gone to crap. Some images\nwill hide when they are focused, and some won't. Also, returning to\nprevious images with k will not expand anymore [image: :exclamation:]\nEXAMPLE\nHere I am browsing reddit... I'm happy... I'm smiling. My current item is\nhas a blue tint and is at the topmost of the screen.\n[image: 1]https://cloud.githubusercontent.com/assets/997157/2736663/73843ade-c670-11e3-9905-dcfb95383603.PNG\nO look ! A jim gaffigan joke! Let's press j and move to the next line and\nread it!\n[image: 2]https://cloud.githubusercontent.com/assets/997157/2736675/86cf32ba-c670-11e3-8e75-48c7540b8151.PNG\nwat?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/953\n.\n. yep, agree.. would be a good change!\n\nOn Thu, Apr 17, 2014 at 4:56 PM, matheod notifications@github.com wrote:\n\nWhat do you think of refactoring so the module itself declares if it's\ndisabled by default?\nI fully agree with that. Before found that parthttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/abda39c1209717c8c0874cb7032263f79f01d5ca/lib/console.js?utm_campaign=website&utm_source=sendgrid.com&utm_medium=email#L76-L93I wondering how to manage module disabled by default. It would be more\nclear if it's directly declared on the module.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/954?utm_campaign=website&utm_source=sendgrid.com&utm_medium=email#issuecomment-40767640\n.\n. i'm fine with something like:\n\n<a href=\"/r/Dashboard/#userTaggerContents\">Manage User Tags</a>\nthat on its own is fine by me, they'll end up on the dashboard and hopefully discover that it's useful!\nI'd shy away from the full http:// link, because some users use https everywhere, etc... \n. .. what did that note say? ;-)\n. technically no, just leaving it open for easy access until they approve\n(or, sigh, reject) it again.\nOn Fri, Jul 4, 2014 at 12:27 PM, Kevin Ji notifications@github.com wrote:\n\nIs there anything else that needs to be done with this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/966#issuecomment-48062203\n.\n. I really don't mind hosting it on my own server, the one hosting the RES website... probably easier to have things in one place. I should look at getting certain users FTP access or something.\n. yes, iframe hack apparently doesnt' work.. haven't tested it super\nthoroughly due to tiny userbase + gold addition of history.\n\nOn Wed, May 7, 2014 at 8:47 AM, Andy Tuba notifications@github.com wrote:\n\nIt's a known issue that Safari doesn't properly add expando'd images to\nhistory, right?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/987#issuecomment-42428465\n.\n. i think the main issue here is that we have 2 separate flows:\n\n1) in posts, autoplay is probably fine. \"view images\" shouldn't open videos, so >1 video is never open at any one time and autoplaying.\n2) in selftext and comments, autoplay is dangerous because a selftext or comment may have many videos. selftext is the most \"dangerous\" because even those not using keyboard navigation will click to open selftext and tons will play... maybe we can just disable autoplay in selftext videos?\nideally, we'd only autoplay the 1st of N videos in any selftext or comment, but that proves a bit trickier than it seems at first glance... as I type this out I have some further ideas for it though... hrm.\n. I've got a satisfactory fix in for now. may warrant further investigation later.\n. hrm, this is chrome specific then... and it'll just open reddit to the options page?\nshould we make this (if / when possible) for all browsers?\n. i think this should at least be done for Chropera (Opera 20+) - is it doable there?\n. you've been doing a lot of work on this since first submitting it -- is it ready to merge do you think?\n. I'm confused by this PR.  why not reset the navigator anymore?\n. why don't we just fix toolbarfix ?\nOn Sat, May 3, 2014 at 11:53 AM, Andy Tuba notifications@github.com wrote:\n\nhttp://www.reddit.com/r/help/comments/24jgae/links_to_youtube_dont_show_inside_reddit/ch8kyjs?context=3\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/996#issuecomment-42110022\n.\n. I haven't gotten to look at this, on my phone but\nhttp://github.com/honestbleeps/BetterZoom has a hash based lookup.\nOn May 3, 2014 7:06 PM, \"Andy Tuba\" notifications@github.com wrote:\ni like the look of this, with the caveats that:\n1. i haven't independently tested this\n2. I forget what honestbleeps implemented on that image preview\n   project, and\n3. the minor comment about collating the \"sitemodule enabled option\n   key\" code.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/998#issuecomment-42119947\n.\n. relevant post I made to /r/disability 2 months ago:\n\nhttp://www.reddit.com/r/disability/comments/1xj9ef/how_can_i_help_you_reddit_better/\naside from scaling up some small buttons, I really didn't get much in the way of specific suggestions.\nI would love to pursue making things easier for disabled and/or blind users, but we could really use some specific feedback as well as advice on how to test any updates we make for usability.\n. He means in sports subreddits, discussion of a live sporting event.\nThreaded view sorted by hot isn't ideal for this.\nOn May 5, 2014 6:21 PM, \"Andy Tuba\" notifications@github.com wrote:\n\n\"Game thread\" -- do you mean contest mode? can you link to an example?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1004#issuecomment-42252461\n.\n. this was fixed a while ago, and if you follow /r/Enhancement or /r/RESISsues you'll see that as a temp workaround you can add /r/ in front of your subreddit filters for the time being.\n. any chance we can get a rebase now that browserstrategy is merged? sorry :(\n. done\n\nOn Sat, May 10, 2014 at 1:34 PM, Andy Tuba notifications@github.com wrote:\n\n@honestbleeps https://github.com/honestbleeps can we add @matheodhttps://github.com/matheodas a contributor so we can assign him bugs?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1019#issuecomment-42750224\n.\n. done\n\nOn Sat, May 10, 2014 at 1:34 PM, Andy Tuba notifications@github.com wrote:\n\n@honestbleeps https://github.com/honestbleeps can we add @matheodhttps://github.com/matheodas a contributor so we can assign him bugs?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1019#issuecomment-42750224\n.\n. there's rarely any request for this, I'd put it way down low on the todo\nlist...\n\nwe're getting a little bonkers with the issue adding of late, imo... maybe\nwe should start restricting it a bit, or at least adding a backlog tag or\nsomething to things way in the 'nice to have' spectrum...\nOn Sat, May 10, 2014 at 1:41 PM, Andy Tuba notifications@github.com wrote:\n\nhttp://stackoverflow.com/questions/14358817/best-practice-for-localization-and-globalization-of-strings-and-labels\nhttp://www.localeplanet.com/support/howto-localize-js.html - doesn't look\ntoo painful\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1021\n.\n. there's rarely any request for this, I'd put it way down low on the todo\nlist...\n\nwe're getting a little bonkers with the issue adding of late, imo... maybe\nwe should start restricting it a bit, or at least adding a backlog tag or\nsomething to things way in the 'nice to have' spectrum...\nOn Sat, May 10, 2014 at 1:41 PM, Andy Tuba notifications@github.com wrote:\n\nhttp://stackoverflow.com/questions/14358817/best-practice-for-localization-and-globalization-of-strings-and-labels\nhttp://www.localeplanet.com/support/howto-localize-js.html - doesn't look\ntoo painful\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1021\n.\n. If someone adds this, it should go without saying but it should be off by\ndefault. There's enough people already that confuse \"front page\" with /r/all\nOn May 10, 2014 8:54 PM, \"Andy Tuba\" notifications@github.com wrote:\nhttp://www.reddit.com/r/Enhancement/comments/258zmo/feature_request_reddit_logo_links_to_rall_instead/\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1028\n.\n. good call here\n. i'll be removing this code anyway because of the # of firefox users seemingly unable to use RES at all and we've been unable to understand why. The only culprit I can imagine is this patch only because it's the only big fundamental thing that happens before addon startup etc that was changed in a meaningful way...\n\nso, later today I'm going to revert the changes from that commit and we're going to release that way.  RES didn't totally cease to work prior to that, it just meant that if you make c hanges and don't keep your browser open for ~5min (or less) you might lose that change. \n. we have discussed doing this but there are concerns about:\n- detection\n- reporting\n- managing the unban process\n- people getting angry about it\nwe've collectively decided in the past not to go this route \n. i fixed this without a setTimeout by removing the IIFE\n. this is great... I wonder if we'll get someone complaining that they want to use backspace as a keyboard shortcut for something (besides macros), but I suppose that's unlikely... perhaps we should consider, however, a mouse clickable \"delete\" button in addition to and/or instead of this. thoughts? CC: @andytuba \n. mind doing a rebase so this can be merged? right now there's conflict\n. I took care of spaces->tabs, but yes, in the future if you do any work,\nplease preserve that way :)\nOn Tue, May 20, 2014 at 3:58 PM, Kevin Ji notifications@github.com wrote:\n\nOr not because the pull request was merged in. You can still add the email\nto your GitHub account if you want.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1110#issuecomment-43682093\n.\n. in testing, this works pretty nicely. I see some images not working but I'm guessing you're just going to have some one-offs where the API might need fixing...\n\nExamples:\nhttp://www.reddit.com/r/architecture/comments/261aqh/laymans_question_is_there_a_technical_name_for/\nhttp://www.reddit.com/r/BullTerrier/comments/261066/cleopatra_8_weeks_old_and_smiley/\nthese both seem to 404 on the API FYI.... \n. i would strongly prefer we just revamp the UI and make deleting more discoverable. I don't think it's a great idea to set up an API thing that's checking every sub once someone's got 100+ or whatever, personally.\njust one guy's opinion, of course... as always I can be convinced I'm wrong ;-)\n. What we could do is when you visit a dead or banned subreddit we could\ncheck if you have a shortcut to it and ask if you want to remove it.\nThat'd be way less work and worry about API hits than a \"prune all\"\nfunction...\nOn May 23, 2014 2:40 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nYeah, it's essentially a UI issue. It would be a cute nice thing to do but\nis really addressed by improved UI.\nI have an idea that doesn't require UI overhaul, but could be reasonably\npreserved post-overhaul: adding an [[image: :pencil:][image: :x:]] menu\nitem dropdown to any shortcut, and adding it to top/bottom of multireddit\nshortcuts.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1120#issuecomment-44052150\n.\n. yep, there's merge conflicts :-p\n\nI'll try and manually resolve them sometime in the not too distant future though.\n. is this seriously all it took to get this running?\nme and @andytuba spent an evening debugging together and it would not load in Opera 12 for either of us... was it just the imgur API addition? or the move of RESInitReadyCheck ?\n. saw, merged... and sneaky move on the .gitattributes thing.. but... I respect where you're coming from there ;-)\n. yeah, domcontentloaded thing makes perfect sense... if memory serves we were both looking at things at like 2am and would probably have been better served attempting sleep.. good catch and thanks :+1: \n. line 404 of what file, and what is 'classicyotas', is that a username or something? it probably shouldn't be present in this issue.\n. is there a tl;dr of rationale for which options you've decided are \"advanced\"?\nI think we should comb through these and agree on them... @andytuba thoughts?\n. is this really a problem that needs solving? I feel like we'll be creating more work for ourselves here...\n. I'm not entirely onboard with this one personally... it seems to just be more stuff to remember for both devs and users.  I dunno. I'm not sure it really solves a (frequent enough to be concerned) problem, but I could be swayed.\n. is there a good reason we're even using alpha here? that's crappy for system performance, why don't we just use a solid color by default?\n. I'm personally not sure I'm a fan of the idea of doing it in pure CSS. That seems unintuitive...\n\"to disable feature X, use 'clear: none;', to disable feature Y, use 'background-color: #fff'\" etc.. it seems rather arbitrary... I don't really see drawbacks to the current system.\n. I actually have a complete redesign in mind that I've started work on..\nit's somewhat ambitious, but I think it'll work a lot better / be more\nintuitive...\nOn Sat, Jun 7, 2014 at 12:47 AM, githue notifications@github.com wrote:\n\nManaging shortcuts can be difficult when you have lots of subreddits in\neach shortcut because of how small the text field is, furthermore there's\nno explanation for how to create a dropdown menu. Lastly the current sort\nbutton can be improved.\nHere's my solution (screenshot):\nConcept:\n[image: res-edit-shortcut-concept]\nhttps://cloud.githubusercontent.com/assets/7245595/3207822/41a8dcec-ee05-11e3-96da-a23768194b9b.png\nThe A-Z button could switch to Z-A when you click it, no need for an image\nicon either.\nOld:\n[image: res-edit-shortcut-current]\nhttps://cloud.githubusercontent.com/assets/7245595/3207823/48cffbb8-ee05-11e3-839a-9bc9dc969a50.png\nWhat are your thoughts? I'll create the commit if it's okay because I want\nto clean up the existing CSS anyway.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1196.\n. I actually have a complete redesign in mind that I've started work on..\nit's somewhat ambitious, but I think it'll work a lot better / be more\nintuitive...\n\nOn Sat, Jun 7, 2014 at 12:47 AM, githue notifications@github.com wrote:\n\nManaging shortcuts can be difficult when you have lots of subreddits in\neach shortcut because of how small the text field is, furthermore there's\nno explanation for how to create a dropdown menu. Lastly the current sort\nbutton can be improved.\nHere's my solution (screenshot):\nConcept:\n[image: res-edit-shortcut-concept]\nhttps://cloud.githubusercontent.com/assets/7245595/3207822/41a8dcec-ee05-11e3-96da-a23768194b9b.png\nThe A-Z button could switch to Z-A when you click it, no need for an image\nicon either.\nOld:\n[image: res-edit-shortcut-current]\nhttps://cloud.githubusercontent.com/assets/7245595/3207823/48cffbb8-ee05-11e3-839a-9bc9dc969a50.png\nWhat are your thoughts? I'll create the commit if it's okay because I want\nto clean up the existing CSS anyway.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1196.\n. nope, your idea might be a nice stopgap for the short term, for sure!\n\nOn Sat, Jun 7, 2014 at 1:09 AM, githue notifications@github.com wrote:\n\nAh, that's good to know. Do you expect it will be ready before the next\nrelease? If not, my proposal won't take long to implement.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1196#issuecomment-45402272\n.\n. nope, your idea might be a nice stopgap for the short term, for sure!\n\nOn Sat, Jun 7, 2014 at 1:09 AM, githue notifications@github.com wrote:\n\nAh, that's good to know. Do you expect it will be ready before the next\nrelease? If not, my proposal won't take long to implement.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1196#issuecomment-45402272\n.\n. any chance you can rebase this to master? there are conflicts \n. not sure why, but this needs a rebase\n. this got merged but for some reason didn't close properly here... \n. I've got this working roughly as I outlined in that IRC log pasted above. running tests on it but it seems to perform rather well.\n. merged manually\n. we'll likely be calling it something like \"inline media viewer\" .. it\ndoesn't really enhance reddit's expandos -- it adds expandos where reddit\nhas none, and leaves reddit's alone...\n\nOn Thu, Jun 26, 2014 at 10:42 AM, matheod notifications@github.com wrote:\n\nI also made myself this remark. I agree with you.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1325#issuecomment-47242411\n.\n. nice job, thanks!\n\ncouple of open questions for discussion:\n1) should these autoplay on open? maybe they should.. not sure.. youtube doesn't...\n2) clicking the video to play/pause would be nice, we have that on other html5 videos we support, some hackery was needed to make it not conflict with drag to resize, I believe.\n. I'm honestly not sure, we'd have to look at OneDrive's terms and conditions which I'm not able to spend much time reading right at the moment...\n. we should be careful about that... there's an off chance we might be able\nto get explicit support from them... /u/majornelson lurks /r/xboxone ..\nperhaps I'll make a post.\nOn Fri, Jun 27, 2014 at 11:43 AM, sgtfrankieboy notifications@github.com\nwrote:\n\nI've read through the Microsoft Service Agreement\nhttp://windows.microsoft.com/en-gb/windows/microsoft-services-agreement\n(It was very fun to read...)\nAnd this section sticks out:\n7.3. Are there things I can't do with the software or Services? Yes. In\naddition to the other restrictions in this Agreement, you may not\ncircumvent or bypass any technological protection measures in or relating\nto the software or Services or disassemble, decompile, or reverse engineer\nany software or other aspect of the Services that's included in or\naccessible through the Services, except and only to the extent that the\napplicable copyright law expressly permits doing so; separate components of\nthe software or Services for use on different devices; publish, copy, rent,\nlease, or lend the software or the Services; or transfer the software, any\nsoftware licenses, or any rights to access or use the Services. You may not\nuse the Services in any unauthorized way that could interfere with anyone\nelse\u2019s use of them or gain access to any service, data, account, or\nnetwork. You may not enable access to the Services by unauthorized\nthird-party applications.\nSeems like it isn't allowed according to that. Unless we just implement it\nand remove it if Microsoft starts to complaining (which I doubt they will).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1329#issuecomment-47372534\n.\n. no, but he may know who to talk to / ask! I'm guessing that at least on\nreddit the primary use of onedrive sharing will be xbox one videos no?\n\nOn Fri, Jun 27, 2014 at 11:50 AM, sgtfrankieboy notifications@github.com\nwrote:\n\n@honestbleeps https://github.com/honestbleeps That might work, but I\ndoubt Major Nelson has any influence over things related to SkyDrive\nbecause he works at the Xbox department.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1329#issuecomment-47373288\n.\n. we have URL exclusions for sites that misbehave with .jpg ending URLs that\naren't really jpg.. we should use a similar setup for mp4/webm and at least\nfor now, exclude onedrive\n\nOn Fri, Jun 27, 2014 at 11:59 AM, sgtfrankieboy notifications@github.com\nwrote:\n\nYea, the primary use of OneDrive is sharing Xbox One clips. Not supporting\nit will also bring some problems with the native mp4 implementation because\nthe urls end with .mp4.\nI will send him a PM asking about it. (or you, since you're the owner of\nRES)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1329#issuecomment-47374199\n.\n. awesome! :-D\n\nOn Fri, Jun 27, 2014 at 1:18 PM, sgtfrankieboy notifications@github.com\nwrote:\n\nGot a reply from Major Nelson:\nHi Frank,\nGreat question. Can you send me an email request and I can work on this?\nMajor at Xbox.com\nLarry\nPS I love RES :)\nJust send him an email, this might work after all.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1329#issuecomment-47383172\n.\n. if we do this we need to make it optional and probably default off.\n\nit's just going to result in people suggesting RES is broken, except for the most privacy-paranoid of users who also understand what cookies/localstorage are/do on a preference level not just a tracking level.\n. i dunno.. how bad is that really? shouldn't they kinda be punished for\ndoing that?\nOn Fri, Jun 27, 2014 at 11:41 AM, Andy Tuba notifications@github.com\nwrote:\n\n@hermithome https://github.com/hermithome pointed out that some people\nhabitually will vote on an entire thread at once (ajajaja). The NP module\nfires one notification/action button per vote. nicht so gut.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1331.\n. that's a fair point, makes sense.\n\nOn Fri, Jun 27, 2014 at 11:45 AM, Andy Tuba notifications@github.com\nwrote:\n\nI'm going for community support, you goober, not punitive measures against\nthe user. If there are 10 notifications, the user isn't gonna bother\nundoing any of them.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1331#issuecomment-47372699\n.\n. > I have no idea what I'm doing (rather new to GIT) but it looks like the conflicts are gone.\n\nit seems they're back... or they never went away... but I'm going to guess they're back because we've merged other stuff.. would you mind rebasing to master again? sorry!\n. merged and tested, this does not fix #1358 - reopening...\n. any info on error msgs?\nOn Thu, Jul 3, 2014 at 10:23 AM, Andy Tuba notifications@github.com wrote:\n\nseveral reports\nit sounds like the data is there, but not being displayed\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1365.\n. it's only shown when required. you must call the show function to get it to\nshow up.\n\nwhen you change pages, though, you then must call hide to hide it if that\npage shouldn't have it.\nOn Thu, Jul 3, 2014 at 11:27 AM, matheod notifications@github.com wrote:\n\nBy the way it would be more logical to show the icon when required instead\nof hiding it when not requried.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1368#issuecomment-47952483\n.\n. oye.. now I'm seeing new problems, not sure if related to those two PRs, but images are loading and not \"taking space\"... \n\nedit: not \"taking space\" until they're finished loading.. they progressively load and then take space at the end... \n. easiest way would be to install an app like charles to throttle your data\nconnection I guess... I'm in the middle of my work day so I can't tinker\ntoo much :-\\\nOn Thu, Jul 3, 2014 at 11:24 AM, Filip Smets notifications@github.com\nwrote:\n\nHow do I recreate it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1370#issuecomment-47952076\n.\n. now I can't get it to happen again - but one thing I think we could fix is\nrestoring the placeholder before we hide the image.. there's still a\nlittle jump, but it jumps back to w here it should be quickly...\n\nOn Thu, Jul 3, 2014 at 11:26 AM, Steve Sobel steve@openingbands.com wrote:\n\neasiest way would be to install an app like charles to throttle your data\nconnection I guess... I'm in the middle of my work day so I can't tinker\ntoo much :-\\\nOn Thu, Jul 3, 2014 at 11:24 AM, Filip Smets notifications@github.com\nwrote:\n\nHow do I recreate it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1370#issuecomment-47952076\n.\n. thanks so much for your work on this and my apologies if my responses are\ncurt, I'm in the middle of normal work so short on time... really\nappreciate the help!\n\n\nOn Thu, Jul 3, 2014 at 11:30 AM, Filip Smets notifications@github.com\nwrote:\n\nYea the resizeMedia call should be before changing the width on the\noriginal image, I'll make a new pull request.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1370#issuecomment-47952898\n.\n. awesome! feel free to join us on IRC, we're in #enhancement on the snoonet\nnetwork if you'd like to chat with the other active devs.\n\nOn Thu, Jul 3, 2014 at 11:40 AM, Filip Smets notifications@github.com\nwrote:\n\nI enjoyed working on it, definitely a project I'm going to try working on\nin the future.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1370#issuecomment-47954168\n.\n. we'll probably push a hotfix later today or sometime tomorrow is my best\nguess... depends how fast we can track down other bugs that are causing\nproblems.\n\nOn Thu, Jul 3, 2014 at 11:34 AM, Filip Smets notifications@github.com\nwrote:\n\nWhen will these update be available on the website?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1372#issuecomment-47953368\n.\n. I have mixed feelings about this but as long as we do decent logging and\nmaybe even notify the user 'somethin' went all wacky-like with your RES!\nplease send us a report!' I'm OK with it.\n\nmy resistance to it in the past has been that it makes debugging a bit\ntrickier, and that it hides / masks bugs from being found/seen.\nOn Thu, Jul 3, 2014 at 11:43 AM, Andy Tuba notifications@github.com wrote:\n\nif a module throws an error during loadDYanimcOptions, beforeLoad, or go,\nthen log an error and don't try to beforeLoad/go it\nthis is to avoid one module killing the rest in the list.\nwait until after hotfix spree\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1373.\n. probably a good call, this will only affect new users though since anyone with options already present will have whatever the defaults were saved... (we don't save a \"changed from default\" flag... yet?)\n. @matheod can you comment on how your migrate might be used here? prob good to notify users though if we change it on them.\n. because we should probably do a migrate if it's that big a deal, so we need to decide if it's worth changing for everyone.\n\nthis will only affect new RES users because they've already had the setting saved with the other key combo.\n. I'm going to merge this and then figure out how to migrate the options...\n. when you get the chance, can you rebase to master and fix merge conflicts?\n. when you get the chance, can you rebase to master and fix merge conflicts?\n. closing inn favor of f89c90 - which still runs the check, but in a much cheaper way.\n. as I mentioned in the IRC channel I thought I'd fixed this and asked if you\npulled latest master -- did you and does this still occur? can you link an\nexample?\nOn Fri, Jul 4, 2014 at 5:11 PM, Filip Smets notifications@github.com\nwrote:\n\nImgur albums with images of different sizes don't seem to sync the\nplaceholder\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1390.\n. i'm going to merge this but change \"RESConsole\" to something like res-console-open afterward, good idea, just want a better classname here.\n. I think it's fair to say that the benefit (getting rid of that message in\nthe console) is rather small but keeping up to date is good, so I'll merge\nthis but probably not for the hotfix.\n\nyou're right that we'll likely be just fine, but better safe than sorry,\nI'll merge this after the hotfix goes out.\nOn Sun, Jul 6, 2014 at 3:27 PM, Kevin Ji notifications@github.com wrote:\n\njQuery updates? Since we're staying with the version 1 line we should be\nokay I think.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1398#issuecomment-48125326\n.\n. already have this change locally, thanks... actively updating / testing... I should've just pulled @andytuba's branch but I figured nobody would notice as I was working on it right away so I just merged instead, that's my bad.\n. wouldn't this break images slipping under the sidebar when resized?\n. only on mediacrush albums though. works fine on imgur albums, etc.\n\nmaybe the placeholder (that does respect the flow of text and that's why\nit's there) isn't working right in mediacrush specifically?\nOn Mon, Jul 7, 2014 at 12:41 PM, Kevin Ji notifications@github.com wrote:\n\nIt would, but right now the image doesn't respect the flow of text at all\nand just covers up posts below.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1407#issuecomment-48211422\n.\n. > On a separate note, we may eventually need to handle \"update option even if default value\" -- maybe by passing in undefined for the default value?\n\nI'd just have a function called forceOptionChange or some such, and if some code consolidation needs to be done between the two then so be it.... I don't like having a weird param passed as a \"hack\" personally...\n. we also should consider adding classes so subreddit mods can style the\nthresholds... the problem is they vary so much in vote quantity :-\\\nOn Tue, Jul 8, 2014 at 1:48 PM, Andy Tuba notifications@github.com wrote:\n\nslightly related, but we should be keeping an eye on feedback about the\ncolor selection. maybe set up a few presets for userDefinedColoration to\nchoose from\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1416#issuecomment-48383177\n.\n. seconded. make it so.\n\nOn Tue, Jul 8, 2014 at 8:29 PM, Andy Tuba notifications@github.com wrote:\n\ngonna add a notification for this. executive decision: force it to \"don't\ncolor\" unless set to something already\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1416#issuecomment-48419977\n.\n. can you replicate pulling from latest master? I fixed some stuff related to firefox + gfycat / mediacrush last night\n. thanks, we'll take a look..\n\nchanging it to relative will break things for sure, that can't be the\nsolve.. it's absolute so that it doesn't slide \"under\" the sidebar and\nother content when dragged to expand\nOn Tue, Jul 8, 2014 at 12:38 PM, jspenguin notifications@github.com wrote:\n\nUsing the \"convert GIF links to gfycat\" option causes the expanded video\nto appear over other elements on the page. If the CSS for the subreddit\nspecifies a z-index greater than the video, then it will appear behind\nthose elements.\nIt looks like a spacing placeholder is not being created for the original\nimage. A temporary workaround is to change the position of the player DIV\nto relative. This works for me, but may break other things.\njspenguin@986635a\nhttps://github.com/jspenguin/Reddit-Enhancement-Suite/commit/986635a1b6a03c1e881ae7c1d8751699a25f8cb5\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1430.\n. thanks, we'll take a look..\n\nchanging it to relative will break things for sure, that can't be the\nsolve.. it's absolute so that it doesn't slide \"under\" the sidebar and\nother content when dragged to expand\nOn Tue, Jul 8, 2014 at 12:38 PM, jspenguin notifications@github.com wrote:\n\nUsing the \"convert GIF links to gfycat\" option causes the expanded video\nto appear over other elements on the page. If the CSS for the subreddit\nspecifies a z-index greater than the video, then it will appear behind\nthose elements.\nIt looks like a spacing placeholder is not being created for the original\nimage. A temporary workaround is to change the position of the player DIV\nto relative. This works for me, but may break other things.\njspenguin@986635a\nhttps://github.com/jspenguin/Reddit-Enhancement-Suite/commit/986635a1b6a03c1e881ae7c1d8751699a25f8cb5\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1430.\n. it's possible I may need to make the same DOM fix for the \"convert to\ngfycat\" stuff that I did for regular gfycat and mediacrush stuff...\n\nthe placeholder tag should be sibling to the div.res-player element, not a\nchild or grandchild of it.\nI haven't had the chance to revisit this one and am a bit swamped this\nevening so i may not get to.\nOn Tue, Jul 8, 2014 at 7:38 PM, joey5755 notifications@github.com wrote:\n\nCan you describe better what you're seeing? Is it the right sidebar that\nis getting overlayed, like this: http://i.imgur.com/BpIGPZY.jpg\nIt actually works the opposite for me-- the \"Convert to gfycat\" option\nworks (after honestbleeps fix), but when the option is off, the gifs do\nnot work (all image types). So it looks like max-width needs to be fixed\nfor images.\nAlso, just below the video tag in the DOM, there is definitely a tag: <div\nid=\"RESImagePlaceholder\" class=\"RESImagePlaceholder\"...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1430#issuecomment-48417022\n.\n. it's possible I may need to make the same DOM fix for the \"convert to\ngfycat\" stuff that I did for regular gfycat and mediacrush stuff...\n\nthe placeholder tag should be sibling to the div.res-player element, not a\nchild or grandchild of it.\nI haven't had the chance to revisit this one and am a bit swamped this\nevening so i may not get to.\nOn Tue, Jul 8, 2014 at 7:38 PM, joey5755 notifications@github.com wrote:\n\nCan you describe better what you're seeing? Is it the right sidebar that\nis getting overlayed, like this: http://i.imgur.com/BpIGPZY.jpg\nIt actually works the opposite for me-- the \"Convert to gfycat\" option\nworks (after honestbleeps fix), but when the option is off, the gifs do\nnot work (all image types). So it looks like max-width needs to be fixed\nfor images.\nAlso, just below the video tag in the DOM, there is definitely a tag: <div\nid=\"RESImagePlaceholder\" class=\"RESImagePlaceholder\"...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1430#issuecomment-48417022\n.\n. thanks that's helpful. we'll probably need to do some work similar to what\nI did for mediacrush/gfycat and complete the circle there...\n\nOn Tue, Jul 8, 2014 at 9:08 PM, jspenguin notifications@github.com wrote:\n\nIt doesn't seem to happen anymore on the main page or in subreddits, but\nit happens when converted gifs are expanded in comments:\nhttp://i.imgur.com/r8FEPhS.png\nhttp://www.reddit.com/r/funny/comments/2a1ytx/angry_dogs_kept_apart_by_a_fence/ciqsmsk?context=1\nThere's no placeholder there.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1430#issuecomment-48422092\n.\n. thanks that's helpful. we'll probably need to do some work similar to what\nI did for mediacrush/gfycat and complete the circle there...\n\nOn Tue, Jul 8, 2014 at 9:08 PM, jspenguin notifications@github.com wrote:\n\nIt doesn't seem to happen anymore on the main page or in subreddits, but\nit happens when converted gifs are expanded in comments:\nhttp://i.imgur.com/r8FEPhS.png\nhttp://www.reddit.com/r/funny/comments/2a1ytx/angry_dogs_kept_apart_by_a_fence/ciqsmsk?context=1\nThere's no placeholder there.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1430#issuecomment-48422092\n.\n. this is fixed, I forgot to close it.\n. on my todo list and appropriate for this: better notification system.\n. on my todo list and appropriate for this: better notification system.\n. RES just creates an IMG tag... that's... weird.\n\nOn Fri, Jul 11, 2014 at 9:23 AM, Andy Tuba notifications@github.com wrote:\n\nhttp://www.reddit.com/r/EDC/comments/2ad4he/32mmoron/\nhttps://farm6.staticflickr.com/5571/14306877339_3e25050ea7_c_d.jpg\nhttp://www.reddit.com/r/RESissues/comments/2aafnz/bug_autodownloading_pictures_when_next_page_loads/ciu35ae?context=6\nIn Safari, some images are being downloaded when you open the expando.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1450.\n. RES just creates an IMG tag... that's... weird.\n\nOn Fri, Jul 11, 2014 at 9:23 AM, Andy Tuba notifications@github.com wrote:\n\nhttp://www.reddit.com/r/EDC/comments/2ad4he/32mmoron/\nhttps://farm6.staticflickr.com/5571/14306877339_3e25050ea7_c_d.jpg\nhttp://www.reddit.com/r/RESissues/comments/2aafnz/bug_autodownloading_pictures_when_next_page_loads/ciu35ae?context=6\nIn Safari, some images are being downloaded when you open the expando.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1450.\n. i think the trickiest part may be automagically determining if/when the table has headers or not.\n. i think the trickiest part may be automagically determining if/when the table has headers or not.\n. ahh nevermind, I forgot it's impossible (I think) to do a table with no headers in markdown\n. ahh nevermind, I forgot it's impossible (I think) to do a table with no headers in markdown\n. what's the use case for that, exactly?\n\nwill people take mental inventory of things they've filtered off of /r/all versus /me/f/all and vice versa -- with and without RES?  I think that starts to get into really crazy territory to be honest.\n. agree on low priority.. no disrespect meant to our poor corporate firewalled friends, but this isn't even really a bug, it's a feature request... \"please make RES work on this nonstandard URL that's probably a hack in and of itself and not guaranteed to work on reddit because it's more of an exploit of how reddit's routing works than anything else\" ;-)\nthat said, if it's not hard to fix, let's fix.\n. did you miss this? \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/6a335c143716dfee6b821b0304a8616dd11546ff\n. it looks like you're not on the latest code - can you rebase to master?\n. so I've merged, but I don't see expandos in many places.. can you show me an example where I should? this doesn't seem like complete support since it's restricted solely to:\ndomains: ['ppcdn.500px.org', 'pcdn.500px.net'],\nthat means \"normal\" links to 500px don't get expandos:\nhttp://www.reddit.com/domain/500px.com\n. that's fair, I see this works: http://www.reddit.com/domain/pcdn.500px.net \nit's a decent compromise for now. it would be great if we had full 500px support, complete with still giving artists credit and 500px whatever due it wants/needs within reason!\n. oh, and thanks for the contribution! sorry I've been nothing but questions before even saying that!\n. that's a good thought... @mc10 since you're able to replicate would you mind throwing a func param for the event in there (e) and s/this.value/e.target.value to see if that fixes it?\n. that's really odd.. I would guess maybe a form submit event is occurring and some other extension might be allowing that to happen by adding an event listener first, maybe?  That's my only guess off the top of my head.\n. you're not alone but I'm still at a loss:\nhttp://www.reddit.com/r/Enhancement/comments/2cc01n/merging_user_tags_from_one_computerbrowser_to\n. ugh I've seen this reported a couple fo times and I cannot for the life of me replicate it! if you can find a consistent repro, please let me know.\n. sorry 2 questions:\n1) what browser are you using?\n2) does it happen upon scrolling away or anything, or if you just sit there and stare at the monitor it happens...\n3) can you confirm you're not using telekinesis to hit the [ or ] keys?\n. I'm not positive. I can't repro it for the life of me though.\n. is anyone still having this issue? I have never once reproduced it.\n. I still can't repro this issue. Couldn't in 4.5.0.2, can't in 4.5.1\ncan anyone who's able to repro it still repro it with 4.5.1?  can you list what addons you run?\n. I still can't repro this issue. Couldn't in 4.5.0.2, can't in 4.5.1\ncan anyone who's able to repro it still repro it with 4.5.1?  can you list what addons you run?\n. can you please specify your:\n- browser, including full version number and 32/64 bit specification\n- all other addons you run\n- all of your settings for the Inline Image Viewer plugin except for enabling/disabling specific image hosts which you can omit\n. thanks, that's helpful.  do you use the 'view all images' button, or do you open albums individually?\ndoes the image switch back to the first one even with all of your other extensions temporarily disabled?\n. Wait, your'e seeing this in Chrome 41? I've never seen or heard of it in Chrome at all... wonder if Canary introduced something similar to whatever's causing this in FF? \n. finally able to confirm / replicate this: need to have 'view all images' clicked on a page that has some galleries.\nref: https://www.reddit.com/r/RESissues/comments/2ck0dj/bug_res_is_not_keeping_images_aspect_ratio/cl9kn1u?context=6\n. add'l info from user: \nhttps://www.reddit.com/r/RESissues/comments/2juefp/bug_regarding_the_wrong_aspect_ratios_bug_in/\n. does this mean you might work on chasing it down, or should I put it on my todo list? :-)\n. handleLink should only fire when action is needed to \"rewrite\" that link (or make an API call) to get info about the direct image, if memory serves correctly, so this is correct behavior - though I understand for your desire to append the resize info you may want to open up the regex for imgur to all links, then have handleLink do nothing if nothing is necessary... something to consider, though see my comment on your PR about a hurdle we'd need to consider before accepting.\n. I think I have a better idea for this...\nFor a long time I've wanted to add code to the comment navigator to track where you are on scroll -- so say you're navigating by IAmA mode, then you manually scroll down... the counter should increment (or decrement if appropriate) whether you're scrolling by mouse or using the navigator buttons.\nThen, we just add 'top level' as a type of comment, and voila. Problem solved.\nbonus points: cleaner type chooser... a dropdown has been suggested to save space, I'm not sure I love a plain old dropdown but maybe.\n. I believe I should get updates for all comments, but tagging me doesn't hurt!\nMaking our icons easier on the eye is definitely welcome and would be appreciated!  Note that there are two other sites that are gfycat-like in their focus on silent HTML5 videos / gif-like experiences - Giphy, Gfycat, and Gifyoutube (just added)\n. thank you for this, appreciate it!\n. may be, but I just pulled latest and that fix doesn't fix this one.. so, perhaps related, but not enough to kill 2 birds with one stone :-)\n. do you do a ton of voting?\ntry going to the troubleshooter pane in the console and click the \"clearTags\" button\n. what version of RES, and what browser version?  Please do not reply \"latest\" on either of these as users are often unknowingly incorrect.\n. okay, last question then hopefully @mc10 can have a deeper look since this is his code (but if you're busy I can, mc)...\ndo any settings you change save at all? e.g. if you turn off a module or something?\n. final updated revision - release 4.5.1:\nNew Features / Tweaks\n\nAdded full HTTPS support now that reddit supports it\nSwitched out a lot of RES image resources to use HTTPS now that it's fully supported\nAdded HTTPS support for imgur and some other image hosts -- note: not all image hosts support it, you will sometimes see \"mixed content\" warnings because of this.\nChanged default behavior of post / comment score highlighting (turned off)\nHandy-dandy edit/delete buttons on subreddit shortcuts (thanks @andytuba)\nAdded an option to hide formatting tools on comment preview (bold, italic, etc) (thanks @andytuba)\nUpdated on/off toggles to be more colorblind friendly (thanks @andytuba)\nComment navigator now tracks scroll position and updates as you move through the page\nKeyboard navigation commands added for comment navigator (N to toggle, shift-up/down to navigate)\nUpdates to redditbooru support (thanks @dxprog)\nApply filters to multireddits (thanks @Dashed)\nExpandos for 500px.org (thanks @Melraidin)\nSort tables in posts, comments, sidebar, wiki by clicking on headers (thanks @danny)\nImprove night mode appearance of markdown editor (thanks @githue)\nAdded loading spinner for image galleries  for a better UX when changing images\nAdded compatibility with Tree Style Tabs extension for Firefox (thanks @CyberShadow)\nUX tweaks to RES options search results (thanks @githue)\nComment Tool options to hide formatting tools (thanks @andytuba)\nMake settings console openable from NP module (thanks @andytuba)\nChanged how autoplay works for MediaCrush videos (thanks @SirCmpwn)\nRemoved bitcointip module as the bitcointip service is retired\nAdded a tips/tricks box to subreddit style editing page for moderators to help guide them toward help dealing with styling for RES\nAdded a subreddit style toggle box to the toolbar for Firefox - now present in Chrome, Firefox and Opera - no more suffering from pesky moderators who hide it!\n\nBug Fixes / Maintenance\n\nMediaCrush and gfycat expandos fixed\nMediaCrush elements no longer open when \"view images\" is clicked as they may be video\nFixed navigate by IAmA, broken by a reddit change\nFixed navigate by popular feature of comment navigator, also broken by a reddit change (thanks @andytuba)\nFixed a bug where converted gfycat images would overlap content\nFix comma-separated imgur \"album\" links (thanks @isstabb)\nFix tumblr and other remote text posts that contain iframes\nRES command line console fixed in Firefox\nMore reliable CSS toggle in toolbar (Chrome and Opera 15+ only)\nRestore original text when mouse leaves timestamps\nFix occasionally broken whitelisting of subreddit stylesheets in night mode\nAuto-sort vote score user coloration\nMark gifs as visited with  showImages convertGifsToGfycat option enabled  (thanks @wT-)\nFixed a bug where the 'save' button on a dashboard widget got scrolled off screen when creating a very large widget\nfixed a subreddit tagger case sensitivity bug where some subs would not get tagged (thanks @gavin19)\nFixed a bug where expanded images would cover the user tagger form\nFixed a bug that caused multiple 'source' buttons to be rendered\nFixed a bug that sorted multi-subreddit shortcuts alphabetically when saving with \"enter\" button\nFixed the background color of the flair selector in night mode\nFixed night mode breaking Opera 12 (thanks @andytuba)\nFixed reddit's all new report form for night mode (thanks @gavin19)\nFixed an issue with private messages from ignored users (thanks @andytuba)\nShow all RES options by default (thanks @mc10)\nSome CSS fixes for media shown on wiki pages\nAdd support for Giphy.com (thanks @alexchung)\nAdd the ability to upvote/downvote without toggle behavior (shift-A / shift-Z) (thanks @andytuba)\n\n... and as always, various code cleanup and other minor fixes / performance enhancements.\n. aye. that's a better idea for sure for privacy etc. we should still either not do it for acct switcher, or remove account listings from it.\n. agreed, marking this high priority though I have no idea what fixes we may need to put in\n. thanks, I'm assuming you've tested and this works well? :-)  Normally I'd pull and test but I'm in the midst of a busy work day atm!\n. FYI I've taken care of this on my end. thank you for the start on it though :-)\n. closed by d82328a\n. i haven't confirmed this myself but several users have so marking confirmed.\n. this is not a legit bug, it's a chrome beta bug - linked poster is using chrome 38, and I can't replicate this in Chrome 37 (stable). Closing.  There's no incognito logic at all in account switcher.\n. actually that logic disappeared without me realizing maybe... the chrome 38 thing still may apply, but either way - fixed by 0a3cc717733e2a0d3c065974fc71ec1dd08221f6\n. sprite is on /r/Enhancement/about/stylesheet\n. thanks, this hasn't been fixed yet... I think it's probably best to keep the arrows opaque but the outside transparent, really appreciate it thank you!\n. update: link will get a .full-comments class so RES can detect and not append.\n. update: link will get a .full-comments class so RES can detect and not append.\n. fixed by df1ab717a9c5c942ef0278f288d1a651bda204a1\n. fixed by df1ab717a9c5c942ef0278f288d1a651bda204a1\n. Pretty sure I already fixed this. Did you test before opening? Possible it\nbroke again I suppose.\nOn Sep 28, 2014 3:34 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nhttps://www.reddit.com/r/RESissues/comments/2hjb4m/bug_ama_still_glitchy/\nmay affect other browsers\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1645.\n. Pretty sure I already fixed this. Did you test before opening? Possible it\nbroke again I suppose.\nOn Sep 28, 2014 3:34 PM, \"Andy Tuba\" notifications@github.com wrote:\nhttps://www.reddit.com/r/RESissues/comments/2hjb4m/bug_ama_still_glitchy/\nmay affect other browsers\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1645.\n. holy crap, that's some seriously thorough testing there - I appreciate that!\n. holy crap, that's some seriously thorough testing there - I appreciate that!\n. that's not good.. do you run any addons that may conflict / cause this? was\nit happening before your code changes?\n\nOn Tue, Sep 30, 2014 at 6:12 PM, erikdesjardins notifications@github.com\nwrote:\n\nOne thing I noticed (that might be a bug, or you might already know about\nit) when I was testing is that RES doesn't seem to like it if you have a\nlot of video expandos in the same comment (that's why they're in separate\ncomments in my screenshot).\nThe behaviour was really weird - the video expandos would show up (and be\nfunctional) for a short time (like 1/4 second) and then be removed\nsequentially (immediately after the rest of the expandos finished loading),\nas though RES was doing a second pass to remove them.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1649#issuecomment-57397403\n.\n. that's not good.. do you run any addons that may conflict / cause this? was\nit happening before your code changes?\n\nOn Tue, Sep 30, 2014 at 6:12 PM, erikdesjardins notifications@github.com\nwrote:\n\nOne thing I noticed (that might be a bug, or you might already know about\nit) when I was testing is that RES doesn't seem to like it if you have a\nlot of video expandos in the same comment (that's why they're in separate\ncomments in my screenshot).\nThe behaviour was really weird - the video expandos would show up (and be\nfunctional) for a short time (like 1/4 second) and then be removed\nsequentially (immediately after the rest of the expandos finished loading),\nas though RES was doing a second pass to remove them.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1649#issuecomment-57397403\n.\n. interesting. looks like they changed the API again. if you open the background.html inspector in chrome you'll see the API gets a 404 now.\n. interesting. looks like they changed the API again. if you open the background.html inspector in chrome you'll see the API gets a 404 now.\n. hmm.. the hash length appears to be different on the broken vs. working single gallery image.. I wonder if that has anything to do w/it...\n\nAPIv3 I believe requires an authorized account, correct?\n. hmm.. the hash length appears to be different on the broken vs. working single gallery image.. I wonder if that has anything to do w/it...\nAPIv3 I believe requires an authorized account, correct?\n. well, the OAuth requirement is pretty much a nonstarter, probably.\n. ugh, related issue: expando can't even be opened if you're using HTTPS, because Chrome complains about mixed content.\n. hey, just checking in to see if you had a chance to add bigeditor support, etc, @jtymes  -- thanks!\n. please correct me if I'm wrong, but I don't see how a dontPreloadImagesBiggerThan can exist. RES can't know the size of an image it hasn't yet attempted to download...\n. please correct me if I'm wrong, but I don't see how a dontPreloadImagesBiggerThan can exist. RES can't know the size of an image it hasn't yet attempted to download...\n. braining is hard :( sorry.\n. braining is hard :( sorry.\n. thank you! I know we're not consistent everywhere yet, but I figure if I can at least make new code fit the guidelines, that's a start..... I appreciate it!\n. is this truly markedly better/different than tagging oneself? ah, I see his cosmetic complaint.\n. that has been discussed before, see here: https://www.reddit.com/r/Enhancement/wiki/rejectedfeaturerequests#wiki_can_res_hide_the_sidebar.3F\nit's something that we're not comfortable with for the reasons outlined there...\n. if we do this via base64, it should be done in a CSS or JS file that's separate to maintain the ability to do text diffs in git for the rest of our CSS/JS...\n. sorry for the slow response on this -- why is it just a 'partial' fix? are there repro steps that this doesn't fix?\n. whoops, I see you added a comment on the issue itself, got it, thanks!\n. thank you, @jtymes !  as if we were journalists, I'd like one more source to confirm this is fixed in latest master prior to closing. I'm unable to upgrade to Yosemite, so I can't do so myself.\n. reddit's expando CSS doesn't set anything, so the cursor doesn't change to indicate you can take action.  The change in RES is intentional...  what's the reasoning for undoing that here? \n. i'm guessing people may want this to be optional... i think we just had a user upset that the hover tooltip had his real username because he hovered it on accident when someone was nearby...\n. I'm ok with default on, but I'd like some other opinions before I just go ahead... @andytuba perhaps?\n. I don't think there's any way around it, unfortunately. Have you checked for CORS headers? I'm assuming they don't use CORS if they serve up JSONP, but.... worth looking.\n. nevermind, I just checked... no CORS headers on their JSON API\n. new permissions are basically a non-starter at this point unless you want to write the code to make them optional.  the auto update will disable the extension if new permissions are added, and give users an unnecessarily terrifying/misleading dialog that causes us devs mass headaches and email influxes... \n. I should clarify this is specific to Chrome / \"Chropera\", and that we do have conditional permissions allowed (see twitter), but there are odd bugs/problems with it such as the user being unable to allow permissions after rejecting them sometimes (seems edge caseey, but happens a fair amount)\n. doesn't appear to support CORS?\n. well, I visited the example API page they have and looked at the headers, and no CORS header was present :(\n. hrm, might it not have been better or at least more consistent to add an option type of 'subredditlist', as we did w/table?\n. yeah, that's all I meant, not really trying to say that a list of subs is like a table so much as \"we already have option types that trigger custom logic\", so a mixin is kind of a different approach\n. thank you :)\n. weird, can you link to a specific example that we can repro on?\n. > I understand that Greasemonkey was legacy support, but has there been anything added post-4.3 that would completely break RES's ability to be a userscript again? \nMainly the use of browser specific APIs like the new toolbar button for \"use subreddit stylesheet\", and any other stuff that simply won't work as a userscript.\nHowever, the biggest reasons we don't support userscripts anymore:\n- maintenance and editing is unwieldy with such a monolithic file\n- we'd have to write gulp/grunt or some other script(s) to concatenate everything if we want to maintain as separate files\n- biggest of all: we simply don't have the bandwidth to start answering questions about more and more obscure browsers (yes, I've heard of Luakit before, but relatively speaking it's extremely obscure), so it is in the best interest of our mental sanity not to officially support them.\nDespite the fact that we charge nothing, people get pretty demanding when it comes to support, and it seems from what I can gather anecdotally that the persistence / loudness of a minority voice seems directly proportional to the obscurity of that browser.  I recognize that's a generalization that some people won't like - but I'm pretty sure folks like @andytuba and others who deal with support issues will back me up on this.  Opera 12, Waterfox, Pale Moon and other browsers that RES doesn't officially support, but does often seem to work on, seem to have the loudest and most demanding users.\nIt's not that we don't want to be helpful, it's that we only have so much time... this is a hobby project, not a business :-\\\n. based on your IRC message that he may  have paid $100 -- if you can get a refund, do it! you shouldn't have to pay that much for a cert. try namecheap.com or others for cheaper alternatives.\n. this is an idea better suited to an all-around internet plugin rather than RES, and it in fact exists, so I'm going to go ahead and close this...\nhttps://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=time%20spent%20on%20sites%20plugin\n. I'm not sure I love the idea of more markup types being converted / preprocessed before it becomes markdown which then becomes HTML... yowza...  I'd be curious to see if macros settle the use case enough first.\n. I'm not sure I love the idea of more markup types being converted / preprocessed before it becomes markdown which then becomes HTML... yowza...  I'd be curious to see if macros settle the use case enough first.\n. Yes. Sorry to be a Debbie downer here but I'm not sure we should merge\nthis. It's a good citizen thing more than anything else.\nDropbox doesn't want to be a media host and it limits people's bandwidth\nusage, eventually killing off the link.\nI'm not giving a definitive \"no\" but I think this should be considered and\ndiscussed.\n. this is on the list... see here for a kinda-model on how it could work:\nhttps://github.com/honestbleeps/BetterZoom\n. it's absolutely related and this is the top cause of Firefox trashing RES's data.\nI am against writing a backup system for two reasons:\n1) We're looking at moving toward a new storage method which should erase this problem anyway\n2) it's a ton of firefox specific code (writing files to hard drive is not really permitted in any other browser!) and is prone to errors/issues with testing, all due to a bug that's firefox's in the first place.  rather, we will focus on #1.\n. Sorry I haven't had time to weigh in on this one yet.\ncomments filtering is definitely a CPU concern more than anything else... that and a \"what's the UX\" -- for example, a comment in the middle of a tree.. do you replace it with a box of some sort? do you maintain its size? do you allow it to be revealed optionally? we definitely need to avoid resizing it if possible (screen jumping), so we can't really remove it from the DOM.\nlots to be figured out there.\n. Not sure about the first line thing personally. What about just two\nfields.... Tag and note?\nAnything that requires the user to think / memorize a formatting convention\nmay ultimately lead to confusion, tech support requests etc.\nImagine a user types a really long first line as a result of seeing the\nbigger field. Well get an ellipsis request right away because they didn't\nrealize they can hit enter to break off the tag.\nOn Oct 2, 2016 1:31 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nHow about this spec:\n1. Make user tagger form larger\n2. Change the user tag text from a one-line text input to a multi-line\n   text area.\n3. For displaying tags, only show the first line of text inline. If\n   there's more than one line of text, add ... at the end. (Maybe better\n   to implement in JS than CSS.)\n4. Show multi-line tags on tag's title (hover tooltip). Make sure line\n   breaks work.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1913#issuecomment-250986846,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AATws9aU2svQEaSoYkqL6Evh8BekW6Unks5qv_h5gaJpZM4DMf-b\n.\n. ehhh.... I really don't love this, but... I'm not a dictator... what say you, other githubbers?\n. yay dependsOn!\n. yay dependsOn!\n. seems we should close this then, thanks!\n. yes, this functionality already exists, just not with the keybindings OP prefers -- which can be adjusted in the RES settings console. Closing this issue.\n. that looks like an interesting tool but it doesn't seem to be free to use.\n. aaaand I should've read a little further down. sorry :-)\n. funny, though a fair number of those are bogus no? it's an interesting tool though. worth poking at a bit more.\n. you likely have a conflicting extension causing this problem by rewriting the URL somehow - what other extensions do you run?  your example of a broken gifv works fine for me.\n. assuming you're correct, it seems like instead we should alert imgur to the issue on their end, rather than start forcing gfycat to transcode stuff just because they don't have the bug.\n\nso I take it Firefox in Linux lacks H264 support?\n. seems worth at least raising with them, but I'll close this since it's not RES.\nchallenge for imgur would be detecting what you support - not sure how simple that is, and it's kind of specific to linux users I would think, as I'm pretty sure FF supports h264 automatically on OSX / Windows due to OS level support (going from memory here, I could be wrong)...\nin any case, glad you got things sorted out and thanks for doing some legwork on the details, appreciate it!\n. > I can't imagine it's very likely that img.: wouldn't be an image, so I think it would be fine to do this instead of adding a special case for Twitter.\nHmm, aren't wikipedia \"image\" URLs (actually pages) something like this?\n. hmm I guess not quote:\nhttp://en.wikipedia.org/wiki/Destin_Sandlin#mediaviewer/File:6TdMNb1_-_Imgur.jpg\n. what's this business about gfycat not working? works fine for me\n. what's this business about gfycat not working? works fine for me\n. dude... high-five @changetip\n. let's make it another $5 because this bug has been annoyingly haunting our backlog for too long. @changetip\n. so the reason that's done was the many incessant complaints about bookmarks getting the unread count in the favicon.\n\nit seems prudent to find another way to implement this option.\n\nI may be wrong, but I'm pretty sure there just isn't another way.\nThat said, we may just have to decide here: cache, or be concerned about favicon having unread count in bookmarks?\nI feel like cache probably wins.\n. it has been a while since I've worked with the google maps API, but back when I did I recall there being some pretty strict API limits, etc, unless you pay. There might be some serious hurdles here.\nThat said, if someone wants to jump in and work on this feature as long as they research those limits, I'm certainly supportive of that.  Not sure how high the core devteam would prioritize this due to its niche appeal, though.\n. good point, I was probably remembering limits around other functionality, thanks!\n. this is a reddit limitation that I'm not sure RES can really get around... unfortunately some sites use hash / hashbang for actual navigation, especially \"web application\" type sites... \nI'm not going to close this, because someone will probably chime in explaining a situation where I'm wrong, which I'm entirely open to... just sharing my first reaction/thought :)\n. it could, but the problem is that sometimes it's completely legitimate to add #foobar to a link, that's the tricky part.\na plain # at the end of a link has no real function, but is also not necessarily a nefarious attempt to get around the repost filter, because a lot of sites link to # to scroll to the top or load the \"main\" part of the app, etc... it's also nontrivial in javascript to remove that \"#\" in a cross-browser way, which is why RES didn't do it for so long (and the fact that it does do it now actually causes some back/forward nav issues, but I digress)...\nbasically, it's a tricky situation with no real great answer :-\\\n. Go home, tuba. You're drunk!\nOn Feb 26, 2015 9:34 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nbecause it keeps getting asked so goddamn often and it's hard to write a\ngood AutoMod rule.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2049#issuecomment-76325313\n.\n. pretty sure it is, yes.\n\nOn Sun, Mar 8, 2015 at 10:44 PM, Andy Tuba notifications@github.com wrote:\n\nis that the only place RES uses those wedge images?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2083#issuecomment-77796252\n.\n. while a lot of this code can definitely be removed, it's not universal.\n\nsome of that code is useful to leave in / commented because we uncomment for debugging (e.g. the perftest stuff).\nIdeal world: make it only run in a debug mode, or something, of course...\nI don't have the time to do so just yet, but one of us could maybe submit a PR against your branch that returns the commented code we need to keep in RES - then we could merge this.\nhopefully someone's feeling ambitious, otherwise it'll have to wait until I have time to look myself :-\\\n. The problem was that \"half\" the browser we supported (Safari and old Opera) needed the iframe hack.\nI think we can stop doing this and just say \"too bad\" for Safari, because the iframe hack for tracking history doesn't even seem to work anymore anyway so this isn't helping anyone.\n. i'd be fine with optional permissions like we do for twitter...\n. haven't tested this yet, but the spaghetti that was the gulp script before was a big reason I was hesitant to even use it, so :+1: :)\n. DOM storage is what RES uses to store data. It simply will not work without it right now, sorry.\nWe're investigating new manners of data storage because of this bug, though, which may help (I'm not sure if DOM storage would affect an alternative such as indexedb, for example):\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1091244\n. the problem is that there are so many dependencies, and the number of hours required to get support would be quite high -- high enough that a bounty would probably have to be a considerable amount of money...\ndependency wise, we'd need Seamonkey to support all of the new Firefox APIs/structures that RES needs. No bounty will change that.\nEven once it gets to that point, if RES doesn't just automatically work again, someone would need to spend a considerable amount of time testing, debugging and fixing and it more than likely wouldn't be just a day or two of work.\nThen, beyond that, there'd be continued maintenance (you're going to be upset if you pay a bounty, it works for a month, then Seamonkey makes a change and it breaks again, right?)... \nBasically, the amount of effort required to get it running on a browser that an extremely tiny number of people use is unlikely to be in line with what a bounty would be...\n. because we haven't pushed out a release yet. \"master\" is the latest bleeding edge code.  it will be fixed in the next release which doesn't have a specific scheduled date yet because we're all quite busy w/jobs etc.\n. please just be careful running master. you'll get out of date unless you keep pulling and updating, and you should expect bugs -- LOTS of bugs ... so please don't post to /r/RESIssues for support unless you're running on a production build, thanks!\n. this is a good idea for the keyboardNav module, @3v1n0 - I like it.\nThe main reason we direct them to /r/Enhancement is that a lot of the requests we get (most, frankly) are bad ones, and we'd rather not have them cluttering out github issues.\nThis one is a good idea :-)\n. by the way, do you have a suggested binding?  I think / is a common one, but because of that I believe that Firefox may already have it bound to \"find in page\"\n. https://www.reddit.com/r/Enhancement/comments/3579th/known_issue_reddits_new_beta_icon_clips_with_the/\n. fixed\n. The ELI5:\nI've wanted for a long time to redo the way RES handles initialization because too much of it was built at totally different times and often in a rush to release. It's a complete cluster!@#!@ of bad things like setTimeout checking, etc.\nWhen we have the async storage refactor (something I've wanted to do for ages) done, where RES no longer \"copies\" all the localstorage from background to foreground, we'll be able to complete this sort of behavior.\nI haven't looked at the diff yet (sorry, no time), but basically the RES init flow should look something more like:\nBefore page load / immediately\nget all (or at least \"important to have early\") module settings so we know important things like \"is night mode supposed to be enabled\"?\nadd CSS for things like night mode that need to not have a flash of unstyled content\nadd CSS classes to HTML tag and/or HEAD as early as is humanly possible to avoid FOUC (some of the CSS that RES adds depends on these classes existing, adding them to the body 'activate's those sections of CSS)\nat page load / later\nrun / apply all modules (these may still need to be run synchronously, not all spawned individually via an async process, due to dependencies, so we probably need to get \"all module options\" via async storage, then run all modules via the same sort of for loop we do now)\nadd other optional/conditional CSS that's not as necessary to load before page load\nas needed, get any/all module related data\nThere's more to it than that, but that's the ELI5.\n. thanks for submitting this, it's definitely the sort of tweak/performance improvement experimentation we welcome! I don't have time to look at this just now but I'm sure one or more of us will give it a whirl soon. Appreciate the contribution!\nhigh-five @changetip\n. I would just add that our commitment to Opera 12 maintenance is inversely proportional to the time since the last Opera 12.* release.\nIt's just too much of a hassle to maintain long term, way too many quirks and it holds us back from improvements elsewhere.\n. I would just add that our commitment to Opera 12 maintenance is inversely proportional to the time since the last Opera 12.* release.\nIt's just too much of a hassle to maintain long term, way too many quirks and it holds us back from improvements elsewhere.\n. Sorry, this isn't really technically viable due to the fact that it'd require an API call for each user on each page. Especially on comments pages, but even on posts pages, this just can't be done within the API limitations that reddit has (1 per 2-3 seconds) - a default page of 25 posts would mean 50-75 seconds of waiting for all the queries to finish, etc...\n. I'm fine with this being here. Normally I'd prefer stuff to go in /r/enhancement but this particular instance is both correct from a ux standpoint and easy to fix. We should change save to submit. Perhaps close should be cancel or something, I'm not as convinced that one needs to change but I'm not against it. \nWe do want to discourage people from using github as a discussion / suggestion place in general solely due to volume, but let's not press this one. It's already posted here and I agree with it. \n. I believe @eligrey is misunderstanding the point of this ticket. It's to sync friend notes->user tags and user tag notes->friend notes.\nthe proposal here is not to sync user tags to a server and/or also sync friends to a server... the latter of which isn't really necessary, and the former of which is a much bigger/different project that requires a centralized server, etc.\n. I did a quick check of this manually (instead of pulling your branch, manually adding activeThing in the console -- this demo breaks keyboard navigation completely.\nam I doing something wrong?\n. Yeah my mistake. Replied without sufficient brain.\nOn Sep 2, 2015 2:34 AM, \"githue\" notifications@github.com wrote:\n\nI can still use J, K, a, and z. Using Chrome here.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2444#issuecomment-136962059\n.\n. I like it!\nOn Sep 21, 2015 4:02 AM, \"githue\" notifications@github.com wrote:\nCurrently playing with the button's appearance. Thoughts?\n[image: subscribed-thread-02]\nhttps://cloud.githubusercontent.com/assets/7245595/9988247/39b09312-6092-11e5-9ba9-643333aea526.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2455#issuecomment-141917121\n.\n. @eligrey - I have taken my time in responding to this because of the extremely combative nature of your prose. I wanted to ensure I have a cool head when responding, as I do not want to discourage people from contributing to RES.\n\nWith that said, I will address your questions and statements:\n\nI heard that you guys don't like implementing gold features, so please be aware that this code actually reduces the load on reddit's servers as it replaces the myrandom button of gold users with a client-side button. This feature does not harm reddit at all, and was very simple to implement.\n\nOur reasoning for not implementing gold features is about cannibalizing possible purchase of gold, not about server load.  This is out of respect to reddit.\n\nIf you do not wish to support this feature, I hope you don't mind if I ask the /r/Enhancement community about their opinions regarding your philosophical stance with RES and gold features that can be implemented on the client-side. If enough people in the thread say that they want this feature, I hope that you can look past your philosophical differences and appease your community.\n\nWe will not be supporting this feature due to our commitment to not cannibalize Reddit Gold features. This isn't something we're willing to bend on, because it's a commitment we've made publicly to both reddit and our users, who have nearly unanimously respected that stance/decision.\n\nSo please think rationally before rejecting this pull request, and fairly weigh any potential benefit and harm to your users as whole.\n\nThis is where I had to stop reading and decide not to respond to this the day you posted it. I'm going to give you a piece of professional advice as politely as I can:\nIn no uncertain terms, this sentence is a threat.  In the field of software development, one of the most important skills you can have has nothing to do with writing code - it's working well with peers.  Opening up with a threat is not a great way to get off on the right foot.\n\nYou already support user tagging (which is also a gold member feature) and continue to support it. myrandom.js caches a list of all of your subreddits locally as not to introduce any significant additional load on reddit, and can be configured with a very long refresh period if you really don't want any load at all on reddit.\n\nUser tagging is actually not a gold feature, and works differently.  The \"friend notes\"  feature that reddit gold provides can only be viewed on the friends page, rather than all over reddit. The features work differently.\nRES offers other features of reddit gold in cases where it is \"grandfathered in\" - if RES offered it first, we're not removing it from RES.\n\nNo offense, but if you honestly feel that artificially limiting features is in your users own best interest, then RES is no better than DRM software.\n\nBack to the comment about working well with others: starting off a sentence with \"No offense\" is, about 99% of the time, going to be followed up with something negative. If you find yourself starting off a sentence that way, it would probably serve you well to either rethink the sentence or not finish it.\nIn this case, the notion that RES is no better than DRM software is an opinion you're welcome to have, and you are free to run your own copy that doesn't restrict you in ways that upset you - it'll just be up to you to maintain updates to the codebase. I'm relatively certain that the RES community as a whole doesn't hold the same view that you do.\n\nYou should not be acting on Reddit Inc.'s best interests for Cond\u00e9 Nast's bottom line, you should be acting on your users' best interests for their ability to explore reddit without restrictions. \n\nI act in what I feel are the best interests of the reddit community as a whole. You may disagree, but those are subjective opinions to hold.  Since this is not your project, it is not up to you to decide what I or other contributors to this project should or should not do. \nThe lack of ability to go to one of your subscribed subreddits at random is hardly restrictive enough for 99.9% of reddit users to complain about the fact that they have to go buy Gold to do so.\nIn summation, your note seems to be a threat to create another fork of RES wherein you will \"divide our users\" because people prefer to follow your fork so that they can use the MyRandom feature without paying for gold.\nEven in the unlikely case where that would actually happen, you have approached this in an abrasive and unprofessional manner without ever having had anyone from the RES development team treat you disrespectfully or provoke you to behave in such a manner.\nI have two suggestions that I hope will result in positive change to your future interactions and therefore your career:\n1. A polite note, rather than a diatribe of several paragraphs, might've met a different response.  For example:\n   \"I understand that 'MyRandom' is technically a Reddit Gold feature and I understand that RES has committed to not replicating gold features. However, I find it to be a minor feature that is likely not a key selling point, so I wanted to submit this pull request for your consideration. It adds the MyRandom functionality with minimal load to reddit's servers\"\n2. Your pull request adds its own DOMContentLoaded event, and does not follow the module pattern of the rest of RES modules/features. Regardless of the controversial nature of your PR comments, it is best to understand the codebase you are submitting a pull request against, and to try and follow the design and development patterns therein.\n. thanks for these...\nregarding the manifest changes, we'll need to do some testing to see if this would cause the infamous permission dialog problem and disable the extension for everyone on Chrome...\nI think it may, unfortunately, which means we should consider whether the cleanup in the manifest is worth the merge or not.\nthe getURL change we should certainly take, getURL should've been used, for sure.\n. I should add, just for clarity: the manifest changes are unquestionably better, it's just a matter of whether it will cause us a gigantic flurry of tech support requests due to the security popup people will see about \"new\" permissions.\n. thanks for understanding!  there's also the option of optimal permissions (will FF's WebExtension thing support those too?), but those get sort of dicey and are a bit buggy in Chrome apparently (we get \"I said no to twitter, and now I can't get it to ask me again!\" all the time, and we can't replicate that problem but it obviously happens because it comes up with some frequency.\n. thanks!\n. a trailing slash is something debatable, not canonically correct or incorrect.\narguments against the trailing slash:\n- not technically necessary / extra character\narguments for the trailing slash:\n- gives context, denotes the URL is definitely not a direct link to a file\n- denotes the URL may likely be a link to a \"section\" on a website, or a collection of resources (not necessarily a directory)\nWhether or not one finds the trailing slash at the end of a URL aesthetically pleasing or displeasing is something subjective.\nBecause this is a pretty subjective area, and one of nitpicking and not code quality, I'll wait until at least one of the other maintainers of this project weighs in before either merging or closing.\n. I'd prefer it we keep the conversation respectful. There are valid reasons / preferences for both formats.\nRegarding example.com/blog versus example.com/blog/ - whether or not one forces unneeded redirects to the other is, again, subjective.  Many sites 301 and add the trailing slash, rather than remove it.\nThis is why I've tried to stay neutral here and be both respectful and objective.  \nPer google's own article on the topic of trailing slashes, they intentionally do not recommend which is preferred (trailing slash or no):\n\nSteps for serving only one URL version\nWhat if your site serves duplicate content on these two URLs:\nhttp:////\nhttp:///\nmeaning that both URLs return 200 (neither has a redirect or contains rel=\u201dcanonical\u201d), and you want to change the situation?\nChoose one URL as the preferred version. If your site has a directory structure, it\u2019s more conventional to use a trailing slash with your directory URLs (e.g., example.com/directory/ rather than example.com/directory), but you\u2019re free to choose whichever you like.\n\nSites may 301 redirect from example.com/foo to example.com/foo/ or vice versa - it's up to the site administrator's preference and neither can be relied upon to be canonical.\n. the individual ones work fine, but they don't seem to open with 'view images' ... we may need to look at what classification it's getting. generally 'view images' doesn't open videos (and these are \"gif\" but really videos, right?)\n. the purpose of dropbox having bandwidth limits is pretty clear, so I don't think we should really try and circumvent it.\nofficial API usage is, to me, the only viable option and even then I'm not sure it'd be possible because we'd probably need some sort of key/secret that ought not be shared in our open source javascript.\n. seems clear this is happening in the 1ms settimeout that's looking for document.body - we could make it 50ms as a quick fix, but I wonder if there's a way to detect \"okay, there's no document.body AND this tab is inactive, so wait for a tab active event\" -- I believe this is possible.\n. I'm not sure if that would work or not. The idea is to run as early as\npossible. Worth a try!\nOn Jan 12, 2016 11:51 PM, \"Kevin Ji\" notifications@github.com wrote:\n\nCan we just use MutationObservers\nhttp://stackoverflow.com/questions/5525071/how-to-wait-until-an-element-exists\nand drop the document ready check?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2613#issuecomment-171177603\n.\n. that's great news, glad it's been fixed on Chrome's side... I wonder if we should still put a check of some sort in our code, in case this comes up again... While I'd argue it's a chrome bug, the possibility of getting stuck in an infinite loop is still icky in the case where something goes wrong with the browser.\n. FWIW, I believe converting to native promises may be the final nail in the coffin for Opera 12 support - and I'm 100% ok with that.  I understand its users are passionate, but there are not enough of them to justify the continued work/maintenance required. It has an IE6-ish level of odd quirks etc. \n. ah, whoops. sorry!\n\nOn Wed, Jan 13, 2016 at 2:54 PM, Andy Tuba notifications@github.com wrote:\n\nIt does this already, there's just something broken with that user's\nfetching their mod list.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2640#issuecomment-171429282\n.\n. Agree with @erikdesjardins here... it's a good suggestion on its surface, @denilsonsa , and we appreciate it! We're always looking to make RES more efficient.  In this case, seems like it doesn't make sense to make the switch though. Thank you for the suggestion!\n. oh man I've been dreaming of doing this for so long... I haven't reviewed yet, but I'm super excited about this.\n\nThis would be a good opportunity (either in this PR or after it is merged) to start using chrome.storage instead of background page localStorage, and to move from Firefox's tremendously unstable simple-storage to indexedb, as well.  Those really relied on an async refactor.\n. I could be wrong, but I'm pretty certain this sort of change would disable RES in Chrome for all users because of a change to permissions.\nIt sucks we're pigeonholed where we are rather than the smarter/better \"*\", but I'm pretty sure that merging this PR could result in a tech support disaster. \nI can't think off the top of my head how to test this yet, I suppose maybe with a dummy extension of some sort, but Google doesn't take too kindly to uploading bogus extensions to the webstore. Anyone got any ideas?\n. how embarrassing, thanks for the report!\nthis is a result of us not adding night mode styles for the popup, totally our bad... we'll fix soon!\n. @int3h this is the second rather perniciously worded issue you've submitted recently.  I understand you're frustrated, but the passive aggressiveness isn't needed.\nFor reference, the PR title in #3192 is rather absurdly worded, and there's a fair amount of misunderstanding in it as well.  You got the benefit of the doubt because we empathize with your frustration, but combined with this post it seems it's time to address you personally.\nSo here's the deal with Safari and why there are more problems in that realm:\nFirst, we are still attempting to support Safari, but Apple has rejected one submission (for trademark issues despite the fact that we have a license to use the word \"reddit\" in the extension), and indefinitely held the other without any response.\nSecondly, Safari is becoming progressively harder and harder to develop for because of increasingly frustrating requirements from Apple.  The latest one was that we had to install a beta version of OSX just to be able to continue development.  This isn't possible for all people who contribute to RES because Mac hardware is expensive, and because in some instances (mine included!) we can't upgrade our work machines to a beta OS just to continue working on a hobby project. It could interfere with dev environments we use for work, etc.  This is why support for Safari has been slower - in major part due to Apple continually moving the goalposts on what we must do just to develop a free extension.  See also: having to now pay $100, having to now use Xcode even when we're developing a pure, javascript-only extension.\nThe suggestion in the other thread that Apple rejected RES for Safari because it was in a state that completely didn't work is an insult to the team of people who work their tails off keeping RES working.  Of course it worked when I submitted it, and that bug you pointed out didn't exist when we submitted RES to Apple's store.\nThe team members who replied to you were, quite frankly, more polite than they needed to be given your smart-alec PR title.  The title of this issue is also worded in a similar manner and shows a total lack of empathy or even basic politeness.\nThis sort of behavior is toxic to the open source community. Should I see continued posts from you worded in unproductive, aggressive fashion like this, I will simply block you (and any other users behaving this way) from submitting issues to our repo as it is detrimental to the team working on RES.\nThis isn't \"to protect their little feelings\", mind you. This is because rude behavior such as this chips away at peoples' motivation and happiness working on a project. You're asking people to do work, for free, on a product you use -- for free. \"Don't be a jerk\" isn't a tall order.\n. > I think my frustration stems from hearing that Safari support was being worked on, and getting my hopes up that RES was always just on the verge of working in Safari again, once Apple approves it. Then I try to install and run the current code myself, and find that it has been broken for three months, on top of other bugs. The frustration comes from being led to believe it was all on Apple, but then seeing the code has a long way to go on Safari, and nobody seems to be working on it.\nBelieve me, I understand your frustration.  Unfortunately very few of us are able to work on RES for Safari now due to their new and annoying barrier to entry.  Before we push anything to the store, we DO get Safari working and test things at a cursory level.  To be fair, we may miss a test here or there because Safari seems to be the only browser anymore with frustrating/obscure implementation quirks (such as the drag to resize one) that are unique only to that browser.  \nThe master branch should always be expected to have some bugs, on all browsers, because it's always in flux.  We push code and break things all the time because not every contributor can test on every browser.\nI appreciate your willingness to look inward and acknowledge your previous tone / choice of words.  It is my goal as the owner of this project to foster an environment that encourages people to contribute, so it's important to me that I do everything I can to make sure that people are not discouraged from helping. Thank you for understanding that, it sincerely has made my day.\n. having been absent for so long due to being busy with work, I feel bad even chiming in because I feel less like \"owner\" than I once did... but I do tend to agree that adding not-actual-javascript syntax could be a concern for the following reasons:\n- how long will this project exist / be supported?\n- does the benefit(s) it provides outweigh the higher barrier to entry for open source contribution (people have to learn a new thing)?\nI realize a lot of work has been done toward this and I wish I'd voiced my opinion earlier... I'm not saying \"no, don't do this\", but I do think it should be discussed before it's ultimately merged (or not merged, I suppose)...\n. my apologies for causing alarm with my concern, I'm speaking from a place of both ignorance and being disconnected from the project a bit... you make a good case here, thank you for laying it out and getting me up to speed!\n. hmm, that's especially weird because after one load, it ought to be cached by the browser and not consistently cause slowdowns... maybe I need to adjust a header or something.\nI don't have time to dive into the network requests at the moment, so I'm throwing that out as a comment in the hopes someone can peek at it?\n. how about we show a picture of the button, and it's roughly like \"in order to add the ability to expand content from this site, with a button like {this one} ...\" ?\n. how about we show a picture of the button, and it's roughly like \"in order to add the ability to expand content from this site, with a button like {this one} ...\" ?\n. There are reasons not to make this an option, we should discuss before doing work. \n. let's be fair/honest here: \"jarring\" is an awfully strong word for a background tab opening up.  it's not like it takes away your focus or anything.\n. yep, it's definitely background.\n. There are other reasons why we open the what's new page besides telling people about new features, which I realize some of you just flat out aren't going to like, but they are reality:\n- When users have no idea that RES updated, our tech support requests are likely going to be more confused, poorly written and frequent than they already are\n- The what's new page is our ONLY source of analytics for knowing how many users we have and on what mix of browsers, etc - in part because the mere mention of throwing analytics into the extension, even with an opt-out, was met with rage (and please, please do not suggest opt-in analytics, that defeats the entire purpose of analytics - it wouldn't be nearly as useful)\n- The what's new page is (well, was, we still need to add it back on the new website) our only vehicle for actively pointing people to the fact that they can contribute to RES (via money and/or code).  Yes \"people can seek that out if they want to\", but the amount of donations RES sees is already extremely paltry as is - and while this is absolutely not a money making venture, being able to provide beer/coffee money to the people busting their ass to make this product better is not something I'm willing to just write off / forget.  We already know anecdotally that the vast majority of RES users rarely/never open up the console, so even that isn't a great spot to draw attention there. We could, in theory, add a different sort of nag, but tying it to \"work was done to make RES better\" seems sensible in terms of timing.\nWe're talking about a background tab that doesn't steal focus from what you're currently doing, and it opens somewhere between maybe 3-6 times per year here. The information / benefit it provides us, in my opinion, far outweighs the vocal complaints of annoyance from a passionate few people.\nThe vast majority of the time, I'm all about listening to the users and giving them what they want - but sometimes I feel like people are overblowing really tiny things, and we're going to create a culture of \"everyone who yells enough gets what they want\" when in reality we should be prioritizing things based on a combination of users needs, depth/breadth of impact, and also our own needs as developers.\n. I can't fathom a scenario where the same people complaining about a background tab that doesnt steal focus from what you're doing are suddenly ok with a growl or other ui popup. They'd likely complain even more. \n. No. We don't specifically \"use it for telemetry\" and while I understand how you arrived at that conclusion it's not really a valid thing to complain about even if we had put it there just for telemetry. \nFirst and foremost, anyone concerned about privacy won't be sending us data / telemetry anyway because the website is hosted on github pages (so we have no server logs to speak of) and we simply use Google analytics to see who is visiting the site, which is blocked by many ad blockers and privacy tools. \nWe don't gather data or even look at Google analytics all that often, but sometimes we are posed with a question such as \"why won't you support opera 12? I don't want to upgrade!\" and being able to look at Google analytics and see that that's just 0.01% of our users allows us to make an informed decision not to spend more time on it than its worth. \nHaving basic (yet still arguably somewhat flawed) information about who uses our free extension isn't some nefarious evil thing. We don't make money. We don't sell your data and in fact have turned down lucrative offers to do so, so nobody is in any position whatsoever to suggest we are doing anything \"bad\" by having google analytics on our website. \nSecondly, the what's new page was never intended to be a source of gathering that data. We just have had google analytics on our site since day one because most web developers want some idea of who is visiting their site. Wanting to have some decent estimate of our audience isn't some sort of crime. It's basic product development, even at the hobby level. \n. Crazy, probably stupid idea for migrations that is probably too much work but I want to blurt it out anyway... \nWhat if we had a feature for migrations to create a dialog that appears outlining the migrations that were done and giving the user the option to view those settings as if it were a mini slice of the console with a \"setting was X\" before each option... Ability to modify them right there?\n. Viewing on mobile so not easy to check but is this made optional? \nIf not we may need to make it so or do extensive testing. I could swear we forced https for imgur a year or two ago and it caused problems for lots of users. It is possible I'm misremembering, but I swear we had problems related to forcing https \n. On review of the linked examples (tumblr/deviantart/github) - the attributions are indeed on the bottom.\nIf I'm reading this thread correctly, my understanding is that it's being suggested they be put at the top instead of bottom for wikipedia?\nwhy is that?\n. On review of the linked examples (tumblr/deviantart/github) - the attributions are indeed on the bottom.\nIf I'm reading this thread correctly, my understanding is that it's being suggested they be put at the top instead of bottom for wikipedia?\nwhy is that?\n. with a common moderator complaint being that people don't read the rules especially on mobile (due to lack of sidebar) I also have a hard time supporting the ability to hide it.\n. I don't even have a machine that has / will have Safari 10...\n. yes, I believe so, to shield github pages from being overwhelmed with bandwidth usage.. there's a thing that pops up on the CSS editor box, but I don't know how thoroughly it works, especially seeing as /r/xboxone currently breaks RES again (with the Mass Effect theme)...\nthat's only ever going to be seen by a moderator who is editing the CSS.. also, I'd love to give users the opportunity to override...\n\nuser has used keynav before\nuser is on a sub that breaks/hides keynav selected entry\n\nRES detects this and asks the user if they'd like an override of some sort, or to disable the style. Sorry, Cordova isn't a thing that will happen for a few reasons:\n\n\nit's drastically more difficult than just making a shim\n\n\nperformance would likely be terrible, web-wrapped apps just don't perform that well especially when loading websites that aren't optimized for mobile performance\n\n\nthe screen real-estate on a phone or even a tablet are drastically different from that of a desktop browser, which would require a massive amount of rethinking/redesigning - this is why reddit has a mobile version of the site that looks vastly different from desktop\n\n\ntouch functionality would also be something we'd need to think long and hard about, even if the above weren't all huge problems (e.g. drag to resize images - not as simple on mobile)...\n\n\nwhile the idea of RES on mobile sounds good as a quick thought, it just wouldn't work well. Especially as compared to a well crafted mobile app (for example: I like Reddit Sync, personally, on Android).. will require internationalization.... Hey, thanks for contributing! I want to pre-emptively say we really do appreciate anyone who contributes code / ideas to RES.\nI do have a couple of concerns here:\n\n\nthis is a pretty niche need that could be easily satisfied with a CSS snippet, so I'm not sure how I feel about adding it to our ever growing list of toggles/options. A couple of years ago this wouldn't have been a real concern, but RES has grown really huge and we have to be careful about \"bloat\"...\n\n\nif we did decide to approve it, we should definitely not have the default value of this be true for 3 million users who likely do not want this on by default.\n\n\nI'll defer to other team members opinions if there's disagreement on whether or not this should be included in RES rather than making an executive decision.... Hey, thanks for contributing! I want to pre-emptively say we really do appreciate anyone who contributes code / ideas to RES.\nI do have a couple of concerns here:\n\n\nthis is a pretty niche need that could be easily satisfied with a CSS snippet, so I'm not sure how I feel about adding it to our ever growing list of toggles/options. A couple of years ago this wouldn't have been a real concern, but RES has grown really huge and we have to be careful about \"bloat\"...\n\n\nif we did decide to approve it, we should definitely not have the default value of this be true for 3 million users who likely do not want this on by default.\n\n\nI'll defer to other team members opinions if there's disagreement on whether or not this should be included in RES rather than making an executive decision.... Actually, I've thought about making it a standalone library before, during the time I was working on a HoverZoom alternative called BetterZoom, and I just never got around to it. I hadn't necessarily thought npm specifically, but I can see that being useful.\nI'd definitely support this idea. My preference would be that me and/or the RES team \"own\" the repo and the publishing of the module, but we'd certainly make anyone willing to make active contributions to it a collaborator. \nThe catch, however, is that it's a bit more complex than simply consuming a URL and returning embeddable HTML. It might make more sense for it to return metadata that is used to create embeddable HTML.  The HTML generated by RES is rather RES-specific, and what you really want is for an application to receive the direct URL to the file, and/or the metadata required to wrap your own player or iframe around something. That way, it still has control over the style, markup and output.\nThoughts?. Actually, I've thought about making it a standalone library before, during the time I was working on a HoverZoom alternative called BetterZoom, and I just never got around to it. I hadn't necessarily thought npm specifically, but I can see that being useful.\nI'd definitely support this idea. My preference would be that me and/or the RES team \"own\" the repo and the publishing of the module, but we'd certainly make anyone willing to make active contributions to it a collaborator. \nThe catch, however, is that it's a bit more complex than simply consuming a URL and returning embeddable HTML. It might make more sense for it to return metadata that is used to create embeddable HTML.  The HTML generated by RES is rather RES-specific, and what you really want is for an application to receive the direct URL to the file, and/or the metadata required to wrap your own player or iframe around something. That way, it still has control over the style, markup and output.\nThoughts?. We strongly advise against running old versions of RES and disabling auto\nupdate.\nAdding the ability for the extension to send the same cookies you're\nalready sending in non-extension http requests is not any sort of\nlegitimate security or privacy risk. Running outdated versions of the\nextension will mean bugs, no new features, and guaranteed eventual\nbreakage. Not to mention should there be any security updates you will not\nreceive them.. Hello there...\nIn the past, before RES sharded the user tag lists (for storage/speed reasons, not \"political\" reasons), they were honestly mostly used in abusive/negative ways.\nWhile we try to generally be agnostic about feature adds, we get a little concerned when features may be misused, and generally try to stay away from it.  I think this would definitely tread close to the line of \"too potentially controversial\", but I am open to conversation about it.. did you ever add www.reddit.com to your list of approved 3rd party cookies? That has been the solution for (almost) everyone we've seen so far...  I know only of one person besides you who claims they added the exception and it still doesn't work - but we've not been able to duplicate the problem.\nit's very important that www.reddit.com be added to exception list due to the bug linked above - there's simply no other way to make it work.  \nOne last person who couldn't get it working even adding the exception said they then disabled Ghostery and it worked -- so you might have to look at doing both of those things.. for what it's worth, I think that looking into the feasibility of supporting future ESRs (when there's not such a major architectural change like webextensions) might not be entirely off the table -- but it may have to be addressed on a case by case basis...  Supporting an ESR may essentially be like supporting n+1 browsers depending on how much has changed, and it can be a ton of extra work to do all of the necessary testing (and keep in extra shim code, etc)...\nI like the idea of supporting ESRs, but amount of work to practice that, weighed against what a small percentage of our users use ESR, sometimes may make it impractical.  I think it's something we might \"strive for, but not promise\".... we're aware, but it's definitely a false positive. That's a CVE that's applicable to Microsoft Edge.  See a bit more info in this thread: https://www.reddit.com/r/Enhancement/comments/7qgc2t/res_popped_a_virus/\nfor that reason, I'm going to go ahead and close this as it's sort of a \"wontfix\" - seems a problem with clamAV, not really RES. We do always appreciate the heads up, though, especially on something that could be serious! Thank you!. For security and compatibility reasons we do not endorse downloading old versions and/or disabling auto update... . does box-shadow make more sense here than outline, actually?. whoops, my bad, you're right! sorry about that. your browser should have this built in, and it should work for all websites - which is better than just having it on reddit!\nctrl-+ (or on a mac, cmd-+) is usually a shortcut key to increase the size (and - decreases, of course). > Please fix this\nyou have deleted and re-posted this comment several times now.  it's not helping anything. contribute a fix yourself, or stop commenting.. > Please fix this\nyou have deleted and re-posted this comment several times now.  it's not helping anything. contribute a fix yourself, or stop commenting.. I'm also not very comfortable with this. If it's the price way have to pay for support, I'd consider dropping support as the preferred option right now.\nI don't see why we'd be responsible for providing telemetry that a host can already track on its own via API hits (why do they not track that?), unless they're also wanting us to provide stop/play/pause/repeat events etc - which is a big ask, and in that case an SDK should be provided even if I were OK with providing such events.\nbasically, while I may not fully understand the reasons we're being asked for telemetry, I'm also not sure that any reasons justify it in my mind.\nit is absolutely right, of course, to put this up here as an issue for the community and core developers to discuss, and I laud @andytuba for doing that, to be clear. My tone is a dismissal of the API requirement, not of andytuba rightly putting the new requirement up here for discussion!. I think I agree on that one! Unfortunately there's just no good way to\nmessage this without the fearmongering tone of Chrome's dialog - which,\nwhile technically true, doesn't reflect what RES is actually doing. :-\\\nOn Fri, Dec 14, 2018 at 9:28 AM larsjohnsen notifications@github.com\nwrote:\n\nI realize now that this will only changes the declared permission \"Read\nand change your browsing history\" to \"Read your browsing history\", which\nmay not be worthwhile for the added trouble this makes.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/5003#issuecomment-447358723,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AATws_a-KF9xKdlAQ41oqNPvDoXeoPZuks5u48ORgaJpZM4ZOeys\n.\n. If someone is able to submit a fix that's not disruptive to the codebase as-is, doesn't add cruft / technical debt, I'm certainly open to it ... we just don't have the resources to prioritize this above other things (bugs, redesign compatibility, etc) right now.. and of course we can't guarantee to maintain / test that fix as the core team.. Just to make sure: have you tested that the .subreddit selector works as intended? I can't recall why it was p.titlerow > a ... maybe back when this was written that class wasn't applied or something... \n. this isn't always guaranteed to be valid from site to site, so I'm not sure how comfortable I am adding this in.  it's likely uncommon that m.* isn't a mobile site, but it can happen.\n\nalso, if we're going to add anything that automatically redirects users, I think we need to make it an optional feature as it may frustrate some users.\nwould certainly be interested in feedback from others... @andytuba, @gamefreak, @mc10 ?\n. I agree here, and I would add that if the use case here is to redirect\nspecifically from reddit's mobile site:\n1) .reddit.com should be included in the check, in case RES ever runs\n(non-reddit-dom stuff) off of reddit.com\n2) consider including i.reddit.com because that's also a mobile URL for\nreddit...\nagree, this needs to be toggleable / optional (what module fits best, I'm\nnot sure!)\nOn Thu, Dec 19, 2013 at 12:55 PM, Kevin Ji notifications@github.com wrote:\n\nIn lib/reddit_enhancement_suite.user.js:\n\n@@ -157,6 +157,14 @@ if (typeof Function.prototype.bind === 'undefined') {\n    };\n }\n+//if mobile version of page, redirect to desktop version\n+if(window.location.host.match(/^m./)){\n-    var a = document.createElement(\"a\");\n-    a.href = window.location;\n-    a.host = a.host.replace(/^m./, '');\n-    window.location = a.href;\n  +}\n  +\n\nPersonally I don't believe it is the responsibility of RES to redirect the\nuser to the desktop site. There are two possible scenarios:\n1. The user wants the mobile site. This change would prevent them\n   from using it.\n2. The user does not want the mobile site. It is easy enough just to\n   remove the m from the URL.\nI personally think that if this is a feature, it should be toggleable,\ndefaulting to off.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/682/files#r8479393\n.\n. I haven't checked, but does gfycat.com not support CORS?\n\nif it does, I would strongly prefer that permissions not be added here because with CORS, permissions aren't necessary.\nif it does not, I would prefer that optional permissions be used - as we've had lots of problems with users who do not understand the permissions dialog freaking out, accusing us of \"selling marketing data\" etc because the Chrome dialog is rather intimidating and unclear.\n. also, any reason *.gfycat.com wasn't used here like it is in other manifests?\n. what's the reason for the 500ms delay here, exactly?\n. there's an awful lot of code in this onload... probably best as a handler function I would think\n. tiny, tiny nit, but we should have a space between if and (\ni'll merge this and fix that though :)\n. hmmm this is already in the source, isn't it?\nI can merge and de-dupe if need be... curious how this got in twice, though, weird.\n. does gfycat support CORS?\nif not, can it?\npeople freak out like crazy when the Chrome permissions dialog comes up.\nAt the very least, we should make this an optional permission like twitter so the box only pops up when people try and use this.\nwith CORS support - we don't need permissions in the manifest.\n. I think I might prefer it if we have site specific branding CSS etc in their own files rather than the master res.css just for organizational reasons.\n@andytuba what do you think on this one?\n. my JS Lint rules do not like this sort of shortening - it's preferred to leave as is with a full { } included :)\n. same thing here (jslint complains) - did you change this? or are you just on an older version of this file and need to rebase?\n. I think these can be removed from all browsers now, not just chrome\n. same here, etc..\n. I'm fully behind the other fixes, but I'm not sure if we should touch SnuOwnd or not.\nMozilla sometimes checks the MD5 hash of external libs that we include to make sure we haven't modified them to do anything shady...\nif this PR went to @gamefreak and he included it, then we pulled it over, then i'd do it without question.\nThat's up to him if he wants to accept the style changes!\n. actually this should probably still be isOpera ... \nit's late and I'm unable to sleep, so I could be mistaken here, but I'm pretty certain that OperaBlink reports as \"isChrome\" and any isOpera statements are just stuff that wasn't cleaned up / removed from Opera 12.* support.\n. why the ID change here? Just cleanup because it's probably better to match, or does this have anything to do w/the Opera support changes?  The former is totally fair/valid, just checking :)\n. totally nitpicky here, but we strongly prefer if (foo) { bar } syntax with brackets. I know we've let it slide now and then without cleanup, but my JSLinter gets grumpy about the abbreviated syntax here. \n. i see what you're doing here -- same question as above: just cleanup because this is in your opinion a cleaner/better approach than break? or does this tie in at all to any Opera specific behavior?\n. ... why the function name change here?\n. sorry, serves me right for reviewing things at 4am because I couldn't fall asleep.. insomnia is bad.\nin retrospect -- wow... how the hell did this ever work? and it has worked for years. my brain hurts.\n. would it not be more efficient to do this with CSS?  For example:\n.side small { display: none; }\n. I suppose this might be a tricky one to do with just CSS, but it might make sense to adjust RES's output to wrap this in something we could hide with CSS, rather than use DOM manipulation like this to remove it, what do you think?\n. sorry I haven't had the time to comment on this 'til now...\nthis implementation won't work in some cases. take, for example: youtube.com and youtu.be -- both should use the same sitemodule, but this implementation would require 2 separate sitemodules. That's why I didn't end up doing it this way in betterzoom.\nit's a stylistic preference, of course, but I'm not entirely in love with having a sitemodule called \"youtu\" that is just an alias to the youtube one.  Mostly I'm thinking about coming back to it 6 months later and scrolling around -- in betterzoom, there's a \"domains\" list that works similarly, but essentially auto generates the mapping of domain to sitemodule.\nI think I'd prefer we modify and go that route for readability. I think it's nicer to look at the sitemodule that handles \"youtube stuff\" and see a list of domains it applies to instead of having to search for a sort of \"domain fragment\"... thoughts @andytuba ?\n. my only concern here is that I'm not sure if github will be happy with us doing this. I think technically we're not supposed to host / hotlink content on github.\nbeyond that - fantastic PR! We just need to decide on a place to host that probably isn't github.\n. does this gfycat endpoint not support CORS?\nthis is unfortunately a huge problem due to Chrome's overzealous permissions dialog.  I'm really, really hesitant to add new domains because what ends up happening is RES gets turned off and chrome users get a big scary (unnecessarily so) warning...\nif this endpoint supports CORS, we don't need a permission listed here.\n. I should add: the solution here would be to make it an optional permission ... it's a PITA to implement, but you can see an example of it with twitter expandos.\n. yes, anything running on all comments should use chunking or UI will freeze on large pages\n. ah my bad.. max 100 is probably fine to leave as-is\nOn Tue, May 13, 2014 at 4:39 PM, Andy Tuba notifications@github.com wrote:\n\nIn lib/modules/context.js:\n\n\n}\nif ((RESUtils.pageType() === 'inbox') && !isNaN(this.options.defaultContext.value) && this.options.defaultContext.\n  value >= 0) {\nthis.setDefaultContext();\n}\n}\n},\naddViewFullContext: function() {\nif(location.search !== \"?context=10000\") {\nvar pInfobar = document.querySelector(\".infobar:not(#searchexpando) p\");\nif(pInfobar) {\npInfobar.innerHTML += '\u00a0view the full context\u00a0\u2192';\n}\n}\n},\nsetDefaultContext: function() {\n$(\".bylink\").each(function() {\n\n\nwell, this function is only called on inbox. so max .. 100? but it\nwouldn't hurt to chunk\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1052/files#r12610307\n.\n. oye.. I reallllly don't like setTimeout hacks unless they're 100% necessary... do we understand why this hack works?\n. this module should actually come out, it's not going in to any of the builds\n. I know this is nitpicky, but please use spaces in your if statements, e.g.:\n\nif (foo === bar)\nnot: if(foo === bar)\nin fact, this motivates me to write up a contributor style guide!\n. taking this away may well be a non starter.\nunfortunately, several subreddits are abusing the subbuttons div...\n. it's effective. PM me on reddit and i'll send you an example.\nOn Fri, Jun 6, 2014 at 12:56 AM, githue notifications@github.com wrote:\n\nIn lib/modules/dashboard.js:\n\n@@ -855,7 +855,6 @@ modules['dashboard'] = {\n            dashboardToggle.setAttribute('data-subreddit', thisSubredditFragment)\n            dashboardToggle.addEventListener('click', modules['dashboard'].toggleDashboard, false);\n            $('#subButtons-' + thisSubredditFragment).append(dashboardToggle);\n-           $('#subButtons-' + thisSubredditFragment).attr('style', RESUtils.baseStyleProtection + '; z-index: 2147483646 !important;');\n\nI would like to see what they're doing with it, because I'm not sure that\nline will be very effective.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1191/files#r13477428\n.\n. for consistency, shouldn't we make this a utility module? @andytuba has done this on a few items...\n. I'm confused here, why even check if it's 19 and not just set it?\n. ^^ wat?\n. what will your code do for a browser that doesn't support one of these two formats?\n\nFirefox only supports MP4 on certain OSes.\nOpera doesn't support MP4 at all.\nSafari doesn't support webm at all.\nhttp://caniuse.com/#search=webm\nhttp://caniuse.com/#search=mp4\nthis is why we haven't added native mp4/webm support to date, because we need to work out what happens when your browser doesn't support it.\n. with a user base of over 2 million, this is pretty much a necessity, to be honest.\nwhen a video opens and fails to play, we're going to get loads of posts to /r/Enhancement / /r/RESIssues calling it a bug from users who don't understand what video format(s) their browser supports (and understandably so, they just want stuff to work)...\nI think we need feature detection in order to merge any PR relating to webm/mp4\nalso, am I incorrect that all links to pomf.se seem to directly link a mp4 or webm video? In this case, we don't really need a sitemodule but would probably rather do what we already do generically for links ending in jpg etc... there doesn't seem to be any site specific work being done here (e.g. translating a URL to a different one, or querying API data) unless I'm skimming too fast here?\n. not entirely sure I agree with setting a hard width here... I imagine you have your reasons, mind clarifying?\nsites like gfycat etc often support much wider resolutions and I prefer videos open to their native res, unless perhaps the user specifies otherwise.\n. thank you for this sort of housekeeping, it's appreciated :+1: \n. we'll want this out if we merge of course :-)\n. thank you for this, much appreciated... would just like the console.log removed and to understand your reasoning for the 600px width default for all videos, and this looks good to go. Really appreciate the contribution and your willingness to listen to my pesky feedback / issues :-)\n. > Certain videos are pretty wide and when opening it you have to scroll down to see the video controls\nHrm, I've been wanting to ditch the maxWidth and maxHeight stuff in this module for a while in favor of a \"fit to screen\" feature... I think that'd be a better solution than a hard width of 600px... that or at least for now we use the user's set dimension that we have today?\nAlso I haven't pulled/tested your PR, but does drag to resize work?\n. this.options.maxWidth.value and this.options.maxHeight.value can be used to set a max height and max width for the element - it's used on images now...\n. as for that example - it seems the placeholder that RES creates via makeImageZoomable isn't taking up space for some reason - might be a CSS issue... \n. heya @gavin19 any word on this one? :-)\n. new permissions in chrome cause us huge, huge headaches from a support standpoint (it disables the extension) and so they are pretty much a non-starter...\noptions:\n1) if that URI endpoint supports CORS, you don't need the permission anyway.\n2) use optional permissions like we do for twitter.  it's more work, but unfortunately necessary.\n. you can't just put it in the optional_permissions section - you have to\nrequest the permissions...\nsee how tweetexpando works... it's extra work, we might want to have a\nreusable \"request permissions\" function in RES or something although it's\nchrome specific, so, I dunno.\nOn Tue, Jul 1, 2014 at 2:55 PM, sgtfrankieboy notifications@github.com\nwrote:\n\nIn Chrome/manifest.json:\n\n@@ -119,7 +119,8 @@\n        \"http://img.photobucket.com/\",\n        \"http://backend.deviantart.com/oembed?url=\",\n        \"http://api.tumblr.com/v2/blog//posts?api_key=&id=\",\n-       \"http://noembed.com/embed?url=\"\n-       \"http://noembed.com/embed?url=\",\n-       \"http://pastebin.com/raw?i=\"\n\nThe URI endpoint does not support CORS.\nJust switched it over to optional_permissions but now it's failing at\nCORS.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1352/files#r14425693\n.\n. we should really probably not name this the same as Chrome uses since we support all browsers and eventually they'll get it too...\n\naddressBarToggleCSSButton maybe?\nprefer lowercase first letter like all other options, also.\n. the theory behind having these present without prefixes is that often it's eventually ratified as a standard and will stop working without the prefixes.\nit's fair to say based on that MDN article that that's likely far off in the future for this particular property, so I'm not against removing it, but I don't think we really benefit much from removing it besides having to react someday if/when they do finally recognize it as a standard... I think it might be best to just leave these in since they do no harm.  I'm not taking a hardline stance on it and am open to comments from others though - thoughts anyone?\n. hrm is there a chance of a race condition here? isEnabled() requires module prefs to have returned which is async, and getDocHTML gets called early to avoid problems with async delays...\n. i feel like the better solution here might be to create a tiny eventing system that modules subscribe to... moduleenabled and moduledisabled events, and night mode module cleanup on moduledisabled deletes localStorage item 'RES_nightMode' ... the whole purpose of storing it up front is to add it as fast as possible to avoid the flash of unstyled content\n. am I dense / lacking sleep?\ni can't see where notificationOpened would ever be set to true?\n. there's not yet! I was proposing some sort of a lightweight pub/sub system which isn't exactly a tiny task...\nI may be wrong about the possible race condition, to be honest (though I think I'm right!), I haven't had the time to go back and read the code more deeply and remember the entire sequence of things.\n. can you just toss a comment on there noting as much / how you'd use it?\n. any progress on @andytuba's request, or thoughts / concerns about it, @Monotoko ?\n. you gonna update this one? :-)\n. i know the odds are very unlikely, but we will need you to sanitize the photoId here to ensure there's no XSS vulnerability.\nJust wrap it in RESUtils.sanitizeHTML() and you should be good.\n. I'm not following the reasoning for adding 500px to the rejectRegex here, can you educate me? :)\n. the purpose of the rejection is to cut out URLs ending in jpg / gif / png that aren't actually pictures. photobucket, for example, has URLs like this one that will redirect to an actual page, so it's not a direct image link:\nhttp://s157.photobucket.com/user/loki993/media/boardssmall.jpg\nI don't think you should need 500px in here unless people ever link to 500px.com/somedir/somefile.jpg and it's not actually a direct image link... I couldn't find examples of people linking that way in a quick search but you may be more familiar than me!\n. okay, that makes sense then, it sounds like you're using it correctly I just wanted to make sure!\n. what's the reasoning for nightmode css and commentboxes css going in core?  if anything I'd have put them in modules, since it's module specific CSS.\nI'm not against maybe putting it in core, just curious on your thought process there!\n. @Monotoko - will you be able to come back to this soon? I know you're likely busy, so no worries, just checking in!\n. we actually used to offer this and so few people used it we ended up removing it - the main reason being that it actually caused a lot of problems once imgur started changing the number of characters in its hashes.\n@andytuba I can't believe you forgot ;-)\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/58eee751d5919dd549f48c3957ab9f0295f54dec/lib/reddit_enhancement_suite.user.js#L10046 for a look into ancient history...\nhow thoroughly have you tested this?\n. > Also, this shouldn't be a problem if imgur does change the hash length, as it dynamically appends the URL modifier based on where the .extension is.\nWell, the problem was actually detecting whether someone had linked a shrunken one...\ne.g. someone posts http://i.imgur.com/SOMEHASHh.jpg  where \"h\" there forces that particular size...\nRES needs to know \"that h is not a part of the hash\" - and that's the biggest problem we ran into - we couldn't be guaranteed to know because the size of the hash varied.\n. this is nitpicky, but please have spaces in your if statements... if (foo === 'bar'), not if(foo === 'bar')\n. it would be more efficient to reuse a regexp here rather than define a new one every time. we're talking micro optimization on a tiny level here, but still it would be best to update :-)\n. I understand your comment here but if the code is identical we should put this in a function rather than duplicating it\n. super picky micro optimization, but why not have this be the first thing we do? no sense running the regexps if we can't play the video\n. going by total instinct here, but I think this line might cause a problem on comments pages in a comment where there are multiple videos, for example... the .entry class is applied to each comment... can you double check / confirm?\npossible courses of action:\n- only perform this when RESUtils.pageType() === 'linklist'\n- actually check some info about the expando before you remove it\n. okay, I apologize in advance, I have lots of comments :-)\nI think we should pick a name other than \"html5\" - that's generic, and this isn't a new icon for all html5 videos, right?  Just for \"silent videos\" aka \"video-ized gifs\"?  There are still direct links to mp4 files and other content that serves up html5 video (medaicru.sh, for example) that have sound, and we don't really need those to have a separate icon - video is video.\nMaybe just .video-silent?\n. I think the concept for your new icons is interesting... it's not quite what I had in mind (I'd figured some sort of video + mute icon), but I think it can work. I suppose it's likely impossible to convey both \"video\" and \"mute\" in such a tiny space, so I think you made a smart choice!  The challenge is that the camera (not your fault!) shape looks an awful lot like a file folder so it kinda looks like a folder with a play icon... that's what you had to work with though :-)\n. I think what might be better here is to have .video and .video-muted or something.  We have to keep that distinction between videos with sound and videos without. To \"win\" on specificity you should be able to just do something like \n.expando-button.video.video-muted\nis removing the \"collapsed\" class harmless? I thought it needed to be there.\n. although a cute / amusing name, I'm wondering if we should really keep it?  ehhh it's funny. I should live a little. :-p\n. really minor nit here, but we should probably make value: 0, not string '0', no?\n. style nit, we prefer var declarations as a list:\nvar foo = 'bar', \n    bar, baz;\n. another style nit, because my js linter will yell at me:  strongly prefer full block if statements...\nif (foo) bar();\nbecomes:\nif (foo) {\n    bar();\n}\nI know these are minor things, but I'm trying to eventually (over time) get all of the code in RES following a similar style guideline/standard.\n. I haven't looked into this and I'm on the go at the moment, but the real question is just how much memory savings we have here and whether or not the benefit outweighs the risk (which there is a slight one of false positives with a bloom filter) as well as the overhead - hashing isn't the most inexpensive thing int he world, so it's memory at the cost of CPU, right?\nI have had no time or significant thought into just how much of one or the other we're using, but it's something we need to consider.\nRegardless, I absolutely 110% appreciate the time and thought you've put into this and the suggestion of a way to potentially make RES more efficient - this is great.  I've been familiar with bloom filters, but it never really occurred to me to use one in RES so the suggestion is certainly welcome!\n. hmm, I'm preeeettty sure this is safe, but I'm trying to think of a scenario where we might need to save anything more complex beyond just 'value'.... I don't think there is, and we could always make value a complex object if need be... but @andytuba @mc10 or anyone else, any thoughts on that before we merge?\n. I wonder if we should perhaps perftest this... it's getting kind of bananas with this number of querySelectors.\nmight it be faster to querySelector all links and scan them for a subreddit link? I'm honestly not sure, I'm up late / can't sleep and just postulating, but adding this many queryselectors is probably pretty costly.\n. sorry, I should add 2 things:\n1) @rageandqq thank you for submitting this PR!\n2) I'm not suggesting it wasn't already bananas before you added more to that list. :-)\n. I like the cut of your jib, sir.\n. @erikdesjardins I have to ask - I tried using IntelliJ with RES and I can't because it seems to not properly obey / update symlinked files when I save the main files (e.g. lib/modules/foo.js) - so I don't see the updates w hen I refresh the extension.  How are you addressing this problem, or is it unique to me and my setup / OS?  I reverted to Sublime for this reason instead of starting to take advantage of IntelliJ!\nAre you on OSX or Windows?\n. the symlinks work such that the extension loads just fine, it's just that edits with IntelliJ don't seem to propagate to the linked files, whereas edits with SublimeText do.\nusing gulp and copying files over each time sucks... requires a \"watch\" command which is lame, but I guess if I worked something into my workflow to automate starting that on save, maybe it wouldn't be such a PITA.\n. we were losing formatting before in FF, because of this very issue.\nwe can't include the script in FF, they'll reject it as you point out.\n. also note innerHTML use here. I know it's a get and not a set, but might it make more sense to test against textContent anyway?\n. ",
    "ghost": "Just popping this here so that we can report back to the original submitter when fixed. http://redd.it/md3ae\n. http://redd.it/n2qd1\n. Personally I don't like it or see it's relevance.\nA 'back to the top' button (to replace the home button that most users don't know about) might be a cleaner solution\n. Suggestion: Make sure to blur the location on posts.\nCool extension bud!\n. Suggestion: Make sure to blur the location on posts.\nCool extension bud!\n. Please post to /r/resissues\n. http://redd.it/14d98v for further information.\n. This can be closed. Duplicate of issue #221. Sorry\n. If someone can explain what it is from an end user's perspective, I'll\nhappily focus some testing around it when the builds come out.\nOn Fri, Mar 8, 2013 at 4:29 PM, Andy Tuba notifications@github.com wrote:\n\nI'll also put a tentative vote in for WebKitMutationObserver. When I\nflipped it on last night for a few hours, I didn't notice anything untoward.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14628898\n.\n\n\nRegards,\nTim Collins\nPlinkk Photography http://www.plinkk.com/:  Hampshire Wedding, Portrait\nand Event Photographers\nSecond Shootr http://www.secondshootr.com/: The Digital Shoot Assistant\nFor Modern Photographers\niPhone/iPod Touch App http://getsecondshootr.com/   |\nBloghttp://blog.secondshootr.com/\n|   Support http://support.secondshootr.com/   |\nTwitterhttp://twitter.com/secondshootr\n|   Facebook http://www.facebook.com/secondshootr\n. Thank you for your answers.\n@patricksnape Here is what GM pops up \n\n(sorry for the french parts)\n@honestbleeps Like I said I have performance issues with the XPI, for example expanding all images makes my whole browser freeze, while it loads instantly with the script.\nThanks anyway, I'll keep using the script and disable the concerned options for the moment.\n. @patricksnape Ho I get the idea now (sorry I don't know anything about JS!)\nSo I added those lines:// @require       http://github.com/honestbleeps/Reddit-Enhancement-Suite/raw/master/XPI/data/snuownd.js\n// @require       http://github.com/honestbleeps/Reddit-Enhancement-Suite/raw/master/XPI/data/tinycon.min.js\nIt works like a charm! Thanks you so much!\n. No problem, I'll just download all the files and reference all of them, thanks again.\n. Somewhat off-topic, but I know there were once plans (or it was at least\ntalked about) to be able to link directly to a setting using nifty URLs. Is\nthat in this too, or is that completely different from what you're doing?\nOn Fri, Mar 8, 2013 at 4:18 PM, Andy Tuba notifications@github.com wrote:\n\nDevil's in the details ..\nI'd like getting my settings-navigation feature branch in (mostly so tico\ncan switch from saying \"search /r/Enhancement\" to \"search the settings\",\nbut it can also wait for the next-next release. @honestbleeps, maybe I\nshould take out the watchURL/setURL functionality and just leave the core\nfunctionality for \"search\" and \"navigate to module/option settings\". Ideas?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/274#issuecomment-14628239\n.\n\n\nRegards,\nTim Collins\nPlinkk Photography http://www.plinkk.com/:  Hampshire Wedding, Portrait\nand Event Photographers\nSecond Shootr http://www.secondshootr.com/: The Digital Shoot Assistant\nFor Modern Photographers\niPhone/iPod Touch App http://getsecondshootr.com/   |\nBloghttp://blog.secondshootr.com/\n|   Support http://support.secondshootr.com/   |\nTwitterhttp://twitter.com/secondshootr\n|   Facebook http://www.facebook.com/secondshootr\n. You've made me a happy man!\nNext time you're in the UK, hit me up for a beer :)\nOn Fri, Mar 8, 2013 at 4:23 PM, Andy Tuba notifications@github.com wrote:\n\n@tico24 https://github.com/tico24 that's exactly what that branch does.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/274#issuecomment-14628546\n.\n\n\nRegards,\nTim Collins\nPlinkk Photography http://www.plinkk.com/:  Hampshire Wedding, Portrait\nand Event Photographers\nSecond Shootr http://www.secondshootr.com/: The Digital Shoot Assistant\nFor Modern Photographers\niPhone/iPod Touch App http://getsecondshootr.com/   |\nBloghttp://blog.secondshootr.com/\n|   Support http://support.secondshootr.com/   |\nTwitterhttp://twitter.com/secondshootr\n|   Facebook http://www.facebook.com/secondshootr\n. Yup, that's what I'm after\nOn Fri, Mar 8, 2013 at 4:30 PM, Patrick Snape notifications@github.comwrote:\n\n@andytuba https://github.com/andytuba I think what @tico24https://github.com/tico24is trying to say is could post a link of the form\nsettingsconsole/filters/flair to direct people directly to the console?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/274#issuecomment-14628961\n.\n\n\nRegards,\nTim Collins\nPlinkk Photography http://www.plinkk.com/:  Hampshire Wedding, Portrait\nand Event Photographers\nSecond Shootr http://www.secondshootr.com/: The Digital Shoot Assistant\nFor Modern Photographers\niPhone/iPod Touch App http://getsecondshootr.com/   |\nBloghttp://blog.secondshootr.com/\n|   Support http://support.secondshootr.com/   |\nTwitterhttp://twitter.com/secondshootr\n|   Facebook http://www.facebook.com/secondshootr\n. Actually. That's sorta my fault. My plan was to manually push the legit bugs into this queue.\nBut I got lazy.\nSee also: my attempts at the wiki. \nRegards,\nTim Collins\nThis email was sent using a mobile device. \nOn 9 Mar 2013, at 18:52, honestbleeps notifications@github.com wrote:\n\ntear it out, do a little testing and if we have to we can always put it \nback in. \nman I wish I had an automated system to \"push\" RESIssues posts to Github \nissues when they're legit... I need to better organize my todo list... and \nshare it with you guys. \nOn Sat, Mar 9, 2013 at 12:45 PM, Andy Tuba notifications@github.com wrote: \n\nheh.. \nafeea81https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/afeea81commit timestamp: 2012-11-14 T 14:53:13 -08:00 \nRES for Operahttps://addons.opera.com/en/extensions/details/reddit-enhancement-suite-2/?display=enlast release: Nov 15. \nWell, editing flair still works in Opera 12.14 on OSX after removing that \nwhole chunk. I'll investigate a little to see if I can figure out why \nexactly v4.1.5 needed it and why it's now broken in master, but I'm \ninclined to just tear it out and hope for the best. \n\u2014 \nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14668257 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. Could do something like this or similar for future ref\n\n\nhttp://i.imgur.com/ngKis3a.png\n. Not really. How can you not tell there are two there? If it ever gets a bunch of upvotes in /r/enhancement, then maybe. That took me about 6 minutes in PS.\n. Users want some NSFW stuff on their feeds too. The specific example I saw is that they want to see the subreddits that use the NSFW tag to prevent spoilers, but don't want the normal NSFW stuff in their feed. \nRegards,\nTim Collins\nThis email was sent using a mobile device.\nOn 14 Mar 2013, at 07:29, honestbleeps notifications@github.com wrote:\n\nhm, why not just avoid running filterNSFW if RESUtils.currentSubreddit() is in that options table?\nis this so it works on the homepage or /r/all etc? I'm not sure that's necessarily what users might want. I think (I may be wrong!) the idea is to allow NSFW posts when browsing that sub specifically.... so they never see NSFW on their homepage, but if they directly navigate to a NSFW sub, they can...\n\u2014\nReply to this email directly or view it on GitHub.\n. Makes sense to me. (I think). \n\nRegards,\nTim Collins\nThis email was sent using a mobile device. \nOn 14 Mar 2013, at 07:35, honestbleeps notifications@github.com wrote:\n\ngotcha... that makes more sense... \nI'd still perhaps suggest that we only do all of this DOM modification \n(adding classes) when necessary... so on homepage or /r/all ... \nwhen directly browsing a sub we can safely just not execute the function... \nthoughts? \nOn Thu, Mar 14, 2013 at 2:33 AM, Tim Collins notifications@github.comwrote: \n\nUsers want some NSFW stuff on their feeds too. The specific example I saw \nis that they want to see the subreddits that use the NSFW tag to prevent \nspoilers, but don't want the normal NSFW stuff in their feed. \nRegards, \nTim Collins \nThis email was sent using a mobile device. \nOn 14 Mar 2013, at 07:29, honestbleeps notifications@github.com wrote: \n\nhm, why not just avoid running filterNSFW if RESUtils.currentSubreddit() \nis in that options table? \nis this so it works on the homepage or /r/all etc? I'm not sure that's \nnecessarily what users might want. I think (I may be wrong!) the idea is to \nallow NSFW posts when browsing that sub specifically.... so they never see \nNSFW on their homepage, but if they directly navigate to a NSFW sub, they \ncan... \n\u2014 \nReply to this email directly or view it on GitHub. \n\n\u2014 \nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/301#issuecomment-14889920 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. In 4.1.5, it's the same with the NSFW filter. You can toggle it off, but not back on again without refreshing.\n\n\nI'm also not clever enough to know anything javascriptish, so this could well be a technical limitation.\n. I feel like this one would be decently easy if there were interest.\n. Nope all yours!\n. Isn't it generally a bad idea to use both onclick and dblonclick on the same element? \n. Disregard retarded comment.\n. Err.. for some reason, I seem to have the ability to merge your pull request into the master. That's not right is it?\n. I'm really not a javascript expert, so it's probably best I don't press the merge button.\nPretty tempting though :)\n. http://www.reddit.com/r/RESissues/comments/1c4rhl/bug_parent_hover_no_longer_working_in_this_version/\n. Can't seem to get it to play? There's at least two of us who can't seem to\nmake it play nice.\nOn Thu, Apr 11, 2013 at 3:25 PM, Gavin notifications@github.com wrote:\n\nWorks fine for me on a clean RES on Chrome 26 (stable) and Chromium 28\n(stable when it feels like it).\nI used\nworldnews/comments/1c3uj0/n_korea_missile_launchpad_moved_into_firing/http://www.reddit.com/r/worldnews/comments/1c3uj0/n_korea_missile_launchpad_moved_into_firing/as a test thread. Even loading comments within comments within comments it\nwas fine.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/351#issuecomment-16237579\n.\n\n\nRegards,\nTim Collins\n. Did you mean html?\nDoesn't inspec element just show the css? Can't seem to find the html there.\nOn Thu, Apr 11, 2013 at 3:38 PM, Andy Tuba notifications@github.com wrote:\n\nTim, it's failing for you, yeah? Could you right-click the parent button,\ninspect element, screencap the html and post that?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/351#issuecomment-16238471\n.\n\n\nRegards,\nTim Collins\n. Maaaan I'm stupid today!\nhttp://i.imgur.com/FFzrJb6.png\nOn Thu, Apr 11, 2013 at 3:48 PM, Andy Tuba notifications@github.com wrote:\n\nYeah, html. If you're on the Elements tab in the inspector, HTML is the\nmain pane on the left, CSS on the right. (That's for chrome. For Firefox,\nyou have to click a button on the inspector toolbar at the bottom.)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/351#issuecomment-16239200\n.\n\n\nRegards,\nTim Collins\n. Very much so. \nI've tried disabling it, restarting my browser and then enabling it (browser restart again) again too. \nRegards,\nTim Collins\nThis email was sent using a mobile device. \nOn 11 Apr 2013, at 20:26, Andy Tuba notifications@github.com wrote:\n\nquick sanity check: http://www.reddit.com/#!settings/showParent is enabled, yes?\n\u2014\nReply to this email directly or view it on GitHub.\n. Ideally, I'd like to extend that to an option to show all the RES settings\na user has.\n\nYou wouldn't want that in every post, but a debug button to insert it into\na comment would be useful.\nOn Fri, Apr 12, 2013 at 12:03 PM, Patrick Snape notifications@github.comwrote:\n\nSuggestion:\nAdd whether or not the user is using night mode to the list of config\ninformation in RESIssues. Nightmode seems to come with it's own host of\nissues and I'm wondering if automatically flagging whether or not a user is\nusing it would be helpful?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/357\n.\n\n\nRegards,\nTim Collins\n. Yeah, I saw it as a module only for /r/resissues. Some sort of giant 'post my diagnostic info' button that churns stuff out into a comment in that subreddit only. \nRegards,\nTim Collins\nThis email was sent using a mobile device.\nOn 12 Apr 2013, at 20:17, Patrick Snape notifications@github.com wrote:\n\nI'm interested in implementing this - but feel like it would be a separate module that only shows up for RESIssues and Enhancement. However, I'm reluctant to add a new module before we split the modules apart. Thoughts? @honestbleeps Shall I slap a pull request up for my module split branch? Or do we want to discuss the modularity better before we start splitting it up?\nAlthough, having thought about it, you might be waiting until you iron out all the hotfixes before splitting it up, which is fair enough really.\n\u2014\nReply to this email directly or view it on GitHub.\n. I think all.\n\nIt'll make it easier for you to maintain too because the defaults change from release to release. \nRegards,\nTim Collins\nThis email was sent using a mobile device.\nOn 12 Apr 2013, at 20:26, Patrick Snape notifications@github.com wrote:\n\n@tico24 Yeah, I can see from browsing RESIssues that this would be a truly massive boon. Would it be better to list ALL options, or just those that differ from the defaults?\n\u2014\nReply to this email directly or view it on GitHub.\n. I agree. It SHOULD be filtered. A little 'dude, you have your NSFW filter on' message is more than enough I think. \n\nRegards,\nTim Collins\nThis email was sent using a mobile device. \nOn 30 Apr 2013, at 16:17, honestbleeps notifications@github.com wrote:\n\nAre we considering it inappropriate because \"if you went to the detail page, you obviously want to see the content\"? If that's the case, I'm not 100% sure I agree it's inappropriate actually. Maybe we should remind the user the filter is on or something, but... shouldn't the content still be hidden since the filter's on?\n\u2014\nReply to this email directly or view it on GitHub.\n. Seeing https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/812 - I'm guessing this issue may also be resolved?\n. I'll try and have a look tonight if i can :)\n. Happy to take this one on.\n\nWould we want similar functionality for HTML5 video at all? (as there may be some expectation for html5 content to also not autoplay if a \"video autoplay\" feature is disabled.)\n. Sure, will have a look when i get home from work :)\n. Thank you.\n. @andytuba: https://www.reddit.com/r/CelestialTest1/comments/2plr9r/res/\nhttp://imgur.com/r/pcmasterrace/RJTyhYU\n. Bitdefender Wallet isn't malicious of course, the extension is just installed without my permission.\n. haha my CTRL + F failed :(\nWhen this will be released ?\n. @tswaters Any interest in continuing this feature? \n. Re: automatically selecting a time, we could go with something like http://sunrise-sunset.org/api as an additional option (perhaps named: synchronize auto transition with local sunset/sunrise times). \n. I'm working on this. Not ready to make a pull request yet.\n\n\n. \nThis is what I'm referring to.\n. I've kept the border and moved it to the ul element instead of .RESShortcutsEditButtons so that there is still a border when the ul is not empty.\n. I didn't think of that scenario.\nI used :only-child as I thought keeping it pure CSS would be neater.\n. Would adding [name=body] to findTextareaForElement's filter solve the problem without introducing too many false positives? I'm not familiar with the codebase, sorry. I tested it out on a live thread and an ordinary comment thread and it seemed to be fine. \n. I did do a search before opening the ticket.. to see if you were already aware.. so this will probably serve that purpose now. ",
    "signe": "Damnit.  It was not supposed to add all of those commits as one.\n. Something about this commit breaks the shortcutbar display on user profile pages.\nThey work properly in commit cf7aa71b20c76a7fa236d12817e78dbcad6d7dcb, but breaks in the next commit (88bf394b8963db05448c5d7434e24246f979abd9 - this one)\nI'm not seeing any errors thrown, so I'm not sure where the error is occurring, but it's definitely due to this commit.\n. Not much to show except my subscribed subs.  :p\nIn cf7aa71 the RES shortcut bar works, in 88bf394 it doesn't.  The default reddit shortcut bar is displayed.\nActually, it appears to be breaking expandos and other pieces, too.  Up/Down counters appear normally, but that's about it.\nhttp://i.imgur.com/ahu6E.png\nIf I \"git reset --hard cf7aa71\" and install that, everything is normal.  If I \"git reset --hard 88bf394\" and install that, everything is broken on user profiles.\n. I typically run Aurora.\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20120424 Firefox/13.0a2\nKeeps me up to date on breaking changes.\n. Located the errors - being obscured under the resources filter.  Definitely related to this change.\nError: konami is not defined\nSource file: resource://greasemonkey/runScript.js\nLine: 4658\nhandleKeyPress: function(e) {\n    if ((document.activeElement.tagName == 'BODY') && (!(konami.almostThere))) {\nkonami is being accessed before it's instantiated.\nError: rewind is not defined\nSource file: resource://greasemonkey/runScript.js\nLine: 7275\n\"rewind.p=0\" - this is the only place in the entire script that rewind is mentioned.  It's never instantiated as an object.\n. Really wish it would stop adding my origin pulls to the request.\n. This appears to have resolved the issues.\n. I do really like the idea, but I agree that it adds a certain number of hurdles to the development process.\nIn general, debugging doesn't change... you still have the compiled file which can be modified during runtime, but you would of course want to make changes to the original and recompile before doing a final checkin.\n. IMO, rebuilding via makefile is not necessary during debugging.  The process doesn't change at all.  It does mean that once you have finalized your changes, you need to move them into the raw files, compile, and verify that they work, but that's only necessary as a final step before checking in.\n. I see what you're saying, but I'll have to say \"yes and no.\"\nOne of the benefits about using the makefile and small files over just having the single huge file is that components like snuowdn (or whatever the new version was renamed to) could be included in the project in their un-minified state, and the make process could perform the minification.  For debugging, being able to flip a bit in the makefile and then run with the regular version of various dependencies could help identify issues.  (Like when I had the initial problems with snuodwn that nobody else could reproduce.)\nIf I'd been able to compiled with the regular version, it would have been (more) evident where the problem was, and certainly easier to fix.  As it is, the only code that we have access to is already minified, and debugging and resolving issues in minified code is nightmarish.\nIt does mean porting changes, but this is easy enough to verify - the compiled, ported version should equal your debugged-version, and a simple text comparison will show that.\nIn the end, I can't force this (and I'm not really trying to) - I'm just playing devils advocate.  Both methods have their advantages.\n. Minification can actually have negative execution performance implications, anyway.  We'd probably be better off if even the internal components (snuowdn, etc.) which are minified, weren't.  The real benefit to minified JS is in the download speed, which doesn't significantly affect this use because it's one-time.\n. See pull request #141.\n. ",
    "Protuhj": "I am setting up to compile this at work. I have a linux VM that I can compile in. I will continue getting it to work if you want to focus on other issues.\n. I have it converted to javascript, which is a 12,000 line file, and by no means beautiful code. Now I just need to figure out how to invoke the conversion.\n. I put the script here, so you can see just how ugly it is.\n. I haven't been able to figure out how to use the code in any useful way,\nhave you had any luck?\nOn Nov 29, 2011 10:05 PM, \"Alex Xu\" \nreply@reply.github.com\nwrote:\n\nI've managed to stab the thing down to 158,503 bytes using Google Closure\nCompiler (on ADVANCED_OPTIMIZATIONS, so it may be broken) instead of\nUglifyJS (oddly, using them together increases file size).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/12#issuecomment-2954348\n. Yeah, That's where my mind has gone to as well.\n. \n",
    "gamefreak": "How about 3k lines/78kB?\nSnuOwnd.js\n. I just noticed that you hadn't been copying  changes to the copies of reddit_enhancement_suite.user.js outside of lib but my commit updated them. Is that a problem? Should I recommit?\n. I just noticed that you hadn't been copying  changes to the copies of reddit_enhancement_suite.user.js outside of lib but my commit updated them. Is that a problem? Should I recommit?\n. Make script of some kind to copy them over, instead of editing the per-browser copies just edit the one in lib and run the script.\nAlso, I really approve of Hello72's idea of splitting reddit_enhancement_suite.user.js into separate scripts per module and then 'building' them into a single script before deployment/testing. While doing this would ruin any pending merges I really recommend doing so because in the long run it would greatly improve maintainability (prototype makefile). \n. Make script of some kind to copy them over, instead of editing the per-browser copies just edit the one in lib and run the script.\nAlso, I really approve of Hello72's idea of splitting reddit_enhancement_suite.user.js into separate scripts per module and then 'building' them into a single script before deployment/testing. While doing this would ruin any pending merges I really recommend doing so because in the long run it would greatly improve maintainability (prototype makefile). \n. I haven't been able to find any links that don't produce expandos, what links cause the issue?\n. I haven't been able to find any links that don't produce expandos, what links cause the issue?\n. I just checked 5 minutes ago in Chrome 16.0.912.63 Mac and Safari 5.1.2 Mac and it works perfectly.\n. I just checked 5 minutes ago in Chrome 16.0.912.63 Mac and Safari 5.1.2 Mac and it works perfectly.\n. It looks like you only merged one of the commits.\n. It looks like you only merged one of the commits.\n. - window.localStorage will save the data under reddit's domains not RES's. Is that what you really want? To store in RES's pool you need to use RESStorage.\n- Your use of m_chp.* clashes with RES's conventions. You may want to use modules['commentHidePersistor'].* for consistency.\n- About how much space does this use?\n. - window.localStorage will save the data under reddit's domains not RES's. Is that what you really want? To store in RES's pool you need to use RESStorage.\n- Your use of m_chp.* clashes with RES's conventions. You may want to use modules['commentHidePersistor'].* for consistency.\n- About how much space does this use?\n. I just remembered that I should remind you that you need to generate your own Tumblr API key, and copy the sprites for the gallery browser into the main spritesheet.\n. Closed in favor of new showImages implementation.\n. I'm not sure what you mean, Reddit's custom stuff should be included and the output is intended  to be completely identical to what Reddit provides.\nIf you want to modify, either edit and recompile or just use the uncompressed version.\nLink to an uncompressed version of SnuOwnd\n. You are confusing Sundown with Snudown:\nSundown is a javascript port of the original perl markdown parser.\nSnudown is Reddit's C based parser, and is an entirely separat codebase.\nSnuOwnd is my port of Snudown.\n. I'm not seeing it. \nCould you provide a screenshot?\n. What browser are you using?\n. Still can't reproduce.\nMozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:13.0) Gecko/20120424 Firefox/13.0a2\nSuggestions:\n- Double check if XPI/data/reddit_enhancement_suite.user.js is correctly linked.\n- Reload the browser.\n- Stop using a beta version, that's an excellent way of earning an admonishment in /r/enhancement\n. Hmm... I think this is mostly closure being retarded.\nThe offending uncompressed code is here.\nWhat seems to have happend is that closure noticed that when rewind was passed into a function, it's p property was always set to zero so it inlined that operation. Then a bug (in closure) caused it to not remove the assignment.\nI just noticed another associated bug, in cases where rewind.p==0 my slice calls end up as slice(0, -0) and we don't want that.\n. I do not know if it fixes this but the fix will hopefully be easier after dfde146c20126e7f3a60b4c0a6cb969902994c36.\n. Actually there is a fixed bug with inline HTML in 0a56b0d5415d719a5e442c1e1f2a049b9794165d. It may not be the best idea to merge that branch though, since that is where I was working on alternate ways of preserving links.\n. Fixed in dfde146c20126e7f3a60b4c0a6cb969902994c36\n. Being able to click on the thumbnail at all is barely on my mind. I don't think I have ever even clicked on the thumbnail and I didn't know that it was a link until I saw people complaining about it not purpling their links.\nThe big issue here a collision of mindsets. I tend to hang around a community that is highly art/artist oriented and considers attribution to be far more important than most subs do. Since I'm used to attribution being serious business I have been treating it as such, hence why I find linking back to the original more important than coloring the browser history.\nI expect that if deviantart didn't link back to the art page then you would see plenty of complaints about that too. \nIt's well known that you can't please everybody, but we need to try pick the way that pleases the most people. Since one of the nice things about computer programs is that they are easily reconfigurable, I say take the easy way out and pick both.\nJust pick the default.\n. Okay instead of tweaking things around more lets stop and think about what it does now and what it needs to do.\nAs of 0a56b0d5415d719a5e442c1e1f2a049b9794165d:\n- L+C opens the original, doesn't mark history.\n- The main link is set to direct, switches to original for clicking/selection, does not mark.\n- The thumbnail keeps the original, doesn't mark.\n- Expando marks, provides link to original.\n\n\nCreate a function to add a URL to the queue without needing to involve the image..\nMake L+C mark history on click.\nMake thumbnail mark history on click.\nMake the main link mark history on click.\n\n\nAm I missing anything here?\n. How about instead of queueing up URLs in the browser window, send the URLs to the background page for all browsers.\nThe background page could then send a foreground tab URLs one by one.\n. With regards to deminifying snuownd: While I am not really against including an unminified version, I would like to keep it at least slightly minified so people will go to the official copy of snuownd. Changes made to the RES snuownd but not the official snuownd run the risk of being overwritten when I update the official copy to match changes in snudown.\nIf you want it unminifed, then there should be a warning added.\n. This is interesting. The bug seems to manifest based on line length.\n. Fixed in #153.\n. I wanted to make some additional changes that I forgot to make.\nOn Apr 16, 2013, at 4:31 PM, honestbleeps notifications@github.com wrote:\n\nwhy the close? going to revise?\n\u2014\nReply to this email directly or view it on GitHub.\n. Re-opening with 2 additional commits. If the new ones don't show up just merge manually.\n. I'm using this issue to list the things I still need to do for the comment preview overhaul.\n- [x] Comment editor for wiki.\n- [x] Comment tools for wiki.\n- [x] Big editor for wiki.\n- [x] Sync markdown parser with upstream.\n- [x] Username display.\n- [x] Character counter everywhere.\n- [x] Escape key to leave editors.\n- [x] Show context/fade for the big editor.\n- [x] Open big editor using keyboard shortcut.\n- [x] Autocomplete users from page and tags.\n- [x] Fix the autocomplete popup's positioning for the Big Editor/wiki editor.\n- [ ] ~~Add extra coloring for the character counter if it passes 75% (maybe)~~\n- [x] If the editBar is too big, hide the overflow until hover.\n- [x] Fix sizing of the big editor's markdown <div> (it pushes the TOC to the left)\n- [x] Tweak big editor's scaling.\n- [x] Cleanup and testing.\n- [ ] ~~Possible rename of the big editor.~~\n- [x] Investigate gavin's settings issue. (http://i.imgur.com/9S3DSNk.png)\n. I'm confused... Wouldn't smaller numbers be faster?\nRegardless of which is faster I can say that SnuOwnd doesn't really try to be efficient. I just threw around string concatenation and string slices everywhere.\n\nAnd this is the sanitization function I was talking about.  As you can see, it overrides the callbacks and specifies custom flags and whitelist. This would be pretty easy to do as a modification at the C end.\njavascript\nfunction sanitizeHTML(htmlStr) {\n    if (!this.sanitizer) {\n        var SnuOwnd = window.SnuOwnd;\n        var redditCallbacks = SnuOwnd.getRedditCallbacks();\n        var callbacks = SnuOwnd.createCustomCallbacks({\n            paragraph: function(out, text, options){\n                if (text) out.s += text.s;\n            },\n            autolink: redditCallbacks.autolink,\n            raw_html_tag: redditCallbacks.raw_html_tag\n        });\n        var rendererConfig = SnuOwnd.defaultRenderState();\n        rendererConfig.flags = SnuOwnd.DEFAULT_WIKI_FLAGS;\n        rendererConfig.html_element_whitelist = [\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'span', 'div', 'code',\n            'br', 'hr', 'p', 'a', 'img', 'pre', 'blockquote', 'table',\n            'thead', 'tbody', 'tfoot', 'tr', 'th', 'td', 'strong', 'em',\n            'i', 'b', 'u', 'ul', 'ol', 'li', 'dl', 'dt', 'dd',\n            'font', 'center', 'small', 's', 'q', 'sub', 'sup', 'del'\n        ];\n        rendererConfig.html_attr_whitelist = [\n            'href', 'title', 'src', 'alt', 'colspan',\n            'rowspan', 'cellspacing', 'cellpadding', 'scope',\n            'face', 'color', 'size', 'bgcolor', 'align'\n        ];\n        this.sanitizer = SnuOwnd.getParser({\n        callbacks: callbacks,\n        context: rendererConfig\n        });\n    }\n    return this.sanitizer.render(htmlStr);\n}\n. - I looked at your examples in the browser and I see any differences in the unicode ones other than the link one.\n- The unicode issues are most likely rooted in how JavaScript handles characters instead of bytes. emsnudown is probably  making the conversion while SnuOwnd isn't. I feel like it could be more trouble than it would be worth to fix\n- The /r/all-stuff  issue was something I thought I fixed. I could fix that, but if SnuOwnd is just going to be replaced, then why bother.\n- RES deliberately waits until the user stops typing to re-render the markdown.\n. Neither the user tagger and the image viewer are applied to the comments in the parent popup. Adding compatibility (if desired) would require changes sufficiently broad to be out of scope of this branch. \n. Neither the user tagger and the image viewer are applied to the comments in the parent popup. Adding compatibility (if desired) would require changes sufficiently broad to be out of scope of this branch. \n. I was not fully satisfied with how it came out either. If we are going to make it act more like the others then we should unify the implementations.\n. I was not fully satisfied with how it came out either. If we are going to make it act more like the others then we should unify the implementations.\n. It has been brought to my attention that this is relying on behavior that is may not be standards compiant.\n. It has been brought to my attention that this is relying on behavior that is may not be standards compiant.\n. I had been setting it as this with  Function.prototype.call https://github.com/gamefreak/Reddit-Enhancement-Suite/commit/f9a1130fade81ca3f6a26da9d5e72c9c95942cca#L0R2829, but you can feel free to change it to parameter 1 or 3.\nOr I can do it, but I won't be able to get to it for a few hours.\n. I had been setting it as this with  Function.prototype.call https://github.com/gamefreak/Reddit-Enhancement-Suite/commit/f9a1130fade81ca3f6a26da9d5e72c9c95942cca#L0R2829, but you can feel free to change it to parameter 1 or 3.\nOr I can do it, but I won't be able to get to it for a few hours.\n. I've been meaning to get back into working on RES for a while but things keep coming up or I get distracted by something...\nPerhaps I will actually get back into it this time.\n. @andytuba @honestbleeps What is the opinion on filtering comments?\nAt the very least filtering on user pages where comments and posts get mixed together should work. But what about comment pages? For full comment filtering to happen I will have to tweak the wording of some of the conditions which can't be done after the feature is released.\n. Closing. Will create a separate issue for the new plan.\n. Can't you bind previousGalleryImage and nextGalleryImage to those keys in in the keyboard navigation module?\n. I'll look over it.\nI've only skimmed the changes so far but most of the look fine. Although 300 lines of whitespace changes is something that could probably be left alone.\nOf course, after that I'll probably want to check and make sure that I am up to date with reddit/snudown\n. ",
    "gavin19": "Ok, no problem.\n. The latter 2 patches are meant more as gentle reminders of user requests rather than glowing examples of JS.\n. Done.\n. Not currently, no.\n. If you use the reddit toolbar then the original DA link is stored in the 'srcurl', while the 'href' is kept for the toolbar link. Without the fallback to the 'srcurl' then the expandos are never created.\nThe fav.me links don't work for Chrome/Safari as s_quark and myself tested on Win/OSX, but they do in Firefox. This appears to be Webkit related and nothing to do with the patch.\n. Resolved.\n. Tried updating? The current stable for Linux is 26.0.1410.63.\n. Which issues? I don't often use FF so I've likely missed something.\n. Is that the same screencap I've seen before? I remember that ad specifically. I tried firing up FF 19/20 and refreshing the page, but no errors. I'm using an alt/test account that has no gold but has the spotlight option enabled.\n. Yeah, I just noticed that it's that border: 1px solid #666666 !important declaration, though that wouldn't be a problem in itself. For some reason, Adblock removes the inline style=\"display:none\" from the other 'queued' stubs which causes that accordion appearance. It's moot now since I removed that part and let it just inherit the border colour instead.\n. Inadvertently, yes.\n. It's not impossible, but not trivial for the average user. You can use the RES console to pass settings between instances of RES on any browser. Search /r/Enhancement for transfer and you'll get a lot of related threads.\nI also wrote this very simple Python script that can take a Chrome chrome-extension_kbm..localstorage file as input and output to the Firefox store.json type. Just copy the old Chrome settings file to the same directory as the script and rename to res.db. Running python chrToFF.py should output a valid Firefox-worthy replica.\n. Into /jetpack/jid1-xUfzOsOFlzSOXg@jetpack/simple-storage/\nThe Firefox profile folder location obviously varies between OSes.\n. Yeah, should have been clearer. Meant two at once jQuery-style, like .addClass('thing entry')\nI believe thing isn't needed at all. AFAIK it doesn't actually confer any properties anyway. Arguably entry isn't needed either since you've already got everything neatly contained?\n. Thanks. This has since been resolved by setting the z-index to auto once the console is opened, then re-applying the original value upon closing.\n. I have added a couple of commits since, the latter covers all those icons. Cheers.\n. Works fine for me on a clean RES on Chrome 26 (stable) and Chromium 28 (stable when it feels like it).\nI used worldnews/comments/1c3uj0/n_korea_missile_launchpad_moved_into_firing/ as a test thread. Even loading comments within comments within comments it was fine.\n. Thanks. This has since been patched - c9b542f284d63704e78a8acd4dbf65ed1b528a39\n. I have found that applying either an empty string, ie content: '' or content: none can coax some browsers with that issue into hiding the smudge of letters.\n. c07fd567f6c0fc15712cc1040255fea87f53ad17. I didn't bother with the PR because while it works fine, there seems to be some issues with videoTimes/Uploaded not being applied in all instances. I believe there is a known issue on Google's end regarding ids beginning with a dash, but those are rare.\nUsing the reddits shown in the example, http://www.reddit.com/r/redstone+MinecraftInventions, I tested the current build. Of 100 links, 70 were YT links but only 40 were assigned the times. In the patched version 59 of the 70 got tagged (which I only noticed this after the fact, so why the updated code is producing a more reliable tag rate I don't know.\n. I believe the limit is/was 10 when using that type of URL, ie separating the ids by |. I think there is an official batch method that would probably be quicker than either of those URLs mentioned and has a much higher request limit.\n\nmore videos than requested due to the nature of the 'q' parameter\n\nYou mean that if thisBatch contains 8 ids, and therefore 8 ids are added to the query URL, it can return more than 8 results?\n. Seems the batch method might be the way to go since it's possible to wrap up to 50 id-specific requests into one. There has always been a slight problem with that query style in that some videos will never return a response, but when queried individually, they do work. From my past experiments, a typical 100 link page on /r/videos would have ~90 YT links with maybe ~80 of those getting responses/tagged.\nI tried 500 links from several video-heavy pages and the most responses returned from any given 8-id request was 11 while most most were 7-8. Your given example, with 25 results, I'd imagine is a pretty edge case?\n. No worries. I made sure that the CSS is specific enough. We currently have nothing in RES that overrides it, except in night mode, which is deliberate. \n. I don't get the jerkiness unless RES is still working on the page. I just tested a ~600 comment thread and it took almost a minute to append all the save-RES/bitcoin links etc. During that time it was still jumpy, but after that it was smooth.\nFor the user docs link on the live page use this instead. Yours is missing the permalink part so you need to dig through the 'load comments' to find it.\n. This was patched a while back. 4.2.0.2 has the fix, so far that's Firefox only, or you can just build from source.\n. Which part? Seems fine to me.\n. Which part? Seems fine to me.\n. I see. When I saw the first comment was from 1999 I thought you linked me to the wrong bug.\nSo the expected behaviour is that it should be copyable, but it isn't, at least for the Fantastic Four that RES supports. For what it's worth, it is copyable in IE10 but not 'old' Opera, at least not 12.x. Presumably it'll be Webkit Opera from now on anyway?\n. I see. When I saw the first comment was from 1999 I thought you linked me to the wrong bug.\nSo the expected behaviour is that it should be copyable, but it isn't, at least for the Fantastic Four that RES supports. For what it's worth, it is copyable in IE10 but not 'old' Opera, at least not 12.x. Presumably it'll be Webkit Opera from now on anyway?\n. Totally forgot about the lightOrDark value. Touch\u00e9.\n. Totally forgot about the lightOrDark value. Touch\u00e9.\n. The \u00f6 character works fine in Firefox (4.2.0.2) but at some point in Chrome, after RESUtils.setOption is executed and the values are stringified out to the local storage, it goes awry. Maybe nothing, but the encoding of the sqlite that Chrome uses is UTF16le.\n. That's part of reddit, not RES. You should flag it at /r/bugs if it hasn't been already.\n. For those with the onclick already present, wouldn't it be more reliable to just use that instead of generating a click?\nI had some issues using click with find before and I had a simple test page I was using - here.\n. They're done that way to maximize specificity.\n. It is FF specific indeed. Seems safe to remove the workaround and uncomment the default method since the two bugs have since been marked resolved/fixed.\n. That's not going to fly because it'll make text stretch full width on comments, ruining readability for some users.\nMaybe something similar to the image expandos, like throwing a wrapper around just the video and set its min-height to the height of the video, then set the video element to position: absolute so that it ignores the width constraints. Example. Maybe even set a max-width so that it doesn't overflow on narrower screens.\nI see the video dimensions aren't sent when the request is made?\n. See https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/res.css#L937\n. Something to tinker with/tweak. http://codepen.io/gavin19/pen/aCvJH\nWorks in Chrome/FF/Opera. Should be Safari-safe too.\n. No problem, fine job. I didn't even think of Opera 12 to be honest so I skipped the -o. -moz is only needed prior to v16 but I suppose it does no harm to leave it in.\n. Should be fairly easy. Just iframe it Andy.\n. The subreddit manager module adds body { overflow-x: hidden; } by default, so the images won't trigger the horizontal scrollbars when positioned outside of the viewport.\n. Maybe drop in cover for #header:before/:after as some subs are using that already, and possibly\n```\nheader ~ .footer-parent\nheader ~ .footer-parent:before/:after\nheader ~ .footer-parent *:before/:after\n``\n. I think you meantnormal. There is no such value aswrap`. \n.banned-table { overflow: hidden; }\nmight better suit since it stops the table from wrapping or being forced below the float. Even if the 'reason' fields are overlapped a little, it's not really going to matter.\n. https://ssl.reddit.com/prefs/\nIn the link/comments options you can specify a threshold.\n. The top-level reply box or for replies to comments? I can't replicate this in Chrome/Chromium. Sounds like a float issue if the box is being pushed down to the bottom of the sidebar.\n. Yeah, that's the one.\n. Yeah, that's the one.\n. Seems the old_markdown styles are taking priority. I could have sworn I browsed some wiki pages to verify but it was the about pages. It wasn't anything I changed, just a new conflict.\n. All should be well now. The AskReddit stuff was down to the subreddit style rather than RES' deficiencies. I already PM'd a relevant mod about that.\n. Is the 'use subreddit style' checkbox in the sidebar checked? \n. I tested the dev edition and it works fine, though I noticed that I'd neglected pre blocks in the sidebar.\n. Looks better! Maybe step it down to 15px so it doesn't make the user bar any taller.\nMinor tweaks - : is sufficient for those pseudo-elements. We still need the webkit-prefixed variant for user-select but I can't see that it's needed in this instance?\n. I think it still needs that middle valign so it fits with the alignment of the other RES icons in the user bar.\nfont-size: 14px;\nline-height: 1;\nvertical-align: middle;\n?\nSomewhat related, but I think we should kill the extra bottom padding on #header-bottom-right to even it out. Currently 4px 4px 7px, when 4px would suffice.\n. When does this happen for you? On page load, or after scrolling down/back up?\nIf it's the former, it seems like it would suffice to set the default CSS to display: none; since toggle(show) will handle the show/hide anyway. No?\n. Just as a quick addendum. This only became an issue due to reddit recently (and pointlessly) adding the title class to the textarea. For years it has been\ndiv#title-field\n    span.title\n    div.roundfield-content\n        textarea\nso there only ever was one matching element.\nThis change has caught out hundreds of subreddits as they employed much the same CSS as RES does. For example, head over to /r/politics/submit and type into the 'Title' field. It gets capitalised, despite their CSS only intending to target the 'title' text above the text box.\n. Can you point to a sub that uses that CSS?. Yeah, purely by luck it actually melds nicely into nightmode.\n. Forgot all about this. Gmail was chomping some of my github mail. I'll close the request and you can implement it as you see fit. It only touches a tiny no of subs since most mods never bother with the srbar height, but seems harmless.\n. It was an old class for _e_xpando _b_utton _se_lf-text. Long redundant. \n. I'm AFK for today but I'm 99\u2030 sure it should have gone the way of the other border props. It's from the about page if you want to check it out. \n. There were quite a few instances of spaces. I'll convert everything to tabs when I'm done.\n. ",
    "blindman": "Should this be available as a separate entity than RES as a standalone?  I'm sure you would need to ask the users but keeping the option open of having one or the other may be better than choosing only one.\nPros: Less complaining about why RES no longer 'works' with Greasemonkey\nCons: More support for two different 'versions' of the same extension...\nI have yet to take the time to take a look at RES in depth so until then feel free to ignore me if some of my presumptions are way off base, I won't mind.\n. Well, I didn't mean to close it.  Sorry.\n. Yeah, I messed up on this commit.  My fault completely.  I have all the changes stored and seeing as this is not an important feature request or bug fix, I feel it shouldn't be an issue.\n. @erikdesjardins Yepp, def related.\n. ",
    "Dayofswords": "Nevermind, I'm an idiot. The guys bug had inbox/unread  in one instead of message/unread for both and i didn't notice\n. Nevermind, I'm an idiot. The guys bug had inbox/unread  in one instead of message/unread for both and i didn't notice\n. ",
    "nickdevereaux": "@honestbleeps I used an NTFS symlink to setup the Chrome extension. \nc:\\Code\\Reddit-Enhancement-Suite\\Chrome> mklink reddit_enhancement_suite.user.js ..\\lib\\reddit_enhancement_suite.user.js\n. Line 10044 for me\n``` javascript\nvar isImgur = (checkhref.indexOf('imgur.com')>=0);\n```\nis returning true because the domain is in the search keyword. I guess this needs to change to regex? Not sure what the speed impact would be. \n. Actually how about \njavascript\n.split('?')[0].indexOf('imgur.com')>=0\nWorks for urls with or without a '?'. \nEdit: Seems like this is done further down for other reasons...\n. I did consider that you'd envision this path. I have to lodge my disagreement to it on a few points though. \nYou'd be reimplementing the wheel: Imgur already have keyboard controls and layout. This embedded HTML already exists. \nAlthough there are obviously some disadvantages to my methods such as the iframe stealing keyboard focus, no resizing, it's ultimately your choice. I'd prefer to deliver it early in this state then swap over to the non embed but that might confuse users later. \n. Confirmed on Opera 11.61 on Windows Server 2k8\nThis pops up for a short period (200ms?) and vanishes:\nv4.0.3\n/r/EnhancementX\nAccounts\nComments\nFilters\nUI\nUsers\nAbout RES\n. javascript\nlocation.href.match(/https?:\\/\\/code.reddit.com/i);\nSeems to work. Can't find a guide on how to blacklist domains, only whitelist. Probably have to add this line around line 17489\n. ",
    "opeeba": "Can the NSFW toggle be accessed from commandline?\n. Awesome! Thanks for the quick response.\n. ",
    "andytuba": "not a bad idea, though.  @honestbleeps, any comments on adding \"nsfw [on|off]\" toggle in command line?\n. could attach a \"back to top\" button to the comment navigator, that seems appropriate..\n. Spin-off idea: adding a \"add comment\" button to the page info popup next to the (back-to-top) button which scrolls you to the textarea and puts focus in.. RES really only runs on reddit, not other websites.\n. Looks like this is triggered by:\nmodules.newComments.go: function() {\n    // snip\n    RESUtils.watchForElement('newComments', modules['newCommentCount'].updateCommentCountFromMyComment);\n}\nwhich depends on the MutationObserver, which is broken per #259.\n. i just checked (using the fix-editors fix I put in) and this looks fixed\n. Worked in Firefox and Chrome \u2026 but not Opera. =\\\n. fixed for Opera on andytuba:fix-editors\n. Issue can be closed?\n. @honestbleeps This appears to be fixed. I just checked in Firefox on OSX using what's currently in the github and the album does open to the correct image.\n\n...  maybe I shouldn't have screncapped the one single image that was all nazis..\n. @honestbleeps This appears to be fixed. I just checked in Firefox on OSX using what's currently in the github and the album does open to the correct image.\n\n...  maybe I shouldn't have screncapped the one single image that was all nazis..\n. It was fixed in 17b1db40a659c804ed479ea3b8b89fc533a1e0f6 by @gamefreak as part of the \"big editor\" changes.  The fix will go out in the next release of RES.\n. It was fixed in 17b1db40a659c804ed479ea3b8b89fc533a1e0f6 by @gamefreak as part of the \"big editor\" changes.  The fix will go out in the next release of RES.\n. Nevermind, gavin just showed me gamefreak's much better patch.\n. Try this CSS:\ndiv#siteTable .thing.spam { background-color: #FA8072 !important; }\nWorks in both regular RES and darkmode.\nLook up \"CSS Specificity\" if you want to know what I'm leveraging here.\n\nIncidentally, this kind of question would get more visibility in /r/RESissues, since it seems a lot of the support crew is logged into reddit more often than github.\n. It should work for any comment or post. Try testing it and report back if it needs tweaking.\nIf it doesn't need tweaking, then we can close this issue.\n. Ah, whoops:  #siteTable is just for posts.  #siteTable_blahblah is for comments section.\ndiv[id^=\"siteTable\"] .thing.spam { background-color: #FA8072 !important; }\nThat should work for you; I just tested it in my sub.\n. Which subreddit?\n. gorramn .comment .comment .comment rules.\nAlright, here's a clever idea that's only a little crufty:\ndiv#siteTable .thing.spam,   /* posts */\ndiv#siteTable + .commentarea .thing.spam   /* comments */\n{ background-color: #FA8072 !important; }\nIf the comment one breaks at a later point due to changes in the HTML, switch the + to ~.\n. Could also add a license.txt or #License section to the readme that simply says \"Check the userscript for the full license.\"\n. The RESutils.createMultiLock commits may cause merge conflicts when pulling #245 / #249.  I cherrypicked 53b0c53 and 7383812 from subreddit-style-menu-conflict into settings-navigation d6fd22f and 1a5370f respectively.  That block should be the same in both branches.\n. http://www.reddit.com/r/Enhancement/comments/1b2h6o/feature_request_opening_comments_in_a_new/\nhttp://www.reddit.com/r/Enhancement/comments/1848ky/feature_request_ability_to_open_comments_in/\n. The RESutils.createMultiLock commits may cause merge conflicts when pulling #245 / #249.  I cherrypicked 53b0c53 and 7383812 from subreddit-style-menu-conflict into settings-navigation d6fd22f and 1a5370f respectively.  That block should be the same in both branches.\n. dcd43be removes the dependence on RESutils.createMultiLock (and a yucky, unreliable hack), so I could roll back to before d6fd22f and re-do the useful commits after it if that makes merging easier.\n. dcd43be removes the dependence on RESutils.createMultiLock (and a yucky, unreliable hack), so I could roll back to before d6fd22f and re-do the useful commits after it if that makes merging easier.\n. Several people have reported in RESissues that FF19 with dark mode enabled\n(and I think AdBlock is partially to blame) that the spotlight ad at the\ntop of the front page goes a little crazy. Lemme go find a link...\n. http://imgur.com/a/3Eoyn\n. That screencap was from \"Front page ads are bugged\".  There's a different ad, same effect on another report.  Those guys are both using v4.1.2.\nThere's a report from a v4.1.5 user who is also showing same issue, different spotlighted item.\n. Yep, I'm reproducing it on OSX FF19 with AdBlock enabled - but disable AdBlock , it goes away.\nIt looks like the .thing.stub that all live inside the .organic-listing (spotlight) block -- AdBlock kills the display: none that reddit puts on there initially.  reddit restores their display: none if you click the [<] or [>] buttons.  \nAll the lines show up from .thing { border: 1px solid rgb(102, 102, 102) !important; } rule.  I think the easy fix is to change that to .thing:not(.stub) { border: ... }  or add .thing.stub { border-width: 0 !important; } or something, then double-check for .thing.stub elsewhere.\n. The fix will be released in v4.1.6.  Fixing it here in github doesn't push it to your local copy.\n. @honestbleeps I'm available for testing file splitskies on Safari 6, Chrome, Firefox, Opera on OSX -- I've got build systems set up for all those.  I'll eventually get a Win7 VM running with those, too.\nI also have a wild and crazy idea: letting other extensions push mini-modules (e.g. showImages expando data) to RES by triggering an event (\"showImage.RESExtend\") on the gear icon with the relevant data object (url match/replace regexps).  The timing might be a little tricky, though, plus security/fragmentation/distribution concerns -- so it may not be worth the effort.  \nAlternatively, following @patricksnape's idea -- maybe letting people add their own showImages hooks via RES settings.\n. @honestbleeps I'm available for testing file splitskies on Safari 6, Chrome, Firefox, Opera on OSX -- I've got build systems set up for all those.  I'll eventually get a Win7 VM running with those, too.\nI also have a wild and crazy idea: letting other extensions push mini-modules (e.g. showImages expando data) to RES by triggering an event (\"showImage.RESExtend\") on the gear icon with the relevant data object (url match/replace regexps).  The timing might be a little tricky, though, plus security/fragmentation/distribution concerns -- so it may not be worth the effort.  \nAlternatively, following @patricksnape's idea -- maybe letting people add their own showImages hooks via RES settings.\n. @patricksnape For Safari, this blog suggests clearing cookies this way (in the general case):\n```\nfunction setCookie(c_name, value, expiredays) {\n    var exdate = new Date();\nvar expires = ((expiredays == null) ? \"\" : \"; expires=\" + exdate.toGMTString());\ndocument.cookie = c_name + \"=\" + value + expires + \"; path=/\";\n\n}\n```\nI'll test that out tonight.\n. @patricksnape For Safari, this blog suggests clearing cookies this way (in the general case):\n```\nfunction setCookie(c_name, value, expiredays) {\n    var exdate = new Date();\nvar expires = ((expiredays == null) ? \"\" : \"; expires=\" + exdate.toGMTString());\ndocument.cookie = c_name + \"=\" + value + expires + \"; path=/\";\n\n}\n```\nI'll test that out tonight.\n. @patricksnape  Safari 6 works (well enough -- see below).\n  I successfully switched accounts (logged in on andytuba, switched to andytubatest, then switched back to andytuba).  Also, when I put the wrong password in, I successfully got the error message \"wrong username or password\".  \n*Visual issue: if not logged in, account switcher dropdown is not visible. It looks like the menu appears (snoo icon changes background color) but I can't see any of the rest of the dropdown .That's probably just some menial CSS issue, I'll try to fix it over lunch or tonight. The entire switcher menu is visible if you're already logged in.\n. @patricksnape  Safari 6 works (well enough -- see below).\n  I successfully switched accounts (logged in on andytuba, switched to andytubatest, then switched back to andytuba).  Also, when I put the wrong password in, I successfully got the error message \"wrong username or password\".  \n*Visual issue: if not logged in, account switcher dropdown is not visible. It looks like the menu appears (snoo icon changes background color) but I can't see any of the rest of the dropdown .That's probably just some menial CSS issue, I'll try to fix it over lunch or tonight. The entire switcher menu is visible if you're already logged in.\n. I'd be surprised if it weren't, from looking at your commit. I'll check both of them out later today (if you don't beat me to the punch).  I can definitely handle the CSS, I just dislike the Safari dev console.\nI'll also spot-check Firefox (apparently just upgraded to v19 today), Chrome 24/26, and Opera 12 on Mac just for completeness.\n. I'd be surprised if it weren't, from looking at your commit. I'll check both of them out later today (if you don't beat me to the punch).  I can definitely handle the CSS, I just dislike the Safari dev console.\nI'll also spot-check Firefox (apparently just upgraded to v19 today), Chrome 24/26, and Opera 12 on Mac just for completeness.\n. Oh, so close!    Try this instead:\nif (!this.loggedInUser || thisPair[0].toUpperCase() !== this.loggedInUser.toUpperCase() || this.options.showCurrentUserName.value) {\n. Oh, so close!    Try this instead:\nif (!this.loggedInUser || thisPair[0].toUpperCase() !== this.loggedInUser.toUpperCase() || this.options.showCurrentUserName.value) {\n. I'm not seeing the issue with the gear menu toggles in Safari v6.. can't think of anything obvious that would break it. Maybe you should send me your build? Or I could send you mine?\n. I'm not seeing the issue with the gear menu toggles in Safari v6.. can't think of anything obvious that would break it. Maybe you should send me your build? Or I could send you mine?\n. Oh, I see:\nfor (var thisModuleID in modules) {\n        if (typeof(modules[thisModuleID]) == 'object') {\n            modules[thisModuleID].go();\n        }\n        GM_addStyle(RESUtils.css);\n}\nMaybe that GM_addStyle(RESUtils.css) line oughta be moved above the for module: module.go() loop, as a defensive measure. Probably better than wrapping the module.go() in a try-catch, since that makes debugging difficult.\nedit: nevermind, I just remembered that RESutils.css is accumulated dynamically by the modules. Well .. that problem can be solved at a different time.\n. whomp whomp.\nI think I saw some RESissues reports about NER not working in FF19 -- is that related?  (edit: ... I may be making this up.)\n. Chromebug might be the way to go for debugging RES in Firefox.  I'm trying to get it running right now..\n. Strike that, Chromebug is way out of date. Venkmen is my next attempt...\n. How do you get Firebug to attach to RES?\n. More fodder on the MutationObserver fire.. [edit: 2013-03-08 bug report list moved to #272 where it belongs]\n@patricksnape, how are you coming along with that?  I can throw some brainpower at fixing it in Chrome (and FF too, I s'pose =p) tonight and this weekend.  \nSafari 6 seems to be doing fine, though. I'm using it as my primary now so I can find bugs and finally learn to love their inspector.\n. #272 seems to be an unrelated bug -- reddit's \"sponsored link\" block is hijacking the siteTable MutationObserver.  \nIt may well be what's breaking FF, too -- I'll look at that tomorrow night -- but I think they're separate issues.\n. I'll also put a tentative vote in for WebKitMutationObserver.  When I flipped it on last night for a few hours, I didn't notice anything untoward.\n. Could also try cleaning up RES's MutationObservers on unload per comment #6 on that chromium issue..\n. I see two problems:\nThe actual issue: Declaring var MutationObserver makes window.MutationObserver become undefined in RES's sandbox\nWhy trying to debug MutationObserver is a little weird:\nconsole.log(window.MutationObserver)\n // > null\n console.log(typeof window.MutationObserver)\n // > function\n console.log(\"\" + window.MutationObserver)\n // > [object MutationObserver]\n console.log(typeof (window.MutationObserver || false))\n // > function\nSo at least it's truthy.  It just doesn't like to be logged.\n\nI see a good solution: store the MutationObserver constructor in BrowserDetect.MutationObserver instead of the global scope.\n```\nBrowserDetect.MutationObserver = window.MutationObse[ ... ]ull;\n[snip]\nRESUtils = { \n    initObservers: function() {\nif (RESUtils.pageType() == 'comments') {\n         if (BrowserDetect.MutationObserver && siteTable) {\n[...]\n```\nI'll double-check that this doesn't regress the other browsers, plus throw in WebKitMutationObserver to see how that works, then push a patch.  (If anyone's bored, I'll be committing changes to ff-mutationobserver.)\n. #275  is just for Firefox.\n@patricksnape To enable MutationObserver in Chrome, uncomment L149 and comment out L151:\n// this.MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver || null;\n. We could do a \"sampler\" test by choosing four features -- one for each type of RESUtils.watchers -- and test it under whatever situations calls that watcher type.\nRESUtils.watchForElement(type, callback) subscribes to DOM changes on that type of watcher.  We can use that to track down each sample feature.\nRESUtils.watchers: {\n    siteTable: [],\n    newComments: [],\n    selfText: [],\n    newCommentsForms: []\n},\nFor an example of a set of a watchers getting called, look at RESUtils.initObservers:\nvar siteTable = document.querySelector('.commentarea > div.sitetable');\nif (BrowserDetect.MutationObserver && siteTable) {\n    var observer = new BrowserDetect.MutationObserver(function(mutations) {\n        mutations.forEach(function(mutation) {\n            // when a node is added on a comments page, check if it's a new self comment.\n            if ($(mutation.addedNodes[0]).hasClass('comment')) {\n                RESUtils.watchers.newComments.forEach(function(callback) {\n                    if (callback) callback(mutation.addedNodes[0]);\n                });\n            }\n        });\n    });\nSomebody wanna write up the test cases?  Preferably for features that are easy to spot, like image expandos.  Or I can do it in the morning.\n. @patricksnape Per #277 / #278, $.request seems superfluous now, so I removed that whole chunk.\n. Oh, that's apparently the specified behavior: \n\nTinycon gracefully falls back to a number in title approach for browers that don't support canvas or dynamic favicons.\nCurrently the library degrades to title update:\n- Safari 5\n\nWell, maybe I'll fork it to disable that behavior.\n. Fixed by #266 \n. Bear in mind that RES is only officially supported up to v4.1.2 and Safari 5.  I've been running a dev copy of trunk on Safari 6 with reasonable success, though.\nThat said, i stepped through it a little bit and it looks like RES isn't starting up in WebKit because it's not calling setUpRESStorage(...).  What's causing that, I will put off testing until later.\n. This is in RES v4.1.5?  I believe @gamefreak or @patricksnape fixed this and it's already been merged into hb/master for the next release.\n. I'm thinking of gamefreak's Fixed the raw HTML appearing in the image viewer commit, which adds the $.fn.safeHtml() call.  My dev copy of RES, which is up to date with hb/master, doesn't show the bug behavior anymore either.\n. @alexmarchant also fixed by the aforementioned commit, will go out in v4.1.6 release\n. thanks.  I think the root cause is #259, but I'll double-check that fixing 259 also fixes this.\n. @honestbleeps  it seems like a repeat of reddit issue #332 (fixed by  eef447871a, except with the sponsored link which appears on /r/all and large subreddits.  It may be related to reddit's recent change with promoted links, but I'm taking a stab in the dark because I'm not very familiar with reddit server code.\n\nOn /r/all or one of the large subs which show the \"promoted link\", there's a #siteTable containing the .promoted_link (sponsored ad) block.  RESUtils.initObservers attempts to attach a MutationObserver or DOMNodeInserted handler to the #siteTable post listings for RESUtils.watchers.siteTable, but instead attaches it to the promoted link's #siteTable:\ninitObservers: function() {\n    if (RESUtils.pageType() == 'comments') {\n        ...\n    } else {\n        // initialize sitetable observer...\n        var siteTable = document.querySelector('#siteTable');\n        if (MutationObserver && siteTable) {\n            var observer = new MutationObserver(function(mutations) {  ... }\n            observer.observe(siteTable, ...\nIn contrast, modules['neverEndingReddit'].go and modules['keyboardNavigation'].scanPageForKeyboardLinks both check for the sponsored link's #siteTable:\nvar stMultiCheck = tempDiv.querySelectorAll('#siteTable');\n// stupid sponsored links create a second div with ID of sitetable (bad reddit! you should never have 2 IDs with the same name! naughty, naughty reddit!)\nif (stMultiCheck.length == 2) {\n    // console.log('skipped first sitetable, stupid reddit.');\n    newHTML = stMultiCheck[1];\n}\n\nI propose two actions:\n- modify RES so RESUtils.initObserver also guards against the extra #siteTable\n- file another bug report against @reddit/reddit that the \"sponsored link\" #siteTable needs a better ID.\n. Yeah, admins put in a fix to rename the sponsored link from #siteTable to #siteTable_promoted.\n. fixd by 280\n. just for the record:\nhttp://www.reddit.com/r/Enhancement/comments/19vfsc/i_cant_open_pictures_using_res_after_the_first/\nhttp://www.reddit.com/r/RESissues/comments/19vgqn/bug_my_filters_dont_seem_to_be_working_i_have_a/\nhttp://www.reddit.com/r/RESissues/comments/19vris/bug_image_viewer_button_disappears_on_images_only/\nhttp://www.reddit.com/r/RESissues/comments/19vqcl/bug_sponsored_link_ads_act_as_normal_reddit_pages/\nhttp://www.reddit.com/r/RESissues/comments/19wcyh/bug_filters_doesnt_work_on_rall_after_the_first/\nhttp://www.reddit.com/r/RESissues/comments/19vezl/bug_filters_not_working_subreddit_hoverbox_not/\nhttp://www.reddit.com/r/RESissues/comments/19wawu/bug_view_images_feature_is_not_working_beyond_the/\nand I think this one is also the same bug\nhttp://www.reddit.com/r/RESissues/comments/19vd6b/bug_cannot_navigate_past_the_first_page/\n. Devil's in the details ..\nI'd like getting my settings-navigation feature branch in (mostly so tico\ncan switch from saying \"search /r/Enhancement\" to \"search the settings\",\nbut it can also wait for the next-next release.  @honestbleeps, maybe I\nshould take out the watchURL/setURL functionality and just leave the core\nfunctionality for \"search\" and \"navigate to module/option settings\". Ideas?\n. whoooops. i missed it in the flood of @honestbleeps' productivity.  nothing to see here...\n. @tico24 that's exactly what that branch does. \n. @patricksnape Yep -- settings-navigation has a few new features:\n- search RES settings --> navigate directly to setting from search\n- watch URL for #!settings/filteReddit/subreddits --> navigate to setting\n- optionally set the URL to the appropriate #!settings/... when clicking around settings\n- future code can use settingsNavigation to send the user directly to a particular option. *\n* I'm planning to use that in Tips 'n' Tricks in my contextual-help branch.\nhttp://imgur.com/a/2bbAe#0\n. @patricksnape I'm a little proud of it :grin:   I hope nothing breaks in production that I missed.. \n. I tested this on Mac OSX 10.8.2 with\n- Firefox 19.0.2\n- Safari 6.0.2\n- Chrome 25.0.1364.155\n- Opera 12.14\nI didn't test exhaustively, though.\n. I found one bug: \"load more comments\" in Opera is broken.  It seems like an unrelated issue, though, and one which I hope @patricksnape might have fixed already.  \nedit: nnnnope.  totally different issue\n. Fun fun.  I suspect your double-check in 8b3ae115d82ba52ae622aa56a5db2f65d6aa7cfa may be unnecessary, but it can't hurt.\nif (typeof(self.on) != 'undefined') {\n   this.MutationObserver = MutationObserver;\n}\nI'll go post my findings on the bug you posted, though.\n. for the record, follow-up commits: b6122488c583a850ba3b3d11ca478a37d0d9700a, 9f2843933aa71af44ba851df66d5ed772705b643\n. /* upgrade show and hide to trigger onshow/onhide events when fired. */\n    (function(show, hide) {\n        $.fn.show = function(speed, callback) {\n            $(this).trigger(\"onshow\");\n            return show.call(this, speed, callback);\n        }\n        $.fn.hide = function(speed, callback) {\n            $(this).trigger(\"onhide\");\n            return hide.call(this, speed, callback);\n        }\n    })($.fn.show, $.fn.hide);\nIn Chrome, modules['commentPreview'].subredditAutocompleteDropdown.show() and modules['commentPreview'].hideSubredditAutocompleteDropdown() invoke these. There doesn't seem to be anything bound to their onshow and onhide events, so they should probably just use the original jQuery methods.  Same with any RES calls for $(element).show() / .hide()\nP.S. On an unrelated note, hideSubredditAutocompleteDropdown uses $(\"#subreddit_dropdown\") instead of modules['commentPreview'].subredditAutocompleteDropdown.hide().  This seems fragile long-term.\n. @honestbleeps Do you remember the reasoning behind bringing in all the jquery.reddit.js code in afeea8182b617691f8668fb39f76eaec9633b77d?  It's working in v4.1.5 on Opera 12.14, but now I have to track down why master is breaking..\n. heh..\n- afeea81 commit timestamp: 2012-11-14 T 14:53:13 -08:00\n- RES for Opera last release: Nov 15.\nWell, editing flair still works in Opera 12.14 on OSX 10.8.2 after removing that whole chunk.  I'll investigate a little to see if I can figure out why exactly v4.1.5 needed it and why it's now broken in master, but I'm inclined to just tear it out and hope for the best.\n. @tio24 hah.. I should also be exercising my wiki privileges and copypasta content over ... after a release.\n. I'm on gtalk right now -- andytuba@gmail.com. How about an #enhancement channel on snoonet?\n. we're chilling in #enhancement\n. From @alphanovember:\np.tagline a[href*=OLDUSERNAME], .user a, .titlebox .tagline a.author, .commentingAs \n    {line-height:0px; color:;font-size:0px;}\np.tagline a[href*=OLDUSERNAME]:after, .user a:after, .titlebox .tagline a.author:after\n    {color: ; content: \"NEWUSERNAME\";letter-spacing:normal; display:inline; font-size:+10px;}\n.commentingAs:after \n    {color: ; content: \"Commenting as: NEWUSERNAME\";letter-spacing:normal;\n     display:inline; font-size:12px;}\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/7aab848ff370fb3a9713f05d8fcacc72c82a2055\n. Yeah, I'll test in the morning to see if master has the issue and that this\nfixes it.  I'll run that all tomorrow too.\nOn Mar 11, 2013 12:47 AM, \"honestbleeps\" notifications@github.com wrote:\n\nI can't replicate this, but it may be because I've reworked all of my\n\"watcher\" code (MutationObservers and DOMNodeInserted events where MO\ndoesn't run)...\nBefore I accept this pull request - can you try from master on a use case\nyou know had problems?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/283#issuecomment-14698521\n.\n. Current master still shows this issue.  This patch fixes it.\n\nYou can reproduce it in a lively chain of comments. \nComment 1\n   |-- Comment 2\n   |-- (load more comments)\nclick \"load more comments\"\nComment 1\n   |-- Comment 2\n       |-- Comment 3    <-- no parent hover because \"parent\" button is permalink\n           |-- Comment 4   <- yes parent hover because \"parent\" button is #bookmark\nThis patch will show the parent hover for Comment 3 by selecting the \"parent\" button on any comments, regardless of whether it's a permalink or a bookmark link.\n. 4e8b5e9 is just rebasing this patch on master.\n. Yeah, reddit currently spits out <div class=\"usertext-edit style=\"display: none;\"> on any comment you can edit.\n. haha i just read the repro and skipped the rest of your comment, then ended up implementing the equivalent thing =p  incidentally, I think the minimal repro is \"Reply to a comment which already has replies --> extra set of source/save buttons on existing replies.\"\nit seems robust enough, I don't know where to test it out besides that repro.\n. I'm still seeing an issue in Safari, Chrome, Firefox, where some newly loaded comments don't get RES-ified.  (Opera works fine.)\nRepro:\n1. Open Safari, Chrome, or Firefox.\n2. Go to a long comment thread, e.g. http://www.reddit.com/r/AskReddit/comments/1brr67/whats_an_open_secret_in_your_profession_that_us/\n3. Click 'load more comments' button at end of page.  (the one that usually says >1000 comments)\n4. Scroll down and again, click the 'load more comments' button at the end of the page.\n5. Observe that, in the second batch of \"more comments loaded\", the top-level comments get RES-ified.  However, children comments do not. (If you load more comments which are children of a non-RESified comment, then those comments unsurprisingly don't get RES-ified, or maybe keyboard nav will pick them up.)\n\n. in the same vein as \"add the button if the user has the original button\" (instead of making it dependent on user has gold), I'll add the gold class to the myrandom button if the original button has it.\n. let's try doing this again with hub...\n. - Auto-formatting\n- Validation?\n- Build extension packages?  (Requires OSX for Safari)\n. @patricksnape I pushed another commit to andytuba:fix-editors that you should merge into this branch, per my comment on #285.\nor you could just use your version.  they're equivalent.\n. i feel like i'm missing one big feature and a few small ones.  bueller? @patricksnape @honestbleeps do you care about being attributed to all the bugfixes and small enhancements you put in, or does the gitlog speak for itself?\n. I already submitted a PR for the settings ~~vaccination~~ navigation thing.\nI'd like to add that extra option on the whitelist NSFW feature per the\ndiscussion on #301, which I'll get done ~~in the next few hours~~ today.\nOther than that, I can't think of anything that needs doing.\n. Just thought of #310, which isn't a show-stopper but would be really nice and easy to fix .\n. Got pull requests for #310  and #311 (follow-up to #301) in.\n. @patricksnape Oh, and I think the reply-to-reply and save-edit-save bugs you've been working on can wait for 4.2.1, since they're fixes but not regressions.  new bugs if we don't have 'em are in order.\n. I think it'll work if you pull my branch into yours and push your branch, then close this PR.\n. I just put this together as a potential good idea.  I think it might be good to ask davcak or deimorz or somebody about it.\n. nvm: 73f483b0dc09dcc2cd7e592c81a0fa0ad5bb3b2d\n. Could go in a prefspane: #!settings/about/backup.  Maybe a little explanation paragraph, a button for \"show current settings\", and a button for \"load new settings\".  I don't have any brilliant ideas to make it more user-friendly, though.\n. I'd also like to eventually make a macro import/export feature to pair with adding a macro groups feature. (I want to add a \"group\" string property to macros, and macros with the same group are displayed in a submenu in the macros dropdown menu. I think this would be great for distributing collections of emote macros.)\n. Yes, I do sometimes have ethical dilemmas over certain csshelp requests..\n. @jw-00000 et al.\nI rehosted the script at https://gist.github.com/andytuba/9294509\n. Implemented in 4.6.0\n. Steve, your ideas sound fine.\nI had Tim's use case in mind when I threw this together, so that /r/crazystairs et al wouldn't be hidden.\nTo support Steve's  use case, we could a \"Everywhere / Only in subreddit/multi\" toggle per subreddit.  edit: well.. I guess it'd be a global option now that Steve switched the whitelist option from a table to a subreddit multi-autocomplete.\n. I think what we have now is sufficient to placate plenty of people.  If enough people ~~complain~~ request it, we can add finer-grained controls later. Maybe we could add a little \"temporarily disable nsfw filter\" button in the corner a la the NRE Pause button, or another list of subreddits which are whitelisted when you're in the subreddit or a multireddit, but not frontpage or /r/all.\n. might be worth it.  Can you inline the subreddit autocomplete option inside a table option?\nAnother idea: add a \"whitelistNSFWwhenvisiting\" option to parallel the \"whitelistNSFW [everywhere]\" option.. but that feels kinda icky.\n. I'm currently working on this in andytuba/allownsfw-where.\nI've already changed it so that allowNSFW option is a table with columns for subreddit(s) and show: everywhere or just when browsing subreddit/multi-subreddit.  (I incidentally added a few utility functions because I didn't see anything equivalent.  It may be worth retrofitting existing functions with them.)\nNow I'm going to fix the gear menu's nsfw toggle so it respects the allowNSFW settings if the nsfw filter is disabled when the page is loaded.\n. CeruleanSky had a good idea, dunno if you ever saw it -- dual-license RES.  For example, QT is dual-licensed under LGPL and MIT.\n. Fyi I edited your post title to be a little more descriptive.\nThis would be a good thing to fix, maybe clean up the related code to make it easier to maintain.\nTim, I think the nsfw filter toggle was recently patched to work without reloading.\n. thanks.. gorramn autocorrect..\n. Could take the nsfw toggle / subreddit style approach with siloing a\nspecific stylesheet for the relevant css and adding/removing the stylesheet\nfrom the dom.\n. I'm with Patrick -- this seems like a permission/disclosure that should be approved by the user on install, just like the @include url lines in the UserScript manifest.  (or it could just be a bug)\nwrt intro.js: we can use guiders (which Tips 'n' Tricks uses) and add on \"no really, pay attention to this\" styling.\n. Opening dot-console should probably also close/hide the guider.\n. I reorganized the z-indexes so keyboard nav console stuff is top-most, followed by settings console, followed by gear menu, followed by guider ... I'm not sure where other pop-uppy stuff appears.\n. Sorry, the \"utility function\" commits are kinda sandwiching the \"options\" commits.  I probably shoulda interactive rebased it, but ain't nobody got time.\n. This doesn't strictly need to go into 4.2.1, but I think it would be quite nice.\n. I'm interested enough to do it myself :grin: but feel free to take it on if you'd like.\n. I'm thinking something like\nmodules['styleTweaks'].console = [\n{\n    command: 'srstyle',\n    help: function(val) {\n        var str = 'toggle subreddit style';\n        if (val) { str += ' for: ' + val; } \n        else  { if (RESUtils.currentSubreddit()) { str += ' for: ' + RESUtils.currentSubreddit(); } }\n        return val;\n    },\n    callback: function(val) { [ ... snip ... ] }\n},\n[ ... snip ... ]\n];\n. hmm, i forgot to put the commands in some well-known place like module.consoleCommands[].\n. If every post in a page is hidden because it's nsfw, then show an error with troubleshooting tip: check the gear filter.  That could include a link to #!settings/filteReddit/NSFWfilter (or back-door equivalent), maybe a guider on the gear menu a la OS X's \"Help\" menu.\n. Maybe a new button to disable the NSFW filter.\nIt could live next to the gear in the corner and float with the NER mail icon and play/pause button.\nMaybe a 16x16 icon of a red (\\), maybe overlaid on an unreadable 18.\n. Maybe an overlay on the gear. \nEye icon? What else indicates \"safe\" or \"filtered\"?  Glyphicons free includes an eye (51 eye open) and a slash over an eye (52 eye close), as well as a variety of checkmarks, X, (\\), ! and arrows, both bare and in circles/triangles.   250/251 are diving goggles, which would make hilarious glasses.  320 filter is ... usable, but a little obscure unless it said nsfw in red. But I think the best is 270 shield.\nWe could probably also find some pixel artists who would like to contribute (or I could throw some money at somebody because ... I like icons).\nwhile we're on the topic, Glyphicons has sun and moon icons. It would be fun, albeit a little silly and possibly unwieldy (they're 24px tall, but it might be possible to license the halflings), to put those on the gear menu's night mode toggle.\n. Probably.  I think there could still be improvements, such as more passive/less aggressive indicators.\nI wonder how successful the popup notification has been.  I've only heard a little negative feedback about it, mostly from a person who couldn't be asked to read how to disable it and a few people who mentioned they disabled it.  I don't think I've heard any positive feedback. there have been a noticeable absence of \"where are all the post\" questions in /r/help+Enhancement+RESIssues.\n. Gonna say #385 was successful\n. No ideas for now, we can open them as separate issues when we think of them.\nThanks for janitoring!\n. No ideas for now, we can open them as separate issues when we think of them.\nThanks for janitoring!\n. Hmm. How about <a href=\"http://i.imgur.com/direct/image/link\" onclick=\"this.href=this.getAttribute('data-original')>using the expando url normally, but switching to original image on click</a>?  That'll take care of expando'd --> :visited and, in that session, the link (which is now the original image) becoming :visited.  It's a toss-up whether visiting the original would make the expando url :visited..\n. this made it into 4.6.0 or 4.6.1.. of course, now people are asking for an option for the legacy  behavior of navigating directly to i.imgur.com url.\n. Lazarus (as you may have seen from that conversation), works great for replies to the post, but it doesn't seem to pick up on dynamically-added forms for replying to comments.\nI was thinking of an implementation where a draft gets saved to RESStorage, keyed by \"reply-to commentID + pageload timestamp\" and updating the saved draft at the same time as the Live Comment Preview rendering (i.e. throttle it to debounce every 5 seconds).  @honestbleeps, any idea if hitting RESStorage.setItem() every five seconds would be a terrible performance issue? \nDunno about the UI for restoring drafts.. maybe it should be a markdown tool?  (I'm also thinking about being able to save multiple drafts for the same comment, hence the timestamp part of the key.. but that might be overambitious at first.)\n. Related but not duplicate. The table editor is a separate popup. \n. https://www.reddit.com/r/Enhancement/comments/4h01jy/confirm_navigation_settings/ \noption (disabled?) for onblur from comment area, also move text to placeholder \n. i implemented this a few months ago\n. fixed by 1c0fbc75dc88a701686f00884e70396f53528243\n. @patricksnape suspects it's got to do with a .safeHTML call on the post title that buggers it.\n. 19d91e057623038939630643d3e2b12df5a41894\n. Delete that alert. You shouldn't use alert for debugging anyway, that's what console.log is for.\n. Bangarang!\nFor a second I thought I was going crazy, thanks for clarifying :grin:\n. reference: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/5115ad1d7dc7c3e9fd36c8d82b8675c680b5d94e\n. @honestbleeps Man, it's annoying how long it takes for the coin and balance to show up in the user bar at top right -- particularly how it bumps other elements around when it finally appears.  I'm trying to click something and bamp!  there it goes.\nIf we can't speed that up (probably by adding caching), could we do something to make them not bump other stuff around?  Maybe make it a floater, or stick the coins in the sidebar after the subreddit name (better/worse discoverability? dunno what to do about the balance.\n. there was a js error which i think prevented showing the balance.\ni like the idea that it only shows on hover of something. show it inside the tip menu?\n. i think we only need to worry about cyclic dependencies which aren't contained within non-IIFE functions, e.g.\nmodules['x'] = {\n    include: modules['betteReddit'].include\n}\nIf anything does that, we can refactor it into the module's beforeLoad.\nIt might be worth doing that for any given cross-module reference.  So long as RESUtils gets loaded first and all the modules get loaded before BabelExt starts firing beforeLoad/go functions, it should all be gravy.\n. Related for doing it cross-browser: \n- detecting private for Opera\n- Chrome already has a check, but we should regression check it if that code changes\n- Safari\n. fixed by #2069\n. fixed by a63af45259fc105bbbc3f183a7470e269405c804\n. we still need to put in that options button to call fetchAddresses.\n. FYI I touched some global CSS and RESUtils.\n. I found userHighlighter.doHighlight, so I'm leveraging that to add the CSS for a given user (with a sugary wrapper function) and then passing back a mechanism to remove the CSS later. \nThere's probably a cleaner way to handle \"toggling\" which should be implemented before this comes back to bite me in the ass, but it should work well enough for now.\n. Yeah, this made it into 4.2.0.\nOn Apr 12, 2013 6:01 AM, \"Patrick Snape\" notifications@github.com wrote:\n\nThis is now in the latest version, no?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/343#issuecomment-16287168\n.\n. Don't pull this one just yet. I got issues mixed up.\n. okay, now this is ready to pull.\n. yes, is good to go.  sorry i didn't clarify earlier\n\n\nit could still use some usability fixups, but it's in a good enough state to be released.\n. This could be solved, in the vein of #339, by adding an option \"use settings from all users\" to each feature that has username-specific settings.  If enabled, the feature could merge settings from each user, but only save newly-set settings to the current user.\nThis implementation is easier said than done.\n. Somewhat related: I'd like to see a modules['settingsSetters']  that will have button options to \"set a bunch of related settings at once\".  e.g. \"Disable all popups\" and \"Disable all on-hover actions\".  A \"copy username-specific settings to another username\" tool could fit neatly into that.  I'm not entirely sure what the items would be, I'd have to trawl through /r/resissues+enhancement for FAQs\nAlso related: @gavin19 was hacking together a \"troubleshooting\" module today too. That could go under a new category or under the About RES category.\nand while I'm on the subject, I'd like to convert all the About RES pages to informational modules so they don't have to be exceptional.  I think it'd work great if I abused the \"description\" field to embed all the text.\n. > what's the reasoning behind moving the about page out into a module exactly?\nRight now, the entire About pane is a huge blob of custom HTML/CSS/JS inside RESConsole. If it were refactored into modules['donate'] { category: 'About' }, modules['team'], etc., then they could leverage the RESConsole's framework for managing category module listings and drawing module pages, which means:\n- no custom CSS/JS to wire up each \"About Us\" section --> less maintenance\n- can [link directly to a section](#!settings/donate) and programmatically switch to those pages easier*\n- can add new pages (e.g. Troubleshooting) easier\n- can swap out the \"about\" pages if RESConsole is migrated to another app (maybe as part of BabelExt)\nOkay, I don't have super-compelling reasons, but I think it's an easy thing to refactor and doesn't have serious downsides.  While I foresee one small hiccup with programmatically passing search queries, I don't think I'll have to jump through too many hoops to sort it out.\n* I'd also like refactor loading/drawing a category because RESConsole.menuClick('category name').\nalso user hover info doesn't hide username, probably because it lacks the .author class on the username link\n. whoops. i didn't mean to merge that.\n. done been fixed in 4.2.0 already, the update will get out to you eventually.\n. i wanted to use a clipboard icon but couldn't find one on glyphicons, so i went with share instead.\n. http://www.reddit.com/r/RESissues/comments/1cdnwp/bug_certain_subs_wont_load_neverending_reddit/\nand every single /r/help+resissues post where somebody forgot to turn nsfw filter back off before visiting /r/gonewild.\n. http://www.reddit.com/r/Enhancement/comments/1d4ra3/feature_request_higher_resolution_favicon/\n. @CyberShadow attn\n. fixed by #1753\n. cheap implementation: if urls space-separated in usertag.link, render in user info as list of links\n. cheap implementation: if urls space-separated in usertag.link, render in user info as list of links\n. @erikdesjardins interested? \n. @erikdesjardins interested? \n. duplicate of #377 \n. maybe leverage snuownd to test if URL is valid?\n\nmaybe prompt-loop the user until they cancel out or enter a valid URL?\nvar url = \"\";\ndo { url = prompt(\"URL:\", url); } while (url !== false && !isUrlValid(url));\n\nmaybe show \"validation errors\" in live comment preview?\n. oops, sorry... that's probably my fault\n. I did add a notification for \"* posts have been filtered\", specifically for post listings pages. That notification might also show on comments pages. \nedit: it does not show on comments page\n. I did add a notification for \"* posts have been filtered\", specifically for post listings pages. That notification might also show on comments pages. \nedit: it does not show on comments page\n. bleh. anyone wanna give it a go with rewriting that description?  should probably mention something about how reddit gold-save lets you save (pointers to) comments that can be accessed from any browser, while RES save saves the current text of it locally.\n. this, um, might not be an actual issue...\n. this, um, might not be an actual issue...\n. maybe OP should get a third-party client like Orangered or Chrome's reddit notifier extension.\n. > I would like to use the number keys (commentsLinkNumbers) to open images inline but I can't get it to work (it used to work in previous versions before 4.1.5). Clicking the icon does display inline, but using the number does nothing at all (when LinkNewTab is off). If I set commentsLinkNewTab back to on, images open fine with the numbers in a new tab.\n\nI don't think I added any new add-ons since it worked (in previous versions of RES).\nAnyone seen something like this behavior and found any workarounds?\n4.2.0.2 / Firefox 20.0.1 / Windows XP SP3\n. It's probably been fixed sometime in the last year.\n. Oh, thanks for the reminder, @Mc10.  I'll take care of that sometime this week.\n. rebased and ready to merge @honestbleeps \n. whoops\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/d05feea7bcc02ff879e91b12cbde58a4a564a7d7\n. yeah, i just cherrypicked my #554 onto new master.\n. closing because already fixed\n. yeah, that's what it seems.\n\nif it wouldn't be too much trouble, could you force-push only the Safari 7 changes rebased onto master? (might be necessary to rebranch and cherrypick; there was a big purge recently and now branches need to be brought up to date.)   or a new PR, whatever you're more comfortable with.  or i could do it, but i'd appreciate it if you did :grin:\ni just downloaded the latest GM, so I'm hoping to review the code tonight/this morning (unlikely) or middle of next week (more likely).\n. thanks!\n. http://www.reddit.com/r/Enhancement/comments/1ha5by/how_do_i_disable_upvote_records_adding_to_my_res/#\n. hah, i see what you mean\n. oh, i wasn't logged in.  well, it should show an error better\n. seems closed per history here\n. @honestbleeps We should address this given that FF23 is scheduled to release on Aug 6 (in a week) and @gavin19 reports that this issue affects FF23.\n. @honestbleeps We should address this given that FF23 is scheduled to release on Aug 6 (in a week) and @gavin19 reports that this issue affects FF23.\n. alternatively, per spladug's comment on the reddit PR, we may need to split up the limits for self text and comments.\n. I'm thinking we should preemptively distinguish on limits for comment (separate from self-posts) since that won't really hurt, then wait to see what spladug et al decide to do.\n. gonna close this for now to avoid distraction\n. maybe \"p\" for \"toggle parent\" shortcut?  i don't think that's used.\n. maybe \"p\" for \"toggle parent\" shortcut?  i don't think that's used.\n. bvenable, you're swell!\n. bvenable, you're swell!\n. You mean like HoverZoom?\n. You mean like HoverZoom?\n. man, this is cool.\ni like the user info hover idea, esp if you use the same frame with the callout arrow -- that will give people  a visual cue to expect that behavior.\ni would also like to be able to speed up the delay.\nWhen I use keyboard nav to show the parents, i would recommend positioning it against the parent button, so the user can see the whole thread at once; plus yay consistency\nif you add in an [X] I would also evangelize adding in a gear which links to the module's settings.\nso many people are gonna dig this enhancement!\n. man, this is cool.\ni like the user info hover idea, esp if you use the same frame with the callout arrow -- that will give people  a visual cue to expect that behavior.\ni would also like to be able to speed up the delay.\nWhen I use keyboard nav to show the parents, i would recommend positioning it against the parent button, so the user can see the whole thread at once; plus yay consistency\nif you add in an [X] I would also evangelize adding in a gear which links to the module's settings.\nso many people are gonna dig this enhancement!\n. @gavin19  From when I googled around earlier today, it seems a convenient quirk that CSS-generated content isn't copy-pastable in some browsers (Chrome, Safari, Firefox).\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=12460\nbut per this stackoverflow post, it seems that Opera (and IE) will let you select and copy.\n. @gavin19  From when I googled around earlier today, it seems a convenient quirk that CSS-generated content isn't copy-pastable in some browsers (Chrome, Safari, Firefox).\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=12460\nbut per this stackoverflow post, it seems that Opera (and IE) will let you select and copy.\n. Opera 10 (released around the time of the aforementioned stack overflow post) allowed users to highlight/copy-paste CSS-generated content; but Opera 12 and 15 don't highlight it.\n. Opera 10 (released around the time of the aforementioned stack overflow post) allowed users to highlight/copy-paste CSS-generated content; but Opera 12 and 15 don't highlight it.\n. @Xavdidtheshadow yeah, this has unfortunately gotten stale. it looks like a cool idea, too.  if you could re-submit  (or at least link to your actual commits) that would be super duper\n. Chrome on OSX doesn't like symlinks in unpacked extensions.\n. Chrome on OSX doesn't like symlinks in unpacked extensions.\n. Regexp support?\n. Regexp support?\n. http://www.reddit.com/r/enhancement/comments/3960gx/_/\n. https://www.reddit.com/r/Enhancement/comments/3avw8g/feature_request_comment_filter_in_light_of_recent/\n. Dupe of #1742\n. This should merge fine with #478 \n. This should merge fine with #478 \n. wrong tab.\n. wrong tab.\n. No, that was the right tab after all.\n. No, that was the right tab after all.\n. hah, i independently pushed this same fix earlier today. i'm glad you caught it too.\n. hah, i independently pushed this same fix earlier today. i'm glad you caught it too.\n. or maybe grey-disable them, to avoid unnecessarily breaking subreddit styling\n. or maybe grey-disable them, to avoid unnecessarily breaking subreddit styling\n. sure looks like it.  i would've actually set this to true by default but whatevvvs\n. yeah, sorry, gavin19 and I put in a CSS-based throbber and I never closed out this issue.\n. https://www.reddit.com/r/Enhancement/comments/3e8l4t/feature_request_resume_browsing_as/\n. gosh dangit, did I break that when I fixed the \"password contains +\" issue?\n. This should already be in the current released version of RES.\n. http://www.reddit.com/domain/gfycat.com\nDo you see expandos?  Do they disappear when you disable RES (or load the page in incognito mode if RES isn't enabled)?\n. Not currently.  See https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/698 and http://www.reddit.com/r/Enhancement/comments/1u1s7y/i_built_imgurtogfycat_an_rescompatible_chrome/ for more details.\n. You may be interested in the neverEndingLoad event which fires on window when Never-Ending Reddit loads a new page.\n. $target.closest('ul').find('a[onclick*=\"reply\"]').click();\nThis should simulate clicking the \"reply\" button and opening the form. Chrome Canary ignores that fake click.  However, RESUtils.click works fine.\n. I see a few other instances of $(...).click() in various places in the code, so those should probably also be replaced with RESutils.click(...)\n. 36f72ce and 302f9f7 (code cleanup) should be in a separate PR from c2df781 (imgur fix).\n. http://www.reddit.com/r/Enhancement/comments/1kb5qj/feature_request_dont_leave_us_hanging_similarly/\n. Don't merge this yet, I want to tweak it a little.\n. i think it's ready now\n. I was going for a FIRST TROGDOOOOOR feel =p\n. \n. @bdesham Yeah, this has gotten stale.  If it's still relevant, I think it would be good to recreate and merge.\n. http://www.reddit.com/r/Enhancement/comments/1kt923/res_filter_on_my_own_posts/\n. You could register mc10- or something similar for testing, new accounts are cheap.  I have a few extra test accounts for  various situations.\n. UX note: I would fill in the username initially, then fill in the rest of the data when the ajax call returns -- just in case the user opens the account switcher before the server responds.\nRe: hitting the API too often - maybe wait 2s between sending requests for user info?\nAlso, I'm not sure whether we should use $.getJSON or GM_xmlHttpRequest; and if ?app=res should be tacked on for API requests.\nI think it would be useful to show the account age in addition to the karma.  Maybe show the user info hover when hovering over usernames in the account switcher?  I also remember a related request, to show the last time that account was logged in.\nCheck out RESUtils.loggedInUserInfo for fetching and caching user info.  That should maybe be refactored into RESutils.getUserInfo: function (callback, username = RESUtils.loggedInUser())\n@honestbleeps @mc10 opinions?\n. > do fill in the username\nWhoops, sorry, I missed that earlier!\nMy usual (janky) tactic for bookmarklets is  array.forEach(function(element, index, array) { setTimeout(function() { sendAjaxCallFor(element) }, 2000 * index) }).  Since you're inside RES already, you can also take advantage of the RESUtils.forEachChunked method.  That's usually for batching work on DOM elements, but I think you could also use it for splitting up ajax requests.  (edit:) The overall principle I would want to stick to is limiting the number of concurrent requests to the reddit servers.\nAs an engineer-not-designer, I'd say it would be okay to have a wide dropdown menu so long as it doesn't go off the right edge of the viewport.  (We could maybe use the unified tooltip module that @GameFreak worked on recently for that, but that might be too much departure from the current style).  \nIf I put my designer hat on, I think it would look a little better if if you styled it with karma floating to the right, or as a table, or with karma slightly smaller than the username.  (edit:) if it were a table, I think that would make showing account age or last login time easy without info overload.\n. should be good to go (although it's a titch messy), but would somebody mind giving it a token test before release?\n. @mc10 thanks for looking things over.  it's nice to have a second set of eyes and fun to get feedback\n. Fixes #463 \n. oopsie, thanks for reminder\n. My implementation idea is:\nmodules['filteReddit'].options.toggleSubreddits = \n        type: 'table',\n        addRowText: '+add filter',\n        fields: [\n            { name: 'subreddit', type: 'text' }\n        ],\n        value: [\n        ],\n        description: 'Type in a subreddit you want to ignore when the \"hideToggleSubreddits\" toggle is enabled (applies everywhere)'\n    };\nmodules['filteReddit'].hideToggleSubreddits = {\n                 type: 'boolean',\n                 value: true,\n                 description: 'Filter out posts from subreddits listed in toggleSubreddits (applies everywhere)'\nand if toggleSubreddits.length > 0, show a \"custom subreddits\" toggle in the gear dropdown menu.\nalso a keyboard console shortcut for it like \"filtered [on|off]\" like the recently-added nsfw on/off\n. hmm any opinions? \n\n\nhttps://github.com/andytuba/Reddit-Enhancement-Suite/tree/custom-filter-toggle\n. Individual filters with toggleable turned on only work when enableToggleableFilters is turned on.  \nThe menu item is a quick-access toggle to enable/disable the enableToggleableFilters option value, same as the \"nsfw mode\" toggle I also added a keyboard shortcut for the same, because people like having different methods of triggering the same action.\ni was initially thinking of \"toggle groups\" but i didn't want to overbuild the UI on the first go-round -- specifically something like listing the groups as an option and then the user having to choose the groups later.. after all, we don't have any \"foreign key\" setups in the consoles.\nI like most of what I did with this except for the whole \"toggleabletoggletogglehickey\" naming problem @honestbleeps highlighted.\n. Generally speaking, let's use data-attributes when tacking data onto an element and not using a standard DOMElement attribute.\n. duplicate\n. besides the style comment about var x; \\n var y; instead of var x,\\ y, everything looks good\n. The fix might also be \"disable NER on wiki pages\" :grin:\n. i think \n. http://www.reddit.com/message/moderator/  and http://www.reddit.com/message/moderator/unread/ \nif you haven't yet, you should make a subreddit of your own like /r/mc10.  then you'll be a mod!\n. (whoops, i should pay more attention to which tabs i comment in)\ni'll sort out some CSS for this\n. Yeah, RES adds a label for the entire row .. maybe not the best choice of tag name.  anyway, its styling was making your new label act weird. \nhttps://github.com/andytuba/Reddit-Enhancement-Suite/commit/e130c420e527b95b8010297bd3ce91366be2dbec\n. (whoops, maybe i should have paid attention to which tab i was commenting in)\nanyway i'm done looking over this for right now -- sorry for all the red ink!  I want to make this nice small module into a good template for refactoring other, similar modules.\nfeel free to discuss / dissent / ask for clarification / etc!\n. ah, just saw your note re: copy-paste-edit. collaborative editing is fun!\n. glad to help, just ask for whatever you need.\nI'll be on IRC off and on -- #enhancement on irc.snoonet.org.  You can use kiwi-irc's web client if you don't have one installed.  i'm leaving the house for a little bit right now though.\n. > Your comments are greatly appreciated and I will need your expertise in fixing this up.\nWould it be more useful for me to point at places in the code which are good to copy-paste, write up small examples, or just code out my suggestions?\n. ~~How about postTitleLinkAction / Post Title Link Action  for the name?~~  i'll go chug through code edits\n. Yeah, the easy route here is to add a \"favorEnhancedExpando\" option which nixes reddit's expando if exists; or, if set to false, does not add an RES expando if a reddit expando already exists.  Dunno whether it should be enabled by default or not.  We could do it on a site-by-site basis, since it's possible to build options programmatically.\n. fixed by bcc678f\n. d7aae18 and 8cfb0a0:\n\n. For the record, I did encounter an /r/resissues post where OP was stuck on a Chrome version that was way behind (e.g. v19 when v26 was mainstream release).  I told 'em to upgrade and i think everything turned out great.\nso, rare, but ... we do see them.\n. For the record, I did encounter an /r/resissues post where OP was stuck on a Chrome version that was way behind (e.g. v19 when v26 was mainstream release).  I told 'em to upgrade and i think everything turned out great.\nso, rare, but ... we do see them.\n. Yeah, I'd say hide the entire thing given that #583 adds \"try something else\" to when you reach the end of a NER stream\n. I'm running the current master build, which includes this PR, and I'm seeing something weird:\nRES does not load if you open a new tab and go to reddit.com.  RES does load if a reddit page is the second page loaded.\nThis smells like a Safari issue and not an RES one. @phriedrich, are you also seeing this with RES and/or other plugins?\n. I'm running the current master build, which includes this PR, and I'm seeing something weird:\nRES does not load if you open a new tab and go to reddit.com.  RES does load if a reddit page is the second page loaded.\nThis smells like a Safari issue and not an RES one. @phriedrich, are you also seeing this with RES and/or other plugins?\n. Yeah, it seems like Safari is loading up the extension before it's instantiated the page when you load reddit on a new tab, so event.target.page is undefined in background-safari.html's sendResponse; but when you load reddit on a tab that's already in use, event.target.page is a SafariBrowserTab as expected.\nI'm inclined to put off fixing that until the final release.\n. Yeah, it seems like Safari is loading up the extension before it's instantiated the page when you load reddit on a new tab, so event.target.page is undefined in background-safari.html's sendResponse; but when you load reddit on a tab that's already in use, event.target.page is a SafariBrowserTab as expected.\nI'm inclined to put off fixing that until the final release.\n. looks good, thanks for fixing that\n. It looks like this was implemented (probably by @honestbleeps) but never marked fixed: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blame/520b5f959f5e880ee88f9a077513e82c3d4677ee/lib/modules/showImages.js#L1263-L1265\n. Moving the \"save-RES\" button next to the \"save\" button seems reasonable and not something people will complain too much about \"you're ruining my muscle memory.\"\n. duplicate of #500 \n. hah, that's what i'm hoping for in some of my \"feature request\" issues.\nHmm. include = [ /^https?:\\/\\/([a-z]+)\\.reddit\\.com\\/[\\?]*/i ]  (run on any page).  I've got two ideas for this:\n1. replace it with a \"*\" and specially check for that on isMatchUrl()\n2. if a module has no include and no exclude items, always run it\n. @samelawrence I was wondering if you'd be interested in replacing the include/exclude regexps with pageType values where appropriate, and then somebody else (maybe me) can review.  I figure we'll need at least two sets of eyes looking over this kind of change.\nIf you'd like, I can give you an overview of each pageType and what common include/exclude regexps look like.\n. This appears to be fixed, please reopen if not.\n. Thanks, @gavin19!  That was a good foundation. Looks good in night mode, too\nI reversed the polarity to make it easier for subreddit mods to style: http://codepen.io/andytuba/pen/brqef\n.RESThrobber, .RESThrobber:before, .RESThrobber:after  { background: whatever; }\nIt looks like the :before and :after animations don't work in Opera 12 for either variant, so you just get OOO with the middle O flashing\u2026 meh.\n. Eh, we could close this on account of it's stale. However, we're still supporting pulling content from mediacrush and forks.\n. Should {{now}} use the same format as the \"Current timestamp\" macro?  Should that \"Current timestamp\" macro become a regular macro which uses \"{{now}}\"?\n. I agree, @matheod: default macros should be data, not in code.\nAs for the special handling (throttling) on some of those macros, that can be applied based on the contents of the macro instead of directly referencing the dropdown item.\n. I also envision finer-grained management of particular notifications, identified by module and name.\n. Oh look, a checkbox in the notification header to disable future instances of that notification type.\nTODO: migrate filteReddit.options.notification to notifications.options.notificationTypes\n. @honestbleeps do you want dibs on coding up \"my recent notifications\"?\n. http://www.reddit.com/r/Enhancement/comments/1zw0dt/does_res_have_a_feature_to_block_all_subreddit/\n. http://www.reddit.com/r/Enhancement/comments/2awf2o/feature_request_use_subreddit_style_only_on/\n. I think it's a great idea and worth doing.  It just hasn't been done because it's a medium-sized project     and other Stylish/Stylebot/\"custom user stylesheet\" solutions already exist.  If RES did it, though, we could do it slightly better by tailoring it to reddit.\n. http://www.reddit.com/r/Enhancement/comments/256wgd/feature_request_requesting_a_builtin_list_of_user/\n. duplicate of #446 \n. Fixed yet?\n. @mc10 do you have a sublime text pref file I could mooch?  (i might have asked you this before)\n. it's been a while since I added something to RESUtils.\n. \"when you have the chance\" is a subtle way of saying \"soon please!\" =p\n. I expect you won't have too much trouble.  Somebody commented on reddit that they'd been using your patch for a few days and that kdiff handled resolving issues fine.\n. Great, thanks!  auto-mergeable now, too.\n. ftfy:\n\naww yiss :sunglasses: \n\n:grinning:\n. @honestbleeps Okay, this is a merge-worthy PR now.\n. TODO: make an \"RES Modules\" category for Troubleshooting, Hover, and Notifications\nTODO: rewrite the author hover info tooltip to use modules['hover'].  Same goes for any other custom implementations.\n. @gamefreak does have a tutorials branch kicking around somewhere: interactive tutorial demonstrating RES features and wizard for setting RES options.\n. http://www.reddit.com/r/Enhancement/comments/1vaiwf/feature_request_open_links_in_new_tab/\nanother instance of not even looking at reddit preferences\n. http://www.reddit.com/r/Enhancement/comments/1vaiwf/feature_request_open_links_in_new_tab/\nanother instance of not even looking at reddit preferences\n. http://www.reddit.com/r/RESissues/comments/1vb1tg/bug_subreddit_style_not_working_when_logged_in/\n. http://www.reddit.com/r/RESissues/comments/1vb1tg/bug_subreddit_style_not_working_when_logged_in/\n. Throw another stick on the fire\nhttps://www.reddit.com/r/Enhancement/comments/2n4a5l/my_filters_are_set_to_hide_stuff_i_upvote_or/\n. Throw another stick on the fire\nhttps://www.reddit.com/r/Enhancement/comments/2n4a5l/my_filters_are_set_to_hide_stuff_i_upvote_or/\n. https://www.reddit.com/r/Enhancement/comments/2pmr4a/feature_request_disable_all_thumbnails_from/cmy3wze?context=3\n. https://www.reddit.com/r/Enhancement/comments/2qjspi/change_number_of_nested_comments_displayed_be/\n. https://www.reddit.com/r/RESissues/comments/4larry/bug_the_small_thumbnail_images_somehow_began/\n. > Troubleshooter is now in About RES\nNo big deal -- the category (\"About RES\") is just a property of the module.\nActually, this deserves to be its own file/module, not part of the troubleshooter module.\n. bump\nalso, vaguely related to #1571 \n. bump\nalso, vaguely related to #1571 \n. Could you test this on Firefox too, @thybag? This would be a good olive branch for all the Firefox users who report data loss.\nI imagine the merge conflicts are restricted to the manifests.\n. This should be actually good to merge now, with support for Chrome, OperaBlink, Firefox, and Safari.  No idea about Opera 12 because that doesn't work in general right now.\n. This should be actually good to merge now, with support for Chrome, OperaBlink, Firefox, and Safari.  No idea about Opera 12 because that doesn't work in general right now.\n. yeah, this looks like a better solution  (haven't tested yet though)\n. I haven't tried anything yet :grin: just wanted to get it logged \n. I haven't tried anything yet :grin: just wanted to get it logged \n. Fixed by 35dce656df , 21b44a1c82\n@honestbleeps: i think ultimately i want to ditch this settimeout crap and broadcast a 'document is ready' event or something, but... for now the fix works         12:57\n. Fixed by 35dce656df , 21b44a1c82\n@honestbleeps: i think ultimately i want to ditch this settimeout crap and broadcast a 'document is ready' event or something, but... for now the fix works         12:57\n. First we should ensure that the makefile is putting the HTML file where it needs to go and only there.\nThen we should edit the .gitignore appropriately.\n. First we should ensure that the makefile is putting the HTML file where it needs to go and only there.\nThen we should edit the .gitignore appropriately.\n. http://www.sublimetext.com/docs/3/projects.html\n{\n\"folders\":\n[\n    {\n        \"path\": \"src\",\n        \"folder_exclude_patterns\": [\"backup\"],\n        \"follow_symlinks\": true\n    },\n    {\n        \"path\": \"docs\",\n        \"name\": \"Documentation\",\n        \"file_exclude_patterns\": [\"*.css\"]\n    }\n]\n}\n. http://www.sublimetext.com/docs/3/projects.html\n{\n\"folders\":\n[\n    {\n        \"path\": \"src\",\n        \"folder_exclude_patterns\": [\"backup\"],\n        \"follow_symlinks\": true\n    },\n    {\n        \"path\": \"docs\",\n        \"name\": \"Documentation\",\n        \"file_exclude_patterns\": [\"*.css\"]\n    }\n]\n}\n. closed by #1762 \n. https://www.reddit.com/r/Enhancement/comments/4vce89/feature_request_automatically_tag_a_user_as/  automatically ignore a user after a certain number of downvotes\n. automatically ignore again https://www.reddit.com/r/Enhancement/comments/6t3pu9/ignoring_a_user_after_based_on_the_total_number/. on a more holistic note, i wonder if this functionality ought to be refactored into the imageViewer.  (this is a \"general discussion\" topic, not something for you to address specifically @markekraus)\n. on a more holistic note, i wonder if this functionality ought to be refactored into the imageViewer.  (this is a \"general discussion\" topic, not something for you to address specifically @markekraus)\n.  hmm...i wish you could subscribe to an individual comment  3:20pm\n. @samelawrence  http://thisisnotocd.tumblr.com/post/70101706275/interesting-words-to-use-instead-of-ocd :grin:\n. https://www.reddit.com/r/Enhancement/comments/2goikg/feature_request_add_user_links_in_a_dropdown_to/\n. https://www.reddit.com/r/Enhancement/comments/2goikg/feature_request_add_user_links_in_a_dropdown_to/\n. @joey5755 @waglik ping\n. :+1: @mc10 \n. https://www.reddit.com/r/Enhancement/comments/2n1vng/feature_request_perfilter_toggling_filter_grouping/\n. https://www.reddit.com/r/Enhancement/comments/2n1vng/feature_request_perfilter_toggling_filter_grouping/\n. an idea for styling particular subreddits or users: add .subreddit-{{subredditname}} or .user-{{username}} or .multi-{{multiname}} classes to body\n. Ideas off the top of my head:\n- a regexp matching URLs to videos on your site\n- a method of transforming that into a link to content, either regexp/function or API endpoint\n- if API, please support CORS\n- does RES point straight at your content or at an iframed player or what\n. that is a nifty thing.\nthe only thing i'd tack on would be adding a scrollbar for people with \u2026 more than a few multis.  tacking on height: 100%; overflow-y: auto should do it, i think..\n. It certainly wouldn't hurt to include it, but I'm curious why too.  Unless the project specifically requires node modules, this seems like something that might better belong in the developer's global gitignore.\n(Just to be clear, I'm not saying it's a bad idea.  I'm just wondering why it's a good idea.)\n. > Am I supposed to fork master, commit to my fork, and then do a pull request?\nPretty much!  If you intend to do more than one project on RES, then:\n1. fork honestbleeps/reddit-enhancement-suite into your own copy of the repo\n2. clone your repo locally\n3. make a new branch on your repo for this project\n4. commit fixes to that branch\n5. push to github\n6. do pull request on github to merge your branch into honestbleeps - master\nI also have honestbleeps' repo added as a remote  (\"upstream\")  on my computer, and then I checked out a branch tracking upstream/master.  I keep that up to date and branch any new projects off upstream/master/HEAD.\n. That's great that you have it working!  It'll be interesting to see if somebody can figure out a single imgur API call to fetch metadata, but this will definitely be an improvement over no expando.\n. Huh, did #166 disappear or is there a newer url format? @isstabb, are you still interested in this? Just a quick description of what you changed would be sufficient. \n. Probably a little of both :grin:\n. @isstabb Did you push your changes from the repo on your computer to your repo on GitHub?  git push origin if not.\n. This could be a standalone extension super-easy, just like http://github.com/skeeto/bitcointip-user-js/ but without even the settings console.\n. re: supporting other hosts\nquick UI idea: when draganddrop, filter available hosts by file's filetype ((is that even possible?) and, if more than one existed, show Android/Windows-style dialog to \"select host  ([ ] always for {{filetype}}\"\n. @mc10, aren't you the bestest.\n. implemented as filteReddit notification threshold\n. seems like a better implementation of the intent behind #777 \n. yeah, thanks\n. #682 \n. oh, this was already handled in #609.  it's just not very obvious.\n. several mods think this is a great idea, particularly on unpopular mod/admin posts\n. if several comments by same username are hidden under a collapsed comment, (optionally) uncollapse all of them at once when clicking one [+].\n. I'd've used a regexp to extract the # in  #h#m#s but it's no big deal.\nedit: i mean yes obviously you used some regexps but I was thinking something more compact and obtuse like /[\\?&#]t=(?:(\\d+)h)(?:(\\d+)m)(?:(\\d+)s)/  <-- off the cuff, needs debugging\n. it's really a question of user education.  the \"keepLoggedIn\" is right below the \"accounts list\" option but even that's not even obvious enough.  \nmaybe replace keepLoggedIn option with a keepLoggedIn column on the table and backfill existing entries based on current value of keepLoggedIn?\n. make sure to test with NER autoLoad both on and off\n. yeah i'm kinda thinking of checking reddit version source vs RES saved version source and not prune if they don't match.  that's a lot of API hits though unless there's a syntax for fetching many comments' source at once..\n. Preloading on pageload seems like a  \"bad citizen\" idea regarding hitting reddit servers, especially if the user doesn't load it.  However, I think it'd be okay if RES preloaded the page when the user scrolled near the \"load more\" widget.\n. yeah this smells better\nthanks for detective work!\n. FYI I took the liberty of editing the issue topic.\nfitToWindow and fitToPreviousImage are both cool ideas..   The first downside I can think for fitToWindow is enlarging and pixellating small images  (e.g. lo-res gifs).\n. @honestbleeps can we merge this before release?  Farow will show proper obeisances.\n. this sounds pretty cool!  i haven't tested it out yet, but I have one question from quickly reading the code:  \nDoes the moveTargetData/dragTargetData get confused if you move different images on the same page?  e.g. open image 1, open image 2, move image 1 a little, move image 2 a little, move image 1 a little more, move image 2a little more..\n. People have complained at various times about being able to resize pics larger than their viewport and then having difficulty viewing it.  IMO they should just be able to scroll around using browser native functionality, but this is a valid and useful alternative.  edit: for discoverability, you should update the \"click and drag\" title text on the image to \"click + drag to resize or shift+click + drag to move\"\nThe other thing to test is resizing/moving videos in comments, since I think @honestbleeps @thybag @SirCmpwn added the \"resize videos\" functionality a month or two ago.\n. I discovered some hilarious accidental functionality: if the image is small, I can shift-click + drag, I can put the image anywhere on the page (outside the allotted space for the image).  It'd be nice to clean up, but not necessary.\n. Looks like any given pic: http://www.reddit.com/r/pics/comments/233jg1/random_girl_from_hs_posted_this_on_fbletter_from/  (720x960 pic)\n\nprobably is worth cleaning up.  This is in Chrome Canary, OSX, btw.\n. Oh, I expected that I wouldn't be able to move the image outside the allotted space (the click-drag cover).   This seems like a \"wave/particle\" sort of bug/feature, depending on your perspective.\nI think your idea, increasing/decreasing allotted space to contain the image, is a good idea. Otherwise people will probably report it as a bug.  I'd rather it do something less useful and less unexpected than have to maintain a slightly weird behavior which people will ask for strange extensions on.  \nMaybe there could be another feature later like \"pin image to top of viewport\" to fill the request of \"put the image wherever\".\n. example data structure:\n{\n'2014-12':      // let's assume today is the first day of the 13th week of 2014\n    {\n         'djscsi': 1,         // an upvote 3 days ago\n         'honestbleeps': [ 3, 1 ],   // 3 upvotes, plus an downvote from 5 days ago\n    },\n'2014-11':\n    {\n         'gavin19': { v: 2, t: \"tortoise\" },        // a tag from a while ago plus two upvotes 10 days ago\n    },\n[ ... snip ... ]\n'2012-03':\n    {\n         'tico24': 3,         // 5 upvotes and 2 downvotes from a while ago\n    },\n[ ... snip ... ]\n}\n. Would shuffling around user tags into buckets be sufficiently slow to warrant only doing it every so often (e.g. weekly)?\n. We could also add in \"recently voted-upon things\" and limit each user tag's \"recents\" size by \"last modified\" and \"total number of user tags.\"\n. premature optimization. closing in favor of https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/821#issuecomment-64971773\n. The RES module prefs/settings/options framework code should also declare storage items for each module's options.\n. A storage item should also include a \"compress\" attribute which triggers https://github.com/nmrugg/LZMA-JS or https://github.com/msgpack/msgpack/ or something\n. Comments can have multiple images.\n. related: #1571 \n. note different limit on text posts for subreddits which are text-only.\nplease add pointers to reddit's definitions in RES code for reference\nedit for clarity:  i.e.\n```\ncommentPreview.js\nMAX_LENGTHS: {\n    WIKI: 50000,  // defined @ http://github.com/reddit/reddit/files/SOMECOMMIT/r2/lib/models/posts.py#L123 \n```\n. whoops, sorry!  forgot to clean them out after moving tests into troubleshooter.\n. Probably hasn't been a widespread problem before because\n```\n.RESImage {\n    display: block;\n}\n\n\n   etc\n\n```\nbut it looks like mediacrush expandos don't add  RESImage class.\n. That is kinda odd.  I wonder if it was paired with not enabling ![](http://image.hot/linking).  wonder what the overriding style is on wiki pages for it..\n. Thanks for the kind words!  It's always nice to hear about how RES improves people's redditing experience.\nCategorizing saved posts is a reddit gold feature (as of just a week or two ago!), so it won't be implemented in RES.\n. @honestbleeps We should probably just chunk up the subreddit manager enhancements into smaller tasks and incrementally build it up.  How about I scrabble together some GUI mockups and we can spec out designs?\n(I feel like I've asked this before, but I keep forgetting the answer.)\n. honestbleeps            ios-style edit button really\nhonestbleeps            so + button becomes [edit icon]\nhonestbleeps            i think the use case for + button is minimal.. you've got +shortcut on the hovers and in the sidebar\nhonestbleeps            [edit icon] gives each item an [x] to delete\nhonestbleeps            maybe drag/drop are only enabled when [edit mode] is enabled\nhonestbleeps            and i want drag/drop creation of folders\nhonestbleeps            drag to resize vertical height of it is something that'd be nice\n. andytuba            in the interest of discoverability (because people will never ever look in the right corner) also adding a  [edit] [del] dropdown after 800ms-ish of hover (customizable) on shortcut  (or prepend/append it to multireddit menu)   (or option to disable that)\n. andytuba: my notes about how i want to do UI on the \"edit shortcut\" form            5:11\nandytuba            basically turn the \"Subreddit:\" label into a [select] with options Subreddit, Multireddit, User, anythingelse?          5:12\nandytuba            and depending on that select, add a placeholderish hint to the textbox like   [/r/       ]          5:13\nandytuba            (just display text)         5:13\nandytuba            and then also maybe add a select/custom after the [/r/SUb1+sub2] field with [ hot | new | top | custom ]\n. https://arty.name/localstorage.html\n. For reference, RES supports Chrome, Firefox, Safari, Opera 15+.\n@honestbleeps What do you think about stretching the \"functionality should be supported in all browsers\" by offering differing/partial implementations? e.g. \"Chrome has unlimited storage, Firefox will warn you near 4mb\".  This will need per-browser strategies anyway.\n. When notifying the user that they're running out of room, RES can offer:\n- troubleshooter.clearTags() - Remove all entries for users with +1 or -1 vote tallies (only non-tagged users).\n- point user towards /r/Dashboard#userTaggerContents for manually managing tags\n- point user towards /u/{{username}}/saved#comments for manually managing saved comments\n- (new development:) provide more batch-management tools for tags, comments, other many-small-thing collections\n- point user towards instructions on increasing their own quota\nI'm inclined to ignore the nitpickers, but placate the power users by offering a \"warn at --% full\" option defaulted to 80%.  As of the next release, users will have the power to selectively disable notifications from any module.\n. Firefox simple-storage: https://developer.mozilla.org/en-US/Add-ons/SDK/High-Level_APIs/simple-storage#Quotas\nfunction myOnOverQuotaListener() {\n  console.log(\"Uh oh.\");\n}\nss.on(\"OverQuota\", myOnOverQuotaListener);\n. looks like forwarding to opera store now\n. :+1: does what it says on the tin\n. http://www.reddit.com/r/ideasfortheadmins/comments/212rkc/super_simple_idea_for_the_404_page_tell_people/\n. spoiler.options.selectors = fields: { selector: [css string], where: everywhere / everywhere but / only on subreddits: subreddits: [list of subreddits] }\n. http://www.reddit.com/r/Enhancement/comments/25yuk1/feature_request_allow_spoilers_tags_to_work_with/\n. http://www.reddit.com/r/RESissues/comments/29hxu8/bug_spoiler_tags_are_transparent_in_every/\n. You'll also need to update any references to reddit.com with your server's hostname.\nIncidentally, we're (slowly) working towards making RES easier to maintain (and port to other domains) by swapping out all of the \"https?://(?:[a-z]+.)reddit.com/...\" regexps with \"what kind of page\" checks.\n. Re: older versions and updating -- there's precedent in RES code for munging the data structure if an older format is detected when the module loads. \n. Another concern is storage space: user tagger is infamous for filling up RES's storage quota.  If we're messing around with the structure anyway, it'd be good to switch to a more space-efficient structure.\n. 77062334474e89fcf7c924c48c4178f864ce6dde\n. oops\n. another good suggestion from /r/enhancement in the same vein: show the expando button for OP.  could stick it up in top right corner and use that to toggle \"pull down original post as drawer\" or something\n. I want dis.\n. Since @thybag has already got us on the way to using Grunt, I'd like to see how easy it would be to just stick most of the eggs in that basket.\nI think makelinks.sh should be minimally maintained just for lightweight RES development (basically, enough to get Chrome devs up and running), but Gruntfile.js could contain all the really nice build tasks.\n. ##Compile core stuff (not browser-specific)\nhttps://www.npmjs.org/package/grunt-concat-in-order  \nCompile advanced stuff (coffeescript etc)  (not browser-specific)\nlooks like grunt ships with coffee-script module\nCompile (Browser-specific)\nhttps://www.npmjs.org/package/grunt-chrome-manifest\nhttps://www.npmjs.org/package/grunt-mozilla-addon-sdk  \nRun in browser\nhttps://www.npmjs.org/package/grunt-mozilla-addon-sdk\nhttps://www.npmjs.org/package/grunt-reload-chrome\n. Does file order matter in the manifests?  @honestbleeps \nedit: I should prob use folder structure or something to help enforce load order.  we've been meaning to move stuff into /lib/core, /lib/vendor, etc. anyway\n. that could work.  we could also list them in package.json\nedit: yep, got a system for package.json to override the default file search.\n. Current progress, no guarantee of functioning: https://github.com/andytuba/Reddit-Enhancement-Suite/compare/grunt-manifests\nedit: incidentally, i'm not married to how I'm generating the file listings and then munging them.\n. On further thought, concatenating templates seems like a bad idea:\n- one bad template kills any following templates\n- need duplicate workflows in makelinks.sh and Gruntfile.js to concatenate them in order to support lightweight dev and full dev environments.  bleh.\n- \"i have to add files to manifest\" is immaterial because grunt task for that\n- it should be plenty possible to load templates as needed from javascript with a little restructuring of template loader\n- don't expect it to take noticeably longer than the single-file alternative\n- only need to load required templates. very minor memory win.\n. i want dis.\n. > Up\nDo you mean \"bump\"?\n\nBut do you see it in a new popup, or at the bottom of the user popup ?\n\nI would like to see a new popup.  I don't want the form built into the user popup.  (see also - launch from command line))\n\nI think it shouldn't support all the commentTools, it's just a way to quickly send mp. If we want the comment tolls we should click on the old send mp link (assuming if we add a send message popup there is still a link to send the mp with the old way), because else it woulde surcharging the popup and loose the \"quick send a mp\" idea. But it's just my opinion. What is yours ?\n\nYeah, I agree - the form should only have \"to\", \"subject\" (maybe autofilled with \"quick message\" -- customizable via option), \"text\" textarea, and submit button -- with no formatting tools.  A nice-to-have: some link/button which sends the user to /message/compose?to=...&subject=...&message=... labelled ... \"Go to full message form\" or something\n. cool follow-up ideas: \n- show popup when hovering \"message the mods\" link\n- show popup after reporting a post/comment, to=/r/{{subreddit}}, subject=\"reported post/comment\" text={{permalink}}\n. fixed\n. Using buildify just to load the temp/ls/*.txt files is a little heavy-handed, but it works.\n. I think this is actually good to go (as soon as possible after release build).  Of course, everyone will have to change where their development plugins are loaded from -- but it's a better place now!\n. @mc10 I've already put partial file lists in package.json, mostly to specify which files come first in the list.  The rest of the file list is autogenerated by a grunt task and a spec (lib/vendors/*, lib/core/*, etc.).  I was just now thinking it would be good to move the file spec into package.json as well. (edit:) however, i'm not sure how best to rewrite Gruntfile.js resourceFiles() in terms of package.json files.\nThe manifests are currently built with grunt manifests, which is part of the default grunt task.\n. I'm trying to enable people to contribute to RES without having to install node and grunt.  My current idea is to have grunt users (or a bot) generate and commit those files for the benefit of non-grunt users.\n. > Chocolatey  \n\nnode\nPowerShell\n\nThis seems terrifying to me if I'm just some guy who knows a little JavaScript, can find the code in my Chrome install (we point to it on the \"backup\" wiki page), and just want to contribute a little feature.\n. @mc10 sometime .. eventually-ish.  i'm not really satisfied with how i set up the grunt tasks.  kinda want to switch to gulp instead, or a plain makefile.\n. also add a build # to the version #?\n. yeah, @dashed, gulp definitely seems like the way to go. trying to force grunt into a gulp-like workflow was yucky.\n. dupe of #1428 but that one has more discussion\n. cool!  does what it says on the ~~tin~~ title attribute.  easy to recover from, too - just [X] out to cancel changes.  this'll hopefully bring some visibility to the sort button on the subreddit manager bar, too.  no complaints here.\n. some NSFW subs: http://www.reddit.com/r/RESissues/comments/222uuu/announcement_res_432_has_been_released_chrome/cgivl11\n/r/AskReddit: http://www.reddit.com/r/RESissues/comments/223y6g/bug_tabs_missing_askreddit_with_chrome_33_res/\n. That particular change only went in a week ago.  We were all cussing ourselves in IRC last night about missing that it broke stuff :sweat:\n. 6b5c6eb01d98c39c8352e9cad8b52f52eb3ae910\n. http://www.reddit.com/r/RESissues/comments/22ormm/bug_the_next_button_at_the_bottom_of_the_approved/\n. http://www.reddit.com/r/RESissues/comments/22f9r7/bug_next_page_option_not_showing_on_ban_page/\n. IIRC the rationale was \"it's a very low-traffic site except in particular subreddits, so RES shouldn't waste cycles checking for it.  If you subscribe to subreddits where it gets posted, turn it on and tell your friends.\"\n. that sounds like a great idea.  maybe disabled too.\n. also a good idea\n. Looks great! I love these little contributions that fix long-standing annoyances.\n. alternatively, module to add ?depth to all comment permalinks\n. http://www.reddit.com/r/Enhancement/comments/26bozy/feature_request_please_summarize_your_feature/#\n. http://www.reddit.com/r/Enhancement/comments/28lmgc/feature_request_hide_child_comments_for_child/\n. Option to add more buttons (default) vs move them down several levels \n. javascript\nvar commentDepth = parseInt(module.options.commentDepth, 10);\nif (commentDepth >= 0) {\n$(document.body).on('click', 'a[href*=\"/comments\"]', function(e) {\n    var href = e.currentTarget.href;\n    if (href.match(RESUtils.regex.comments)) {\n        // if .href has depth queryparam, return\n         // if .href has a particular comment ID, return ... maybe?\n        e.currentTarget.href = href + ('?' or '&') + 'depth=' + commentDepth;\n    }\n});\n. https://www.reddit.com/r/Enhancement/comments/3jbr4x/is_there_a_way_to_select_how_many_levels_deep_i/\n. https://www.reddit.com/r/Enhancement/comments/42b4b0/feature_request_hide_child_comments_for_child/\n. does this still need to be addressed?\n. no worries -- half of one, six dozen of the other.\n. It seems that deleting your fork make this PR unmergeable.  Good to know!\n. @matheod It looks like GitHub is treating this PR as \"closed and not re-openable\":\n\ngithue  wants to merge 2 commits into honestbleeps:master  from unknown repository\n\nNo \"close\" button, no \"reopen\" button, and no \"Merge this pull request!\" button.  (Github shows these to project owners / collaborators.)\nHowever, it looks like I can manually merge the PR's commits if I checkout the PR branch from the pulls remote.\n. Yeah, #894 shows the same symptoms.\n. that makes sense.\n. So they did!  It was an interesting experiment.\n. http://www.reddit.com/r/changelog/comments/231bpl/reddit_change_ranks_added_back_to_the_front_page/\n. yup, thanks!\n. Duplicate of #384 \n. Duplicate of #384 \n. does changeCategory quit early if you're not actually changing the category?\n. really?  it looks like it should be quitting early: https://github.com/matheod/Reddit-Enhancement-Suite/blob/38b19ba5b262ba0ce023b74ce700b45dfcb0ae61/lib/modules/commentNavigator.js#L184\n(on the second time you call it per category, at least.  so changing who is highlighted )\nedit: I  think it would not make worse UX to take that \"already defined?\" check out.  especially if the user has loaded more comments.  in fact Comment Navigator should probably re-search every time you click next/previous\n. cool.  i think that will only affect if you highlight or un-highlight more than once.   edit: oh yes that is exactly what you described\n. I vote for:  highlight globally and keep it in session storage\n. +1 saving hlights by thread\n. my baaaaaad\n. Modules are enabled by default.  You only need to add modules which are disabled by default to resetModulePrefs.\n@honestbleeps What do you think of refactoring so the module itself declares if it's disabled by default?\n. :+1:\n. :+1:\n. @erikdesjardins says this already got implemented in RES\n. @erikdesjardins says this already got implemented in RES\n. How about adding overflow: auto on the module (subcategory) block?\n. @matheod With Github, you can put  \"Fixes #411\" in a commit message or pull request's description.  Then, your PR is merged and closed, GitHub automagically closes the \"fixes #...\" issue too.\n. Cool! That's a nice usability fix.\n. I think the magic comes from \"fixes #xxx\".  If you write \"unrelated to #xxx\" or \"related to #xxx\" or something else, I think GitHub only adds a link on that PR: \"matheod referenced this PR from somewhere else\".\n. :grinning:  yes, it would.  gotta be careful with those matching patterns\n. re  edited note  \"this notification should not fire more than once per day\", I would like to improve the notification module:\n- modules.notifications.notificationType.fields[\"frequency\"]: always, [at most] 1x / 10min, 1x/hour, 1x/day, 1x/week, 1x/month.  Suggestions on time spans?\n- modules.notifications tracks last time a notificationType was fired (if frequency is not always) and checks that against frequency before showing notification\n. that sounds useful!\n. maybe it should be split into:  max [ # off times ] per [ time span ]. \"0 -- anything\" just means \"always always\";  \"1 -- always\" would be good for one-off notifications; everything else is normal.\n. http://www.reddit.com/r/Enhancement/comments/24nxff/is_there_a_way_to_turn_off_all_subreddit_styles/\n. http://www.reddit.com/r/Enhancement/comments/27bfso/how_to_disable_subreddit_style_on_all_subreddits/chz7iss\n. a little fixed. i still want something to target people who use RES's \"Use subreddit style\" checkbox but don't know about reddit's preference.\n. I was thinking-- show notification every time the user clicks the checkbox, with cooldown: 1000*60*60*24*7 so they only see the message once a week.\n. > as we can disable the notification\nexactly what i was thinking.  if people complain about it enough i'll make a bigger button or something.\n\nif >10 subs disabled\n\nyes this is great idea.\n. Mozilla prefers that we use a publicly released version of any vendor scripts, presumably for efficiency during the review process: \"has Mozilla already reviewed this script?  Does the included copy match the reviewed copy?\"\n. to clarify, this PR shows your subreddit's %%images%% in wiki preview\n. Ideally this would go in a modules/searchReddit.js  module.  I think it would be okay if it were the only (or one of a few) options in a module with a good name.  Also, I think RES should have a discrete option for turning off UI feature it adds.\nI also plan to add more to the sidebar search: \"sort by: [relevance | new | best | etc]\" and \"time: [ day | week | month | etc ]\" dropdowns.  Those would also go in the searchReddit module.\n. us first, then reddit added theirs (and maybe bmaybe ours visually?) then we removed ours \n. I don't think so, because we already have the title value which appears on hover and on-hover effects can get annoying when you're just mousing around.\n. the main goal is that people are confused by the (!).  they don't know they should click it.  i think a notification is more obvious and could give more context.\nthe overall goal for (!) or a notification is to notify people that there is an announcement they should probably read. \n. exactly -- it's confusing =D\n. Yeah, let's treat these as two separate work items, esp since it'll be slightly easier (although still bad UX as azatoth described to merely implement \"keep box unchecked\":\n1. #983: uncheck \"use sub style\" if user has \"allow sub custom style\" preference disabled\n2. #677 enable subreddit style if \"use subreddit style\" has been re-enabled \n. Fixed by #986 \n. Thanks!\n. @honestbleeps this PR is ready to merge now.\ni'm reasonably confident i didn't break anything. to keep it that way, I'd rather not add much more polish right now.\n. It's a known issue that Safari doesn't properly add expando'd images to history, right?\n. ah yes https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/716\nanybody got a copy of Safari 6 I could test this branch on? =D\n. filesplit, too.\n. until somebody figures out a good implementation, attempting to remove autoplay on videos seems like the lesser evil\n. another idea -- siteModules are responsible for tagging expandos as \"probably safe to autoplay\" (i.e. \"will it be silent and not eat too much bandwidth) and just have a slightly bad user experience where people have to click twice to play videos with sound or siteModules which don't add that property.\n. (saved page issues, too. that probably falls under \"selftext and comments\")\n. 314fa7996feea69b351c5e22bfe1e5302e2c0a21\n. > because I don't have Opera\nThen install it, you goober!\n. Well, it won't break your computer.  It just doesn't have as many features as Opera 12.\n. > The only possible problem would be if Reddit use a script to add dynamically something to the page but I don't see where they could do that.\nThat's what the DOMMutationObserver or whatever it's called is for\n. http://www.reddit.com/r/help/comments/24jgae/links_to_youtube_dont_show_inside_reddit/ch8kyjs?context=3\nI think I've seen the occasional post in /r/RESissues+Enhancement about this, too.\n. whoops, forgot about toolbarfix / didn't notice #960 \nin that case, this is even lower priority since it would only apply to people who followed a /tb/ link directly from IM/email/facebook/etc.\n. http://www.reddit.com/r/Enhancement/comments/24lo0h/can_i_filter_nsfw_posts_for_a_single_subreddit/\nhttp://www.reddit.com/r/Enhancement/comments/1kduw1/possible_to_blacklist_a_single_subreddit_of_nsfw/\n. i like the look of this, with the caveats that:\n1. i haven't independently tested this\n2. I forget what honestbleeps implemented on that image preview project, and\n3. the minor comment about collating the \"sitemodule enabled option key\" code.\n. I see some slight functional differences.\nWith thybag's implementation, the hostname => siteModule mapping is built staticly as siteModules[partialDomain] = siteModule and siteModules[alternatePartialDomain] = { alias: partialDomain }. That means one extra siteModule object per alternateDomain and consequently special handling when setting up the \"siteModule enabled?\" option (to ignore the alias siteModules). honestbleeps' implementation builds the mapping dynamically from each siteModule's .domain and .alternateDomain; each siteModule contains its own domains.\nIn thybag's implementation, alternateDomain => siteModule is resolved when looking up the siteDomain for each link. in honestbleeps' implementation, that is handled as part of the dynamic mapping setup on load. \nEverything else seems like stylistic differences which may matter more to other people than me :grin:\n. Happy PR #1000!\nStyle notes for PRs: \n- keep it succinct: title < 70 characters, details in description\n- \"Fixes #851\" is sufficient. With that phrasing, GitHub automagically closes the referenced issue when your PR is merged.  (I deliberately use a different phrasing to avoid auto-closing some issues, e.g. \"partially addresses #xxx\" .)\nIf I were writing up this PR, I woulda picked something like..\n```\n\"me\" command in RES console to access current user's pages\n\nFixes #851\n```\n(okay now i'm actually gonna go look at your code :grin:)\n. Looks good!  The saved comments tip is the only thing that really concerns me (but not very much), the rest is menial style / improvements.   If you want to make any changes to this PR, just add new commits and push 'em on this same branch.\n(Caveat: haven't independently tested it yet, but the code looks okay and easy enough to fix up if need be.)\n:+1:\n. /r/SUB/about/banned is OK\n. /r/SUB/edit/flair is also okay, although the \"next\" button is much more minimalist than I would've expected.  maybe missing a class for expected reddit style? \n\n. If anyone can point out specific buttons which need accessibility improvements, that'd be great!  (There are a lot of buttons in RES.  I'm not sure which ones use click handlers and which ones use proper links/buttons.)\nIs it worth adding in aria properties, too?  maybe adding them to existing reddit elements?\n. \"Game thread\" -- do you mean contest mode?  can you link to an example?\n. oh, i dig it.\ni guess this could be implemented using something like the flair and keyword filters, but triggering redirect instead\n. http://www.reddit.com/r/RESissues/comments/258b99/bug_res_removes_my_username_in_the_top_right_hand/\n. http://www.reddit.com/r/RESissues/comments/258b99/bug_res_removes_my_username_in_the_top_right_hand/\n. http://www.reddit.com/r/bugs/comments/25600u/my_username_and_karma_not_showing_up/\n. http://www.reddit.com/r/bugs/comments/25600u/my_username_and_karma_not_showing_up/\n. thinking of making a special-case hardlink or build script or something \n. i vaguely recall somebody fixing this. \n. http://www.reddit.com/r/restests/comments/2581sf/links_in_self_text_comments/\n. @honestbleeps can we add @matheod as a contributor to the repo so we can assign him bugs?\n. fixes #1019 \n. whoops, what about link10?\n. link10 fixed by https://github.com/matheod/Reddit-Enhancement-Suite/commit/750b0d2c81b70e6b471a747a88bc92344b3a7bc8\n. > at least adding a backlog tag\nI've been trying to use the \"Priority-Low\" and \"Feature request\" labels for that, but they're only really visible when you're using GitHub website/app.\n. > at least adding a backlog tag\nI've been trying to use the \"Priority-Low\" and \"Feature request\" labels for that, but they're only really visible when you're using GitHub website/app.\n. I WIIIIIIN\nhttps://gist.github.com/andytuba/1c82fefbef4e1a4631aa#file-output-md\n. Oh yeah, I gotta make sure to add a line item: \"tidying up after us sloppy shmucks -- the eagle-eyed @mc10\"\n. I re-ran the changelog job (updated issue body) but i feel like i'm still missing some issues/PRs that should get logged..\n. !!!  add a thank you to /u/hamgina for being so nice during 4.3.2.1 chaos\n. @matheod hrmmmm i updated with new code and a fresh run, but I still feel like there's not enough issues listed.\nedit: also i pushed changes to github-changelog\n. It's getting better.  Now i've got issues fixed by commits in the list and some issues fixed by PRs in the list.  However, my \"PR closed at same time as issue closed ==> PR closed issue\" assumption only works about 20% of the time.  For the meanwhile, the list includes all closed issues; issues which don't have a concurrent PR have \"(fixed?)\" appended to the title.\n. also still need to figure out what to do about @honestbleeps' commits which don't have any issue.  should we create issues after the fact and mark them Closed-fixed?  pull all commits which don't have an event associated (eg. merged, referenced)?\n. note to self:\n~~give cookies to matheod~~\n962 is PR that fixes #887\nhttps://api.github.com/repos/honestbleeps/Reddit-Enhancement-Suite/issues/962/events where event=merged, its commit_id matches https://api.github.com/repos/honestbleeps/Reddit-Enhancement-Suite/issues/887/events event=referenced commit_id\nthis might only work for commits with one commit in the PR?\n. @matheod can you be more specific please\n. Ah, #851 and #857 -- Il'l need to tweak it to look at the commit author, not the closing-action actor\n. @honestbleeps @matheod i'm in a rush so i punted and included hopefully everything that was closed. attributions may be incorrect.\n. definintely\nalso\n\nmatheod: An option to make it link to the current subreddit could be good too. I never visit reddit homepage or /r/all and sometime when I want to go back to the current subreddit main page I click on the wrong logo and got redirected to reddit homepage.\n. thought i already had an issue open for this\n. http://www.reddit.com/r/Enhancement/comments/2hce32/feature_request_can_i_enabledisable_night_mode_in/\n. fixes #1009 \n. and yes, i'll field the questions from people who are annoyed because they can't be arsed to uncheck \"\u2611Always show this notification\"\n. User tag or what?\n. @gamefreak opinion?\n. if the category is empty,then the macro goes in the \"macros\" dropdown.  that's legacy functionality and I feel that it must stay that way.\n. this PR is great --  i think the current code has been throwing errors in safari because no sanity check\n. related https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/906\n. @agentlame I don't understand your question.  Can you rephrase?\n\nMaybe I should just build you a copy of RES (if you don't already have a dev build set up) and you can see it in action.\n. i should also take advantage of RESUTils.cssprefix now that it's merged.\n. specific examples of \"useful things which have just a little animation\": vote buttons, e.g. /r/dogecoin's upvote rocket\n. good enough for now.\n. good enough for now.\n. thaaaanks\n. :+1:\n. This is something I'd just like to do some afternoon very soon after a release.\n. @mc10 Yeah, REScategory.method sounds simpler than RESutils.category.method.  (I'd like to keep the RES prefix to namespace these collections, for clarity and because I still don't trust/understand Opera12's sandboxing.)\n. I'd rather move them into CSS.\n. more generally, I would like to move all CSS blocks into .css files.  For module-specific, moduleName.css and the module can RESLoadResourceAsText(\"moduleName\", function(contents) { RESUtils.addCss(contents); }).  of course, programmatic CSS (e.g. CSS which includes values from RES options) must stay in the module -- but for CSS which is applied conditionally (e.g. accountSwitcher's dropdown style), we can add extra  classes to the body or elements in question.\n. http://www.reddit.com/r/RESissues/comments/1yvgrl/bug_res_has_problems_with_another_chrome/\nI don't think there's much RES can do about it, sorry.\nedit: maybe we can submit a PR to https://github.com/davidmz/apng-chrome  with some fix?\n. https://www.reddit.com/r/Enhancement/comments/4puaaz/\u0430b\u0456l\u0456t\u0443_t\u043e_s\u0443n\u0441_h\u0456dd\u0435n_\u0440\u043ests_\u0430\u0441r\u043ess_\u0430\u0441\u0441\u043eunts/\n. https://www.reddit.com/r/Enhancement/comments/4puaaz/\u0430b\u0456l\u0456t\u0443_t\u043e_s\u0443n\u0441_h\u0456dd\u0435n_\u0440\u043ests_\u0430\u0441r\u043ess_\u0430\u0441\u0441\u043eunts/\n. :+1:\n@honestbleeps looks worth merging for v4.4\n. yeah, we should also add a (X) button inside/next to the text field a la iOS.  but this is quick, easy, and better than before. :grin:\n. re: backspace as hotkey:\nhttp://xkcd.com/1172/\n. thanks\n. yeah, how about you switch it to .thing -- that'll cover selfpost text.\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1479\n. oops thx\n. looks like that \"which commands should i run on which page?\" switch needs some tidying up / expansion\n. i'm .. i'm a little concerned about this PR, @mc10.  have you properly tested it?\n. specifically so users can tag themselves to provide extra visual reminders to which account is which\n. This could also generate a standalone tool for generating RES-friendly CSS.\n. I think that needs a new PR; I don't believe GitHub  lets you merge twice from the same PR.\n. heh..\n\ntext=auto\nGit will handle the files in whatever way it thinks is best. This is a good default option.\n. Educational aspect: if the inbox contains several long threads, notify the user about the option (with a notification cooldown of a day)\n. Modmail also/instead? \n. Should this prompt the user before removing, or notify after, or notify after with restore button, or silent?\n. Yeah, it's essentially a UI issue. It would be a cute nice thing to do but is really addressed by improved UI.\n\nI have an idea that doesn't require UI overhaul, but could be reasonably preserved post-overhaul: adding an  [:pencil:  :x:] menu item dropdown to any shortcut, and adding it to top/bottom of multireddit shortcuts.\n. ah, that is a much tidier way to address this issue\n. maybe also add the [-shortcut] button on the banned/private page for a  familiar button\n. hermithome wants to save the extra click to get context at all\n. hit \"g\"\n. I would like an option regarding macro keys (keyboard hotkey), which requires me to press a keyboard shortcut (e.g. Ctrl+G) before I press the macro key. Also good: a pop-up panel showing the macros' key and label, sorted by category.\n(disabled by default)\n. related to #741 \n. http://www.reddit.com/r/Enhancement/comments/27s718/any_way_to_hide_all_threads_from_an_ignored_user/  and about a dozen more\n. :+1: paperwork\n. :+1: seems to do what it says on the tin.  the only thing i have a question about is if the night mode override default should be 24 or 8 or 12 or something.\n. also :+1: x :100: for screenshot of settings in PR\n. looks okay. think we'll generate any merge conflicts?\nedit: with other open PRs that will likely get merged soon, of course.\n. > if the changes ... affect the same areas of a file ... a conflict shows up\nThat's what i'm wondering about -- if any PRs have touched those same lines.\n. These are some interesting points!  Highlighting vs autocolor is an issue in white mode, too.\nWhat do you think of just having highlighting text color overriding the user's \"random\" text color?  (For context, a formula is used to generate the user's text color based on their username.)  \nWe could also put some work into trying to generate related-but-compatible colors for \"user while highlighted in different states (OP, OC, admin, mod, friend, etc.)\".  It's an interesting challenge; not a ton of work, but not insignificant.\nFor reference: Settings > Users > User Highlighter (userHighlight) autoColorUsing    - Select a method for setting colors for usernames \n. that's a supercool idea.  i really like that.\nre: mod/op/admin/etc. highlights - how about using the \"user's random color\" as border color, letting us use normal text color for that highlight\n. right - I'm proposing: white/black text, green/blue/red/orangered background, autoRandomColor outline.  thus, readable but you still get the hint of the user's assigned color.\n. yaaaaaaay :kermit:\n. yeah, looks like RESInitReadyCheck was the culprit per comment on https://github.com/CyberShadow/Reddit-Enhancement-Suite/commit/dbc161efd3ec9111c13d6897a0e72239069ef6ba\n. yeah, it was one of those \"why are we awake between 11pm and 2am, if only we had more experience with Opera12 debugging\" kind of sessions\n. I haven't done anything about this.\n. I haven't done anything about this.\n. I haven't done anything about this.\n. I haven't done anything about this.\n. If I never see that question again, then it's worth it :D\n. i like it, thanks @hermithome  \n(fyi you can reference issues just like #1139 -- literally just hash sign, number, no need for link syntax. github will assume you're referencing an issue in the current project.  alternatively, you can dump in a a full URL directly to an issue, hash, or comment and github will format it nicely for you: https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1140#issuecomment-45251948 --> https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1140#issuecomment-45251948)\n. open to suggestions.\n. ah, i see - https://github.com/andytuba/Reddit-Enhancement-Suite/pull/10  \ni'll review it later (probably friday night?), thanks!\n. ah, i see - https://github.com/andytuba/Reddit-Enhancement-Suite/pull/10  \ni'll review it later (probably friday night?), thanks!\n. sorry, lemme merge @hermithome's PRs first\n. show warning on module options \"This module has advanced options. Show them\"\nsame on search results\n. I missed this before:\nhandleVoteClick: function(e) {\n        var tags = RESStorage.getItem('RESmodules.userTagger_');\n        if (typeof tags !== 'undefined') {\n            modules['userTagger'].tags = safeJSON.parse(tags, 'RESmodules.userTagger.tags', true);\n        }\nIt's nulling out .tags\ninvestigating now\n. I think it's just a typo https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/77062334474e89fcf7c924c48c4178f864ce6dde#diff-75cfd9be47c24f59fa06755f766cf14eR373\n. > Manage the case when a use get a link to an hidden option\nIf a user navigates to /#!settings/someModule/hiddenOption or navigates to a hidden option from search results, then of course show the hiddenOption. Should other hidden options in the module be revealed as well? \n. > Should other hidden options in the module be revealed? \nIt would be useful for related options, like hoverDelay and hoverSpeed.  It would be confusing for unrelated options, like showImages.maxWidth and ... all the rest of them.\nedit: i have a clever idea. reveal all the hidden options which are connected/contiguous to the option navigated to.\noptions: [\n     { name: \"option1\", advanced: true }, \n     { name: \"option2\" }, \n     { name: \"option3\", advanced: true }, \n     { name: \"option4\", advanced: true }, \n     { name: \"option5\", advanced: true }, \n     { name: \"option6\" }, \n     { name: \"option7\", advanced: true }\n]\nIf the user navigates to option3, show option4 and option5 as well.   same for  option4 and option5.\nIf the user navigates to option1, only show option1 (and basic options).\n. > How to inform the user that they were linked to a hidden option\nHmm.. flash the \"advanced options\" checkbox/label?\n. re: \"educational purposes\"  <-- options which are new in the last major version are not yet \"advanced\" but might be at a later point\nI also have a bluesky idea about advanced: bitmask of \"hide in module options | hide in search\"\n. but yeah \"advanced\" deserves a second pass from somebody besides matheod and me.. we kinda powered through them this weekend.\n. relevant: #1157 \n. > to and from time\nyou can restrict search by time.  the syntax isn't on the search wiki page, but it looks something like\ntimestamp: 1402414200000...1402414221636\n. https://www.reddit.com/r/Enhancement/comments/3utrjt/is_there_anyway_to_view_the_posts_on_a_subreddit/\n. https://www.reddit.com/r/Enhancement/comments/500q7e/feature_request_search_reddit_by_date/\n. timestamp https://www.reddit.com/r/Enhancement/comments/5bnw8a/feature_request_a_way_to_subreddits_by_top_of/\n. Dupe #1513\n. :+1: thanks, this should have been done long ago\n. suggestions from /u/AllWrong74: \nMythological figures from various cultures, e.g. Norse heroes (Beowulf, Sigmund, Hagbard, etc.); Norse gods (Odin, Freyr, Loki); Greek heroes (Achilles), Greek gods (Athena, Zeus)\n. I think it is a legitimate problem, since i've been fielding many questions from people who couldn't distinguish between 4.3.1.2 and 4.3.2.1.\n. IMO version names should be an add-on to, not a replacement for version #s\n. @honestbleeps: it was a pretty-noticeable problem with 4.3.1.2 upgrade to 4.3.2.1  and (less of but still a problem for) 4.5.0.2 to 4.5.2\n. Related: #2750\n. and may as well fix it for sidebar references while you're in there\n. [10:17am] Matheod__> the only problem, is for people with old value which are not in hex\n[10:17am]  they will see a black square\n[10:17am]  but if they don't set an other color\n[10:17am]  the old color is keep\nthat's backwards-compatible enough for me\n. [10:17am] Matheod__> the only problem, is for people with old value which are not in hex\n[10:17am]  they will see a black square\n[10:17am]  but if they don't set an other color\n[10:17am]  the old color is keep\nthat's backwards-compatible enough for me\n. i could do it an easy way but it's the not the right way, so I want to spend >5 minutes to do it right\n. i mean it needs testing with non-RES elements, like with our test suite of subreddit styles\n. i mean it needs testing with non-RES elements, like with our test suite of subreddit styles\n. fixes #1220 \n. What's the motivation // end goal?\nWould a \"management\" page like  /r/Dashboard#storage work?\n| Key | Value | Actions |\n| --- | --- | --- |\n| RESoptions.accountSwitcher | {\"foo\":\"bar\",\"baz\":\"qu... } | :mag: :pencil: :x: |\n. i do kinda wanna make that storage management page now, though... although maybe that's unwise\n. @mc10, didn't you fix this?\n. looks like that was part of #1698, thanks for line ref\n.   also check for np-XX.reddit.com or XX-np.reddit.com  (XX is sometimes nm for nightmode styling)\n.   also check for np-XX.reddit.com or XX-np.reddit.com  (XX is sometimes nm for nightmode styling)\n. I don't want RES to enforce user behavior unless the user turns on options to police themselves.  I only want to heavily recommend good behavior and inform the user why -- for both the user and the reddit community's benefit.\nI'll add in an option for hiding the arrows and bringing back \"don't allow voting from keyboard nav\"\n. > No special notification when commenting/submit a comment ?\nWell, there's already the notification when you start typing the comment.\n. wondering if hideVoteButtons makes undoVoteAutomatically obsolete.. \n. @hermithome i think you mentioned you had ideas for better wording on description/notification? including clarifying that \"yes, your votes and comments do count, np.reddit.com is not some magical happy place where you can fart around without thinking\"?\n. hideVoteButtons handles both clicking and keyboard voting.  if keyboard vote, the \"don't vote\" notification is also shown.\n. hmm  \"blockAndHideVoteButtons\" ?\n. i guess that works. i balked initially because under the hood the buttons aren't getting disabled attribute set, but then I remembered this is user-facing documentatoin.\n. what the heck, let's just say it's good enough and sort out the moral quandaries later -- it's as easy as disabling the module by default.\n. seems to work and looks reasonably safe .. I'm satisfied. i can think of some stylistic/bikesheddy non-functional changes, but they're unnecessary.  I can also think of some interesting complexities to make merges and updates a little safer, but they're not strictly necessary either.\n@honestbleeps opinion on merging to RES v4.4.0?\n. seems to work and looks reasonably safe .. I'm satisfied. i can think of some stylistic/bikesheddy non-functional changes, but they're unnecessary.  I can also think of some interesting complexities to make merges and updates a little safer, but they're not strictly necessary either.\n@honestbleeps opinion on merging to RES v4.4.0?\n. i think if we merge this (#1189), it will automatically merge/close #1188 because this PR includes #1188's commits and is marked \"Fixes #1188\".\n. i think if we merge this (#1189), it will automatically merge/close #1188 because this PR includes #1188's commits and is marked \"Fixes #1188\".\n. this breaks with NER because of how hidden comments are stored:  URL =>  [ comment1_id, comment2_id, ... ].  same goes for if you go to the same page using different language subdomains.\nwe could fix it by using a different format for hiddenThingsKey instead of just window.location.href -- something like  post_id || pageType \n. this breaks with NER because of how hidden comments are stored:  URL =>  [ comment1_id, comment2_id, ... ].  same goes for if you go to the same page using different language subdomains.\nwe could fix it by using a different format for hiddenThingsKey instead of just window.location.href -- something like  post_id || pageType \n. this data gets purged after a few weeks anyway, so I don't care very much about losing data.  it would be polite to do a migration, though; we can extract the post ID from the old key (since it's a comments page URL).\n. this data gets purged after a few weeks anyway, so I don't care very much about losing data.  it would be polite to do a migration, though; we can extract the post ID from the old key (since it's a comments page URL).\n. the main reason i see for this is to protect inattentive mods who only edit content in the sidebar from accidentally blowing away the config flags.\n. (but yeah i'm not super sold on the need to change where the flags live.  however, the module seems worth building.)\n. i was just brainstorming new flags the subreddit mods could throw in, like theme colors so RES can automatically set colors like comment backgrounds.\n. how do you feel about the [A-Z] button on the right side of the box?\n. how do you feel about the [A-Z] button on the right side of the box?\n. > don't know how to test in IE\nthat's okay, we don't currently support IE. http://www.reddit.com/r/Enhancement/wiki/support\n. > don't know how to test in IE\nthat's okay, we don't currently support IE. http://www.reddit.com/r/Enhancement/wiki/support\n. @matheod It appears the \"edit shortut\" form has a different implementation for the sort, which doesn't use the version you linked  (probably because it had \"save the shortcut and update the subreddit menu\" built in.  The \"sort shortcut\" function ought to be refactored, and maybe return { sorted: string, ascending: bool }. \n. @matheod It appears the \"edit shortut\" form has a different implementation for the sort, which doesn't use the version you linked  (probably because it had \"save the shortcut and update the subreddit menu\" built in.  The \"sort shortcut\" function ought to be refactored, and maybe return { sorted: string, ascending: bool }. \n. yeah, good idea - after all, you didn't touch the code, just the styling.\n. The difference should be imperceptible if you delay finding the parent until the user clicks \"navigate to next/prev\".\n. The difference should be imperceptible if you delay finding the parent until the user clicks \"navigate to next/prev\".\n. that's a little redundant.  \n$(\".thing.id-t1_ci1rrlw\").closest('.thing')\n. that's a little redundant.  \n$(\".thing.id-t1_ci1rrlw\").closest('.thing')\n. oh right, there's not a good jquery function for this.  use .parent().closest('.thing') instead\n. oh right, there's not a good jquery function for this.  use .parent().closest('.thing') instead\n. yeah, i'll have to figure out something clever to make it run before all the other modules..  maybe a beforeLoad thing that calls a special \"do not run any modules' go()\" call\n. yeah, i'll have to figure out something clever to make it run before all the other modules..  maybe a beforeLoad thing that calls a special \"do not run any modules' go()\" call\n. #757 \n.  i don't know what i was smoking ten minutes ago\n.  i don't know what i was smoking ten minutes ago\n. this might be solved by simply setting fadeSpeed to 0 in various plces -- this could be an onboarding todo item\n. this might be solved by simply setting fadeSpeed to 0 in various plces -- this could be an onboarding todo item\n. i've seen it happen elsewhere, too. .. either on OSX Safari or OSX Chrome Canary, unsure which subs.\n. i've seen it happen elsewhere, too. .. either on OSX Safari or OSX Chrome Canary, unsure which subs.\n. yeah, it's okay to put out an 80% product so long as it's not not buggy.  You can refine the experience in later updates. \nYou'll probably get some ideas from the community as well; I've gotten a few posts with feedback about autoColorUser.\n. I prefer adding it as a circle background on the rank, or a circle border on either rank or scores (all 3 - unvoted, upvoted, downvoted)\n. Idea: \n \nadd in  \"X points\" in the .tagline, in the same place as on comments, and color that text\nbetter idea: add a little colored dot in the .tagline  (and make it style =\"cursor: help;\" title=\"Colored per score\")\n\n. could go in #1281's module later too?\n. @matheod tracked down some fireworks\nhttp://codepen.io/vojja01/pen/GiBmr   // http://thecodeplayer.com/walkthrough/canvas-fireworks-tutorial\nlicense: \"free for use\": https://twitter.com/thecodeplayer/status/443788205670670336\n. i've seen this happen and ignored it because it's a menial bug that doesn't break anything\n. @matheod has an idea: when visiting a subreddit or multireddit's post listings, store the current sort (new, top, etc.) in session storage; then, changing the subreddit link in the header to use that sort.  (disabled by default)\n. One of my ideas -- option to specify a particular sort (default/auto (per matheod's idea), new, best, etc) for a given subreddit/multireddit.  change the subreddit logo link to point to that, and automatically redirect user to the correct post listing if they land on the default link (e.g. /r/enhancement --> /r/enhancement/new)   (option to not do this, or show a notification, or do it autoatmcailly)\n. related: #1028 \n. https://www.reddit.com/r/Enhancement/comments/4yulz8/is_there_an_option_to_have_all_subreddits_default/\n. https://www.reddit.com/r/Enhancement/comments/70lfap/suggestion_force_comment_sorting/dn5gicl/. https://www.reddit.com/r/Enhancement/comments/70lfap/suggestion_force_comment_sorting/dn5gicl/. @matheod thanks for https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1220#discussion_r13787443 and https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1220/files#diff-6360b0be2d4a48c79cdcd07e6d8c9820R622 -- i built them into #1175 code\n. 08:18 /r/Enhancement:  [feature request] Default 'sort' setting for searches ( http://redd.it/32oxtn ) [ self.Enhancement ]\n. how do you feel about a dropdown in the \"you are now subscribed\" notification?\n. That all sounds reasonable except for RES adding content to your inbox.  It would be better to instead implement a notification center: a page showing recent notifications and a indicator icon for \"missed notifications\" (plus options controlling whether to log certain notification types and light up the indicator).\n. @creesch interest\n. duplicate of #1137 \n. @matheod is currently working on a related thing\n. i think there's an issue kicking around for \"user tagger 'macros' (autopopulate from recents)\".. that might just be on @honestbleeps' mental checklist\n. @matheod e.g. I often tag people \"from my neighborhood\" in red or \"Enhancement fan\" in green.  I would like a  or macro-style dropdown which shows those two tags. When I select a tag from the dropdown, the user tag text and color is automatically filled from my saved tag-macro\n. > my most used tags are already in the top of the autocomplete\nthat's a browser feature, by the way.\n. duplicate of #1266 \n. > Allow editing individual multis within the sidebar. Click a link that says something like \"view multi details\" or \"edit\" to get the list of what subs are in the multi in the sidebar. With complete editing functionality. Buttons to delete subs, a space to add subs, allow change of privacy settings and a button to delete the multi altogether.\nhow about a link to a dashboard tab instead?\n. Under any particular \"subscribe\" button?  e.g. on subreddit sidebar, or on /subreddits/mine/, or somewhere else?\n. For prioritization purposes, is there a compelling argument to provide an \"at a glance\" view?  Is this an itch which can be scratched by improving the \"add to multireddit\" popup instead?\n. Alternatively, \"hide child comments\" could instead toggle all the child comments closed\n. this is probably better suited to toolbox/modtools\n. #757 \n. Thanks!\nimages --> media is a good  idea for files and option names. \"images, videos, and embeds\" is probably better than \"media\" in descriptions.  Would you be interested in updating more copy, @dashed?\nWe could use #1188 to rename the file/module too.. might not be worth the effort though.\n. I assume this is on the latest build from master, after merging your PR?\n. hmm it looks like a misguided check for \"returning from an async call\" and it's triggering on NER too\n. there have been some other requests like this, like  the \"zen mode\" PR which hide uppers and downers and karma.\n. :musical_note: mergin' mergin' mergin', keep these PR's mergin'.  fixin' up that code for releeeeeeease\n. at least we should probably disable by default\n. it's probably the manifests\n. For those of you playing at home in English-predominant countries, Shift / Shift+Alt\nalso an option in command line module to always open in new tab/bg tab\n. i'm a little leery of how i did this but i feel like it's in accord with previous decisions re: how heroic protection should be.  really, the menubar button is the solution.  hopefully there aren't any other edge cases out there..\n. I'm for it. Although that module needs overhaul, this seems like a good small move towards cleaning up. \nHow ambitious are you feeling? I have some ideas for supporting the ../foo shortcut hack with a select for  what kind of shortcut (/r/,  /me/m/, /u/,  /u/.../m/,  or reddit.com/) and maybe which sort/suffix to use (/,  /top,  /comments, /submitted, etc) \n. Fair nuff. Consolidating is a good precursor to my project anyway. \n. I know he wanted to change up the subreddit shortcut edit area by showing a drawer that lets you edit (presumably click to open edit form) and delete.\nHowever, I don't remember any plans from him about updating that particular form..\n. [12:52pm]  i think we could just img src=\"blank something or other\" when offscreen by X pixels\n[12:52pm]  then bring it back when in view\n[12:52pm]  we already have a DIV placeholder the size of the image\n[12:52pm]  (for drag to resize)\n[12:53pm]  the load feature would be throttled\nalso http://www.reddit.com/r/Enhancement/comments/28qe7h/feature_request_remove_old_pages_from/cie60yj\n. i still think it's worth adding the simple coloration option.  either that or something to offer a bunch of different presets for custom coloration including simple.\n. TESTING NOTES: because colorLinkScore has changed from type=boolean to type=enum, you will need to manually reset that option's value.  This is only a concern for people running dev builds.\n. or #!settings/troubleShooter/resetToFactory  or RESStorage remove RESoptions.voteEnhancements\n. thanks @mc10!  good cleanup as always\n. > if you make the box large \nyou should be using the big editor\n\nsmall screen\n\nbig editor might be the answer to this too\n. but i guess there could be an accomodation for tinyscreens by making sure the autocomplete shows inside the viewport\n. further discussion: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1279#issuecomment-46506291\n. Or if Microsoft locks down that pseudo-API, then suddenly RES is broken and that means a month or two of people complaining in /r/resissues.\n. :+1: on optional+off.  privacy-happy people should be happy to go enable all of these manually, especially if we maintain a wiki page pointing to all the \"privacy-friendly\" options.\n. I'm going for community support, you goober, not punitive measures against the user.  If there are 10 notifications, the user isn't gonna bother undoing any of them.\n. fixed by 5be6971\n. no, save-res is not equal to reddit save.  save-res snapshots the content, while reddit shows the latest version.  also, reddit only shows the last 1000 items in the listing, while RES is only limited by storage space.\n. I asked @honestbleeps about that a while ago and I vaguely remember him seeing that sort of thing is okay.\n. @mac10 is good about it. @honestbleeps has started doing it sometimes.  i'm terrible about it.\n. heh i'll wait 10minutes to see if you want to accuulate anything else.\n. @githue Did we already talk about how this broke pinHeader - subreddit menu & userbar?  (I think it was this PR, feel free to give me shit if somebody else was to blame :grinning:)\n. actually it looks like #1277 was to blame\n. Probably stick the gear in modules['floater']\n. I don't remember exactly what we decided on, but it seems better to use everything after foo+bar/ as the suffix.\n. FYI: for github PRs which fix issues, reference the issue from the PR:\nFixes ~~1352~~ #ISSUENUMBER\n. right, thanks.  rushing through bug triage\n. fixed by eae022c3b531fd33a128b3fed8367f66c718c972\n. http://www.reddit.com/r/Enhancement/comments/29or97/announcement_res_4500_released_for_chrome_other/cinl1rb\n. not yet, gonna accumulate threads here\nhttp://www.reddit.com/r/Enhancement/comments/29pmz1/where_are_my_saved_comments/\nhttp://www.reddit.com/r/RESissues/comments/29plod/dearlordpleaseno_ressaved_comments_gone/\nhttp://www.reddit.com/r/Enhancement/comments/29or97/announcement_res_4500_released_for_chrome_other/cindwzj\nhttp://www.reddit.com/r/RESissues/comments/29r6h9/bug_i_cannot_see_any_of_my_comments_that_i_saved/\n. one report back that no js errors =(\n. duplicate of #1365 \n. @joey5755 attn\n. oh, and @JonBons attn too\n. looks like reddit changed that html again.  sigh\n. try { ... } catch (e) { console.error(e, e.stack); }  is my usual coping mechanism\n. make sure this doesn't break ctrl+click to open image in new tab or ctrl+click contextmenu\n. I maybe added it to account for RES breaking on posts linking to images when the user had the \"compressed link display\" preference turned on.\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/bf88d400988f8c2273c0877535f52c2fbb9c4eee#diff-0767dec274256dd1746817f7f75c9890R8795  \nthere's a hint .. maybe filtered posts should be ignored?\n. hold on a few minutes, honestbleeps is actively working on it :D\n. Root cause: with the current implementation of updateOption(), the option is left alone if its value is not the given \"default value\".  However, the migration for commentColorScore from bool to enum passed in the wrong default value. \nif (module.options.colorCommentScore.value !== 'none') {\nfalse !== 'none' for sure.\n. On a separate note, we may eventually need to handle \"update option even if default value\" -- maybe by passing in undefined for the default value?\n. forceOptionChange works for me. !remindbot remind me about this in a month\n. i'd say turn off colorCommentScores again (unless user has selected a value other than \"none\", of course) and notify.. there's lots of people saying they like it, but there are also lots of upvotes on the \"undo default-on\".\n. slightly related, but we should be keeping an eye on feedback about the color selection.  maybe set up a few presets for userDefinedColoration to choose from\n. we could pick significant changes in hue from matheod's formula and use that to determine which class(es) is applied for each threshold.  maybe 5 rough thresholds (e.g. 5 / 50 / 100 / 1000, like threshold10, threshold20, threshold30, threshold40, threshold50) and 5 finer-grained thresholds (2, 25, 75, 200, 500, threshold15, 25, 35, 45, 55) ?\n. gonna add a notification for this.  executive decision: force it to \"don't color\" unless set to something already\n. yeah, i didn't immediately see an issue for it.  however, there's a novel approach here: using the private RSS feed for inbox-unread, which doesn't touch cookies at all.  the trouble is fetching the RSS feed URL and updating it when user changes password.\n. dupe requests: http://www.reddit.com/r/Enhancement/comments/2aln28/feature_request_inbox_notification_in_account/\n. https://www.reddit.com/r/Enhancement/comments/2rn2ht/is_there_a_way_to_get_a_message_indicator_for_all/\n. and how about user info options to set the default sort for links/comments\n. and how about user info options to set the default sort for links/comments\n. yeah, the hardest part of this is choosing where to put the links/buttons\n. yeah, the hardest part of this is choosing where to put the links/buttons\n. what do you think about\n```\n\n|    /r/enhancement (sort by: [new v])             |\n|________|\n```\nand clicking \"sort by\" takes you to /r/enhancement/new, and clicking the v shows you a dropdown of new/top/hot?\n.  eh, just merge it\n.  eh, just merge it\n. ```\n\nsomeColorOption\n\n\n\nif (BrowserDetect.supportsInputColor()) {\n    $(row).find(\"[name=someColorOption_text]\").show()\n    $(row).find(\"[name=someColorOption], [name=someColorOption_text]\")\n        .on(\"change\", function (e) { \n   / sync someColorOption and someColorOption_text values /\n});\n.\n\nsomeColorOption\n\n\n\nif (BrowserDetect.supportsInputColor()) {\n    $(row).find(\"[name=someColorOption_text]\").show()\n    $(row).find(\"[name=someColorOption], [name=someColorOption_text]\")\n        .on(\"change\", function (e) { \n   / sync someColorOption and someColorOption_text values /\n});\n```\n. one thing that worries me is how migration swallows errors and carries on.. i feel like we should stash that somewhre, or show notification; and stop migration\n. one thing that worries me is how migration swallows errors and carries on.. i feel like we should stash that somewhre, or show notification; and stop migration\n. I also want to change RESUtils.fadeElementOut so that, if the element is currently fading in, the element is faded out instead of quitting early.  (I should review where else this might happen.)  My motivation is if you're attempting to close a notification while it's showing, the notification will still be shown.  That's a bit of an edge case for the current usage, though.\n. 1. Why?\n2. This behavior should be controllable via an option in searchHelper, analogous to searchSubredditByDefault, and default to \"do restrict search to multireddit by default\".\n3. How about curated multireddits like reddit.com/u/andytuba/m/help ?\n. 1. Why?\n2. This behavior should be controllable via an option in searchHelper, analogous to searchSubredditByDefault, and default to \"do restrict search to multireddit by default\".\n3. How about curated multireddits like reddit.com/u/andytuba/m/help ?\n. oh, sorry, I misread the intent of your PR -- you're fixing a bug, not changing expected behavior.\n. oh, sorry, I misread the intent of your PR -- you're fixing a bug, not changing expected behavior.\n. I'm in favor of this.  (the general concept of using a newer library, that is.  and we can take out the browserDetect hack too, probably)\n. I'm in favor of this.  (the general concept of using a newer library, that is.  and we can take out the browserDetect hack too, probably)\n. yeah.  i wonder if maybe the ajax request for metadata turns into the image itself.\n. yeah.  i wonder if maybe the ajax request for metadata turns into the image itself.\n. yay!  thanks for quick turnaround on that.  I have a few minor points to make it function better -- it'd be nice if you could add them, but I'd be happy to take care of them.\n. thanks for changes!  code looks ready to merge as soon as somebody else tests it in action a little.\n. If somebody's bored, we could add in options to control which navigate-by's are visible..\n. I'm 50/50 on this.  That part of the UI is terribly crowded and deserves clean-up, but I'm certain some people have muscle/visual memory built in to look for certain buttons there..\n. @bronzle did you notice that this was fixed or is it still a problem in RES v4.5.2?\n. @bronzle did you notice that this was fixed or is it still a problem in RES v4.5.2?\n. This seems like a lot of work for very little payoff.\n. Yeah, may as well set filteReddits subreddits filter to apply to /me/f/all in addition to /r/all.\n. @Dashed, it's still unclear to me why we should bother segregating /r/all and /me/f/all filters.\nWhat's the use case for having an RES filter apply to only /r/all and not /me/f/all, or vice versa?  It doesn't seem like a problem to me if reddit filters a subreddit from /me/f/all and RES double-checks for it.  Why does it matter how long RES's filtered subreddit list is?\nI think it would be better to automatically add RES /r/all filters to /me/f/all (with an option to disable it) (for the benefit of people who use multiple devices), and a button to sync RES' /r/all filters with reddit's /me/f/all filters.\n. As of RES v4.5.2, any given link to a reddit page should be rewritten on click to remove np.\nFor v4.5.3, I plan to whitelist (not remove np)  .md a[href*=np.reddit.com] (links to np.reddit.com in comments, posts, wiki, sidebar), since escapeFromNp affects those links and RES shouldn't override a user/bot explicitly linking to NP.\n. Comment page re too\n. another request for that today\n. fixed by #1504\n. yyyyyep\n. oh wait i meant this https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/320d3906139050e67cebae27d98025bf9096add7/lib/modules/userTagger.js#L991\n. fixed by b57244335e6939ac2c237eb5ddbe3bf3ce7a7ebd\n. woo bookkeeping :+1:\n. yaaay\n. wasn't this fixed by an @honestbleeps commit \"something something dumb bug\"?\n. Thanks for the repro notes, @mikerp !  Mostly we're trying to reproduce it in the bleeding-edge RES.\n. sdluze, yes, it is fixed for the next release. the fix hasn't yet been released.\n. maybe also:\n- [ ] create release on github, fetch packages from webstores (chrome howto), and auto-upload packages to release\n. maybe fixed by @honestbleeps https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/bec04dbe6a8f662249541fbf97ad74bced998168  \"fixes ... bad sizing\"\n. @mc10\n- http://www.reddit.com/r/RESissues/comments/2ck0dj/bug_res_is_not_keeping_images_aspect_ratio/\n- http://www.reddit.com/r/RESissues/comments/29qawb/bug_viewing_an_album_expanded_from_front_page/\n- http://www.reddit.com/r/RESissues/comments/2aq1yj/bug_expandos_do_not_change_dimensions_with_images/\n. i see some comments about \"turning off conserveMemory fixes this issue\" so the aforementioned commit is very likely the fix.\n. http://www.reddit.com/r/Enhancement/comments/2daepv/feature_request_autocomplete_rsubreddit_in/\n. https://www.reddit.com/r/Enhancement/comments/2iri66/feature_request_in_the_command_mode_id_like_r_or/\n. @honestbleeps  what's the use case /  rationale?  is there a better solution which mods can implement instead?\n. yes, real examples please\n. @kwakie did you actually test this? it's being weird and kinda hard to test, also syntax error\nedit: oh, it's being hard to test because you didn't wire up the keyboard shortcut to the action.  this is a failing of keyboardNav's structure.  let's fix that later. https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1557\n. let's merge this after fixing syntax and actually connecting the keypress and the random action.\n. this is a cool concept!\nWhat do you think about inlining it into showImages.siteModules.imgur, rather than having it as a standalone module?\n. the other somewhat-frequently-asked question I've seen is a \"toggle expando\" button that floats on the left.  i think this box might be a good place for it..\n. http://www.reddit.com/r/Enhancement/comments/2hkhk7/feature_request_buttonslinks_that_work_like/\n. http://www.reddit.com/r/Enhancement/comments/2hkhk7/feature_request_buttonslinks_that_work_like/\n. https://www.reddit.com/r/Enhancement/comments/2n6uim/is_there_a_way_to_mirror_the_updownvote_to_the/\n. https://www.reddit.com/r/Enhancement/comments/2n6uim/is_there_a_way_to_mirror_the_updownvote_to_the/\n. this is worth merging but it makes me the tiniest bit nervous to change things like \"var\".  let's merge this right after 4.5.1+hotfixes releases\n. thanks for following up on this!\n. i really like this idea!  however, the plain button \"clear view\" doesn't seem super-intuitive.. what are some ways we could make it more obvious?  \"collapse/expand\"  or add arrow up/down next to the words?  maybe attach the \"clear view\" button to the bottom border of that box?\n. how about a  \"hide search options\" in the bottom right corner of the box, which collapses into a small box \"show search options\"\n\n\nandytuba-           matheod-: when hiding stuff,   .content .search-summary, .content .searchpane, .content .searchfacets { display: none; }\nandytuba-           matheod-: and for adding the show/hide toggles .. $(\".content .searchpane, .content .searchfacets .searchfacet\").last().append('hide search contents');\nandytuba-           matheod-: and for the show toggle .. $(\".content .searchpane ~ .menuarea\").first().prepend('show search stuffs>')         11:\nandytuba-           and uh  .searchpane-toggle-hide { float: right; margin-top: 0.5em }   .searchpane-toggle-show { float: right; padding: 0.5em; border: 1px #ccc solid; margin-right: 0.5em; }\n. imgur request https://www.reddit.com/r/Enhancement/comments/2o7ijh/feature_request_automatic_imgur_uploading_select/\n. I'm inclined to just merge this and put in \"imgur coming soon -- especially if someone steps up and codes it for us!\"\n. and make sure to notify the SFWPorn mods on release.\n. > releasing\nthis is shipped software, sonny, not Extensions as a Service :stuck_out_tongue: \n. is this   if (x = y) { then stuff } really correct or did I accidentally do that?\n. #1526 and #1531 are definitely the same kind of problem but different bits of code\n. it'd be nice to get this into the next release\n. /u/KortoloB's opinion on \"when is it appropriate in stay in NP mode\":\n\nThe links I would like to keep as NP are basically all within a subreddit. If you click on /r/Enhancement after being linked to an NP thread there, you should probably still be in NP. But if you click to the the front page, there's no need. Also stuff like the subreddit wiki should still be NP and so on.\n. tested, looks ready to merge\n\nany opinions?\n. thanks!\n. requested by @Farow in IRC and I think some other people in /r/enhancement posts a while ago\n. Are there other places that should get this same \"temporarily\" treatment?\n. Settings console  now has a landing page with links pointing to various highlighted items, I'll call that sufficient for this ticket. \n. Never mind, this ticket deserves more effort than that page. \n. or, more generally, it should only show on /r/subreddit/  (and not /r/sub+sub)\n. When using ?depth=n where n<8 this would be even more useful.\n. maybe add /r/enhancement to their /me/m/profile instead of creating another multi\n. thanks for helping with changelog, @SirCmpwn !  i'll edit to add noteworthy stuff as they get merged / noticed\n. it would be great to also implement an \"automatic reveal children on hover\" option / feature like hideChildrenComment's \"automatic\" option\n. this is pretty cool!\n. looks good (especially after I turned my brain on). i'll just go ahead and merge it and hopefully won't need to do a follow-up.\n. (also thanks for remembering this!)\n. @Farow suggestions?\n. Oh, @Farow was originally requesting this for reddit's buttons.\n. could somebody test these new options, and the comment tools in general, please?  it'd be nice to get it into the next release.\n. could somebody test these new options, and the comment tools in general, please?  it'd be nice to get it into the next release.\n. i'm done with my once-over.  maybe deserves another set of eyes since i'm not properly awake yet.\n. i'm done with my once-over.  maybe deserves another set of eyes since i'm not properly awake yet.\n. > post their settings JSON as a comment\nmaybe PM it to /r/Enhancement or /r/resissues with a permalink to the original prompt\n. > post their settings JSON as a comment\nmaybe PM it to /r/Enhancement or /r/resissues with a permalink to the original prompt\n. maybe #!settings/share[/moduleID[/optionName]]\nslightly better: #!settings-share\n. maybe #!settings/share[/moduleID[/optionName]]\nslightly better: #!settings-share\n. also a mechanism to share storage items  (e.g. subreddit settings)\n. also a mechanism to share storage items  (e.g. subreddit settings)\n. New idea: dump non-default scalar options (except selected sensitive values eg username Hider replacement text) as a list of [](#res:settings/moduleID/optionid \"non default value\")\n. New idea: dump non-default scalar options (except selected sensitive values eg username Hider replacement text) as a list of [](#res:settings/moduleID/optionid \"non default value\")\n. i feel like there ought to be an open issue for this.\n. i feel like there ought to be an open issue for this.\n. this is a jetpack issue\n. this is a jetpack issue\n. this is a jetpack issue\n. Apparently there's a bug:\n[e10] Jetpack Add-on SDK support for e10s: https://bugzilla.mozilla.org/show_bug.cgi?id=930164\n. Apparently there's a bug:\n[e10] Jetpack Add-on SDK support for e10s: https://bugzilla.mozilla.org/show_bug.cgi?id=930164\n. Apparently there's a bug:\n[e10] Jetpack Add-on SDK support for e10s: https://bugzilla.mozilla.org/show_bug.cgi?id=930164\n. @mc10 I'm confused.. even though the 567703 is marked as resolved-fixed, the timestamps say 2010-11-01 (four years ago). Also 930164 is still open, last comment 2014-10-24 (a month ago).  Without digging in further, it seems like this is probably still an issue.\n. @mc10 I'm confused.. even though the 567703 is marked as resolved-fixed, the timestamps say 2010-11-01 (four years ago). Also 930164 is still open, last comment 2014-10-24 (a month ago).  Without digging in further, it seems like this is probably still an issue.\n. This might actually be easy if the \"get selectable items\" class includes spotlighted items in the selector. it'll be annoying to deal with the carousel though. Let's try and get it fixed for 4.6.3.\n. This might actually be easy if the \"get selectable items\" class includes spotlighted items in the selector. it'll be annoying to deal with the carousel though. Let's try and get it fixed for 4.6.3.\n. Hidden requirement :stuck_out_tongue: -- open expando should be closed when clicking the [<] [>] prev/next buttons in the spotlight navigator.\n. Hidden requirement :stuck_out_tongue: -- open expando should be closed when clicking the [<] [>] prev/next buttons in the spotlight navigator.\n. partially fixed by 346d495269bf2a458247c9302499146ab0edd293\ntested in Chrome, Firefox, Safari 7\n. other half of fix: modules.contribute.description shouldn't be rendered until needed  @honestbleeps\n. fixed by 923ba5f\n. fixed by 923ba5f\n. > that logic disappeared without me realizing maybe\nyeah, i merged @calvinli's PR, which removed the incognito-specific logic. while you were busy yday\n. > that logic disappeared without me realizing maybe\nyeah, i merged @calvinli's PR, which removed the incognito-specific logic. while you were busy yday\n. maybe fixed by 80a61de?\n. maybe fixed by 80a61de?\n. appears fixezd by d92f538403c42a6b816d09699f4c6128bb9ab2e9\n. appears fixezd by d92f538403c42a6b816d09699f4c6128bb9ab2e9\n. https://www.reddit.com/r/RESissues/comments/2gczco/neverending_reddit_not_working_since_the_update/ckif1v3\n\n\"no access-control-allow-origin\" header is present on http://www.reddit.com/?after=t3_2gee9d&count=25, therefore the extension is not allowed access\n\nthis is on chrome 38.  gonna spin this off into a different bug\n. Better handled by toolbox.\n. This is better handled by toolbox.\n. independent verifier says it works\n. maybe autodetect language from <html lang=\"xx\">\n. we suspect this is a Chrome beta issue\n. fixed by b56b6385e88f0116bd8a38d192d63324a9da8a86\n. We should also tear out BrowserSupport.supportsThirdPartyCookies, since I think that's the only reason it exists.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/browsersupport.js#L126-L128\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/Chrome/browsersupport-chrome.js#L177-L183\n. works in chrome 37, chrome 37 incognito, opera 24, safari 7.\nappears not to work in firefox, opera12, or opera 24 incognito\n. it should be safe to simply modify browsersupport-chrome.js to remove the exception for incognito and leave the rest of the logic as-is\n. confirmed your confirmation on firefox \nworks in opera12 and opera 24 incognito\n. @calvinli Seems ready to merge.  Any final tweaks?\n. thanks for putting this together!\n. That's a better UX solution, but more effort for dev+testing+maintenance.  I guess, stick it on the list for subreddit manager redesign..\n. That's a better UX solution, but more effort for dev+testing+maintenance.  I guess, stick it on the list for subreddit manager redesign..\n. @abc516 Sure, you can go for either the simple textarea solution and/or add in a subreddit multi-picker!. https://www.reddit.com/r/Enhancement/comments/3b52ol/parent_post_hover_only_shows_parent_post_if_the/\n. Hi @YahyaZ, welcome to contributing to open source! You're more than welcome to pick up this ticket.\nHere's a quick and dirty mockup, just to help make sure we're on the same page:\n\n. does that affect https://www.reddit.com/r/RESissues/comments/2ghfvp/bug_wiki_editor_drops_below_sidebar_no_matter_how/ ?\n. does that affect https://www.reddit.com/r/RESissues/comments/2ghfvp/bug_wiki_editor_drops_below_sidebar_no_matter_how/ ?\n. seems kinda pointless but sure, why the heck not.\n. seems kinda pointless but sure, why the heck not.\n. oh, right, \"return to previous page\"..   is it obvious that most of the RES developers consistently open links in new tabs?\n. oh, right, \"return to previous page\"..   is it obvious that most of the RES developers consistently open links in new tabs?\n. Thanks!  nice little fix\n. Thanks!  nice little fix\n. closed by #2069 \n. i specifically want to prepend the option/module because several times now people have responded \"I don't want to turn off inline image viewer, that's the whole reason I use RES\" and I have to tell them \"NO JUST TURN OFF THE ONE SINGLE OPTION (conserveMemory) THAT'S LINKED.\"\n. i specifically want to prepend the option/module because several times now people have responded \"I don't want to turn off inline image viewer, that's the whole reason I use RES\" and I have to tell them \"NO JUST TURN OFF THE ONE SINGLE OPTION (conserveMemory) THAT'S LINKED.\"\n. Mostly a bugfix release\nFeatures/Enhancements\n\nnew expando button image for \"html5 gif\" (silent videos) / gifv   (thanks @erikdesjardins)\nimgur gifv support; load gifv instead of gif (thanks @honestbleeps)\ngifyoutube support (thanks @honestbleeps)\nshow gfycat on \"view all images\" (if silent) (thanks @honestbleeps)\nadded /r/random keyboard shortcut (g,alt+y)  (thanks @kwakie, @andytuba)\nfor large albums, use the prev/next \"slideshow\" view even if loadAllInAlbum is enabled (thanks @andytuba)\nadded \"Reddit Classic\" orangered/periwinkle comment score coloring (thanks @erikdesjardins)\n\n\nBugs\n\nshow save-RES button on comments which are initially collapsed (thanks @andytuba)\nbetter support for /r/subreddit/comments listings, particularly vote colors (Thanks @honestbleeps)\nbetter support for reddit.com/comments/12345 comments page (no subreddit) (thanks @honestbleeps)\nbetter support for reddit's upcoming native functionality for \"full comments\" and \"unread comments\"  (thanks @honestbleeps)\nonly use https imgur if using https reddit (thanks @honestbleeps)\nSSL support for account switcher (thanks @calvinli)\nfixed neverendingreddit pause button across pageloads (thanks @honestbleeps)\nopera12 bugfix to keep usertagger (and other modules) from breaking (thanks @andytuba)\nadded a delay to the subreddit shortcut edit/delete button dropdown (thanks @andytuba)\nfixed Never-Ending Reddit not loading p2+ if betteReddit was disabled but showUnreadFavicon was enabled\nalways show Comment Navigator when navigating comments, instead of breaking when using keyboard shortcuts when Comment Nav is closed (thanks @andytuba)\nfixed \"comment navigator\" not jumping to the next comment consistently when pinHeader is enabled (@thanks honestbleeps)\nallow shift-click on subreddit shortcuts (thanks @mc10)\nsupport subreddit shortcuts like sub1/about/messages+sub2/new (thanks @andytuba)\nfix labeling imgur gifs as .gif to fix convertGifToGfycat and other similar extensions (thanks @honestbleeps)\ntweaked NP message for subreddit subscribers (thanks @andytuba)\ntweaked /r/RESissues+Enhancement/submit text for readability (thanks @mc10 and @andytuba)\nimprove post rank number size/truncating (thanks @calvinli @andytuba)\nfixed subreddit stylesheets not re-appearing when using https reddit (thanks @honestbleeps)\nnightmode css cleanup (thanks @erikdesjardins, @gavin19)\nfix centering on \"loading image\" throbber (thanks /u/andrey_shipilov / @tezro)\nremoved opaque backgrounds on nightmode arrows (thanks @erikdesjardins)\nrevert \"last edited\" to relative time after mouse off (thanks @andytuba)\njanitoring (thanks @erikdesjardins, @mc10, @darkstar21)\n\nMore details: https://github.com/honestbleeps/Reddit-Enhancement-Suite/compare/v4.5.1...v4.5.2\n. Mostly a bugfix release\nFeatures/Enhancements\n\nnew expando button image for \"html5 gif\" (silent videos) / gifv   (thanks @erikdesjardins)\nimgur gifv support; load gifv instead of gif (thanks @honestbleeps)\ngifyoutube support (thanks @honestbleeps)\nshow gfycat on \"view all images\" (if silent) (thanks @honestbleeps)\nadded /r/random keyboard shortcut (g,alt+y)  (thanks @kwakie, @andytuba)\nfor large albums, use the prev/next \"slideshow\" view even if loadAllInAlbum is enabled (thanks @andytuba)\nadded \"Reddit Classic\" orangered/periwinkle comment score coloring (thanks @erikdesjardins)\n\n\nBugs\n\nshow save-RES button on comments which are initially collapsed (thanks @andytuba)\nbetter support for /r/subreddit/comments listings, particularly vote colors (Thanks @honestbleeps)\nbetter support for reddit.com/comments/12345 comments page (no subreddit) (thanks @honestbleeps)\nbetter support for reddit's upcoming native functionality for \"full comments\" and \"unread comments\"  (thanks @honestbleeps)\nonly use https imgur if using https reddit (thanks @honestbleeps)\nSSL support for account switcher (thanks @calvinli)\nfixed neverendingreddit pause button across pageloads (thanks @honestbleeps)\nopera12 bugfix to keep usertagger (and other modules) from breaking (thanks @andytuba)\nadded a delay to the subreddit shortcut edit/delete button dropdown (thanks @andytuba)\nfixed Never-Ending Reddit not loading p2+ if betteReddit was disabled but showUnreadFavicon was enabled\nalways show Comment Navigator when navigating comments, instead of breaking when using keyboard shortcuts when Comment Nav is closed (thanks @andytuba)\nfixed \"comment navigator\" not jumping to the next comment consistently when pinHeader is enabled (@thanks honestbleeps)\nallow shift-click on subreddit shortcuts (thanks @mc10)\nsupport subreddit shortcuts like sub1/about/messages+sub2/new (thanks @andytuba)\nfix labeling imgur gifs as .gif to fix convertGifToGfycat and other similar extensions (thanks @honestbleeps)\ntweaked NP message for subreddit subscribers (thanks @andytuba)\ntweaked /r/RESissues+Enhancement/submit text for readability (thanks @mc10 and @andytuba)\nimprove post rank number size/truncating (thanks @calvinli @andytuba)\nfixed subreddit stylesheets not re-appearing when using https reddit (thanks @honestbleeps)\nnightmode css cleanup (thanks @erikdesjardins, @gavin19)\nfix centering on \"loading image\" throbber (thanks /u/andrey_shipilov / @tezro)\nremoved opaque backgrounds on nightmode arrows (thanks @erikdesjardins)\nrevert \"last edited\" to relative time after mouse off (thanks @andytuba)\njanitoring (thanks @erikdesjardins, @mc10, @darkstar21)\n\nMore details: https://github.com/honestbleeps/Reddit-Enhancement-Suite/compare/v4.5.1...v4.5.2\n. guess what we forgot: dark mode!\n\nsource: https://s3.amazonaws.com/a.thumbs.redditmedia.com/JTs29zfSOzSMYO0B.png\n. no worries, i'm just being lazy about doing it myself :grin:\n. thanks for janitoring!\n. There's certainly a precedent for \"RES could not open this image. Click here to open it.\"\n. it seems reasonable for this to be enabled by default.\n. BUG: needs big editor support, doesn't correctly locate the \"save\" button: \n. re: cmd-enter on posts .. It might be worth adding in, but then split the option into ctrlEnterSubmitsPosts\", ctrlEnterSubmitsComments, and ctrlEnterSubmitsPosts..\n@jtymes, if you (or somebody else) slaps in support for posts, I could take care of the extra options.\n. yeah, captcha goes away after you earn some karma, so it'll still be generally useful.  maybe we could throw in a UX tweak later that ctrl-enter jumps you to captcha if exists and shows notification/tooltip\n. if you go ahead and push (maybe on a separate branch if you care about a tidy gitlog), i'd be happy to test post submission.\n. > big editor opens for some reason\nthat should be fixed now -- #1760  and @mc10 followed up on some other button\n. tested on OSX 10.10 Yosemite with Chrome, Firefox, Safari, Opera12. Thanks!\n. @Entriel Do you mean you want the slideshow view to preload all the images?\n. It sounds like you're asking for preloadImages or a hypothetical dontPreloadAlbumsBiggerThan option.\n. It sounds like you're asking for preloadImages or a hypothetical dontPreloadAlbumsBiggerThan option.\n. kinda do want a more descriptive name, like \"Classic\" or \"Orangered/Periwinkle\"\n. kinda arbitrarily went with \"reddit classic\". now accepting other suggestions\n. ah, it appears saveComments didn't get updated for the comment markup change a few months ago.\n. thanks for reporting!\n. @Cataractar I try to add labels for difficulty level and priority level, but really just grab whatever interests you from the issues list -- or if you've got ideas of your own, go ahead and implement those!\n. thanks!\nmaybe one of these days i'll sass-ify those spritesheets.\n. cool!\nhmm, we're gonna have to deal with image expandos inside self-text too..\n. i was thinking of keeping it and fixing the styling (switch it to ), maybe default off.\n. jtymes: no, you read it right.  these are RES images like button icons that currently live in /r/Enhancement/about/stylesheet, but ought to live inside RES itself.  it looks like you're on the right track\n. thanks for the quick contribution!\ncould you go into a little more detail what  \"missing videos\" means? \n. i'm not the most familiar with showImages--they're all asleep--so bear with me.\nI wouldn't have expected an iframe/video/other embed inside a <div class=\"imgTitle\"> or <div class=\"imgCaption\">, so I'm confused which issue you're fixing.\nCould you provide a link to a reddit post that shows this issue?\n. The YouTube expando in that comment?  I'm not seeing any .imgTitle or .imgCaptions elements appearing when I expando it.\nCould you post a screenshot of your browser's Element Inspector and selecting the iframe on the expando you're seeing the issue with?\n\nA few quick questions:\n1. What browser are you running? (e.g. Chrome)\n2. Which browser version number?  (e.g. 38)\n3. Which RES version?  (e.g. v4.5.2)\n. Also, what extensions are you running?\nWe've gotten a decent number of reports that Adblock Pro was causing RES expandos to close immediately as well.  It would be nice if this were the conflict and we could finally resolve that.\n. thanks for the screenshot .. and can you now do a screenshot showing your change in action?  like, highlight the element that's now display: inline because of your change.\n. alllllllllso we just barely released RES v4.5.2.  How about you upgrade RES first and see if it's already been fixed?\n. also also you should be working off of / merging into the master branch, not dev.  sorry i didn't notice that sooner.\n. okay.  make sure you update to v4.5.2 too.\n. # Version 4.5.3\nFeatures/Enhancements\n\n\"Quick Message\" popup from user info popup \"message\" button or command line \"qm\" (thanks @erikdesjardins and @andytuba)\nregexp support in some filteReddit options (thanks @andytuba)\nAdded an option to show an images original resolution in a tooltip to showImages module (Thanks @erikdesjardins !)\nUsername Hider allows different display text / replacements for specific usernames and hide all Account Switcher usernames (thanks @erikdesjardins and @andytuba)\nCommand line \"sw\" (account switcher) autocompletes usernames (thanks @andytuba)\nOption to make \"edited time\" bolder (thanks /u/erikdesjardins)\nImproved layout of RES settings console search results and share text (thanks /u/erikdesjardins and /u/andytuba)\nMade fade animations a buttery smooth 60fps (Thanks /u/bfred-it)\nescapeNP doesn't affect np.reddit.com links inside posts, comments, wiki, sidebar, or other snudown/markdown regions (thanks /u/andytuba)\ncomment tools (formatting, macros) on modqueue pages (thanks /u/erikdesjardins)\nhide username in user info hover popup when using Username Hider (thanks @mc10)\nkeyboard shortcut to save post/comment/wiki page: Ctrl+Enter or Cmd+Enter (thanks @jtymes!)\nkeyboard shortcuts for links, superscripts, blockquotes in post/comment/wiki (thanks @erikdesjardins)\noption to move to next comment after voting on a comment with keyboard nav (thanks @erikdesjardins )\nkeyboard shortcut for saving comments with reddit (thanks @erikdesjardins)\ncomment formatting tools on modqueue pages (thanks @erikdesjardins and @andytuba)\ncomment formatting tools on banned page (thanks /u/Walter_Bishop_PhD)\noptions to not filter on modqueue (don't filter by default) and userpages (filter by default) (thanks @erikdesjardins)\nonly show \"filteReddit filtered a bunch of notifications\" notification if a certain percentage (>= 80%) of posts per page are filtered (thanks @andytuba)\nediting subreddit sidebar shows preview in the sidebar (thanks /u/Walter_Bishop_PhD)\nLots of nightmode cleanup (thanks @gavin19)\ndeviantART text expando preview (thanks @erikdesjardins)\nStreamable.com expando  support (thanks @petrosian)\nMultiple links in user tag (space-separated) (thanks @erikdesjardins)\nadd \"rising\" support to dashboard (thanks @honestbleeps)\n\nBugfixes\n\nseveral efficiency adds behind the scenes (thanks @honestbleeps)\nfix account switcher \"must click twice\" (thanks @erikdesjardins, @andytuba)\nkeep user info hover popup showing when hovering over hidden username (thanks @mc10)\nImgur expando's download button actually downloads now! (Thanks /u/markekraus!)\nExpando buttons now display after links in messages (Thanks /u/erikdesjardins!)\nFixed the readme (Thanks /u/erikdesjardins and more) \nFixed errors showing in hover modules (thanks /u/honestbleeps)\nFix whitelisting subreddits from NSFW filter (Did not work before) (Thanks /u/erikdesjardins)\nFix NSFW filter not working on saved comments (Thanks /u/erikdesjardins)\nFix gifyoutube controls (Thanks /u/markekraus)\nfix imgur.com/r/... link expandos (thanks /u/CelestialWalrus)\n(Sorta) fixed opening/closing a gifv expando REALLY fast makes it not take height (Thanks /u/diogorolo)\ngifv extra expando button hidden (thanks @Shraymonks)\nfixed \"reply\" box getting pushed below sidebar (thanks @erikdesjardins )\nFixed alignment issues on image fallback when videos fail to load (Thanks /u/markekraus)\nFixed search buttons and turned them off by default (Reddit now has a built in search button) (Thanks /u/mc10!)\nFixed \"open link in new tab\" sometimes not making an absolute URL (Thanks /u/markekraus and /u/andytuba)\nfixed \"#!settings/module/options with spaces\" links not opening directly to option (thanks /u/andytuba)\nfixed big editor opening when pressing enter on post submit page (thanks @mc10 and @Igglyboo)\nuse comments page link instead of post link for user tag link when creating user tag (thanks @erikdesjardins)\nshow last image on URLs like http://imgur.com/123abc,456bca (thanks @erikdesjardins)\nfix userbar hider overlapping language preference on login page (thanks @erikdesjardins and @andytuba)\npreserve whitespace and embedded HTML at beginning of source (thanks @erikdesjardins)\nnightmode fixes for post report messages (thanks @TravisMarx and @gavin19, honorable mention to @TravisMarx)\nnightmode fixes for report reasons, .gold-accent and \"you paid for X server time\" info boxes (thanks @TravisMarx and @andytuba)\noptional colored separate bar between top-level comments (thanks @ribolzisalvador and @andytuba)\nnew_markdown_style nightmode fixes (thanks @mc10 and @gavin19)\nsearch subreddit by flair when clicking on flair (thanks @erikdesjardins)\ndon't show \"Use subreddit style\" checkbox on top of reddit cover overlays (thanks @erikdesjardins)\n\nHousekeeping\n\nMajor command line refactoring (Thanks /u/andytuba)\nOptions list subtypes infrastructure, listType: subreddit (thanks /u/andytuba)\nOptions description proofreading (thanks /u/erikdesjardins)\nupdated changelog in git repo (thanks @allthefoxes)\nOptimization!\nTypo fixing! \nGeneral janitoring!\n\n\nMore details: https://github.com/honestbleeps/Reddit-Enhancement-Suite/compare/v4.5.2...v4.5.3\n. yes please!\n. got it, thx\n. thanks!\n. better idea: #1684 \n. thanks for the housekeeping!\n. or automatically log in to /u/.... by default https://www.reddit.com/r/Enhancement/comments/487fwa/i_have_two_logins_can_i_stay_logged_in_as_one/\n. https://www.reddit.com/r/Enhancement/comments/4iqk0f/anyway_to_automatically_switch_username_depending/\n. been running master on safari 8 for several weeks now.  seems hunky dory.\n. looks like this replaces the \"drag to zoom\" tooltip. this seems good.\nthis reminds me, I wanted to implement a \"don't show the drag to zoom tooltip\" option as a stopgap until we develop a better teaching mechanism for that.. like a draggable thumb in the corner.\n. Huh, yeah, I vaguely remember onload/cache issues from a few years ago .. but I think that's been fixed in all the browsers and versions we support.\n. now they are uniform :dancers: \n. woo i fixed a nsfw bug and i broke a non-nsfw thing (which erik now fixed)\n. imo this should be default off, or at least delayed.  it seems like opening a big security hole to turn it on by default, and people (who turned on username hider long ago and left it on) may not realize there's a setting for that and where to find it.\n. i vaguely recall usernameHider using JS once upon a time, but it was a little slow, so somebody switched to the CSS hack.. maybe.\n. changelog'd\n. changelog'd\n. fixed by #1771 \n. fixed by #1771 \n. thx for reminder\n. thanks for getting the ball rolling on this, @erikdesjardins!  i tacked on some other changes I've been wanting to do, too.\n. Hmm.  I'm not sure I see the analogy, since table is a collection but subredditlist is more a \"child\" of a list option.  It does seem cleaner/consistent-er to phrase those properties as a well-known thing like type: subredditList rather than mixins, which take more tracking down.\nHow about a scheme like this?\n{\n    name: 'reddits',\n    type: 'list',\n    listType: 'subreddits` \n}\n. @honestbleeps much tidier.\n. I definitely agree with changing the behavior of RESUtils.currentUserProfile() to return nothing on multi pages, since those are post listings which are only incidentally owned by a user.\nI think it's better to fix the regexp to exclude multis like @erikdesjardins suggested, but I'd go one step further: use RESUtils.profileRegex inside .currentUserProfile()\n. woo\ni'll check this out saturday if somebody doesn't get to it earlier\n. I think all I care about right now is:\n- [x] https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1726/files#r19716410\n- [ ] https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1726#discussion_r19716440\nand this is a nice to have:\n- [ ] https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1726#discussion_r19715908\nThis'll be a decent foundation for the gulp file.  Later, we can iterate on it to clean up the rough edges (e.g moving browser-specific folders into vendor/ per http://frontendbabel.info/articles/developing-cross-browser-extensions/), bring in the grunt \"dev build\" tasks, maybe be nice enough to build userscripts..\n. hmm, maybe we should redirect that page to  /r/Enhancement/wiki.  @honestbleeps opinion?\n. thanks!  that poor unloved changelog.txt..\n. also make sure to link to the reddit option in the option description\n. scratch that\nhttps://www.reddit.com/r/changelog/comments/2kx48k/reddit_change_links_no_longer_open_in_a_new/\n. This is one of the instances where I would have cussed at myself, then quietly rebased and force-pushed .. and hoped nobody noticed.\n. @mc10, do you remember why you added || true? \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blame/ae3a7fb23cda54ea04cbc7598ee1f4b219d5ad00/XPI/lib/main.js#L236\n. > inBackground\nsure looks like it. \nhttps://github.com/jspenguin/Reddit-Enhancement-Suite/blob/master/lib/modules/keyboardNav.js#L1476-L1481\nI can imagine the line @jspenguin removed looked like copy-pasta error, but it's just that button is a bad property name.  It's a bit more effort to replace that with something better like \"focus\", though.\n. Is this still a problem?\n. Is this still a problem?\n. http://www.reddit.com/r/enhancement/comments/3l24je/_/ filter character classes like Emoji\n. https://www.reddit.com/r/Enhancement/comments/3t1gfr/is_there_an_option_to_filter_comments_with/\n. https://www.reddit.com/r/Enhancement/comments/3yzfy6/feature_request_flair_reminder_blocker/cyihtbo?context=3\n. https://www.reddit.com/r/Enhancement/comments/49p4ts/question_hide_comments_that_contains_a_keyword/\n. https://www.reddit.com/r/Enhancement/comments/4ulr3b/feature_request_filter_comments_based_on_keywords/\n. https://www.reddit.com/r/Enhancement/comments/4vvcb6/feature_request_hide_or_collapse_comments/  -- prepopulate with /^!RemindMe/ ?\n. Hmm.  https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/241841052763709150466eff0cde5c86677d3882/XPI/data/browsersupport-firefox.js#L175-L176  Does that mean we're going to have to vet all references to document and window too?\n. Historical note: RES used to be one big file, period -- not compiled / concatenated, we just dealt with a 20,000 line file.  \n1726 includes gulp tasks for compiling and building.  You could probably take @allthefoxes' work and tack on a little to concatenate the JS as needed for a userscript... unsure about CSS though.\n. thanks for extending this, also regex cleanup\n. hmm, i should check that macro placeholders work correctly in contexts outside the comment page.\n. yeah, this happens on editing comments, too.\n. I wonder how long until somebody requests an option for \"move to the next sibling\".\n. > users who are smart enough to ... should be able to figure out ...\nhttp://blog.squareweave.com.au/post/46308126122/the-user-is-drunk\nLet's fire a notification when using the save shortcut with a cooldown of .. I dunno, 3 weeks? to teach the user about the difference between save and save-RES functionality, keyboard shortcuts. and links to each.  it would be nice if you did this, but I'll probably get around to it in a few days if you don't.\nnice to have: a text block at the top of /saved#comments: \"If you don't see a comment here, check /saved\" while you're there, add in some \"tip n tricks\" text explaining the save hotkeys and linking to them in settings.\n. > users who are smart enough to ... should be able to figure out ...\nhttp://blog.squareweave.com.au/post/46308126122/the-user-is-drunk\nLet's fire a notification when using the save shortcut with a cooldown of .. I dunno, 3 weeks? to teach the user about the difference between save and save-RES functionality, keyboard shortcuts. and links to each.  it would be nice if you did this, but I'll probably get around to it in a few days if you don't.\nnice to have: a text block at the top of /saved#comments: \"If you don't see a comment here, check /saved\" while you're there, add in some \"tip n tricks\" text explaining the save hotkeys and linking to them in settings.\n. Hrm, I'm still thinking saveRES should use \"s\" (instead of shift-s) (and the save value should be migrated over) unless we have a good reason to prefer reddit-saving.\n. > Ctrl->   \nThat's appealingly semantic and reminds me of an i18n issue I wanted to note..\n. > Ctrl->   \nThat's appealingly semantic and reminds me of an i18n issue I wanted to note..\n. > OOC\nEh?\n\nemacs bindings\n\nI've heard remarks from some veteran Mac users about the same. \n\nsetting to control this behavior\n\nhttps://www.reddit.com/#!settings/commentTools/keyboardShortcuts\n@erikdesjardins Interested in making options for the comment tool keyboard shortcuts?\n. > OOC\nEh?\n\nemacs bindings\n\nI've heard remarks from some veteran Mac users about the same. \n\nsetting to control this behavior\n\nhttps://www.reddit.com/#!settings/commentTools/keyboardShortcuts\n@erikdesjardins Interested in making options for the comment tool keyboard shortcuts?\n. Thanks! \n. fixes #1760   (this is the magic phrasing for PRs to auto-close issues)\n. https://www.reddit.com/r/Enhancement/comments/3ra3fz/feature_request_make_clicking_xpost_rsubreddit_in/\n. Let's make this a real todo item.\nTODO: troubleshooter option to clear out nulls in dashboard data\n. Let's make this a real todo item.\nTODO: troubleshooter option to clear out nulls in dashboard data\n. I mean the OP (link/self-text) when looking at its comments page, not any comments themselves.\n. but yes, that is a good idea for if/when a comment filter is ever implementef\n. @erikdesjardins, you inspired me.\n. for the record, those sanity checks are to avoid issues when browsing logged-out\n. you seem to have done a pretty thorough job and a good chunk of work.  thanks!\n. YESSSSS :+1: x :100:\n. if people complain about https errors, we can tell them to disable dailymotion expandos in showImages.\n... can somebody double-check that option actually works?  iirc it never got properly wired up.\n. it appears that the option works.\nhowever, it appears that reddit also serves up its own dailymotion expando on post listings on http:// requests.  can we give dailymotion the same treatment as imgur: an option to prefer RES's over reddit's expando if reddit's exists (and hide reddit's expando button; else not add RES's expando if reddit's expando exists)\n. @NykO18 Do y'alls have https support yet/already?\n. Heck with it, I can set up an AutoMod rule that triggers on \"dailymotion [errors|issues|warnings|https]\" and explains the situation.\n. Heck with it, I can set up an AutoMod rule that triggers on \"dailymotion [errors|issues|warnings|https]\" and explains the situation.\n. @NykO18 Hmm, I'm not sure what to ask for without knowing the implementation challenges.  \nIt looks like www.dailymotion.com, logger...dailymotion.com, and dmcdn.net already support ssl, but sometimes things get linked via http://.\nI also see a lot of errors from third-party vendors (doubleclick, liverail, etc.) -- they ought to support https, but fixing and testing all of them will take a few hours.\nAny low-hanging fruit on that front?\n. Another alternative is that RES provide the video player and dailymotion just provides the URL directly to the content (mp4/aac).  I'd rather avoid that, since it would add maintenance cost to RES and remove dailymotion branding and value-adds.\n. I think a better middle ground is to add some sort of warning in the settings or expando button title when browsing reddit on https.\n. too bad \"msg\" is already mapped to /message/inbox\n. @erikdesjardins any feedback on my add-ons?\n. i learned that hack from Google themselves -- they rewrite links on click to switch from a nice pretty direct URL (good for hover) to a Google tracking URL which passes you through to the real URL (ugh terrible on right-click - copy link)\n. i learned that hack from Google themselves -- they rewrite links on click to switch from a nice pretty direct URL (good for hover) to a Google tracking URL which passes you through to the real URL (ugh terrible on right-click - copy link)\n. I always thought it was an oversight not to show this.\n. i like the sound of that better\n. i like the sound of that better\n. for the curious, setSRStyleToggleVisilibity temporarily removes the crazy z-index for when popup items appear\n. Why change anything besides color?  border-width, border-style, text-weight\n. @imjoshdean, please post to /r/resissues before opening a GitHub issue.\n. Could you submit a PR against showImages.js which adds a new item to modules.showImages.siteModules?  I think Clyp.it's embed is a decent example for iframe-based expandos.\n. I recommend Chrome. The hardest part is running makelinks.sh that one time.  After that, it's very similar to debugging  JS on a regular website. \n. And I'll be happy to test and debug before merging your  PR. \n. Fixed, probably for v5.\n. How do you feel about a command line command instead? \n. This sounds like a great concept. I just asked a Regular User: :+1: :+1:\nImplementation wise, how about overriding the button image on .over18 .expando-button and skip the JavaScript? \nIdeas for the visual: red diagonal candy stripes over or under the button image, red +18 overlay on button, change existing to red, change image to an exclamation post, or...  A dickbutt. \nOr \n```\n\n| NS |\n| FW |\n\n```\n. This sounds like a great concept. I just asked a Regular User: :+1: :+1:\nImplementation wise, how about overriding the button image on .over18 .expando-button and skip the JavaScript? \nIdeas for the visual: red diagonal candy stripes over or under the button image, red +18 overlay on button, change existing to red, change image to an exclamation post, or...  A dickbutt. \nOr \n```\n\n| NS |\n| FW |\n\n``\n. right\n. right\n. :+1: x :100: @erikdesjardins \n. :+1: x :100: @erikdesjardins \n. diagonal candy stripes it is.\n. I like your approach of creating a link element on mouseover instead of using JS to control navigation.  (I generally prefer native functionality likeover JS attempts to rewrite that wheel.)  All my comments are basically stylistic / UX.\n. I like your approach of creating a link element on mouseover instead of using JS to control navigation.  (I generally prefer native functionality likeover JS attempts to rewrite that wheel.)  All my comments are basically stylistic / UX.\n. I like your approach of creating a link element on mouseover instead of using JS to control navigation.  (I generally prefer native functionality likeover JS attempts to rewrite that wheel.)  All my comments are basically stylistic / UX.\n. Looks good, thanks!\n. Looks good, thanks!\n. Fixed by #1811\n. Fixed by #1811\n. clever use of.clearleft`! and if reddit ever clears out their legacy markup, we can figure out something cleverer then.\nthanks for putting this together!  I added in a few extra \"customizability\" options, too.\n. clever use of .clearleft! and if reddit ever clears out their legacy markup, we can figure out something cleverer then.\nthanks for putting this together!  I added in a few extra \"customizability\" options, too.\n. https://www.reddit.com/r/top/comments/2nz6ps/just_discovered_the_macro_feature_from_this_day/cmik7pb\nemoji issues\n. https://www.reddit.com/r/top/comments/2nz6ps/just_discovered_the_macro_feature_from_this_day/cmik7pb\nemoji issues\n. https://www.reddit.com/r/top/comments/2nz6ps/just_discovered_the_macro_feature_from_this_day/cmik7pb\nemoji issues\n. https://www.reddit.com/r/Enhancement/comments/2o6dmy/feature_request_could_we_be_able_to_define_custom/\nmediawiki or bbcode style markup, convert to snudown\n. https://www.reddit.com/r/Enhancement/comments/2o6dmy/feature_request_could_we_be_able_to_define_custom/\nmediawiki or bbcode style markup, convert to snudown\n. https://www.reddit.com/r/Enhancement/comments/2o6dmy/feature_request_could_we_be_able_to_define_custom/\nmediawiki or bbcode style markup, convert to snudown\n. i was thinking more educational / suggest-to-correct.  i also hope macros solve 2o6dmy too.\n. i was thinking more educational / suggest-to-correct.  i also hope macros solve 2o6dmy too.\n. i was thinking more educational / suggest-to-correct.  i also hope macros solve 2o6dmy too.\n. #hashtags\nhttps://www.reddit.com/r/Enhancement/comments/3lf1o3/feature_request_tooltip_when_writing_characters/\n. #hashtags\nhttps://www.reddit.com/r/Enhancement/comments/3lf1o3/feature_request_tooltip_when_writing_characters/\n. hmm.  seems like it won't hurt..\n. hmm.  seems like it won't hurt..\n.  brainstorms:\n\"scroll helper\": button to scroll to top, which then toggles to \"scroll back where you were\". Could be a keyboard nav item too \n.  brainstorms:\n\"scroll helper\": button to scroll to top, which then toggles to \"scroll back where you were\". Could be a keyboard nav item too \n.  brainstorms:\n\"scroll helper\": button to scroll to top, which then toggles to \"scroll back where you were\". Could be a keyboard nav item too \n. huh. i mean, it looked like it worked to me, but I'm nervous it didn't break.   what kind of filters did you set up and where did you test them?\nFor full coverage, I was planning on doing a variety of regexs, some with exceptStrings, and in different contexts: frontpage, multireddit, /r/all, frontpage, /u/user, /u/user/submitted, inbox and /r/subreddit/comments and /u/user/comments (to make sure it doesn't filter), and with a variety of include/exclude.. that might shake out a few other bugs, too\n. huh. i mean, it looked like it worked to me, but I'm nervous it didn't break.   what kind of filters did you set up and where did you test them?\nFor full coverage, I was planning on doing a variety of regexs, some with exceptStrings, and in different contexts: frontpage, multireddit, /r/all, frontpage, /u/user, /u/user/submitted, inbox and /r/subreddit/comments and /u/user/comments (to make sure it doesn't filter), and with a variety of include/exclude.. that might shake out a few other bugs, too\n. huh. i mean, it looked like it worked to me, but I'm nervous it didn't break.   what kind of filters did you set up and where did you test them?\nFor full coverage, I was planning on doing a variety of regexs, some with exceptStrings, and in different contexts: frontpage, multireddit, /r/all, frontpage, /u/user, /u/user/submitted, inbox and /r/subreddit/comments and /u/user/comments (to make sure it doesn't filter), and with a variety of include/exclude.. that might shake out a few other bugs, too\n. Turns out that /.../g is a known issue: http://stackoverflow.com/a/3891672\n. Turns out that /.../g is a known issue: http://stackoverflow.com/a/3891672\n. gonna go for broke, jah's mercy be on me.\ni guess i'm responsible for documenting how to regexp and possible adverse effects.\n. gonna go for broke, jah's mercy be on me.\ni guess i'm responsible for documenting how to regexp and possible adverse effects.\n. the description isn't great, any suggestions?\n. the description isn't great, any suggestions?\n. maybe something like this:\nObject.defineProperty(option, 'value', { \n    get: function() { return parseValue(this.rawValue, this.type); }\n    set: function(value) { this.rawValue = value; }\n});\n. maybe something like this:\nObject.defineProperty(option, 'value', { \n    get: function() { return parseValue(this.rawValue, this.type); }\n    set: function(value) { this.rawValue = value; }\n});\n. yeah, that's great!  \nsubmitHelper sounds like a good idea.  and then we could migrate betteReddit uncheckSendRepliesToInbox into it.   somebody requested an option to customize which subreddits appear at the top of the suggestions, too.\n. maybe \"This link (or a post containing this link)...\" -- i assume you're talking about text posts\n. Implemented in RES v5.\n. Implemented in RES v5.\n. respects #1803  ... maybe\n. respects #1803  ... maybe\n. Or maybe the number should be repeated and dim. \n. Ie the duplicated url's first instance's number should be attached to the other duplicate instances of the url, and dimmed. \ngoogle.com [1] example.com [2] google.com [1] other.url [3]\n. thanks!\nhey @erikdesjardins, reminder to use \"fixes #1234\" syntax in PRs for auto-close.  (you said \"issue #1234\")\n. i think you usually do it.  i dunno, i don't keep score.\n. @gamefreak time of day, poster name, poster is a friend/moderator/admin/op, current user, post is link/text,  link domain/url,  has embed,  is nsfw, post tag (in reddit), user tag (from RES), user tag (from reddit [aka friend note ~~~~andytuba]), comment count, post age, title matching\n. This needs a tri-state toggle for reducing the state of a collections of toggles,  like on | some on | all off.  i'm thinking:\n| State | Appearance |\n| --- | --- |\n| all enabled | [> on | off ]  (blue / gray) |\n| some enabled | [> on | off <]  (blue-gray candystripe background) |\n| none enabled | [ on | off <]  (gray / red) |\n. superseded by #1860 \ndon't care about the tri-state toggle any more\n. yeah, table-type option values are stored as an array of arrays, so name is mostly for UI.  I do have some module that maps values to a dictionary using the field names, but I think it's notifications, not filteReddit.  \nhopefully this PR won't cause merge conflicts with #1822, but I don't think #1822 needs to react to the reddit->subreddit change.\n. it'd be slick to open the remaining links in background tabs, but I don't think it's necessary.  depends if you're having fun :grin:\n. sounds good.  if enough people complain we can put the effort into standardizing that.\nthanks!\n. looks straightforward enough, and dropbox seems like a place where it's reasonable to assume file extensions actually match file contents.  anyone wanna weigh in before merge?\n. https://www.dropbox.com/en/help/4204\n\nDropbox Basic (free) account\nThe total amount of traffic that all of your links together can generate without getting banned is 20 GB per day.\nThe total number of downloads that all of your links together can generate is 100,000 downloads per day\nDropbox Pro and Dropbox for Business accounts:\nThe total amount of traffic that all of your links together can generate without getting banned is 200 GB per day.\nThere's no daily limit to the number of downloads that your links can generate.\n\n\nThat's a moderately hefty allowance, but the minute some album frontpaging on /r/pics gets banned, somebody's gonna come posting in /r/resissues.\n. Yeah, users will probably survive well enough.  Mostly I'm worried about people's links getting reposted without their consent.  dropbox seems more \"personal\" than one of the more straightforward media hosts like imgur and mediacrush.\n. After looking over everything, I think it's all functionally correct ~~except for possibly https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1853#discussion_r22287534~~ (fixed in 4601fcc)\nI'd personally switch a lot of the .every to .some or maybe add a .first polyfill.\n. cool, thanks, looks good.   let's merge this first thing after bugfix release.\n. Does what it says on the tin.  Can't resize because iframe instead of video, but the player includes a fullscreen button.\n. i like the concept of using a function instead of a single returns so that we can support multiple page types at once, like how modqueue is both a listing and a mod page.\n. @erikdesjardins I really oughta start opening PRs against your PRs, I feel rude superseding yours.. but then again, you still get credit in changelog and number of commits..\n. showImages.siteModules.tumblr probably has some code we could copy-pasta for handling text.\n. The way I coded this allows the user to do some fiendishly hacky things like removing reddit classes such as \"post-under-24hr\" by adding a context called \"disable-timebased-css\", then adding a documentClasses row for \"post-under-24hr\" with a context of \"disable-timebased-css\". When the \"disable-timebased-css\" context is turned off, then modules.stylesheet will remove the post-under-24hr body class.  (Why?  Maybe some people dislike what some subreddit stylesheets do to new posts, but they like the rest of the style.)\n. This will be more useful after #1837 contexts includes \"everywhere/on/except subreddit/multi\".  and for time of day, custom night mode!  and I guess i should do a condition for \"has subreddit style enabled / disabled\"\n. oh, yeah, snippets is a good idea too.  i'll add that too. (or if you wanna fork my PR you can add i.t)  and #1837 contexts should include a pageType condition.\n. hrm.  it seems like this should be happening anyway a little upstream.\n. oh.  i just read through all the code.  times have changed and now res is catching up thanks to you. i just wish it would happen upstream.\n. Could you post this to /r/resissues/submit instead, please?  \"I'm having an issue\" or \"I found a bug\" button on the submit page.\n. thanks!  sorry you didn't get a reply sooner, it was busy coming up on the holidays.\n. @CelestialWalrus, I dun goofed and merged this before testing.  Can you give me a reddit post to test this against?\n. great, thanks, works real good\n. Do you know what's going on here? \nhttps://www.reddit.com/r/listentothis/comments/27dypu/playlist_the_42nd_election_remember_to_cast_a/\n\n\nThose chrome://extension IDs don't seem to match any of my installed extensions..\n. I'm still torn on adding another tab to the tab bar because it gets pretty crowded up there .. maybe if it were skinnier, like just a play icon and a title to explain what it is?  (there should be a batch icon for this.)\n. besides those two comments and resolving merge conflicts, I feel like this is ready to go.\n. @listentous, a few questions:\n1. how do you feel about an option to always show the sidebar playlist? \n2. Is it possible to autoplay via an option on the iframe URL?  Paired with item 1, that could be an unfair hit to the media host bandwidth.\n3. Does the embed automatically resume playback from a previous pageload?\n. > An option to always show the sidebar playlist (default off)\nYeah, definitely.  You wanna code it or me?\n\nI'll tweak the pull request and add the feature soon.\n\nYou'l probably want to start a new branch off the latest master :grin:\n\nNo, playlist always starts at the first track... because reddit listings\n\nthat is a completely valid response!\n. yeah, site modules for options are a little magical.  #1872 adds functionality/options for \"load sidebar embed on pageload\" and \"autoplay sidebar playlist on toggling it open (from click, not from pageload)\"\n. @listentous, can you ask the /r/listentothis mods to change their radd.it link to a proper http://radd.it/... link instead of a goo.gl?\n. nice touch with hiding the [view images (0)]\n. https://www.reddit.com/r/RESissues/comments/2pke98/minor_bug_textbased_command_for_switching/\n. thanks for bookkeeping, atf\n. it might be a non-issue.  time would tell.\n. my argument is that it's a quick message, so the user should be able to skip filling in the subject field.  however, if the user hover and message-the-mods shows the quick-message popup, then it seems better to leave the subject field empty.\n. it'd also be nice to add a blue gear to the qm dialog which links into RES settings.. @erikdesjardins, could you slap that on?\n. jeez mang.\n. Chrome version #?\nDo you have the Account Switcher module turned off?\n. You can work around this issue by turning off the Username Hider option for hideAllUsernames.\n. Can you try going into your settings and adding an empty row to the Account Switcher's accounts list?\n. @erikdesjardins reports that the issue started with https://github.com/andytuba/Reddit-Enhancement-Suite/commit/c078b2429491024094f541300cfeb1cc8c0de45b\n. Yeah, those popups are due for some UX/layout tweaks. Of course, people will complain about it being different simply because it's different, so we should validate the change by designing it well.  Your concept already looks better at first glance, but I think we can go even further.  I'd also like to verbally think through some things for future reference.\n. Does reddit have some stylized red 18+ icon?  or am I just thinking of the NSFW stamp.\n. These dialogs load in two stages:\n1. using data which is immediately accessible from current page or RES storage\n2. using data which is loaded a second later from the reddit API\nI'd like to show as much as possible in the first stage, but I don't want second-stage elements pushing around first-stagers. Of course, buttons should also be logically grouped.  These will hopefully dovetail well. But what order / placement should the buttons have?\n. Should user karma go next to the username, and move the links/comments links further to the right or down into the body?\n. I definitely like how the ignore and highlight button are now the standard switch-buttons, and how you collected the options/state switch-buttons.\n. How about prepending a gilded icon to the \"give gold\" button?\nI think the button should always be \"give gold\", to reflect that it is an action. (also, why dissuade sales?)  However, I would still like to communicate whether a user already has gold.  How about dimming the gilded icon on the button if the user has gold (or not), or adding a gilded icon  next to the username in the header if user has gold?\n. This would be a good opportunity to add deeplinks into a subreddit, like new/top/rising/controversial.  They could go in the same location as submissions/comments.  \nHow about something like ...\n/r/SUBREDDIT   posts \u25bd    comments    wiki\n          (v opens a dropdown)\n                  | /best  \n                  | /new  \n                  | /rising       \n                  | /controversial\n                  | /top  \n                  | /gilded  \n                  | /ads\nand to go the extra mile, RES could remember which option was selected and show it instead of \"posts\".\nUser popup could get the same treatment.\n. >  not sure what the comments link is there for.\n/r/subredditname/comments is a thing :smile:  [edit:] but it might should be an opt-in thing\n. re: \"async load\" https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1887#issuecomment-67722818\nHow about showing the whole shebang at once, but switch-buttons can be grey-disabled and async-loaded content like \"2011-03-01\" and  \"551 | 642 | (%)\" can be a throbber?  Could use a tiny version of the NER throbber.\n. I'm a little worried about the \"view / navigate to links ( & dropdowns)\" just getting shoved somewhere thoughtlessly.. \nWould it be clever or dumb to add tabs onto the header?\n. ah, well, have fun!   I'm excited to see what you come up with.\n. dat drop shadow doe\n. :+1: on deeplinks in kinda-tabs below the username/subreddit.  \nIs it possible to efficiently detect if a user has publicized their liked/disliked? I don't see it in /u/username/about.json.\n. I'd say .. only show it for current user.  This is kinda a /r/theoryofreddit question: \"the user has decided to publicize their liked/disliked, should RES highlight that?\"\n. Opinions on #1927: adding gauges next to age/karma? Maybe a vertical stack of dots or thin horizontal pipes like \u205e, just to the left of the karma / date?\n. @githue Have you gotten to think about this some?  I find myself with a lot of free time in the next two weeks, so I'd love to start implementing your designs.\n. @githue Have you gotten to think about this some?  I find myself with a lot of free time in the next two weeks, so I'd love to start implementing your designs.\n. idea for throbber - animated periwinkle/white candystripe background?\n. idea for throbber - animated periwinkle/white candystripe background?\n. > lost momentum\nNo worries, I figured you got busy with something -- I just have some free time so I'm tying up loose ends.\n. > lost momentum\nNo worries, I figured you got busy with something -- I just have some free time so I'm tying up loose ends.\n. of course it does.\n. is there some sort of bot you can feed bug reports and issue lists and it'll do some NLP matching?  or do we enjoy the thrill and chase of calling out dupes?\n. Hmm.. can we just replace that whole mess of a function?\nRESUtils.fadeElementTo = function(el, speed, finalOpacity, callback) {\n    $(ele).fadeTo(speed, finalOpacity, callback);\n};\n. I'll finish testing this tomorrow. Can someone else also test both the migration and the filtering? (@mc10 or @erikdesjardins, couldja?)  various permutations of regex/string and unlessKeyword values please\n. I'm ... fairly confident about this.\n. @gavin19 I thought wiki pages were okay, did reddit tweak it again or did we just oversimplify our rules? https://i.imgur.com/cRNacRD.png\n. thanks, reddit!\n. I'm inclined to not try at all, just to prevent future errors for other missing attributes.\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1894#issuecomment-67896976\n. This is fixed, right?\n. The report form is owned by reddit, not RES.  Could you open a bug on http://github.com/reddit/reddit or /r/bugs instead?\n. I'm inclined to scrap my ideas about building up various context RES options (subreddit, username, etc.) and focusing on the DSL instead.  \nMy intent behind listing all these things as individual options was for ease of use for users who are uncomfortable with writing expressions, but I think that would be better served by making a simple wizard to generate/test expressions.\n. I'm on board with filtering comments from listing pages. \nI don't have a strong philosophical opinion about filtering in comments pages, but we do have the precedent from user ignore. \n. Also people have requested comments page filtering. \nThe big concern on comments page is efficiency with re-paints.\n. .md usertext-body { visibility: hidden; } \nand then add some sort of absolute-positioned overlay for \"click to reveal\"\n. This seems like something that'll get more use in the future, too.\nHmm, can we move the if (!RESUtils.userInfoRunning) { RESUtils.userInfoRunning = true; ... callback: RESUtils.userInfoRunning = false } types of checks into the .getCacheable function too?\nRe: maxAge - some alternatives are expires, expiresAfter, ttl (jStorage)..\n. :+1: on handleData before cache\n. after this and #2019 get merged, then modules.menu.checkForUpdate should use .getCacheable \n. after this and #2019 get merged, then modules.menu.checkForUpdate should use .getCacheable \n. @creesch informs me that toolbox's notes are either \"personal scratchpad\" or \"shared mod notes on a particular user\".  So, it sounds like there's still a need for \"user tag extended description\"\n. Let's clarify the requests. So far I see:\n- extended text attached to user tag (let's say it can be parsed as snudown and displayed in the user info hover pop-up)\n- reminders attached to user\n. How about this spec:\n1. Change the user tag text from a one-line text input to a multi-line text area.\n2. (Make user tagger form a little taller and wider.)\n3. For displaying tags, only show the first line of text inline. If there's more than one line of text, add ... at the end. (Maybe better to implement in JS than CSS.)\n4. Show multi-line tags on tag's title (hover tooltip). Make sure line breaks work.\n. How about this spec:\n1. Change the user tag text from a one-line text input to a multi-line text area.\n2. (Make user tagger form a little taller and wider.)\n3. For displaying tags, only show the first line of text inline. If there's more than one line of text, add ... at the end. (Maybe better to implement in JS than CSS.)\n4. Show multi-line tags on tag's title (hover tooltip). Make sure line breaks work.\n. We could also add the text-overflow: ellipsis (optional, default on) to that first line right off the bat.. :trollface: \n. closed in #2004 \n. closed in #2004 \n. i'd just dump it into showKarma since they're related both conceptually and code-wise, and then maybe consider changing the name to showUserDetails.\n. i'd just dump it into showKarma since they're related both conceptually and code-wise, and then maybe consider changing the name to showUserDetails.\n. I coded BrowserStrategy.sendMessage in a rush (thanks, Mozilla!) and just aliased it instead of doing the hard work of renaming everything.\n. I think this is one of those ancient features that don't have an option. \nThanks for making an issue! (i like book keeping.) Should be easy enough to roll into a bugfix release. \n. Yeah, this would be a great opportunity to use RESUtils.subredditRegex.  Would you like to do that or should I close this out and just slap it together real quick?  (I appreciate your finding the right place to hack it in.)\n. super duper\n. requests: https://www.reddit.com/r/Enhancement/comments/2qs69z/feature_request_when_you_expand_a_text_post_can/\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/b2f47d9eed6b168d8d84832cd49cc71f8d914d65\n. Intriguing!  I've been wishing for something like this.  A few small/medium suggestions:\nWhat do you think of \"experience\" instead of \"trust\"?\n. :+1: on accessibility: both color and amount!  Small problem with red, though: colorblind users will probably have trouble distinguishing red vs gray:\n\nPossible colorblind solution: How about only outline/border and no background/fill  for the gray bars?\n. Instead of 15 separate options for thresholds, how about 3 table options (age, link karma, comment karma)?  same as the comment score color thresholds.\n. > > experience -> trust\n\noption name for threshold will be too long\n\nseems like we should solve that by fixing the RES console layout =p\n. > > Small problem with red, though: colorblind users will probably have trouble distinguishing red vs gray:\n\nColorblind can change the color into something that work with them, no ?\n\nit would be nice to design it so colorblind users don't have to, or making this module check the StyleTweaks.options.colorblindfriendly.\n. i don't even know what's going on today, yalls are too productive\n. it looks okay on the face of it, but I'd like to take a deeper look at the spots where var declarations got moved around.\n. it looks okay on the face of it, but I'd like to take a deeper look at the spots where var declarations got moved around.\n. hooray for ~~this~~\n. Thanks! \nSomeday I'll refactor those watchers so it fires if interesting elements exist on page load too, and change remove all the duplication in the modules with \"call on page load and call on new elements\". That'll help move towards waypoint (call on newly visible elements) as well. \n. i made 4e1a5bc021ef454d898d647c8c242458c56ee3e0 more \"thing-centric\" with 10ca2496a6727b92573f03f3de0aa153c2d5ecd8 but it still feels odd. that section probably deserves a bit more refactoring.\n. i'm a fan of this style  ($.each and i for index)\n. PR is enough in my book since it's a superset of issue.\n. Still WIP?\n. [2:10pm] @erikdesjardins\nso I discovered why we can't save the modmail shortcut - we use .getElementById(optionKey) to update the hidden input that holds the keycode, but there's already a #modmail in moderators' userbars\n[2:10pm] @erikdesjardins\nright here https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/settingsConsole.js#L99\n. (repro'd in osx chrome canary v41)\n. Is this still relevant?  Maybe flickr fixed it on their side? That test post works fine on the latest build.\n. Is this still relevant?  Maybe flickr fixed it on their side? That test post works fine on the latest build.\n. sounds good. thanks for rebase!\n. sounds good. thanks for rebase!\n. just gonna ignore those two stray commits..\n. thanks!\n. thanks!\n. Plus you can do follow-up commits on that branch in response to feedback on\nthe pull request, and the PR gets updated with those commits.\nOn Jan 4, 2015 6:39 PM, \"Gregory McClure\" notifications@github.com wrote:\n\n@mc10 https://github.com/mc10 Thank you very much for the tip, I will\nemploy that practice immediately.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1957#issuecomment-68662174\n.\n. Plus you can do follow-up commits on that branch in response to feedback on\nthe pull request, and the PR gets updated with those commits.\nOn Jan 4, 2015 6:39 PM, \"Gregory McClure\" notifications@github.com wrote:\n@mc10 https://github.com/mc10 Thank you very much for the tip, I will\nemploy that practice immediately.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1957#issuecomment-68662174\n.\n. Thanks for implementing this!  With a few little fix-ups for style, it'll be good to go.\n. i have a silly idea: making this part of single-click opener itself.\n. heck, i'll just do it right now.\n. yeah, me neither.\nmaybe i shouldn't do tech support from bed on my phone\n. yeah, me neither.\nmaybe i shouldn't do tech support from bed on my phone\n. @mc10, could you call out changes you've already double-checked? \n. @mc10, could you call out changes you've already double-checked? \n. I made a few stylistic commits (e.g. swapping around each/every/some), plus some actual functional fix-ups to the console (don't dupe save changes buttons, hide the button in modules w/o options, show the \"options saved!\" a little bit longer)\n. fixed by #1930\n. fixed by #1930\n. will be included in v4.5.5 release\n. will be included in v4.5.5 release\n. bitcointip probably should get removed at this point anyway.\n. noted, thanks.  i know i'm missing a bunch of fixes from the last month or so, so feel free to highlight anything (or @allthefoxes just edit into your comment)\n. noted, thanks.  i know i'm missing a bunch of fixes from the last month or so, so feel free to highlight anything (or @allthefoxes just edit into your comment)\n. thanks! i hope i didn't ruin the spiffifying\n. wow how did we miss putting upload + Cmpwn on there.\n\nfixed up\n. backup.. maybe we should actually use the changelog file in the repo..\nRES 4.6 Changelog\nFeatures\n- Added \"Upload\" module. Allows file uploading directly from the /submit page ^(thanks @SirCmpwn, @andytuba, @erikdesjardins, and @imgrush)  - Currently only supports imgrush.com - If you are interested in adding upload support for your site, please check the RES GitHub wiki.\n- Added custom filters to filteReddit module ^(big thanks @gamefreak)\n- Added loading selected subreddit stylesheets anywhere ^(big thanks @andytuba)\n- Added custom toggles to RES dropdown menu, particularly for turning custom-loaded subreddit stylesheets on/off \n- Added \"Orangered\" module, for managing and syncing unread notifications (locally). does not replace reddit message notifiers. ^(thanks @andytuba)\n- Added some usability and gussying-up to the settings console ^(thanks @andytuba and @gamefreak)\n- Extended subreddit filter to everywhere by default, with an option to go back to /r/all and /domain ^(thanks @allewun and @andytuba)\n- Added gold icon to accounts listed in Account Switcher dropdown menu ^(thanks @coreyja)\n- Added repost warning on submit page ^(thanks @erikdesjardins and @andytuba) ^(The \"Someone has already posted that link...\" warning now warns you on the \"submit a post\" page, before you try to submit.)\n- Subreddit Info now shows when hovering over trending subreddit listings ^(thanks @andytuba)\n- Added the ability to customize keyboard shortcuts for comment tools (bold, italic, etc.) ^(thanks @erikdesjardins )\n- Added a prompt before abandoning changes to settings options you haven't saved ^(thanks @andytuba)\n- Added options to show full timestamps by default ^(thanks @erikdesjardins)\n- Added a \"New RES announcement\" notification in RES dropdown menu ^(thanks @andytuba)\n- Added a subreddit manager option for lowercase/mixed-case shortcuts in top bar ^(thanks @andytuba)\n- Added a subreddit manager option to use different/same set of shortcuts for different accounts ^(thanks @andytuba)\n- Added # to \"show child comments\" on top-level comments ^(thanks @erikdesjardins)\n- Added steamusercontent.com expando support to showImages module ^(thanks @JonBons )\n- Added futurism.co expando support to showImages module ^(thanks @mverderese )\n- Added pastebin.com expando support to showImages module ^(thanks @erikdesjardins )\n- Added gist.github.com expando support to showImages module ^(thanks @erikdesjardins )\n- Added drscdn.500px.org support to showImages module ^(thanks @erikdesjardins, @andytuba)\n- Added Microsoft OneDrive support to showImages module ^(thanks @sgtfrankieboy and @andytuba)\nFixes\n- Vote weight (RES tracking upvotes/downvotes you give to each user) tracks again ^(thanks @matheod)\n- rts and save-RES buttons and some other things should now work with newly loaded comments ^(Thanks @erikdesjardins )\n- Username Hider hides username with correct displayText in header and taglines ^(thanks @erikdesjardins)\n- Username Highlighter adds colored background to hidden usernames (e.g. OP, mod, admin, etc.) ^(thanks @erikdesjardins )\n- New tabs will open in the foreground/background according to browser preference now. (Used to only open in background) ^(Thanks @mc10) \n- Fixed certain elements in nightmode (code blocks, quotes, etc..) to work with reddit's new markdown. ^(Thanks @gavin19)\n- Fixed Modmail keyboard shortcut not being able to be customized ^(thanks @erikdesjardins)\n- Fixed post title link changing to its expando's direct URL ^(thanks @erikdesjardins)\n- Fixed albums switching back to image 1 when scrolling  ^(thanks @erikdesjardins \n- Fixed tumblr photo captions not showing for single-image posts ^(thanks @andytuba)\n- Fixed account switcher not closing properly sometimes ^(thanks @Shraymonks)\n- Fixed multiple entries for the same subreddit appearing in \"My subreddits\" dropdown ^(thanks @andytuba)\n- Fixed nightmode adding a black background when visiting sites with the reddit toolbar enabled ^(thanks @andytuba)\n- Fixed nightmode styling on login popup ^(thanks @yangzihe)\n- Fixed wrong account age near first of the month in user info hover popup ^(thanks @yangzihe)\nOther\n- Updated various icons and buttons to use a flat look ^(thanks @erikdesjardins )\n- Moved uncheckSendReplies from betteReddit to submitHelper\n- Default macros now editable - LoD removed from default macro list\n- Cleaned up quickMessage module ^(thanks @erikdesjardins )\n- Cleaned up accountSwitcher menu and error code ^(thanks @andytuba)\n- Console fixes ^(thanks @matheod )\n- Remove autocomplete from console (It didn't work anyways) ^(thanks @gmcclure382) \n- Fewer ajax calls to check for moderated subreddits ^(thanks @JordanMilne, @andytuba)\n- Update jQuery things ^(thanks @mc10 )\n- Refactored showImages.js - All hosts now have their own file, allowing for easier fixing and creation of expando supporting hosts. ^(thanks @andytuba @erikdesjardins and more)\n- Greatly refactored KeyboardNav ^(thanks @andytuba)\n- Refactored gulp a bit ^(thanks @andytuba)\n- Update readme ^(thanks @allthefoxes and @mc10 )\n- Linting and janitoring\n- A few typo commits as always\n. backup is from before changes, i think.  i think i got changes into the main one, though.\n. i'll implement erik's comments and throw in some nightmode, too\n. i'll implement erik's comments and throw in some nightmode, too\n. Right now it only applies when you're looking at a user profile page (main overview).\n. Right now it only applies when you're looking at a user profile page (main overview).\n. eventually i want to add in more subreddit-specific options per #844, also apply it in more places - but figured we can just push this out now and collect feedback (and more standards)\n. eventually i want to add in more subreddit-specific options per #844, also apply it in more places - but figured we can just push this out now and collect feedback (and more standards)\n. It only partially implements #844.  There's nothing for user options here, just [](#s), #spoiler, /s, /spoiler.\n. It only partially implements #844.  There's nothing for user options here, just [](#s), #spoiler, /s, /spoiler.\n. I haven't dug in too deep yet, but --\nI see a lot of class name changes from guider... to guiders....  Does it matter to us?  particularly for styling.\n. Those .guider_content blocks were for the RES Tips / keyboard nav table that shows up on some tips.  They probably deserve a visual redesign, but I added them in basically as-is on 47e0d2f.\n. Those .guider_content blocks were for the RES Tips / keyboard nav table that shows up on some tips.  They probably deserve a visual redesign, but I added them in basically as-is on 47e0d2f.\n. seems okay.  i guess i'll find out when I actually go fix opera12.\n. well, there are other blocking issues on Opera12, so I'll just sort it out all then if need be.. probably do the vars inside browsersupport or something.\n. @mc10 Please test your changes when janitoring. Sometimes fixing something \"that should've been that way in the first place\" exposes other issues downstream that need janitoring.\n. also if you feel it is semantically better to solve this the other way around (e.event.type == button), that's cool too\n. 4.6.1\n. thaaaaanks\n. alternatively, a floating nav panel with a TOC-style links to different sections of the page (top, wiki contents, save button, bottom of page)\n. Seems reasonable.. \n. Just to clarify, is NER using an old copy of the icon? Does it affect the user menu bar and/or the floating envelope? \n. okay, thanks for clarification.  crufty ol' ner..\n. not yet fixed, but orangered will be the place for it\n. @gavin19 can you do that fancy thang you do?\nalso lemme know if you're ever getting tired of nightmode stuff, or want me to ping you for other more interesting stuff.\n. i meant specifically the white background on the password fields\n. i meant specifically the white background on the password fields\n. I think I just overlooked them the first time around.\n. sure looks like it.\n. I'm generally in favor of status summary images, but I'm not sure how to read \"better\" or \"worse\".  Is it basically just running JSHinting?  edit: and analyzing complexity?\n. > 100% free for Open Source, forever. Get another set of eyes on your code\n:grin:\n. oh, i figured out how to dig down into the ratings reports.  \nlol https://codeclimate.com/github/honestbleeps/Reddit-Enhancement-Suite/Opera/browsersupport-opera.js\n. the browsersupport files probably aren't the best for testing this tool..\n. Thanks for highlighting this. The architecture is a little byzantine :grin:  We should do a more generic solution that supports i.anyone.imgur.com.\n. Thanks for highlighting this. The architecture is a little byzantine :grin:  We should do a more generic solution that supports i.anyone.imgur.com.\n. FYI, my understanding (after discussing this with the imgur team) is that imgur won't add any new i.foo.imgur.com customers.\n. thanks for the bump!  i'll take care of this .. sometime this week.\n. fixed for next release\n. @erikdesjardins which other ones did you identify?\n. @erikdesjardins which other ones did you identify?\n. Hmm, that spritesheet.. \n+, < and > could definitely be replaced.  I wonder if + is even used anywhere still.\nShould we swap out the <=  =>  and loop arrows from the image expando gallery controls? dunno which subreddits have styled those.\nComment navigator up/down buttons maybe?\nNER play/pause button could definitely become a batch icon, with a smidgen of work. \n. Hmm, that spritesheet.. \n+, < and > could definitely be replaced.  I wonder if + is even used anywhere still.\nShould we swap out the <=  =>  and loop arrows from the image expando gallery controls? dunno which subreddits have styled those.\nComment navigator up/down buttons maybe?\nNER play/pause button could definitely become a batch icon, with a smidgen of work. \n. /r/dashboard's \"refresh\" button could also become a batch icon.\n. /r/dashboard's \"refresh\" button could also become a batch icon.\n. Whatcha think about putting them in the \"hosts\" folder instead of \"siteModules\"? I feel like the concepts (pull media from, push media to) are pretty heavily related, and IIRC makelinks and gulp are already set up for files in hosts/\n. Whatcha think about putting them in the \"hosts\" folder instead of \"siteModules\"? I feel like the concepts (pull media from, push media to) are pretty heavily related, and IIRC makelinks and gulp are already set up for files in hosts/\n. Spot-checked it on Chrome, Firefox, and Safari. turns out gulp does need some fixups so I'll do the usual add-on PR trick\n. Spot-checked it on Chrome, Firefox, and Safari. turns out gulp does need some fixups so I'll do the usual add-on PR trick\n. Good point. and keyboard nav should still work.\nI like that idea! Here's how I'd implement it: RESUtils.pageType() could return \"error\" on error pages, and certain modules (nightmode, keyboardnav)  could include: [ \"error\" ] and other modules (bettereddit) could exclude: [ \"error\" ].  maybe some special handling in RESUtils.isMatchURL to only allow modules which specifically list includes: \"error\" to run on error pages.\n. Reddit night mode is only available in the redesign, so night mode in old reddit is still a concern . @coreyja Yeah, I figured you got busy -- but I found some free time!  Thanks for getting the ball rolling with this change.\n. @coreyja Yeah, I figured you got busy -- but I found some free time!  Thanks for getting the ball rolling with this change.\n. for about thirty seconds I considered adding in a \"check on pageload if form is prefilled via queryparams\" but it doesn't seem worth the effort since reddit will try pretty hard to push you through the \"this has already been submitted\" workflow.\n. for about thirty seconds I considered adding in a \"check on pageload if form is prefilled via queryparams\" but it doesn't seem worth the effort since reddit will try pretty hard to push you through the \"this has already been submitted\" workflow.\n. thanks for feedback @allthefoxes\n. thanks for feedback @allthefoxes\n. @SirCmpwn reports that imgrush is happy to take uploads from RES\n. @SirCmpwn reports that imgrush is happy to take uploads from RES\n. I've got the code mostly done and stashed somewhere.  Basically:\n1. copy lib/modules/hosts/mediacrush.js to lib/modules/hosts/imgrush.js\n2. add imgrush.js to manifests  (gulp add-module --file hosts/imgrush.js)\n3. remove the modules['upload'].hosts['mediacrush'] object from mediacrush.js\n4. update mediacrush -> imgrush in imgrush.js\n. I've got the code mostly done and stashed somewhere.  Basically:\n1. copy lib/modules/hosts/mediacrush.js to lib/modules/hosts/imgrush.js\n2. add imgrush.js to manifests  (gulp add-module --file hosts/imgrush.js)\n3. remove the modules['upload'].hosts['mediacrush'] object from mediacrush.js\n4. update mediacrush -> imgrush in imgrush.js\n. i was thinking of changing vendor/mediacrush.js so that you can give it a domain, instead of copying the whole shebang.. seems safe so long as all the mediacrush clones that RES interacts with maintain the same API.\n. i was thinking of changing vendor/mediacrush.js so that you can give it a domain, instead of copying the whole shebang.. seems safe so long as all the mediacrush clones that RES interacts with maintain the same API.\n. thanks for PR!\n. aww yeah, updated known issues\n. you got it: adding filenames to manifests\n. 100%.  and i'll copy-pasta it for templates if i ever get around to refactoring them/\n. Still/again? I thought we already ironed those out for next release. \n. well, we do still have to resolve #1996 \n. One problem that needs addressing: Chrome glitchily paints the category/module list  if the overflow scrollbar appears/disappears during accordion animation.\n. cool, thanks, looks good except for that one little note\n. thanks!\ncould you do me a favor and kill the border on the settings console [?] button?\n. it's practically an iOS8 button!\n. this only partially implements #1871, unfortunately\n. @SirCmpwn like audit logging for debug purposes, or for rebuilding settings on crash?  that could be hella useful for automated testing too\n. I'm leaning towards keeping RES's searchSr..., but turning it off by default and adding an informative settings link to the checkbox description, and highlighting the link if the user has manually enabled restrict_sr in the past but it is currently unchecked.\n. I threw an option into the new orangered module to turn off the favicon behavior.  The default behavior is to reset the favicon.\n. thanks Jordan!  Looks good. I tested with non-mod and mod user, and after 5min cache-bust. \nI further reduced the number of moderator.json API calls by deferring until the quickMessage dialog is actually opened.\n. Here's the relevant CSS:\n.livePreview, .livePreview .md { \n    background: repeating-linear-gradient(-45deg, transparent, \n       transparent 40px, \n       rgba(166,166,166,.07) 40px, \n       rgba(166,166,166,.07) 80px); \n   }\nIt's not anchored per se, the browser just redraws the stripes every time the box's dimensions change (i.e. new line).\nI'm open to some other styling to indicate \"this is a read-only preview\", like just candystriping around the border or semi-transparency or something less distracting..\n. -225deg still shifts around, but it doesn't seem as obvious.\nApplying it to both .livePreview and .livePreview md is making for odd jaggies, though.  Thinking maybe just do the \"border\"..\n. I would like to change the id scheme, but it can wait for a larger refactor... or we could just do that little bit now.\n. @erikdesjardins interested? RESUtils.getHeaderOffset() will probably be useful\n. because it keeps getting asked so goddamn often and it's hard to write a good AutoMod rule. \nedit : i did macro it already, too: there'sa wiki page\n. this should probably be part of the Vote Enhancements description: \n- quick blurb\n- embed https://mediacru.sh/f5GA0z8v7ZT9 and either move that to imgur or add it to the extension assets\n- link to https://www.reddit.com/r/Enhancement/wiki/faq/uppers_downers_removed\n. it's true, i got a 21st amendment at the station for the train ride home when i was githubbing.\n. Are you talking about the selects in the sidebar search box?  those are a different kind of control, a , instead of reddit's dropdowns, which are a link menu; and they have a different use case (set options before submit instead of set option and reload results)\n. they're two different controls, that are supposed to act in different ways, so they shouldn't match visually.  edit: the sidebar dropdown should act in a different way (not submitting the form immediately) than the search page dropdown (re-submit the form and reload the page with new results)\n<select> behavior is determined by the browser designers. \nsanity check: are we talking about the same thing?  the sidebar search dropdown, and the /search page dropdowns?\n\n\n. thanks!\n. merged\n. I didn't put much effort into that testing before.\n. I think at one point that was a signal to RESTemplates to preload everything.  heck with it.\nLet's kill getTemplateSync, too, since that leads to bad behavior. .. eventually.\n. whoops, thanks\n. cool, thanks!\n. utilities.space.  That's a pretty cool domain name.  Do we have to worry about making sure the site stays alive?\n. We'll need to pause video on toggled close.. let's see, how did we solve that with other video players?\n. @sgtfrankieboy, would you mind rounding up a few example posts for me to test on?\n. other than pausing when hidden (maybe a change to showImages itself) this looks okay.  if your URL lookup service happens to go down, it won't kill RES, it'll just be kinda annoying in xboxer's JS consoles.\n. merged, thanks!\n. I'm moderately certain it worked when I added it.  It looks like 500px's URLs now are significantly more complicated than 500px URLs RES has handled in the past, though.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/e6074e385d511f4e2447bb69829f4b1c5175c7e3/lib/modules/hosts/fiveHundredPx.js#L11\n\nregex: /^https?:\\/\\/\\w*cdn.500px.(?:net|com|org)\\/([0-9]+)\\//,\nhttps://drscdn.500px.org/photo/93192709/m=2048/9b0c79faf3c0b3dc5663c75accd184cb\n. @Melraidin, @erikdesjardins, could you take a look at this?\n. Yay, thanks for math fixes!\n. That would be pretty swell.  I can definitely see people (me) wanting to nix the formatting buttons but keep the macros, and macros have grown to a large-ish feature.\n. snazzy!\n. lol #2075\n. is that the only place RES uses those wedge images?\n. :+1:\n. refactor what? upload module should already be pretty well factored. what might need refactoring is nediacrush / imgrush.  and maybe some copy. \n. @allthefoxes the issue should be limited to hosts/imgrush.js and vendor/Mediacrush. modules/upload is pretty limited.  I'm gonna close this in favor of just @imgrush's PR.\n. if we're doing munging URLs commentTools link can we throw in validation?  i keep seeing [..](www....)\n. I definitely agree with \"optional\". I'd also like to show an notification hinting at this option when the user adds a comments link, at most once a week and easily disable-able.\n. thanks for fixing that!\n. > - wrap subreddit name in a span, onclick open subreddit (yuck, re implementing links in JavaScript)\n- split post title link into multiple links, but this sounds dangerous\n\ncompromise idea: \n1. wrap subreddit name in a span\n2. onclick span change title link to that url\n3. onclick link revert title link to original url\nHowever, this might interfere with out.reddit.com click tracking.\n. Oh right! Yeah, I think I like that best.\n. Thanks!\n. flat definitely is the trend the days. \n. sorry about all the crazy assigns. github mobile client is a bit twitchy\n. i haven't put much thought into it, but ::pseudo-element / :pseudo-class() does feel habitual..\n. good catch\n. Could you add a modules['styleTweaks'].isSubredditStyleEnabled() method and call that instead of examining the checkbox? That checkbox really shouldn't be a public property.. yay legacy cruft.\n. thanks!\nnext up: fixing the overlay thingie that shows the menu\n. takin' out the trash..\n. https://www.reddit.com/r/Enhancement/comments/2z4d87/how_to_remove_all_titles_longer_than_one_line/cpftsya\n. sentence-case:\n.title { text-transform: lower-case }\n.title:first-character { text-transform: uppercase; }\n. pseudo-title case:\n.title { text-transform: capitalize; }\nunfortunately capitalizes everything, but what are you gonna do\n. yeah.. let's only show it on the inside (comments) page\n. and once i get the mythical post hover popup going, we could shove it in there instead\n. I think Opera12 will have to take the hit for this one.\n. Hmm, we could ask in #addons - irc://irc.mozilla.org/addons\n. @agentlame reports that Mozilla approved toolbox's console module.. maybe if we this were only activated by a hidden option, then it would be safe-ish.\n. The problem is that RES should be loading this as a gifv,  not a gif. The solution is upgrading res's imgur integration, not redirecting to gfycat. It shouldn't ever be necessary anymore to fail over to gfycat for imgur links. \n. also i think this issue is logged somewhere else. if not, let's reopen this issue.\n. Looks good, thanks!  Think the guy who runs futurism would have any interest in proper https support?\n. didn't like this implementation?\n. Thanks! I'll finish this up this weekend.\n. Thanks for the contribution!\nBy the way, the magic phrasing is \"Fixes #1831\".  That tells GitHub to automatically close an issue when the fixing commit/PR is merged into master.\n. https://www.reddit.com/r/Enhancement/comments/4aclyl/feature_request_inline_instagram_pics_like_imgur/\n. I'll fix this Monday if nobody beats me to the punch. \n. yeah, let's make that circle twice the size and a darker green. \n. maybe swap it for a batch icon of a floppy disk which is gray/30% opaque --> white/opaque\n. @allthefoxes how's that look to you?  plz to re-open if it deserves a different tweak.\n. biggified the gem and changed the colors:\nnothing to save (darker hue of the button's background color):\n\nsave now (bright green):\n\n. @honestbleeps Remind me why we haven't done this all along. IIRC it was to mark things visited immediately and in history. can we rely on addUrlToHistory?\n. I'm sold.\n. We should fix noembed and route the request through there.\n. related: #1021\n. took me three tries to track it down, too :P \n. @allthefoxes, it'll be alllll good, just a few extra kb for the l10n library and language packs.\n. finally the world feels normal again\n. i am open to shuffling around modules to other categories, too.\n. > widget card\nheh, we don't really have a good name for it.. I usually call it \"subreddit info hover pop-up.\"\n\nThanks for reporting it!  That would've annoyed a lot of people and I bet it wouldn't have been reported in time for the first hotfix..\nIf you're curious, the problem was that filteReddit's \"save updated settings after adding/removing a filtered subreddit\" call was bugged.. probably copy-pasta error somewhere recently.\n. They're at ~15% opacity, we could easily bump that up to make it more obvious.  I'd rather use a CSS solution than muck around with images.\n. That'd be smart, eh.. maybe even show the counts in the title (tooltip) for each one\n. I felt like it was unresponsive, so I made it show very faded almost immediately, then faded it in basically how you had it.\n. Ooh, how about isPageType('onetype', 'anothertype')?  Did that ever make it into master?\n. thanks! handy dandy\n. does anonymous need special handling? \n. We should definitely host the shield icon instead of relying on reddit's spritesheet, which changes more often than we release.\n. > Should the \"last selected\" sendAs be per-user?\nNot sure what you're asking.. like, should the user be able to specify \"when logged in as FooMod, always use Foo; but when logged in as BarMod, always use last selected\"? \nif it's that, I would say \"maybe -- keep an ear out for people requesting/complaining -- but don't bother with it right now.\"\n. This all looks super-duper rock and roll aside from the shield image hosting.\n. Yeah, that sounds like a nice usability tweak. Looks like it's easy - just tack current username onto the \"lastSentAs\" resstoarge key.\nWe're out of image slots on /r/Enhancement :(  let's just go for broke and hope we get RES image distribution released before the icon hypothetically breaks.\n. thanks! also thanks for maintaining the nightly archives. \n. yes, thanks much for looking up the number.\n. Nifty! :fireworks: \"pizzazz\" :grin:\nDoes touching the fadeIn transition affect the picture-loading throbber?\n. groovy, thanks for double-checking.\n. Yeah, I deliberately put some modules in multiple categories for discoverability / taxonomy.  It's a quirk of implementation that both sections expand. I kinda wanna leave it that way but it's probably more polished (and hopefully not too much more work) to only open the first category or leave the current category open if it's in the module's category list.\n. @himmelarthur this is the part where you close the issue :grinning: \n. also, if you stay logged in, you can set your reddit preferences to always show in French unless you specifically visit https://en.reddit.com/ or something\n. thanks! hurray for small steps towards i18n\n. Nifty! Nice and generic, should neatly handle any custom \"message the mod\" links added to sidebar. \n. I installed RAS and RES v4.5.4, then set RAS to load a random profile -- seems to work fine.  Can you give any more details? Any errors from the webdev console? Your browser and RES version #s?\n. Needs options (default off)  and code clean up. I can take care of it. \n. This will need a migration as well.  I'll get to it tonight.\n. also thanks for superfast turnaround!\n. It sounds reasonable to change RESUtils.createElement.commaDelimitedString (which is way old) to  use Number.prototype.toLocaleString internally instead of that overly complex algorithm.  (We'll see if I regret that later :grin: )\nI'm okay with doing it in this same PR.\n. I took care of the comma number change, thanks for the suggestion. Will merge sometime in the next few days. \n. maybe I should rename commas to commentCommas and add a linkCommas too\n. merged to master\n81c1f05b83a73ec85311be7c62e91323a0c2ecdf\n. @JonBons, are you interested in adding gfycat albums?  It might get a bit hairy, though -- I hit some roadblocks with the click+drag-to-resize for imgur gifv in albums.  Maybe I should get that working first.\n. Ooh, thanks for the pointer.  I'll check that out this week.\n. #2168 specifically\n. 4b1ede5955343d93620bcea14ca0dbc8ddbc5e42\n. yay decrufting!  yay better tumblr support! \n. whoops, sorry i missed this\n. duplicate of #1833. working on it this week too!\n. Thanks!\n. related discussion: https://www.reddit.com/r/Enhancement/comments/33x21m/why_doesnt_the_subreddit_filter_option_uses_the/\n. solves the \"require human confirmation\" problem but not the api ratelimiting one.. maybe we can hand it off to the background process.\n. Update on this: reddit's \"hide post\" API now accepts multiple IDs, so RES can batch-hide filtered posts.\n. Thanks!\n. Thanks!\n. 39ad448a410d30ced484751a4ff0c216656d5ced\nalso fixes quickmessage collateral damage on any submit page where only self-posts are allowed\n. thaaaaaaanks\n. heck, show em all?\n. fixed bbc82b0e5ee65e17b222c51caa4cf493d901e6c1\n. goMode is optional, by the way.\n. Yes, this is one of the biggest wins of the orangered module.\n. rebased and merged https://github.com/honestbleeps/Reddit-Enhancement-Suite/compare/8c120b1f0295...f485b71e9612\n. Bleh, your system really doesn't support upwards black arrow unicode character?\n. rabble rabble rabble.\nHmm, different arrow, CSS arrow, or batch icon?  Batch F018 seems like the best bet, but I don't really like it.  It might be time to start building our own font.\n\n. 6925c9595efdb0761f7f2bb6c175d6e9b8b1cecb \n\n. Huh, I thought keyNavAnnotations at least had something addressing that issue. Maybe it regressed.\nThanks!\n. It'll be released when it's released. We still have some big todo items to knock out.\n. Be cautious - potential security issues here!\n. @John2143658709, would you kindly link to an actual tumblr post and not just the screenshots?\n. thanks!\n. thanks!\n. @mc10 @erikdesjardins @honestbleeps @allthefoxes I think it's ready to get merged today and then we can see what I forgot over the next few days. Opinions?\n. Alright, boyos, I got a thumbs-up.  and look I EVEN GOT OPERA12 WORKING  those lucky gits\n. Title attribute could work. I was thinking more like a caption, for easy scanning.\nHow about full description (html stripped out) in the title, and first sentence as small text inside the li element?\n. Sorry, I saw your PR before your comment.\nYes, this approach sounds good \ud83d\ude04 \n. isn't ASI great.\n. isn't ASI great.\n. @mc10 we have that same problem with our other API keys anyway so... shrug.jpg\n. Maybe visualize the delta between parent comment points and child comment points with an upward facing wedge or downward facing affixed to the comment score, and set the color using the voteEnhancements colorCommentScore algorithm.\n. https://www.reddit.com/r/Enhancement/comments/5odps5/question_a_way_for_child_comments_with_more/. Fixed by #2240\n. Note that subreddit search has been mixed into the main search. If you do not restrict searching by a particular subreddit or post listing, then search results show two separate lists: subreddits and posts.  I envision only applying NER to the posts list on the mixed search (but make sure to apply NER on /subreddits/search since it's a single listing).\n. dd3dbb6\n. :+1: \nalso for feature parity or whatever  https://www.npmjs.com/package/gulp-jshint\n. Let's do grunt for now since you already put in the legwork and we can maybe migrate over eventually.\n. @honestbleeps Travis integration on this repo?  https://travis-ci.org/  looks like a pretty streamlined process if you login via github (top right)\n. Thanks! Nice turnaround :)\n. Thanks! Nice turnaround :)\n. What @mc10 said -- leave the detect as-is, and make the hosts [ 'futurism.com', 'futurism.co' ]  -- should cover all bases easy nuff.\n. What @mc10 said -- leave the detect as-is, and make the hosts [ 'futurism.com', 'futurism.co' ]  -- should cover all bases easy nuff.\n. Already fixed for next release. \n\n. Already fixed for next release. \n\n. Do you remember how you caused these errors to fire?  What with the huge migration in the next release, we should make sure everything won't go kaput on upgrade.\nI think I've reproduced this in the past by manually removing RESStorage entries for options versions. However, I did a token test with loading the code for each version from 4.5.1, 4.5.2, 4.5.3, 4.5.4, and HEAD and didn't see any errors.  It's worth doing again, though, I didn't test it super-hard. \n. Looks like I forgot to migrate all the option values to modules.userInfo.options..\nedit: #2262\n. ugh yeah i swear i fixed this in some branch, I guess it never made it to master. thanks!\n. Related #1513\n. Proposal for option: enum of f/all (default), r/all, or hidden. If somebody really wants both f/all and r/all, they can add their own shortcuts. \n. Oh, I still liked the idea.. seemed like a better default than hacking in a not-subreddit shortcut\n. :notes:  thanks!\n. In theory the \"save\" button really does save and submit, not just close the big editor ... but I think it only pulls off \"close\" in certain page types.\n. It's irrelevant for non-gold users, because only gold users can add notes to friends.  Check out https://www.reddit.com/prefs/friends on a gold account vs a non-gold account to see what I'm referring to.\n. https://www.reddit.com/r/Enhancement/comments/3ms8ac/feature_request_integrate_the_friend_notes/\n. Fixes #2127\n. I've got a branch ready to test and PR which will prevent this in the future and allow reddit to remove their workaround for us.\n. This pull request probably wouldn't get deployed for a few weeks at least.  We are trying to wrap up loose ends towards pushing a release, though.\n. Just patience, thanks for being proactive though!\n. Cool your jets, pornbotnet.  We're behind on a bunch of things and your continually bumping this PR won't help.\n. My working plan is \"release 4.6 sometime soon and 4.6.1 soon after, then tend to any outstanding pull requests for 4.6.2.\" so, \"after 4.6.1\" is when things will be cooled down. \n. @pornbotnet I'm sorry I got crabby with you last week. I was frustrated with myself about getting behind. It was unfair to respond rudely to your polite request for info, especially after encouraging you to check in last month. I appreciate the work you're doing for the community with the quality, minimal-advertising, content-first services provided by pornbot/humpthebundle.\n\nI'm planning on testing (for science, of course) and merging your pull request early next week. Release date is still unsure, sorry! I'll take care of the merge conflict - probably just the include line in the manifests.  There are two small items to round out this PR:\n1. How would you like to be credited in changelog and settings console? The typical format:\n   - Changelog: \"- Added expando for pornbot.net (thanks @pornbotnet)\"\n   - Show Media settings: \"[on|off]  enable pornbot.net, code contributed by @pornbotnet)\" \n2. Do you have a small logo to show under the expandoed video? (hosted on your site preferably, or included in RES's assets)\n   - Favicon (16x16)\n   - Image sized between 15x15 -- 150x30 pixels\n   - Fallback will be \"pornbot.net\" with a little border, which seems to match the site's current aesthetic.\n. @pornbotnet Do you need help getting RES running in your browser?  The README should have lots of details, but I can give you pointers on building if need be.\n. Thanks! I know it's a little tough to add new media hosts to RES, so I can help debug more. I'm thinking of copy-pasting the the imgur favicon block over from its template, but I can take care of that. \nCould you push your changes?\n. fixed 40c2ced61ec32412c9e4ce9ae8c91d5de394a075\n. Justification: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2431\n. I've seen the occasional report over the past few months.\n. https://www.reddit.com/r/RESissues/comments/2gaact/bug_automatic_night_mode_has_never_worked_for_me/?ref=search_posts\n. potential: https://www.reddit.com/r/RESissues/comments/347cgt/proper_way_of_toggling_night_mode_when_automatic/?\n. Thanks for clean-up!  While you're in there, there's a report of some weirdness with nightmode setting the localStorage key on not-www.reddit.com (and not getting cleared out when turning off NM?)\n. localStorage is siloed by subdomain. Since //reddit.com redirects to //www.reddit.com, we can't take advantage of localStorage in //reddit.com.\n\nYeah, Chrome RES' RESStorage is populated from the extension's localStorage in chrome-extension://kbmf...: \n\n. I think the \"nightmode stuck on subdomains\" could be resolved by turning off nightmode and removing the tab's localStorage as soon as RESStorage loads to affirm \"no, night mode isn't active right now after all\".. probably a little flicker of nightmode styling which might confuse the user or other modules which pull values from CSSS ... but hopefully modules.nightMode can win the race\n. :+1::+1: yay bonus bugfix\n. specifically by username https://www.reddit.com/r/Enhancement/comments/3s9f43/feature_request_block_easy_commenting_from_other/\n. also /gallery/HASH/foo\n. This is cool!  Let's target this for just after 4.6.1 (i.e. new major release, hotfix release, then merge).\n. :+1: for tooling\n. :+1: on erik's suggestion\n. Thanks!\n. Flexbox order is probably the easiest way to implement this.\n. Flexbox order is probably the easiest way to implement this.\n. works okay for me, when switching a toggle or leaving a textbox after typing in it. maybe something else I just merged from @erikdesjardins fixed it?\n. works okay for me, when switching a toggle or leaving a textbox after typing in it. maybe something else I just merged from @erikdesjardins fixed it?\n. 9fb205c95f248fa1635cd09f17622b1cc99220e8\n. 9fb205c95f248fa1635cd09f17622b1cc99220e8\n. I'm planning on testing and merging tonight or tomorrow morning.  I presume it's all good but doing that due diligence.\n. I'm planning on testing and merging tonight or tomorrow morning.  I presume it's all good but doing that due diligence.\n. Thanks for the heads-up / reminder, I'll prep a notice for when people report it's broken.\n. Thanks for the heads-up / reminder, I'll prep a notice for when people report it's broken.\n. https://www.reddit.com/r/Enhancement/comments/75duil/make_side_bar_visible_on_all_pages. https://www.reddit.com/r/Enhancement/comments/75duil/make_side_bar_visible_on_all_pages. not exhaustively tested\n. not exhaustively tested\n. Good idea, thanks!\n. Good idea, thanks!\n. 132a7e3b22b53e669a20d8e564cd10f59182412c\n. 132a7e3b22b53e669a20d8e564cd10f59182412c\n. I think I wrote it just before the reddit preference was added, yeah.\nHowever, this is still useful for people browsing anonymously.\n. I think I wrote it just before the reddit preference was added, yeah.\nHowever, this is still useful for people browsing anonymously.\n. That is a heinous hack. Key nav should not use a fake click to trigger RES functionality. I'll just tidy that up.. But I thought when I tested it that shift x still worked okay \n. That is a heinous hack. Key nav should not use a fake click to trigger RES functionality. I'll just tidy that up.. But I thought when I tested it that shift x still worked okay \n. 3e0e7b079752b6877ef21c924ba9286d80b153a7\n. 3e0e7b079752b6877ef21c924ba9286d80b153a7\n. @perry-mitchell Thanks for providing the oddshots service! It looks like a great contribution to the video game community.\nDo you have a small logo to show under the expandoed video?\n- Favicon (16x16)\n- Image sized between 15x15 -- 150x30 pixels\n- Fallback will be \"oddshot.tv\" with a little border.\n. @perry-mitchell Thanks for providing the oddshots service! It looks like a great contribution to the video game community.\nDo you have a small logo to show under the expandoed video?\n- Favicon (16x16)\n- Image sized between 15x15 -- 150x30 pixels\n- Fallback will be \"oddshot.tv\" with a little border.\n. @perry-mitchell If you want any help with a PR, feel free to ping someone on github, irc, /r/enhancement.. the showImages code can be a little obscure.\n. @perry-mitchell If you want any help with a PR, feel free to ping someone on github, irc, /r/enhancement.. the showImages code can be a little obscure.\n. Well, that's nice and simple.  Thanks for the quick turnaround!  If somebody can do a token test on this over the weekend, I'll merge it -- or I'll get around to it in a few days.\n. Well, that's nice and simple.  Thanks for the quick turnaround!  If somebody can do a token test on this over the weekend, I'll merge it -- or I'll get around to it in a few days.\n. Looks good to me, thanks!\n. Looks good to me, thanks!\n. What the heck, let's make fun of me.\n. What the heck, let's make fun of me.\n. This is a cool idea. I'm envisioning a \"Outgoing Links\" module with an option like trustedDomains = list, dangerousDomains = list ..   and it shows a red /!\\ next to links going to dangerousDomains, maybe some animation on hover\nThis probably should be disabled by default. Opinions?\n. This is a cool idea. I'm envisioning a \"Outgoing Links\" module with an option like trustedDomains = list, dangerousDomains = list ..   and it shows a red /!\\ next to links going to dangerousDomains, maybe some animation on hover\nThis probably should be disabled by default. Opinions?\n. thanks for catching that.. I musta just autocompleted without thinking.\n. thanks for catching that.. I musta just autocompleted without thinking.\n. Does /subreddits/search still work the same? That may have been why not selecting for .side before.\n. Does /subreddits/search still work the same? That may have been why not selecting for .side before.\n. :nail_care: :+1: \n. :nail_care: :+1: \n. thanks for :eyes:  @madbook !\n. thanks for :eyes:  @madbook !\n. Hmm, that dialog should have a min-height instead of a fixed height .. \nI've kinda been wanting to add a optional max-width (default of 3em) and overflow-hidden to tags, too.\n. Hmm, that dialog should have a min-height instead of a fixed height .. \nI've kinda been wanting to add a optional max-width (default of 3em) and overflow-hidden to tags, too.\n. Fixed in release/4.6.1\n. Fixed in release/4.6.1\n. /me whistles innocently.\n. /me whistles innocently.\n. Interesting!  Yeah, PR it so we can give it a spin.\n. Interesting!  Yeah, PR it so we can give it a spin.\n. Released in 4.6.0\n. Released in 4.6.0\n. I suspect there's about 2 users who still use Safari 5.1, and they're probably on crappy old hardware and can't upgrade to any other browse that we do support.  :feelsgood: \n. I suspect there's about 2 users who still use Safari 5.1, and they're probably on crappy old hardware and can't upgrade to any other browse that we do support.  :feelsgood: \n. If any nightmode users complain about the domain/timestamp color change, then I'll add it to /r/resupdates/about/stylesheet and they can opt in to that feature by adding a body class; and if enough complain, we could add it back in as a first-class option.\n. If any nightmode users complain about the domain/timestamp color change, then I'll add it to /r/resupdates/about/stylesheet and they can opt in to that feature by adding a body class; and if enough complain, we could add it back in as a first-class option.\n. Huh, I thought mc10 cleared that out last year.\n. Huh, I thought mc10 cleared that out last year.\n. you guys are so great\n. you guys are so great\n. wouldn't surprise me if this breaks things.\n. I think the \"open next page\" button should unpause NER when the page number is a pauseAfterEvery page, yes.  Feels like a bug with the current behavior.\n. fyi I am slapping on 'unconfirmed' because while i am pretty sure it works exactly as you described i want somebody (e.g. me) to double-check.  @allthefoxes did you repro or are you just expressing agreement?\n. lookit you with your sensible ideas\n. hooray, a nice sustainable fix!\n. awyeah.jpg\nthanks for explanation on \"why res-subreddit-button\"\n\nAre there any moderately popular themes, e.g. /r/Naut, that target the old classes? It would be nice to not break back-compatibility if it's just the matter of retaining a legacy class name.\nedit: whelp I found .res .RESDashboardToggle{background-image:none!important; in /r/naut/about/stylesheet but not RESToggle.  Probably worth checking a few more themes, though.\n. res-fancy-toggle-button would be cool, a little more general-use than subreddit-button.\n. @githue \n. ^ while this is normally true, I have been meaning to create an issue to replace the closed-not-merged PR about this from a year or two ago.\n. This is medium difficulty because it cuts across several RES modules in addition to various reddit features.\n. This could be implemented as a CSS snippet now\n. I'm inclined to go for broke and merge this, then use /r/resupdates to hotpatch any major bugs reported.\n. Check out the new Stylesheet module's options -- RES loads its subreddit stylesheet everywhere by default.\n. @andytuba TODO changelog\n. @githue can you review my tweaks?  shouldn't change anything functionally.\n. no, thank you\n. This'll be nice to clean up.   I personally would have sorted it the other way around: admin > mod > friend > op, in order of most exceptional to most regular. What's your thinking/rationale/source for the order here?\n. Oh, okay, thanks for the clue - I was reading it like \"greater-than\" :)  serves me right for not testing it myself.\n. @andytuba TODO changeloge\n. Sorry about the terrible delay. This was targeted to 4.6.2 milestone when I started putting a freeze on 4.6.0. After 4.6.0 (upcoming) and 4.6.1 (hotfix), I plan to merge 4.6.2 PRs like this into the 4.6 branch and subsequently into master.\nIf someone from RES core team can review and test this before 4.6.0 release, I'll consider merging it into release/4.6.0.\ntl;dr: backed up release schedule\n. Nifty! -- but I'd rather see this as a standalone extension or a guide to a custom search engine, particularly so users can enable/disable the functionality at will.\n. That pop-up is \"create a link using snudown (reddit markdown)\". You can customize that keyboard shortcut in the upcoming release.\nIn the future, could you report bugs to /r/RESissues? Thanks!\n. @mhavard999 We prefer starting these discussions on /r/RESissues to take\nadvantage of the bug management tools built into RES, AutoMod, and\n/r/RESissues. When there's a need for nice syntax highlighting or a new bug\nhas been identified, then it's appropriate to start a gist or GitHub issue.\nFor this discussion, reddit's markdown is sufficient.\n\u200b\n\nandytuba@andytuba.com\nOn Tue, Aug 4, 2015 at 11:15 AM, Matthew Havard notifications@github.com\nwrote:\n\nHow are you supposed to have discussions with code examples???\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2388#issuecomment-127697752\n.\n. Nifty!  I'd like an advanced option to disable the trash bin to sate any potential complainers if it's not too burdensome for dev time -- looks like you factored stuff so that's easy to add in, too.\n. I'm thinking advanced option should just be to show or not show the trash bin during drag'n'drop (and the \"remove shortcut\" educator on the \"add shortcut\" dialog). I agree it's silly  to keep a tiny drag target.\n. I appreciate your contribution, but these issues have already been fixed in master.  If you're interested in fixing other bugs (which would be great!), please load a developer build of RES.\n. > squash commits\n\nClassy, but optional :)\n. TODO: changelog\n. @andytuba todo changelog\n. Neat-o -- thanks for contributing this! People keep asking for it, glad to finally deliver.\n. pixel pushing is best pushing\n. Iirc it's already default behavior for \"view all images\" to not expand nsfw images on link posts that are marked nsfw unless option is toggled. \nIt would be good to also not expand images in comments containing nsfw. \nI've also seen behavior where if a reply to a comment contains \"nsfw\" and has a positive score, then treat the parent comment as \" nsfw\".. Yay crows sourcing \n. Crowd*\n. I have a few things I'd like to tack onto this to address https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2437#discussion_r38252587 and some other points, but I'm only 2/3 way through my last todo item (filter individual items in inbox, or filter items in a PM thread (either first item or subsequent replies)) but don't touch modmail.  https://github.com/githue/Reddit-Enhancement-Suite/compare/ignoreContentByUser...andytuba:2437\n. Unfortunately, security concerns from Mozilla prevent RES from simply fetching Nintendo's embed script. RES's Twitter expando code includes special handling for Firefox to embed the contents without the nice styling: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/hosts/twitter.js#L76-L78\nIs it possible to fetch just the content without using the embed script?\n. Iframe solution sounds good! \n. looks legit.  Could somebody test this to verify, or I'll do it in the next few days?\n. Thanks!\n. Are your hands burning, @githue?  'cos these icons are superhot.\n. @andytuba host image on /r/resupdates\n. Merged 2958a9b\n. Re: 2. - /user/:username/about.json returns data.is_friend = true|false\n. Fade does feel better than shrink.  I kinda like the minor usability win of \"this is where this tooltip came from\" but I think this is better than the weird looking effect that hapens to the internals during shrink. \n. Code looks good. Has anyone tested it?\n. When you visit that video, the page throws JS errors too.\n. https://github.com/JordanDevelop/Reddit-Enhancement-Suite/pull/1\n. @JordanDevelop vidly.io is throwing lots of 502 errors.\n. @JordanDevelop Any plans to bring back vidly.io?\n. https://www.reddit.com/r/Enhancement/comments/3zazam/feature_request_globally_disable_subreddit_styles/\n. icon buttons are best buttons.\n. Code looks good and works fine. I'd like to double-check with the threadshots folks that they're okay with this, then we're good to go.\n. @sangaline On further review, there are a few problems with this PR:\n- Scraping HTML with a regexp is fragile, so if threadshot changes their DOM then this site module will be broken for several months.\n- Can't find an official API \n- Can't find a policy about hotlinking\n- Threadshots contact never responded to my email from when you first submitted this PR\n- One reddit post linking to threadshots since 4 months ago -- is there any more activity in comments?\nCan you find a better solution than scraping, and get in touch with the threadshots people to ask about embedding?\n. Go for it, friendo.. @joulay Yep, go ahead!\nFor reference, this is for when you click \"unsubscribe\" on \nhttps://www.reddit.com/r/Dashboard/#newCommentsContents\n(You can add items to this page by visiting a post's comments page, then clicking the \"subscribe\" button above the comments.). superseded by #2489\n. Could you also update https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/Opera/opera-footer.js#L3 so var Favicon = this.Favicon?  In Opera12, all of RES runs inside a huge IIFE.. I mostly understand how it works.\n. Cool, thanks!  I'll double-check it runs before pushing Opera release.\nIt's great to see contributions towards prepping RES for the next generation of Firefox extension development.\n. Thanks for tidy-up! \nOpera12 was working for a little bit recently in dev. I got it working again mostly for entertainment value and partly to be nice to the remaining few dozen users. Maybe I'll get it running again if it's simple.\n. This is fixed in master already. (Release eta unknown.) \n. Oh boy, it's that simple?\n. Oh boy, it's that simple?\n. Thanks for investigating though!\n. imgur used 5-character IDs for both images and albums up until about 2 years ago IIRC, so it's not guaranteed (especially when looking through /r/subreddit/top) that a 5-char ID will be an album. That's why RES asks the imgur gallery API endpoint to clarify.\nThat said, thanks for the well-meaning contribution :smile: \n. Incidentally, Imgur's IDs are actually hashes instead of incremented IDs. With the hashing scheme used to generate IDs, they should always be an odd number of characters. I don't know how suffused the hash space currently is, but 36^5 allotted to albums and pre-2013 images and 36^7 for images since 2013 leaves a little bit of wiggle room.\nhandleLink could get the post date via RESUtils.thing(link) -- I'd want to add in another method to fetch that -- but unsure if it's necessary yet.  I'd hazard the chances are higher than I'd like, since there are a lot of pre-2013 images that might still get reposted with the same ID. \nCan you link me any imgur.com/gallery/:id URLs which the latest dev build of RES isn't handling properly? \n. Usersub /gallery was introduced about two years ago, yeah.\nThe gallery ID is the same as the original image/album ID, e.g. http://imgur.com/12345 when published to gallery becomes http://imgur.com/gallery/12345.  So, if you uploaded the image since 2013 and published to gallery, then you'll have definitely have a URL like /gallery/1234567.  Lower probability but still possible is taking an image uploaded pre-2013 getting published/pushed into the gallery, so it could have a /gallery/12345 URL.  All albums, of course, will be /a/12345 -> /gallery/12345.\n. @zjaved \"Concern\" in this case means \"What does this PR concern / pertain to\", not \"I am concerned about such-and-such\".  It's simply a grouper for \"what sort of PR is this: feature request, bug, unconfirmed bug, etc.\"  I suppose I could change it from \"Concern-\" to \"Type-\" or something.\nAt first glance, the code looks okay. As soon as a regular RES contributor tests it, it can get merged.  (might not be immediately..)\n. Also, I'd like to double-check with the swirl.xyz owner to OK hotlinking their content.  Do you have contact info for the site owner?\n. It would be super great if you wrote a PR for RES.\n. The node/storage files are sanitized storage dumps I made, for testing migrations.  I plan to add them into the automated tests eventually.\n. neato, thanks for stepping up to contribute this!\n. Merged to release/4.6.1\nI'll comment again on this PR when it's released.\n. v4.6.1 rolling out now!\n. wrong repo, probably stale and useless or something\n. From looking at iloopit's \"Cooperation\" page and lack of ads, they're probably fine with RES hotlinking their content.. I'll go grab their favicon for a logo to show under the image.\nLooks good, thanks!  We'll get this tested and merged sometime - not sure on ETA yet.\n. @rapkin This PR is already merged into the release/4.6.1 branch and awaiting release soon. If you'd like to help move things along, you could help fix any of the outstanding bugs or verify there aren't any important unaddressed bugs mentioned in https://www.reddit.com/r/RESAnnouncements+RESIssues+Enhancement.\n. Merged to release/4.6.1\nI'll comment again on this PR when it's released.\n. v4.6.1 rolling out now!\n. @gofirst2220 Working yet?\n. @gofirst2220 Working yet?\n. Yes please, post to /r/resissues and make sure to leave all the prefilled text in your submission.\n. Yes please, post to /r/resissues and make sure to leave all the prefilled text in your submission.\n. Thanks!\n. Thanks!\n. How about simply implementing it completely inside nightmode, something like setInterval(checkForAutomaticNightMode, 5 * MINUTE)? And, of course, add in an option to disable it.\n. The sunrise-sunset sounds like a night idea, too! It could override the existing options for on/off times, but let's keep those for people on third shift. It would be very considerate to add a migration to turn off the synchronized time option if the user has changed the on/off times to a value >=2 different than the default.\n. > excessive usage\nPing it every 2 weeks, maybe~~, and if API requests fail then try again in 4-7 days?~~ that's overkill, 2 weeks should be fine all the time.\n. https://www.reddit.com/r/Enhancement/comments/5dheyp/feature_request_night_mode_based_on_sunset_and/\n. This is a cool idea, thanks for the contribution and the infrastructural update! We should regression check the new Event change in the other browsers, too.\n. This is a cool idea, thanks for the contribution and the infrastructural update! We should regression check the new Event change in the other browsers, too.\n. It would be great to replace the watchers with a better emitter like you described. It is an old and somewhat clunky pattern. \n. It would be great to replace the watchers with a better emitter like you described. It is an old and somewhat clunky pattern. \n. Just for reference, @JordanMilne's security fix related to SnuOwnd is HTMLPasteurizer, invoked within RESUtils.safeHTML.\n. Thanks!\n. Thanks!\n. This looks pretty awesome, thanks for contributing!\nMy one comment is: how do we feel about this being disabled by default? This seems like a nice power-user tweak but I don't feel the need to override reddit's default depth algorithm.\n. This looks pretty awesome, thanks for contributing!\nMy one comment is: how do we feel about this being disabled by default? This seems like a nice power-user tweak but I don't feel the need to override reddit's default depth algorithm.\n. :warning: TODO: add module to other manifests.  (I could take care of that while merging.)\n. :warning: TODO: add module to other manifests.  (I could take care of that while merging.)\n. Thanks for investigating that. I'll reach out to streamable support.\n. Appears to be fixed on Streamable's side.\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/hosts/example.js\n:+1:\n. I like the new names, seem more human. Good consolidation, definitely a few rough edges tidied up.\n. Thanks! Did you find some da urls that threw errors which should be handled better? \n. Ah, okay. Maybe reject with the exception?\n. RES should ignore .json pages.\n. I wonder if there's something more robust we could hook into like the visibility of a \"saving...\" throbber.  \nIt'd be good to also do that more holistically, like with a click handler on the save button to prevent default or clear textarea on click save button. \nI'd also definitely want to add a separate option for this behavior.\n. > if it were robust\nI'm thinking about potential failures, like reddit 502's, and now your text is gone. I also like to put defensive options into RES in case something unanticipated breaks and it's easier to tell people to turn off an option than push a hotfix.\n. Ah. I'm thinking more short-term \"get something useful and usable and not too dangerous\" than \"hypothetical robust that is less likely to be built\" :p\n. Merged to release/4.6.1\nI'll comment again on this PR when it's released.\n. v4.6.1 rolling out now!\n. https://www.reddit.com/r/Enhancement/comments/3ud78h/is_there_an_open_all_text_posts_option_like_the/\n. https://www.reddit.com/r/Enhancement/comments/40mdc7/how_to_expand_the_aa_tabs_on_a_full_page_at_once/\n. Ready for rebase :) \n. Yes, you need to npm install and, every time you pull / edit, then gulp build -b Firefox && cd dist/XPI && jpm xpi\n. Sorry, I missed a line earlier. \nYou should run npm install from the RES root directory, not XPI. \n. Plain release sounds great.\n\nVersion hotfixes should probably just increment the last number instead of adding a -hotfix; what if there are two or more?\n\nI'm thinking version numbers like:\n4.6 - features and bugfixes\n4.6.1 -- hotfix\n4.6.2 -- hotfix / small fixes\n4.7 -- features and bugfixes\n4.7.1 -- hotfix\netc.\nso the hotfix branch names are hotfix-4.6.1, hotfix-4.7.2, etc. \nDid I understand your comment right?\n. Two-branch sounds like good advice, simplest+sufficient, and my slavish attempt at vanilla gitflow is misguided as it is rather overblown.\nMy main interest in separate branches is to allow 4.7 (future major release) development to proceed, particularly with all the infrastructural changes recently merged to master, while providing a stableish branch for 4.6.0 (upcoming next release) and 4.6.x - subsequent hotfixes to that.\nSounds like I should rename the release/4.6.0 branch I've created to stable and leave master as-is. I feel a bit odd about using the name stable since it'll be a little rough at some given points.. \n:+1: on carrying on with tagging releases, instead of making/trashing release branches all the time.\n. Will merge this PR as-is into release-4.6.0 and @githue will open a new scss-friendly PR for master.  then we'll have to be conscientious about nightmode fixes going into both hotfix/4.6.X branches and PRs for master. \n. Thanks for bump, merged in 433f4afc73cd72decdcce26370b3b59e5e44b109\n. Oh goodie, imgrush is down? Yeah, let's hide that for sure and we should get an imgur anonymous uploader working at least before unhiding this.\n. moved milestone to PR\n. Merged to release-4.6.0 3e099524b9ea01993138436c4d3c3b51f17bc93e\n. Needs to be merged back to master eventually.\n. Needs to be merged back to master eventually.\n. Reverted #2538\n. Cherry-picked into release-4.6.0 624f204\n. :fire:\n. @githue Would this be a good candidate for v4.6.2?\n. I think Safari also suffers a timing problem with attempting to determine and cache the header height/position before it's set up, so it'll be nice to resolve that along with this.\n. :+1:\n. I should probably merge this into release/4.6.1, yes?\n. :+1: yay tidy-up\n. I'll cherry pick this into release/4.6.0 tomorrow. \n. @mc10 Yeah, may as well sooner than later (when release/4.6.0 is merged back in).\n. @Ajedi32 It'll definitely be great to build up test coverage. Got any opinions for what to start with for testing? https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2587\n. The approach we're trying at work is writing tests first for high-use features which, if broken, would get a hotfix pushed in a few hours -- or for RES, a few weeks. To identify those parts of RES, I plan on consulting the known issues, then skimming over the modules options.\n. Looks good to me. Once Page Navigator gets something more than a \"Back to top\" arrow, we can update it.\n. I got grunt-qunit running in release/4.6.0 but I'm having some trouble running them in master via gulp-qunit. If you get it running, that would make cherry-picking #2584 into master much easier.\n. Sweet, I'll cherry pick my other qunit work onto this and get it all merged to master this weekend. Thanks! \n. Thanks!\n. Thanks!\n. Looks like just the table header wedges go weird.\n. @honestbleeps fyi\n. I'm planning on merging release/4.6.0 back to master after release (and having loads of fun with merge conflicts), so I figure this can wait for that.\n. @grafixoner Sorry for the delay. I had opted for a feature freeze on 4.6.0 a while ago to ease releasing. Now that 4.6.0 has been released, I'm churning through bugfixes for 4.6.1. I'm also hoping to merge all the open media hosts into 4.6.1. Not exactly sure when 4.6.1 release will, but hoping for \"really soon\".  \nAfter this PR gets merged, keep an eye on r/RESAnnouncements.\n. Have you tried also reaching out to embed.ly, reddit's expando provider?  They could provide much better reach than RES, but I don't know about their requirements or processes for adding new hosts.\n. If there's a publicizable process for getting added to embedly (points of contact; requirements for oEmbed endpoint or CORS support; hotlinking policies, etc.) it would be wonderful if you could share for the benefit of other media hosts.\n. Thanks for the pointer to that page and the advice!\n. @grafixoner Merged into release/4.6.1 and awaiting release (should be pretty soon, like \"less than a month\")\n. Merged to release/4.6.1\nI'll comment again on this PR when it's released.\n. v4.6.1 rolling out now!\n. We don't need to fix the gulpfile, but @honestbleeps manually fix the version before submitting to the store.\n. We don't need to fix the gulpfile, but @honestbleeps manually fix the version before submitting to the store.\n. I suppose that's worth fixing for 4.6.1 at least. \n. I suppose that's worth fixing for 4.6.1 at least. \n. Thanks for pointing to that! \n. Thanks for pointing to that! \n. We could write an official JavaScript client that calls file_get from the Dropbox API instead of hotlinking directly.. but will Dropbox API give RES an official URL that's okay for hotlinking?\n. I'd rather not resort to those kinds of hijinks since it may result in Dropbox going to more drastic measures to enforce their policy. It'd be better to see if Dropbox as a method they condone for hotlinking to images, or forego it.\n. nixed by 22945a4 but we should probably solve the actual problem because it's a useful feature\n. Neat!\n. Neat!\n. seems legit.\nMerge to master .. eventually?\n. :+1: nix value from the description, default value should be surfaced from the code instead of incorrectly duplicated in description. also easier to fix the description than write a migration too.\n. Thanks!\n. @githue Could you review https://github.com/Reddit-Enhancement-Suite/css/pull/1 ?  I intend to push it to r/RESUpdates at the same time as RES v4.6.1 release.\n. In between Chrome fix and f230a91804362c16af0bdeeca25ccb08203c8ff2, gonna close\n. Could you submit a pull request?  For this kind of change, you could just click the pencil icon in the top right corner of a file and GitHub will automatically fork the repo and make a branch for you when editing the file.\n. I think this is fixed now by the default option for \"filter from\".. thanks for report!\n@Ajedi32 related but slightly different i think.  i messed a lot with scrolling in 4.6.0.\n. ~~RES v4.6.0, yes?~~\nCould you copy your diagnostic info from /r/resissues/submit  - if you walk through the \"i have a bug\" wizard, RES will copy it into the textbox.\n. You should start a new 4.7.0 section and first item \"Converted changelog to markdown (thanks @Ajedi32)\" :grinning: \n. It looks great, thanks for converting it!\n. > await\nYep, master has transpilation now :)\n. I'll document that on AutoMod and the known issues.\n. Sure, may as well. We control the markup for it, so don't have to worry about twitter changing it out from under us.\n. It does this already, there's just something broken with fetching that user's mod list.\n. fixed, didn't properly scope a nightmode selector in /r/resupdates\n. Cherry-picked into release/4.6.1: eeca4f99919bc2fc96994b281e9386e353dc7f12\n. Thanks for catching that, @kusotool!\n. Thanks for contributing these quality of life updates and being responsive to code review!\n. Shucks, needs rebase.\n. I chose a bright contrasting color to make it colorblind friendly by contrasting with the blue button. Yellow or orange will probably work.\n. Orange looks good to me with normal vision and my three colorblind filters. (Nightmode uses the same colors.)\nunsaved:\n\nsaved:\n\nwith deuteranopia (common) filter applied:\n\n. yellow also works pretty well, and it's more appealing than orange imo.\n\n\n. Merged to release/4.6.1\nI'll comment again on this PR when it's released.\n. v4.6.1 rolling out now!\n. @matheod Is this fix ready to ship, despite the subreddit search?\n. :warning: @andytuba Cherrypick to 4.6.2 and close manually.\n. not a blocker -- can probably address via RESUpdates.css\n. ... this might be fixed?\n. Huh, I didn't think the specificity on this changed with 4.6.0.\n. Should we experiment with removing the !important on the .comment .comment rules? I could add them back in via RESUpdates.css if a lot of complaints come in.\n. The change in behavior is more a bug / oversight on my part than a deliberate change, so we could cover that up by calling it legacy or just roll it into the default behavior.\n. That's the second time somebody has been confused by the \"concern\" label. Gonna change them to \"Regarding\".\n. Merged into release/4.6.1.\nI'll comment on this PR when it's released.\n. v4.6.1 rolling out now!\n. TODO @andytuba: add to r/resupdates\n. Since this sort of thing comes up fairly often, maybe this could pivot to from \"Modify Links\" to \"Suggested Pairings\": when user clicks a link matching a mobile URL, show a sticky notification recommending a better experience if they install such-and-such extension.\n. @kusotool Thanks for raising this issue. I tweaked singleClick to pass the strings directly to the click handler which should sidestep the need to decodeURI.\n. \n. @larsjohnsen This PR is relevant to https://github.com/larsjohnsen/Reddit-Enhancement-Suite/compare/master...seperate-gallery-image#diff-82e2f7271307db9562c723cdbc13ccfaR331\n. After all the recent churn, it's probably easier to reset to honestbleeps/master and copy-paste your changes onto showImages.\ngit remote add upstream https://github.com/honestbleeps/reddit-enhancement-suite.git\ngit fetch upstream\ngi reset --hard upstream/master\ngit push --force\nthen do your changes again\n. Oh, did you trash your copy of the repo and start again?  Next PR you do, create a new branch before starting any work: \n1. Get your master branch up to date: git checkout master && git pull\n2. Start a new branch: git checkout -b my-new-feature\n3. Commit changes on your new branch: git commit -m \"new feature woo\"\n4. Push new branch to your remote: git push origin my-new-feature\n5. Make your PR using my-new-feature branch (when you visit GitHub, there's usually a banner showing recently pushed branches with a green button for turning it into a PR)\n. Also, thanks for updating!\n. merged to 4.6.1\n. cf23381079d02c329b7622d492ac92b731f1b8d6\n. :+1: thanks for tidying that up!\n. @johnnybigoode  Go for it!. Thanks for adding that to the redesign, @ofekp! \nIf anyone still wants to implement this on old.reddit.com, it would be neat for you to extend #4898 with also append the gear link to the legacy frontend's sort menu.. Thanks for adding that to the redesign, @ofekp! \nIf anyone still wants to implement this on old.reddit.com, it would be neat for you to extend #4898 with also append the gear link to the legacy frontend's sort menu.. This will probably be good to go after rebasing.\n. @mc10 How about irc://irc.snoonet.org/enhancement?\n. Sounds like a nice turnkey solution :p\n. With 4.6.0 released, 4.6.1, or master?\nThanks for reminder to migrate that CSS.\n. Alternatively, just change the text to \"Submitting as:\"\n. How are you loading in the description? Maybe call i18n(\"theDescriptionValue\"). Oh goodie, my example link got fixed by Reddit.\nEmpty search results are a great example!. Closes #2458 \nThanks for digging into that!\n. TODO @andytuba: cherry-pick into release/4.6.1\n. Oversight, sorry :sob: I should have made a ticket targeting 4.6.1. Let's definitely get it into master soon, at least. \n. FYI ` is called \"backtick\", ~ is a tilde.\nWhen using RES's formatting buttons, try highlighting the text you want to format first.\n. relevant discussion i haven't read through yet: https://github.com/travis-ci/travis-ci/issues/3758\n. Since this is already a feature of reddit gold, it's inappropriate for RES.\nHowever, it would be useful to add \"when browsing saved page\" or \"when browsing saved page for /u/[optional]\"  as a criteron to filteReddit customFilters.\n. I think @larsjohnsen has handled this in filterline?. code looks like it's supposed to work though... \u00af_(\u30c4)_/\u00af\n. Oops. \n. Go for it!\nMake sure to run linting and functional tests, or at least check for a red X / green checkmark on your PR a few minutes after submitting it. . (it may help to run the automatic lint fix before pushing). :+1:  i've seen at least one other thread in the last 6mo where somebody didn't get goMode.\nLet's surface it on the shortcuts ? reference and in options\n. idea: \"{{moduleID}} option {{optionName}}\" --> link directly to #!settings/moduleID/optionName\n. \"remove subreddit frontpage\": how to unsubscribe, frontpage vs r/all, hint at filters?\nhttp://redd.it/485fda\n. That is neat as heck and imo it's not terrible to have duplicate \"back to top\" buttons\n. In the short term, I'm probably thinking clobber their CSS and keep what they have now. New icons based on reddit's style with badges would be neat.\nI suspect the bigger ones are just for retina.\n. > @githue\n\nit's probably a good opportunity to use high-res icons too, with background-size\n @erikdesjardins\nsounds good to me\n. > @githue\nI agree with erikdesjardins' idea with the specific icon when non expanded, and the broken plus sign when expanded\n@andytuba\n+1\n. Spritesheet looks great! I like the \"restart/loop\" icon for gifv.\n. Hmm, can we select just people who are seeing the new reddit expandos?  I think it would be better for both users and support to maintain a consistent experience with the expando update rollout.\n. @ZakariaRidouh I'm hoping to push them pretty soon.\n\nfyi v4.6.2 at the moment actually means \"hotfixed via external CSS and then add into whatever's the next release\".\n. There'll be a little more to come for 4.6.1 release, but yep, what mc10 said.\n. Yeah, @erikdesjardins skipped some and had to tweak a lot of them.  \nDo you mean basing 4.6.2 on the current state of master? I'd rather keep 4.6.2 pretty slim and cherry-pick with lots of manual oversight, or just jump to 4.7.0 released from master.\n. Closes #1821\n. I think you're right.\nI won't get to it until Saturday morning, so if you PR first :+1:\n. This is pretty neat and would be a great place to move the clippy text, also a visible  thumb to grab for resizing.\n. Potential optional add-on tool idea: https://www.reddit.com/r/Enhancement/comments/49ji61/feature_request_reverse_image_search_button/\n. >  reverse image search button ... icon?\n:mag: ? batch uniF094\nI don't think batch has a \"find image\" or \"find document\" icon. The buttons might be too small for something that detailed, though.\n. Would it be overkill to extend this to every module if enabled and on match url? Perhaps like module.bodyClass = true, and apply it after beforeLoad so that the module can have advanced logic to not activate the body class.\n. Looks like not yet, but https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/1adca0c5585505570706a589110db05038f38dfa/lib/core/utils.js#L30 would be a perfect place to add\nif (this.bodyClass) { \n    RESUtils.bodyClasses.add(`res-${this.moduleID}`); \n}\n. Pretty sure this is fixed.\n. re: #2664, #2497\n. Oh, that sounds satisfactory. My head is still in 4.6 land.\n. Wrong base.\n. @erikdesjardins and I both think the first is a better \"multiple users\" icon, and the second is more \"addressbook\".  The first one reads better at that small size, too.\n. What the heck is it supposed to be. seems like passing in an extra false works.\n. Closing as fixed in release/4.6.1, but 34a323b will need to be merged to master.\n. @rapkin There are significant differences between master and release/4.6.1. I'll give it a go with manually merging and ping you for review.\n. Looks like the imgur API doesn't provide edited metadata either.\n. This seems fixed for upcoming release.\n. I appreciate your contribution, @ZakariaRidouh!  This might be useful in the future, but I think it's not yet necessary to merge and release with this.  I expect someone on the dev team or in the community  will mention announcements about APIs moving to https-only in time to merge this.  (If you see something, please mention it!)  That might be a good opportunity to tweak some other permissions, too.\nFortunately, RES's media host modules are already pretty resilient to http vs https (if not, that's a good thing to patch individually) and siteModules typically use a consistent API endpoint.\n(That said, I do have a private extension we could test on.)\n. Yeah, it's worth giving it a small test. \n. @erikdesjardins found some very relevant documentation: https://developer.chrome.com/extensions/permission_warnings  (but I haven't read through it yet)\n. That sounds like a good compromise.  I added some classnames in for moderator to style with, too.\n. How about adding to RESupdates.css something like:\n.res form.res-sr-style-toggle { \n    display: block;\n    position: static !important;\n    /* anything else */\n}\n. Problem: some site modules hijack each other's requests (eg imgur -> gfycat), but it's hard-coded.\nSimilar problem: hotfixing site modules\nPotential solution: pipe architecture for siteModules a la gulp file mangling, and importing[+merging] json-encoded siteModule definitions from /r/resupdates/wiki/ or cdn.redditenhancementsuite.com\nImp ideas: a siteModule can register handleInfo or renderExpando for {domain/type} and run before the domain/type's main one\nalso break out the expando renderers into their own little modules\n. Generic NoEmbed expando which can be hotfixed with domain names\nWhen those are pulled from /r/resupdates/wiki or  cdn.res.com, should they be stored as data (easier), or merged into user-facing settings (more difficult but more flexible)?  \nofc, user option for datasources, prefilled with RES hotfix url.\n. Neato!  I was thinking of attaching them to the tabs, or somewhere in the title for the tab contents. What ideas do you have?\n. Sounds like you've got the gist of it, @dhensche .\n. For some cases, it's necessary to send the network request for metadata which affects the button, such as button media type (static image, gifv/gfy/giphy, album, video with sound) or number of images in an album (shown in title top).\nFor expandos like that, maybe show a generic expando button with a subtle throbber while loading metadata?\n. I'm also in favor of deferring XHR requests to \"as late as possible / only as early as necessary\", especially for capped usage like Google's YouTube API or to avoid stressing smaller hosts. IIRC @honestbleeps wanted to build that into BetterZoom as well.\nIt could include a concession to the user in the form of an option like preloadMetadata (just before preloadAlbum) which follows the current behavior of \"API all the things\".\n. Sweet! Now which site modules need preload?  Imgur for sure.  I think giphy supports albums.  \nI just remembered the YouTube video length api call is part of betteReddit, not showImages, but that kinda makes more sense because it applies to mostly reddit/embedly-supplied expandos.\n. :+1:  I hope to bring these back .. eventually .. but hey, that's what git log -S is for.\n. Yeah, no need to expose what is now an internal implementation detail.\n. Baby steps idea:\n\nCreate React components for abstract containers starting with OptionList and OptionContainer, and move all the gnarly HTML generation inside that assigned via dangerouslySetInnerHTML. I'd vote for merge now and shake the bugs out.\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/orangered.js#L153\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/vendor/favico.js\nhttp://lab.ejci.net/favico.js/\nhttps://github.com/ejci/favico.js\n. We might should upgrade the favico library to 0.3.10. Current copy is 0.3.5.\n. @BenMcGarry reports pageAction button appears and works in Windows 10 build 14316.\n. the version number looks fixed but i still see the stylesheet appearing.\n. https://www.reddit.com/r/RESissues/comments/4dj0a7/bug_account_switcher_drop_down_not_working_on_edge/\n. Ben reports unchanged in Win10 14316\n. Ben reports unchanged in Win10 14316\n. Abstracting \"URL.createObjectURL / Blob\" with different strategies for Edge vs Everyone Else could be a good reason to justify browsersupport-edge.js.\n. https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7187326/\n. Is it worth attempting to block/unblock when toggling ignore, and then blocking when hiding a message from an ignored user in the inbox? \n. #1247\n. better idea from erik: fix the banner to show the paused messaging when appropriate.\nalso make it bigger text, put a big \"next/play\" icon in it. maybe put extra styling on the banner like a colored border\n. :+1:\n. seems legit\n. Maybe we'll optimize imageList construction later, but let's not let the perfect block the good.\n. Hmm, how much do we care about a little cruft on ._resExpandoReady?\n. Marking WIP because no https://liveleak. I sent a question via their contact form about https.\n. :+1: excellent bug report\n. I wonder if one of @larsjohnsen's PRs already addresses this.\n. :+1: implement this before #1573\n. hotfix++\n. thanks for fixing my fix :stuck_out_tongue_winking_eye:   quick skim looks good\n. I would recommend editing filteReddit.js:\n1. add a boolean option hideFilteredPosts\n2. add a line to where \"this post is filtered\" class is applied that checks if (module.options.hideFilteredPosts.value) { add post ID to a list to send to the hide-many-posts api endpoint} \n3. before notifying filtered send a request to the \"hide many posts\" api with that list\n. Can we wrap .expando { overrides } in a \"module is enabled\" body class? (probably need to add a module.bodyClass = true to showImages and possibly an extra hook to the body classes magic.)  If showImages is disabled, I'd like to avoid interfering with related default reddit styles.\n. Any changes to gulpfile.js needed for Node?\n. blame either https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/c2dc7f1494e0a5d18bb4078bf9963857d51586f1/lib/modules/floater.js#L37 or https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/c2dc7f1494e0a5d18bb4078bf9963857d51586f1/lib/modules/floater.js#L43\n. Does it work on heavily styled subreddits eg /r/Naut?  I guess it'll be generally okay since that container element is at the end of the DOM and it's unlikely there will be a high z-index on any earlier sibling elements\n. This will forever be a whackamole game until we fix the root cause: determining why floater.js doesn't hide that element initially or onscroll.\n. This is usually a problem with the MutationObserver used in RESUtils.watchForElements\n. :+1: This regex just gets gnarlier and gnarlier.\n. @kevinulrich FYI you are looking at master (future release) when what you're actually running is in the release/4.6.1 branch: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/release/4.6.1/lib/modules/subredditManager.js#L738\nfollowSubredditShortcut: function() {\n        if (BrowserDetect.isFirefox()) {\n            // stupid firefox... sigh...\n            location.href = location.protocol + '//' + location.hostname + modules['subredditManager'].clickedShortcut;\n        } else {\n            location.href = modules['subredditManager'].clickedShortcut;\n        }\n    },\n. Looks like this needs updated for infrastructural changes: remove the changes to the manifests and then rebase.\n. That file will be joined by an .ai copy, both of which probably will rarely change.  \u00af_(\u30c4)_/\u00af  I fondly remember the last time we removed files from history and it was a little rough, although not too terrible.\n. @thybag, do you think your \"unload expandos\" optimizations would address this?\n. > Is there a reason you're suggesting using odd version numbers here as beta releases instead of the SemVer convention of appending -beta.0, -beta.1, etc to the version number?\nYes, browsers only allow numbers and periods in version numbers.\n. Store listing / disclaimer / instructions text: https://docs.google.com/document/d/1uEyNRkB4Vg8NSgXt_tGDJ-Seth8rAsI3zC26QC7rk18/edit?usp=sharing\n. oh lol i glazed right over that. thanks.\n. How to automatically start reply? Maybe add ?reply_to=:commentid into url? \n. https://www.reddit.com/r/Enhancement/comments/5422vp/feature_request_comment_as_allowing_you_to/\n. Related: #1685\n. Difficulties of sending an ajax request: sending the right authentication. RES typically uses the current user's cookie. RES doesn't yet have OAuth authentication for reddit accounts.\n. and then update showKarma to getUserInfo in beforeLoad\n. actually, @erikdesjardins reports this might be more harmful wrt caching than useful\n. lgtm\n. I'd say it should affect any given <time>, with options like: colorTime (toggle all coloring), colorPostTime, colorCommentTime, colorWikiTime, ... are there any other common places where timestamps show?\nReddit exposes the exact datetime: <time title=\"Wed May 18 14:14:16 2016 UTC\" datetime=\"2016-05-18T14:14:16+00:00\" class=\"live-timestamp\">5 hours ago</time>\n. You got the gist of it, @AGSPhoenix.  One tab can send a multicast message to other tabs like const thingId = 't1_12345', vote = 'up'; voteEnhancements.updateVote(thing_id, vote) and when other tabs receive that message it invokes modules.voteEnhancements.updateVote('t1_12345, 'up'). After that, it's just hunting down the thing and updating the thing classes.  (Don't click the thing, though, that could get wonky!)\n. I'm leaning towards defaulting to titleAbove since that's how Imgur does it and, apparently, Tumblr.\n. I'd rather keep both since the attribution link goes directly to the particular site module settings while the control bar links to its particular setting.. and because users are myopic.\n. How about renaming this \"Filtering visited links\" to avoid conflating with reddit's \"hide post\" action?\n. Why do I get the feeling you fixed that a week ago and I to compile a change log.\n. while we're at it, only linkify /r/foxes -- not [xposted from r/foxes]\n. I've been meaning to combine them, but that's not a small project. It's a great idea to add a (?) hover tooltip to explain the difference.\nHow do you feel about hiding the RES checkbox when the reddit gold checkbox is present?\n. Maybe RES could lend some protection to the Reddit gold checkbox. I'm also envisioning keeping the browser toolbar button and integrating it with the Reddit gold checkbox.\n. yussssss\n. \ud83d\udc4d \ud83d\udcaf\n. These aren't cached by browser?\n. Hah yeah the batching isn't useful yet. If it ever gets implemented I can take advantage of it then.\n. It=batch api endpoint \n. I'd like to add a \"quickly disable all filters\" button somewhere. Do you think I should tack it onto the end of filterLine? \n. I like this idea. I'll base a branch off this and work on it this week.\nMy vote's on getting this caught up to date, sticking \"BETA\" in the description as a CYA, and getting it merged this week so we can start playing with it.\n. Neat!\n. I realized <div class=\"thing\"> has a lot of data- attributes that surface most of what I wanted to do with this module, so I'm putting it on hold for a while.\n. Neat! Thanks for putting these in.\nUnfortunately, most of these assets won't be going into the next release. We're switching out all the \ud83d\udc7d++ with the new UFO branding, and I'd like to replace the CSS buttons with a UFO+CSS.\nCan I ... png you when those ready?\n. Thanks! It'd be neat if you documented your process / settings, too, but that's gilding the lily.\n. Closed, dupe #1079\n. Closed, dupe #1079\n. Some lucky very old subreddits, I think.. \n. Try turning on autoColorUsername on a big comment thread. \nThe complaint was more in relation to 4.6.1 than 4.7, though \n. Great fix, my one big regret on settings navigation. Even better to remove the current url from makeurlhash. \n. @corylulu https://github.com/corylulu/Reddit-Enhancement-Suite/blob/dd213a5122dc18be66d23d44650fa3f225fd9b53/lib/modules/search.js#L314 -- the same thing erik referenced \n\n. Closes #2943\n. Last I checked, these shouldn't depend on goMode; if it's disabled, pressing the key nav button should go to that page. \n. Last I checked, these shouldn't depend on goMode; if it's disabled, pressing the key nav button should go to that page. \n. Eg turn off goMode and f > front page. \n. Eg turn off goMode and f > front page. \n. Eg turn off goMode and f > front page. \n. Oh good, delivering on my overpromising \ud83d\ude1c\n. Oh good, delivering on my overpromising \ud83d\ude1c\n. Oh good, delivering on my overpromising \ud83d\ude1c\n. Why are you middle clicking the vote button? \n. Why are you middle clicking the vote button? \n. Why are you middle clicking the vote button? \n. Why are you middle clicking the vote button? \n. Why are you middle clicking the vote button? \n. Why are you middle clicking the vote button? \n. Neat!  That's the same color as the alum distinguish symbol, right? (sorry, on my phone.) \n. Neat!  That's the same color as the alum distinguish symbol, right? (sorry, on my phone.) \n. Neat!  That's the same color as the alum distinguish symbol, right? (sorry, on my phone.) \n. Let's go ahead and merge this, and keep an eye on NER. We can revert before stable release and put it back on the docket if it seems to make more problems than it solves.\n. Let's go ahead and merge this, and keep an eye on NER. We can revert before stable release and put it back on the docket if it seems to make more problems than it solves.\n. Probably a good idea. These subreddits are probably still 4.5.4 nightmode compatible, but 4.6 brought significant changes and 4.7 won't really help. I was hoping to use RESupdates.css and evangelizing to bridge the gap but haven't put the time into it yet.\n. Probably a good idea. These subreddits are probably still 4.5.4 nightmode compatible, but 4.6 brought significant changes and 4.7 won't really help. I was hoping to use RESupdates.css and evangelizing to bridge the gap but haven't put the time into it yet.\n. Probably a good idea. These subreddits are probably still 4.5.4 nightmode compatible, but 4.6 brought significant changes and 4.7 won't really help. I was hoping to use RESupdates.css and evangelizing to bridge the gap but haven't put the time into it yet.\n. erik notes that this only applies to anonymous users\n. erik notes that this only applies to anonymous users\n. erik notes that this only applies to anonymous users\n. underlying cause: the post links to the reddit comments page in some circumstances, instead of to the direct image link.\n. underlying cause: the post links to the reddit comments page in some circumstances, instead of to the direct image link.\n. underlying cause: the post links to the reddit comments page in some circumstances, instead of to the direct image link.\n. proposal: when selecting the media host, if the link points to reddit.com, use the post's thing::getDomain instead -- and then i.redd.it host could \"if link is reddit.com, ask for post's .json view and use the media_preview url\"\n. proposal: when selecting the media host, if the link points to reddit.com, use the post's thing::getDomain instead -- and then i.redd.it host could \"if link is reddit.com, ask for post's .json view and use the media_preview url\"\n. proposal: when selecting the media host, if the link points to reddit.com, use the post's thing::getDomain instead -- and then i.redd.it host could \"if link is reddit.com, ask for post's .json view and use the media_preview url\"\n. Should I add this as an option here? https://www.reddit.com/r/Enhancement/comments/4q4n44/feature_request_direct_link_to_images_instead_of/\n. Should I add this as an option here? https://www.reddit.com/r/Enhancement/comments/4q4n44/feature_request_direct_link_to_images_instead_of/\n. Right, for the counter in the user bar. (there's another one supplied by the orangered module, it floats in the top right corner.)  I wouldn't think you'd need to worry about that level of logic as part of this issue, since I expect this feature  to simply hide everything in the user menu except the reveal / expand button itself. \nThanks for looking into this! \n. Right, for the counter in the user bar. (there's another one supplied by the orangered module, it floats in the top right corner.)  I wouldn't think you'd need to worry about that level of logic as part of this issue, since I expect this feature  to simply hide everything in the user menu except the reveal / expand button itself. \nThanks for looking into this! \n. and let's do it in resupdates.css too.\n. and let's do it in resupdates.css too.\n. In theory the upgrades to storage should resolve most instances of this bug, but I've also been considering only opening that tab if less than two weeks have passed since an r/resannouncements post. \n. In theory the upgrades to storage should resolve most instances of this bug, but I've also been considering only opening that tab if less than two weeks have passed since an r/resannouncements post. \n. :+1:\n. :+1:\n. \ud83d\udc7d \ud83d\ude80 \ud83d\udcaf \ud83d\udc4c \ud83d\udc4d \n. \ud83d\udc7d \ud83d\ude80 \ud83d\udcaf \ud83d\udc4c \ud83d\udc4d \n. @githue, do you still think we should remove the nightmode filter?\nStill looks okay:\n\n. @githue, do you still think we should remove the nightmode filter?\nStill looks okay:\n\n. Context for close: \n\nerikdesjardins: we'll use npm version and push directly to master with a tag to trigger the build\n. Context for close: \nerikdesjardins: we'll use npm version and push directly to master with a tag to trigger the build\n. This is already fixed in master branch and will be released in a few weeks.\n. This is already fixed in master branch and will be released in a few weeks.\n. P.S. /r/RESissues is a better place to report bugs.\n. P.S. /r/RESissues is a better place to report bugs.\n. This is already fixed in master and will be released in a few weeks.\n. This is already fixed in master and will be released in a few weeks.\n. \ud83c\udd92 \n. \ud83c\udd92 \n. Sorry about the typo! And glad to have you properly credited. \n. Sorry about the typo! And glad to have you properly credited. \n. Hiya! Thanks for submitting a bug fix :+1: it'll be great to test and merge this before pushing a new release for Safari.\n\nA few quick questions:\nHow do you feel about a more descriptive title like \"Fixed fatal bug crashing safari when  opening non reddit urls\"? \nWhat version of OSX and Safari are you using? \nDid you get the chance to test this in the current popular versions of Safari? \n. Hiya! Thanks for submitting a bug fix :+1: it'll be great to test and merge this before pushing a new release for Safari.\nA few quick questions:\nHow do you feel about a more descriptive title like \"Fixed fatal bug crashing safari when  opening non reddit urls\"? \nWhat version of OSX and Safari are you using? \nDid you get the chance to test this in the current popular versions of Safari? \n. We could.. Um..  Put in an option to go back to simple storage :sob:\n. We could.. Um..  Put in an option to go back to simple storage :sob:\n. These are excellent ideas. Another idea is to add an option to launch the settings console immediately on clicking the button.\nBy the way, the upcoming release does add the \"announcement!\" as a menu item. However, clicking the button still sends you to /r/RESAnnouncements.\nOne question: why reduce the z-index?\n. These are excellent ideas. Another idea is to add an option to launch the settings console immediately on clicking the button.\nBy the way, the upcoming release does add the \"announcement!\" as a menu item. However, clicking the button still sends you to /r/RESAnnouncements.\nOne question: why reduce the z-index?\n. Oh, thanks for cluing me in to the pentadactyl conflict. The z-index was set silly high to ensure it showed above subreddit-styled features. I'm sure there's an acceptable middle ground there. Do you have any specific suggestions, like the default z-index for pentadactyl's hint markers?\nIf you didn't find it already, the RES settings console supports adding in CSS rules. You could work around the z-index issue yourself instead of waiting for a release:\n.res div.RESHover.RESHoverDropdownList.RESDropdownList[style] {\n    z-index: 1000000000;\n}\n. Oh, thanks for cluing me in to the pentadactyl conflict. The z-index was set silly high to ensure it showed above subreddit-styled features. I'm sure there's an acceptable middle ground there. Do you have any specific suggestions, like the default z-index for pentadactyl's hint markers?\nIf you didn't find it already, the RES settings console supports adding in CSS rules. You could work around the z-index issue yourself instead of waiting for a release:\n.res div.RESHover.RESHoverDropdownList.RESDropdownList[style] {\n    z-index: 1000000000;\n}\n. The current process of one PR per project has been working pretty well for code review and Travis/AppVeyor checking javascript/css linting and a decent chunk of unit  tests.  Git-flow turned out to add a lot of extra work for erikdesjardins and me,so right now it feels better  for RES  to use master, project branches,  \"stable/release\" tags, akin to  https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2549#issuecomment-165568744  -- especially when releases start shipping more often. \nLgtm sounds like a good idea when res might get more devoted manual testing, but right now would probably be more annoying than helpful. Might be worth it for eyes on changes, though. \nAutomated selenium testing would be great, but certainly needs lots of setup and test-writing. Any more ideas to add to https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2587 ? \nA manual test suite does sound like a good middle ground. Any suggestions for frameworks/webapps to help organize test plans and results? \n. The current process of one PR per project has been working pretty well for code review and Travis/AppVeyor checking javascript/css linting and a decent chunk of unit  tests.  Git-flow turned out to add a lot of extra work for erikdesjardins and me,so right now it feels better  for RES  to use master, project branches,  \"stable/release\" tags, akin to  https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2549#issuecomment-165568744  -- especially when releases start shipping more often. \nLgtm sounds like a good idea when res might get more devoted manual testing, but right now would probably be more annoying than helpful. Might be worth it for eyes on changes, though. \nAutomated selenium testing would be great, but certainly needs lots of setup and test-writing. Any more ideas to add to https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2587 ? \nA manual test suite does sound like a good middle ground. Any suggestions for frameworks/webapps to help organize test plans and results? \n. It's definitely useful for people to pull from master and build for themselves, then report bugs you notice  via Github including the browser version and git commit hash. Bisecting is going above and beyond \ud83d\ude4c obvious disclaimer: there will be bugs, they night not get fixed immediately. \n. It's definitely useful for people to pull from master and build for themselves, then report bugs you notice  via Github including the browser version and git commit hash. Bisecting is going above and beyond \ud83d\ude4c obvious disclaimer: there will be bugs, they night not get fixed immediately. \n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/examples/host.js\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/examples/host.js\n. #3266 \n. This is not the best solution, and @larsjohnsen reports he has a better solution coming.\n. Should  that first commit go on a separate pr? \n. Let's add a wiki page for \"suggested extensions and configurations\" and reference what erik found.\n. This rate of beta releases is astounding. I'm glad that RES is finally in a state where it's trivial to push out a few bugfixes.\n. :+1: \nWhen this module gets a larger refactor, e.g. a template for the dropdown menu and/or a redesign, then populating the dropdown should skip the <ul> if there aren't any subreddits. This PR is a good patch for the current system and can easily be applied to RES v4.6.\n. \n. Looks like you've covered all the edge cases I can think of now. Thanks for collaborating on this little fixup!\nwaits patiently for travis green..\n. Looks like I should wrap up https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1975 \n. :+1: ostensibly new comment count shouldn't store visits unless the user specifically opts into that, but this is a step towards protecting that privacy. \nAnd if one person does speak up looking for recently viewed posts, they can be educated how to filter their browser history. \n. *shouldn't store visits while incognito \n. These selectors should be made more robust, but certainly lower priority since reddit pushed a fix.\n. Towards the end of the day it might break because RES runs out of API usage quota.  You can verify by examining the response from YouTube after requesting the video metadata.\n. This looks small enough and totally great enough that I think we could push it to v4.7.8.\n. :+1: on lib/page-objects/foo.js \nConstants folder is a neat idea, but I wonder if that would lead to a messy collection of different kinds of constants. Maybe structure it like utils/, so it could have constants/page-objects/{foo,bar,baz}.js?\n. Chrome and Firefox should be handled by Travis when the tag goes out, right @erikdesjardins?\nI think we can get the new website out for this. \n. Are you using RES v5.0.0 yet? https://www.reddit.com/domain/cdn.awwni.me and https://www.reddit.com/domain/redditbooru.com shows lots of working images for me.\n. \"expando\" came from reddit, actually.  Unsure the original history.\n. \"expando\" came from reddit, actually.  Unsure the original history.\n. maybe even \"closed button  -> openbutton+image\"\n. maybe even \"closed button  -> openbutton+image\"\n. several other people have also reported stale user info \n. Seems good to show res-standard notification at same time as permission, to address branding and number of clicks mentioned in  https://www.reddit.com/r/RESissues/comments/50z4tk/please_do_not_do_this_anymore_popup_box_with_no/\n. :+1: lock treatment\n. If you've disabled RES's Subreddit Manager and issue occurs in certain subreddits, then it's a problem with the subreddit stylesheet breaking vanilla reddit's subreddit dropddown and you should send modmail to those subreddits asking for a fix. Before modmailing, it's worth disabling RES entirely first and double-checking the problem still occurs.\n. Thanks for clarifying that it goes away when RES is disabled entirely. Sounds like there should be some subreddit manager CSS which is wrapped inside a subreddit manager bodyclass.\n. > needing two api calls when a #bla is detected\nI'd be worried about getting ratelimited way sooner. Maybe add that as an optional (default off) behavior?\n. @jdforrester Thanks for dropping in! To clarify, double API requests for section are okay too?\n. I wonder how many people have changed the default keybindings for link#.. Probably too few to worry about. \n. https://www.reddit.com/r/Enhancement/comments/51cfxy/z/d7azv8f\n. Sounds like you ran out of storage space. Try pruning your user tags (go to the res settings console, blue gear in the top right corner, and search for \"troubleshooter clear tags\". Alternatively, upgrade Firefox and RES to the latest versions. \n. Sounds like it worked?\nP.S. For this type of support question, we prefer folks to submit posts to /r/resissues and include diagnostic information like RES version, browser version, etc.\n. Sounds good, ring back if you need more help and we can re-open this ticket.\n. @erikdesjardins Assuming they're referring to cached data, could this ticket be resolved by the cache layer not saving to storage in incognito, and maybe keeping cache in the background page's memory instead?  Do you think there's other data besides the cache that needs special treatment?\n. > \"subreddits visited\" is probably the subreddit manager last visited time.\nAgreed, after experimenting I found keys in .resbackup like \"RESmodules.subredditManager.subredditsLastViewed.{username}\" and \"RESmodules.subredditManager.subredditsLastViewed.null\".\n. newCommentCount.counts also leaks.\n. While we're on the topic, should we make it res:nerpage= or something?\n. I disabled some i.redd.it image zoom in 5.0.1 because it was hitting the reddit API too hard. If you look in your reddit preferences and select \"Media Previews > Don't auto-expand media previews on comments pages\", I believe that'll do the trick.\n. I heard from someone else who is interested in contributing updated icons, but unsure if they can get it in by Tuesday for 5.0.2. I'll check in with them, but I think it'll be okay if @githue or somebody renders new RES icons in the new reddit style.\n. It would be nice to add a \"legacy icon\" option, too, for the people who really hate change -- and add a disclaimer that they probably won't get updated if broken.\n. wait, this did not work\n. wait, this does work, but testing in inbox uncovered a related issue.\n. https://www.reddit.com/r/RESissues/comments/52ajxn/bug_im_just_wondering_if_theres_a_way_to_get/ - interested in \"load more at bottom\"\n. https://www.reddit.com/r/Enhancement/comments/53t8te/is_there_a_way_i_can_infinite_scroll_comments/\n. Potential MVP implementation for \"customize your migration\": show a sticky notification which includes links into the settings console. (Pretty sure notifications show above settings console right now.)\n. Closes #3320\n. :+1:\n. Reopening targeting 5.1.0 with the hope we can automate it.\n. I wonder if the event handler is lost when the drop down edit container is added to the body? Anyway, this looks like a safe solution. \n. I think I prefer adding a download button to the media controls buttons:\n1. simpler video controls\n2. just keep adding buttons to that toolbar \ud83d\ude01 \n3. discoverability (context menu isn't necessarily discoverable, and I personally have trouble reading through all the options)\n4. granular control over download url. potential use case: show a smaller image to save bandwidth, but download full-size image\n. Go for it!\nThere should be a Thing::getCommentCount method, I think, which filteReddit customFilters uses. It might need to be added or improved for inbox. It should look at the number of comments listed in a post's \"comments\" button or on an inbox message's \"full comments\" button.\nYou could look at the context module for an example.\n. https://www.transifex.com/reddit-enhancement-suite/reddit-enhancement-suite/dashboard/\nhttp://docs.transifex.com/formats/  <-- keep file formats in mind when selecting a framework.\n. For touch users, maybe (optionally) show the tag on all users in a post /comment when that thing is selected? \n. #3427\n. idea: also pull items from res.com known issues / release notes\n. Other solutions: http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\nmaybe also a displayName option\nShould be used in:\n- \"Edit option\" view in settings console\n- \"Search for options\" view in settings console\n- \"Share to comment\" from settings search in settings console\n. Go for it, @lcrossan ! \ud83d\udc4d \n. Go for it, @lcrossan ! \ud83d\udc4d \n. @lacrossan https://github.com/honestbleeps/Reddit-Enhancement-Suite/find/master?q=Settings\nLemme find more specific pointers.. \n. @lacrossan https://github.com/honestbleeps/Reddit-Enhancement-Suite/find/master?q=Settings\nLemme find more specific pointers.. \n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/settingsConsole.js#L539  here's where the option label text is set\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/settingsNavigation.js#L40\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/settingsNavigation.js#L55\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/settingsNavigation.js#L86\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/search.js#L171\n. @lcrossan \n1. Fork the res repo on github (create your own copy on github) \n2. Push to your own fork. (you'll need to add your copy as a github remote) \n3. In github visit the repo home page and a little banner should appear prompting you to open a pull request.\n. http://hisham.hm/2016/01/01/how-to-make-a-pull-request-on-github-a-quick-tutorial/ @lcrossan this might be useful although it presumes you forked first. You can either clone your fork locally and copy your changes, or add your fork as a remote to your existing local clone and push to it (imo cleaner but you have to learn a little more about using remotes).  Would you like more guidance on this?\n. Looks good to me! We'll get this merged soon, thanks for the contribution.\n. Night mode! \n. @mikhoul Thanks for the creative suggestion, but cookies are inappropriate for RES: as a large, complex extension, RES can store several megabytes of data and lots of private data. Cookies are max 4 kb and are sent to reddit on every request.\nSince RES v5 last month, RES has mostly solved the problem of losing settings often.\n. If you're using Firefox, Mozilla requested disabling that functionality for security.\nIn the future, could you post these kinds of questions in /r/Enhancement? For bug reports, post to /r/RESissues.  Those subreddits are set up better for getting RES/reddit answers to you and other RES users quickly.\n. If you're using Firefox, Mozilla requested disabling that functionality for security.\nIn the future, could you post these kinds of questions in /r/Enhancement? For bug reports, post to /r/RESissues.  Those subreddits are set up better for getting RES/reddit answers to you and other RES users quickly.\n. Nah, but you could search for \"twitter image\" and get results like  https://www.reddit.com/r/Enhancement/comments/47cra1/i_wrote_a_greasemonkey_script_to_enable_twitter/\n. Nah, but you could search for \"twitter image\" and get results like  https://www.reddit.com/r/Enhancement/comments/47cra1/i_wrote_a_greasemonkey_script_to_enable_twitter/\n. @dhensche Thanks for offering - check out the work I've done on #3587 and see if you have any suggestions?  I also changed the specifications to \"show that menu less quickly/less often, and only disable if the user approves it.\"\n. Thanks for the hacktoberfest contribution!\nI think your solution is correct, although I haven't tested it yet. I suspect a change elsewhere in the code, e.g. SettingsNavigation.makeUrlHash, might have caused this bug. (I might have also shipped that bug and nobody pointed it out until now.)\n. Thanks for the hacktoberfest contribution!\n. Thanks for the hacktoberfest contribution!\n. Looks good to me, we'll get this merged soon!\n. Stretch goal: remember to stay collapsed, per subreddit\n. Stretch goal: remember to stay collapsed, per subreddit\n. Thanks for the hacktoberfest contribution! This looks like just the ticket. We'll get it tested and merged soon.\nIf anyone's feeling enterprising, it would be great to also see a PR which moves all this gnarly DOM-building into a mustache template.\n. @hillai Thanks for your concern! In the spirit of responsible disclosure, could you privately communicate specific instances of XSS vulnerabilities  by sending a reddit PM to /r/Enhancement, or email steve@openingbands.com or andytuba@andytuba.com?\nLet's keep this ticket open to investigate <noun>.\n. :+1: This is super neat! I'll review it in a few days, this week is unfortunately pretty busy.\n. Hi, thanks for contributing, but this needs to be in the form of a real pull request and it should test whether the user has disabled subreddit styles globally first. \n. Yeah, let's add a a module I'd and notification id to where the Konami notification is fired off. \n. Note to core contributors: I think a migration is overkill for this. \n. Nice turnaround \u263a\ufe0f this will certainly solve the problem.  It would be neat to see an iteration that does clean out items which aren't subscribed, but this definitely helps. \n.  Wait sorry, I think k you did exactly that and I need to read closer.. \n. > instead of\nor at least, weight them heavier (put them earlier in the searchable text).\n. I appreciate your concern for the health of the community, @mechacrab, but I'm trying to improve RES's options search, not cater to Google searches. A lot of r/Enhancement posts look like \"how do you turn off res/reddit feature X? I searched for Y but couldn't find anything.\" By adding Y to searchable keywords, I hope to reduce the number of those posts.\n. > There are 2 commits because on my first push the code formatting wasn't correct.\nFor RES development, you can run npm lint-fix to automatically fix and highlight formatting issues. You can also git commit --amend or git rebase to squash your fixups into one commit, which is fine if nobody else has looked at your branch yet and sometimes okay afterwards depending on the project.\n. resupdates.css is a special snowflake that lives in an external repo, so I'll TODO: @andytuba take care of that.\n. Instead of \"this should take care of\", if you phrase it \"Fixes #...\" or \"Closes #...\" then GitHub will automatically close the issue when your PR is merged.\n. I realize now that if the user has subreddit styles enabled in night mode, this might break a little ... but I think this solution is still generally better than that new problem. I'll make a follow up item to move this into \"styles that apply when subreddit stylesheet is disabled\".\n. > @andytuba we already have machinery for that (res-srstyle-enabled), why not do it now?\nOh right, thanks for the reminder. Yeah, let's push forward with https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3528#discussion_r84326078\n. Try logging out and testing, or make sure your reddit preference for \"media previews\" is still set to the default value of \"Expand based on subreddit\"\n. Probably! Might also need to check the .closest(...) call right above the filter too.\n. How about a slightly alternative approach: add a property to the option bodyClass: true and wrap the CSS rules in .res-commentTools-swapBigEditorLayout { ... } ?\n. Oh yeah, I forgot that code got moved into the commentPreview module, good catch.\nAlso, could you edit the title of this PR to describe what it actually does? then put \"Fixes #...\" into the body of the PR message.\n. Find the \u270f\ufe0f  icon in the top right corner of your comments. You may need to log into github.com desktop site.\n. I think it's technically a comment but since it's the first comment I think of it as the PR \"body\" :grin:\n. Whoops, the giphy-logo file got added into ef74bf6479e998d9cd768d364d92d296c20ec4dd.\n. Looking pretty good to me. Haven't tested yet, though. @erikdesjardins any final comments?\n. Thanks, this is a great contribution, and more accessibility is always better.\nI'm a bit concerned about adding !important in the CSS though. It looks like you're trying to fix styling issues created by switching from div and span to more accessible button tags. Is there a good compromise, like adding aria tags or using a instead of button?\n. Also the whitespace is a little wonky, maybe somebody else can help with the menial lint fixups right before merging.\nYou mentioned trouble setting up your dev environment. Did you get stuck at some particular step that we could help with?\n. Looks good to me, thanks! Anyone else wanna double-check we didn't miss some crucial bit of logic?  (Check out the collapsed conversation, too, where I talk about how it's good and fine to open settings links in the current tab by default.)\n. We could do a Levinshtein distance comparison and filter if 95% match. Levenshtein distance, also useful for Filtereddit title filters.\n. Yeah, but that's more work: updating several references and adding a migration.\n. :haircut_man: \n. Thanks! A few comments on implementation details, to make it more robust.\n. lgtm\n. Looking mostly good, thanks!  Mostly I'm concerned about calling getMultis before we actually need that data, and making sure to cache it.\n. Looks like I should either move the mapValueToObject function into some util instead of options.table, or build it deeper into the core.\n. Yes, notification on feature disabled sounds like a great idea. Although I initially thought it would be annoying, it seems like a much better idea now that the default behavior is throttling and the user has to opt into disabling.\n. @dansutera, @mverderese do you know what's up with futurism.co's API endpoint?\n. Whoops.\nLGTM.\n. The closest thing currently implemented is \"goMode\", where you type g i to go to the inbox. It would be pretty stellar to make keyboardNav track a sequence of keypresses like 5 or 5 j with a short customizable timeout, e.g. 800ms, to signal \"end of sequence\", then parse that sequence into commands like \"follow the 5th link\" or \"do the j action 5 times (move down five items)\". \n. Somebody give it a spin and I'd say merge in?\n. ah yeah, let's go back to strings, sorry for the waffling!\n. First thought is a MutationObserver watching for the HTML being replaced.\n. Yeah, subreddit info should maybe attach the data blob, or a lookup id, to the subreddit info popup.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/subredditInfo.js#L188. Yes, we can get direct downloads .. as soon as the person who can generate them is actually available to sign and push them.. Janky one-off workaround: \n\nvisit https://www.reddit.com/r/all#res:settings/filteReddit\nopen javascript console\n\npaste in\n$(\".filtered-details input.sr-name\").val($(\"#optionContainer-filteReddit-subreddits #tbody_subreddits input\").map(function(){\n    return $(this).val();\n}).get().join(\" \")).submit();. https://www.reddit.com/r/Enhancement/comments/5fsl52/feature_request_now_that_reddit_has_subreddit/. \ud83c\udf8a . :confetti: :ok_hand:. :+1:. also \"browsing a subreddit that i am [not] subscribed\" or \"in my multis\". I think I confirmed flair not working, haven't tested keyword.. \ud83d\udc4d . Whoops... Yes, this is a known issue for many aspects of RES. I'd like to sidestep this by adjusting user expectations: saving changes to options should show a notification that the page needs to be reloaded for changes to take affect.. This is useful QA, thanks!\n\n\n... But why leave in an empty row? \ud83d\ude02. How about a more conversational tone?  \n\nRES's Keyboard Navigation isn't sure what to do when you press the keyboard shortcut F. \nWhat should pressing F do?\n[option 1] \n[option 2]\n(You can change this later from the [keyboard navigation settings](#res:settings/keyboardNav).). Are you looking for notifications when RES 5.2 gets pushed to Apple gallery, or just signal-boosting that it still needs updating?. This duplicates the existing release todo issue: https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3677. @SageEx Would you be interested in trying a custom build of RES that adds better logging around multicast?. Dang. Try uninstalling RES entirely, then reinstalling and restoring your settings?. > didn't refresh the page after resetting to factory\n\nSounds likely, I should've remembered to advise restarting Firefox after.\nGlad you got it sorted!. > this PR also makes module and option keys way more visible by adding smaller, gray text next to each option name, similar to how it was always added next to title in search results.\n\ud83d\udc4d \ud83d\udc4d \ud83d\udc4d . My vote is on vanilla JS.. although I am partial to jQuery when handling large sets of elements.. @gardnm4 This issue can be closed as soon as that PR is merged.. > NOTE: I've already pull requested this (#3764) but due to some issues with my organization, I'm doing it again.\n:+1: on submitting from a named branch instead of master.. Re: getting a Thing object in the newCommentCount function\nYou can call const post = new Thing(document.querySelector('#siteTable .thing') to get a Thing for the original post inside of updateCommentCount.  While you're in there, could you also change thisCount to use post.getCommentsLink()?. .getCommentCount sounds great, I just overlooked it.. A new module sounds appropriate. Maybe combine it into a module with @KetillG, who indicated interest (via modmail) in integrating full-height comment toggle?. The other commits are there because you used master. You should make a new branch based on honestbleeps/master, then copy paste (or cherry pick) those two commits.. And then probably make a new PR from that branch. . Looks great! Thanks for quick implementation. . Great start on this, thanks!. Looks like you started your branch on top of your previous project work. You should probably...\ngit remote add upstream https://github.com/honestbleeps/Reddit-Enhancement-Suite.git\ngit fetch upstream\ngit checkout commentHider\ngit reset upstream/master\ngit cherry-pick 78dea26\ngit cherry-pick c2c9f3a\ngit push -f\nAnd when you're starting a new project,\ngit fetch upstream && git checkout upstream/master\ngit checkout -b myNewProject. Looking good, and I'll allow the mashup of projects. Not tested yet, though.. This was a reddit bug which has been fixed: https://www.reddit.com/r/RESissues/comments/5hczwd/bug_color_comment_score_no_longer_works_on_user/db7p2bt/. Here are my thoughts on how this should be implemented:\n\nMark userbarHider.options.userbarState as a body class. \nAdd css   to hide everything in the user bar except the button itself when body.res-userbarHider-userbarState- hidden \nClicking the user bar hide button only changes the option value and updates the body class, instead of touching the elements directly. \n\n. I thought somebody had already started a PR to fix this, but can't find anything submitted. Perhaps we just discussed it but didn't implement anything. . > add other functionality\nThat's exactly my plan with @KetillG :grin:\nhttps://github.com/KetillG/RedditMin. I'd agree with disabling the hover trigger by default, but it's probably better to try a little special handling for touchstart.. Neat! Live search is way better than having to actually click the button.. :+1: great usability fix. . Closing in favor of #3863 . Yep, let's migrate it away.. https://www.reddit.com/r/RESissues/comments/5j612x/notification_close_bug/. https://www.reddit.com/r/Enhancement/comments/5naw9r/feature_request_neat_subreddit_css_feature/ :grin:. @WilliamChiu Yes, there should be an i.redd.it host added to contain this logic.. If this option is enabled, then RES should ask the reddit API for the post metadata using getPostMetadata (see it in action) and pull out the preview images from what's returned, then use those URLs instead of i.redd.it.\nOf course, this won't work on i.redd.it images linked from comments--only on posts linking to i.redd.it.. This should be enabled by default, especially for .gif files -- PLUS RES should use the gifv player if the image has mp4 variants available.\n\u26a0\ufe0f NSFL https://www.reddit.com/r/WTF/comments/5qae5z/basketball_players_eye_gets_gouged_out/dcxmm9u/   RES is naively trying to load the OP, i.redd.it/....gif, as an <img>. Add a few boolean bodyClass options to the orangered module which apply CSS like\n.res-orangered-hideEmptyModmailButton {\n#modmail.nohavemail,\n#modmail.nohavemail + .separator {\n    display: none;\n}\n}\n\n. To clarify, you should put \"Fixes #1234\" in the PR description. (not the title. change the \"Addition for issue..\") and you should put in 3883, the issue number you originally linked, not 1234.. @kevinliu6102 \ud83d\udc4d  for the option you added to orangered.js.\nIt would also be good to add two more options / CSS rules which do the same thing for the main envelope icon a#mail and the new modmail icon a#new_modmail. @kevinliu6102 Yay! Just one more thing -- adding the titles/descriptions (e.g. orangeredHideEmptyModMailDesc) into en.json.\nIt would also be nice to order the options \"mail, modmail, newmodmail\".. It would be nice to preserve the simple legacy behavior of dependsOn as \"option whose value is truthy\". The settingsConsole framework would throw an error either way, if it's a plain string indirection or directly referenced within a function.  ... Would flow catch a misspelled direct reference to an option?\nAdding dependsOn to bodyClass sounds great.\nGo ahead with pushing to this branch.. :warning: TODO: settingsConsole should call onOptionChanged for all visible options (maybe at the same time as staging the option on change, instead of within the toggle element)  and expand onOptionChanged to also handle the function type, . I was primarily thinking of adding it to postCases like isNSFW. It may be worth adding it as a menu toggle-activated filter, like the nsfw filter.\n. example usage:\nnode ./autoi18n.js ../lib/modules/showImages.js ../locales/locales/en.json\n\n. TODO:\n\n[ ]  tidy up merges/diff\n[ ] add npm run script to invoke this\n[ ] add to readme\n[ ] add jsonic to package.json devDependencies. NSFW + spoiler expando button looks like plain NSFW right now. It shows both [NSFW] [SPOILER] on the flatlist.. This approach looks like it would break displaying search results.\n\nedit: oh github wasn't showing all the commits before. ref https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3899.  \u2713 / \u2715 \nor\nF164 / F165 icons (checkmark and X) o. nvm let's follow suit with https://mspoweruser.com/windows-10-build-10108-reveals-new-toggle-button-design/ and move the text label to the right of the toggle. > differering widths of labels\nMaybe we can do something with rendering both labels at once and toggling between them via visibility?. https://www.reddit.com/r/RESissues/comments/5p3t1g/bug_cant_backup_settings_help/dcooxxl/?context=3. I would like to see this implemented by marking various options and pieces of storage with a PRIVACY enum value like \"safe to share\", \"sensitive\", \"private\", \"local-only\".  This will also be useful for hypothetical projects like safely syncing data or sharing settings.. ~TODO: make sure focus put in title~. There isn't a hotkey for that, sorry. \nAdditionally, we prefer you to post these kinds of questions in /r/Enhancement, and to use GitHub for confirmed issues or feature requests.. I'd be in favor of replacing mustache templates with native templates. Presumably native template strings are faster than handlebars/mustache. Although mustache's template language provides some niceties, sometimes the syntax is more confusing than ${vanillaJavascript}.  \nI'm happy as long as we continue to build large chunks of HTML in HTML-ish markup, instead of pure JS.\nDo we need to take on extra responsibility for sanitizing input by not using Handlebars?  Will string.template and string.escapeHTML be sufficient?. Even faster than reddit itself! :rocket:. and add a new page type for new modmail. \ud83d\udc4d . Thanks for implementing this request! Looks fine to me, probably not worth adding in an option to show related videos -- people can click through for that.. Seems like the .visited filter is premature optimization, especially since it's batched. Let's take out that filter, thanks \ud83d\udd75\ufe0f @larsjohnsen, and switch it over to Thing while we're at it.. Could you make this kind of post to /r/RESissues in the future? We prefer restricting GitHub issues to todo tasks.\n\nDoes the order of filters matter for your user experience, or are you just noting the inconsistency between the browsers?. >> Could you make this kind of post to /r/RESissues in the future? We prefer restricting GitHub issues to todo tasks.\n\nSure (and sorry, I didn't know that)\n\nMaybe I should improve the issue template message to not just 'Is RES broken?' but 'Is some feature of RES not working for you?'\n\nI never disable the filters...\n\nSound like you should remove those filters from Filterline and instead add them to FilteReddit's flair filters.\nYou could also set up a \"Crackwatch chat\" Custom Toggle (put that text in both the name and menuItem text fields, so the toggle shows up in the RES gear menu in the top right) to control a Custom Filter for\nall of:\n    Subreddit: Crackwatch\n   any of:\n       post flair: Discussion\n       post flair: NFO\n  custom toggle: Crackwatch chat. Great idea, hopefully forestalls a lot of the r/enhancement posts!. People are actually using RES on mobile Firefox?\n\nThis has been discussed off and on. IMO if we're going to change this, it should be:\n\noption for clicking gear toggles menu (default), opens settings panel, or opens command line\noption for hovering gear opens menu (disabled by default)\n\n. Quick CSS audit:\n\n\ud83d\udd15 selectedEntry.scss contains a bare .entry { padding-right: 5px; }.\n\ud83d\udd15  showImage.scss conatains a bare img { image-orientation: from-image; }\n:no_bell: res.scss contains .md .usertext-body img { display: inherit; }. \ud83d\udc4d . This is even better than I envisioned!  Hooray for delivering on old requests.\n\nCould this also include the standard r/resissues diagnostics info: res/browser version, nightmode beta etc?. It should still be the same. IIRC the entire #siteTable element has its children replaced with a new post listing.. \"hide child comments\" is only added by RES. . I think you accidentally the whole supgif.com change.. Thanks for investigating, @magicwizard8472.\nLooks like the Imgur subreddit gallery API needs to get updated to check \"album or image\" since the subreddit gallery can include album posts.\nI see a similar problem on another album post, http://imgur.com/r/booklust/7z0Bv:\n website correctly displays  http://imgur.com/a/7z0Bv \n subreddit gallery API returns data for http://imgur.com/7z0Bv  (sfw). Neato! Looks like it even autocompletes mod xyz for modules named fooxyzbar?. Layering issue probably got fixed by a deploy on reddit. Now just need to clean up those z-indexes in this PR and it should be  good to go.. @XenoBen reports new notification icon not getting copied into floater, and new modmail isn't updating cross-tab.  also that dumb lint issue.. This will probably never happen in r2.. > Image x-posts do not show as intended, overwritten by RES expando.\nWe could address this by by adding an extra \"title\" to RES's expando from thing.querySelector('.expando').getAttribute('[data-cachedhtml]') -> parse as html -> parsed.querySelector('.crosspost-preview-header') -> clone into expando title. (last edited <timeago>) is confirmed Reddit bug.. .crosspost-preview { background: #ffffff } nightmode bug. Neat! You can probably reuse some existing strings, e.g. module titles or options, instead of adding new keys to strings to translate -- and using CSS to handle the formatting eg for lowercase menu items.. Good points. Now that I'm looking into the actual strings and seeing the difference between strings in different contexts, I agree with your choice to just moving the existing text into the localized strings.. Good points. Now that I'm looking into the actual strings and seeing the difference between strings in different contexts, I agree with your choice to just moving the existing text into the localized strings.. Looking pretty good, thank!\nIt would be a great improvement (but could await a future PR) to catch the \"needs login OTP\" error and then 1) turn on \"needs 2fa\" in settings and 2) ask for OTP and attempt login again. Looking pretty good, thank!\nIt would be a great improvement (but could await a future PR) to catch the \"needs login OTP\" error and then 1) turn on \"needs 2fa\" in settings and 2) ask for OTP and attempt login again. If anyone wants to implement this, I would recommend adding a new option to res' \"Save Comments\" module which watches for comment form submitted (might be rough bc form submission is handled via Reddit J's) or new comment created from op . Thanks!  It's the little things... Sounds great!  There's probably a few duplicate/related tickets that could be closed when you implement this.\nrelated: https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1685 (thanks, XenoBen). > I don't think automatically switching account is desirable ... maybe just notification?\nI imagine people would want it both ways. (I've heard more requests for automatically switching.)\nYou could change the option from toggle to enum: do nothing, show notification prompting switching account, switch page.  That change could go into a follow-up PR, especially since this option is disabled by default.. Could you go through and create the extra option for this instead of conflating 'friends' and 'me'?  It can be enabled by default.\nCould you also fix your PR title to describe the actual change, like \"Add user highlighting for me (current user)\". I went ahead and did \"1. Fix the title to \"hides domain link\". for you.. Looks okay, could use an ellipsis to indicate \"more here\" -- and an option to disable truncating.\nCould you put a PR, @niralpokal?\nThanks!. > I tried to use css but the max-width: 30ch; Did not seem to work well with anchor tags.\nCould you go into more detail?  This might simply be a specificity issue.  (i.e. change it from a.userTagLink { max-width: 30ch } to something like body.res a.userTagLink { ... }. Neato. 30ish is fine. I'd say go ahead with fixing up the margins. . Friends is different from follow. Friends is adding somebody to r/friends, follow is subscribing to their profile subreddit.. Does the sass-lint package need upgrading to learn about this new property? Or should we trust in the w3c write-up and mark it \"sass-lint ignore this\"?. Thanks for sharing this, by the way. This property looks like a great solution for scrollable overlays I'm working on in other projects.. You could maybe also keep the text populated when rendering the node, focus it, and then add in setting a selection of \"length of text to length of text\" to move the cursor.. Thanks! Neat little refactor.. Polish is nice, but Reddit is down so rarely these days it's probably not worth fixing that for this particular use case.. There might even be a GitHub ticket I opened which this could close..  I know I opened a different ticket for \"automatically backfill custom toggles for toggleName values in snippets and other options.\". @jasonmog, still interested? It'd be superb to have some help with adding RES support to the redesign.\nIMO it would be better right now to focus on the frontpage and subreddit listings in \"classic\" and \"compact\" view, and sometime soon to focus on the user profiles.  \n(I'll be back later to add some implementation ideas / pointers.). Looks like the \"Tips and Tricks\" modal should correctly flip left/right if there's insufficient room in the viewport.. @niralpokal Go for it! I'd be interested in using this feature.  . @niralpokal Go for it! I'd be interested in using this feature.  . Closing this due to inactivity and another request to handle this ticket.. I originally designed this with the intent that \"highlights are temporary and shown on this page, user tags are saved and shown sitewide\". Think I should change that to \"highlights are saved for this post\"?. \n@BenMcGarry Thanks for QA! How's this?  lazy fix but hopefully it does the trick. Thanks for this refactor! That'll make it even easier to add all the menu toggles to the redesign.. Sorry, still working on them! If anyone would like to help, I've already posted a WIP pull request. Sorry, still working on them! If anyone would like to help, I've already posted a WIP pull request. In between @larsjohnsen's very considerate upgrades to FilteReddit, particularly for \"handling data not available\" and me learning how to handle disjoint unions with exact types in Flow, this might actually be ready for testing.\nI added an escape hatch option to disable filtering in redesign. I was considering adding a migration to turn that on if the user is on a beta channel.. maybe I could do that by parsing current version?. @diswardeepak Would you be interested in contributing the simple fix?. ref: UserHighlight.highlightUser(userId). @iambullsaw is right on the mark, thanks for helping clarify.\nExample:\nhttps://www.reddit.com/r/NintendoSwitch/comments/7tuubc/hey_were_the_dev_team_behind_celeste_ask_us/?utm_source=reddit-android. @iambullsaw is right on the mark, thanks for helping clarify.\nExample:\nhttps://www.reddit.com/r/NintendoSwitch/comments/7tuubc/hey_were_the_dev_team_behind_celeste_ask_us/?utm_source=reddit-android. @jackneus, I imagine that inside the User Highlight module, in the \"go\" function, you could add some code to find username links in the self post, and then call the \"highlight user\" function. \nIt's also good to add an option to disable this behavior.. @jackneus, I imagine that inside the User Highlight module, in the \"go\" function, you could add some code to find username links in the self post, and then call the \"highlight user\" function. \nIt's also good to add an option to disable this behavior.. What @larsjohnsen  said.\nThe ?1 is a cachebuster provided by Imgur to mitigate browser caching. The direct link leads to the same file, but your browser is loading the cached pre-edited version. Other users will see the latest version.. What @larsjohnsen  said.\nThe ?1 is a cachebuster provided by Imgur to mitigate browser caching. The direct link leads to the same file, but your browser is loading the cached pre-edited version. Other users will see the latest version.. Are you using \"new\" Reddit? That's expected, since RES is verifying if you're logged in first, but I have several ideas for improving that:\n\nPull user ID from cookie, compare to cached data for current user\n\nGet Reddit to include current user data in the page. Are you using \"new\" Reddit? That's expected, since RES is verifying if you're logged in first, but I have several ideas for improving that:\n\n\nPull user ID from cookie, compare to cached data for current user\n\nGet Reddit to include current user data in the page. I haven't read the code but \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d on normalizing \"ignore user\" into a standard filter and paving the way for ease of redesign implementation.. I haven't read the code but \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d on normalizing \"ignore user\" into a standard filter and paving the way for ease of redesign implementation.. So exciting to see this!. So exciting to see this!. This issue is externally blocked: the Reddit architecture does not yet provide a hook for disabling subreddit style in the redesign. This is currently under development by Reddit.  When it is implemented, it may still be restricted to Reddit ~Gold~ Premium accounts.. This issue is externally blocked: the Reddit architecture does not yet provide a hook for disabling subreddit style in the redesign. This is currently under development by Reddit.  When it is implemented, it may still be restricted to Reddit ~Gold~ Premium accounts.. This is now unblocked! https://www.reddit.com/comments/alv213. Hiya, if you found RES for Hacktoberfest, it would be great if you found an issue to fix and made a PR for that!. Thanks for jumping in on this task! I was just hoping for old reddit, so it's neat to see contributions on the redesign!. Thanks for adding this in!  It's great to see a ticket closed out -- and on the new frontend!. Thanks for adding this in!  It's great to see a ticket closed out -- and on the new frontend!. This is neat, but might a little overkill since Chrome lets you create custom search engines. That said, the top/controversial/new suggestions are a nice value-add, as is adding a preconfigured tool for many uses' benefit. Since most of RES' target browsers support chrome.omnibox now, this would probably be a good candidate -- assuming that the feature would first check if it were enabled inside RES' user settings.\n\nA few recommendations:\n\nWhen creating issues/PRs, write a more substantial headline like \"Add omnibar suggestion for subreddits\".\nReplace http://reddit.com with https://www.reddit.com to avoid redirects.\nInvestigate a more robust technique for detecting \"is the active tab a 'new tab'?\"  This could easily fail on websites with that same title, or if the user has selected a different UI language.\nFor the manifest.json description, you don't need to mention \"An extension to...\" -- that's obvious from the context.. For a little more color, we're working with a new Mozilla reviewer who's less familiar with RES. The review team has communicated that the audit isn't investigating any particular security/privacy concerns. The new reviewer has requested a few items, which are being delivered first on the v5.12.x branches and then copied into master.  The newer releases have been disabled out of an abundance of caution for security.\n\nRequests:\n1. Improve documentation. (A lot of the \"documentation\" for reviewer has been locked up in other reviewer's heads or chat logs.)\n    1. Identify source of third-party \"vendor\" libraries. This saves review time by enabling previous reviews for those sources.\n    1. Improve build instructions to help reviewers independently verify the shipped packages matches the build from source.\n1. Upgrade HTML sanitizer. The existing sanitizer has been okay, but AMO recommends another package which is more obviously good: previously reviewed, more reviewers, more tests.\n1. Segregate functional code from documentation, e.g. the Flow library definitions.\n. For a little more color, we're working with a new Mozilla reviewer who's less familiar with RES. The review team has communicated that the audit isn't investigating any particular security/privacy concerns. The new reviewer has requested a few items, which are being delivered first on the v5.12.x branches and then copied into master.  The newer releases have been disabled out of an abundance of caution for security.\nRequests:\n1. Improve documentation. (A lot of the \"documentation\" for reviewer has been locked up in other reviewer's heads or chat logs.)\n    1. Identify source of third-party \"vendor\" libraries. This saves review time by enabling previous reviews for those sources.\n    1. Improve build instructions to help reviewers independently verify the shipped packages matches the build from source.\n1. Upgrade HTML sanitizer. The existing sanitizer has been okay, but AMO recommends another package which is more obviously good: previously reviewed, more reviewers, more tests.\n1. Segregate functional code from documentation, e.g. the Flow library definitions.\n. Re: the discrepancy between the redditenhancementsuite.com version and the AMO listed version: that's just ~~lazy devs~~ lack of automation for rolling back the website text, and we haven't bothered to fix it up manually in the vain hopes that I could get an approved version out the door before too long \ud83d\ude05 . Re: the discrepancy between the redditenhancementsuite.com version and the AMO listed version: that's just ~~lazy devs~~ lack of automation for rolling back the website text, and we haven't bothered to fix it up manually in the vain hopes that I could get an approved version out the door before too long \ud83d\ude05 . I just pushed v5.12.7, which will hopefully pass AMO review and not significantly break anything in the meanwhile.. TODO: upgrade HTMLPastuerizer to DOMPurifier . TODO: upgrade HTMLPastuerizer to DOMPurifier . > The video expando CSS is not available in redesign, so those expando buttons don't have a background image.\nWe should go ahead and add that CSS to RES, with selector like .res-app-d2x .expando-button.video { ... }. > The video expando CSS is not available in redesign, so those expando buttons don't have a background image.\nWe should go ahead and add that CSS to RES, with selector like .res-app-d2x .expando-button.video { ... }. What's the point of showing the prev/next buttons when you have infinite scroll?  This doesn't make sense to me, so I imagine I'm missing some context.\nIn what case do you prefer Never-Ending Reddit? In what case do you prefer having prev/next buttons?. What's the point of showing the prev/next buttons when you have infinite scroll?  This doesn't make sense to me, so I imagine I'm missing some context.\nIn what case do you prefer Never-Ending Reddit? In what case do you prefer having prev/next buttons?. Agreed on your assessment of next/prev. It seems appropriate to keep np on while you're still in the same listing (subreddit, multi, whatever). . Agreed on your assessment of next/prev. It seems appropriate to keep np on while you're still in the same listing (subreddit, multi, whatever). . @schilkyl Good eye! However, that's a feature of the Account Switcher, and depends on the user keeping that module enabled and adding their username to the Account Switcher's account list. \nThis ticket is for the Show Karma module. This module simply focuses on the current user. In addition to showing the comment karma after the link karma (and showing exact values instead of rounding down to the thousand), this module shows the karma number as a link to your posts or comments.. @glencarpeneter\nThe Show Karma code already calls the function to \"get current user's user data (including karma)\". So, the new work is taking that data and putting it in the right place on the page.\nI would encourage adding the karma to the \"floater\" (where the blue gear is) because the span you identified is subject to thrashing or design changes.\nBTW, Res also offers a bunch of createElement helpers for making elements.\n. @glencarpenter thanks for taking this on!\nThe Show Karma code already calls the function to \"get current user's user data (including karma)\". So, the new work is taking that data and putting it in the right place on the page.\nI would encourage adding the karma to the \"floater\" (where the blue gear is) because the span you identified is subject to thrashing or design changes.\nBTW, Res also offers a bunch of createElement helpers for making elements.\n. @schilkyl  @GlenCarpenter It might help to add a debugger; statement into the module.go function, open DevTools in Chrome, and refresh the page. Then you can step through go and into your new function to make sure it's running (or see where it breaks or doesn't run).  \nHave you tried stepping through, does showKarma module run as expected?. Hmm, there should be a redesign-compatible version of loggedInUser (which is async) ... maybe that function in particular didn't get updated because there's so many places that expect it to be sync.. Let's see, what does Account Manager use to detect \"username of logged-in user\"?. Yes, you should use watchForRedditEvents('post', (thing, postEventData) => { in the redesign.\nThe comment count should be included in postEventData.\nYou can add the \"(# new)\" into the thing span.. waves magic wand\nLook again!\nCould you also add numComments to Post and PostModTools types in /types/events?. @prakhar1912 Does this look interesting?. \nhttps://new.reddit.com/submit#res:settings/submitHelper/uncheckSendRepliesToInbox. It would be maybe interesting to integrate this with Reddit's dropdown / hamburger menu, especially JSAPI elements in there ... but I suspect the parts that aren't JSAPI'd will churn an annoying amount.. It would be maybe interesting to integrate this with Reddit's dropdown / hamburger menu, especially JSAPI elements in there ... but I suspect the parts that aren't JSAPI'd will churn an annoying amount.. Hi @codevenkat! Here's a high-level overview:\nSince this is your first RES project, before you dive into the code, follow the instructions in CONTRIBUTING.md to get a dev build of RES running in your browser.\nFor this project, you'll be working in the \"Vote Enhancements\" module. There's already functionality in there to add little dots of color on comments corresponding to the score. I'm hoping to see those dots added to posts and comments in new.reddit.com.\nRES has a helper function for \"do stuff when a post element is loaded in the redesign\": watchForEvent(\"post\", function(container, data) { / do stuff / }) . In that callback function, you can add new elements to the container. data contains metadata about the post or comment, including score. \nSmall gotcha: that callback can be called multiple times for the same post/comment. You can account for this by querying for an existing color dot inside the container and, if it exists, update it instead of adding a new dot.. Hi @codevenkat! Here's a high-level overview:\nSince this is your first RES project, before you dive into the code, follow the instructions in CONTRIBUTING.md to get a dev build of RES running in your browser.\nFor this project, you'll be working in the \"Vote Enhancements\" module. There's already functionality in there to add little dots of color on comments corresponding to the score. I'm hoping to see those dots added to posts and comments in new.reddit.com.\nRES has a helper function for \"do stuff when a post element is loaded in the redesign\": watchForEvent(\"post\", function(container, data) { / do stuff / }) . In that callback function, you can add new elements to the container. data contains metadata about the post or comment, including score. \nSmall gotcha: that callback can be called multiple times for the same post/comment. You can account for this by querying for an existing color dot inside the container and, if it exists, update it instead of adding a new dot.. Hi @codevenkat! Here's a high-level overview:\nSince this is your first RES project, before you dive into the code, follow the instructions in CONTRIBUTING.md to get a dev build of RES running in your browser.\nFor this project, you'll be working in the \"Single-Click Opener\" module. There's already functionality in there to add a [l+c] or [l=c] button to the button list under posts on listing pages. I'm hoping to see that button added to posts in the redesign (new.reddit.com) as well.\nRES has a helper function for \"do stuff when a post element is loaded in the redesign\": watchForEvent(\"post\", function(container, data) { /* do stuff */ }) . In that callback function, you can add new elements to the container and wire up click handlers to them.\nIt would be nice if this only applied to posts in listings (e.g. frontpage) but not lightbox, but I'm not sure if that's easy to detect yet.. Hi @codevenkat! Here's a high-level overview:\nSince this is your first RES project, before you dive into the code, follow the instructions in CONTRIBUTING.md to get a dev build of RES running in your browser.\nFor this project, you'll be working in the \"Single-Click Opener\" module. There's already functionality in there to add a [l+c] or [l=c] button to the button list under posts on listing pages. I'm hoping to see that button added to posts in the redesign (new.reddit.com) as well.\nRES has a helper function for \"do stuff when a post element is loaded in the redesign\": watchForEvent(\"post\", function(container, data) { /* do stuff */ }) . In that callback function, you can add new elements to the container and wire up click handlers to them.\nIt would be nice if this only applied to posts in listings (e.g. frontpage) but not lightbox, but I'm not sure if that's easy to detect yet.. Comment sections aren't always disabled on promoted posts.  Let's see, does the event data include a permalink (comments page) URL? \nMy initial thought (which may not be my best thought) is to add a [l] or [l+c] to promoted posts, too.. This will be useful for a variety of workflows:\n\nrefreshing UI elements or data that was set up on pageload\nmulticasting updates to other tabs\n\nshowing usage instructions\netc.. This will be useful for a variety of workflows:\n\n\nrefreshing UI elements or data that was set up on pageload\n\nmulticasting updates to other tabs\nshowing usage instructions\netc.. Haven't read the docs, but I assume husky will add a prepush git hook when it's installed by npm/yarn?. Haven't read the docs, but I assume husky will add a prepush git hook when it's installed by npm/yarn?. \ud83d\udc4d let's do a v5.12.8 for this too, I could take care of that tonight.. Cherry-picked into v5.12.8: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/9ecb8afd007bd3ccfb51b421d14731abda7a9c7f. Does this PR need any updates to accommodate https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4989 ? From my quick look, webRequests needs added to firefox's two manifest files. \n\nAlso looks like we need a little merge conflict resolution at this point, sorry we didn't merge it earlier! I could help with that later this month.. @Atrolantra Yes, exactly -- the useMobileGfycatoption should have a depends property that checks if gfycatMediaType.value === 'video'\n@lampij Could you add that to your snippet?. @lampij Neato! Looks almost there. One small critique:  the info = info | (await...) line should move just above the return { type: 'VIDEO', ... } line, because it's not needed for the iframe approach.. What opinions do folks have? I'm open to thoughts on implementation details so that we do right by both RES's users and the platforms which RES relies on.\nThe RES team has hesitated to implement analytics telemetry of its own for a few reasons:\n\nYes Means Yes: ask consent before collecting data, and provide enough information to earn a reasonably-informed yes.\nData stewardship: collecting and storing user data brings a lot of legal liability, such as GDPR.\ncost: APIs, databases, and analytics packages aren't free: you're either paying in money or data rights.\nsecurity: data in transit and data in storage are subject to theft or manipulation. It's a pain to deal with.\ncommunity blowback: many RES users are very protective of their privacy and security. See also: Yes Means Yes.\n\nWhen it comes to providing client analytics to other platforms, the RES team is not responsible for stewardship or cost. However, RES should request consent from users to collect data and provide notice to users when it is aware data is being collected.  Additionally, that data should be transmitted reasonably securely. The implementation details for requesting consent which RES uses should be satisfactory to most everybody, which means being a little obnoxious to be informative and do right by the platforms, but also being mindful of not irritating users with asking/notifying for consent too often.. Awesome, thanks for volunteering!\nFor starters, we just need to compile the list of links.\nThe button itself should appear in the res settings console in the Inline Image Viewer, grouped with the other options for the media host. Each media host site had at least a \"enable expandos for [given site]\".. Looks awesome, carry on!. I squashed in @larsjohnsen's improvements to v5.13.3.md on that force-push (rebase).. Great detective work!. Thanks for jumping on that :smile:. @prakhar1912, would you like to take on this bug?. Looks like we're almost there! It looks like the user tagger pop-up stays open when the lightbox changes. Does that automatically go away when the tag is removed, or does that need more work?. Oh, another PR sounds fine.. @spladug, I'll defer to @honestbleeps for that, since I don't have access to the subreddit which hosts RES's images. However, if it's useful, I could take care of spriting the mail icons together and making the CSS to save him the ten minutes.\nWhile we're on the topic, there are several other image URLs that should get updated: \n- modules['styleTweaks'].go - colorblind-friendly mail icon\n- modules['userTagger'].showAuthorInfo - /static/mailgray.png\n- vote sprite: http://thumbs.reddit.com/t5_2qlyl_0.png?v=8oarqkcswl255wrw3q1kyd74xrty50a7wr3z\n- #baconBit: http://thumbs.reddit.com/t5_2s10b_6.png\n- a handful in the RES Nightmode redditDark CSS\n- #RESshortcutside and #RESshortcutside.remove: /static/bg-button-add.png and  /static/bg-button-remove.png\n-  .RESDashboardToggle and  .RESDashboardToggle.remove   -- ditto\n- .RESFilterToggle and  .RESFilterToggle.remove  -- ditto\n- .RESMacroDropdownTitle, .RESMacroDropdownTitleOverlay - http://www.redditstatic.com/droparrowgray.gif\n. Does this 15000 get auto-updated with the real limit from the constants below?\n. whoops, yep, remnant from when i built this as a standalone extension\n. it would, but I wanted to default to true in case of undefined and !!undefined --> false.  i should add a note to that effect.\n. not sure.  IIRC a lot of the escapeHTML calls were added to satisfy the AMO reviewers, who are pretty firm on making sure everything is secure and escaped properly. a time-lapse view of this line might shed more light on that decision.\n. This name needs some pop, some pizzazz.  I'd say drop \"configure\" -- we're already in the settings console when we see this, \"configure\" doesn't add any useful meaning.  Idea - mainLinkAction or mainLinkRedirect.\n\"Main link\" is also a little ambiguous.  I assume you're talking about the header image (logo i n top left corner).  I can't think of a better name off the top of my head. reddit's name for it, header-img-a or \"header image\", isn't very compelling either.\n. wait a second, what does \"main link\" refer to?  The post title link?\n. Could you use data- attributes instead?   This is a newer style thing, there's still a bunch of places in the code it hasn't been updated.\n. there really ought to be a RESUtils.postMessageToBackground method or something like that.  Individual modules shouldn't be responsible for this sort of complexity.  \nIf there isn't one, would you want to write it?  I can do it if you'd rather not pick that up.\n. what about https?\n. prevent default shouldn't fire on right click.  don't wanna kill context menu.\n. Since this module doesn't add any styling (and I don't expect subreddit mods or users to add any), how about checking for something like the data attribute that's added later instead of adding/checking for a class? (unless somebody has a compelling argument otherwise, e.g. for performance)\n. use $(this).closest('.thing').find('a.title') instead .. we gotta go fix that all over, maybe we should finally add $.fn.thing = function(selector) { var thing = this.closest('.thing'); return selector ? thing.find(selector) : thing; }\n. How about, for performance, determining which action/link to use here, rather than baking it in up front?\n. It probably wouldn't be terrible to use $(\"#siteTable\").on('click', '.entry .title', thisModule.onClick) instead of adding a click handler to every post's title.  @honestbleeps @gamefreak opinion on performance?\n. In the same vein as \"configure doesn't add semantic value\", I think you could drop \"behavior\".\n. again same vein  \"Main link\" is maybe superfluous\n. ~~whoops, two module descriptions?~~ edit: whoops i'm a dum-dum\nThis is a good opportunity to describe what exactly the \"main link\" is ... or just rename it \"post title link\" or something else descriptive.\nYou can embed a little html, like <p>blah blah</p> into the description.\n. Since this module is targeting post listings, there should also be regexps including /me/m/ and /user/.../m/.  this needs to happen throughout RES, but that's outside the scope of this pull request.\nalternatively (and also out of scope) the \"watch for new Xs\" should fire on pageload so the modules don't have to be responsible for it  or there should be includes for \"postListings\" instead of simply URLs. \n. :+1:  I just noticed that this module is disabled initially, wondered if its default behavior is to change reddit's standard behavior, and scrolled down to find this!\n. cool, thanks for clarifying..\nfunny you chose that post to screencap\n. Entry title action or entry title link action sound good\n. aww, default false?  this is a totally awesome usability feature. \n. the transparent / rgba(166,166,166, 0.1) seems like it would come out great in nightmode, too\n. wow, how did i overlook that.  thanks\n. If the placeholder does not match any \"magic placeholders\" (i.e. it's a custom placeholder that the user expects to fill in via prompt), then getMagicPlaceholderValue() returns undefined\n. this chunk seems like it should be compressed into a regexp..\n. @skeeto heads up\n. @tomdwyer What's the use case / justification for this feature?  Recovering from getting linked to http://m.reddit.com/foobar?\n. Ctrl+F \"Creating your own module\" in lib/reddit_enhancement_suite.user.js\n. yeah, i would prefer siteModules and modules to keep their own CSS files\n. looks like this is the crux of the change and everything else is just housekeeping, yeah?\n. (specifically, buttons/link icons should get their own cursor:pointer but icons in general shouldn't)\n. since this file (and any other browser-specific file that has file listings) is generated from a template with a grunt task, I'd rather sacrifice indentation for ease of task-building.\n. same remark re: autogenerated\n. oh, duh.. hmm. gotta figure the best way to grunt replace that.\nedit: hmm should I copy package.json into lib/app/ on build and load it as a regular script?\n. Oh, sorry, you're right!  I didn't look at the path closely enough. Belay my \"same remark\".\n. I didn't look much into the context, but seems like we should var the variable properly instead of changing the element ID.\n. that'd be nice -- separation of concerns for PRs.   (overlook my hypocrisy at bundling up utils and features together into the same PR)\n. CyberShadow is there some weirdness involved with using \"this\"?  we could avoid it by switching to the addModule(\"id\", function (module, moduleID) { ... } structure -- I've already got a pattern to easy convert modules[\"id\"] = { ... } to addModule(\"id\", function(module, moduleID) { $.extends(module, { ... } }\n. How about using the existing RESUtils.matchRE instead of writing a new regexp?\n. :+1:\n. It would be a nice concession to sites using RES on reddit clones if all these regexes except allRegex started with https?:\\/\\/:[\\w\\.\\-\\:]+/   .. or some better \"generic protocol, domain, port\" pattern.\n. i never did like these names.  This could be a nice opportunity to rename them something like subredditNameRegexp and domainPageRegexp.  that doesn't have to happen right now, though.\n. this should probably get refactored up with .matchRE, or modify profileRegexp to match username.\nalso not strictly necessary to do right now.\n. How about refactoring the base url, https://raw.githubusercontent.com/honestbleeps/Reddit-Enhancement-Suite/master/img/demo/ into ... say, RESUtils.demoImgBaseUrl  and then just use the plain filename for module.demo and module.options[...].demo\nTwo motivations: DRY and more flexibility with changing storage location\n. agreed.  only reason i hadn't done it yet was so that I could stay focused on adding BrowserStrategy code.\n. addled brain =p  I'll change them all to dot notation because yay consistency.\n. IMO should just be #!settings -- the /accountSwitcher part should happen naturally, shouldn't be explicitly declared\n. How about refactoring the \"Auto add on/off options\" bit into showImages.loadSiteModuleEnabled: function(site) { ... } or something, down by the siteModuleEnabled: function? I like the idea of the getter and the setter-ish functions together,\n. would it be silly to add a name here?  just for developer reference?\n. yeah, we can bring this back later if ever a siteModule has onload setup to do.\nedit: well, i dunno, we could list it as an optional parameter now Just In Case -- after all, most of the siteModules are contributed by people who aren't familiar with RES.\n. looks good to me\n. i like this idea.  i could also offer one or two of my servers, maybe as http://demo.redditenhancementsuite.com/ or something\n. why not use RES's data directly? this is the dashboard,  RES creates all the DOM itself.\n. i suppose that's an okay reason.\nI still have some nitpicks with that for loop, but it's just style-- not mission-critical\n. or $.map($(\"#newCommentsTable tr:gt(0) td:first span[thread]), function(ele) { return ele.getAttribute('thread'); }).join(\",t3_\")\n. could break apart the chain.\nvar $threads = $(\"#newCommentsTable tr:gt(0) td:first span[thread]);\nvar ids = $.map($threads, function(ele) { return ele.getAttribute('thread'); });\nvar concatIds = ids.join(\",t3_\");\nvar url += concatIds\n. especially since \"reddit\" is spelled lowercase\n. @honestbleeps think it's worth using RESUtils.forEachChunked?\n. please add watchForElement calls as well, for when new comments are loaded\nedit: nevermind\n. please add watchForElement calls as well, for when new comments are loaded\n. How about category: 'Comments' ?\n. why bother checking?\n. well, this function is only called on inbox.  so max .. 100?  but it wouldn't hurt to chunk\n. (note for posterity)  plus it's just changing the href attribute, so not serious DOM manipulation / repaints\n. console.log\n. blame me if this breaks in the future :grin:\n. not sure how i feel about always highlighting the \"use subreddit style\" preference.  \nHow about ~~instead~~ additionally adding a little blurb after the label \"RES allows you to disable specific subreddit styles!  Click here to learn more\"\n. ah okay :+1:\n. should this be a class instead of inline style, or is it better inline?\n. :+1:  much better name\n. might be interesting to use Date.parse for this\n. yeah, no big deal -- it's functional as-is. if the user puts in bad data for on/off times then it doesn't break RES.\n. How about, instead:\n```\nif(modules['settingsNavigation'].options.advOptions.value) {\n    RESAdvOptions.checked = true;\n}\nmodules['settingsNavigation'].updateAdvOptionsState();\n``\n. how about.advanced-options-disabledfor readability?\n. how aboutshowAdvancedOptionsfor readability?\n. How aboutupdateAdvancedOptionsVisibilityorupdateAdvancedOptionsShown` for readability?\n. ~~don't log in production code plz~~\ncould you remove this logging please\n. I thought i would have more ' inside the description.\n. yeah, fixed in code but i didn't update screenshot\n. soooooo any suggestions?   @hermithome?\n. is there no RESUtils.savedPageRegexp?  it deserves one.\n. whoops. well, order doesn't realllllly matter.\n. also refactor document.getElementById(options[i]).value into RESConsole.getOptionValue\n. How about combining move and moveWithFunction into one function with an optional parameter?\nmove: function(oldModuleID, oldOptionName, newModuleID, newOptionName, transformValue) {\n    try {\n        var value = RESOptionsMigrateGetRawOptions(oldModuleID)[oldOptionName].value;\n        if (transformValue)\n             value = transformValue(value);\n       }\n       RESUtils.setOption(newModuleID, newOptionName, value);\n }\n. its\n. its\n. my one code style comment would be refactoring all the parseInt(score\u2026) into    var score = parseInt(scoreNode[i].innerText, 10); here  and in appplyCommentScoreColor\n. yeah, it needs to run between storage + options loaded and modules beforeLoad\n. what specifically looks bad?\n. Update to \"Current subreddit/multireddit\" ?  since your implementation works great for both\n. should be window.location\n. \"save state\" is a little jargony.  How about something like:\n\nChanges \"save\" buttons to \"unsave\" after you save a post/comment, or to \"save\" after you unsave it.\n\nalso spellcheck:\n\ndependng\n. what difference does the for loop make?\n. i apologize for this terrible structure\n. like @matheod said, i want the do-while body to run once but to be able to break early.  your confusion is exactly why i apologize. \n\nit's a little dodgy but so's the rest of the module.\n. Let's see, do we need to add some special handling for Opera12?  @CyberShadow wwwww\n. I vaguely recall some weirdness where you have to window.GlobalThing for Opera12 to work. My memory might be incorrect.\n. how about navigateTo instead?\n. haha i just noticed this today too, thanks\n. why expose the userbar as a public property on the module?\n. basically, why bother half-rewriting this as an old-school module\n. only a few times\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/f0d9e2e0e7cd4877b8a617fa4858b1b23c7c2e13/lib/modules/voteEnhancements.js#L94\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/69010b561805c265c297ba6565bbd8171c778b05/lib/modules/subredditManager.js#L1468\n. how about subredditStyleBrowserToolbarButton?\n. Hmm.. now that you've pointed out this issue, we should probably make it even more general/resilient.\nhow about replacing this regexp test entirely with something like body.classList.has('search-page')?\n. yeah, this is the right place to add notificationOpened.  sorry @honestbleeps!\n. yeah, this is just my \"oh shit oh shit something borked\" fallback check.. probably really only applies in development but it seemed worth keeping because we keep seeing other weird unexpected bugs once code gets out in the field\n. We can sympathize!  It'd be great if you could drop a comment here when you get back to this, so we get a notification.\n. should be 4.5.0.2 at this point\n. oh, well, we should probably move to semantic versioning anyway and just start incrementing 4.5.1, 4.5.2, 4.5.3, etc.  \n@honestbleeps I remember one concern about 4.5.0.0 vs 4.5.0 (and .1 and .2) is that browsers, browser stores, and reddit's version correctly identify that it's a later version.\n. good pick!\n. for security concerns, please don't use innerHTML.  Instead, use .safeHTML() or build up the elements in JS and set attributes / textcontent.  (for reference: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/31095d476748166a0680eba72b4c4722d222a465)\n. mozilla is getting very stringent with our use of .html() and innerHtml.  as i understand it, it's a streamlining measure -- if they don't have to go searching through RES code to figure out what exactly is going into .innerHTML, the faster they can approve new versions.\nsee also: @honestbleeps' recent commits for \"html audit\"\n. it's not about the risk right now, it's about ease of reading and potential future risk\n. We should probably expand this regexp to cover /r/sub/search, /r/sub1+sub2/search, /me/m/multi/search, /u/username/m/multi/search   .. did I miss any?\n. Sorry, I'll reiterate to make it clearer:\n\nif they don't have to go searching through RES code to figure out what exactly is going into .innerHTML, the faster they can approve new versions\n\nThanks for change.\n. \"link\" --> \"button\"\nlinks go places, buttons do things\n. ~~Don't forget the click handlers to actually do the magic of showing/hiding search options.~~\nedit: oh you're doing it with funky CSS.  well, check out https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1518/files#r16859064\n. Although clever, using :target ~ .... { display: block|none } seems brittle because it relies on the buttons being in a particular place in the DOM; also, I suspect it will break if you follow a link to another #anchor.\nI'd recommend just adding simple JavaScript click handlers on the buttons to toggle a CSS class on document.body.\n. why noconfig?\n. :confused: what is this block even supposed to do?  looks like functionality that was lost before the Great File Split of Jan '14\n. grammar: \"Show child comments only when hovering over parent comments\"\n. how about \"show children on hover\"\n. how about  revealChildrenOnHover\n. \"Add a button to hide child comments and reveal them when hovering over the parent comments.\"\n. how about \"reveal children comments\"\n. How about \"automaticallyRevealChildrenOnHover\"\n\"Always hide child comments, so they can be revealed on hover\"\n. future idea: separate options for different kinds of dropdowns (comments, top|controversial filter, etc)\n. this regexp should be split into top|controversial regex and 'comments'\n. there needs to be a migration to copy over sortCommentsTemporarily is-enabled and .options.always value\n. ```\nvar $input = $(element).closest('form').find('input')\nvar name = $input.attr('name');\nvar value = $input.attr('value');\n```\n. hmm still gotta figure out a good name here\n@andytuba\n. huh.. if only i could remember why i wrote this..\n. this == null makes me a tiny bit nervous\n. this is probably safe but deserves a quick double-check with some weird edge cases\n. might be safer to leave these as single-equals in case of undefineds in keyArray\n. maybe : !!descending   just in the spirit of the thing?\n. are we allowed (per AMO review) to alter RES's copy of HTMLPasteurizer or do we need to submit a change upstream, then pull from that?\n. i thought the point of using '...' was so that we didn't have to unescape \" in HTML :grin:\n. i think @honestbleeps already mentioned this by email, but RES should already have functionality for this task -- e.g. replacing the expando button for imgur\n. return false.  intriguing.\n. How about moving this below the keyboardShortcuts option?\nalso whitespace doesn't match, at least on github view\n. much prettier, thanks!\n. oops, thanks\n. i like this approach, of segregating the presets and the options themselves.  allows us more flexibility in future releases and avoids embedding behavior in options storage.\n. for clarity:\n\nenter 0 for unlimited\n. we should sanitize/validate this value:\n\nvar selfTextMaxHeight = parseInt(this.options.selfTextMaxHeight.value, 10);\nif (selfTextMaxHeight) { RESUtils.addCSS(' ... ' + selfTextMaxHeight + 'px; ...'); }\n. It would be nice, for l18n, if we just replaced the username in the text content.  I'll slap that together\n. corollary to https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1698/files#r19376570 -- we could preserve the original .textContent with $(...).data('originalTextContent') like in localDate.  ... maybe even refactor the mouseenter/mouseout text shebang into a jQuery plugin ..\n. whoops, thanks. 9aca270\n. > (typeof this.curMulti !== 'undefined' && this.curMulti !== null) ||\nDoesn't .currentMultireddit() already handle this? This seems like premature optimization.\n. These dependencies might could be managed in package.json: http://howtonode.org/managing-module-dependencies\n. is it appropriate to add clean as the first subtask for gulp.task('chrome' or 'safari', etc  ?\n. definitely refactor the '../../../var/www/html/res/dl' into buildDestination\nsame for the other zip tasks\n. :laughing: \n. Hmm, are there special files in Chrome/*.html that aren't in lib/core/*.html?\n. Yes, there is options.html.\n. Could you rename these tasks to be easier to read?  e.g. chrome-css, chrome-js, chrome-img, chrome-move\n. there should probably be gulp tasks to clean for each specific browser\n. this should probably be true by default\n. I can help clean this up into a regexp if you give me a few example URL -> earl\n. @erikdesjardins you can submit PRs against PRs :grin:\n. Can you use a case-insensitive comparison here? \n. What do you think about defaulting to options.displayText.value instead of an empty space?\n. The display text is also used as HTMLElement text content, not just CSS content -- specifically for multireddit sidebar's \"curated by /u/...\".  So, we'd have to either return a pair of values or do some other conversion for \\00A0 to &nbsp;\n. I figure, if someone wants to blank out their name for whatever reason, they can deliberately put a space in the displayText field.\n. I wonder if reddit localizes this message ever.. and if there's any reasonable sort of way to fetch it..\n. oh, if you could fix it and PR, that'd be nice\n. yeah, that'd be interesting if crowdin provided an API we could pull from.. I would definitely use that all over the place, like for buttons and \"curated by /u/x\" etc\n. could you add a  after the first sentence? makes search results more readable\n. we could probably limit to #sitetable or whatever instead of document for a little extra efficiency\n. the .linkflairlabel selector should also exclude the link flair editor.\n. could you add some CSS to target .linkflair (except inside the link flair editor) with { cursor: pointer; } for discoverability?  i suspect the browser won't change the cursor--even though the element is swapped out--until mousemove.\n. instead of replacing the span.linkflairlabel, how about e.target.textContent = ''; e.target.appendChild(newElem); instead?   i'm worried about subreddit CSS that selects on span.linkflairlabel\n. i before e except after  c :stuck_out_tongue_winking_eye: \n. I see two cookies getting cleared -- reddit_session and secure_session.  Do we not need to wait for confirmation on both?  seems a little risky (but not too risky) to assume the former will complete before the latter.\n. How about .cover-overlay instead?  #login-popup-v2 seems like a selector that might disappear in the future, while .cover-overlay will probably be used for a variety of other popups too.\n. How about assigning a random number to the element with $(mutation.target).data(\"mutation-id\")? I believe that's basically how jQuery tracks different elements.\n. what the heck was .eb-se anyway\n. :+1: for cleaning out this non-color crap\n. should this also be converted to border-top-color or are we deliberately adding border?\n. What do we think of /r/enhancement/wiki/dev/image_uploader for that path?\nVaguely related, we need to write up a howto on writing PRs for new showImages.siteModules -- that could  go under /r/enhancement/wiki/dev/media_expandos  ?\n. or we could use github wiki for these dev-related articles\n. oh yeah, media_uploader\n. I think it's necessary, and conservative as well.\nNecessary because (assuming my bash hat is on straight):\nfiles=(\"${libfiles[@]}\" \"${corefiles[@]}\" \"${modulefiles[@]}\" \"${vendorfiles[@]}\")\nwill include files in the modules directory but not recursively, so no files in modules/hosts.  \nConservative because it's not lib/modules/*/* :grin:\n. Makes me wonder if the grunt file needs the same treatment.\n. In the interest of easy coding, what do you think about consolidating all the host-specific data/functionality into that host's file? Then adding a new host only means adding one file.\ne.g.\nhosts/mediacrush.js\nmodules['upload'].hosts['mediacrush'] = {\n    title: 'mediacru.sh',\n    description: '<img width=\"16\" height=\"16\" src=\"' + MediaCrush.logo + '\" style=\"position: relative; top: 3px\" />',\n    etc.\n}\nand then load in metadata from the modules:\nmodules['upload'].loadDynamicOptions = function() {\n    for (var hostKey in modules['upload'].hosts) {\n         var host = modules['upload'].hosts[hostKey];\n        modules['upload'].preferredHost.values.push({\n            name: host.description,\n            value: hostKey\n    }\n}\nDownside: more magic re: order. Does that matter?  Is there some clever solution like adding an optional sort attribute to hosts modules?\n. How about a lib/modules/hosts/sort.json manifest-like thing?\n{\n    \"hosts\": [ \"firstHostKey\", \"firstHostKey\", \"firstHostKey\"\n}\nand if some host isn't explicitly declared, they just end up wherever at the end of the list and hopefully it's fairly consistent.\n. https://github.com/SirCmpwn/Reddit-Enhancement-Suite/pull/1\n. Would you mind removing this line and starting a section in README.md for ## Third-party Scripts just above ## Project structure?  \nMozilla reviewers do want a link to the source for vendor files, but they also prefer that our included copy exactly matches the source.\n. This change requires a migration for users who have changed the option value to hide.\n. Hmm. Changing the default hideDupes to remove instead of fade -- that changes the default user experience.  Which one is better UX?  \n(I don't think this discussion has been raised in a few years, so I think it's worth talking through.)\n. Specifically, https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/5cb860efdb4694fa4870afba25316000080c1c83/lib/core/migrate.js#L85\nadd in RESOptionsMigrate.migrators.generic.updateOption('neverEndingReddit', 'hideDupes', 'hide', 'remove');\n. Also, it deserves a migration too: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/5cb860efdb4694fa4870afba25316000080c1c83/lib/core/migrate.js#L85\nadd in RESOptionsMigrate.migrators.generic.updateOption('neverEndingReddit', 'hideDupes', 'fade', 'remove');\n. I did some hallway usability testing with a power user who reported they don't even look at the faded posts.  (They think remove is a great default, especially if there's a notification of some sort that they were filtered.)\n. Whoa there, analogy!  You're presupposing that the duplicate is literally hitler.  There are some benefits.\n1. Post rank increments normally, page includes the normal number of posts. (Some people feel it's important to get a full page of posts all at once.)\n2. Opportunity to see content you might have skimmed over.  (This isn't particularly compelling, merely something I've noticed in day-to-day use.)\n3. Legacy behavior\nremove's benefits -- memory saving and reducing visual clutter -- seem to outweight fade's. Just ~~for UX~~ to reduce duplicate posts in /r/Enhancement+RESIssues, it's worth RES educating users on where to change the settings if they care to.\nTo address item 1, I'd like some sort of feedback, such as listing \"# hidden duplicates\" in the filteReddit \"posts filtered\" notification, plus a link to the hideDupes option.\nTo address items 2 and 3,  I agree that we should leave the option for fade.  Is it worth trying to notify the user where to change the setting?\n. \"Link 2\" is kinda boring.  How about some pizzazz, like escapeHTML(val).replace(/^https?:\\/\\/, '')?  \nand then a little CSS to make it look all pretty-like:\n.RESDialogContents .authorDetail a { \n    max-width: 25em; \n    text-overflow: ellipsis; \n}\n. optionKey: 'hideDupes' too\n. i'm pretty much convinced remove is the best default behavior. \nIt'd probably be effective for @TheRook to post to /r/Enhancement with *[feature request] Remove duplicate posts from Never-Ending Reddit\", \"When I load another page of posts with Never-Ending Reddit, it's full of greyed-out 'RES has detected a duplicate post'.  Can you just remove them instead?\"  including illustrative before and after screenshots.  and then we can watch the upvotes roll in, and see if anyone dissents to validate if it's worth preserving legacy behavior.\n. One concern: ROI on adding Yet Another Library.  Do you have a sense for when the bloom filter is more performant with memory consumption and lookup time, compared to the plain dupeHash dictionary; and if that offsets the cost of loading the library?   (This is me being intellectually lazy, I assume it's more space/time efficient after about five pages of reddit posts. also the lookup time is probably minimal.)\nThe other concern with Yet Another Library is maintenance, but I imagine this library is robust and stable.\n. this is an excellent opportunity for .splice\n. oh, gosh dangit, I thought there was a native String.prototype.splice. nevermind.\n. :+1: because reduce/filter/map don't get enough love.\n. that .empty() i think has caused more problems than it's helped.  (i think I added it.)\n. how about\nfunction (type1, type2, types) {\n   var types = [].slice.call(arguments);\n   ...\n}\nand then you call\nRESUtils.isPageType('linklist', 'modqueue')\n(variadic functions are snazzy.)\n. lol, one of these days somebody will resurrect the bitcointip module..\n. yeah, that seems tidier.\n. ooh, RES gets its own API endpoint? fancypants.\n. Can you also replace http:// with https:// or just //?  The iframe won't load on https://www.reddit.com/ because mixed content.\n. 1. For good code organization, this block should live inside the radd.it siteModule. \n2. The radd.it site module should also include an option to disable the tab.\nI can take care of these tonight if you don't get to them first.\n. i'm planning on refactoring this whole mess (the switch-switch) thing soonish anyway..\n. there are also some edge cases like /r/todayilearned, where people will occasionally re-submit pages but link to different sections.\ni am also a little leery about trimming the query string. normalizing the protocol and boring subdomains seems safe though.\n. that's the idea -- just swapping out the underlying storage mechanism but leaving everything else intact\n. Is the return value not used where this function is called from?\nMaybe we should do something like\n```\nvar match;\nif (datas.some(findMatch)) {\n    return match;\n}\nfunction findMatch(data) {\n    ...\n    ...\n    if (blah blah) {\n         match = data.identity;\n         return true;\n   }\n}\n``\n. hooray, slowly we fix up this cluster of a console\n. woulda been a great opportunity for.map()but I'll assume you were on a roll :grin:\n. whoops.  it's a good thing there aren't any calls toRESUtils.inList(..., true);.  thanks for catching that.\n. not.some()?  half of one, six dozen of the other.  it's too bad there isn't a nativeArray.prototype.first(predicate). Should we switch this over to useaddModuleto avoidm_chpfloating around in global?\n. I copied this fix onto master, hopefully it merges nicely.\n. maybe we ought to movefunction revertVoteoutsidefunction onVoteand callsetTimeout(revertVote.bind(this, voteButton))instead?\n. there were a few other instances of the same pattern -results = []orprepop = []andfoo.forEach(... results.push(bar) ). I remember now --.commentingAsUserwas added to show \"my\" user tag so people could make it higher visibility.  the root of the problem is that the user info hover is tied up in the user tagger.\n. It looks like, if comments with replies get loaded, then.attachVoteHandlers()will affect the replies more than once -- becauseele.parentNode` contains both a single new comment and all its replies.\nLessee, how should we work around this?\n. This seems superfluous since the element doesn't even get added to the DOM until later.\n. This section ought to be refactored instead of tacking on copy-pasta.  Instead of calling RESUtils.getUserInfo here, we ought to call modules['accountSwitcher'].updateUserDetails() after the for loop.  Can you take care of that?\n. whoops. thanks jordan and cmpwn.\n. I think value(s) is all that needs to go into storage. Lemme check through to see if any RESStorage.getItem('RESoptions...' happen outside the usual \"load data from storage and merge into schema / default values\" routine.\n. I see a few instances of RESStorage.getItem('RESoptions. or .setItem('RESoptions.:\n- bitcointip.load and .save, but IIRC that was only used in the standalone build. :white_check_mark: \n- commentTools.migrateData: will dump unminified options directly into storage, but they'll be minified next time options are saved. it only affects commentTools and commentPreview options, so not a big concern.  :white_check_mark: however, this ought to be refactored into migrate.js at some point. :warning:\n- filteReddit.checkFilterFormat: stores unminified settings every pageload if the user has any subreddit filters. worth minifying. :exclamation:  also shouldn't re-set settings every pageload, only if anything changed! :warning: \n. Maybe there ought to be a RESStorage.setOptions(moduleID, [values]) ?\n. thanks for the security note\n. copy-pasta?\n. should be  \"profile\"\n. this should read \"on user profiles\" until support is added elsewhere\n. Yes, and that will include updating the description to reflect what the module can actually do.\n. this one might be worth leaving alone, since you're potentially clobbering other background properties.\n. i like the idea of a two-filter pass:\n$('a[href*=\"/r/\"]').filter(function() { return this.href.test(RESUtils.subredditRegex); })\n. or we could go the other direction, which is probably bad performance in a different way:\n$(document.body).on('mouseover', 'a[href*=\"/r/\"]', \n    function(e) { if (this.href.test(RESUtils.subredditRegex)) {\n      hover blah blah\n});\n. oh yeah, and this incidental commit i didn't bother to cherrypick out\n. did you want to delete this line, too?  dunno if it needs that extra specificity in some contexts\n. missing comma\n. maybe slap in an option for width, default 80em?\n. oh nvm, you put in a maxwidth.\n. whenever the options GUI get redesign, we should throw in a place to show the default value more obviously t han hovering over the title\n. tiny style note: why did you move this?\n. fair nuff.  I just asked because I like to keep git blame tidy, but a tidier codebase is more important.\n. nice catch\n. :+1: <button> so semantic\n. IIRC gulp copies the files to another folder, instead of symlinking.  so yes, you won't have issues with the symlinks =p\n. oopsie.\n. I reverted 3a8da02 on account of we maxed out the /r/enhancement stylesheet images and I'm not sure how to resolve it yet.\n. It's probably worth sanity checking that the link either exactly starts with /message/compose or matches ^https?://blah.reddit.com/message/compose\n. probably yeah. it would pair well with #945. also #963.   and definitely #703\ncould do something like how userbar collapser notifies you on next page load \"uh are you sure you wanted to do that?\"  but for this case, since it's a setting, it'll need a little more architecture or something to detect the change.. which I'd rather defer until I hear what kinds of questions/confusions people get into.\n. her majesty's regex\n. whoops.  yeah, this was for Sentence Case but then I figured out inline-block worked.\n. @ArrestedDevelopment, is there an advantage to attaching event handlers during the write cycle?  I'm wondering if I should emulate this or if you just got on a roll :p\n. oh yeah, I think we upgraded/replaced whatever third-party lib was using it. Thanks!\n. good idear\n. Yeah, I should trim that copypasta. It's not a bad idea anyway, but for other reasons like \"andytuba poorly refactored the first round of environment checks.\"\n. There's also a \"migrate settings from Greasemonkey\" bit still in browsersupport-firefox.js but dunno if it actually works..\n. oops, thanks\n. This should be removed while upgrading NER to handle the new post listing layout on the search page.\n. we should maybe have a general-use video player instead of copying these players over and over.\n. You can delete isEnabled, isMatchURL, and include\n. this should be loadDynamicOptions now that it exists\n. :+1: \n. Some day we'll corral all of these into RES.Namespace...\n. We should probably replace this with $(obj).val(value) -- I think jQ didn't handle setting select values back when this code was written.\n. thanks for fixing up that inconsistency!\n. Could you wrap this in an RESUtils.init.await.bodyReady().done(function() { ... }) ?  or I'll just take care of it tonight.\n. Since RESUtils.things now returns array of plain objects, I should just be able to call .forEach :+1: \n. .things returns an array of thing objects (the view wrapper for thing elements with accessors for various properties/elements); .$things returns a jquery set of elements which can be wrapped in RESUtils.thing.  .things() is a convenience wrapper for wrapping all the elements.\nDoes that make sense or should we pick some more obvious names?\n. and yeah, this really ought to return a normal array\n. I'd love to take this opportunity to remove that background-url on the grounds of removing an extra network hit ... unless it would already be cached from some other button.\n. It's only used in NER so I didn't have to rewrite .thing or a chunk of code that expects a regular jQuery element set.\n. Needs a capturing group to extract the video ID:\nvar hashRe = /^https?:\\/\\/(?:w{3}\\.)?(?:v\\.)?pornbot\\.net\\/([a-z0-9]{8,})$/i,\n. Should be groups[1] since I only added one capturing group in https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2272/files#r36432145\n. groups[1] -- https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2272/files#r36432238\n. additionally, just make this var href -- RES doesn't replace OP's URL anymore.\n. json.src = href per  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2272/files#r36432337\n. Chrome was throwing errors on https://v.pornbot.net/ because you're using the cloudfront certificate. Can you either get your own certificate or explicitly change location.protocol to http: ?\n. certificate issues here too  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2272/files#r36432568\n. @andytuba TODO: copy logo container here\n. notificationType rows get mapped to objects using the field names (this is one of the few table options that gets this treatment) so instances of .cooldown would need to get updated if this were changed.\nthat said, cooldown is how many milliseconds before this notification type is allowed to be shown again\n. good idea\n. not relevant because cooldown isn't actually a closeDelay\n. This can just be [ 'linklisting', 'comments' ] -- since it only needs to run on pages where you see posts.\n. .textContent for safety\n. We have an RESUtils.insertAfter utility method for this sort of thing, but no worries if you want to keep the same codebase between your script and RES's.\n. Unless we have a good reason to style xposts, I think it would be better to store \"this post has been processed already\" as a data attribute ... or not at all if that's possible.\n. Could you implement the = function(container) { var titles = (container || document.body).querySelectorAll(...) pattern? helps avoid re-scanning elements that have already been processed.\n. yeah, I figured it didn't matter all that much functionally when I merged, just code style.\n. typo -- descending\n. may as well  simply case 'username': // falls through and delete the rest of this case.\n. Oh, sorry, JSHint is expecting this:\njavascript\ncase 'username':\n    /* falls through */\ndefault:\n. bit odd to check for mouseEvent when you've just set it..\n. dupe\n. dupe in all manifests\n. This is already in Opera header\n. whitespace -- tabs vs spaces\n. Could you delete this?  As of RES v4.5 I'd like to not rewrite OP's link.\n. This might not actually work..\n. Sorry for the lack of comment. This event is for the benefit of other extensions, not RES internal modules.\n. It would be tidier to listen for RES's siteTable.. syntax is something like RESUtils.watch.siteTable.add(callback) -- I can grab it tonight if you don't find it first.\n. May as well just delete the commented-out lines unless you intend to add them back soonish.  We've got git history.\n. lol linter..\n. Dang it, I meant to take that part out before I merged. I'll fix it in the morning, thanks for calling it out. \n. Sorry about that. Thanks for the reminder.  341a3c9 \n. Gulp dest seemed to be throwing \"could not write, file exists\" errors.. Oh yeah, I suppose I should wait to add new files into old delete is complete. \n. Module.Category=\n. Hmm, users can disable the module that adds that class. Might should add a url regex in utils.js to check for this case. \n. It might be a good idea for currentSubreddit to return \"/f/all\".\n. RES is only for modern browsers: last few versions of Chrome, Firefox, OperaBlink, and last two or three versions of Safari. Safari 6 and Opera 12 get a token nod.\n. I usually test media hosts on their domain listing: https://www.reddit.com/domain/derpiboo.ru -- might get lucky looking for dupes.\n. This will break if the href already contains a hash. How about location.pathname + location.search + thisURL instead?\n. This module should really be renamed \"Live Snudown Preview\" since it applies to posts, wiki, and messages in addition to comments.\n. They don't do the redirect on the backend? That woulda been nice for API consumers..\n. Yuck, del accepts a callback instead of returning a promise.\n. Yeah, false by default is a good idea.  I could envision other special-case sorts appearing in the future, too.\n. Yeah, false by default is a good idea.  I could envision other special-case sorts appearing in the future, too.\n. @erikdesjardins Would it be easier to merge this first or #2541?\n. How about a simple data.toLowerCase() === myName?  Remember this code runs on every single thing.\n. oh nevermind regexp is great for this, allows people to use wildcards like  Account* covers Account1, Account2, Account3\n. Eh, seems safe enough without checking that option: reddit usernames can't contain special regexp characters anyway.\n. Re: domain names -- you mean for the custom filters by domain?  \nI should dig in a little deeper before I give a final say, too.\n. This logic seems the opposite of what you want: if the \"show button\" option is not turned on, add the button? I would have expected \"if show button is enabled, add the button\", i.e. remove !\n. I'd love to see this moved into templates.html while you're in here, too.\n. No ES6 in this branch :sob:\njavascript\ntemplate.html({\n    colors: {\n      bgColor: bgColor,\n      textColor: textColor,\n      color: color\n    }\n});\n(I haven't tested this either.)\n. There's a tidy new paradigm for these CSS only options: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/css/modules/_betteReddit.scss\nCould you update to that style? Want a quick walkthrough on the pattern?\n. body.querySelector(RESUtils.thing.prototype.containerSelector) ?\n. yay cleaning out cruft  (reddit changed it to sitetable_organic after whatever release added this in)\n. may need to do :last-of-type to support https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2671/files#r50610107\n. No, moving your changes into betteReddit.scss and wrapping them in .res-betteReddit-truncateLongLinks { ... }\n. Yeah, this'll be fine, it doesn't need to be barebones-fast.\n. https://www.reddit.com/r/RESissues/comments/41ooxs/bug_you_cant_use_the_movedownsibling_keyboard/ right?\n. if (!elem.classList.has('title'))\n. i might have set up an autocorrect on my laptop because I keep messing that up.\n. What's the intent of this check? Should autoplay only happen when there's one video in a comment?\n. Cool, thanks.\n. Public so migrate can use it.\n. Oh, yeah, I incorrectly thought about referencing assets inside the extension -- but it's nbd because injected link\n. alternatively\n``` javascript\n$(controls).on('span[data-action]', 'click', function(e) {\n    var $control = $(e.delegateTarget);\n    ...\n});\n``\n. could also do this in template easy enough and IMO a little prettier\n. How about putting` buttons into the control so you don't have to duplicate the icon setup css?\n. I wonder how long until somebody asks for this back.. but hey, we can give them a CSS snippet or a bodyclass or something.\n. :ballot_box_with_check: \n. :ballot_box_with_check: \n. :ballot_box_with_check: \n. This probably ought to be wrapped in a throttler function but \u00af_(\u30c4)_/\u00af\n. Let's host the spritesheet on r/RESUpdates/about/stylesheet to keep our dependencies consistent.\nFor merging this into master we can keep local-background-image('images/nightmode/arrows.png')\n. +async/await: nice and tidy!\n. Unrelated to this PR, but it would be neat if showImages detect call would detect.test ? detect.test(href) : detect.call ? mod.detect(elem.href, elem) : false and mediaHost.detect would be regex or a function.\n. Re my comment about preloading metadata, I'd vote for a function name more like fetchLinkMetadata.\n. yay noembed!\n. Darkmode too\n. thanks\n. You could probably use RESUtils.thing(entry).getAuthor() for this.  (might have a slightly different name than getAuthor)\n. woo docs\n. It would be nice to refactor $(v).closest('.thing).data('rank') to RESutils.thing::rank to abstract this for future re-use.\n. (potentially pre-optimizing and not your change but) vanilla JS equivalent of $(v).hasClass(type) would be v.classList.contains(type)\n. nice lispifying and precomputing the expensive task :+1:\n. > change the way imagelist is created and filled\nThat's a neat idea. How about something like .. in findAllImages, populate imageList with ImagePromise objects sorted by vertical position? This is easy to pull from allElements on pageload, but then how to splice in new ImagePromise when expandoing selftext or loading more comments? Maybe imageList could be a tree structure shadowing the DOM tree, then iterate by traversing the image tree depth-first pre-order?\n. > images = images.map(v => [v.getBoundingClientRect().top, v])\nThat seems best, especially since any lag in sorting the list will be greatly overshadowed by the strain of loading all those expandos :grin:\n. return false seems like a reasonable thing for the linter to ask for.\n. what, being explicit and performant? that's crazy talk.\n. We may still need to show title/description for gallery/album, but nav controls should be hidden.\n. module.options.displayImageCaptions.value ? imageLink.caption : null here maybe?\n. yussss finally recursiveing this - gifv's in albums hooray! https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1833\n. If this is the only change, maybe we could move BrowserDetect into a separate file and load it in background.html, then if browser is edge) { chrome alias; } in Chrome/background.js and add it to Edge's build via gulp.  or maybe  browser-background-support.js-\n. Same thing here -- make sure RESenvironment is loaded before browsersupport-chrome.js, then refactor this shim into var chrome = RESenvironment.navigatorApiObject(); .. this idea needs a little polish.\n. We should probably move all the domains from \"optional_permissions\" into \"permissions\" and deal with optional permissions for future releases only if necessary.\n. Now that we've already merged it, what about (\\w{5}|\\w{7}) instead of +2? \n. My favorite name for this control is thumb (but don't change it on my behalf, this is A-OK :grin: )\n. While we're in here, let's upgrade this to sanitize and validate:\nconst maxWidth = parseInt(module.options.maxWidth.value, 10);\nif (maxWidth > 0) image.style.maxWidth = `${maxWidth}px`;\nand same for maxHeight\n. bodyClass is one of the better pieces of magic this year :+1:\n. Thing($link) is probably overkill here, eh?\n. Why dupe https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2970/files#diff-b2aaa6b6b88ceb48617993ac868144c8R17 \n. one-liner this?\n. not commentID = currentCommentID ?\n. hallelujah and pass the handlebars, hooray for getting this template ou tof JS\n. Did you mean to change data in this pr? \n. Ah, I see your first commit now. Carry on. \n. it would be nice to make these <button> but would resetting that style be too much trouble?\n. How do you feel about putting this in the floating island with the \"back to top\" button instead of as a tab menu item? It's been a longstanding regret to keep the \"view images\" button in the tab bar, especially for power-users who end up with lots of other tabs.\n. I like the idea of a line specifically for filter toggles. Add-on feature: opting to show custom toggles on that line.\n. > one would then have to scroll before initiating the option.\nMaybe that \"visibleAfterScroll\" floating island should start below the header, rather than hidden, then pin to top when the header is out of view.\n. How about adding a || ''; fallback, in case selected entry is off or on a page that doesn't have anything to select or a subreddit context?\n. whomp whomp.. not gonna bother migrating anyone who's worked around it.\n. Maybe let's rename it.. \n. Or add a separate option called \"trackUserWeight\" and make all three of these depend on it. And then close my issue about. It. \n. Nah, those are for thumbnail. \n. Next iteration, I'd like to default to large and only load full when resizing up. This is partly a concession to user bandwidth/memory and partly to being a good citizen with consuming Imgur bandwidth. \n. I should probably reuse the $(item).closest('li') and check for $that.siblings('.viewSource')\n. Good point. How about /^\\/(?:r\\/([\\w\\.]+)\\/)?comments(?:\\/([a-z0-9]+))/i?\n. Ah, I meant, I should definitely remove the \\/ and not just the \\w+.  Tests will be fixed up too!\n. Dang, I should check that .data('url') is valid instead.\n. yyyyyyyep\n. For bonus aesthetics, nix the extraneous splitter line:\ncss\n& + .RESShortcutsEditButtons {\n    border-top-width: 0; \n}\n. Sorry to throw you another curveball, but will this end up with a double border (ul & dropdown container) if the dropdownEditButton option is turned off? Could mitigate it by adding bodyClass: true to the dropdownEditButton option config and wrapping this border-bottom property in .res-subredditManager-dropdownEditButton & { ... }\nI'll investigate later today and maybe add ^ if you don't get to it first :grin:\n. Maybe check if newChangelog exists first?\n. Rebased with fs.openReadStream().pipe(fs.openWriteStream())\n. This _.once is probably superfluous.\n. Okay, I'll squash it into go. On the off-chance it's slow and annoying, we can fix the UX with CSS in a hotfix or something.\n. i think you are right about the inline-none\n. the once is also a good idea. may as well give the floating buttons the same treatment\n. @erikdesjardins How's this read? Feels a little awkward, but it's really only called once.\n. Only in Firefox \ud83d\ude2d \n. huh. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3299/commits/411ab4b39c2c94a006045b3ce34967b692c06dcc\n. I'll sidestep that: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3299/commits/42d273a278c85e573537a82646ec1e5cad5b5f30\n. Neato! https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3299/commits/cacaebc0bccf66721825e2bae8d8ae02c4cc78f0\n. You should delete the version header, since npm version will add it.\n. nativeInboxCount.style.display = 'none';\n. :+1: to showing clippy inside media controls, or not at all. It's always seemed more obnoxious than useful as a tooltip, at least from the feedback I've heard.\n. There's a z-indexes.scss with lots of variables, can you use a variable from there? Maybe add one if needed. \n. s/(was|were)\\s*//\n. was-comment is a comment in your inbox\n. Deffo hacky. Hopefully this won't generate too many more bugs.\n. and potentially |comment-message too, since PMs and comment replies have different markup in the inbox.\n. Is it worth double-checking this is an article page before asking the wikipedia api? \n. How about ... \nadding at the top:\nimport * as Metadata from '../core/metadata';  \nuser-agent:Reddit-Enhancement-Suite/${Metadata.version} ( ${Metadata.updatedURL} )`\nor even better,\nadd to metadata.js:\nexport const homepageURL = packageInfo.homepage;\nand add the import here\nuser-agent, Reddit-Enhancement-Suite/${Metadata.version} ( ${Metadata.homepageURL} )\n. I'll save that for the bonus round ... some other night \ud83d\ude1c \n. How about new Thing(button).isSelfPost ()? \n. I kinda prefer keeping this consistent across platforms so as to not catch multi-platformers by surprise, even with Chrome's disclaimer.\n. Is this still used for clicking native reddit elements, like keyboard nav invoking upvote/downvote?\n. :+1:\n. Could just check ${BrowserDetect.browser} below instead of ${currentBrowser}, doesn't seem necessary to alias it for a single use..\n. Instead of BrowserDetect.browser, you could probably use process.env.BUILD_TARGET\n. How about simply passing in the variable? No need for formatting.\n. Oh, they use click instead of mousedown anyway.\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3442#discussion_r78666796  still relevant \ud83d\ude01 \n. I mean, if you're not adding any text or formatting to a variable, then simply use the variable: change \nif (postTitle.search(`${BrowserDetect.browser}`) {\nto \nif (postTitle.search(BrowserDetect.browser) {\n. afaik yes. Additionally, it should work if you set reddit preference \"media previews\" to \"expand preview based on subreddit settings\" (default IIRC) or \"automatically expand media previews\".\n. This would be a good place to fill in the downloadurl if it's  not sent anymore, e.g. info.download || info.sources[0].source like erik's suggestion somewhere else\n. Until imgur goes https-everywhere, this should stay http as well, or only switch to https if the user opts in.  It's only used in the links, while the mixed content errors result from the cdnURL and URLs returned from the API.\n. It would be nice to provide an option to allow http:// for uses who might get firewalled via https and don't care about mixed content warnings.\n. Same remark about http option on cdnURL\n. Same remark about http option on cdnURL\n. Same remark about http option on cdnURL\n. To avoid adding clutter, I think this should only show when the user is logged in, i.e. if (loggedInUser()). \nOn the other hand, many people with accounts browse while logged out, and they'll be prompted to log in after clicking this shortcut.  Bonus points: add an option like linkSavedLoggedOut? \nWhat do you think, and are you interested in implementing whichever change (if any)? (Or we could collaborate on writing code.)\n. Oh, perfect! Thanks for clueing me in, I forgot to expand the context.\nI won't worry about \"show link saved when logged out\" until somebody asks specifically for it.\n. Could you use textContent instead of inner HTML?  There might be extra markup injected in there now or in the future, seems like only the text is interesting for comments. \n. You can simply return linkflairlabel here, there's no point to using template strings unless you're adding more text. \n. Could you change this to the more specific linkflair, to disambiguate from user flair? \n. For bonus points, you could create a new Thing from the OP and use the Thing's method to get the link flair text. \n. IIRC reddit clones from the textarea that's set up at the top, in whatever state it's in, then empties the text itself -- i.e. you only modify the textarea once and then replies to comments are magically set up.\n. Would the title property work here?\n. subscriptions should be cleaned per the subscription length option, comment threads that aren't subscribed should be cleared per the clean comments option. More specifically it looks like Erik has the good ideas. \n. Actually, I'll take out promoted for now.\n. This is really the crux of the issue: this function  is supposed to indicate if the user is 90-100% done with the Konami code sequence and RES shouldn't follow through with keyboard navigation. However,  It looks like  this version of the Konami library doesn't expose that directly. How about for this method, checking if konami exists and if Konami.input mostly matches konami.pattern?\n. 1. Can you explain what is actually going on here and what the overall purpose is?\n2. Have you considered using .reduce?\n. hah, may as well.\n. Exclude -- spelling\n. I think trim is overkill in this case. \n. How about moving this above const postTitle, so  the function can quit as early as possible? \n. The href.includes(...) checks are already written for you, so you can import * as SettingsNavigation from './settingsNavigation'; at the top of this file (in alphabetical order please) and replace the href.includes... part with SettingsNavigation.isSettingsUrl(href).\n. I also would personally do if (!(is this a settings link)) return; to preserve the blame and save indentation, but that's just a matter of taste.\n. It would be nice to check if the link's pathname is different from the location (like https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2968#issuecomment-250956314 describes), for cases like linking to a particular post listings (nsfw, some subreddit/domain) with the filteReddit settngs already open.  However, we could save that for another time, since the vast majority of settings links should load in the current page.\n. I was thinking a link eg to https://www.reddit.com/domain/siteIWantToFilter.com#res:settings/filteReddit/domain, but don't worry about it -- I'd rather get this in and working well for the general case.\n. Since only the first item is used below, how about replacing .filter(...) with .find(...) for efficiency? \n. I feel like there are some redundancies here that could be consolidated.\n. I got @dhensche to sneak it in for me https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3537 :grin:\n. Yeah, I think I'll just stick with some minor duplication. Even if that logic changes a little, it's all tidily grouped together.\n. Oh, lol, yep.\n. Can you replace this with a third-party vendor function like $(str).text()? DIYing this will probably lead to obscure bugs.\n. Instead of a <br>, how about adding .moduleButton small { display: block } to the settings console CSS?\n. In order to avoid potential HTML parsing issues again, like https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3574/files#r86195442, how about loading the description as an element's innerHTML, then storing that element's textContent as firstText?\n. :+1: so considerate\n. What do you think of not showing the count if it's 0?\n. This probably shouldn't be called from go because it will spam the reddit API endpoint and eventually get cut off.\n. This should probably be cached for at least a day, and keyed by ${loggedInUser()}/multis or something.. @erikdesjardins remind me how to phrase this?\nedit: import DAY and loggedInUser if they're not already available\ncacheFor: DAY, \n url: \\`/api/multi/user/${loggedInUser()}`,\n. This should be tidied up.\n. _.differenceWith might be your friend here. no big deal though.\n. Could you wrap the ...value  in parseInt(..., 10)? \n. RES would need to monitor the two multi creation UI elements (frontpage sidebar and subscribe button popup)  and bust the cache manually. definitely worth doing but imo we could defer that to a separate PR. \n. \ud83d\udc4c \n. You could const myMultis = await getMultis(); down below. You'd need to mark this function async and I think RES ajax handles de duplicating requests so you can get rid of the early return too. \n. Sorry, it's already a sync, I really should do this from a desktop..\n. Yep, bad copypasta, thanks for \u261d\ufe0f \n. Nah, I want these usable from the outside, like RESTips calculating MAX_PENALTY / tips.length\n. That's probably a good idea, but this is intellectually stimulating!\n. Oh, I want export const\n. Could you revert this to the original key? If your change option keys, the user's option value needs to be migrated to the new key name. This feature enhancement doesn't seem big enough to validate changing the name. (also, all the options are \"configuration\"  already :wink:) \n. Same comment as changing the key name : this is already an option, mentioning it's \"configuration\" is superfluous. \n. Style nit: for numerical values, put the plain number. Some day we'll add a proper number type to options. \n. This is probably gilding the lily, but it would be neat to set this default value in module.loadDynamicOptions from the defaultMinimumComments option. \n@erikdesjardins, does that sound neat and useful for if  the global default values ever change , or obscure and we should just leave  comments to make sure they get updated in tandem? \n. Edit : oh, I see you're mimicking what's already there, nvm. \n. May as well put back this whitespace just to keep the blame tidy. \n. Yeah, it's a smallish module and I don't expect it to scope creep too much.\nAs an academic exercise, I would implement it like:\n``` javascript\nmodule.loadDynamicOptions = function() {\n    module.options.subredditDepthsWhateverItsCalled.fields[0].value = module.options.defaultDepth.value;\n    module.options.subredditDepthsWhateverItsCalled.fields[1].value = module.options.defaultMinimum.value;\n};\n``\n. How about sending back just the target node? Is there potential benefit in returning the whole mutation record? \n. Accidental comma?\n. I was hoping to punt on that nicety \ud83d\ude05 ... but since you've gone ahead and written half of it .... I had originally had two motivations behindfeatureID` abstraction:\n\nAffects related options, e.g. hoverDelay for pop-up menus\nCould be the whole module\nPotentially support for other types of options besides booleans.\n\nOn reconsidering, \n\nThere's typically a main option related options are always dependent on the primary option\nIt's easy to add a top-level option, or add export const MODULE_FEATUREID = '---' to support \"module as feature\"\nFor handling other types of options, we could extend the penalizedDelay / option.penalizedValue paradigm to other types, e.g. for enums options.penalizedValue = [ 'disabled', 'partly-enabled-value', 'mostly-enabled-value', 'fully-enabled' ] and map the penalty score onto that.\n\ntldr: s/featureID/optionKey/g . Maybe replace https://www.reddit.com with location.origin?. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3688/files#r90367709. IMO \"I can't do that, Dave, you're not logged in\" should only show if the user tries to forceSyncFilters, since many people browse logged-out all the time.. How about returning [ 'album', slu...tch[1]] or ['image,  href.url], and moving the handle... logic back inside the handleLink function? . How about\n\nShow a badge on the subscribe button counting how many multireddits include this subreddit. Could you change this to optionKey: \"notifyEditedPost\"? That will add a settings button linking directly to your new option, and allow users to manage it separately from the \"new comment\" notification. . It would be great to move this to Thing.js, and even greater to also move current comment count. . Could you also add i18n to rankOption's \"get option title\"?. I feel like the i18n should be applied inside the function to .onText and .offText, instead of only to the default value. Then we can put simply i18n keys into the onText and offText properties in the code and rely on them being magically translated as late as possible.. There's actually a handy regex you can use to extract username from userLink.href.pathname, sorry I didn't mention it in the original ticket.. Dang, e doesn't include the xhr object?. value needs updating to ... 'user'?. To avoid alarming users, asking for geolocation should also show a notification/modal explaining why it's needed -- similar workflow to asking for optional permissions for domains.\n\nMight need to be \"show after half a second of waiting for permission\" to avoid showing explanation if user has already granted permission.. To avoid alarming users, this should include a quick disclaimer that it requires geolocation.. It would probably improve UX to optimistically guess at a time (nightModeStart/nightModeEnd by default, or previously cached value) and afterwards fetch and cache a new value from getGeolocation / getSunriseSunset. . Does getCurrentPosition accept a \"user denied permission\" callback, so flow can return to the calling function and fail over to 'user' style?. Additionally, if geolocation is unavailable or denied permission, this function should fail over to nightModeStart and nightModeEnd options.. @erikdesjardins We don't need a migration for this, right?. Could you specifically target e.target.querySelector('.expand') instead of e.target.children[0]? Just in case the layout shifts around, plus it won't add a significant performance hit.. How about $(document.body).on('dblclick', '.tagline', ...) to support comments loaded dynamically? . Comment is superfluous now.. Not at all! I'm a fan of \"many atomic commits\", especially in a project like RES where we squash-merge your whole PR into one commit.. How about id with a fallback to name ?. May as well leave this where it was and preserve the blame a little?. You can also use the helper function CreateElement.icon('F159', 'span', 'SearchRES-result-copybutton', i18n('searchCopyResultForComment'));\nand in en.json add searchCopyResultForComment. Could you add a throttle around the event handler to avoid thrashing lower-performance computers?. Can this also test if the comment area is available? In case user is logged out or banned. (Probably should be a utility function, although dunno which section that should go in.)   . Can you i18n the title too? . Could you link to /user/${username}/ to avoid a redirect?. and swap .click() for .on('click', e => ...) just to clarify \"this is an event listener\"? . Does nightmode options include a colored links boolean body class option yet? Should probably be enabled by default. . Looks like a merge conflict resolution issue here, this probably shouldn't be inside the console open block. . This seems like it should move inside a \"new comments count\" block. . This should become a disabled boolean body class option, with a migration to enable it if found in a stylesheet module's option  body class value,  and filter out the row containing it. . there should be added . The bug stems from that this is e.target not e.currentTarget, so if the user moused off the [X] then this line incorrectly addresses the X instead of the container.. collapse. Is this commented-out block useful? Since RES already has the commentBoxes styleTweaks, it feels superfluous here.. That'll fail when it gets i18n'd.  How about some command name, or bullet points or something?. How about a formatPlaybackRate(value) { ... } function to help with consistency?. Can you add an option to orangered.js to activate this rule? You can model it on the hideModmail option.. oh duh i have to specify the function signature. Might also work to do eval(\"(\" + jsonTextClean + \")\"). .replace(/[\\n\\r]/g. Looks like all this should be appended to the json inside en.json instead of output into this file?. NSFW styling should override spoiler IMO. Or should we add a combo rule to show both stripes at once?. This could probably be &::after {. ... and in createElement, set onText and offText to those data attributes on .toggleThumb (using HTMLElement.setAttribute, not $.fn.data(). Idea for custom text override:\n```scss\n/ Custom toggle labels /\n&[data-enabled-text]::after {\n    content: '\\00a0' attr(data-enabled-text);\n}\n&.enabled[data-enabled-text]::after {\n    content: '\\00a0' attr(data-enabled-text);\n}\n```\n...\nIdea for i18n (translated text) override:\nIn settingsConsole.js or some core module that's never disabled:\njavascript\naddCSS(`\n    .toggleButton::after { content: '${i18n('toggleDisabledText')}'; }\n    .toggleButton.enabled::after { content: '${i18n('toggleEnabledText')}'; }\n`);. Probably not, bad habit \ud83d\ude01 . We really ought to refactor all the KeyboardNav \"move around in the comment tree\" into its own library instead of calling an options callback like that.. Whoops, I think that is copypasta that didn't get tested and tidied up before it got merged.  sectionMenu isn't a thing in RESTips... Yeah, it looks like it was appropriate to trash this since onClose will handle it, and sectionMenu should be replaced with dailyTip I guess..\n... or maybe we should strip out the penaltybox handling in this module.. For this purpose, it might be better to surface export function isPostVisited(thing: Thing): bool to handle the case where the user has visited the post but there aren't new comments since then.. Oh right, it's rendered so it can be cloned for replies to comments but hidden initially. . Should be module.options.openFrontpage.value. Oh, only Safari didn't support nice performance timings.. Yes, I'm attempting to put focus on the \"post in Reddit\" options by pushing the real issue template below the fold. Maybe I should put one line just above the fold with the old message \"If you really want to post a GitHub issue...\"?. Maybe we should have a module.utils.html(markup: string) that abstracts away $(markup)[0]? We could probably even skip jQuery (unless it adds security) with something like x = document.createDocumentFragment(); x.innerHTML = markup; return x. I'd opt for the numeral approach, for both the tooltip and the text displayed in the points box.. Pretty sure the vendor-prefixed versions are superfluous these days.. How about Math.floor(marginLeft) instead of abusing parseInt to truncate?. i18n. Default : d2x. added to pagetype instead. Could you call the \"toggle children on this thing\" method directly here?. I think you accidentally the removing z-indexes.. These shouldn't be inlined because some of the elements are used to find other buttons elements in getOrAddInboxCount.  It also makes it easier to copy-paste the object for destructuring later.. I explicitly listed them to control the ordering because I don't trust Object.keys() to be consistent cross-browser.. How about that good ol' !!(castedToBoolean). Yeah, I painted myself into a corner there \ud83d\ude2d . \nIs ... less bad?. How about \n```\n.tfa-login-modal {\n    .tfa-login-caption {\n        color: $color;\n     }\n}\n.enable-tfa-modal {\n    .enable-tfa-caption,\n    .modal-header-title,\n    .pref-otp-qr li {\n        color: $color;\n    }\n}\n```. Similar to https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4407/files#r137137617\n```\n.tfa-login-bottom-panel {\n    .tfa-login-having-trouble a {\n         color: $link-color;\n    }\n}\n.enable-tfa-bottom-panel {\n    .tfa-login-having-trouble,\n    .enable-tfa-learn-more,\n    .switch-barcode-and-code {\n       a { color: $link-color; }\n    }\n}\n. Let's also check for `originalUsers` (which will need to be added) a la `originalMyRandom`. Alternatively, this could be more structured:\n{\n    user: username,\n    passwd: password,\n    otp_sent: !!pin,\n    otp: pin,\n}\n``.i18n(\"Enter the 6 digit code from your authenticator app for u/%s\", username)`\n(except properly formatted for RES). Should probably be named otp. I was thinking this module could also include options for adding RES's various userinfo buttons to the new hovercard. We could leave it as-is or migrate to the option later, but I'm inclined to prepare for more options later.. DRY: Put this before module.beforeLoad:\nconst autoSwitched = window.location.search.indexOf('accountSwitcher=auto') === -1;\nthen here in function autoSwitcher use if (autoSwitched && ...) or if (!autoSwitched && ...)\n. Use !== and === instead of != and !=. DRY: put this at the top of function autoSwitcher\nconst currentUserNotAuthor === thing.getAuthor() !== loggedInUser();  and then if (currentUserNotAuthor && !autoSwitched). ~Move queryParameter above switchTo.  This is mostly a good practice but not technically necessary.~\nInstead of setting queryParam as a global, instead pass \"auto\" to switchTo and then to reloadPage:\nCall switchTo(thing.getAuthor(), \"auto\")\nfunction switchTo(username, reason)\nfunction reloadPage(reason) . You should sanity check the type of thing and its relevant option at the very top of this function.\nfunction autoSwitcher(thing) {\n     if (thing.isPost()) { if (!module.options.autoSwitchOnPost.value) { return; } }\n     elseif (thing.isComment()) { if (!module.options.autoSwitchOnComment.value) { return; } }\n     else { return; }. This approach is problematic for two reasons:\n\nThe accountSwitcher? could be copied into URLs which are shared and then launch a confusing pop-up to people who simply click the link.\nThis implementation, ${pathname}?accountSwitcher=foo, doesn't preserve existing query parameters, such as context, depth, limit\n\nA smoother approach would store \"reloaded ${location.href} to switch accounts to ${username} at ${now}\" in RES storage, akin to Comment Hide Persistor -- and only show notification if the stored time is within the last minute.. Alternatively, const autoSwitched = _.once(() =>  window.location.search.indexOf('accountSwitcher=auto') === -1;  and call if (autoSwitched() && .... Instead of checking if (isPageType('comments')... you can simply add module.includes = ['comments']; in the \"manifest\" area above.. Probably superfluous unless you really want that extra second longer than the default.. How about ...\n\"Automatically switch to account in Account Switcher if that account has submitted a comment to the current post.\". How about ...\n\"Automatically switch to account in Account Switcher if that account submitted the current post.\". How about..\n\"You have been automatically switched to <b>u/$1</b> because this account submitted this post.\". How about..\n\"You have been automatically switched to <b>u/$1</b> because this account submitted a comment on this post.\". How about Author instead of OP. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4443/files#r142847164. It appears this patch won't let you deliberately switch to a different account. It would be great to check \"recently switched accounts on this post?\" before even adding a hook to watchForThings.. :hocho:  false is default. It's safer to double-check the page type, since users also encounter comments in user pages and /r/all/comments listings.. This could be simply text || 'set a tag'. Please move this title and description to en.json, same as all the other options here. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/locales/locales/README.md#translating-modules. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/locales/locales/README.md#translating-modules. Everything above this line inside go should live in a const setup = _.once(() => { ... } that's called at the beginning of toggleSidebar, to defer that work until it's actually needed.. re: rebuilding oldHideSidebar with hideSidebar\nfrom irc:\n\n[The default behavior of styling the toggle as \"selected\"] drew attention to the toggle state which didn't really serve a purpose\n\nHow about addressing exactly that -- remove the selected styling (or classname) instead of rebuilding the whole element?  Or just leave it using the default behavior. IMO it's better to highlight that non-default state, even if it's the user's \"default\" preference, in order to help the user diagnose where the sidebar disappeared to.. const not let . Any particular reason to store this in $.data instead of a variable here in the module?. const -- you're never going to change the value of padding. same with margin. It appears you expect .css('padding') to return all four values at once, which is an implementation detail of jQuery that I wouldn't trust. Instead, you should specifically call .css('padding-top') and .css('padding-left') etc to get the exact values you need.  Additionally, you should put them in more descriptively named variables like paddingTop, paddingLeft.. What do you expect to put in localStorage, which subreddits have sidebar collapsed? Maybe instead you could make a module table option listing subreddit and \"hidden\" toggle.. These could be named simply hideSidebar and showSidebar.. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4511/files#r147560466. May as well propToChange = 'padding-right' here instead of interpolating it later.. I'll ask about implementing a frontend API method for \"fix repositioning of reddit user card\".. It might fail if Reddit changes the data attributes.. It would be nice to see this module refactored to avoid the click, but this is a reasonable compromise.. Maybe move this above new Favico() just in case its initializer tries to sniff the existing icons?. Can these constants be put in CommentTools.NAMED_KEYS.Escape, ...Enter for easier validation?. Can we keep this as NAMED_KEYS = { SPACE: ' ', ENTER: 'Enter', ESCAPE: 'Escape', ... } for stronger validation?. InnerHTML is generally discouraged because security risk. If you're just setting the text label, use .textContent. Instead of concatenating simple translated strings, move -RES into the locale file.. Event handler functions should accept event as a parameter instead of relying on the global.. Instead of traversing the DOM within a module, please use RES' Thing wrapper. If you can't find a relevant method on that, please add a new method and a test for it.. This should already be implemented in the saveComments module.. You can probably watch for things: comment form as a more reliable method. This implementation won't attach the click handler to comments loaded after page load with \"load more children\".. Please use a more descriptive class name like res-comment-saved-text.. Great thought on adding an option. Could you move this into the module.options dictionary above?. Can you filter before mapping to avoid throwing away work? Actually, instead of filtering, can you simply savedComments[id]?. Iirc there's a string.html template function which will safely inject the text and return dom elements . Since there isn't any other text in this template literal, you can write simply = i18n(\"whateverKey\"). Could you add a separate option for the \"previous\" button?. Could you move this option check above, and use it to wrap watch for..? And then you can add a watch for each of those two functions separately and skip the middleman.. You should check that the button exists first. It might not be present, like on archived posts or banned subreddits. It would be even safer to watch for new commemt forms . Let's use redditstatic.com instead of reddit.com . orangered*. If you change option keys, you also need to add a migration to move the value from the old key to the new key.. @erikdesjardins Could you update the link in the post body of https://www.reddit.com/r/RESIntegrationTests/comments/64thjt/comment_depth/ to en.reddit.com instead of www.reddit.com to ensure this click keeps the test user on old.reddit.com?. s/alpha/redesign. command for navigating to frontpage. - Fix new profile night mode bleeding into Reddit redesign (thanks @andytuba).  (thanks Mozilla). - Fix tests breaking from unexpectedly running on redesign. This block could have stayed in buildRequestParams if I made that function async. too. \nHowever, since ajax.invalidate works better with a synchronous function and doesn't care about the modhash header, it seems fine to move it into the main ajax function.. I appreciate the effort you put into this! but it'll make for kinda weird UX and might be fragile. I'm hoping to get JSAPI integration for the hamburger menu set up soon that will make this much simpler.. Thanks for due diligence, but you only need to edit en.json. All the other languages will copy en.json's values into they get translations hooked up.  It's okay to leave these in here, since they'll get clobbered on update, but it's work you don't need to worry about in the future \ud83d\ude04 . nit: please be consistent with tabs vs spaces. If you have a free moment, it would be nice to make a separate PR with just the originalOC changes, that could get merged sooner!  . Moving this might not be strictly necessary but it doesn't hurt.. Firefox throws on assigning cross-domain properties to an object (data from an object from reddit.com). The complement to Firefox throwing on Reddit code trying to get values from an extension's event, hence the change below.. Firefox throws on getting properties from an object created by an extension. Probably security. So, new JSAPI handshake: move that metadata into the DOM and light a flare for the JSAPI to see.. How about mm2x?  Internally at Reddit, \"new modmail / modmail beta\" is part of the \"2x\" family, i.e. Node-served React webapps.  . per https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4790/files#r194815907\nHow about modmail2x and modmail2xCompose?. I haven't yet explicitly double-checked this but it looks pretty comprehensive and safe.. Jsapi doesn't have the cookie, but that's a good idea. I'll make a note for next week. . With that .slice(-2) here, this may as well read urlObj.hostname.endsWith('.reddit.com'). One step better: match urlObj.hostname to  the manifest's content_script.matches glob.. There appear to be no other instances of fetch in lib/modules/** and lib/utils/**. I'm sorry I didn't use ajax in the first place.. This should be literally <textarea id=\"editReddit\"></textarea>, since textarea is not a valid type of input.. yet somehow everything gets filtered anyway. filtering has gotten beyond the grasp of my feeble pres-RES-5 mind.. You can add items to the dictionary in locales/en.json to map these keys to English language strings. There should be a helper function or regexp to extract user links from a container, and extract the username itself from a user link. The user tagger module should provide some guidance. (Let me know if you'd like more specific pointers, I can look it up when I'm near a laptop.). See comment below -- there should be a helper or more generalized pattern for this. Could you convert this to a string.html template tag like header? Much more readable.. You can also embed this directly into the above template.. Instead of _.once, how about validating that submissionThing is a child of #siteTable?  (This ad unit is showing in the sidebar.). Like you said, this selector is pretty limited. Could you use the usernameRE here too?\nIt would probably be easier to refactor these three functions as\n\npull the links from the post text\nMap links into usernames\nattempt to extract the username from the link using the regex\nsilently return/continue if there's no match.\n\n\nIterate over usernames to add highlighting (filter no-match / undefined). Could you update these to quarantineHideDesc, quarantineHideFlair, etc? consistency makes for easier Ctrl-F'ing.. The alt text is localized (translated), is there a different property or technique you can use to detect \"on the quarantine page\"? (something that doesn't rely on user-facing text) Perhaps look in the url of the action of the form?. Could you use BodyClasses.toggle for this? You can import { BodyClasses } from 'lib/utils';. Could you put this if fixHeaderImg at the same level as if hideSidebar? Since these are unrelated chunks of functionality, they should be in separate blocks. \n\nIt looks like you combined them to take advantage of $notice.length to determine \"does this page show quarantined UI?\"  It would be clearer to add something like const inQuarantinedSubreddit = !!(document.querySelector('.quarantine-notice')) to the top of go(). \nIt would be even nicer to add inQuarantinedSubreddit = _.once(() => { look for hints of quarantine }); to lib/utils/location (and import it into lib/utils for importing into modules.) You could then use that function in these if predicates.. To determine if this is a quarantined subreddit, it would probably be cleaner and more robust to check if document.body.classList.has('quarantine'). nit - could you name this stamp instead of flair? . Gets the job done! If the ads team happens to add another ad unit that's sooner in the DOM (unlikely) we can revisit it.. You should link specifically to https://old.reddit.com/ here because redesign does not support deeplinking to /prefs/#default_comment_sort. Can you put this text in en.json and load it here using the i18n helper functions?. Reusing the RESUserTag class here will probably lead to trouble. What do you need it for? Maybe  add a new rule that targets the link's class?. There should be a \"create element\" helper function for making gear links. Can you use that here?. Could you pass along the postModTools JSAPI container/metadata to applyToPost?. This class is overkill for creating a little link. Can you keep function buildTagElement and delete the rest of this class and afterLoad?. Can you test this inside applyToPost, and add a flag to the postModTools container instead to verify \"this element has been handled\"? or you could check the postmodtools .updates value.. Can you pass along the container and metadata here?. Sounds good! Definitely want to ensure there's only ever one . Just curious, when you say \"not bulletproof\" -- can you describe what you mean, and do you have any suspects what caused it? I'm wondering what unexpected pitfalls we need to learn about when working with the new reddit frontend.. https://www.reddit.com/r/redesign/wiki/jsapi. Since I suspect this function is headed towards adding more options, it would be nice to reorder the function signature into an options dictionary (keyword args) pattern. \nSo, if you write it like this (or with flow typing and drop the false default)\njavascript\nfunction navigateTo(href, { newWindow: false, leaveNP: false })\nThen you can invoke it like this:\njavascript\n navigateTo('/example', { leaveNP: true })\n. Could you also verify that the NoParticipation module and its escapeNP option are both enabled? There should be a helper like \"get opaque option value\", there are some other modules which check options from other modules. (Let me know if you'd like a pointer.) . Even better, could you add a new escapeNPKeyboardNav option right after it, and add a new human-readable title/description to en.json?  You can just copy paste and add a qualifier like \"when using keyboard navigation to go to another page.\"\nAnd for the coup de gras: could you also add a new \"data migration\" to copy the current value of the escapeNP option into the new option. migrate.js is full of examples.. Hmm, I think there's a different pattern for doing this, that gets better static typing, like ...\n```javascript\nimport SomeModule from './someModule.js';\n// snip\nif (Module.isEnabled(SomeModule) && SomeModule.options.someOption.value) {\n```. Hmm, they might be confused. Updating a description is tricky, though, since the other translations won't mention the link clicks. I think it's an acceptable compromise to just add the new option and leave the old one alone.\nIt would probably help to make escapeNPKeyboardNav depend on escapeNP being enabled. There's a pattern like enabled => module.options.escapeNP.value.. You can simply test NoParticipation.options.escapeNP.value here.. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4919/files#r233343392. On second thought, let's not bother with a new option for this PR.. You can squish this together, since they're both listed inside <body class=\"...\">\ncss\n.res-styleTweaks-flairEmojiAsText-nosubstyle.res-srstyle-disabled. Could you also move the name values into en.json with (gnarly long) keys like styleTweaksflairEmojiAsText?  Then you can load them in here as i18n('styleTweaksflairEmojiAsTextNever'). I'd like to come back to \"get redesign nightmode pref\" later, but this should hold for now.. It would be nice to refactors this to a function like\nlib/user.js\njavascript\nfunction getPrefsFromCookie() {\n    return JSON.parse(atob(cookies.get('USER') || '')) || {};\n}. (userCookie && userCookie.prefs && userCookie.prefs.nightmode) -- not guaranteed to have the USER cookie, especially before checking if isAppType('d2x'). TODO: Add a \"on nightmode toggled\" watcher for the redesign. https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/cookies/onChanged. Could you move this to the settings module which handles these clicks? If showImages is disabled, then this won't run.  The overhead won't be that bad.. It would be clearer to test this with something like linkElement.hash.startsWith('#res:settings'). If the user middle-clicks, right-clicks, ctrl-clicks, etc. this function shouldn't run.. Oh, yes, this sounds right.. May as well add post in here, so RES can show selftext expandos in lightbox and comments full-page views.  \nI'll make a note that the redesign JSAPI add a property like \"expandoVisibility: none | hidden | truncated | visible\" which is updated when expandos (particular self-text) are opened.. In the future, it might be neat to add a onSaveAnySettings which is called for all modules (not just modules with staged options) and is given stagedOptions.. How about renaming savedSettings to changedSettings, and dropping the comment?. Doesn't seem strictly necessary but I doubt this is touched by any externally-hosted stylesheet (e.g. subreddit stylesheets, user stylesheets).. Wouldn't it be ironic if RES suffered a vulnerability thanks to an invisible upgrade to a compromised version of a security package.\nI added the integrity sha to yarn.lock, too.. We should make a linter that runs in CI and pre push :grin:. And also document it to contributing.md. this seems useful to throw in a \"utils\" / \"library\" function. Instead of \"blanking out\" the element, it would be better to remove the element entirely. e.g. instance.element.parentNode.removeElement(instance.element). That said, this doesn't feel quite right .. I assumed that a previous instance's element is sticking around, and that's what needs to be removed?. Sorry, I should have said \"some other instance's .tagger\" element. \ninstance.element is the JSAPI container, <span data-name=\"reddit-enhancement-suite\">...</span>.  All RES's modules share that instance.element. So, UserTagger shouldn't clear out the entire instance.element because that might clobber content added by other RES modules.  Instead, UserTagger should only remove .tagger elements from this instance.element. Exactly :). So, what I'm hoping you can help with, is to removing the old .RESUserTag (instance.tagger) when adding a new tagger.. ... clear .RESUserTag elements from instance.element before appending more tags.  (Don't clear it out entirely.)\nYeah, that if instance.tagger check is checking for \"same user\".  The extra .RESUserTag items are from different users -- that's why they should be removed.. As you mentioned, this will probably be null immediately after urlChanged jsapi event fires since Reddit's react component hasn't mounted yet. In this case, we could adopt the selenium approach of \"await element\".\nIf RES already had a helper function, I would look in the dom utils. If not, here's an idea:\njavascript\nfunction awaitElement(selector, container = document.documentElement, timeout = 5000) {\n    const rejectAfter = Date.now() + timeout;\n    return new Promise ((resolve, reject => {\n        f();\n        function f() {\n              const element = container.querySelector(selector);\n                if (element) {\n                     resolve(element);\n                 } else if (Date.now() >= rejectAfter) {\n                      reject(\"timeout\");\n                 } else {\n                      setTimeout(f, 100);\n                 }\n            }\n    });\n}. could you alphabetize this (and empty too)?. ",
    "patricksnape": "@honestbleeps Will we ever want to merge this? Or shall we clean it up and close it?\n. Thoughts on this? I guess a floating comment box would be possible, that sticks to the bottom of the screen. But is this really necessary?\n. @tico24 +1 for educating users about going back to the top of the page\n. This needs to be carefully looked in to given the new changes\n. With MutationEvents as well?\nOn Wed, Mar 13, 2013 at 8:12 PM, Andy Tuba notifications@github.com\nwrote:\n\ni just checked, this looks fixed\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/218#issuecomment-14865627\n. As above I have added a proposal for this functionality by using the existing showImages plugin. Need some guidance with it in regards to whether this is a good idea.\n\nCurrent issues are:\n- How to display the video icon since the current style uses a redditmedia image that doesn't have a video icon\n- Do we need to call trackImageLoad\n- Should we rename all the methods to reflect it loads varied media other than images\n- Have I clearly broken anything?\nLet me know what you think and if this is useful (Current TODO's are marked in the code as TODO - Youtube)\n. This is due to the default showComment function provided by Reddit clobbering our style. I believe the offending line is:\njavascript\n2153: a.find(\".entry:first .collapsed\").hide().end().find(\".noncollapsed:first, .midcol:first\").show().end().show();\nWhich catches the fact we have have a collapsed class and thus hides the expando. If you expand the image, then hide the comment, then un-hide it, then it doesn't disappear, which supports this theory.\nThe only real option I can think of is to change the collapsed class to something like res-collapsed though I'm not sure if this would break other functionality? We can't intercept the original Reddit call and I don't know of a way to listen for DOM changes from inside the page script?\nThoughts @honestbleeps?\n. This doesn't match the current source code and seems to be working fine in the latest master - close as fixed?\n. Beat me to it - fixed but just needs to be released\n. Beat me to it - fixed but just needs to be released\n. It includes the GPL v3 statement in the user script in the lib folder (and links to the full license) - what's wrong with that?\n. I agree the ReadMe should definitely at least include what version of GPL it is!\n. @andytuba agreed, license.txt isn't a bad shout since it's unlikely to change...\n. What was the date when this image was taken so that a test case can be reproduced (the exact time would be better if possible)?\n. So it sounds like it was a brand new account (created that day) and because your timezone's were different it meant that a negative date occurred?\n. So the JSON returned to the method is as follows:\njavascript\n{\n   \"kind\":\"t2\",\n   \"data\":{\n      \"has_mail\":null,\n      \"name\":\"hotmanbuttz\",\n      \"is_friend\":false,\n      \"created\":1359653178.0,\n      \"created_utc\":1359653178.0,\n      \"link_karma\":1,\n      \"comment_karma\":1,\n      \"over_18\":false,\n      \"is_gold\":false,\n      \"is_mod\":false,\n      \"id\":\"afgzn\",\n      \"has_mod_mail\":null\n   }\n}\nAnd the method sets the from-date using the code:\njavascript\nvar utctime = jsonData.data.created;\nvar d = new Date(utctime*1000);\nWhich I imagine should be jsonData.data.created_utc?\nThen in the comparison it uses:\njavascript\nvar amonth = origdate.getUTCMonth() + 1;\nvar aday = origdate.getUTCDate();\nvar ayear = origdate.getUTCFullYear();\nif (newdate == null) newdate = new Date();\nvar tyear = newdate.getUTCFullYear();\nvar tmonth = newdate.getUTCMonth() + 1;\nvar tday = newdate.getUTCDate();\nWhich is obviously getting UTC information. So perhaps the bug is in the use of jsonData.data.created?\n. Close as fixed?\n. This looks OK to me, though I wouldn't suggest that it is turned on by default, since it's quite a major change in functionality. I can forsee a lot of complaining? So perhaps just changing line 8787 to false as default?\n. I should also note that whilst #212 is an unsupported feature request this regex is still a bug. It would match and destroy subreddits such as /r/leicester/ - the trailing r would get removed.\n. I should also note that whilst #212 is an unsupported feature request this regex is still a bug. It would match and destroy subreddits such as /r/leicester/ - the trailing r would get removed.\n. Seems fine to me on Chrome 21 and 24\n. Seems fine to me on Chrome 21 and 24\n. Does this fix the issues in Firefox 19? Would be a massive boon if it did.\n. Needs Adblock enabled for it to happen for some reason\n\u2014\nSent from Mailbox for iPhone\nOn Mon, Feb 25, 2013 at 4:22 PM, Andy Tuba notifications@github.com\nwrote:\n\nThat screencap was from \"Front page ads are bugged\".  There's a different ad, same effect on another report.  Those guys are both using v4.1.2.\nThere's a report from a v4.1.5 user who is also showing same issue, different spotlighted item.\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/253#issuecomment-14051586\n. So we can confirm that this issue is fixed with your commit?\n. How delightfully open my evening just became :P \nI also confirm this seems fine for me on Firefox 19 - Ubuntu 12.04\n. The latest version on Github is version 4.1.6 and it is fixed in that version. This fix hasn't been released yet but nonetheless it is fixed. We are still working on syncing the fixes across all the browser releases so that they are in sync.\n. The latest version on Github is version 4.1.6 and it is fixed in that version. This fix hasn't been released yet but nonetheless it is fixed. We are still working on syncing the fixes across all the browser releases so that they are in sync.\n. I don't know how other people feel, but one thing I've noticed is that people aren't submitting issues/fixes to RES per se, but rather to the showImages module. This is why I feel that perhaps we need to look in to properly modularizing RES. Thus people could submit patches to extend showImages and then when a release was made you simply synced with the latest version of that module. It's not a problem that people want to extend this module, it is obviously highly useful, but rather that the extension are often quite niche. However, in the context of the showImages module, adding a new site to support is actually a welcome boon.\n\n@mercurato Apologies for sort of hijacking your thread. I just think that it would be much easier to have a faster pace of image site support if showImages was a sub-module of RES in a truer sense of the word.\n. I don't know how other people feel, but one thing I've noticed is that people aren't submitting issues/fixes to RES per se, but rather to the showImages module. This is why I feel that perhaps we need to look in to properly modularizing RES. Thus people could submit patches to extend showImages and then when a release was made you simply synced with the latest version of that module. It's not a problem that people want to extend this module, it is obviously highly useful, but rather that the extension are often quite niche. However, in the context of the showImages module, adding a new site to support is actually a welcome boon.\n@mercurato Apologies for sort of hijacking your thread. I just think that it would be much easier to have a faster pace of image site support if showImages was a sub-module of RES in a truer sense of the word.\n. @honestbleeps I completely agree about the modularity - its one of the things I think is particularly good at RES' design. I was really proposing the splitting of modules in to separate files which you are clearly keen on as well. I'm definitely available for testing this new modularity.\nI do also agree about the regex checks, but I also think that an advantage of having some form of true modularity for the modules is that people can load their own image support modules if they so wish. This also stops us from fielding complaints on here.\n. @honestbleeps I completely agree about the modularity - its one of the things I think is particularly good at RES' design. I was really proposing the splitting of modules in to separate files which you are clearly keen on as well. I'm definitely available for testing this new modularity.\nI do also agree about the regex checks, but I also think that an advantage of having some form of true modularity for the modules is that people can load their own image support modules if they so wish. This also stops us from fielding complaints on here.\n. @mercurato How's this to try and solve the issue? This allows you to load the code that you posted above and have people paste it in to a textarea. Then it will add expandos for your site's comics. The only caveat is that you have to wrap your functions carefully, as follows:\njavascript\n(function () {\n    return {\n        matchRe: /^(http:\\/\\/)?(www.)?virtualshackles.com\\/([1-9][0-9]*)\\/?(\\?.*)?$/i,\n        go: function () {},\n        detect: function (elem) {\n            return this.matchRe.test(elem.href);\n        },\n        handleLink: function (elem) {\n            this.handleInfo(elem, elem.href);\n        },\n        handleInfo: function (elem, info) {\n            elem.type = 'IMAGE';\n            elem.src = info.replace(/\\/?(\\?.*)?$/, \"\") + \".jpg\";\n            elem.href = info;\n            modules['showImages'].createImageExpando(elem);\n        }\n    }\n})()\nbecause the code gets eval'd we need to wrap it in a function to stop it from getting run immediately.\n@honestbleeps What do you think? We could even have a separate repo for developers to add their handlers to that users could download. \n. Got my hands on a Mac for the evening and can confirm that the Safari fix is identical to the Opera one - so adding\njavascript\nif (/api\\/login/i.test(obj.url)) {\n    // Remove reddit session cookie for new API login changes\n    document.cookie = 'reddit_session=null;expires=' + new Date() +'; path=/;domain=reddit.com';    \n}\nto the GM_xmlhttrequest handler fixes the issue. Tomorrow I will add a pull request that fixes this and wraps it in a RES.utils function.\n. Got my hands on a Mac for the evening and can confirm that the Safari fix is identical to the Opera one - so adding\njavascript\nif (/api\\/login/i.test(obj.url)) {\n    // Remove reddit session cookie for new API login changes\n    document.cookie = 'reddit_session=null;expires=' + new Date() +'; path=/;domain=reddit.com';    \n}\nto the GM_xmlhttrequest handler fixes the issue. Tomorrow I will add a pull request that fixes this and wraps it in a RES.utils function.\n. @andytuba can you test this on Mac please?\n. @andytuba can you test this on Mac please?\n. I switched to master and this seems to be an existing visual issue? Also the gear menu is broken \n\nI must confess, I am useless at CSS and so will struggle to debug/fix this issue!\n. I switched to master and this seems to be an existing visual issue? Also the gear menu is broken \n\nI must confess, I am useless at CSS and so will struggle to debug/fix this issue!\n. Found it - not css but this commit which breaks it. Tries taking toUpperCase of null logged in user. Will add to my pull request to fix this.\n. Found it - not css but this commit which breaks it. Tries taking toUpperCase of null logged in user. Will add to my pull request to fix this.\n. The error was stemming from the toUpperCase error. It was only creating half the elements and then obviously dropping out of the method once it threw the exception. This wrecked the styling in Chrome, but the fix you suggested also fixes the gear error\n. Bare with me, let me see what I can do.\nOn Fri, Mar 8, 2013 at 9:09 AM, honestbleeps notifications@github.comwrote:\n\nack, this can't be auto merged... that makes me a sad panda...\nconfession time: I don't know a better way than manually making all these\nchanges by hand... before I go and take on that task - is there a better\nway?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/258#issuecomment-14610268\n.\n. That should be it - you should be able to merge this now. Just a conflict with some conditional CSS that got removed, but I've difftooled it and it seems OK now. A git rebase should work flawlessly.\n. This is a genuine bug and must currently exist on Opera. It's a classic copy and paste error and it's been sitting around since last August. \n\nWe should probably take a much closer look at that fallback code - it's also currently littered with TODOs - though I'm not sure what they are referring to?\nIn short, the fix for the self comment issue is to change L2127 to:\njavascript\nRESUtils.watchers.selfText.forEach(function(callback) {\n    if (callback) callback(event.target);\n});\nI'm wondering whether or not it may be safer to leverage something like the MutationSummary library for safer DOM accesses and extending that library to wrap the old MutationEvents for Opera? Maybe something along the lines of this but wrapping DOMNodeInserted``?\n. I noticed that Firefox 19 also complains about the use ofMutationEvent`, which means it is incorrectly falling through on Mozilla\n. So the error I see is:\n[23:23:50.207] Use of Mutation Events is deprecated. Use MutationObserver instead. \n@reddit_res/data/reddit_enhancement_suite.user.js:2001\nL2001:\njavascript\nif (MutationObserver && siteTable) {\n    ...\n} else {\n    // Opera doesn't support MutationObserver - so we need this for Opera support.\n    if (siteTable) {\n        ...\n    }\n}\nSo it's hitting that else clause for some reason.\n. Also, what is the best way to debug extensions in Firefox? I'm really coming up short :confused: \n. All my Google-fu turned up was that firebug can't attach to add-ons because of the sandboxing. It did indeed show errors but not console.log and RES wasn't in the list of attachable scripts. Makes trying to find out what's going on with the MutationObserver very difficult.\nOn Tue, Feb 26, 2013 at 6:11 AM, honestbleeps notifications@github.com\nwrote:\n\nas long as you don't need to debug the background page, it should \"just\nwork\", and show errors etc from within reddit_enhancement_suite.user.js ...\nof course console.log should log to firebug also.\nif you're looking for chrome style breakpoints/debugging... firebug is\nactually the king of that, but I'm not sure it works with addons :-\\\nOn Tue, Feb 26, 2013 at 12:06 AM, Andy Tuba notifications@github.comwrote:\n\nHow do you get Firebug to attach to RES?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14097253\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14097360\n. Spent a lot of time failing at this. Seems you can log to the error console (Ctrl+Shift+J) but not to the inspector or Firebug. The error boils down to the fact that we are being returned null for window.MutationObserver - though it shows up fine in the inspector console. I think this is a genuine Firefox bug effecting extensions :worried: \n. Are we working towards a release? I assume we need to fix a lot of the bugs for Firefox 19/Chrome 24. What are the major fixes we need to make? Anyone made any headway on Firefox extension debugging?\n. Yikes! Well we have a load of stuff that needs fixing before we can release\nanyway. Need to concentrate on getting a shortlist of common bugs and then\ncreating a release branch so we can test in the newer browsers and\nhopefully prevent a lot of the common bug complaints. Concentrate on\ngetting better, I'm sure fixing Firefox 19 alone will be enough to drive me\nto an early grave.\n\n\nOn Thu, Feb 28, 2013 at 11:54 PM, honestbleeps notifications@github.comwrote:\n\nI've mostly been nursing a 101 fever for the better part of this week but\nI'd love to get a release out soon :-\\ I have really not touched code.\nOn Thu, Feb 28, 2013 at 5:52 PM, Patrick Snape notifications@github.comwrote:\n\nAre we working towards a release? I assume we need to fix a lot of the\nbugs for Firefox 19/Chrome 24. What are the major fixes we need to make?\nAnyone made any headway on Firefox extension debugging?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14265399>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14265493\n.\n. Truthfully I've reserved some time this weekend for looking in to it.\nReally need to test Firefox for MutationObserver abnormalities on Mac\n(found them on Linux and Windows 7 so far). Feel free to sniff around,\ncould end up being a real bugger to fix.\n\nOn Thursday, 7 March 2013, Andy Tuba wrote:\n\nMore fodder on the MutationObserver fire.. @patricksnapehttps://github.com/patricksnape,\nhow are you coming along with that? I can throw some brainpower at fixing\nit in Chrome tonight and this weekend.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/259#issuecomment-14593873\n.\n. @andytuba All those bugs you linked to stem from r/all and have to do with #272 \n. I've started making some headway on this - basically the mutationevents is pretty broken at the moment. Given we don't really have any Opera users that's probably why. It often selects the wrong element and doesn't hook in to a fair number of them. I've begun sorting it out and will push a branch this weekend. Also, we can turn MutationObserver back on for Chrome (WebKitMutationObserver) because the old bug that was present is fixed in Chrome now.\n. @andytuba I trolled through some bug reports and once upon a time it had a memory leak - but this was fixed around the new year in the Webkit branch. So it should be OK in Safari, Chrome and soon Opera. However, Firefox 19 is still giving me null when I request MutationObserver objects, and I've yet to get it to give the extension a valid one. It's possible in Firefox 19 we need to request the permission or something. I'm still working on it.\n\nThe bulk of the changes is to try and ensure that if MutationObserver does break, and it falls back to MutationEvents, we are still OK.\n@tico24 Thanks, I'll let you know some test cases once I've written them all down. I'm trying to perfectly replicate the old Firefox behaviour in Chrome at the moment.\n. Bug:\nComment Preview is broken on comments loaded via 'Load more comments' when using MutationEvents (Chrome, Opera).\nReplicate:\n- Set number of comments to show to 1\n- Go to my fantastic example here\n- Expand the second set of comments\n- Reply to one of the nested comments, specifically the last one before the 'continue this thread'\n- No comment preview\n. Testing and fixed a few issues - where we are now looks pretty reasonable to me!\n. L609, which admittedly is only once (and in Explorer code we don't currently support)... It's just submitting my delete cookies pull request I had to switch on the browser type and it felt pretty unclean. Maybe if we just add 4 methods to the browser detect that along the lines of\njavascript\nisChrome: { return typeof(chrome) !== undefined; },\nisSafari: { return typeof(safari) !== undefined; },\nisFirefox: { return typeof(self.on) === 'function'; },\nisOpera: { return typeof(opera) !== undefined; }\nAt the moment, whenever browser decide to change how they identify themselves means sweeping all over the code for instances of safari, chrome etc. Would be nice to wrap it up in to some helper functions, no?\n. #258 now fixes this instead of two pull requests\n. What if you add the missing @require statements?\njavascript\n// @require       tinycon.min.js\n// @require       snuownd.js\nThough I'm not 100% sure how local file references work for GreaseMonkey. GreaseMonkey is certainly not currently on my list of things to test with.\n. @migbac Yeah you just need to re-enable those scripts because currently they aren't being loaded - you'll need to download all the scripts listed here and then reference them somehow. The other option is to concatenate the files so that you include TinyCon and SnuOwnd. It should also be noted that all the modules that use the jQuery plugins will be broken for you.\n. @migbac You're going to want to add all the jquery plugins as well - as other stuff will be broken if you don't. Also, I don't recommend using Github as a content distribution network, it will be pretty slow, and Github asks us not to!\n. In order to make it easier to merge I have combined this commit with #258. This should be closed and just #258 should be merged\n. Actually - I lie completely - this is also due to this where it throws an exception when you are not logged in and thus doesn't load the rest of the script, hence it never hits those invocations.\nHowever, it may be safer to put them in RESInit to prevent modules from breaking one another like that. Thoughts?\n. I will have access to a Mac from tomorrow, so I can have a poke around at Webkit nightly to see what's going on.\n. The real problem with this is, what is the expected behavior? Don't show the expando? Then I bet people complain that it's broken? Or expand and have an empty div that says the gallery is empty? That's probably a bit more work to pull off cleanly than you'd think.\n. I think an empty box is better than a new icon. It's more clear and is less likely to cause people confusion.\n. Wasn't me, but I do believe @gamefreak fixed this. I recall seeing safeHTML\ncalls littered around the showImages code. If not, this is an easy fix.\nOn Thursday, 7 March 2013, Andy Tuba wrote:\n\nThis is in RES v4.1.5? I believe @gamefreak https://github.com/gamefreakor\n@patricksnape https://github.com/patricksnape fixed this already for\nthe next release.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/271#issuecomment-14590396\n.\n. I can confirm this is fixed in the master branch - tested on Chrome and Safari on Mac\n. @honestbleeps Needs to be tested on the new master, but I'm pretty sure this is now fixed.\n. Jesus Reddit, that's a nasty bug they introduced. My account switcher is all merged in my branch and so can be merged in to master and then I suggest we ship 4.1.6 ASAP.\n. @andytuba I thought your search had been merged in?\n. @andytuba I think what @tico24 is trying to say is could we post a link of the form settingsconsole/filters/flair to direct people directly to the console?\n. @andytuba :open_mouth: \n\nThat's one hell of an addition!\n. Two things to nitpick:\n- cant we just add that MutationObserver to the existing OR chain?\n- can we use the browser detect isFirefox instead of the self.on?\nAlso I'm on my phone so I must admit its difficult to see the code.\n. Yikes that's a crappy bug, fair enough. I could be wrong, but doesn't the Firefox check just do self.on inside of it?\nOn Sat, Mar 9, 2013 at 8:08 PM, honestbleeps notifications@github.com\nwrote:\n\nwe can't add MutationObserver to the OR chain do to the firefox bug that\nreturns null for it, so no... that's the whole point of the hack...\nwe can't detect firefox that way because the user could conceivably be\nusing Greasemonkey ... there's still a surprising number of those,\nunfortunately.. I guess they're using Greasemonkey's @require to include\nthe other scripts?\nI'm close to ready to abandon them though...\nOn Sat, Mar 9, 2013 at 2:04 PM, Patrick Snape notifications@github.comwrote:\n\nTwo things to nitpick:\n- cant we just add that MutationObserver to the existing OR chain?\n- can we use the browser detect isFirefox instead of the self.on?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/275#issuecomment-14669560\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/275#issuecomment-14669621\n. @honestbleeps yep, count me in, I can use gtalk via my patricksnape gmail account. \n\n\nI need to pull these commits in so I can continue testing the MutationEvents, they are a bit of a pig because they seem to fire more than once sometimes. Bit busy this evening but got a lazy Sunday mapped out to make sure they're filtered correctly. @andytuba nice catch on the MutationObserver\n. So we're communicating on #reddit? Or #enhancement?\nOn Sat, Mar 9, 2013 at 7:17 PM, honestbleeps notifications@github.com\nwrote:\n\nI like @andytuba 's idea of IRC since it's better for multiway chat...\nhttp://webchat.snoonet.org\nOn Sat, Mar 9, 2013 at 1:03 PM, Patrick Snape notifications@github.comwrote:\n\n@honestbleeps https://github.com/honestbleeps yep, count me in, I can\nuse gtalk via my patricksnape gmail account.\nI need to pull these commits in so I can continue testing the\nMutationEvents, they are a bit of a pig because they seem to fire more than\nonce sometimes. Bit busy this evening but got a lazy Sunday mapped out to\nmake sure they're filtered correctly. @andytubahttps://github.com/andytubanice catch on the MutationObserver\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14668525\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/277#issuecomment-14668774\n. Currently these are the issues I've found. I'm still investigating but it's 1:33am and I need to get to bed. Will sneak some time in tomorrow morning at work.\n. Wow thanks for doing that, I'd planned to do it this morning. Checked it over and fixed a few things, made a pull request. Would be good to make sure I haven't done anything crazy.\n. After merges these all seem OK on Chrome - will test Firefox/Opera tonight\n. Editing is broken:\n\n\nThe only thing in the whole codebase that listens on newCommentsForms is Line 7942. This seems to be the wrong behaviour to me, however? Why doesn't it just listen for new comments? Changing it from newCommentsForms to newComments seems to make it work again? What exactly is the point in newCommentsForms versus newComments? Obviously it allows you to attach to the form that gets added to the page, but the form is hidden so can't we just latch on straight away? That's what the code does already when it wires up existing elements on the page.\nIn order to fix the save-edit-save functionality we probably need to either clear the 'seen before' flag or hook in to the save button ourselves and manually fire a DOM change event. Or perhaps we need to listen for a DOM change? Since we only listen for insertions (at least in the MutationEvents code).\n. Yep looks obsolete to me - I'm going to play around with removing it.\n. Duplicated save buttons still possible:\n\n\nLoad more comments\nReply to comment you just loaded more for\nAll children have duplicated save buttons\n\nIssue seems to be that when you add a new comment in to the page it passes the whole sitetable which then proceeds to get all children (including the nested comments already wired up from the 'load more'). Perhaps we need to rework the code so that you are ONLY passed the elements that are stricly new (and thus not the whole sitetable). Thoughts? \nI feel as though the callbacks should always receive the same DOM element. So maybe the .entry for newComments and the form for newCommentsForms.\nA naive fix I tried was only passing the first child .thing to the method (but I haven't fully tested this):\nL2218\njavascript\nRESUtils.watchers.newComments.forEach(function(callback) {\n    callback(newOwnComment[0].firstChild);\n});\nReplying to comments you just inserted in to the page doesn't trigger newCommentForm\n\nWhen we add the comment around the above example we don't wire up a new listener so we don't have RES watchers for those new nodes.\n. Issues I still see:\n1.\n- Edit a parent comment, save it\n- Load it's children (comment level 'load more comments')\n- No RES settings applied to child comments\n1. - Reply to a comment\n   - Reply to the comment you just added\n   - No RES settings applied\n2. - Load more comments (top level - for page)\n   - Reply to a comment\n   - Comment gets two source links and two save-RES links\nThis flow obviously appears to be a bit of a nightmare - so here's what I'm thinking: Much hooking in to the Load more comments link, we individually hook in to the edit, reply and save (after editing) buttons. This means that we are less likely to miss elements being added. Since, apart from at initial page load, all new comments added are through user interaction, perhaps we should be hooking in to those interactions rather than trying to listen to all the correct form elements etc being added?\n. I'm working on my python scripts to autobuild the extension as well as to run debug versions of each browser from a single script. So hopefully I can just give you that to build with.\n+1 Autoformatting (though could be a bit gross with things like the Opera minified script)\n. So, other than those fixes already done, do we have anything else in the pipeline (other than Andy's settings has fix)? There's still the annoying behaviour of the MutationObserver not hooking up replies to replies, but it's not a massive bug. We could log it as a new minor bug and maybe wrap up 4.2? Call it a fix for 4.2.1?\n. @andytuba agreed, I seem to be getting some grief in RESIssues about us not releasing hotfixes and it irks me. I'd rather leave this for 4.2.1 and not delay the release to be honest.\n. Nice, much better than my 'fix code but leave it be'. I blame it being late and I just wanted it fixed :p I'm wondering if I should merge this in to mine (since I like it) and then close this? Or give you collaborator rights on my fork so you can just push stuff like this?\n. H'ok\n. Merged and thus closed!\n. Allows you to sort by both displayName and dateAdded - two new options for the Subreddit manager including which field to sort on and in which direction.\n. Not sure what you mean? It doesn't automatically sort, it only sorts when you press the new arrow next to the delete shortcut button.\nOn Fri, Mar 15, 2013 at 10:16 PM, honestbleeps notifications@github.com\nwrote:\n\nwhat happens if I don't want to sort in either of these, and I want my custom dragged/dropped sort to stay as is? can't tell from a quick glance at the code, maybe you've got that covered already?\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/299#issuecomment-14987940\n. Problem: API v1.1 requires OAUTH2 authentication which means we are rate limited as an application to 180 requests per 15 minutes... This is obviously no good for RES. In v1.0 our unauthenticated calls were rate limited to 150 requests per hour matched upon the user's IP address - obviously no problem. \n\nIn v1.1 all endpoints require token authentication, so we get rate limited as the application RES - which clearly screws us. The only way to get more requests is to authenticate as each user - which means we would require a RES user to setup their twitter account in order to activate this flow.\n@honestbleeps You will need to register RES as an application here and then we have the nightmare of how to manage those tokens. Since Javascript is always visible client-side it means anyone could impersonate us - unless we use a server side proxy.\n. Possible library to use - https://github.com/mynetx/codebird-js\n. How about https://noembed.com/ and then we can even make pull requests to get our other providers supported?\n. EDIT: I was talking rubbish before. We could work off of their code in order to implement a similar service from the client side.\n. Ars Technica use it! But, I do agree. Maybe, because it's in Javascript, we could just steal some of the logic, in a friendly GPL v3 way.\n. Hmm. Is this a bug? It seems reasonable to have to reload the page to apply css changes to it. And when you've toggled it, it makes sense that you should reload, not immediately re-toggle it.\n. Perhaps we should petition Firefox to make that change? It seems like if a user makes the effort to install a extension this is tantamount to accepting we will use cookies. Even if they just made us request a list of permissions at install for the user to authorise.\nIf they won't change this then perhaps we need to use something like intro.js to guide users to enable third party cookies at install?\nOn Sat, Mar 16, 2013 at 4:19 AM, honestbleeps notifications@github.com\nwrote:\n\nUnfortunately there's no way around 3rd party cookies. It's set up that way\nfor security reasons.\nMy only hope here is that jetpack SDK addons may recognize cookies as 1st\nparty when from the same domain, which technically they should, but for\nsome reason do not. :-\\\nOn Mar 15, 2013 10:22 PM, \"ginaux\" notifications@github.com wrote:\n\nProblem: RES relies on 3rd party cookies for functions like Never Ending\nReddit to work correctly. Firefox will be disabling 3rd party cookies by\ndefault in Firefox 22.\nRecreate the error: Disable 3rd party cookies on Firefox and reload\nReddit.com\nThe best case solution would be to find a workaround that doesn't use 3rd\nparty cookies.\nOtherwise a popup telling the user to enable 3rd party cookies will reduce\na shitload of \"RES is broken\" type reports.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/309\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/309#issuecomment-14999247\n. I can confirm that in my fix for the history everything was fine with the\nthird party cookies. Looks like the Mozilla guys did a good job with this.\nNER was fine and I didn't change any permissions or anything (using latest\nnightly).\n\n\nOn Wednesday, 27 March 2013, honestbleeps wrote:\n\nthanks for that update, we'll have a look!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/309#issuecomment-15528154\n.\n. +1 for this, sounds like a smart idea\n. What if double click opened the original url instead? Giving two different user interactions that provide everyone with what they want?\n. We don't currently use onclick, I was suggesting that instead of onclick we usedblonclick\n. @tico24 Looks like @honestbleeps made you a collaborator :+1: - though he asked us not to merge directly, as he wants to vet commits himself\n. It's just so green and inviting isn't it!\n. Sorry, in Germany right now for Easter, happy to take a look at this when I get back on Tuesday.\n\nOn Thu, Mar 28, 2013 at 5:21 AM, Andy Tuba notifications@github.com\nwrote:\n\n@patricksnape suspects it's got to do with a .safeHTML call on the post title that buggers it.\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/326#issuecomment-15567628\n. The issue I see with this is the requirement for a formal build process in order to achieve this. It seems much more sensible to have a build process that creates a minimized file to distribute, particularly given the way we have to create the extension for opera.\u00a0\n\nI've already started messing around with a python script to do some of this. Thoughts?\nPersonally I feel it could be a lot of work to train and maintain tabs on all the modules without this.\nOn Sun, Mar 31, 2013 at 3:49 PM, Christopher Wellons\nnotifications@github.com wrote:\n\nWe discussed this before, so here's a formal issue for it. Specifically, if modules are separated into their own files, maintaining the bitcointip module in parallel with upstream would be much smoother (making your job easier, too). Patches -- bugfixes and new features -- could go directory back and forth between the two.\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332\n. That's why I've been working with python where you have activepython for windows and easy ways to wrap build scripts in .bat files.\n\nIn terms of building it's pretty easy if you make both debug and release versions. The debug version is non-minified and thus the same workflow exists. Like you said, for release we build a minified version with a build step (which is basically require anyway) but for debug we use non-minified folder structures.\nI'd like to take a leaf out of the Firefox addon SDKs book and also allow you to start temporary profiles for each browser for testing.\nOn Sun, Mar 31, 2013 at 5:30 PM, honestbleeps notifications@github.com\nwrote:\n\nThe biggest reasons this hasn't happened yet (don't TL;DR this one!) were:\n1) barrier to entry for JS devs who don't have an OS where a build script is convenient... Windows just blows for this, for example... and is my primary platform for personal use.\n2) Legacy Greasemonkey support, which required build process in #1....\n3) Lack of multi-file support in browsers extension architecture....\n4) Adding a build step to the process during rapid debugging is actually a huge PITA and slows down the \"edit, refresh debug, edit, refresh, debug\" cycle that's often needed with the ridiculous amount of crazy DOM stuff going on...\nI believe, but I will need to test, that #3 is no longer a problem.  The reason I need to test is still order of loading - I don't know if all the browsers guarantee load completion prior to the next one - and unfortunately there are a couple of modules that rely on others having executed (or at least been defined) first...\nIf that's the case, I'm about ready to abandon Greasemonkey support anyhow.  The reasons to keep it before were:\n1) Memory issues in FF that weren't present in GM, only in compiled XPIs...\n2) Legacy support for FF3.6 which some small subset of RES users were stuck on in their corporate worlds much like people are stuck on IE8, 7, 6...\nSince 1 is no longer an issue, and the # of people affected by 2 is arguably negligibly small, I'm ready to abandon GM support at this point.\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692846\n. I just admit, that wasn't terribly clear and writing on my phone is not a good way to get my thoughts down.\n\nProposal:\nPython script builds both debug and release versions.\nRelease: minified single script, pack to appropriate file extension. I have this working for chrome and opera and presumably can just hook in to the addon SDK for Firefox. Need to look in to safari.\nDebug: start the browser with a temporary profile that points to a folder that contains the extension. Firefox, chrome and opera definitely let you do this. I'm pretty sure Safari does too, but I need to check. Then to edit the debug versions you just edit the folder and refresh that browser session. Also lets you start res without any other extensions.\nAlso, I would propose a single manifest file that contains all the information needed for each browser manifest file. This is then manipulated by the build script to build the appropriate extension format. Easy to keep track of dependencies and versions etc. probably some bastardisation of the chrome manifest format.\nOn Sun, Mar 31, 2013 at 5:41 PM, honestbleeps notifications@github.com\nwrote:\n\nnot sure I follow how that works...\nif we have all separate files, how is the debug version all one big file?\n are you suggesting the build process splits them?\nOn Sun, Mar 31, 2013 at 10:36 AM, Patrick Snape notifications@github.comwrote:\n\nThat's why I've been working with python where you have activepython for\nwindows and easy ways to wrap build scripts in .bat files.\nIn terms of building it's pretty easy if you make both debug and release\nversions. The debug version is non-minified and thus the same workflow\nexists. Like you said, for release we build a minified version with a build\nstep (which is basically require anyway) but for debug we use non-minified\nfolder structures.\nI'd like to take a leaf out of the Firefox addon SDKs book and also allow\nyou to start temporary profiles for each browser for testing.\nOn Sun, Mar 31, 2013 at 5:30 PM, honestbleeps notifications@github.com\nwrote:\n\nThe biggest reasons this hasn't happened yet (don't TL;DR this one!)\nwere:\n1) barrier to entry for JS devs who don't have an OS where a build\nscript is convenient... Windows just blows for this, for example... and is\nmy primary platform for personal use.\n2) Legacy Greasemonkey support, which required build process in #1....\n3) Lack of multi-file support in browsers extension architecture....\n4) Adding a build step to the process during rapid debugging is actually\na huge PITA and slows down the \"edit, refresh debug, edit, refresh, debug\"\ncycle that's often needed with the ridiculous amount of crazy DOM stuff\ngoing on...\nI believe, but I will need to test, that #3 is no longer a problem. The\nreason I need to test is still order of loading - I don't know if all the\nbrowsers guarantee load completion prior to the next one - and\nunfortunately there are a couple of modules that rely on others having\nexecuted (or at least been defined) first...\nIf that's the case, I'm about ready to abandon Greasemonkey support\nanyhow. The reasons to keep it before were:\n1) Memory issues in FF that weren't present in GM, only in compiled\nXPIs...\n2) Legacy support for FF3.6 which some small subset of RES users were\nstuck on in their corporate worlds much like people are stuck on IE8, 7,\n6...\nSince 1 is no longer an issue, and the # of people affected by 2 is\narguably negligibly small, I'm ready to abandon GM support at this point.\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692846\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692923\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693005\n. This is true, I hadn't thought about the accessibility of the code. Probably best to skip minification then.\n\n\nI was also just thinking in terms of making it easy to build the extensions for testing release versions. I'm fine to test the loading order. Still, there's a lot of redundancy in files right now and it would be good to just have one external libraries and one modules folder rather than copying them. Hard links don't survive git checkouts etc and it would be really annoying to have to constantly relink the files. That makes an almost mandatory build which may be easier as part of a process.\nI suppose a small batch script to relink files as a post commit process would also work.\nOn Sun, Mar 31, 2013 at 5:56 PM, honestbleeps notifications@github.com\nwrote:\n\nto be honest I'm not even sure a single file will become necessary.  Now\nthat all browser extension frameworks support multiple files, this may all\nbe moot.  I just need to test the order of ops thing.\nMinification is likely an unnecessary step at this point as well.  It\ndoesn't affect performance in any positive way since the file(s) not being\ndownloaded, it's already present locally.  It does nothing for actual JS\nperformance.\nAlso, minification might be a negative for some because at least in a\ncertain subset of the RES population, they're comfortable unzipping the\nextension, editing a file and repacking it when they really really want a\nbugfix that's not in a release yet...\nI think if we can just get separate files running normally in the browser\n(worst case I need to implement AMD or some such?) we wouldn't even need a\nbuild process.\nOn Sun, Mar 31, 2013 at 10:48 AM, Patrick Snape notifications@github.comwrote:\n\nI just admit, that wasn't terribly clear and writing on my phone is not a\ngood way to get my thoughts down.\nProposal:\nPython script builds both debug and release versions.\nRelease: minified single script, pack to appropriate file extension. I\nhave this working for chrome and opera and presumably can just hook in to\nthe addon SDK for Firefox. Need to look in to safari.\nDebug: start the browser with a temporary profile that points to a folder\nthat contains the extension. Firefox, chrome and opera definitely let you\ndo this. I'm pretty sure Safari does too, but I need to check. Then to edit\nthe debug versions you just edit the folder and refresh that browser\nsession. Also lets you start res without any other extensions.\nAlso, I would propose a single manifest file that contains all the\ninformation needed for each browser manifest file. This is then manipulated\nby the build script to build the appropriate extension format. Easy to keep\ntrack of dependencies and versions etc. probably some bastardisation of the\nchrome manifest format.\nOn Sun, Mar 31, 2013 at 5:41 PM, honestbleeps notifications@github.com\nwrote:\n\nnot sure I follow how that works...\nif we have all separate files, how is the debug version all one big\nfile?\nare you suggesting the build process splits them?\nOn Sun, Mar 31, 2013 at 10:36 AM, Patrick Snape \nnotifications@github.comwrote:\n\nThat's why I've been working with python where you have activepython\nfor\nwindows and easy ways to wrap build scripts in .bat files.\nIn terms of building it's pretty easy if you make both debug and\nrelease\nversions. The debug version is non-minified and thus the same workflow\nexists. Like you said, for release we build a minified version with a\nbuild\nstep (which is basically require anyway) but for debug we use\nnon-minified\nfolder structures.\nI'd like to take a leaf out of the Firefox addon SDKs book and also\nallow\nyou to start temporary profiles for each browser for testing.\nOn Sun, Mar 31, 2013 at 5:30 PM, honestbleeps notifications@github.com\nwrote:\n\nThe biggest reasons this hasn't happened yet (don't TL;DR this one!)\nwere:\n1) barrier to entry for JS devs who don't have an OS where a build\nscript is convenient... Windows just blows for this, for example... and\nis\nmy primary platform for personal use.\n2) Legacy Greasemonkey support, which required build process in\n1....\n3) Lack of multi-file support in browsers extension architecture....\n4) Adding a build step to the process during rapid debugging is\nactually\na huge PITA and slows down the \"edit, refresh debug, edit, refresh,\ndebug\"\ncycle that's often needed with the ridiculous amount of crazy DOM stuff\ngoing on...\nI believe, but I will need to test, that #3 is no longer a problem.\nThe\nreason I need to test is still order of loading - I don't know if all\nthe\nbrowsers guarantee load completion prior to the next one - and\nunfortunately there are a couple of modules that rely on others having\nexecuted (or at least been defined) first...\nIf that's the case, I'm about ready to abandon Greasemonkey support\nanyhow. The reasons to keep it before were:\n1) Memory issues in FF that weren't present in GM, only in compiled\nXPIs...\n2) Legacy support for FF3.6 which some small subset of RES users were\nstuck on in their corporate worlds much like people are stuck on IE8,\n7,\n6...\nSince 1 is no longer an issue, and the # of people affected by 2 is\narguably negligibly small, I'm ready to abandon GM support at this\npoint.\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692846\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15692923>\n.\n\nReply to this email directly or view it on GitHub:\n\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693005\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693126\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-15693234\n. I'm keen to do this - but would propose that I do it after we make the release? This way there's a sort of development freeze that will prevent the merging nightmare caused by splitting the files. Once this is done everyone needs to move to it quickly in order to prevent merging hell.\n. Yeah, I don't mind at all. Once the order is worked out once then it shouldn't be too bad. I'll make sure to comment the top of each file as to it's other module dependencies - let's hope we don't have any cyclic dependencies!\n. Since I feel we are nearing a release, take a look at this - this refactors out the bitcoin module (only for Chrome so far).\n\n\nDoes this look like a reasonable setup to continue on with? Includes a make_links.sh script which can be setup as a post-checkout hook in .git/hooks/post-checkout.\n. I did also include the make_links.sh file which should take take of that.\nWe keep the directory structures but just run that file to re-setup the\nlinks. Also, if you set that file up to run as a post-checkout hook then\nyou don't have to worry about switching branches etc.\nAgree that we can keep the main file (reddit_enhancement_suite.user.js),\nwhich we load last as that actually sets up all the modules and injects\nthem in to Opera. I think as long as we load that last it doesn't really\nmatter what order they get loaded in - because it calls all the preload\nfunctions - and thus the modules are all guaranteed to be loaded before\nthey get set up.\nOn Wed, Apr 10, 2013 at 4:34 PM, honestbleeps notifications@github.comwrote:\n\nit looks like a start, my main concern about modules being in a separate\ndirectory is making a user friendly-ish symlink / hardlink script that\nwill\nwork within all 4 extension directory structures... We still need\nreddit_enhancement_suite.user.js to exist I believe (silly Opera quirk,\nmust be a .user.js file) and will have to live in the same directory to\nmake symlinks less dirty, probably...\nthen again I've not yet had coffee and I'm groggy... but that's my only\nconcern thus far... that... and testing that order of loading doesn't\nbreak\nstuff!\nOn Wed, Apr 10, 2013 at 4:05 AM, Patrick Snape notifications@github.comwrote:\n\nSince I feel we are nearing a release, take a look at this<\nhttps://github.com/patricksnape/Reddit-Enhancement-Suite/tree/split_files>-\nthis refactors out the bitcoin module (only for Chrome so far).\nDoes this look like a reasonable setup to continue on with?\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-16162943>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/332#issuecomment-16182039\n.\n. @honestbleeps Have a look at my latest head of that branch - shows what I was talking about above. Other than resutils being first (because it defines the modules object), the modules seem to load fine by just loading them in alphabetical order. This is because all they do is populate the module object, they don't actually get loaded until the final loading of the reddit_enhancement_suite.user.js file. \n\nThe other option it to safeguard each module with something of the form:\nvar modules = modules || {};\nThen the modules could load in any order at all!\nThe other question is - how much do we want out of the userscript file? All objects? eg BrowserDetector, RESConsole etc?\nThese might prove to be more problematic in terms of loading - but nothing that making them load before the userscript won't solve.\n. Also, any merges from now on will be a bit of a nightmare - so would be good to push this through if possible. I've finally got time again because my paper deadline is tonight.\n. This is now in the latest version, no?\n. Small thing: night mode currently doesn't apply styling to the subreddit management shortcuts (sort, add, delete). Any chance we could fix that with this pull request?\n\n. Same here, works fine for me on Linux - Chrome 26\nOn Thu, Apr 11, 2013 at 3:25 PM, Gavin notifications@github.com wrote:\n\nWorks fine for me on a clean RES on Chrome 26 (stable) and Chromium 28\n(stable when it feels like it).\nI used\nworldnews/comments/1c3uj0/n_korea_missile_launchpad_moved_into_firing/http://www.reddit.com/r/worldnews/comments/1c3uj0/n_korea_missile_launchpad_moved_into_firing/as a test thread. Even loading comments within comments within comments it\nwas fine.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/351#issuecomment-16237579\n.\n. I'm interested in implementing this - but feel like it would be a separate module that only shows up for RESIssues and Enhancement. However, I'm reluctant to add a new module before we split the modules apart. Thoughts? @honestbleeps Shall I slap a pull request up for my module split branch? Or do we want to discuss the modularity better before we start splitting it up?\n\nAlthough, having thought about it, you might be waiting until you iron out all the hotfixes before splitting it up, which is fair enough really.\n. @tico24 Yeah, I can see from browsing RESIssues that this would be a truly massive boon. Would it be better to list ALL options, or just those that differ from the defaults?\n. Fixed in #360 \n. The commit rewrites history so that the IE commits never happened. Therefore, all the changes after I committed this need to be rebased on top of it and then master needs to be force pushed to the new HEAD. This HEAD represents the new history that never contained those IE commits. That latest push that deletes the IE code may cause an issue since it will try to delete items that never existed...\n. Can't you just rease the range of commits that are missing back on top of the current HEAD?\nOn Mon, Sep 2, 2013 at 10:50 PM, honestbleeps notifications@github.com\nwrote:\n\nugh, yeah I see it... is there a way to reopen those pull requests and\nreapply them?\nor I could cherry pick the commits if need be...\nOn Mon, Sep 2, 2013 at 4:46 PM, Kevin Ji notifications@github.com wrote:\n\n@honestbleeps https://github.com/honestbleeps I think you nuked some of\nthe commits from today.... uh oh.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23679527\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/451#issuecomment-23679646\n. Maybe using rebase --onto?\nOr cherry picking a range?\nI'm on my phone so can't be a massive help at the moment. Maybe this stackoverflow helps: http://stackoverflow.com/questions/1994463/how-to-cherry-pick-a-range-of-commits-and-merge-into-another-branch\n. @honestbleeps didn't he say 235kb?\n\n\n\u200bI'm not surprised its faster, the javascript engine guys have been doing alot of work on optimising this kind of code. You didn't say what browser you tested in (unless I missed it), but Firefox should be particularly good at this with OdinMonkey.\n\u200bAlso, I've noticed this when minimising RES myself, char is actually a reserved keyword in javascript so it's not surprising that it jokes. Really, that should be changed.\nOn Fri, Jun 28, 2013 at 5:59 AM, honestbleeps notifications@github.com\nwrote:\n\nhow big is the output? I thought last time we'd looked at emscripten /\nsnudown it was like a 2mb javascript file?\nOn Thu, Jun 27, 2013 at 11:08 PM, aidanhs notifications@github.com wrote:\n\nInitial testing and benchmarking looks promising.\nEmSnudown currently passes all Snudown sanity tests (SnuOwnd fails one\nedge case).\nSANITY\n=== BODY:\n/r/all-minus-something\n=== SNUDOWN:\n/r/all-minus-something\n=== EMSNUDOWN:\n/r/all-minus-something\n=== SNUOWND:\n/r/all-minus-something\n\nFAIL: 1\nSUCCESS: 51\nFAILED SANITY TESTS\nRunning through a few thousand random comments has EmSnudown, Snudown and\nSnuOwnd all producing identical results.\nBenchmarking shows EmSnudown as actually being faster than SnuOwnd which I\nfound a little surprising. I might play around with this some more and see\nif minifying SnuOwnd helps it. They are micro-benchmarks though and were\nrun on a virtual machine just to see if EmSnudown would be badly slower\n(apparently not).\nBENCHMARK\nPREPARING\nRUNNING\nTesting initialisation speed\nSnuOwnd  9.1412460804\nEmSnudown  8.01900315285\nTesting medium number of renders\nSnuOwnd  6.8896510601\nEmSnudown  5.82095980644\nTesting large number of renders\nSnuOwnd  5.66779303551\nEmSnudown  2.73442697525\nSize of a minified EmSnudown is 235KB. Size of the current unminified\nSnuOwnd is ~100KB. I can't actually check because closure compiler chokes\non variables named 'char', but uglifyjs suggests SnuOwnd might be reducible\nto about 33KB.\nThe current status is that EmSnudown seems to work, and reasonably well.\nGiven that RES currently (I think) only uses a single simple call to\nSnuOwnd it would be replacable as-is with a few line changes (and putting\nin the EmSnudown code instead of SnuOwnd).\nTodo:\n- it'd be nice if it was a smaller file\n- @gamefreak https://github.com/gamefreak mentioned callbacks for\n  sanitisation\n- benchmarks\n- better tests\nCode at https://github.com/aidanhs/emsnudown, tests at\nhttps://github.com/aidanhs/emsnudown/blob/79588aff539102adcc321f4634ca3f6f5d974d2d/test/test.py\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/452#issuecomment-20169468\n.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/452#issuecomment-20170549\n. Almost certainly this needs to be address with the Firefox guys. Sounds\nlike the kind of thing they would reject RES for (using unsafe Native\nobjects). I'm sure they could easily point us in the right direction -\ndespite the lack of documentation on initMouseEvent\n\n\nOn Wed, Jul 17, 2013 at 3:58 PM, Alamei notifications@github.com wrote:\n\nThe wrappedJSObjecthttps://developer.mozilla.org/en-US/docs/wrappedJSObjectproperty simply allows you to access the underlying javascript object from\nan XPCNativeWrapperhttps://developer.mozilla.org/en-US/docs/XPCNativeWrapper.\nFirefox implicitly provides you a wrapper in some cases for the sake of\nsecurity (see documentation on XPCNativeWrapper), but the wrapper only\nsupports certain features of its root object by design. Since Firefox 23\nhas a variety of security related changes, it is likely that one of two\nthings occured: (1) the relationship between the RES code and the window\nobject is now being classified as \"untrusted\" where it was not in the past,\ncausing you to receive an implicitly wrapped window object when you were\npreviously getting the real window object; or (2) the XPCNativeWrapper\nobject has been adjusted to no longer support some call that is needed to\ninitiate the mouse click event.\nSince the wrappedJSObject property essentially just evades the wrapper\nsecurity, it is considered somewhat unsafe in implementation, depending on\nwhat you're using it for. Since I don't really know exactly how the\ninitMouseEvent function works (and, as Hello71 notes, the documentation\nisn't great), I couldn't say whether it's \"safe\" to use wrappedJSObject in\nthis case or not. Someone with better understanding of the base functions\ncould probably chime in with a clear answer.\nThe wrappedJSObject property is unique to Firefox, as far as I know, so\nthis code shouldn't be considered safe for other browsers (though I haven't\nhad time to test it myself). I don't have significant experience working\nwith XPCNativeWrapper objects, so I can't recommend any particular\nsolutions to this issue, but I wouldn't recommend pulling this commit in\nits current state, since it's likely to break cross-browser compatibility\nand may be insecure.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/464#issuecomment-21118785\n.\n. You know, I'm not sure, but I can't imagine there are that many unicode password characters kicking around.\n. \n",
    "kevinji": "@honestbleeps Personally I think this should be closed, as this PR will likely never be complete and the current system seems to work fine.\n. @honestbleeps Personally I think this should be closed, as this PR will likely never be complete and the current system seems to work fine.\n. @honestbleeps I believe this should be closed in favor of the current parent hover popup.\n. If this is fixed can someone close this bug properly? @andytuba \n. If this is fixed can someone close this bug properly? @andytuba \n. @andytuba @honestbleeps Is this still an issue? I've done a search for .spam in the CSS and all I see are harmless entries for night mode.\n. Seems like all of the above are implemented in some fashion or another (though not via post-commit hooks), so closing for now.. @andytuba Here's an issue you probably forgot to close.\n. @andytuba Is this still an issue?\n. @andytuba Recreate this PR as well?\n. @honestbleeps Can you mark this old issue as fixed?\n. I just removed them from the head; I thought that'd be an improvement over the original repo. We still do need to rebase though.\n. Running the following on your local machine should work (note: this will take some time to finish):\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch -r IE/Release/'  --prune-empty --tag-name-filter cat -- --all\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch -r IE/Debug/'  --prune-empty --tag-name-filter cat -- --all\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch IE/ipch/bho5-a9477527/resie-abeb1384.ipch'  --prune-empty --tag-name-filter cat -- --all\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch IE/*.sdf'  --prune-empty --tag-name-filter cat -- --all\nshould do the trick. Then, to force push (and rewrite the repo's history), run:\ngit push --force --tags origin master\nAFTERWARDS, anyone else who had a repo before must force-rewrite their local and remote history (assuming that they're working with a fork). The easiest way is to delete your fork and re-fork the main project, then pull from your fork; however, if you do not wish to do that, follow the steps below:\ngit fetch --all --tags\nIf they have any branches, they must rebase them to the force-rewritten master first:\ngit rebase --onto upstream/master master [branch_name]\nThen\ngit reset --hard upstream/master\ngit push --force --tags origin master\nAnd cleaning up their repo afterwards is a nice idea:\ngit reflog expire --expire=now --all\ngit gc --prune=now\ngit gc --aggressive --prune=now\n@patricksnape I don't think that my commit should be an issue; it's not empty at least (it contains a write to .gitignore) and the file removes should be purged from the history.\n. @honestbleeps I think you nuked some of the commits from today.... uh oh.\n. That's weird, since my stuff shouldn't have affected it... are you sure you had an updated copy of the repo from the computer where you ran the commands?\nAlso, I should have an up-to-date copy of the master branch in my repo, so perhaps you could force update your master from my repo, and try again?\n. @patricksnape I'm not quite sure how you do that exactly... it'd be nice if you could tell us how.\n@honestbleeps If you can rebase the other commits back onto HEAD, that'd be great (though I'm not sure how to do so); otherwise, you can try the following (which is essentially going back to the previous state, and redoing the branch filtering) (I assume you're running this in master):\ngit remote add mc10 https://github.com/mc10/Reddit-Enhancement-Suite.git\ngit fetch mc10 master\ngit reset --hard mc10/master\nThen, re-run the filter-branch commands.\n. Can you cherry pick the rest of the commits into master?\n. Let's close this issue then.\n. @andytuba Can you recreate this PR after the file split/rebasing mess?\n. @andytuba Can you recreate this PR after the file split/rebasing mess?\n. Going to close this, as the RTS subreddit is closed.\n. @andytuba This PR should probably be closed (and the author should recreate this if desired).\n. Closing as symlinks do not seem to work for the foreseeable future. It's also likely that we'll move more towards favoring grunt.\n. @honestbleeps I believe this should be closed.\n. Do you by any chance still have the original image file? It's a bit difficult adding a transparent background that looks nice to an already-exported GIF.\n. Closing for now as it doesn't seem like a problem.\n. @andytuba I don't have the ability to close this bug, so can you close this yourself?\n. I have not, but from past experience using strict equality for typeof doesn't break anything, as typeof returns a string regardless of whether the object is defined or not. I'll reduce this to just the imgur commit though and test out the other changes.\n. Haha, it's not that difficult with a bit of Regex find-and-replace.\n. @andytuba This PR should probably be closed (and the author should recreate this if desired).\n. Alright, I confirmed that this should entirely fix #441.\n. @andytuba I do in fact fill in the username initially (it's the .text(username) call above the Ajax request).\nFor the API calling, I was wondering whether or not to restrict the calls to 30 seconds or more, as per the following, and if so, how to enforce this:\n\nMost pages are cached for 30 seconds, so you won't get fresh data if you request the same page that often. Don't hit the same page more than once per 30 seconds.\n\nAdding the account age may be useful, but it might make each username li too long. Here's an image of what it currently looks like:\n\n. I was more alluding to the possibility of a user refreshing the page constantly, causing unnecessary requests. My current idea to solve this is by 1) having the karma only load on either click/hover of the account switcher button, and 2) storing the karma and the last-requested date in the RESStorage, so if the user refreshes the page and it hasn't been 30 seconds (as an example), RES would use the cached data instead of fetching new data.\nThe reason why I didn't use a float was that I wanted to imitate the look of the karma when a user is logged in, as so:\n\nI do like the idea of making the karma smaller though.\nEDIT: I did not actually take a good enough look at RESUtils.loggedInUserInfo beforehand, I apologize for that. It seems like that would be perfect, so I'm adapting it so it can be used for any username (as you suggested), rather than just the currently-logged-in user.\n. Alright, this should now be fully implemented. Here's how it works:\n1. User adds user as an alt login in prefs. User refreshes the page.\n2. When user clicks on the account switcher icon, an Ajax request is made to fetch the user's information (as this hasn't been cached yet). Meanwhile, the dropdown loads, but only the user's username is displayed.\n3. Once the user's information is fetched, the user's karma will appear next to the username.\n4. Any additional clicks to the icon (with or without refreshes of the page) will cause the user's information to be requested again; if 5 minutes have not passed since the last request (as hardcoded in by getUserInfo), then the cached karma will still appear.\nIf there are multiple alternate user accounts, each's karma will load with a 500 ms delay between requests. I have not implemented any style changes yet, as we haven't decided on what would look best, so the current interface should look identical to my screenshot above.\n. I rebased this branch with master so there should be no conflicts with merging.\n. Alright, no worries.\n. Maybe \"toggle filters\" in the settings menu would sound better? Also, I'm a bit confused by what the \"enableToggleableFilters\" option does; isn't it redundant to the menu item? I agree with honestbleeps, this looks wonderful.\n. The latest code in the developer branch has not been packaged yet into a new release, so the issue still remains in the currently released version of RES. This will all be packaged up soon.\n. What's a sample link for modmail?\n. From a glance, these changes look fine (these are minor changes like removing unnecessary leading/trailing spaces), but someone else should take a closer look at them to be sure.\n. Closing this (now replaced) PR.\n. Closing this (now replaced) PR.\n. Perhaps RES could offer an option to remove the built-in reddit expando, until the reddit expando is either 1) more customizable or 2) contains almost the same features?\n. I think it'd be best to just bump the minimum Chrome version in Chrome's and OperaBlink's manifest.json to 26.0; adding extra conditional code seems (IMO) to just clutter the code, and it's highly unlikely that a user will not have upgraded to a version later than 26.0.\n. I think it'd be best to just bump the minimum Chrome version in Chrome's and OperaBlink's manifest.json to 26.0; adding extra conditional code seems (IMO) to just clutter the code, and it's highly unlikely that a user will not have upgraded to a version later than 26.0.\n. @andytuba @gavin19 Should we hide the \"try something else\" links as well? If so, I'll change span.nextprev to div.nav-buttons.\n. Alright done.\n. Hmm, that didn't appear to do the trick... you seem to have commits from another PR and duplicate commits. Have you tried running a git fetch upstream master (assuming you have this repo added as upstream) and then a git rebase upstream/master while you are switched to your branch? If that doesn't work, I think the easiest solution is just to copy your changes to a new branch and open up a new PR.\n. Hmm you do but you still have duplicate commits... that's funky. I believe you can remove the two recent commits with git reset --hard HEAD~2 as they're simply duplicates of the first two (minus a few changes to reddit_enhancement_suite.user.js), but make sure to check that all of your changes have gone through after you run the hard reset. After doing so, force push to your remote branch: git push --force origin master.\n. Yep, I've tested it to make sure this works.\n. I'm considering replacing this library with favico.js and seeing whether that helps at all.\n. I'm considering replacing this library with favico.js and seeing whether that helps at all.\n. That's completely understandable, I'll just let this sit then.\n. I will reopen this as a new PR since the files have been restructured.\n. I will reopen this as a new PR since the files have been restructured.\n. @honestbleeps I think this PR should be closed; if the author wishes to recreate this PR after the reorganization in a module then they can do so, but I cannot support its current, non-toggleable state.\n. Just curious, but is there a reason why you don't include a separate MediaCrush file into lib/ instead of embedding it straight into the (already enormous) reddit_enhancement_suite.user.js file?\n. @andytuba Actually, for this, I manually changed the spaces to tabs, as I saw the spaces change creep in with a pull request, though I suppose Sublime Text's reindent could work. Here's my Preferences.sublime-settings file, if it helps you with anything:\n{\n    \"auto_complete_commit_on_tab\": true,\n    \"auto_complete_selector\": \"(source) - (comment, string.quoted)\",\n    \"auto_complete_with_fields\": false,\n    \"color_scheme\": \"Packages/Base16/base16-monokai.dark.tmTheme\",\n    \"font_face\": \"Consolas\",\n    \"font_size\": 13,\n    \"highlight_line\": true,\n    \"ignored_packages\":\n    [\n        \"Vintage\"\n    ],\n    \"rulers\":\n    [\n        80\n    ],\n    \"soda_classic_tabs\": true,\n    \"soda_folder_icons\": false,\n    \"spell_check\": false,\n    \"theme\": \"Soda Dark.sublime-theme\"\n}\n. I think // works differently in the context of an addon. You can build the latest version of the XPI yourself: create a symbolic link from /lib to /XPI/data, download the Mozilla Addon SDK, run activate.bat in a command line window, then run cfx init after you've cd-ed to /XPI to run Firefox immediately with the RES addon, or cfx xpi to create an XPI file that you can install in your any Firefox profile (I recommend not using your default profile).\n. @honestbleeps This should now be a merge-worthy PR, but you should check the commits to make sure I didn't accidentally make a breaking change. I've left GM_xmlhttpRequest alone, as it will likely require some major rework.\n. @honestbleeps This should now be a merge-worthy PR, but you should check the commits to make sure I didn't accidentally make a breaking change. I've left GM_xmlhttpRequest alone, as it will likely require some major rework.\n. I believe this code should actually work now\u2014the weird back-forward issue has been fixed from my testing.\n. Yep, I've tested in both browsers.\n. @andytuba Do you still want to test this out or am I clear to merge this in?\n. +1, though I prefer thirdparty -> vendor. If we commit to a grunt build approach, it would also be possible to use bower to manage all of our third-party packages, and remove the actual third-party files from our repo (they'll just be in .gitignore).\n. +1, though I prefer thirdparty -> vendor. If we commit to a grunt build approach, it would also be possible to use bower to manage all of our third-party packages, and remove the actual third-party files from our repo (they'll just be in .gitignore).\n. There, now we should have a clean PR.\n. There, now we should have a clean PR.\n. Fixed by #2916.. I don't think this is as easy as OP makes it out to be, as RES does not detect whether or not the link includes a video/image or not; instead, it simply uses the URL as a guide. Any other Google Docs links that do not link to a video/image would incorrectly have expandos.\n. Video sites have differences in utility; as @joey5755 and @SirCmpwn show above, both intend their websites to be used for slightly different purposes. I'd recommend creating certain predefined \"modes\" or \"looks\" for videos, and allowing the website owner or the community to switch \"modes\" if desired. Perhaps one mode could have controls above or below the video, while another mode could have overlay controls. I would prefer still including play/pause buttons on GIF replacement sites, as that is one of the advantages (I'd say) of using actual video in place of GIFs.\n. Should be superseded by #2916.. That's exactly what you should do. Now, create a PR!\n. Superseded by #1260.. @andytuba I think this can be closed.\n. @andytuba I think this can be closed.\n. Looks like the site is indefinitely down :(. Closing for now.\n. I think the main thing is to make the option clearly visible; I, for one, didn't know there was a \"Remember me\" option until I saw this issue.\n. Going to close this in lieu of a (to be made) more broad fix to #868.\n. Also #465\n. For reference, here's an example of a wiki history page where the issue appears.\n. You should assign this to yourself!\n. I think this is pretty much done, but feel free to reopen if it isn't.\n. Really minor nit, but for consistency's sake, \"Bug Fixes / Maintenance\" should be \"Bug fixes / maintenance\".\n. Is it possible to store the list of files in a single location (likely a JSON file) and then have a build script build the manifest.json files (or something equivalent for Firefox)?\n. Personally I think it'd make more sense not to check in the autogenerated files, and have the developer generate the files themselves by running the grunt task.\n. @andytuba Do you plan on merging this in sometime? You'll have a huge merge conflict for sure but it's probably doable.\n. This should fix #233.\n. I don't know if this is possible if Flash needs to be run within the iframe expandos (I'm looking at you, YouTube); thoughts @andytuba?\n. I don't know if this is possible if Flash needs to be run within the iframe expandos (I'm looking at you, YouTube); thoughts @andytuba?\n. Related: #668\n. This was totally my bad, thanks for the fix. Just a minor thing: in your commit message, \"form\" is a typo and should be \"from\". You can amend the old commit and then force push your new commit if you want to change it.\n. Is there anything else that needs to be done with this?\n. Marking this as fixed as the latest version has been approved by Mozilla.\n. This exists now; see https://github.com/honestbleeps/Reddit-Enhancement-Suite/projects/1.. Haha I'm thankful my miniscule changes aren't included in your changelog @andytuba.\n. For easy reference to the original commit: https://github.com/SirCmpwn/Reddit-Enhancement-Suite/commit/1c78c1d39ef825ac25591bf1ddca1a378d7f8d5c\n. These should be in separate objects. It may make sense to drop the RESUtils part as well, and create wholly new objects (e.g. Reddit.__).\n. The concern I have with this is that these images are likely fairly unrelated so this might turn into something like the Utils class. \n. Wrong link; you probably meant http://www.reddit.com/r/Enhancement/comments/25tfmj/feature_request_dailymotion_on_reddit_like_youtube/\n. Oh whoops I forgot to write unit tests, silly me.\n. Gonna close this unless it can be reproduced.\n. This is really minor but you should indent with tabs, not 4 spaces. Also, your second commit did not get attached to your account; if you want it to be associated with your account, you can either add me@mattpalermo.com to your GitHub account, or amend the commit and adjust the email address used.\n. Or not because the pull request was merged in. You can still add the email to your GitHub account if you want.\n. To expand this, we could use a code style enforcer like JSHint and JSCS similar to how jQuery does it. Possibly useful: Let tools define JavaScript style\n. The ESLint checking should be sufficient.\n. I think 8 hours is a good idea, let me update that.\n. Rebased to resolve the merge conflict.\n. Hmm I thought Git was smart with resolving automatic merge conflicts? From what I've seen, if the changes don't affect the same areas of a file, I think no conflict shows up.\n. I've manually fixed the conflict myself, so this should be good to go.\n. Hmm that's weird my makelinks.sh was working perfectly fine, but I'll defer to you.\n. Relevant: #1029\n. @honestbleeps This should also be closed; I thought my comment in #1284 would close this bug.\n. I did: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/usernameHider.js#L161\n. Going to close this for now; if this is reproducible, feel free to reopen.. Gonna close this as too out of scope, unless someone else wishes to comment.\n. This is no longer a WIP and is fully functional, at least with my testing. Also fixes #1157.\n. Going to close this as superseded by #2182.\n. Or you could just clear localStorage.\n. Fixed by #1333 and #2170.\n. Related: #1260.. Haha I'm actually good this time.\n. I can confirm that this bug shows up.\n. @honestbleeps This issue should be closed.\n. Whoops my bad, thanks for the fix.\n. Doesn't the try/catch and the null tests in the specific functions ensure that even when the move functions are called, nothing will happen?\n. I think it's better to spend a few extra lines for more readable code, even if the part isn't important. Sticking everything on one line forces people to think through the logic, which is not too difficult but still requires mental effort.\n. I still think that it is important, just in case we have a subtle bug there. Would moving the \"getting the version\" code into a separate function (like getOptionsVersion) and then just calling var RESOptionsVersion = RESOptionsMigrate.getOptionsVersion(); in the main function work for you?\n. Alright, done.\n. Wait that duplicated the commits...\n. Why is it Enable? Since you're hiding the options, the opposite should be to \"Show\" or \"Display\" them. Sure, you can enable a special \"special options mode\", but you show the options.\n. What if I add \"everywhere\" to the end of that, so it becomes \"Show advanced options everywhere\"?\n. jQuery updates? Since we're staying with the version 1 line we should be okay I think.\n. Ohh okay I was unaware of that.\n. Rebased to master.\n. Alright this should fix #1411. The only question that remains is whether we should keep colorCommentScore on by default (in which case, we should probably also keep colorLinkScore on by default as well).\n. I can replicate on Firefox: \n. Sweet it looks like it's working now.\n. I can't seem to reproduce this bug with the latest dev builds; @honestbleeps are you able to?\n. I can replicate this issue, but it isn't related to automatic night mode. The user must have disabled the entire nightMode module while keeping the nightModeOn switch on. For some reason, night mode is still being displayed even with the module disabled... hmm.\n. I can replicate this issue, but it isn't related to automatic night mode. The user must have disabled the entire nightMode module while keeping the nightModeOn switch on. For some reason, night mode is still being displayed even with the module disabled... hmm.\n. Found the culprit of the issue: L13 in utils.js; this only checks if the localStorage token is set, but does not check whether the nightMode module is disabled.\n. Found the culprit of the issue: L13 in utils.js; this only checks if the localStorage token is set, but does not check whether the nightMode module is disabled.\n. Yeah, this is an issue we have when we use Tinycon. See also: #669\n. Yeah, this is an issue we have when we use Tinycon. See also: #669\n. Going to close this as a WontFix, as it does seem quite pointless.\n. We should write a base function that determines the base URL of these links (as HTTPS links currently have a different format).\n. Related to #1442.\n. I can replicate this issue, but I'm not sure why it happens... perhaps userTagger#L731?\n. I'm pretty sure it's fixed by https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/422048e5788fdf93bb6a26293ca9ae166c6c14bf, thanks @matheod!\n. Consistent repro: Will do if I find one.\n1) Firefox.\n2) I move the mouse off the image. No scrolling at all.\n3) Haha yes I don't hit the keys. It's usually not an image that's right next to the one you're viewing, but maybe one like 3 back. In a single album, if this problem shows up, it consistently goes back to the same picture in the album.\n. This is pretty much done, so closing.. Do you have an example of where this bug shows up?\n. Ohh your comment \"Settings are all default with only inline gfycat viewer enabled\" explained why. I can confirm that this bug appears when convertGifstoGfycat is enabled.\n. I'll take a look, but no guarantees (for now). It does seem like the placeholder element isn't being generated: missing a makeMediaZoomable call somewhere possibly?\n. Going to close this as a works for me; if someone can demonstrate a case where it's broken, feel free to reopen.\n. Possibly related to #1526?\n. Hmm it looks okay on my browser; what browser do you use and what size is your browser window?\n. Can you visit the nightMode settings page, enable \"Night Mode\", but set nightModeOn to off? Probably related to #1433.\n. For the nightModeOn option to work, you have to change the setting and then refresh the page for night mode to turn on/off.\n. Going to close due to staleness; if this is still a bug, feel free to reopen or make a new issue.. I personally don't think this needs to be an option: after all, it doesn't really make sense to ever stay in NP mode.\n. Squashed into a single, nice commit.\n. Does Jetpack not already support e10s? Bug 567703 - Integrate electrolysis (e10s) into Jetpack SDK \n. Does Jetpack not already support e10s? Bug 567703 - Integrate electrolysis (e10s) into Jetpack SDK \n. Closing as the linked bug is marked as fixed.\n. It's possible that some commits to address e10s issues in the Add-on SDK have gone through but not all of them have, which is why 930164 is likely still open.\n. Alternatively, we could just allow the user to edit multi-reddits as a list of subreddits, and do the plus-ing internally.\n. Alternatively, we could just allow the user to edit multi-reddits as a list of subreddits, and do the plus-ing internally.\n. I can't replicate this issue; is there a specific browser/OS combo that this needs to show up?\n. I can't replicate this issue; is there a specific browser/OS combo that this needs to show up?\n. I think leaving picshd is okay, since the image host is still up.\n. That's a really nice and clean commit :+1: \n. All we have to do is remove ours, correct?\n. Believe this is a dupe of #1466.\n. Done! I've defaulted the hover functionality to be \"on\" though.\n. Alright, I've addressed the concerns above.\n. Never mind, this is fixed in the latest release.\n. Fixed by #1722.\n. I believe it was to set inBackground to a boolean if it wasn't one, but my code is buggy for sure. Just dropping the || true is fine.\n. I'm not that sure about the inBackground removal; that code is necessary for the RES setting to \"open in a new tab\" to work.\n. Thanks for the heads-up! I'll file that as a new issue.\n. This looks fine to me.\n. I'm wondering whether the sidebar functionality should be generalized so that it isn't raddit-specific... Thoughts @andytuba @honestbleeps?\n. @Igglyboo Just an FYI: you should add your email to GitHub to ensure that your commits are tied back to your account.\n. Can you change your indentation so that you're using tabs instead of spaces?\n. I believe you'll need a migration for the filteReddit changes, unless I'm mistaken @andytuba\n. This is no longer a WIP. I have not fixed 100% of the errors but I've caught a good percentage of them. Most of the remaining errors come from the use of i as a loop variable multiple times (we can replace this with forEach more often!). I believe this is good to go.\n. Done with the changes from .every to .some, which I agree with (unless I missed one).\n. Going to merge this in now that v4.5.4 is released... please report any issues that come from merging this.\n. :+1: to this, but this needs to be rebased/merged back in.\n. Going to mark as \"works for me\" unless someone else can reproduce this.\n. :+1: for the design. Have you tested out the karma boxes for users with a ton of karma and made sure that the numbers do not spill out the boxes?\n. Is this still a problem?\n. Now that v4.5.4's released I'll close this.\n. Actually, I think it'd be more consistent to add newlines after each section (to be consistent with previous changelogs), but thanks for the PR anyways.\n. This looks good to me!\n. Is npm install not sufficient since we've added them to devDependencies?\n. Looks ok for me; any thoughts @andytuba?\n. Looks ok for me; any thoughts @andytuba?\n. Yuss.\n. We do have escapeLookups already, so we could just use the reverse of that object.\n. That's usually why you use a separate branch for each PR, so you can keep your master branch clean while you mess around as much as you wish in your branches.\n. That's usually why you use a separate branch for each PR, so you can keep your master branch clean while you mess around as much as you wish in your branches.\n. Thanks!\n. Original commits:\n- browsersupport, console, storage, utils, accountSwitcher, dashboard, changelog, wikiCheck: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/1ffa12fe2866e32b27ed31df9d1471a03861ff70\n- browsersupport, console, utils, accountSwitcher, dashboard: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/b7cf02a4ae9dc8985a75dea8b2088a89a6ad1681\n- commandLine, newCommentCount, submitIssue: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/96ebd34ca225cfb3ebdcc273b4d2fbbb77da08a4\nFixes made already:\n- storage: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/2911a06ea46a5249dd95676457cb813e7076db86\n- showImages: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/1ad4522f846de8d4936d2e1059915e27398e2b5e\n- console:\n  - https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/817740ac93bb91f7c2c1e1eda655c4118a2710a4\n  - https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/72aa079739042c5d562c79c622f539821f235f7c\n  - https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/d49b5bf9b71db3f60bd7cd62b80d4bd2ec80caff\n- browsersupport: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/6664aa0de9befc3a4fdc0720763bb6ec3bcf6a32\n- accountSwitcher: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/4e3e58c9eb8dd9258c97b6579fc431e529ddc3d8\n- changelog (reverted back): https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/8188ec94dce2554871a66bd94d5b6af647c4b1a1\nAffected files I have checked:\n- [x] browsersupport\n- [x] console\n- [x] storage\n- [x] utils\n- [x] accountSwitcher\n- [x] dashboard\n- [x] changelog\n- [x] wikiCheck\n- [x] commandLine\n- [x] newCommentCount\n- [x] submitIssue\nEverything looks fixed to me, though another set of eyes, especially on console, would be welcome.\n. Original commits:\n- browsersupport, console, storage, utils, accountSwitcher, dashboard, changelog, wikiCheck: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/1ffa12fe2866e32b27ed31df9d1471a03861ff70\n- browsersupport, console, utils, accountSwitcher, dashboard: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/b7cf02a4ae9dc8985a75dea8b2088a89a6ad1681\n- commandLine, newCommentCount, submitIssue: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/96ebd34ca225cfb3ebdcc273b4d2fbbb77da08a4\nFixes made already:\n- storage: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/2911a06ea46a5249dd95676457cb813e7076db86\n- showImages: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/1ad4522f846de8d4936d2e1059915e27398e2b5e\n- console:\n  - https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/817740ac93bb91f7c2c1e1eda655c4118a2710a4\n  - https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/72aa079739042c5d562c79c622f539821f235f7c\n  - https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/d49b5bf9b71db3f60bd7cd62b80d4bd2ec80caff\n- browsersupport: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/6664aa0de9befc3a4fdc0720763bb6ec3bcf6a32\n- accountSwitcher: https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/4e3e58c9eb8dd9258c97b6579fc431e529ddc3d8\n- changelog (reverted back): https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/8188ec94dce2554871a66bd94d5b6af647c4b1a1\nAffected files I have checked:\n- [x] browsersupport\n- [x] console\n- [x] storage\n- [x] utils\n- [x] accountSwitcher\n- [x] dashboard\n- [x] changelog\n- [x] wikiCheck\n- [x] commandLine\n- [x] newCommentCount\n- [x] submitIssue\nEverything looks fixed to me, though another set of eyes, especially on console, would be welcome.\n. Are we minifying existing options to save space on existing installations?\n. Are we minifying existing options to save space on existing installations?\n. Relevant: #844\n. Relevant: #844\n. Does the code in this PR fix #844?\n. Does the code in this PR fix #844?\n. Yes, we need to update our CSS as well. I'll look into that.\n. I've updated the CSS, though I didn't add in the guider_content h2, guider_content td, .guider_content td + td, and .guider_content td code blocks. Any idea what they were for?\n. I don't have a copy of Opera to test on, but this change works fine on Firefox.\n. :+1: Thanks for fixing this annoying bug.\n. :+1: to these changes. I'm guessing you could also supersede #1871's changes as well?\n. It's probably been enough time for people to get used to this change, so I'm going to close this issue.. Going to close this for now; if you'd like to make a more finely-tuned comment removal, I'd be happy to merge that instead.\n. This should be closed by #2916 right?\n. Is this good to go? If so, I'll merge this in. (Just asking as I use the grunt build, not the gulp one.)\n. Maybe make red versions of the expando buttons? The stripes are pretty subtle.\n. Yep!\n. master != release; if you checked out the releases page you'd see that we haven't had another release yet since v4.5.4.\n. Fixes #239.\n. Closing this as there isn't any direct bug related to RES code, but feel free to make a submission to r/RESissues.\n. This has already been fixed at around L660.\n. Yesyesyes\n. It's definitely possible for one of us to create an API key (probably @honestbleeps), but we'd likely need to keep that key publicly in the repo, making it easily for someone else to just steal our key and send requests using it. It may be possible to include a config file that isn't checked out to the repo, and make sure that the build process checks for this config file, but that seems a tad annoying.\n. We should honestly just decide to drop one or the other. I'm fine with either way but I guess that should probably be a separate issue.\n. It's not just an issue with the beta search bar; it also breaks for the normal site's search bar if you have no search results. (Too lazy to get screenshots, but it breaks the exact same way as above.)\n. It's not just an issue with the beta search bar; it also breaks for the normal site's search bar if you have no search results. (Too lazy to get screenshots, but it breaks the exact same way as above.)\n. Do old futurism.co links still redirect properly? If so, I think we should also keep support for links using the old domain.\n. Do old futurism.co links still redirect properly? If so, I think we should also keep support for links using the old domain.\n. My question is just in the detect function, shouldn't you reference the old links as well, using href.indexOf('futurism.co') !== -1? (A separate .com seems unnecessary as futurism.co is a subset of the phrase futurism.com.)\n. My question is just in the detect function, shouldn't you reference the old links as well, using href.indexOf('futurism.co') !== -1? (A separate .com seems unnecessary as futurism.co is a subset of the phrase futurism.com.)\n. Looks good to me!\n. Looks good to me!\n. Huh, has anything changed recently? It's odd that it'd break so randomly, but I'll take a look.\n. You can probably merge this in... Toolbar should be gone.\n. Hmm maybe that's the problem... perhaps localStorage is getting trashed across subdomains? I'm assuming we still use localStorage for our own RESStorage.\n- use localStorage across subdomains\n- Can HTML5 databases and localStorage be shared across subdomains?\n. I can't figure out the ANM issues, but I'll merge this in anyways as a minor improvement.\n. Rebased to the latest changes on master.\n. Personally I'm more of a fan of all-caps comments but it'd be more practical not to require them.\n. Thanks! It's better than nothing, I'd say.\n. Can you rebase this onto master and fix the conflicts?\n. Can you also address the lint issues that are failing the PR check?\n. Everything looks good to me, thanks!\n. Whoops thanks for that.\n. Looks good to me, but if anyone complains about the MAX_ROWS we can always tweak it later.\n. Oh we deleted the files but I remember sticking those folders in gitignore to make sure they'd never come back.\n. Also you might want to check the JSHint errors--you might have introduced a few bugs.\n. Would it be possible to just attach the hostname to the URL? This seems like a somewhat ugly way to fix the issue.\n. Huh after playing around with it my regex seems a bit brittle if the URL isn't perfect, like https://www.youtube.com/watch?&av=b1WWpKEPdT4&v=dQw4w9WgXcQ would fail to work properly. I think you should revert back to what you had before.\n. Already fixed by https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/81c1f05b83a73ec85311be7c62e91323a0c2ecdf.\n. @callahad Not honestbleeps, but I think it's probably better to split into two PRs so we can at least merge one of them in. Cherry picking is kind of annoying.\n. I'm personally not a fan of removing the trailing slash off root URLs (like https://www.reddit.com/), as copying them from the address bar will just copy them with a /, and the / is not actually absent\u2014browsers just hide it. For trailing slashes off URLs like /r/Enhancement, I think the general guideline is what the site defaults to, which (in the case of Reddit) is to keep the trailing slash.\n. Uhh what are the files in node/storage?\n. +1 this is cool.\n. This should be properly merged into master as well.\n. gulp build -b Firefox packages all of the files and moves them into the proper dist folder. The link you provided actually refers to Grunt, not gulp (confusing, especially since we still have both build systems). So yes, it is necessary to build the XPI.\n. Should be fine. You probably want to pull, delete your node_modules, and re-run npm install, as a good amount has changed on the dev branch. I'm going to close this for now unless any further issues appear.\n. Sounds good! Some minor things:\n- I think it makes more sense to call the branch release (without the s).\n- Version hotfixes should probably just increment the last number instead of adding a -hotfix; what if there are two or more?\n. Works for me.\n. Our current scheme has been working reasonably; closing.. This needs to be updated to support the new .scss files.\n. Did this PR ever get merged into release-4.6.0?\n. Merged with merge conflicts manually handled.\n. Merged with merge conflicts manually handled.\n. Hmm reinstalling global gulp seemed to fix the problem. I'll leave a note in the README.\n. I believe I covered all the spots in the README.\n. Yep, works for me. Thanks for the FYI.\n. Huh guess gulp treats the second argument as a task name... oh well. Closing for now unless I can find an alternative.\n. Looks like this is done with https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/bfab4197eb80999b2905883c995c57e27ae341a8.\n. @andytuba These need to be merged into master as well.\n. This has already been running for a while, so closing.. I cherry-picked the other QUnit work on master, and after merging this, everything seems to work fine.\n. I cherry-picked the other QUnit work on master, and after merging this, everything seems to work fine.\n. @andytuba This should go into master as well.\n. We should also mention that building on Windows is kind of a pain; see also nodejs/node-gyp#629.\n. We should also mention that building on Windows is kind of a pain; see also nodejs/node-gyp#629.\n. Should be fine.\n. Alternatively, change the description to be 1000, as everyone using RES right now defaults to 1000.\n. Alternatively, change the description to be 1000, as everyone using RES right now defaults to 1000.\n. r/RESissues posts:\n- https://www.reddit.com/r/RESissues/comments/40i3i2/bug_100_cpu_usage_after_updating_to_460/\n- https://www.reddit.com/r/RESissues/comments/40gtoi/bug_100_cpu_usage_on_chrome_mac_os_yosemite/\n. Can we just use MutationObservers and drop the document ready check?\n. I'm not sure if that's the only issue; we should definitely profile and see if anything else turns up.\n. This is close (probably close enough), but the link doesn't point to the specific image in the album, which RES does for any other images when you press prev/next. Do you know where the code is for next/prev links?\n. Thanks!\n. Nope.\n. Is it possible to style the Twitter expando so it looks similar to the one with injected JavaScript?\n. @erikdesjardins It might be better to squash this into fewer but larger commits to simplify commit history, but it's obviously up to you.\n. That's fair. Also, the mentioned babel issues have been resolved, so is babel good to go?\n. @andytuba Didn't realize this got sent automatically... I was just playing around with Gitter.\n. 4.6.0 released; haven't tested with 4.6.1 yet, but will do so soon.\n. Doesn't seem to be a problem anymore on 4.6.1; gonna close unless reproducible.\n. Actually, on second thought, this seems like it could incorrectly cache the wrong versions of files. Closing for now unless Travis has a better solution.\n. Going to close this unless someone can still reproduce this issue.. This should probably be merged in sooner rather than later to avoid any more merge conflicts.\n. Hmm, so the commits are actually different on the branches. We should probably ditch the release/4.6.1 branch after that release is over and build a new 4.6.2 one based off master so history doesn't diverge too much.\n. That makes more sense. :+1: \n. Yeah, RES settings randomly disappear at times during upgrades, so the best bet is always backing up settings. I don't think this is reproducible, so I'll close for now, but feel free to reopen if you run into the issue consistently.\n. Can you fix the style issues Travis mentions?\n. ^ I'm going to decline for the above reasons. I think it's reasonable to expect users to run npm install before running any further scripts.\n. Closing for now, as this is pretty old; if this is still a problem, feel free to open a new issue.. That EPS file is a good 6.67 MB. Since it's one commit rewriting history might not be too bad, but it'll still be annoying to do.\n. This has been unnecessary for a while since we have https://github.com/Reddit-Enhancement-Suite/assets.. @BenMcGarry Minor issue, but you should probably alter the email on your local Git install so future commits get tied to you.\n. What was this all about?\n. Closing, as sli.mg is down.. Can't reproduce this anymore; feel free to reopen if this is still an issue.. We should probably wait for the release after the initial v3 to wait for any initial bugs and kinks to be worked out.\n. Hmm seems like a new \"update\" triggered and fixed the issue, so closing for now. The error messages in the browser console were very undescriptive when I checked them out earlier, so hopefully this doesn't reproduce?\n. Closing for now; if the above solution doesn't work or if this is a recurring issue, feel free to reopen or create a new issue.. Firefox 51 is now stable. We should begin this process, though we'll technically have until Firefox 57 until we are required to use WebExtensions. It might make sense to wait until Firefox 52 for the ESR release to ship, though.. Is the yarn.lock supposed to be checked into version control?\n. Closing, as issue was fixed.. It's finally stable!. Ahh, I didn't know that. I've worked with TypeScript before, but generally it needs a bit more help specifying types everywhere.. If you follow these instructions, then you should be able to run Flow locally. (I think it's npm run flow to run the Flow checker.)\nAdding new commits is fine, as we squash all your changes into one commit before merging anyways.. Any reason why the Flow checking is failing? I don't think I wrote my await ajax call differently than the other call sites.... My bad, I didn't notice the tag. Feel free to revert if you'd like.. Once this is done, #3323 can be closed.. That's fair. We can wait to merge this in until Travis adds yarn to their images. I'll add the install commands in at that time.. I removed the use of Travis's own yarn, as it prevents us from having a custom install phase. This PR now only modifies the cache section.. Looks like https://github.com/travis-ci/travis-build/commit/0f4b9f68dcfe1c215827b188dd77c747c797eb5a is the relevant change.. I don't think this is easily solvable until all: revert is implemented by browsers, as the expando is just an inline element in the post/comment, so the expando will be wrapped with <em></em> elements. Simply overriding the <em> styling could break any italics within the expando, which would also be undesirable. Since there's an easy fix to this most of the time (just apply the styles within the link text), I'd say it's probably not worth to fix at the moment.. That makes sense. Any other styles you can think of besides bold, italics, and strikethrough?. Is this on a specific subreddit? The 100s look okay to me on the front page.. Hmm that's odd, I can't reproduce with either Firefox or Chrome. My guess is that the script that dynamically changes the CSS isn't running for some reason; should be these lines in neverEndingReddit. Do you have any non-default NER options on? Are there any errors in the browser console?. Hmm for me that style is present but is overridden by \ncss\nbody.res > .content .link .rank {\n  width: 3.3ex;\n}\nso the three-digits look okay. Is that inline style not appearing?. Latest release v5.4.3.. Going to close due to inactivity; if this is still an issue; please feel free to recreate or reopen the issue.. You can still use sudo-less builds for updating Yarn; just specify the specific version of Yarn you want.. Should visibility: hidden or display: none be set to avoid (temporarily) covering up the page with this div?. If you wanted to keep quick compose, you could attach a click handler to the \"Message\" link and have it show RES's compose panel instead, probably with an option to turn off this functionality.. Is this related to #1777?. I believe some dependencies require node-gyp, which requires Python 2 to be installed, for their build process.. This is super cool! One thing I would vote for is to use Redux as well, if we're planning on doing a rewrite anyways, as it's easier to start with it than to port something over to using Redux.. I haven't looked too closely at this but https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/0e78ba8f31b8e4a1b1416c8a2c67ec3fb2504e16/lib/core/module.js#L81-L90 and https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/0e78ba8f31b8e4a1b1416c8a2c67ec3fb2504e16/lib/modules/search.js#L191-L207 seem like good places to start.. Good catch; seems like the issue is fixed but not yet released. We'll need to add a shim similar to this for Edge to work.. I added a polyfill for Edge, so this should be mergeable. I don't have Edge to test with though.. Sounds good to me, thanks for the help!. Ah okay, makes sense.. Seems reasonable to me.. Hmm I'm not sure if I'm in favor of this; I just tried out addLine and it's a lot more subtle than setColors, especially on a wide screen, where you have to glance across the screen to see the indicator. If we migrate this for everyone, there will likely be a lot of complaints.. Guess the AVA changes depend on 1.0.0-beta.2, so this PR might not be separate-able if they don't release a non-1.0.0 release.. Looks like the issue's resolved, so closing.. Hmm, looks like the build failures were spurious, but upgrading the image doesn't hurt.. Closing for now; let's revisit this once jwt support is fully removed.. I see both #RESConsoleContainer and #console-container used; what is the difference between the two?. Closing; there isn't a better way of distributing addons except via the official site.. I have not tested this feature; I can probably get around to doing so tomorrow.. I have not tested this feature; I can probably get around to doing so tomorrow.. At a brief glance it seems like iloopit is still around?. I think the URL format is still the same, and it looks like it's still being used (NSFW).. You should be able to find old versions on the AMO website; I think you can disable auto-updating if necessary.\nWe generally bump the minimum version required if there's a feature that's only supported on a later version. We most recently bumped Firefox to v57 and later because openerTabId was only added in that version.. You're in a tough situation that we can't really support; any version as old as 5.6.x probably has a bunch of bugs that were fixed in later versions, and any more recent versions depend on features that don't exist in your browser. You might be able to get away with installing one of these incompatible versions and disabling the version check, but there's no guarantee that it'll work.. I don't think you should rename the file; \"Install Add-on from File\" when it's a zip should work.. Is it possible to add a few tests to check that the generated regexes are what we expect? This will probably be helpful to avoid regressions.. I have tested this (at least in the Firefox SDK; I don't think the browser should matter though). p.titlerow > a still works of course, but it's very much roundabout, and appending the button is quite annoying.\n. Very minor nitpick but you should remove the comma here.\n. This doesn't seem like it's being used anywhere.\n. Wouldn't the double bang !! coerce subscribe to a boolean as well?\n. Just curious, but is there any reason why we don't use encodeURIComponent instead here for the href of the link?\n. Minor nitpick: add a semicolon, or drop the subscribeToggle on the next line and chain the calls together.\n. Minor nit: You added a few extra spaces to the end of the line.\n. Minor nit: These should be changed to tabs too.\n. Nit: the } should be on a new line.\n. Minor nit: Missing a semicolon.\n. Isn't this never true, as this is equivalent to === undefined?\n. Done.\n. Personally I don't believe it is the responsibility of RES to redirect the user to the desktop site. There are two possible scenarios:\n1. The user wants the mobile site. This change would prevent them from using it.\n2. The user does not want the mobile site. It is easy enough just to remove the m from the URL.\nI personally think that if this is a feature, it should be toggleable, defaulting to off.\n. Nit, but https? is a bit simpler.\n. Again, really minor style issue: spaces after if and before {. Same with the else and the if below.\n- classList.contains() rather than className.indexOf()\n. Above change would prevent the need to change this. Just a hint: using non-capturing parentheses (?:[stuff]) prevents you from having to worry about them.\n. Sounds good, let me back out the change.\n. Yes.\n. Really really minor, but I prefer leaving the newline at the end of every file.\n. Really minor thing but I think this line should be indented; same for the css and resources arrays.\n. This should be updated to 4.3.2.\n. Really minor but for consistency's sake I think tabs should be used over spaces.\n. Wait, this file is autogenerated? I thought grunt generates the actual file from this file.\n. This might be overkill, but you could have a file just called version.js with the single line var RESVersion = \"4.3.2\";, and include it before all other files, with the manifest having /* version */ instead of 4.3.2. I think that file should be easier to generate.\n. I think I'd personally prefer this to be /\\/r\\/([-\\w\\.]*)\\/?/ to make the last slash optional and to make the regex a little more restrictive.\n. I believe this should be urlRegex.exec(thisSubreddit.href)[1] as .match only returns the array of results, which does not include capturing parentheses, while .exec does include capturing parentheses.\n. All instances of this should probably just be replaced by BrowserStrategy.sendMessage() and this function should be deleted.\n. Just curious, but is there a reason you use the bracket notation instead of using BrowserStrategy.storageSetup?\n. This can simply be openOnReddit.click since openOnReddit is already a jQuery object: ideally, you should rename it to $openOnReddit so it's clear that it is a jQuery object. Same with the showDiv variable above.\n. Minor nit: spaces after the commas (ditto below)\n. A comment for this (like \"removing the extra initial comma\") would be helpful.\n. This is just a thought, but perhaps the \"Open on Reddit\" should be all lowercase to match with the style before.\n. I just want the hours and the minutes though, not the exact moment, so I'm not sure whether Date.parse will work.\n. That's a lot more involved than simply doing some string operations though.\n. Should just be \"tab\"\n. The for loop just seems like an ugly hack though...\n. Wait... don't you want a while (true) instead? As it stands, this do... while loop will do basically nothing.\n. I think it'd be much simpler to just use an if else here but I guess this works.\n. I think this can be renamed to just migrate (doMigration sounds passive and awkward).\n. I think we can leave this unless an Opera 12 user hits a bug relating to this.\n. I personally think that because the module itself uses the userbar, it should live as a property of the userbar. If you prefer, we can prefix \"private\" properties with an _ to indicate that they shouldn't be used by external code (similar to Python convention). We should probably discuss how modules should ideally be structured though. (Also, it's easier to do it this way if you just want one $.extend haha)\n. It actually works though; the previous line did not (at least in Firefox). jQuery resolves a ton of cross-browser compatibility issues. Also, lines 184 and 190 use the same syntax, so looks aren't really an issue.\n. @andytuba Per your request, I've removed the specific commit that modifies userbarHider.\n. This could just be count--;.\n. I think this is missing a typeof (though this code will never run...).\n. Maybe set notificationOpened to true in here? I'm not quite sure how the callbacks work.\n. @honestbleeps I'm not sure how to create these events... is there any function somewhere that gets called when a module is disabled?\n. I'm pretty sure node uses semantic versioning which is why I didn't include it in, because it only allows three numbers.\n. I would too, my bad for missing that.\n. I'd really prefer to not have HTML unless absolutely necessary, as this is a security risk. If absolutely necessary, use $(element).safeHtml(...) instead of innerHTML directly.\n. \"searchig\" -> \"searching\"\n. \"pannel\" -> \"panel\"\n. I don't quite know either... oh well.\n. I'm pretty sure RES is the only place where HTMLPasteurizer exists.\n. Oh whoops my bad.\n. I think it's better to check explicitly for undefined. Also, I think it's reasonable to assume keyArray is properly initialized before.\n. From what I can see optionObject.value cannot be undefined, which is why I think it's ok.\n. Minor nit: Indent with tabs, not spaces.\n. Ditto.\n. The only call of drawUserTagTable that passes in descending passes in a boolean.\n. The !needle and !haystack checks at the beginning of the function should be foolproof.\n. Is the stopPropgation necessary? In the past, this has been a subtle source of bugs.\n. Minor nit: This is over-indented.\n. Wouldn't it be simpler just to call RESUtils.isCommandKey(e) here and remove the commandDown variable entirely? Also nit: prefer === over ==.\n. thisHREf should actually be thisHREF (note the capital F). Variables are case-sensitive.\n. Nit: This line would preferably look like if (thisHREF.substring(0, 2) === '//') { (yeah it's really minor).\n. Thanks for the catch.\n. Is there a way to grab just the username portion? (Maybe look for /u/?)\n. I think you lost the description.\n. Can you make this comment a bit less intrusive? A standard // comment would be fine.\n. Ditto.\n. Just curious, but is there a particular reason why you're using a capturing listener?\n. Very minor nit, but these lines should use single quotes.\n. Just for compatibility's sake leaving in the , false for the last parameter doesn't hurt.\n. Wouldn't it be better just to use the HTML &nbsp;?\n. Ditto.\n. We should really just create a type for numbers...\n. Same as above.\n. This line (and a few lines afterwards): you should probably replace the 4 spaces with a tab.\n. We should probably review how many of these !important rules are necessary.\n. The merge conflict in this file didn't get resolved properly.\n. Bump (sorry for being annoying).\n. Minor concern: should be indented with a tab.\n. Should probably add \" around the width and height attributes.\n. This link should probably be replaced with # so it doesn't break until we get a proper page working.\n. True, but it's not of immediate concern, so don't worry too much about it.\n. Are these changes necessary since the hosts files are included in the modules folder?\n. Probably unnecessary but you can simplify these lines a little bit using reduce instead of forEach.\n. I think the first line should just be\nfunction(/*types*/) {\nwith no argument actually passed into the function.\n. Maybe leave a comment here saying that the lack of typeof is intentional?\n. forEach would simplify this a bit :P\n. Random semicolon here\n. Semicolon unnecessary here\n. Indentation got kinda messed up here\n. Does this mean that calls to localStorage will act the same way as before, just that we're now using SQLite?\n. Oh thanks for catching that!\n. There is Array.prototype.find, but it's only natively supported by Firefox. I've tried to use the one that made more sense but in this case I'm not quite sure which it should be.\n. Looked like the rebase went successfully.\n. Perhaps in a future PR; I think it's ok for now.\n. Hmm revertVote was never inside onVote to begin with, so I'm not sure what you're referring to...\n. I think you can drop the false as the return value of this function isn't used.\n. Is there any reason why .commentingAsUser was included in the first place? @andytuba \nEDIT: From the git blame it seems like https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/4b75251808f3295b9d9bc2c86e93f5e49feacb72 was when this was first introduced, suggesting that hover info was attempted. Do we want it to succeed or are we scrapping it entirely?\n. I'm pretty sure you need to add an event.preventDefault() somewhere if you're converting to a # URL.\n. I'm personally ok with removing the break statements but they were probably there just for clarity.\n. You should escape the periods so they don't match every character, like so: \\.\n. You accidentally a ] after \"Reddit Enhancement Suite\".\n. Is there a way to combine zip tasks into a single one that takes in a browser parameter?\n. Yeah something like that!\n. I'm pretty sure you can chain .done callbacks together, assuming documentBodyReady returns a $.Deferred object.\n. You can probably shorten documentElementReady, documentHeadReady, and documentBodyReady to documentReady, headReady, and bodyReady, respectively, without confusion.\n. It doesn't seem like any of our code uses $.browser so we should be able to drop this complete code without issues.\n. I thought we dropped support for Greasemonkey?\n. This should probably be changed.\n. Ditto.\n. I believe this ID should be changed to a pornbot-specific one.\n. Should this be newIndex++ or ++newIndex? In any case, I think it'd be much clearer if we moved the increment right before or after the line.\n. That's a good point, I'll do that.\n. The original code matched linklist as well (you can check the pageType code), but I agree, I'll revert these changes.\n. You should probably just attach a $ in front of the variable name to distinguish it as a jQuery variable.\n. I'm a bit confused... what's the difference between these two functions? Is there any reason why we'd call the first?\n. You probably don't need the Array.prototype.slice.call part, since .things should return a jQuery object, so you can call .each(index, thing) instead.\n. Also, maybe call .get here to convert it into a normal array?\n. Do we ever need $things? I feel like we'd only ever need the array of the elements all wrapped (though I guess I didn't look too closely to see where we used it in code).\n. Is the bind here necessary?\n. Nit: We prefer the functions without this extra space.\n. Nit: This brace should go on the previous line.\n. Nit: Brace on line before.\n. Nit: Use commas\n. Think we can narrow down the highlighted part a bit more, maybe with \\/watch\\?(?:[^&]+?&)*?v=([\\w\\-]+). I don't know how valuable that would be though.\n. Shouldn't we be flipping this, doing mod, then submitter, then friend? Seems like the latest rule should trump all the rest.\n. I think it's best to just alphabetize the elements here.\n. Minor nit, but you should use === instead of ==.\n. Odd, I see http://stackoverflow.com/questions/31987465/ecmascript-2015-const-in-for-loops too. I'll change it to fix Firefox, but hopefully Firefox fixes their implementation of const.\n. Something happened to indentation here...\n. Try something like \njs\nconst userLink = downcast(document.querySelector('#header-bottom-right > span.user > a'), HTMLAnchorElement);\nMake sure to import \njs\nimport { downcast } from '.';. I don't think so; I think it's just the error object from\njs\nthrow new Error(`XHR status ${response.status} - url: ${url}`);\nIf there's a nicer approach I'm all ears.. If you do a null check here you might be able to avoid the later link && code? Not entirely sure how Flow checking works though.. You'll need to remove the ! at the beginning of this line.. To get the Flow type checker to not complain, you should probably use separate variables for the string and the number versions of the times.. I sent a PR to Travis, hopefully they fix the issue.. This should be fixed on Travis's end.. You could simplify this by dropping the isMajor and isMinor cases.. Are all of these newlines necessary?. That makes sense. I guess it's up to you which of the two you prefer.. What happened here?. I believe you're going to need to add embed, to this object if you want to use that above URL.. Should this be over https?. execRegexes should be imported.. I think you need ?string[] instead of undefined | string[].. Extra space here.. These lines could just be return cachedEmailAddress || '';. I think this would be cleaner if you flipped the inequality; i.e.\nreturn distance / title.length < 0.05;. Is the index no longer necessary? It's still being used in Chrome's background.entry.js.. I believe this should be frontpageLink.href !== link.. I think that\njs\nconst seconds = timeInSeconds % 60;\nconst minutes = Math.floor(timeInSeconds / 60) % 60;\nconst hours = Math.floor(timeInSeconds / 3600);\nis a bit simpler to understand.. This section can be shortened to\n```js\nconst time = [minutes, seconds];\nif (hours > 0) {\n    time.unshift(hours);\n}\nreturn time.map(part => String(part).padStart(2, '0')).join(':');\n``. Not sure how I feel about this function being here, as it's only for YouTube.. Sure, sounds good to me.. @erikdesjardins I don't really understand Flow; is there a way to force the pattern matching after this line to work? I tried adding anobjTypefield but it seems like it's not enough for Flow to distinguish between the differentImagetypes.. Not entirely sure why this variable is necessary; can't you just usegoModeActivedirectly? Also, I think it's worth considering not checking forgoModeat all, if it would always make sense to escape NP mode.. This can bepath: string | null, which is slightly stronger.. I believe the second type here should bemodmail2xCompose.. Nit: can you alphabetize this?. I think @larsjohnsen is suggesting to combine the deconstruction and type definition by replacingoptions: { newWindow?: boolean, leaveNP?: boolean }entirely with that snippet.. Islocation.originsupported on Edge? The [MDN page](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/origin#Browser_compatibility) says that compatibility info is unknown.. This is the only shortcut where I might consider settingleaveNPtofalse, since we're still browsing the same subreddit.. Can you remove the^here?. This could begetElementByIdinstead.. This should be a fixed version.. Hmm, since we can get the locale vialocale, maybe we can replace all of therequire` lines with a single require(`dayjs/locale/${locale()}`); call?. ",
    "aggrolite": "Something went wrong in your commit, unless you meant to erase the entire file. ;)\n. What's the benefit of making this change, other than paranoia?\n. ",
    "aperson": "My editor may have messed with the tabbing when I saved it.  I'll close this pull request and see what happened.\n. The only thing I can think of changing it to offhand is 'rts'.  I'll poll\nsome other mods and see what they think.\nOn Mon, Mar 19, 2012 at 1:55 PM, honestbleeps <\nreply@reply.github.com\n\nwrote:\nyep.. any suggestions on what to change the text to that's not\nlong/obtrusive?\nOn Mon, Mar 19, 2012 at 1:13 PM, aperson\nreply@reply.github.com\nwrote:\n\nNow that we have a spam button on link listings for moderators, there\nare two buttons labeled as spam.  I think we need to come up with either a\ndifferent wording or a way to differentiate it from the reddit button.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/82\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/82#issuecomment-4580788\n\n\nnosrepa@gmail.com | moc.liamg@aperson\n. And thank you for fixing it!  Hope you've been liking github!\nOn Mon, Jun 25, 2012 at 11:45 PM, honestbleeps <\nreply@reply.github.com\n\nwrote:\nfixed for next release, looks unique to that feature, thanks!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/158#issuecomment-6566941\n\n\nnosrepa@gmail.com | moc.liamg@aperson\n. That only works for top level comments, correct?  That's too much crud to have to style each comment depth.\n. No, it does not work.\n. This fixed it for some, but deeper nested removed comments still have a white background.\n. I'm looking at /r/Minecraft specifically for testing this.\n. This works perfectly.  Thank you.\nI am not going to close the issue as this is a work-around to something that the RES breaks.\n. Done.\n. ",
    "bcjordan": "This happens with direct links. It renames .gif to .jpg.\nOn Jan 29, 2012, at 6:26 PM, honestbleeps reply@reply.github.com wrote:\n\nthe eho.st admin had told me extensions would always be jpg.\nthere is no way for RES to work well with eho.st without an API here when people don't post direct links.\nconsidering eho.st sees only a few posts a day (in fact none in the past 3 days), I don't really feel this is worth pursuing until a properly \"consistent\" means of URL conversion exists.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/62#issuecomment-3712394\n. Gotcha, I'll try writing a fix. Thanks for taking a look.\n. \n",
    "ucavus": "Sorry, just go to your user overview page with username hiding and infinite scrolling on, scroll down and the subsequent pages have your real username. I assume it would also fail for own submissions when scrolling down the home/subreddit pages.\n. cheers, thought it'd be a quick one.\n. ",
    "dhensche": "I know this is a pretty stale issue, but do people still want the ability to have a collapsible comment box (configurable)? We now have a 'back to top' button in the comment navigator, so maybe this can be closed?. Oooh, I like that idea @andytuba. I could probably whip something up. Is this a request to add this description to the title attribute of the li element in the navbar so that it shows on hover? \nIs it also desirable to show the full description like in search results (just escaping the HTML)?\n. okay, I'll get something going tomorrow\n. Okay, so the 'first sentence' part is a little bit trickier than I had expected \ud83d\ude04 . There are sort of 3 cases I need to deal with:\n1. No tags in the description -- easiest because I can just take up to the first period\n2. Description is completely enclosed in a tag -- I can wrap with jQuery and just fetch the text content and select up to the first period again\n3. Description eventually has a tag -- select up to first tag and then within that text select up to first period?\nDoes this sound reasonable?\n. @jkcchan have you done any work on this? If not, I can look into it. Is the request to add the settings gear/link to the tabs under the Dashboard link (My Dashboard, My User Tags, etc) if there are options for the tab/module?\n. Starting some work on this -- https://github.com/dhensche/Reddit-Enhancement-Suite/tree/multi-counts\n. Are you envisioning something like this?\n\nWhere the orange 2 indicates how many multis the SR is in?\n. Is there work being done on this? I think I could put something together if I understand how it applies (which number of comments should drive the decision to expand depth)\n. looks like the issue is in the _startShowTimer() function:\n``` javascript\n_startShowTimer() {\n    this.mouseEvent = 'enter';\nif (this.visible && this.mouseEvent === 'enter') {\n    // Close and reopen container.\n    this._cancelShow();\n}\nthis._cancelShowTimer();\nthis.showTimer = setTimeout(::this._afterShowTimer, this._options.openDelay);\n\n}\n```\nFor the selected multi, there is a gap between the bounding box of the li element that the mouseover event is attached to and the popup. If you move your mouse too slowly the above function is executed which immediately closes the popup and queues it be reopened in the openDelay (default of 1s). We could either override the style on the selected multi (reddit applys a margin-right: -8px; padding-right: 8px) to be 0 all around so there is no gap or have the above method maybe set the timeout to 0 if it is already visible (effectively closing and reopening the popup immediately).\n. I'd like to contribute on this, but I'm not 100% sure what the requested change is. Are you saying if a user clicks on a specific multi link from the left sidebar several times (5?) we should no longer show the nav menu that usually appears when they hover over the link?\n. I really like the solution you are working on there. Adding the capability for feature enable/disable to be a bit smarter. \n. I'd like to help with this, but I can't seem to replicate the issue. I left a comment on the reddit thread, but does anyone here know how I can test this issue?\n. hmmm, I've logged out and hovering over i.redd.it links still pops open the Imagus expanded view. Here is a screenshot of behavior\n\n. The Imagus sieve configuration doesn't really have any documentation so I can't quite figure out how it is still working\n. If you go to the reddit thread mentioned above, you can see the Imagus maintainer fixed the issue on the Imagus side in the latest release - https://www.reddit.com/r/imagus/comments/54za6b/res_breaking_imagus_try_this_setting/d942knd/\n. Thoughts? I just sort of jumped in without fully digging in to see how all the options operate, but the actual CSS class used for this bodyClass type option is .res-commentPreview-swapBigEditorLayout. I'm guessing it is generated based on the modulID?\n. @andytuba How do I edit the body of the PR message?\n. Duh, I thought my first message at the top of the PR Conversation page was a comment, not the PR message body.\n. Whoops, too many branches locally... I thought I had left that in my other branch.\n. So I think the npm servers were having an issue when the AppVeyor build was supposed to happen...\n. If it is desired I can change the implementation (when the load child comments option is enabled) to load the bottommost links first, resulting in all links in the viewport when scrolling stops being loaded (instead of lower ones being pushed offscreen).\n. What sort of profiling information would you want? I haven't noticed any impact to scrolling during testing but obviously it working on my machine is not indicative of performance on other machines\n. looks like the .ban-details class is no longer finding a parent form/div for the textarea. Looks like the form could be selected with #banned or .friend-add. Any preference?\n. I may have missed it, but are there any plans to show some sort of notification when a feature gets disabled? I see you have future plans to highlight features that have been disabled due to penalties, but I'm wondering if notifying them when it is disabled might be a good idea. A user may not even be aware that some behavior was a feature and then it just disappears on them? Just a thought\n. Someone with more knowledge on the keyboard nav can correct me, but it looks like numbers are already used as individual key commands when viewing comments. They are used to open the nth link in a selected comment. I also am unsure if there is any support in the keyboard nav module for sequences of keys (pressing 5 then j).\nThat being said, I think this would be a cool feature.\n. @erikdesjardins left a comment about leaving the numeric text option default values as strings right before I committed the change to plain numbers. @andytuba should I revert those back to strings before merging in?\n. could be wrong, but it looks like maybe on the ajax post reddit is replacing the form/textarea so the edit bar and/or preview area are not attached to the new textarea. need to rebind after post?\n. This current solution is gross (sets an interval to check for when the HTML has been replaced after the post and then reattaches the preview and tools). I know there has to be a more RES way to do this but I'm busy at work right now so I didn't have time to investigate \u2639\ufe0f \n. That's what I was thinking, but saw a bunch of warnings about it not always being available in a browser? Also, my js is a little rusty. I'll look into using the observe utility method in the dom utils\n. good point, it's been a little while since I've used some of these css selectors :grin:\n. okay. I had understood #2803 as only wanting the settings gear if there were additional options for the module\n. For the second point, it was to deal with links to i.giphy.com which have links with the following format: http://i.giphy.com/MhR4xjfLE2eNq.gif\n. I'm fine with removing the special html5 logic. Based on the data returned from the giphy api, I didn't think it was necessary either but didn't know if there was another reason to keep it around.\n. In order to match those links I'm proposing the end of the regex be changed from (\\/html5)?.*$ to (?:\\/|\\.gif|$). This way we will match the i.giphy type links, media.giphy links and the direct links like http://giphy.com/gifs/snl-saturday-night-live-snl-2016-3o6Ztj4hKkTXF4u7eg \n. will do, the filter was left over from a previous implementation where I was actually using all the items returned from visibleLoaders\nEDIT: It looks like jQuery find does not support passing in a function to do the matching with. Any ideas?\n. What about eagerly breaking out of the filtering function? something like \njavascript\nlet found = false;\nreturn loaders.filter((i, el) => {\n    if (found) return false;\n    found = elementInViewport(el);\n    return found;\n});\nnot a huge fan of using the flag though...\ncould also use $.each and break out once an element in the viewport has been found\n. okay, I wasn't sure where to put this call. What would be a better spot?\n. I figured it should be cached, just was unsure how that worked (is the caching smart so that if a user edits/creates a multi the cache is invalidated?)\n. ah yes, debugging statements...\n. the 'getMultiCounts' just returns a blank string if the count is 0, resulting in no extra HTML being added. If you have a better solution, I'm all for it\n. yeah, I always have night mode on so I noticed the difference immediately :smile:\n. so for the getMultis function, I was just copying the pattern I saw for getSubreddits. I guess I'm unsure if you want a rewrite of the function, move the call to the function to load the multis, or both.\n. Totally forgot about possible option migration issues when doing this rename\n. yeah, I can update all the fields to be a plain number if desired\n. I had wondered if there was a way to tie the default values I put in the table to the currently configured global default value\n. @erikdesjardins so should I revert my change to move these to plain numbers?\n. This change is going to break any of the basic filters that use a regex. Might need to refactor how the post filters work to accept regex flags in order to fully implement this change\n. Probably need to keep some of this block around as well to handle regexes\n. do you mean adding the filter type (postTitle, linkFlair, etc.) to the option itself like this?\njavascript\nkeywords: {\n    type: 'table',\n    addRowText: '+add filter',\n    filter: 'postTitle',... // like this for example\n. I'm cool with that. Probably makes the most sense, as the calling code should most likely only need access to the target (Thing container)\n. can I just use the selector .usertext-edit textarea to check for existence of the comment area? I don't know of a better way using existing utility functions. ",
    "vlazzle": "Understood, thanks for the explanation @honestbleeps.\n. It may also be worth noting that with this code, new images that are added after using the infinite scroll thing are not automatically expanded. \n. ",
    "umbrae": "\nAh, I didn't realize RES had its own pool. I can check that out.\nYeah, I know, but I also felt like it was... cleaner? It seemed pretty verbose to have that scope everywhere. I can change if necessary for inclusion.\nThat'll vary pretty heavily by how often people hide comments, but with a back of the envelope calculation, let's say a person hides 10 comments per link, and it stores up to 500 links and then prunes, that's about 5000 id-strings of around 10 characters each, so around 50KB + JSON overhead? The pruning is also configurable in the source, we could drop it to the most recent 250 articles, for example.\n\nThanks for the feedback.\n. Ok, no problems there, the post limit is absolutely configurable and RESStorage should be simple to implement. I'll get those changes in and then maybe a quick UI check.\n. Forgot to note that those changes are all set. Feel free to kick it around whenever you have a minute!\n. Just wanted to quickly follow up with some stats here - I've been happily using this for a couple of weeks, and I currently have 53 keys in my storage, using a total of 15KB of storage space. So at 100 keys I suspect approximately 30KB of space. Not much.\nI did notice that I'm not using the right namespace for RESStorage, I'll go ahead and fix that. If someone wants to give this a dry run and see if it's useful to them, I'd appreciate it!\n. It's already using RESStorage, I just need to change the namespace. I can do that right now.\n. ",
    "Dither": "Also jQuery-plugin can be fixed (and simplified to remove unused modules) to display chart of percent of upvotes instead of upvote/downvote ratio.\n. ",
    "thelinmichael": "This issue should be closed as defect has been fixed.\n. This issue should be closed as defect has been fixed.\n. ",
    "luisgonzalez": "Found a little bug (easy to fix) for not testing =) just add the parameter to the function definition and everything should be fine\nLine 7012 applySubredditStyleToInbox: function(html) {\n. ",
    "sztomi": "That's great to hear!\n. ",
    "olivdube": "Added RES functionality for www.memefive.com\n. Any idea if this will make it into your next release?  Did you have any other concerns with this addition?\n. The site is getting around 3000-5000 hits per day currently.  However not having RES support really hurts the visibility of posts.  Hopefully this commit can be considered.  Thanks!\n. You're a good man ;)  I appreciate you giving it a chance...had one of my busiest days for traffic today..75k+ hits.  Nearly brought the server down.\n. ",
    "jabagawee": "I assume that this commit will never make it into RES unless memefive.com gets hugely popular.\n. Referencing issue #149\n. Oooh, my bad for not checking. However, I still think there's some merit in putting it somewhere more obvious, since I'm sure someone else would make the same mistake as I did and miss that license. Thoughts?\n. ",
    "spencerhakim": "@honestbleeps, for some reason I was under the impression you were on a Mac. I wrote this using Cygwin, although since node.js isn't a package there I had to use their (really simple) installer, which thankfully automatically adds node to the PATH.\nI considered the issues raised when writing this, but came to the conclusion that the benefit outweighed the cost. I could easily revert the more breaking changes and essentially make it just a JSHint checker. It's a bit hard to figure out how exactly you go about debugging since I'm not really familiar with your workflow. Any input is appreciated.\n. Agreed. Working with a 19k file is kind of a pain. Splitting it up would also allow for selectively including browser-specific code. Obviously all that is a far bigger step and something to worry about later on, but as RES continues to grow having the groundwork in place would probably help. Yes, it gets in the way of rapid testing of small changes, but you should be able to perform a lot of those changes within Chrome's Dev Tool script editor anyway.\n. Why would that even be necessary? We wouldn't necessarily want to minimize the code since people like to sometimes insert their own custom code. Using cat/sed is certainly sufficient.\n. Minification shouldn't affect performance as far as I know unless it was also attempting to rewrite/optimize the code. Theoretically it'd make it slightly faster to parse, but that'd have a negligible impact. Network transmission is the only real beneficiary of minification, and that's not applicable here. It's also not the point of this pull request.\n. No worries, I run Windows on all my machines and also need it for my job (C# dev), so I wouldn't dream of suggesting \"get linux you doofus.\" You should run it through JSHint, though, plenty of tiny things in there that might be worth fixing (I had to disable several checks just to find some more glaring issues). Keep up the good work, man.\n. Still doesn't address his issue with debugging concerns, which is understandable. I wonder if the larger JS projects have a better solution than just Edit, Compile, Test, Repeat.\n. I was more thinking about someone who isn't as familiar with the code trying to debug it. They might find a bug in the compiled file and have to figure out which module to edit. Again, it's not a huge problem, it just makes it slightly more difficult for newcomers, which is his concern. In the end, he made his decision.\n. ",
    "Uglemat": "Hm that's odd that people would say that. :)\nI think you could satisfy both types of people if you keep the option enabled, but instead of showing [RES ignored dublicate image], it could say something like,\n[RES ignored dublicate image (show)]\nWhere you could click \"(show)\" and it would display in the inline image viewer albeit it is duplicate, and you could click on the other links surrounding (show) to get to the first duplicate. That way, people can open the image there if they really want, but they will still feel that the image is ignored (Which is what matters, I guess). :)\nThe downside to this is that \"[RES ignored dublicate image (show)]\" is kind of long, even without (show) it is long.\n. I was thinking of implementing this, but reddit_enhancement_suite.user.js was inside jid1-xUfzOsOFlzSOXg@jetpack.xpi, and it seems like I need to restart firefox each time I change the file in the archive. I wish it was simpler.\n. ",
    "ksnavely": "Submitted a pull request after implementing this change.\n. ",
    "drwelden": "I'm closing this issue. The problem is with imgur's API. Look at http://api.imgur.com/2/image/Eyfks.json as an example. The url it's returning is an entirely different hash than Eyfks.\n. ",
    "joelpt": "I'm about to release an extension which tracks the opener/opened relationships between tabs and presents them in a hierarchical treeview in a persistent sidebar. Pretty much like \"Tree Style Tabs\" for Firefox.\nOpening links within reddit comments while RES is enabled is one of the cases I have found where the tree does not construct properly, due to the absence of the openerTabId parameter. As far as my extension can tell, these new tabs have no opener or \"parent\" to associate with, so they just show up \"loose\" in the treeview, as though they were opened from the address bar.\nAs far as I know there is no downside to including this parameter, and from a quick review of the code it looks like the value should be readily available, as e.g. sender.tab.id.\n. I have started working on this feature. So far I have it functionally working but not yet properly integrated with the RES code and \"expando\" methodology used in that code.\n. Until I turn this into a proper patch for RES, here is a gist of the working prototype which works using Chrome and an extension like Personalized Web. \nAnyone may feel free to transform this into an RES patch before I get around to it.\n. ",
    "imd": "I'm using Debian Iceweasel.\n. It's not because I have third-party cookies disabled, because I use the same profile at work on Ubuntu with Firefox, and it works there.\nI realize that technically Iceweasel is not Firefox, but it's what most Debian users use. It would be nice if RES worked with it, too. I believe it is the same codebase, with a few patches on top.\n. I take back what I said about third-party cookies; enabling them does fix this. However, this seems to be Iceweasel-specific, since with 3rd-party cookies disabled, Firefox still works.\n. ",
    "nm3210": "I forgot a parenthesis! Forgive me.......resubmitting! See pull/187 for the new one.\n. ",
    "BailinGao": "There's already SlashSearch for Chrome which does exactly what you described, just not specific to reddit or cross-browser compatible.\n. ",
    "Krenair": "\nThis is completely pointless and an attack on a specific community.\n\nAs Honestbleeps says, by hiding this, SRS is picking a fight with the RES community. Not the other way around. This commit is targetted at SRS specifically because I am not aware of any other subreddit to do such a thing. If there are more, please, do tell me, and I'll make sure I keep an eye on their CSS as well.\nHonestbleeps, I'm disappointed that you won't allow blacklisting certain subreddits' CSS abilities altogether, but maybe there is some compromise we can find? Maybe we can find a way to automatically add specific subreddits to everyone's CSS ignore list, allowing them to simply re-enable the subreddit's CSS if they want to (instead of hacking RES's JS file)? If you won't allow that either, I do have another idea which involves generating names of certain elements at runtime for certain subreddits, which should make it a lot harder to hide the style button.\n. ",
    "XXXLBUCK": "You fags need to stop acting like reddit royalty, you're all basement dwellers like the rest of us, im not affiliated with any sub in particular, I'm an unbiased 3rd party observer, and in all hoesty it seems like you all are dicks, now fucking quit acting like republicans, and leave people the fuck alone, you act like assholes on a public forum, people are allowed to show you acting like assholes, now leave people be, and go about your business.\n. ",
    "lolsail": "\nXXXLBUCK wrote: and in all hoesty it seems like you all are dicks, now fucking quit acting like republicans, and leave people the fuck alone\n\nThat was a pretty brave comment, man. Very fuckin' brave.\n. ",
    "hikari-no-yume": "You know, RES could just override the CSS with JavaScript at runtime to make sure that checkbox is always visible.\n. ",
    "Laurelai": "@honestbleeps \n\n2) CSS is not supposed to be used to \"control\" subreddits. It is an optional feature, it does not affect apps, and many >of the things that mods of more \"controversial\" subreddits do are actually against Reddit's TOS.\n\n[citation needed]\n\nHiding downvote buttons is against Reddit rules. \n\nNot according to reddit admin heuypriest http://www.reddit.com/r/modhelp/comments/hwke0/proposed_clarification_on_css_hacks/c1yyt3p?context=1\nTheres one \"indisputable FACT\" demolished from the source, next time don't use a publicly editable wiki as your primary source of information on reddits rules.\n\n2) Users of applications (e.g. AlienBlue, Reddit News, Reddit Sync, etc) can't have downvote buttons hidden from >them anyway.\n\nI mentioned this as an argument to refute blocking SRS's stylesheet stating they already have this option. Why again are you repeating what I already said?\n\nI will not blacklist subreddits stylesheets -- however, I will continue to counter hacks that subreddits come up with to >cripple the functionality of my software for the reasons outlined above.\n\nYour \"indisputable FACTS\" just got demolished, or shown to be repeating the exact same thing I said.\nOh and materialdesigner  (the one who wrote the new hack) had this to say to you, these are his words not mine.\n\n1) Ignoring reddit itself for a moment: the user of a browser should have control over the functionality and content >therein. A user-installed browser extension is a conscious choice by that user to enable or disable functionality. The >user owns his/her browser, period.\n\nAnd the user can override their own browser stylesheets if they desperately wanted to. If you go to a website and you don't like their color scheme, but there isn't a convenient way to change it, are they somehow violating your rights over your browser? Fuck no, anyone can recognize how ignorant that vein of thought is. \nOh and he said something about not wanting to play cat and mouse with him on this, he seems fairly confident he will win. I didn't quote his statement on that verbatim because it contained too much profanity.\nOn a final note having downvote buttons disabled helps moderators in specific types of subreddits for example /r/transtimelines we have the arrows disabled to prevent cisnormative appearance shaming. I don't want my subreddit to turn in to the trans version of \"hot or not\" and that subreddit was actually the first to use the new updated CSS to remove the arrows.  /r/rape also removes the arrows to prevent people from burying threads where folks are seeking support I'm the one who actually passed along the code to SRS. SRS is not the only subreddit to use this trick either nor is the trick limited to a few of my subreddit's either. Many subreddits have legitimate reasons for removing the downvote button ( like to help prevent vote brigading from SRD ect..) By preventing moderators from enforcing a specific action to protect their communities you are doing active harm to them by giving out the tools to those who just want to cause trouble.\n. ",
    "usdtorero": "\"Reinstalling chrome isn't an option for, I have a lot of configured addons (although I do have profile backups), I don't feel like uninstalling / reinstalling chrome is an acceptable solution.\" same here. opted to go without for now until a fix is released. \n. \"Reinstalling chrome isn't an option for, I have a lot of configured addons (although I do have profile backups), I don't feel like uninstalling / reinstalling chrome is an acceptable solution.\" same here. opted to go without for now until a fix is released. \n. \"Reinstalling chrome isn't an option for, I have a lot of configured addons (although I do have profile backups), I don't feel like uninstalling / reinstalling chrome is an acceptable solution.\" same here. opted to go without for now until a fix is released. \n. Yes, I'm running Canary\n. Yes, I'm running Canary\n. Yes, I'm running Canary\n. ",
    "RobertLowe": "@usdtorero glad to here I'm not the only one, I just grabbed a user style script for now.\n. @usdtorero glad to here I'm not the only one, I just grabbed a user style script for now.\n. Yup:\nMore here:\nhttp://www.reddit.com/r/RESissues/comments/12q6lw/bug_res_settings_dont_save_on_canary/\nCanray just broke, sorry for the alarms. Time to migrate, thanks.\n. Yup:\nMore here:\nhttp://www.reddit.com/r/RESissues/comments/12q6lw/bug_res_settings_dont_save_on_canary/\nCanray just broke, sorry for the alarms. Time to migrate, thanks.\n. Reopening, found a solution to this: \nhttp://www.reddit.com/r/RESissues/comments/12jltw/bug_res_is_opening_up_the_res_tips_and_tricks/c6wx1ic\n\nI have a temporary/experimental and utterly unofficial fix1 for those still having issues. First, navigate to your profile[1] , then locate and back up\n~\\Extensions\\kbmfpngjjgdllneeigpgjifpgocmfgmb\\4.1.3_0\\background.js\nand your RES settings\n~\\Local Storage\\chrome-extension_kbmfpngjjgdllneeigpgjifpgocmfgmb_0.localstorage\nCopy them somewhere safe, especially the latter. Open the background.js, ie not the back up copy, and locate\n\ncase 'getLocalStorage':\n    sendResponse(localStorage);\n    break;\n\nand change it to\n\ncase 'getLocalStorage':\n    var ls = {};\n    for(var k in localStorage) {\n        ls[k] =  localStorage[k];\n    }\n    sendResponse(ls);\n    break;\n\nDo all this with Chrome/ium closed. Save the edit and restart the browser. Your settings should be intact, the tabs will stop duping and you'll be able to save settings again. If you're settings are empty then you likely lost them due to uninstall/reinstalling and they can't be recovered. If you have some settings missing, especially tags, then this seems to have been a side effect of the bug, and again, can't be recovered.\nAlso, make sure you take a copy of the RES settings file first. Again, this is a totally unofficial fix. It won't do any harm, it's just not guaranteed to work. At worst you can restore the two backups and go about your business.\n1 Might not fix anything.\n\nCheers\n. Reopening, found a solution to this: \nhttp://www.reddit.com/r/RESissues/comments/12jltw/bug_res_is_opening_up_the_res_tips_and_tricks/c6wx1ic\n\nI have a temporary/experimental and utterly unofficial fix1 for those still having issues. First, navigate to your profile[1] , then locate and back up\n~\\Extensions\\kbmfpngjjgdllneeigpgjifpgocmfgmb\\4.1.3_0\\background.js\nand your RES settings\n~\\Local Storage\\chrome-extension_kbmfpngjjgdllneeigpgjifpgocmfgmb_0.localstorage\nCopy them somewhere safe, especially the latter. Open the background.js, ie not the back up copy, and locate\n\ncase 'getLocalStorage':\n    sendResponse(localStorage);\n    break;\n\nand change it to\n\ncase 'getLocalStorage':\n    var ls = {};\n    for(var k in localStorage) {\n        ls[k] =  localStorage[k];\n    }\n    sendResponse(ls);\n    break;\n\nDo all this with Chrome/ium closed. Save the edit and restart the browser. Your settings should be intact, the tabs will stop duping and you'll be able to save settings again. If you're settings are empty then you likely lost them due to uninstall/reinstalling and they can't be recovered. If you have some settings missing, especially tags, then this seems to have been a side effect of the bug, and again, can't be recovered.\nAlso, make sure you take a copy of the RES settings file first. Again, this is a totally unofficial fix. It won't do any harm, it's just not guaranteed to work. At worst you can restore the two backups and go about your business.\n1 Might not fix anything.\n\nCheers\n. Cross linking with #205\nA fix is a fix, imo.\n. Cross linking with #205\nA fix is a fix, imo.\n. ",
    "bbhoss": "This is a Chrome bug: https://code.google.com/p/chromium/issues/detail?id=161028\n. This is a Chrome bug: https://code.google.com/p/chromium/issues/detail?id=161028\n. @l4pierce What version Chrome are you using? I've tried all of the resolutions listed and it still has the issue in  25.0.1325.0 canary. I'm thinking this could be due to something they changed, but it could also be an issue with Chrome itself.\n. @l4pierce What version Chrome are you using? I've tried all of the resolutions listed and it still has the issue in  25.0.1325.0 canary. I'm thinking this could be due to something they changed, but it could also be an issue with Chrome itself.\n. This is a Chrome bug: https://code.google.com/p/chromium/issues/detail?id=161028\n. This is a Chrome bug: https://code.google.com/p/chromium/issues/detail?id=161028\n. I'm also having this issue in 25.0.1325.0 canary\n. I'm also having this issue in 25.0.1325.0 canary\n. This is a Chrome bug: https://code.google.com/p/chromium/issues/detail?id=161028\n. This is a Chrome bug: https://code.google.com/p/chromium/issues/detail?id=161028\n. If you're trill enough, replace your reddit_enhancement_suite.user.js with this copy:\nhttps://gist.github.com/4108158\n. If you're trill enough, replace your reddit_enhancement_suite.user.js with this copy:\nhttps://gist.github.com/4108158\n. Also, it seems that other bug has somewhat of a real workaround on it that basically converts the localStorage object to a hash which jsonifies properly, so you might try that as well.\n. Also, it seems that other bug has somewhat of a real workaround on it that basically converts the localStorage object to a hash which jsonifies properly, so you might try that as well.\n. I think it's safe to say that @xpaulbettsx and I fall in that 1%. I can't speak for him, but I'd bet we both use these dev builds for working with new web tech, along with the continuously improving web dev tools included in Chrome (and Webkit). This is definitely a browser bug though, and I already linked and commented on it, hopefully it will be fixed soon. While I definitely support your policy on not supporting dev/nightlies, I do think it's good to keep an eye out for API changes/bugs, specifically with extensions, as Chrome goes from dev channel to stable channel about every 6 weeks. Also, if there is a specific bug that is found with your extension, you have a chance to report that upstream before it breaks for everyone.\n. I think it's safe to say that @xpaulbettsx and I fall in that 1%. I can't speak for him, but I'd bet we both use these dev builds for working with new web tech, along with the continuously improving web dev tools included in Chrome (and Webkit). This is definitely a browser bug though, and I already linked and commented on it, hopefully it will be fixed soon. While I definitely support your policy on not supporting dev/nightlies, I do think it's good to keep an eye out for API changes/bugs, specifically with extensions, as Chrome goes from dev channel to stable channel about every 6 weeks. Also, if there is a specific bug that is found with your extension, you have a chance to report that upstream before it breaks for everyone.\n. Wow that is ridiculous. If it were me I would just simply ignore/delete things like that instead of responding. I do wonder if there is a better way to present this issue to the user though. Is there any way we can detect whether or not the profile is corrupted or just new? If we could, we could just show a message saying it was corrupted/couldn't be loaded, then disable loading RES totally. This would automatically lead the user to do the thing most likely to fix the problem, which is remove RES and re-install it.\n. Fixed in Canary version 25.0.1333.0. I'd close these now @honestbleeps.\n. ",
    "paulcbetts": "Can you put out a hack fix until Chrome Dev is fixed (i.e. don't pop up the intro page / tips if localStorage is broken)? This is a pretty bad bug\n. Can you put out a hack fix until Chrome Dev is fixed (i.e. don't pop up the intro page / tips if localStorage is broken)? This is a pretty bad bug\n. @bbhoss :cool:, thanks\n. @bbhoss :cool:, thanks\n. ",
    "j-clark": "re: differentiating new versus corrupt localStorage, wouldn't it be possible to attempt to add to it and if it fails, conclude that it's corrupt?\njavascript\nlocalStorage.addItem(\"test\", \"this is a test\");\nif(localStorage.getItem(\"test\") === null) {\n  //broken storage\n}\n. cmd+up is the Mac equivalent.\n. ",
    "sporkmonger": "Sounds like this may now be resolved in Chrome:\n\"Fixed in V8 r13041.\"\n. ",
    "ubershmekel": "It's back :( Chrome Version 24.0.1312.56 on Ubuntu 12.04\n. It's back :( Chrome Version 24.0.1312.56 on Ubuntu 12.04\n. Seems to be ok now. Switched to chromium from the ubuntu software store - Version 25.0.1364.160 Ubuntu 12.04 (25.0.1364.160-0ubuntu0.12.04.1).\n. Seems to be ok now. Switched to chromium from the ubuntu software store - Version 25.0.1364.160 Ubuntu 12.04 (25.0.1364.160-0ubuntu0.12.04.1).\n. ",
    "hypah": "I should clarify that what I tested in those browsers was the environment detection method (new window vs. embedded DOM object); I only tested the RES tweak in Chrome.\nI'm not sure what a good solution is for the security issue, because I know bandwidth billing was an annoyance when you released a RES update last winter; however, if that ever ceases to be a problem, I would be more than willing to give you the PHP script and hand it over to you.\nI've thought about your future plans before and always wanted to offer my server to you for things like settings/tag saving, but I was never really confident enough to start a conversation about it, because if I were in your shoes and someone else offered to host portions of my own project, I would say no.\nI would recommend at least pulling the (www.|m.) change for now - it makes the image expando work with this domain: http://www.reddit.com/domain/m.quickmeme.com/new\n. I think I have a better idea. It would largely eliminate security issues as well as the reliance on a middleman domain.\nHow about we instead have the \"add captions\" link appear on the same line as \"comments\", \"share\", \"save\", etc., but only for whitelisted, compatible domains like quickmeme, memegenerator, etc.? Clicking this would unfold an editor within reddit itself.\nIf all the required javascript were to be set in stone on github as another immutable part of RES, this would basically eliminate the security risks as well as potential latency and bandwidth issues which would have existed with the current redirect approach. It also feels like more of an actual RES feature to do it this way.\nAll the client-side scripts would be embedded in RES. The only security risk I can think of would be the \"Generate\" button. When it is clicked, the browser sends the typed captions to my server script. My server then generates the image, saves it to quickmeme, and returns the final saved meme URL to the client. The user is then redirected to that URL. If my server were ever compromised, a malicious party could replace the redirect URL with something else.\nThe simplest solution would be for the client to whitelist domains it allows itself to redirect to. The whitelist could be an array of strings in the RES source code like allowed_domains = [\"quickmeme.com\", \"memegenerator.net\", \"etc\"]. If the requested redirect URL's domain were not whitelisted, then the browser could silently ignore it instead of calling window.location = \"URL\". This would basically make it impossible for anyone who somehow gains access to my server to do anything naughty beyond breaking the Generate button.\nI could be overlooking something, but I feel like that might get rid of all of the possible security issues.\nWhat do you think?\n. ",
    "Rothera": "A small suggestion: change the opener button text to just big editor. Reddit's UI tends to be slim and all lowercase, and the button doesn't fit in with this very well.\n. ",
    "thybag": "Just noticeing this issue - I think this feature is done as of the latest release :)\n. Id be interested to take a look at this one. \nI suspect it would be possible to create a \"backup\" download using data uris + a bit of code to create a standardised json representation of RES's data. Then potentially a import script (via the FileAPI) to reimport it \"/ (Granted this is pure speculation, would need to have a proper poke to check feasibility).\nCarl\n. Id be interested to take a look at this one. \nI suspect it would be possible to create a \"backup\" download using data uris + a bit of code to create a standardised json representation of RES's data. Then potentially a import script (via the FileAPI) to reimport it \"/ (Granted this is pure speculation, would need to have a proper poke to check feasibility).\nCarl\n. True, although the idea of a one click solution (assuming it is possible) still sounds as if it could be useful. I've got a bit of time free, so if there's something more useful you'd like me to have a poke at I'd be happy too, at the moment I'm just going by what sounds interesting [I'm to new to looking at this project for really having much feel for priorities]  :)\nIn terms of cross browser support, what version of IE are you currently targeting (as i suspect that would likely be the weak link), that said, 10+ should have basic support (going by http://caniuse.com/fileapi )\n. True, although the idea of a one click solution (assuming it is possible) still sounds as if it could be useful. I've got a bit of time free, so if there's something more useful you'd like me to have a poke at I'd be happy too, at the moment I'm just going by what sounds interesting [I'm to new to looking at this project for really having much feel for priorities]  :)\nIn terms of cross browser support, what version of IE are you currently targeting (as i suspect that would likely be the weak link), that said, 10+ should have basic support (going by http://caniuse.com/fileapi )\n. From a quick test this now appears to work as expected.\nThink this can be closed. \n. From a quick test this now appears to work as expected.\nThink this can be closed. \n. Think this should also now be complete :)\n. Think this should also now be complete :)\n. Is opera 12 still being supported by RES? As it may be worth closing this off if not (I'm assuming the webkit versions won't have the issue). \n. Think this is probably good to close now (re: refed pull)\n. Just tested this, it appears chrome & firefox both show \"No messages were found.\", when this happens. Additionally a warning appears in the console, so i've put in a tiny pull request to fix that too.\n. I *think * this is probably good to close now (re: refed pull) \nAlthough when i tested the function appeared not to work at all vs hiding usernames so may have fixed a different bug?\n. I *think * this is probably good to close now (re: refed pull) \nAlthough when i tested the function appeared not to work at all vs hiding usernames so may have fixed a different bug?\n. Hello,\nGlad my pull may still be of some use, even if i did miss the boat for this feature by quite some way it seems :p\nHaving a play with the proper version of the resizable video code (in chrome), clicking appears to work fine - although the progress bar appears inoperable? (Granted, my only solution to this was ignoring the bottom 40px)\n. Hello,\nI've just updated my pull request to remove functionality duplicating that which already existed in RES. The pull now just contains the code I added to ignore the native HTML5 video controls (hopefully allowing the slider to work as expected).\nHopefully this is more helpful than my initial pull.\nThanks,\nCarl\n. Its correct for Chrome and firefox. Haven't tested in opera yet (am checking now). IE10 appears to be slightly over 40px though.\nEdit: latest Opera is the same as chromes. (which i guess makes sense with the switch to webkit)\nEdit2: IE10's native video controls appear to be approx 60px.\nEdit3: Looking closer, IE's larger native controls may not be an issue after all, the progress bar itself appears to be below the 40px line.\n. Its correct for Chrome and firefox. Haven't tested in opera yet (am checking now). IE10 appears to be slightly over 40px though.\nEdit: latest Opera is the same as chromes. (which i guess makes sense with the switch to webkit)\nEdit2: IE10's native video controls appear to be approx 60px.\nEdit3: Looking closer, IE's larger native controls may not be an issue after all, the progress bar itself appears to be below the 40px line.\n. Hello,\nJust to expand on the above, I've created a branch off this one to demo the builds working with all the modules split to there own files.\nSee:\nhttps://github.com/thybag/Reddit-Enhancement-Suite/tree/Branch_experimental/gunt-building-split-demo\nEach module now has a .js file with the modules name in the modules folder within the lib directory. Grunt then builds all these files and the main RES file in to one using the grunt chrome task (in chromes case).\n(Since this was only for a demo, I haven't moved the inactive modules, although these could easly be split off as well, then just commented out in grunts \"res_files\" array if they are not wanted (which saves having to wrap the block in /* */ etc).\nFrom a quick test everything appears to work exactly as before using the split file setup.\nThanks,\nCarl\np.s. I have just now noticed i spelled grunt wrong in the both branch names >.<\nEdit:\nAdditional notes for getting branch running.\n1. Install node.js (if not already) & checkout branch Branch_experimental/gunt-building-split-demo\n2. Navigate to RES folder in console\n3. run npm install (you will also probably want to install grunt cli globally using npm install -g grunt-cli for ease of running)\n4. To setup for development in chrome run grunt chrome, (or grunt firefox for firefox etc etc). To build all versions (but not run the watch task, just run grunt.\nGive me a poke if any of this doesn't work. With the watch running all changes should automatically be updated to the browser folder, so you should be able to just hit the reload extension button as normal. If you are in windows, i'd recommend using the git bash console for ease of running.\n. Hello,\nJust to expand on the above, I've created a branch off this one to demo the builds working with all the modules split to there own files.\nSee:\nhttps://github.com/thybag/Reddit-Enhancement-Suite/tree/Branch_experimental/gunt-building-split-demo\nEach module now has a .js file with the modules name in the modules folder within the lib directory. Grunt then builds all these files and the main RES file in to one using the grunt chrome task (in chromes case).\n(Since this was only for a demo, I haven't moved the inactive modules, although these could easly be split off as well, then just commented out in grunts \"res_files\" array if they are not wanted (which saves having to wrap the block in /* */ etc).\nFrom a quick test everything appears to work exactly as before using the split file setup.\nThanks,\nCarl\np.s. I have just now noticed i spelled grunt wrong in the both branch names >.<\nEdit:\nAdditional notes for getting branch running.\n1. Install node.js (if not already) & checkout branch Branch_experimental/gunt-building-split-demo\n2. Navigate to RES folder in console\n3. run npm install (you will also probably want to install grunt cli globally using npm install -g grunt-cli for ease of running)\n4. To setup for development in chrome run grunt chrome, (or grunt firefox for firefox etc etc). To build all versions (but not run the watch task, just run grunt.\nGive me a poke if any of this doesn't work. With the watch running all changes should automatically be updated to the browser folder, so you should be able to just hit the reload extension button as normal. If you are in windows, i'd recommend using the git bash console for ease of running.\n. Just updated to work with new split file configuration & merge in to the troubleshooter,\n. Just updated to work with new split file configuration & merge in to the troubleshooter,\n. Good to know it still works. I'll pull in master and bring it up to date when I next get a chance. \n. Just updated to make Backup & Restore a standalone module (separate from troubleshooter) + added it to all the browser manifests/equivalents.\n. If there's any interest/movement on this I'd be happy to merge it all up to date / check its all happy with the newer versions :+1: \n. Just synced it all up with master again (plus made the suggested changes).\nSeems to work fine (managed to import a settings dump i made  with the first version of this, then rollback to an export i made with this version) :)\n. Think all issues in travis that relate to backupAndRestore should now be resolved :+1: \n. Hello,\nHad a quick test and brief read through and have to say, having stuff split apart does make the code much easier to follow. Everything looks good from my point of view :)\nHopefully you'll be able to get this merged soon, so other pulls can start adapting to the new structure.\nCarl\nP.S. re:grunt though, the latest grunt script no longer includes any of the additional build steps, it's now pretty much just a windows friendly stand in for \"makelinks.sh\". \n. Hello,\nHad a quick test and brief read through and have to say, having stuff split apart does make the code much easier to follow. Everything looks good from my point of view :)\nHopefully you'll be able to get this merged soon, so other pulls can start adapting to the new structure.\nCarl\nP.S. re:grunt though, the latest grunt script no longer includes any of the additional build steps, it's now pretty much just a windows friendly stand in for \"makelinks.sh\". \n. Updated code style & updated https regex as per @mc10's advice\n. Updated code style & updated https regex as per @mc10's advice\n. +1 for the vendor naming convention.\n. +1 for the vendor naming convention.\n. Updated proposal:\n|-- core\n   |-- alert.js\n   |-- browsersupport.js\n   |-- console.js\n   |-- res.css\n   |-- templates.html\n   |-- etc.\n|-- vendor\n    |-- guiders-1.2.8.js\n    |-- hogan-2.0.0.js\n    |-- jquery-1.10.2.min.js\n    |-- jquery-1.10.2.min.map\n    |-- etc.\n|-- modules\n    |-- commentTools.js\n    |-- keyboardNav.js\n    |-- etc.\n|-- reddit_enhancement_suite.user.js\n\n. Updated proposal:\n|-- core\n   |-- alert.js\n   |-- browsersupport.js\n   |-- console.js\n   |-- res.css\n   |-- templates.html\n   |-- etc.\n|-- vendor\n    |-- guiders-1.2.8.js\n    |-- hogan-2.0.0.js\n    |-- jquery-1.10.2.min.js\n    |-- jquery-1.10.2.min.map\n    |-- etc.\n|-- modules\n    |-- commentTools.js\n    |-- keyboardNav.js\n    |-- etc.\n|-- reddit_enhancement_suite.user.js\n\n. Just wondering if we potentially need to consider a new convention for \"additional media controls\".  To me it seems more \"right\" for controls to do with browsing media (for example moving between images) to be placed at the top of the image/video, and additional media controls (speed up/slow down / rotate / whatever) to be placed at the bottom.\nI think having the speed up/down controls at the top could potentially cause confusion for instance as its where many uses would be expecting to see the next/prev buttons.\nAside from that, I think showing the current play speed could come in handy for a lot of users when adjusting it (maybe just a x1.5 or x0.6 or whatever shown next to the controls). For me it was a bit disorienting trying to re-find the natural play speed of the clip again after changing it. Additionally it looks like the +/- icons (at least for me) aren't showing the pointer cursor on hover + its probably worth adding general hover style of some sort may help (slight colour change maybe, like the current next/prev arrows), just to reinforce that they are interactive elements.\nJust my 2 cents.\n. Just wondering if we potentially need to consider a new convention for \"additional media controls\".  To me it seems more \"right\" for controls to do with browsing media (for example moving between images) to be placed at the top of the image/video, and additional media controls (speed up/slow down / rotate / whatever) to be placed at the bottom.\nI think having the speed up/down controls at the top could potentially cause confusion for instance as its where many uses would be expecting to see the next/prev buttons.\nAside from that, I think showing the current play speed could come in handy for a lot of users when adjusting it (maybe just a x1.5 or x0.6 or whatever shown next to the controls). For me it was a bit disorienting trying to re-find the natural play speed of the clip again after changing it. Additionally it looks like the +/- icons (at least for me) aren't showing the pointer cursor on hover + its probably worth adding general hover style of some sort may help (slight colour change maybe, like the current next/prev arrows), just to reinforce that they are interactive elements.\nJust my 2 cents.\n. Possibly not relevant any more (given how old the issue is), but from having a look, all the media on google drive outputs x-frame-options:SAMEORIGIN headers anyway, meaning iframing them isn't possible.\nSo far as i can tell, the only thing drive lets you embed is folders (although even with them, there is nothing in the URL's that would let you know in advance that the link is to a folder, not just another file).\n. Much prefer the in-window branding :+1: \n. Speaking as a RES user, I'd personally much prefer to have controls enabled on all HTML5 video regardless of length/source.\n. Although late to this discussion, yea this is my fault for forgetting to add the node_modules to the ignore file when i put in the original grunt pull. \n. I believe the showImages module is hard coded to check the default siteModule first, regardless of the ordering. ( see: https://github.com/SirCmpwn/Reddit-Enhancement-Suite/blob/rearrange-showImage/lib/modules/showImages.js#L452 )\nAdditionally I (i may be wrong) but i'm aware that chrome (and possibly some other browsers) JS engines potentially don't support ordering within JavaScript objects* meaning they will return the results in a potentially random order  when iterated rather than the order the are placed within the code. Unsure if this is still the case, but i remember when i last checked chrome at least would always return them alphabetically.\nProof I'm not crazy :p :http://stackoverflow.com/questions/5773950/how-to-keep-an-javascript-object-array-ordered-while-also-maintaining-key-lookup\n*technically I don't think preserving order is the spec, \n. Just wondering if there is any further work wanted on this?\nI updated it a bit with https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/785 , although would be happy to make further changes / expand on some stuff if its wanted.\n. I'd be tempted to remove the https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/BUILD.md file also and add its content to the end of the readme? Wondering what others think?\n. Edit: added a DNM (do not merge) for now as this seems not to work consistently. Am working on a fix now :)\n. Should be good to merge again. \nThe updated solutions a little less pretty as it seems to get this working reliable I have to convert the youtube time stamp (5h3m20s) to seconds, as the embedded player only supports the \"start\" parameter. Unsure if anyone can think up a cleaner way to achieve this?\n. Hello,\nHave added a better fix as per your suggestion. I did have a dig initially but was thrown off by the watchForElement bit in RESUtils when tracking back. It turned out there was actually a bit calling the resutil callbacks in the dashboard itself (that didn't show up in my code search).\nHave updated the code to fix at that point, and remove the later check.\n. If a very specific file order will be needed for the manifests, it may make sense just to maintain a single file listing them in lib/, then just have grunt reformatting that for the various browser manifest formats?\nP.S. :+1: grunt\n. Also fix http://www.reddit.com/r/RESissues/comments/228pki/bug_videos_in_comments_still_plays_when_collapsed/ (unsure if this issue is in github)\n. http://www.reddit.com/r/RESissues/comments/228dbt/bug_res_embedded_youtube_link_with_timecode_in/ is now also fixed.\n. I think this should already be fixed in the latest version of the code\n. Hmm, I think i added the option to turn autoplay off for the youtube/vimeo, so getting html5 content (With audio) to obey the setting may be a good first step.\nAside from that option 2 probably appeals to me the most as its the only place i can really think of this would be a problem \"/ \n. Further work:\n- on/off option for each expando type is now auto generated (additional options can still be specified if needed)\n- on/off should now work correctly again\n- add name option, which is used within expando options\n. Should hopefully all be merged up to date again :)\n. Suspect this issue is closeable, as of the new site :)\n. Just tested, looks like this is fixed \ud83d\udc4d \n. An alternate option would potentially be to inline them as datauri's (There are a couple of nice grunt/gulp libs that would help do this automatically as part of the builds). \nWould potentially save having to have separate implementations for each browser :)\n. Ah, cool hadn't seen that. Updated :)\n. Looks like this is done. Probs worth closing?\n. Assumedly people could just steal the key out of the compiled plugin anyway (at least in chrome) so it wouldn't really help much having it as a build time thing.\n. Just had a quick look & it doesn't appear there is an easy way to do this.\nThe main problem is that, so far as i can tell, there is no programmatic way to get an album id (which is needed for the embeds) from the url structure.\nExample url: http://barryisland.bandcamp.com/album/dont-die-mr-robot-soundtrack\nExample embed url: \nhttps://bandcamp.com/EmbeddedPlayer/v=2/album=2079393697/size=large/tracklist=false/artwork=small\nI had a look at their API ( https://bandcamp.com/developer ) although it appears to be discontinued. The other option would be directly scraping the page (since the embed urls are within the meta tags), although this is a bit clunky + the site doesn't have any access origin headers (meaning I guess it would need an optional permission).\n. Aside from info on bandwidth limits (before the links get disabled) dropbox don't appear to make there position on hotlinking images particularity clear.\nhttps://www.dropbox.com/help/4204  & https://www.dropbox.com/help/45 being the only relevant articles i could dig up.\n. Assuming everyone is happy with the account holder taking the risk (That ship has probably sailed by the time its been posted on reddit anyway, with or without RES expando support) then I'd vote to go with @larsjohnsen media host over a black list. A working expando is always gonna be the better user experience.\nThat said, I'm not sure any real conclusion was reached over in https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1852 - so possibly one for @honestbleeps or @andytuba to weigh in on?\n. @AjaxGb probs worth getting this synced up with the latest master :)\n. Really liking the look of those new buttons :+1: \n. Just to check, do you have this problem with the youtube expando's in comments or just the ones on the list pages?\nCurrently the list page ones are just left as the standard reddit embeds, although conceivably these could be swapped out to use the RES version (like is done with imgur).\n. Thanks for all the feedback. Will have a go at getting it all cleaned up a bit when i next get a free evening.\nIn terms of additional buttons,  what were you guys thinking for the \"clippy text\" - Just something like a ? icon, which pops up a window with some instructions?\nAlso, is it worth me adding a zoom in & out button to the bar too? or do you think thats overkill.\nOther thought i had was adding an option to settings so you could choose which corner the menu was positioned in.\nThanks,\nCarl\n. Oo, i like the reverse image search button idea. Any idea what icon to use?\n. For google looks like i can just link straight to https://images.google.com/searchbyimage?image_url=url so should be a pretty simple one to add :)\n. Any blockers on this if i merge it all up to date? (will probs have to tweak UI to work with new video player)\n. All merged up, but looks like it goes a bit wrong with the new video player for gifv's etc. Gonna see if i can fix\n. Hello,\nI believe the Oddshot emebed was updated to use it's own player via an iframe. Unfortunately re-sizing can only be supported for videos & images that are embedded directly.\n. > One thing I do really like about this though is that it will make the expand buttons appear without waiting on a network request. \nIndeed :) Hard to really say what people would notice \"/  My assumption would be that in most cases, loading just one resource would generally be fast enough (in response to a click) that its not really an issue.\nNot really sure whether \"more instant buttons\", or \"more instant expanding\" would be the more noticeable change. Personally, it just feels a bit wrong to see all the xhr requests firing away in the background when in a lot of cases the data may never be used - although admittedly thats not something 99.999% or RES's user base are likely to care about :p \n. Have updated with a couple of the suggestions applied. The new version should now work for all expando types & doesn't require just auto run fetchLinkMetadata if its defined when an expando is activated.\nAlso included the suggested tweak so the detect can be provided straight as a regex to exec if wanted.\n. Well, pixpit, graphiq & wikipedia would probably benefit from the change, but it'd probably make sense for me to update them in to their own pull requests once this is merged.\nFrom a quick look, i suspect the following would also be easy to port to use the mechanism in this pull.\n- gfycat\n- fitbamob\n- flickr\n- futurism\n- gifyoutube\n- github\n- iloopit\n- min.us\n- photobucket\n- pornbot\n- soundcloud\n- tumblr\n- possibly twitter\nBasically anything where the TYPE is already known, for the rest I'd have to look in to getting a solution like the one you suggest in https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2818#issuecomment-201909688 working. In those cases though, i guess it could be argued that knowing the type in advance of clicking is pretty useful.\n. Just wondering if people are interested in me progressing this further?\nIs it worth me porting over a load of other media hosts to work in this way as part the pull? or is it better to have this pull more stand alone-y?\n. I'm a little unsure about the value of the auto option, in most cases the latency of a single ajax request is going to be somewhat negligible in comparison to actually loading the iframe/image/video anyway. \nI guess another option if is latency is a concern could be to have a smart-prefetch, for example triggering the fetchLinkMetadata when a user first hovers over the expando icon - which in most cases would give it a small head start vs the user actually clicking. (Although this wouldn't help for people using keyboard shortcuts).\nre: the generic icon (for cases where the final type is unknown), i like the idea, although would probably want to avoid trying to design an icon if possible :p For the majority of cases (at least that i can think of) the type is known anyway, so its probably not an immediate concern. (although an intermediary \"loading\"expando icon  to show when a user triggers an expando could be a nice touch anyway for if one is being slow for whatever reason)\n. Looks good :+1: \n. Going to have a dig at this one\n. Now with nightmode styles :)\n. Should all be up to date again with the latest version of RES :+1: \n. Just wondering if its worth also removing the settings icon from the \"media control bar\", given its moving to the site attribution etc?\n. @BenMcGarry Possibly an idea, although I've got now idea how we'd go about that. I guess potentally someone could try emailing them https://en.wikipedia.org/wiki/Wikipedia:Contact_us\n. Hmm, guess needing two api calls (when a #bla)is detected) ain't the end of the world. Will try and find some time to give it a go\n. Demo with #section loading https://www.reddit.com/r/todayilearned/comments/525rkb/til_when_rodney_dangerfield_was_asked_how_long/\n. I think this may now be done :p \n. Probably best to but sure, but I suspect @Ajedi32 is correct in that the  tag is just being stripped by the safeHtml sanitizer.\nFor info, raw output from noembed is https://noembed.com/embed?url=http://xkcd.com/524/\nExample of expando: https://www.reddit.com/r/funny/comments/11wsnz/xkcd_party/\n. @larsjohnsen Hmm, i guess i could theoretically use the res-expando-siteAttribution bar as the drag bar, which would save on some of the markup. (Having just the handle isn't ideal as its quite easy to drag that behind a sidebar) - what are your thought on giving it a colour, so it stands out from the background in some way?\n. Unsure if there are any use-cases where it would be useful to disable the \"resize\" feature on iframe expandos (ie. if the content being embedded just isn't resizable). If so, its probably worth me adding a toggle to disable it etc.\n. @larsjohnsen Have applied the more straight forward changes you mentioned.\n\nTo avoid setting width / height on all these elements, rather use a wrapper which you update the dimensions for, and set the height / width of the children to 100%.\n\nI'm unsure how to easily achieve this as the structure (assuming I don't move away from the makeMediaIndependentOnResize entirely) doesn't really lend itself to it to well.\n<div class=\"res-iframe-expando\">\n    <div>\n        <div class=\"res-media-independent\">\n            <iframe src=\"\"></iframe>\n        </div>\n    </div>\n    <div class=\"res-iframe-expando-helper\" ></div>\n    <div class=\"res-icon res-iframe-expando-drag-handle\"></div>\n</div>\nI can't really see any obvious way to wrap the elements in a shared sizing container as the helper is absolute, and the drag handle only shares the width (not the height), and the outer container needs the height of the iframe + the drag handle.\nPossible I'm over thinking this / missing something obvious.\n\nSince documents don't have a fixed aspect ratio, keeping this is unnecessary. IMO it's more user-friendly to resize the iframe to basically w = offsetLeft, h = offsetTop (though this would mean only allow resize initiated from the right bottom corner).\n\nIn most cases i think locking to an aspect ratio probably is still preferable, as a lot of the media we embed with iframes are things like videos (vimeo/youtube etc.) rather than standard documents - granted there are some exceptions (ala strawpoll). I also think it'd be a bit of a shame to loose the ability to resize from arbitrary locations on the resize bar.\n. @larsjohnsen Thanks :D No idea why just setting the pointer events on the iframe itself didn't occur to me >.<\nHave updated with changes, plus reworked it a little to ensure the siteAttribution stuff gets wrapped in the res-iframe-expando (for correct styling). Everything appears to be working for me + codes hopefully a little cleaner.\n. Have updated for compatibility with latest version.\nTested with: https://www.reddit.com/domain/youtube.com/ & https://www.reddit.com/domain/vimeo.com/\n. Have applied the suggested updates :) Everything seems to work - although with this version only the drag-icon can be used for resizing (rather than the full bar).\nIs this preferred? Personally I'd be tempted to turn the res-iframe-expando-footer in to the drag handle, which would restore the ability to resize using the full bar (while keeping the rest of the improvements).. Cool. Have updated to make the footer in to the drag handle :) Site attribution all appears to work fine for me. Mostly tested with https://www.reddit.com/domain/twitch.tv/\n\n. With the alignment tweaks\n\n. Just to chip in, I'm very happy for any of my contributions to the media hosts to be used under MIT. \nAdditionally I like the idea of scoping the library to just parsing urls & providing embed metadata. Keeps it focused + maximises the places it could be useful .. Unsure how to get around Flow not thinking a Node can have a style attribute. Any advice would be much appreciated.. Requested changes applied \ud83d\udc4d . \ncurrently unsure how to best handle links overflowing as 5 links looks a bit ugly. \nUnsure what people think of this approach - Have added the gold logo to top right of users who have reddit gold?. Removed gold icon since it seems reddit already has its own >.<. Hopefully can switch to using https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4526 once its all merged \ud83d\udc4d . Ah, that's much better actually. My regex skills probably need a bit of work :)\n. Fixed in https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/760\n. Unsure if there is a special reason for creating the iframe as part of a generic expando, but if not, it may be worth considering just reusing the central iframe code (used for youtube/soundcloud etc)\nelem.type = 'IFRAME';\nelem.setAttribute(\"data-embed\", info);\nreturn $.Deferred().resolve(elem).promise();\n. Done - kinda - i think.\n. No harm in it if its useful. Added.\n. Personally I'd lean more towards just cutting it out altogether, giving its kinda preempting a usecase that may never occur. If a siteModule does come along that has a valid reason for needing it, re-adding it should be pretty straight forward.\nHappy to go with the wider consensus though. (Adding it, but having it commented out may also be another option).\n. Possibly worth just going with \"Live Preview\"? \nMy suspicion would be that a lot of RES user's probably don't know what Snudown is.\n. Hmm, just gave this a try, but it doesn't seem like the delegated events are able to stop the click propagating to the anchor wrapping em.\n. Renamed :+1: \n. Ooo, I like this idea. Means media hosts can just provide a regex directly if they ain't doing anything special :)\n. Ah, still not fully got my head around all the new ES6 stuff :p Set's api makes a lot more sense with what i'm doing :+1: \n. Think all of em are more than high enough to get job done :p Have just gone with $zindex-res-hover\n. Good thought + makes it a little more generic so it can work for all mediahosts regardless of type \ud83d\udc4d \n. Wow, never knew that was possible :o Have updated he PR :)\n. Edit: didn't notice you'd already updated it. Will leave as is :p \n. Done \ud83d\udc4d . Cool, both done \ud83d\udc4d . This has also been done, tho github doesnt seem to have noticed :). Hmm, wonder how/why it worked initially as that was pretty much a copy and paste, prefer your suggestion tho, will update. Doesn't waitForChild only work for direct children? (the author-tooltip__profile-link is fairly nested). Possibly - next to the name felt more natural since its where reddits own additional icons get added (gold, cake day etc), vs next the the /u/etc on the full profiles :/. ",
    "jcollum": "Reopen please, still getting this error when clicking the link button: \nUncaught ReferenceError: linkSelection is not defined reddit_enhancement_suite.user.js:7954\nIf reddit_enhancement_suite.user.js is being built out of smaller files, maybe the order of files is wrong? \n4.1.5, just checked\n. I assumed issues would stay open until the related code fix was released. \n. I assumed issues would stay open until the related code fix was released. \n. ",
    "vgel": "No I'm not the owner, though he seems to be fine with people using his service (someone on /r/enhancement made a standalone extension and said he had permission from the owner, though I personally couldn't get permission for this since he doesn't list his email on the site and registered his domain with a WHOIS privacy service).\nI agree with worries that it could go down unexpectedly... apparently this service existed a while ago but was taken down, then remade recently. One thing that we could do is recreate the service - it's not that complicated, really, it seems to be just pulling comments from /comments/new, archiving them for a short amount of time, and then throwing them out if they haven't been edited/deleted. This would explain both it's tendency to not get a small amount of comments (it missed them in the 2-second window when they were flying through /new) and comments that have gone a while between being posted and edited (they were thrown out too soon). I doubt it would be more than a few hundred lines of python, the main concerns would be storage and a reliable server - RES pro feature maybe?\nShort of remaking the service, perhaps this module could be disabled by default, and check is unedditreddit is up when being enabled, and issue a warning if it isn't.\nThat said, the service has been pretty stable for me so far, so barring the owner taking it down for whatever reason I don't think it would randomly die.\n. That sounds great :-).\nI'll work on trying to clean up the code tonight if I can find time, it's pretty ugly at the moment. I'm not sure how to disable the module by default or add a popup, and it still needs permission to access uer.com in non-chrome browsers, though.\n. ",
    "franciscouzo": "this is the username at 2013-01-31 15:52:28 (gmt -3)\n. It sounds plausible, so the date comparison should be made on either local or gmt time.\n. ",
    "aaronjbrown": "Fair call. Updated as requested.\n. ",
    "mercurato": "@patricksnape no worries about the hijack, this is a good discussion to have and much better than the total silence I feared.\n@honestbleeps Yeah I got the feeling when I saw all the regex checks in code that letting in smaller sites would become a really bad idea really fast, your answer is the right choice for the health of the product.  That said I'll start looking into (crazy) opt-in solutions for smaller sites that won't strain cycles.\n. @patricksnape no worries about the hijack, this is a good discussion to have and much better than the total silence I feared.\n@honestbleeps Yeah I got the feeling when I saw all the regex checks in code that letting in smaller sites would become a really bad idea really fast, your answer is the right choice for the health of the product.  That said I'll start looking into (crazy) opt-in solutions for smaller sites that won't strain cycles.\n. Are you guys opposed to scraping and caching the image URL through a secondary site?  We could define a RES specific metadata tag that would either give the image URL or let us know it's okay to use the existing image metadata information.\n. Are you guys opposed to scraping and caching the image URL through a secondary site?  We could define a RES specific metadata tag that would either give the image URL or let us know it's okay to use the existing image metadata information.\n. Privacy would be my main concern.  But as to the backend, I could do something on google appengine that would run near to free and could most likely handle that traffic.  My webcomic runs on appengine and we hit a simultaneous reddit and SU explosion and we survived at 400 hits per second.\nAs long as you're comfortable entertaining this idea I could whip something up.\n. Privacy would be my main concern.  But as to the backend, I could do something on google appengine that would run near to free and could most likely handle that traffic.  My webcomic runs on appengine and we hit a simultaneous reddit and SU explosion and we survived at 400 hits per second.\nAs long as you're comfortable entertaining this idea I could whip something up.\n. @honestbleeps Yes, it would require a lot of queries per page load.  I could set it up to handle one big request if the client could handle parsing the response.\nThe backend would be pretty simple, scrape the page and return the associated image or something to signify no image, also it would need a lot of memcache.\n. @honestbleeps Yes, it would require a lot of queries per page load.  I could set it up to handle one big request if the client could handle parsing the response.\nThe backend would be pretty simple, scrape the page and return the associated image or something to signify no image, also it would need a lot of memcache.\n. Sorry return the associated image URL, not the image.\n. Sorry return the associated image URL, not the image.\n. ",
    "laverdet": "I'll meet you halfway and do FF if you do Safari & Opera ;)\n. ",
    "jacobgreenleaf": "I can fix this myself and issue a pull request for you. Would you accept a pull request? \n. Yeah the latter seems best, or maybe show a greyed out icon or some kind of\nindicator that it's not applicable?\nOn Wed, Mar 6, 2013 at 2:31 PM, Patrick Snape notifications@github.comwrote:\n\nThe real problem with this is, what is the expected behavior? Don't show\nthe expando? Then I bet people complain that it's broken? Or expand and\nhave an empty div that says the gallery is empty? That's probably a bit\nmore work to pull off cleanly than you'd think.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/270#issuecomment-14520864\n.\n. \n",
    "alexmarchant": "Also quotes show up as &quot; http://cl.ly/image/2232091I230a\n. ",
    "matthewhale": "Closing since it seems to be resolved now :+1: \n. ",
    "jtbandes": "Any updates on this? I recently switched from Safari to Chrome and am missing my saved comments etc.; not looking forward to merging the sqlite storage manually! There are some experimental file system APIs which might be useful for implementing this at least in Chrome.\n. ",
    "Catincan": "Bounty of $50.00 is available on this issue: https://www.catincan.com/bounty/https-github-com-honestbleeps-reddit-enhancement-suite-issues-300\n. Bounty of $50.00 is available on this issue: https://www.catincan.com/bounty/https-github-com-honestbleeps-reddit-enhancement-suite-issues-300\n. ",
    "ccope": ":+1: on this. I just migrated from Chrome to Firefox, and was sad to discover migrating my data is impossible.\n. Aha, so the subreddit wiki was wrong! I'm updating it to point to your comment here and another one for the console.\n. @gavin19 where should the store.json be placed?\n. ",
    "jw-00000": "@gavin19 Your Python script is linked from the subreddit wiki, but returns 404. Could you update the link? (Or maybe host it in a gist? Then everyone can edit it if necessary.)\n. @gavin19 Your Python script is linked from the subreddit wiki, but returns 404. Could you update the link? (Or maybe host it in a gist? Then everyone can edit it if necessary.)\n. ",
    "melvinsh": "Thanks. You echo by the way.\n. ",
    "timendum": "Hi,\nthird party cookie are allowed in latest version of the addon sdk, see https://github.com/mozilla/addon-sdk/pull/768\nMaybe you should update your sdk version (the latest is 1.14)\n. RES 4.2.0.1 is still with an old SDK version :(\n. I'm sorry, i assumed the pull request will be merged in 1.14 release, but it didn't.\n. ",
    "LordBlizzard": "Hello everyone.\nI have found a solution to this problem - you can allow third-party cookies exclusively for *.reddit.com and it works fine. Please find my Reddit post about how to do it: http://www.reddit.com/r/firefox/comments/1b4hs2/how_to_block_3rdparty_cookies_and_still_be_able/\nRegards,\nLord_Blizzard\n. ",
    "erikdesjardins": "@andytuba Might as well close this, eh?\n. This is pretty much all implemented, and there's a link to the FAQ in \"About RES\".\nI think this should be closed, unless you have more ideas for it.\n. Fixed in #2684 (possibly earlier)\n. Fixed in #1826\n. Ajax error handling significantly improved in #2684\n. Yeah I'll probably have time in a few weeks, but if anyone else wants to do it before then, that's fine (or if I forget)\n. Yeah I'll probably have time in a few weeks, but if anyone else wants to do it before then, that's fine (or if I forget)\n. #2755\n. Closing as RES checks for new messages on new pageloads and NER pages, and (semi) realtime messages can be had with native reddit notifications or companion. Closing as RES checks for new messages on new pageloads and NER pages, and (semi) realtime messages can be had with native reddit notifications or companion. https://www.reddit.com/r/Enhancement/comments/3b7poa/feature_request_oneclick_tagging/\n. filters in #2077, and toggles in another PR\n. NER doesn't run on the wiki anymore, so this is no longer an issue.\n. 1134a490c7ca0386092ceb376214952d7d4a1ffd and 639250d3bbfc859c3b0603937d10bfe7f87193a6\n. https://www.reddit.com/r/Enhancement/comments/2jd81r/feature_request_could_we_have_a_module_for/\n. #1860\n. Duplicates #555, but this one has more information.\n. stale, the iframe history hack will be ditched in 4.7 (doesn't seem to work at all anymore)\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/7c96315e9f6fb1e2f30b229d4aa8034671e7fb3a/lib/modules/showImages.js#L1595\n. https://www.reddit.com/r/Enhancement/comments/2ndcjc/feature_request_block_one_of_my_subreddits_on_a/\n. > add .subreddit-{{subredditname}} or .user-{{username}} or .multi-{{multiname}} classes to body\nThis part is resolved by #1860.\n. Fixed by #2014\nI guess it's only modules and hosts, not other assets, though.\n. Pretty much fixed in #2005\n. Firefox has persistent storage now, so #609 should be fine.. Fixed by #1629\n. Closing as RES Pro has been dead for a while now. We now have unlimited storage on all platforms. I believe this is fixed\n. I can't reproduce this, I think it's fixed.\n. Definitely fixed.\n. More info:\nhttps://www.reddit.com/r/RESissues/comments/2u4yc6/bug_res_doesnt_recognise_jpgorig_files_on_twitter/\n. filteReddit useRedditFilters should cover this, and does it more seamlessly. Can confirm, this happens when you drag off and back onto an image, then release the mouse, e.g.\n\nUsers with slow machines can probably make this happen by dragging normally (down and to the right) and \"outrunning\" the resize handler.\n. This was resolved at some point, it should be closed.\n. This was fixed at some point, can't find the PR due to refactoring/linting since then.\n. Resolved in #2053\n. This has been implemented by both us and reddit at this point.\n. Closing as this PR is now far out of date, and the site appears unused (last two posts 4 and 7 months ago)\n. Closing for cleanup/due to staleness. Fixed in https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/83cb8accc0f9a606f3d3d75ee6c886767f19e65f\n. toolbar is now dead\nhttps://www.reddit.com/wiki/toolbar\n. This no longer occurs (as far as I can tell).\n. Sure:\n\ncopy the code from https://astexplorer.net/#/QmOYtBMf4D into a file like utils/i18nTransformer.js\ninstall jscodeshift npm i -D jscodeshift@0.3.30\nreplace the second last statement (starts with basePath\\n .find(j.Program)\\n .get().node.body) with some code that reads in en.json, adds the new strings, and writes JSON.stringify(obj, null, '\\t') or similar to en.json\nadd a autoi18n npm script to package.json, something like jscodeshift --parser flow --transform utils/i18nTransformer.js, which should end up usable with something like npm run autoi18n -- path/to/module.js\nimport lodash const _ = require('lodash')\nreplace optName with _.startCase(optName) in one place (commented)\nfor the two other usages of optName that I marked with _.camelCase, manually capitalize the first letter (I thought lodash had _.pascalCase or _.camelCase, but it doesn't capitalize the first letter). @honestbleeps whenever you have a minute, icon128.png should do nicely.\n\nEdit: also, the promo*.png images in this directory can be uploaded on the same page.\n. The promo images are appearing now; the icon has been updated but it's still small:\n\nBut I think it looks that way for all extensions:\nExtension:\n\nApp:\n\n. This isn't feasible as their API Licence Restrictions are too restrictive (only 20 images per page, among other things).\n. https://www.reddit.com/r/Enhancement/comments/3ksoe8/feature_request_custom_filter_date_ranges/\n. https://www.reddit.com/r/Enhancement/comments/3snjvt/feature_request_allow_a_time_machine_button_to/\n. https://www.reddit.com/r/Enhancement/comments/3snjvt/feature_request_allow_a_time_machine_button_to/\n. https://www.reddit.com/r/Enhancement/comments/3yvb1d/feature_request_custom_timeline_search_feature/\n. Timestamp is probably no longer feasible https://www.reddit.com/r/changelog/comments/6pi0kk/improving_search/dkpx8nu/?context=4. Duplicates #976\n. Fixed by #1235\n. Fixed in #1257\n. https://www.reddit.com/r/Enhancement/comments/36655o/keyboard_shortcut_to_show_child_comments_on_a/\n. ^ muted HTML5 videos are treated like .gifs, for all intents and purposes, and they're consistently expanded with/without NER.\n. Implemented in 9ad53d752c7b612c55eb3c00172c06354e8bbe8d\n. Would you consider this closed now? I was about to submit a PR for simple coloration, but I realized that users can easily do it with custom coloration so it's probably not necessary. (If so, then #1375 should also be closed, I think)\n. Duplicated by #1542, which has more discussion.\n. More:\nhttps://www.reddit.com/r/Enhancement/comments/2v8wjo/is_there_a_way_to_display_a_mail_notification_in/\n. More:\nhttps://www.reddit.com/r/Enhancement/comments/2v8wjo/is_there_a_way_to_display_a_mail_notification_in/\n. https://www.reddit.com/r/Enhancement/comments/31wbnr/feature_request_add_a_couple_of_simple_but_useful/\nalso: clicking on an account's orangered / mail count simultaneously logs you into that account and navigates to the inbox.\n(I think that's a good idea)\n. https://www.reddit.com/r/Enhancement/comments/40dut1/feature_request_a_button_to_check_every_alt/\n. https://www.reddit.com/r/Enhancement/comments/40dut1/feature_request_a_button_to_check_every_alt/\n. https://www.reddit.com/r/Enhancement/comments/4j2ms3/is_there_a_way_to_show_number_of_new_inbox/\n. Related: #1887\n. This is done; explicitly specified subdomains are excluded naturally because it only replaces path-relative links.. I can reproduce this consistently like the above posters have said, with RES v4.5.4 in both Chrome 41 and FF 35 in Win 8.1.\nAFAIK all that is necessary is for conserveMemory to be enabled, then open an album and scroll down to a point that conserveMemory is enabled, and the album will return to its original position (where it was when you scrolled down) a short delay after scrolling. (as explained above)\nNow to fix it...\n. Fixed as a side effect of #2012.\n. #1520\n(cleanup)\n. Implemented in #2077\n. @honestbleeps (not sure if I have to tag you or if you get notifications from all comments on issues)\nI was working on this issue and I noticed that only half of the expando icons are antialiased, eg:\n\nIf I submit a PR for different gfycat icons, do you want me to make the other icons consistent (either all antialiased or all non-antialiased)?\n. #2903\n. Reddit gets to fix this (it still happens) now that they provide the edit buttons.\nI guess it should be closed?\n. Reddit gets to fix this (it still happens) now that they provide the edit buttons.\nI guess it should be closed?\n. Actually not all of them: https://www.reddit.com/r/changelog/comments/32lwej/reddit_change_improved_comment_sort_preference/cqd9x67\n. https://www.reddit.com/r/Enhancement/comments/315uq9/feature_request_expando_on_spotlight\n. Not sure if this is already fixed but here's two versions of the spritesheet:\n one with just the background transparent\n and with the inside of the unvoted arrows also transparent.\n[I didn't submit a PR because] you'll have to upload this to /r/Enhancement and update the URL in nightmode.css, I assume?\n. I'd say that this is ready to be merged if you don't want to make any more changes (like a different icon).\nRemoving the extra \"collapsed\" classes had no ill effects:\n\n. I'd say that this is ready to be merged if you don't want to make any more changes (like a different icon).\nRemoving the extra \"collapsed\" classes had no ill effects:\n\n. One thing I noticed (that might be a bug, or you might already know about it) when I was testing is that RES doesn't seem to like it if you have a lot of video expandos in the same comment (that's why they're in separate comments in my screenshot).\nThe behaviour was really weird - the video expandos would show up (and be functional) for a short time (like 1/4 second) and then be removed sequentially (immediately after the rest of the expandos finished loading), as though RES was doing a second pass to remove them.\nAt first I thought it was my changes, but I tried with the current release version and the same thing happened.\n. One thing I noticed (that might be a bug, or you might already know about it) when I was testing is that RES doesn't seem to like it if you have a lot of video expandos in the same comment (that's why they're in separate comments in my screenshot).\nThe behaviour was really weird - the video expandos would show up (and be functional) for a short time (like 1/4 second) and then be removed sequentially (immediately after the rest of the expandos finished loading), as though RES was doing a second pass to remove them.\nAt first I thought it was my changes, but I tried with the current release version and the same thing happened.\n. I edited (but of course your email wouldn't show that) - it happens with the current release version as well (and I made sure that it wasn't my changes before saying it was good to merge, fyi), although I do have a bunch of extensions so there's a good chance that one of them is doing it. Give me a sec to test it.\n. I edited (but of course your email wouldn't show that) - it happens with the current release version as well (and I made sure that it wasn't my changes before saying it was good to merge, fyi), although I do have a bunch of extensions so there's a good chance that one of them is doing it. Give me a sec to test it.\n. Nevermind it was one of my extensions, sorry.\n. Nevermind it was one of my extensions, sorry.\n. I am so sorry, give me five minutes\n. ...in #2903\n. https://www.reddit.com/r/Enhancement/comments/3zpbqd/feature_request_unsub_all_subs_button/\n. https://www.reddit.com/r/Enhancement/comments/3zpbqd/feature_request_unsub_all_subs_button/\n. ...I can't believe I didn't realize that would be a problem for selftext too.\nI guess I might as well do it for comments too if I can get it to work.\nWe'll have to deal with resizing too then.\n...and moving them (maybe?)\n. Hmm, everything behaves correctly if the image occupies space on the page (i.e. not position: absolute).\nWe can sort of solve this by having images start with position: relative or anything (and RESImagePlaceholder with position:absolute) and then switch that around when an image is moved.\nThe problem is, I have no idea how to handle moved images - should we let them cover up parts of the page/see parts of the moved images in areas that they shouldn't be visible? Alternatively should we resize the self-text area when the image is moved, which could mess up the layout (leave white space)?\nDo you have other ideas on how to handle this?\n. This is ready to be merged, if you're okay with it.\nHere are a few gfycats showing it in action: self-post, comment.\n\n\n. I believe I've fixed the style errors you've pointed out.\n. Fixed in #2998: convertGifsToGfycat runs after siteModules do, so if imgur emits type: 'VIDEO' it won't be converted.\n. #2916\n. Fixed by #2053.\n. https://www.reddit.com/r/Enhancement/comments/47p26b/link_specific_accounts_to_specific_subreddits/\n. Yeah, the \"drag to zoom\" tooltip will be replaced when the image loads if the size is valid (I've heard that image.naturalWidth/Height has issues with images loaded from the cache, but I was unable to reproduce them)\n. Ugh, Chrome sandboxing seems to break jQuery's JSONP requests (I get jQuery<long hash> is undefined, which is explained by this StackOverflow question).\nDo you know if there's a way to get around this without requiring additional permissions for XHR? (I couldn't really find anything)\n. #2815\n. This regex should hopefully work (tested a bit, could use a bit more testing) instead of your change in RESUtils.currentUserProfile(): /^https?:\\/\\/(?:[-\\w\\.]+\\.)?reddit\\.com\\/user\\/([\\w\\.\\-]+[^(\\/m)])\\/?$/i\n@andytuba Do you know why the '.' character is included in the username matching group ([\\w\\.]+)? I didn't think usernames could have periods, unless I'm overlooking something (but they can have dashes, which aren't included in \\w, so I've added that).\n. Had to make a few changes\n. Commit 45e322b shouldn't be here, just a moment.\nI have no idea how that happened, I swear I didn't see it when committing / pushing to this branch.\nLet's try this again.\n. Of course I thought to git rebase -i  45e322b~1 just fine, but not to force push instead of recreating the branch...I don't know what goes through my head sometimes.\n. Appears to be an issue; when in nightmode it's set to z-index: 1 (for some reason) which fixes it in that situation.\n. ^ Related to #1244\n. ^ Related to #1244\n. I think I've fixed everything you mentioned.\n. Might as well get #537 too, while I'm at it.\n. Might as well get #537 too, while I'm at it.\n. @andytuba will do.\nOn Jan 9, 2015 12:54 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nOOC\nEh?\nemacs bindings\nI've heard remarks from some veteran Mac users about the same.\nsetting to control this behavior\nhttps://www.reddit.com/#!settings/commentTools/keyboardShortcuts\n@erikdesjardins https://github.com/erikdesjardins Interested in making\noptions for the comment tool keyboard shortcuts?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1756#issuecomment-69371463\n.\n. Closing since the fork was deleted and there are merge conflicts (which now can't be resolved).\n. Ah, that's what that does. I did include it at first (using the name of the current subreddit), and it worked when I was testing in my own subreddit but not in other ones (makes sense).\n\nI should be able to add a dropdown box just like reddit's.\n. Yeah, my thoughts exactly. We could just wait until they use HTTPS (if they ever do, since the main site loads everything insecurely by default).\n. Hmmm, I did not know that reddit already had expandos for them. \nRegardless, I've added the option to prefer RES support.\n. Hmmm, I did not know that reddit already had expandos for them. \nRegardless, I've added the option to prefer RES support.\n.  is definitely a better way than I did it, at first the href was javascript:void(0), but then I discovered that Firefox doesn't fire click events on middle click so I settled for having it point to an empty message. As it turns out, I shouldn't have had to settle.\nThe rest fixes things that I overlooked or thought weren't possible, 10/10 would patch again\n. Huh, I guess they would have to do something like that - I never thought\nabout it. That's sneaky.\nOn Nov 17, 2014 2:52 PM, \"Andy Tuba\" notifications@github.com wrote:\n\ni learned that hack from Google themselves -- they rewrite links on click\nto switch from a nice pretty direct URL to a Google tracking URL which\npasses you through to the real URL\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1787#issuecomment-63364536\n.\n. Huh, I guess they would have to do something like that - I never thought\nabout it. That's sneaky.\nOn Nov 17, 2014 2:52 PM, \"Andy Tuba\" notifications@github.com wrote:\ni learned that hack from Google themselves -- they rewrite links on click\nto switch from a nice pretty direct URL to a Google tracking URL which\npasses you through to the real URL\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1787#issuecomment-63364536\n.\n. > or... A dickbutt.\n\nFirst prototype, try it out:\n.expando-button { background-image: url(https://cloud.githubusercontent.com/assets/7673145/5161327/1604854c-7374-11e4-8313-825656ada163.png) !important; background-position: -23px 0px !important}\n.expando-button:hover { background-position: -23px -23px !important; }\n.expando-button.expanded { background-position: -23px -46px !important; }\n.expando-button.expanded:hover { background-position: -23px -69px !important; }\n.res-nightmode .expando-button { background-position: -46px 0 !important}\n.res-nightmode .expando-button:hover { background-position: -46px -23px !important}\n.res-nightmode .expando-button.expanded { background-position: -46px -46px !important}\n.res-nightmode .expando-button.expanded:hover { background-position: -46px -69px !important}\n. I can reproduce this 100% by turning off commentBoxes and tagging myself (so reversing either of those should fix it until we release an actual fix).\n. No problem, thanks for reporting / investigating!\n. I believe I've fixed everything you commented on.\nI did the element addition in a slightly different way than you suggested, but I think it has to be done this way for it to work with flair that is just an image.\nIt does require setting the span.linkflairlabel to position:relative, however we shouldn't encounter any issues with this, since subreddits would have to use at minimum .title > .linkflairlabel to set it to position: absolute (without messing up the flair selector) - this is still more specific than my selector (just .res-flairSearch, is that a good name to use?).\n. https://www.reddit.com/r/Enhancement/comments/2rl5m1/feature_request_on_a_post_page_view_the_link/\nLinked user suggested that we could include OP in the parent hover pop-up, could be interesting (might not be enough room, though).\n. https://www.reddit.com/r/Enhancement/comments/2rl5m1/feature_request_on_a_post_page_view_the_link/\nLinked user suggested that we could include OP in the parent hover pop-up, could be interesting (might not be enough room, though).\n. Another request:\nhttps://www.reddit.com/r/Enhancement/comments/2vaq1i/\n. Another request:\nhttps://www.reddit.com/r/Enhancement/comments/2vaq1i/\n. It seems to work properly, as far as I can tell.\n. It seems to work properly, as far as I can tell.\n. To be fair I wasn't that thorough, I tried the following on the frontpage, /r/all, and a subreddit, for each filter type: standard non-regex, standard regex /(this|the|it)/ with/without the ignore case flag, regex filtering nothing /$^/, and regex filtering everything /.*/.\nWith the last one the global flag /.*/g will only filter ~50% of posts, so I suppose that's a bug - although there is no reason to use it in a filter and it might just be intended regex behavior.\nRegardless, I have no idea why this happens - we can assume that flags are processed correctly as the i flag works [I think], and there seems to be no obvious correlation between the posts that are filtered and the ones that aren't [both with/without special characters or quotes, even posts in the same domain may (not) be filtered], although it's the same posts that are(n't) filtered each time.\n(I'm obviously missing something, though)\n. To be fair I wasn't that thorough, I tried the following on the frontpage, /r/all, and a subreddit, for each filter type: standard non-regex, standard regex /(this|the|it)/ with/without the ignore case flag, regex filtering nothing /$^/, and regex filtering everything /.*/.\nWith the last one the global flag /.*/g will only filter ~50% of posts, so I suppose that's a bug - although there is no reason to use it in a filter and it might just be intended regex behavior.\nRegardless, I have no idea why this happens - we can assume that flags are processed correctly as the i flag works [I think], and there seems to be no obvious correlation between the posts that are filtered and the ones that aren't [both with/without special characters or quotes, even posts in the same domain may (not) be filtered], although it's the same posts that are(n't) filtered each time.\n(I'm obviously missing something, though)\n. Huh, I knew something strange was going on.\n. Er, I might have said it incorrectly, but the ); on line 218 should be moved down to line 219 rather than deleted, i.e. 219 should be });\n. https://www.reddit.com/r/Enhancement/comments/31wbnr/feature_request_add_a_couple_of_simple_but_useful/\n(and an option to log in to that account at the same time)\n. :-1: on bloom filter until the existing map/set shows up hot in a heap or CPU profile.\nEven if it were 10x faster, map/set lookups for duplicate detection are such a small fraction of our CPU time that I don't think the difference would justify adding another library.\n. How does this look? (I made the Open link in the edit popup open just the first URL, would you prefer if it opened all of them in background tabs?)\n. It should now open the other URLs in background tabs, but due to browser differences, they may not be in order. (I don't think it's a big enough inconvenience to merit writing conditional code for each browser. FWIW, they are in order if you left click in Chrome, but not if you middle click or in Firefox)\n. How does it look now?\n. Closing since the fork was deleted and there are merge conflicts (which now can't be resolved).\n. Closing since the fork was deleted and there are merge conflicts (which now can't be resolved).\n. Superseded by #1858.\n. Yeah no worries - it'll also take longer to merge if you have to wait for me.\n. Hmmm, when exactly does it mess up? I haven't tested it, but just skimming over the code it doesn't look like it should mistake profiles for images, at least.\nCan you post a few links that cause this?\n. I suppose there could also be a use, then, for adding your own short CSS snippets without having to create a subreddit?\nA while ago I wrote this but I wasn't sure if there would be a need for it. It would definitely benefit from contexts, though.\n\n. Also, this PR is related to / fixes #1255\n. When this supports snippets, it will also fix #678\n. Don't forget, this PR fixes issue #1855\n. Yeah it doesn't matter to me.\nThere's not much of an argument to keep it, really, since \"quick message\" adds no relevant information.\n. Hmm, we could just leave the default value of defaultSubject blank, since the majority of users will never change it. (then we don't have to reduce functionality at all)\n. Hmm, it looks really good, but I think the deeplinks would look better if they were directly below the header - they kinda look out of place in the middle of the popup (or maybe that's just me). \n(I just moved the element, obviously with corresponding style changes it would look proper).\n. Trust indicators: https://www.reddit.com/r/Enhancement/comments/42i88n/feature_request_smarttag_users/\n. Duplicates #1243\n. I actually happened to have this one bookmarked as a relatively straightforward fix - but I did read through all of the issues a while ago, so that probably helped.\n. So do we want it to open successfully or not try at all?\n(I can confirm this bug, it occurs on this line because span.commentingAsUser has no href attribute)\n. Related: #479, #1741, #1742\n. Hmmm, it seems like Chrome or Git messed up on your end, since there should be more lines after that one (it works for me, with the same setup).\n. This works now.\n. Additionally: show date of gold expiry and time left on hover.\nSomething like: \"Until Wed Nov 5 23:12:01 UTC (1 month and 2 days)\" (or possibly local date)\nI think we can only get this for the current user, though.\n. @andytuba I figured it was something like that, no worries.\n. Closing for cleanup / due to staleness. Can reproduce in FF 34 and Chrome 39 and 41 on Win 8.1.\nIt seems that the source button, parent button, commentTools, livePreview, voteWeight counts, and tags work - while the reportTheSpammers button, save-RES button, and voteWeight vote handlers don't (I might have missed something).\nI assume this is a problem of not having a RESUtils.watchForElement for those things.\n. No, it looks pretty good at this point.\n. I think this has something to do with the option being called modmail (as opposed to it being implemented incorrectly/differently), since it works if you change the option's name to modmailTest.\nBut for the life of me, I can't find anything that would be conflicting (i.e. another option called modmail, another module accessing modules['keyboardNav'].options.modmail, etc.)\nAlthough it's probably something really minor that I've overlooked.\n. I think this has something to do with the option being called modmail (as opposed to it being implemented incorrectly/differently), since it works if you change the option's name to modmailTest.\nBut for the life of me, I can't find anything that would be conflicting (i.e. another option called modmail, another module accessing modules['keyboardNav'].options.modmail, etc.)\nAlthough it's probably something really minor that I've overlooked.\n. Reproduced in Win 8.1 Chrome 39\nWe stopped using .safeHtml because it trims off whitespace at the beginning. (#1839)\nIt seems that out of all of these characters:\n< > & ` ~ ! @ # $ % * ( ) _ + - = [ ] { } \\ | ; ' : \" , . / ? ^\n\u00a1 \u00a2 \u00a3 \u00a4 \u00a5 \u00a6 \u00a7 \u00a8 \u00a9 \u00aa \u00ab \u00ac \u00ae \u00af \u00b0 \u00b1 \u00b2 \u00b3 \u00b4 \u00b5 \u00b6 \u00b7 \u00b8 \u00b9 \u00ba \u00bb \u00bc \u00bd \u00be \u00bf \u00d7 \u00f7 \u00c0 \u00c1 \u00c2 \u00c3 \u00c4 \u00c5 \u00c6 \u00c7 \u00c8 \u00c9 \u00ca \u00cb \u00cc \u00cd \u00ce \u00cf \u00d0 \u00d1 \u00d2 \u00d3 \u00d4 \u00d5 \u00d6 \u00d8 \u00d9 \u00da \u00db \u00dc \u00dd \u00de \u00df \u00e0 \u00e1 \u00e2 \u00e3 \u00e4 \u00e5 \u00e6 \u00e7 \u00e8 \u00e9 \u00ea \u00eb \u00ec \u00ed \u00ee \u00ef \u00f0 \u00f1 \u00f2 \u00f3 \u00f4 \u00f5 \u00f6 \u00f8 \u00f9 \u00fa \u00fb \u00fc \u00fd \u00fe \u00ff\nOnly < > & remain escaped.\n(I suppose we could just .replace them, but it wouldn't be very elegant)\n. Huh, so it does. I still think updating the regex would be worth it (the old regex matches URLs with 11-digit IDs, but at first glance you wouldn't expect it to), as well as checking for media_url since this still happens:\n\n. Huh, so it does. I still think updating the regex would be worth it (the old regex matches URLs with 11-digit IDs, but at first glance you wouldn't expect it to), as well as checking for media_url since this still happens:\n\n. Superseded by #1975 (cleanup)\n. #1950 (fixed for the next release)\n. #1950 (fixed for the next release)\n. @andytuba Yeah I was thinking that this might be an issue but I haven't had a chance to check yet. - and you merged it while I was checking this, oh well I'll still comment.\n@matheod I believe we can rule out that possibility as follows:\n- RESUtils.getOptions has only ever loaded option values (on this line).\n- Therefore, a module would have to use RESStorage.getItem('RESoptions... to access more than that.\n- There are only 3 other instances of RESStorage.getItem('RESoptions, all of which are safe:\n1. migrate.js (269): RESStorage.getItem('RESOptionsVersion'); - false positive.\n2. bitcointip.js (170): RESStorage.getItem('RESoptions.bitcoinTip'); - Manually overwrites its own options (looks dangerous - how do you add new options?), but doesn't access anything other than optionName.value. (also it's not currently in use)\n3. commentTools.js (405): RESStorage.getItem('RESoptions.commentPreview') - Should be replaced by a migrator, and only accesses option values.\n. #1926 fixed in\nhttps://github.com/matheod/Reddit-Enhancement-Suite/commit/59e0b024e2692b72ee75464d5f59e3554568b738\n. #1926 fixed in\nhttps://github.com/matheod/Reddit-Enhancement-Suite/commit/59e0b024e2692b72ee75464d5f59e3554568b738\n. #1972 is probably significant enough to include here\n. Dupe:\n\nAdded \"you haven't saved your settings yet, are you sure you want to close the settings console yet?\" prompt\n\n\n\nAdded a prompt before abandoning changes to settings options you haven't saved\n\nAlso, for \"Remove autocomplete from console\" you might want to mention that it didn't actually work, so people don't think we've removed functionality.\nAlso \"Cleaned up Inline Image Viewer file structure\" is probably made redundant by \"Refactored showImages.js - All hosts now have their own file\".\nOtherwise, I definitely like the spiffying - thanks for maintaining this!\n. > Fixed the RES gear icon not showing sometimes when SRStyle was off\nWas only an issue with the dev build, so we probably don't need to mention it.\n. Should probably thank SirCmpwn for the upload module - he wrote it and the mediacrush module that imgrush now uses.\n. A few comments:\nEven though the current build doesn't work in Opera 12, you should still add it to Opera/includes/loader.js in case we have a future release.\nUnless there's a compelling reason to create the element manually, you should use RESUtils.addCSS() - and then you can do it in beforeLoad() instead of go().\nAnd some things that would be useful but aren't too important: using addModule() allows you to omit a lot of the boilerplate code (isMatchURL, etc.), and RESTemplates.load (async) is preferable to RESTemplates.getSync.\n. A few comments:\nEven though the current build doesn't work in Opera 12, you should still add it to Opera/includes/loader.js in case we have a future release.\nUnless there's a compelling reason to create the element manually, you should use RESUtils.addCSS() - and then you can do it in beforeLoad() instead of go().\nAnd some things that would be useful but aren't too important: using addModule() allows you to omit a lot of the boilerplate code (isMatchURL, etc.), and RESTemplates.load (async) is preferable to RESTemplates.getSync.\n. This is intended behavior: night mode will disable a subreddit's style (thereby getting rid of the images) if it doesn't indicate that it is night mode compatible.\nTo see them, simply re-enable subreddit style as described above.\n. Fixed in #2001 \n. Not RES, they limit the height of .md:\n\nWorks fine if you disable subreddit styles.\n. Here's the post they linked to, I can't reproduce on Chrome 39, 42, nor Firefox 35 (on Windows).\nIt appears that the templates don't get loaded in time, so templateElements is undefined on this line (per the error).\n. Closing as templates.js is dead (we now import .mustache files directly).\n. Perhaps there are other conflicts then. What do you think? (it wouldn't take that long to put it in a sitemodule)\n. Just made a simple twimg host instead of modifying defaultImage\n. Fixed by #2239, should be closed.\n. There's also the dashboard edit button, which maybe could be replaced by F139 or similar.\nOther than the search magnifying glass, I think that's it, unless there's anything in the spritesheet that could be replaced.\n. There's also the dashboard edit button, which maybe could be replaced by F139 or similar.\nOther than the search magnifying glass, I think that's it, unless there's anything in the spritesheet that could be replaced.\n. Yeah it wasn't RES, but regardless of browser (even a fresh install of Firefox with no other extensions), I got \"error loading expando gfycat.com...\" for all expandos.\nI think it had something to do with CloudFlare thinking I might be DoSing them (I would get \"CloudFlare is checking your browser\" on like 1/4 pageloads), but it seems to be working now.\n@andytuba That sounds reasonable.\n. Yeah it wasn't RES, but regardless of browser (even a fresh install of Firefox with no other extensions), I got \"error loading expando gfycat.com...\" for all expandos.\nI think it had something to do with CloudFlare thinking I might be DoSing them (I would get \"CloudFlare is checking your browser\" on like 1/4 pageloads), but it seems to be working now.\n@andytuba That sounds reasonable.\n. That's reddit's expando right? We don't have Twitch expandos (at least, I hope we don't).\n. sure, should be good now:\n\n. Sure.\n. Yeah, submitHelper intentionally removes stuff from the link, including the stuff after #, so it gets the same results for foo.com#bar and foo.com - but it would be easy to stop it from doing that.\n~~It does this because for some reason (I don't know what I was thinking) I didn't verify this claim  - I guess it just seemed reasonable enough to believe...~~\nEdit: I really need to stop jumping to conclusions.\n. @allthefoxes Are you sure? I get a warning when I try to do it (might have to retract my previous comment):\n\nMaybe it doesn't warn you for old posts?\n. https://www.reddit.com/r/Enhancement/comments/3nole3/is_there_a_way_to_set_certain_settings_to_default/\n. Related: #357\n. Sure, related: #380\n. https://www.reddit.com/r/Enhancement/comments/3jrcp9/feature_request_everytime_a_redditor_copies_a/\n. https://www.reddit.com/r/Enhancement/comments/3y7ro7/feature_request_auto_noparticipation_npredditcom/\nSuggestion from this link: automatic?context= too.\n. Related: #1229\n. There's also #2425. It's a different approach, but I like it, I think it would be less surprising.\n. #2425\n. @gavin19 Yeah, it isn't selectable in the first place, I have no idea what I was thinking.\nI do realize that we can use :, since that's how it was before CSS3, but I feel :: makes more sense semantically, since it's used for other pseudo-elements, while : is for pseudo-classes. Although it's not like someone won't know what :after is, so I can change it if you want.\n. #3665. Confirmed fixed\n. #2646\n. Hmmm, data URis are the exact thing we're trying to avoid with this, but if it's part of the build process then we won't have to deal with them.\n(Thoughts, @andytuba, @gamefreak? FYI I have already gotten this to work [except for Opera 12] without data URIs, but it would be straightforward to feed it through a gulp plugin instead)\n. There is one thing, though: I have a feeling AMO won't like hardcoding the image URLs (even if they're static), since I don't think you're supposed to. In that case, we'll have to use either data URIs or a function like RESGetResourceURL() at runtime.\n. Never mind, Firefox allows relative paths - not sure why I didn't see that in any documentation.\n. Yep\n. If there was an issue I assume it's with Safari, since URLs show up as visited immediately for me in FF and Chrome, for all of my test cases.\n. Turns out they had an iframe embed all along :sweat_smile: \n. I like both of those suggestions; FF will be off by 1px if line-height isn't larger than font-size, though.\n. Damn, I really need to do a better job of explaining stuff. What I mean by \"last selected per-user\" is for it to remember which user you selected for each account, i.e. \"Last time you were logged in to /u/erikdesjardins, you selected /r/erikdesjardins to send messages from. Last time you were logged into to /u/otherAccount, you selected /r/someSubreddit...\". Currently it just stores the last user/subreddit you selected, regardless of what account you were logged in to.\nAlthough I'd guess that most people probably either mod the same subreddits or don't mod anything on their alts, so the current implementation should be fine for now.\n is the shield icon, if we're gonna put it in /r/enhancement (or did you want to wait until we distribute them in RES?)\n. Fixes #2059, then?\n. It should be unaffected (and it appeared to be in testing).\nThe only difference is that it will fade from 0 to to the element's opacity instead of always fading to opacity: 1 - but since the throbber is opaque by default, it acts the same.\n. That's intended (unless you mean that it expanded both sections somehow)\n. This has already been fixed (last release vs. master branch):\n\nPure white makes it lighter than normal text, which is probably too bright.\n. I think this is more of a \"you're not supposed to have both www. and a locale subdomain\" issue rather than a RES issue, especially given that:\nreddit tries to redirect you back to just fr.reddit.com if you click on the next arrow (causing this issue)\n\nAnd I can't even connect to https://www.fr.reddit.com, since their cert is only valid for *.reddit.com\n\n. Another one here: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/d0a0da5a5eefcc61d7948f2e5dacd71b4096bda7/lib/modules/filteReddit.js#L494\n. You could try some of the things described in these posts, but it appears that it stopped working entirely in Seamonkey 2.29, so I somewhat doubt that it will have started working again.\nWe can't really devote any time to getting RES to work on Seamonkey because the userbase is so small - but if you do figure something out, feel free to post it to /r/Enhancement for the benefit of any other users.\n. Unfortunately it's even harder now for RES to work with SeaMonkey, because we depend on a few changes made in Firefox 48 (some JavaScript language features and Firefox API changes).\nAnd it will only get worse when we switch to Firefox WebExtensions, which I do not believe SeaMonkey has any support for (yet).\nThe future of RES on SeaMonkey looks very bleak, sorry.\n. Still, in all likelihood we won't have first-party support for SeaMonkey (again, the userbase is too small). If RES happens to start working whenever it catches up to Firefox, great; if not, \u00af_(\u30c4)_/\u00af we can't really devote time to fixing it.\n. This also needs #4342 to not be fragile / difficult to implement w.r.t. timing. It's not just Username Hider but any module that's disabled when you open it.\ni.e. I can reproduce with Account Switcher or any module I turn off and then navigate to.\n. Sure, sounds good.\n. Interesting, I can't reproduce on Opera 29 (on Windows):\n\n. Interesting, I can't reproduce on Opera 29 (on Windows):\n\n. We only support Opera 42+ now; can't repro. A bit late to the party here, anyways: this occurs because the post is in Markdown but we render it with SnuOwnd. Were it pure HTML, it would be parsed correctly.\nSo most likely unless we bring in a second renderer for tumblr posts (which is a large investment for a niche problem), this issue will remain, unfortunately.\n. stylesheet.js looks like a prime candidate for headReady\n. Sounds good to me.\n. > not sure about pre-chromium Opera though\nIt apparently doesn't, but fastdom will just fall back to setTimeout in that case, so it'll still function.\n. Babel, you say? I've got just the thing.\nAlthough right now that PR has only the default transformers enabled (async functions are not).\nMaybe they should be, though - the possibilities are impressive:\nIn module init functions:\n``` javascript\nmodule.beforeLoad = async function() {\n    await headReady();\n    await fwrite();\n    // add styles\nawait bodyReady();\n\n// not necessary but this allows beforeLoad to resolve when everything is done\nawait Promise.all(addBodyClasses(), addEventListeners());\n\n};\nasync function addBodyClasses() {\n    await fwrite();\n    // stuff\n}\nasync function addEventListeners() {\n    await fread();\n    // stuff\n}\n```\nIn site modules (with some changes to RESUtils.runtime.ajax, and if handleLink only returns info):\n``` javascript\nhandleLink: async function(elem) {\n    var groups = (/^https?:\\/\\/gist.github.com\\/(?:[\\w-]+\\/)?([a-z0-9]{20,}|\\d+)/i).exec(elem.href);\n    if (!groups) {\n        throw new Error('gist.github.com url is not valid: ' + elem.href);\n    }\nvar response = await RESUtils.runtime.ajax({\n    method: 'GET',\n    url: 'https://api.github.com/gists/' + groups[1],\n    aggressiveCache: true\n});\n\nreturn JSON.parse(response.responseText);\n\n},\n// from a totally different module, just to demonstrate\nhandleInfo: async function(elem, info) {\n    var template = await RESTemplates.load('TwitchUI');\nelem.type = 'GENERIC_EXPANDO';\nelem.expandoClass = ' video';\nelem.expandoOptions = {\n    generate: () => template.html(info)[0],\n    media: info\n};\n\nreturn elem;\n\n}\n```\n. moved to #4151. I can get these errors consistently by copying my localstorage from the 4.5.4 release.\nI can fix it with these changes, but it doesn't seem optimal.\nThe old options that are loaded cause errors with the settings console (no default, etc.) during that pageload (not to mention they shouldn't be there). So maybe it should refresh the page after migration. Or maybe load the options into a different modules object for migration, so we don't mess with the actual one. I dunno what the best way is.\n~~Feel free to checkout that branch and finish it (it contains other fixes) if you have any ideas.~~ that branch is now separate\n. https://www.reddit.com/r/Enhancement/comments/3npzc7/click_to_scroll_to_next_thread_topmost_comment/\n. https://www.reddit.com/r/Enhancement/comments/3p2fp7/feature_request_a_button_at_the_top_like_me/\n. https://www.reddit.com/r/Enhancement/comments/40ca0l/feature_request_jump_to_next_parent_comment/\n. https://www.reddit.com/r/Enhancement/comments/40ca0l/feature_request_jump_to_next_parent_comment/\n. https://www.reddit.com/r/Enhancement/comments/4717uj/feature_request_next_button_for_comments_on/\n. You can use ../me/f/all\n. /me/f/all 302s to /r/all now that everyone has /r/all filters. That's because this repo is not identical to the last release - there have been >1000 commits since then.\nSo the indicated code is the fix for this issue. (well, actually all duplicates from any site should be removed now, so that code is redundant and will be removed)\n. Released in 4.6.1 7ec1fcfec7cfaac5351372c426e9c9a2c2076fd6\n. Related to that ^ request: #1685, #1686\n. I didn't look extra hard, but everything else seems to look good.\n. Sounds good!\nExpect ~~a PR for~~ Sass, too, ~~after this one is merged.~~\n. @mc10 This will replace JSCS and JSHint with ESLint, since it's the only linter that supports ES7.\nIt supports every rule they do (and more), aside from requireDollarBeforejQueryAssignment, so it shouldn't be too disruptive to #2303. Currently all of the failing rules in .eslintrc are commented out.\n. @mc10 This will replace JSCS and JSHint with ESLint, since it's the only linter that supports ES7.\nIt supports every rule they do (and more), aside from requireDollarBeforejQueryAssignment, so it shouldn't be too disruptive to #2303. Currently all of the failing rules in .eslintrc are commented out.\n. @Ajedi32 Yep, but you'll probably want to wait for the refactoring to be done - I'm currently converting all of our APIs to use promises, and some other stuff - like this:\n\nI'll ping you when I open the PR.\n. Another :+1:, it's gonna be awesome when we have all PRs linted with this.\nWhat do you think about turning off requireCapitalizedComments (IMO it makes short comments look worse and it's too nitpicky) and maybe not requiring braces on case/default statements? (they're verbose enough with break;)\nThat would be: \"requireCurlyBraces\": [\"if\", \"else\", \"for\", \"while\", \"do\", \"try\", \"catch\"].\n. Also I'd be fine with requireDollarBeforejQueryAssignment, if you want to enforce that.\nI don't think it will catch stuff like this, though:\nvar $foo = $('#foo');\nvar notPrefixed = $foo.find('.bar');\n. https://www.reddit.com/dev/api/#POST_api_block_user. This is intended behavior, toggling a module on/off is saved immediately (it's not stored with the options).\nIt made more sense when the save button was in the module, not the header, though, so this should be made more obvious (or it should be staged like options changes are).\n. If you want you can cherry-pick 144fb5d2956020a7735333d32070345c00bec771 from #2131, which shows a domain specific message.\n. Do you remember if you wrote this before the reddit pref? If so, I think we should probably revert it.\n. True. I didn't consider that.\nOn Oct 19, 2015 7:38 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nI think I wrote it just before the reddit preference was added, yeah.\nHowever, this is still useful for people browsing anonymously.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2318#issuecomment-149377384\n.\n. They don't appear to have an API right now (at least, not on the homepage), but if they release one I could implement this.\n. Ah, looks good. That's what I get for making assumptions.\n. This is actually already fixed, because we switched to https://github.com/erikdesjardins/snudown-js a while ago.. Yep, thanks!. Nice!\n\nFYI if you write \"closes #2348\" (or similar words), it will automatically close the issue when someone merges the PR.\n. > Is there any option to preload every image in a gallery, but only after the gallery has been expanded?\nThat's exactly how it works. In the next release you'll also be able to choose how many images ahead are loaded, instead of the entire album, as @larsjohnsen said.\n. +1 for res-fancy-toggle-button\n. > does not work on link expandos\nYeah reddit generates those.\nI'll discipline the regex for being too greedy.\n. @andytuba the title is in reverse order (i.e. \">\" = \"is superseded by\"), so it's the same as your suggestion, except OP overrides Friend (a la reddit).\n\n. Merged in #2897.\nThanks @helarqjsc! (sorry about the delay)\n. https://www.reddit.com/r/RESissues/wiki/knownissues#wiki_comment_karma_commas\n. It's fixed in Toolbox (where it was originally reported), but the issue also occurs in RES (where it isn't fixed yet).\nI'll fix it now though, it's straightforward.\n. Could this be accomplished with CSS .imgCaptions { white-space: pre-wrap; } instead?\n. This is already fixed for the next release, and it is listed in the known issues on /r/RESissues.\nThank you for the report, but please use /r/RESissues in the future.\n. Could you also add this to Opera12 and Safari's manifests (paths here), and take a look at the build errors?\n. No, thank you :)\nThere's nothing else you need to do (aside from other code tweaks), it's all in our hands.\nAt some point this will get merged - possibly not for a while - and eventually it'll be part of a release.\n. Fixes #2096\n. Merged in #2861.\nThanks @br4nnigan!\n\n. Yeah, that was the intent, and I believe our original concern was subs using Naut so :+1: \n. As of June 12th, we fixed it.\nIt just hasn't been released.\n. Released in 4.6.1 62d604e22097fb1f8d3db8cca42a48973252d650\n. Looks great! :+1: \n. The NER indicator doesn't get hidden when you change tabs; otherwise it looks good.\n\nIt appears that the history.pushState data can be null or undefined, but it doesn't really matter since we don't use it.\n. It looks like JSON.parse is failing because json[0]['outputs'] is just a URL string.\nAlso if you could re-indent with tabs, that would be great.\n. Some videos seem not to work for me, but it's a straightforward fix - I'll submit a PR against your branch.\n. Now that those changes have been made, everything appears to work. :+1: \nAlso: FYI you can merge PRs into branches (even if those branches are in open PRs, like this one) from GitHub, which is probably faster than merging+squashing them by hand.\n. Closing as vidly.io appears to be down indefinitely.\nWill reopen if it comes back.\n. #2713\n. Closing due to concerns brought up by @andytuba and lack of usage (no posts on reddit in the past 8 months). Switching to this is an option - it's compiled straight from C, so updating for any future changes will be easy.\n. Switching to this is an option - it's compiled straight from C, so updating for any future changes will be easy.\n. Yeah, this file is all of the handwritten JS (~20 LOC).\nIt's also compiled to asm.js, so it should be blazing fast (not that that's important for our usage anyways).\n. Yeah, this file is all of the handwritten JS (~20 LOC).\nIt's also compiled to asm.js, so it should be blazing fast (not that that's important for our usage anyways).\n. This was already fixed in #1930.\nmaster differs quite a bit from the current release.\n. What version of the API are you using? Current dev build handles it fine (uses imgur's v3 API).\n\n. What version of the API are you using? Current dev build handles it fine (uses imgur's v3 API).\n\n. Released in 4.6.1\n. This check throws an error because arrows no longer have an onclick attribute.\nIt appears we can use the .archived class in its place.\nI suspect that \"hide arrows for archived posts\" is also broken.\nI'll fix this in a few days if I have time.\n. https://www.reddit.com/r/RESissues/comments/3p7yky/bug_recent_reddit_change_on_voting_javascript/\n. Yeah, sounds like a good idea - thanks for the heads-up.\n. Yep, still works :+1:\n. @rapkin as long as they can't have audio (or it's muted by default), then it sounds okay to have them opened by \"view images\".\nAdding elem.expandOnViewAll = true; in your handleLink method should do it, but right now that's limited to GENERIC_EXPANDO, so you'll also have to remove the elem.type === 'GENERIC_EXPANDO' check from here.That check seems like it would be confusing at worst and redundant at best, so I don't see an issue with removing it.\nYou can append to #2780 and we should get it merged in for 4.7.0.\n. http://api.sunrise-sunset.org/json appears to send CORS headers, so it's all good on that front.\nAlso:\n\nUsage limits and attribution\nThe sunrise and sunset API can be used free of charge. You may not use this API in a manner that exceeds reasonable request volume, constitutes excessive or abusive usage. We require that you show attribution to us with a link to our site.\n\nSo we should be fine if the option is disabled by default and we link to the site in the option description.\n. Moving sunrise/sunset-based nightmode to #3657. Looks good, aside from a few nits.\nFYI if you add some variation of \"fixes #890\" to the description, it'll automatically be closed when this is merged.\n. Looks good, aside from a few nits.\nFYI if you add some variation of \"fixes #890\" to the description, it'll automatically be closed when this is merged.\n. This is already fixed, and is listed in the known issues on /r/RESissues.\nPlease do not open an issue in the repo without at least confirming that it actually happens in said repo.\n. This is already fixed, and is listed in the known issues on /r/RESissues.\nPlease do not open an issue in the repo without at least confirming that it actually happens in said repo.\n. Looks good, but this should probably be part of voteEnhancements; I don't think we need a new module for it.\n. I don't see any reason it wouldn't be welcome.\nThere is one issue you'll run into: they don't seem to send CORS headers, so you'll need to request optional permissions for Chrome. Right now, the code to do this is a bit horrifying (it should - and will, eventually - be 1 line), though you can pretty much copy most of that.\n. Huh, it seems like curl was lying to me...or I'm just blind at reading the headers.\nIn that case - yeah it'll be easy.\n. Right, RES will handle images with normal image/video extensions on any domain.\nSo it does seem like that Photobucket code is unnecessary - though it could be for handling links that don't have a file extension but are still direct links to images, \u00e0 la Steam.\n. I'm not sure if caption is used; the properties that are used are a bit ad-hoc (and mostly undocumented) and they depend on the type, I think deviantArt and tumblr use all of the type: photo ones.\n. Merged in #2851.\nThanks @Ajedi32! (sorry about the delay)\n. This was intended when it was changed, but nothing uses it right now, so I imagine it should be changed to 'caption' in imageLink.\nThat comment in example.js is simply incorrect, it should be \"below the title\".\n. Thanks!\n. Sorry about the delay.\nAt least, it seems that at some point reddit implemented this on their end; if I repeatedly click \"submit\" or press ctrl-enter, I get \"please wait a few seconds and try again\" and only one comment is submitted.\n. Looks good, play/pause works, full https :+1: \n. Done.\n. RES will not make it easier to deal with anti-spam measures.\n. cornflowerblue is even better\n\n. There are a few lines in the readme that reference these paths, IIRC.\n. @githue is right, this seems to be novel - look at a permalinked comment or a new comment (with gold):\n\n@ScoreUnder master is develop, FYI\n. Thanks @ScoreUnder!\n. Declining in favour of border-color (in #2893). Thanks!\n. FYI I'm currently rewriting all of our async stuff to use async/await / promises, so if you could hold off on merging major code changes (like getting rid of var) that would be great - formatting changes like these shouldn't be too much of a problem though.\n. CSS handling has been greatly improved since you opened the first PR, so if it isn't too much trouble, could you bring this up to date with those changes?\nYou can look at highlightScores for an example, but basically you'll add bodyClass: true to the options, add your CSS to lib/css/modules/_voteEnhancements.scss, and you won't need to use addCSS.\n. Fixed in master and stable (release/4.6.0).\n\nhttps://www.reddit.com/r/RESissues/wiki/knownissues#wiki_nightmode_-_blindingly_white_blocks.2C_dark_text_on_dark_background\nPlease use /r/RESIssues in the future, or at least search the repo issues before opening another one.\n. Running QUnit tests in Travis should be pretty straightforward; working on that now.\n. Sorry, yeah I meant Gulp - it's a bit more complicated in master than #2584 (which only works in release/4.6.0) cause we need to run it through Babel first.\n. Appears to be fixed for me too\n. #2592\n. Makes sense; if you do that, you might as well rename _commentBoxes.scss to _commentStyling.scss (or whatever you decide to call it), so all the names lines up.\n. Makes sense; if you do that, you might as well rename _commentBoxes.scss to _commentStyling.scss (or whatever you decide to call it), so all the names lines up.\n. That simply has yet to be released.\n\n. That simply has yet to be released.\n\n. Gets overwritten because we still copy OperaBlink/*.json here.\n. Gets overwritten because we still copy OperaBlink/*.json here.\n. Fixed for 4.7.0 (by virtue of there not being a separate OperaBlink version)\n. This makes sense to me:\n\nThat ship has probably sailed by the time its been posted on reddit anyway\n\nWhile RES makes it easier, the account holder is already taking the risk that too many people will click through and download the image (and I've seen dropbox images in popular threads have public access throttled/revoked, so it wouldn't be unprecedented).\nCalling for @honestbleeps or @andytuba to make a final decision\n. Probably me, will investigate tonight.\n. #2610\n. Merged in #2868.\nThanks!\n. Fixes #2624?\n. Hmmm...can you try turning off all extensions except RES, to make sure it's not due to a conflict?\nAlso: does it happen on all reddit pages? If it doesn't, what page types doesn't it happen on? (wikis, comments, post listings, user profiles, etc.)\n. Yeah, that's what I plan to do (impl) for 4.7.\nI could port that part of init over, but a 50ms timeout would probably be safer for 4.6.1.\n. That's done explicitly by the individual siteModules (e.g.) - so I don't see why it wouldn't work (addImage() is called for each image in the album). I'll check again.\n. Vidble albums have always intentionally linked to the image itself, unrelated to this issue. I could fix that separately, I guess.\n. Yeah I didn't explain quite correctly - since RAF passes in the start time of the actual frame, we would use that instead of calling now() immediately (my examples were incorrect, see the revision history of this gist). Which accounts for any other processes, though it'll result in the first chunk per frame taking all of the time and everything else just processing one item.\nThis is pretty much all solved by queuing, like you suggested - proof of concept, with logging.\nNow I think this has the advantages of our two implementations without the downsides, but maybe you'll see something I don't. It'll process items from each queue (at least one per frame) until we reach frameTime after the actual start of the frame (i.e. the fraction of a frame we want to use at the desired framerate). As far as I can gather, RAF callbacks are the last thing to happen before the frame is rendered, so we can get an accurate picture of the framerate by looking at now() - start, instead of needing to wait for the next frame.\n. > gotten and passed synchronously to the setTimeout callback which would not take into account outside processes\n+1, I didn't put much thought into the fallback.\n\nI don't think we need the duty coefficient anymore\n\n+1, makes sense to me too.\nEdit: I don't think Babel will polyfill RAF, since it's not an ES6 or ES7 feature. I'm not actually sure what spec it's from...maybe HTML5? But it looks like it's supported by every browser we support.\n. Merged in #2852.\nThanks @LiterallyWTH!\n\n. Are you certain that it used to act differently in 4.5.4? In a fresh install of 4.5.4, mediaBrowseMode seems to act the same way it does now - ignoring scrollStyle and always locking to top when you move down.\nIt is entirely possible that there's a third setting affecting this, though.\n. And #3347 made onHideMoveDown not scroll. This is a hotfix specifically for 4.6.1...it'll be merged to master at some time, but that time is not now.\n. > time to refactor\nComing to a master branch near you...eventually:\n\n. Yeah, I'm converting everything to native promises. I'm also getting rid of handleInfo since it adds pointless boilerplate when you can await as many things as you need in handleLink.\nI'm done almost everything, just need to do a few more things (repenting for my sin of caching to permanent storage, etc.).\n. He's dead, Jim\n. #2815\n. This is intended, we were breaking AMO rules by injecting that script - see https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2133#discussion_r26986093\n. Merged in #2891.\nThanks @jkcchan!\n. No, there are a few things that make this infeasible.\nFirst, RES uses the background page for some in-memory caching - and as far as I'm aware, there isn't a trivial way to persist it.\nlocalStorage isn't an option because RES already uses it (it has limited capacity), and neither is chrome.storage because we'd have to add another permission (which disables RES with a \"RES needs more permissions\" dialog that scares users).\nSecond, it's not worth the performance loss, period.\nOn my machine, event pages take 100-200ms to wake up (and it's no slouch). Since RES has to load all of its options from the background page before it can do anything, this delay would be very noticeable.\n. https://www.reddit.com/r/Enhancement/comments/42117y/feature_request_keyboard_navigation_jk_scrolloff/\n. In the future - assuming you were having issues with push rejections - force-pushing with git push -f will work.\n. Yeah,  the only difference between this and 4.5.4 is an extra j/k scrollStyle option called legacy, which behaves like shift[-alt]-j/k (j/k has never acted this way).\nEverything else looks and acts like 4.5.4, as though it was never an issue.\n. It's the concern that this PR deals with. See the other Concern- labels for an example.\nNo, but it will be in the next release (ETA unknown).\n. It does decodeURIComponent, so %20 will work.\nLooks like we'll have to explicitly replace(/\\+/g, ' '), since even decodeURI doesn't decode +.\n. While we appreciate your contribution, we don't feel that this is something RES should be responsible for: it isn't a reddit-specific problem, for one, and it's already solved by numerous other extensions - the latter being just as generic as this module.\nHell, they do a better job than RES ever could, since they work everywhere on the web.\n. Closing since the fork was deleted and there are merge conflicts (which now can't be resolved).\n. Closing since the fork was deleted and there are merge conflicts (which now can't be resolved).\n. ~~Oh yeah - I have no idea if the Safari backend works. I'm gonna try running OS X in a VM tonight to test it.~~\nEverything should work now.\n. @mc10 Yeah, I'll see what I can do about that.\n. Actually I'd rather keep them separate so the intent of each commit is more obvious.\nI think I care more about having a descriptive blame than a clean history.\n. @mc10 I do agree; I just think it would be hard to do it right for this PR (cause it's so broad).\n@Ajedi32 I guess they forgot to close it (or they're not going to until the release), it's fixed by this PR.\nFrom what I hear, they're planning to release 6.5.0 on Sunday, which fixes both of the blocking issues.\n. It will. But it won't be in the next (patch) release. It'll probably be in the next minor version release (4.7).\n. ~~One thing of note: this adds a new storage permission, so Chrome will disable RES for everyone.~~\nEdit: nope! #2812\n. ~~One thing of note: this adds a new storage permission, so Chrome will disable RES for everyone.~~\nEdit: nope! #2812\n. Superseded by #3539. @OmgImAlexis since this will be a custom filter you'll be able to combine it with other arbitrary filters, like \"is browsing frontpage\".. Closing for cleanup, can reopen if we decide to use Gitter. Thanks!\n. Related to / possibly duplicates #1160\n. Closing as duplicate of #1160, I guess I forgot to.\n. #2754\n. Merged in #2826.\nThanks @iampueroo! \n. Merged in #2825.\nThanks @kingreza! \n. https://www.reddit.com/r/RESissues/comments/4opt9t/bug_f_key_not_working/\n. https://www.reddit.com/r/RESissues/comments/4opt9t/bug_f_key_not_working/\n. as a complement to that:\n(this will probably have to be prefixed too because you might say \"module\" out of context)\n\"module \" -> link to module\n\"/u/automoderator [extensions|conflict|disable]\" -> \"Have you tried disabling all other extensions...\"\n\"/u/automoderator [errors|console]\" -> \"Check the console...\"\nWe can basically copy the wording for everything from the wiki, cause clearly nobody reads it.\nMore from the wiki that could be useful (although not as much):\n\"/u/automoderator offandon\" -> text from https://www.reddit.com/r/RESissues/wiki/postanissue#wiki_turn_it_off_and_turn_it_on_again\n\"/u/automoderator search\" -> text from https://www.reddit.com/r/RESissues/wiki/postanissue#wiki_search__.2Fr.2Fenhancement_and_.2Fr.2Fresissues\nAnd maybe use a prefix other than mentioning automod, like ! or something; I don't feel strongly either way.\n\"!module \", or \"!option  \" actually looks pretty good\n. I'm not really a fan of the duplicate buttons either.\nI think you could get rid of the button, and have it scroll to top when you click on the title (if it doesn't already do that). I think that'd be discoverable enough, especially with cursor: pointer.\n. Hmmm, that's unfortunate.\n\nI still think it would be neat to have\n\nYeah, it should work well enough :+1: \n. #2822\n. :+1:\nI did immediately think \"refresh\" for the gifv icon, but I'm sure it'll be fine once I get used to it.\n\nmix-blend-mode\n\nNice! If that also lets you make nightmode NSFW expandos red again, we can close #2630.\n\nI'm iffy about making a high-res version because it would break even more themes.\n\nMakes sense.\n. #3415. #2763\n. Merged in #2822\nThanks @anhallbe! \n. Cool!\nIt looks like this could also be fixed by removing the authorDidReply check on L231/232. Could you try that? If it works, I'd prefer to do it that way, for simplicity.\nFeel free to force-push to this branch, if it does.\n. It's probably still necessary for loading new top-level comments at the bottom of the page.\n. Thanks!\n. LGTM\n. Thanks!\nFYI you can keep pushing to the same branch (even force-pushing, if you want to), and it'll update the pull request, you don't need to create a new one.\n. merged in #2824\n. Fixes #849 (more or less)\n. I think this line should start with this.thing instead of this.entry.\nI'll probably fix this tonight if nobody gets to it first.\n. This is the 4.6.1 counterpart of #2752\n. No, I think it'll be good to land once updated. (@andytuba?)\n. Fixes #388 (for autoclose)\n. LGTM\n. Eh, I don't think the overhead would be worth it.\nWe check for chrome.runtime.lastError in Chrome (which isn't done in toolbox), and there are onerror handlers for every transaction in Firefox. If the browser claims to have stored something, we should trust it, IMO.\nWell, to be precise: those things are only done in 4.7, which probably explains any silent failures that are happening now.\nA troubleshooter button to do this would make sense, though.\n. LGTM with those helpers removed\n. @edgr-sanchez At this point we're just waiting on Apple bureaucracy, unfortunately.\n. Have you tried the readme?\n. Half the length and more accurate? LGTM!\nI don't feel strongly about the Oxford comma either way.\n. Yep, looks good :+1: This will likely be merged to master shortly after #2786 (soon).\n. That param is just a cache buster, it doesn't do anything aside from making the URL look different. (i.e. both of your links are the same image for me)\nIf you clear your cache, the expando will show the edited image.\n. Related #2630\n. Closing since the fork was deleted and there are merge conflicts (which now can't be resolved).\nAlso, I don't expect Chrome will ever relax their restrictions on changing existing permissions, so unfortunately I doubt we'd have been able to accept this.\n. Closing since the fork was deleted and there are merge conflicts (which now can't be resolved).\nAlso, I don't expect Chrome will ever relax their restrictions on changing existing permissions, so unfortunately I doubt we'd have been able to accept this.\n. LGTM modulo nits\n. Awesome, thanks!\n. #3533. PR in question: #2690\nWhoops, that was a code-review fail. Let's fix that up.\n. LGTM % those nits.\nAnyone have any final comments before I test and merge? (hopefully some time this week)\n. Thanks @larsjohnsen!\n\n. Unfortunately I'm gonna have to give my :-1:\nThis is ostensibly a good idea, but in the long run, I think the overhead would end up costing us more time than we save - it's not usually necessary to run npm install, and when it is, it's not unreasonable to do manually.\nOn slower machines npm install can take nearly a minute to traverse our dependency tree, which is too long when the initial build takes ~30 seconds.\n. > break out the expando renderers into their own little modules\n:+1: or React components in my ideal world\n. This might be caused by  pointer-events: none; on the overlay. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/6128df9b75fb745305060e4eaecfd17ab95d2378/lib/css/res.scss#L1411\n\nandytuba BOT [1:26 PM] i wonder if pointer-events is strictly necessary\nerik [1:28 PM] hmmm probably not\nerik [1:28 PM] since it's on the .expando-button itself\nandytuba BOT [1:28 PM] that would be neat if pointer-events was actually interfering we could just get rid of it to fix touchscren\n. Merging this now cause it's critical that we find any bugs.\n\nLooks like we'll still have Edge compatibility too, since the mouse gestures extension uses chrome.storage.\n. :+1: LGTM\n(that's a much better favicon url than mine)\n. Auto nightmode was broken because somewhere we did nightmodeOverrideStart + nightmodeOverrideLength, but one of them was always a string, so it ended up doing something like '12345678' + 90 = '1234567890'.\nAnd that result was compared to the current timestamp using >, coercing that string to a huge number, so the comparison was always false. Yay, dynamic typing!\nI fixed it during 4.7 refactoring though, see #2279.\n. https://www.reddit.com/r/Enhancement/comments/4rge1e/feature_request_nsfw_filter_off_after_5_pm/\n. 6% coverage is much more like it!\n. It did when this PR was merged (18.19% coverage in utils.js): https://coveralls.io/builds/5606982/source?filename=lib%2Fcore%2Futils.js\nSeems like ignoring dist and lib/vendor messed it up, which is a bit absurd.\nhttps://coveralls.io/builds/5630077/source?filename=lib%2Fcore%2Futils.js\nI'll look into it\n. (start work for 5.6, I don't expect it to be done by then). part and parcel of #2278. Caused by Dashlane: https://www.reddit.com/r/firefox/comments/3yzns6/temporary_hangs_on_scriptskwiftffjetpackminjs1/d0zhgv0\nI'll add it to the known extension conflicts.\n. The favicon isn't working because Edge doesn't support base64 favicon URIs.\nFor example, try running this snippet in the console in Chrome or Firefox vs Edge.\n. Thanks!\nFor those following along at home: specifically, this adds a delay between when you start dragging and when it replaces the element with a placeholder, so stuff doesn't get shifted around if you accidentally drag.\n. Yeah, #2871\n. For sure, but we should probably figure out the root cause first -- new Blob() and URL.createObjectURL() work fine in a codepen in Edge.\n(for a certain definition of \"fine\" - it seems to ignore the download attribute and gives the file an opaque name)\n. To add on - the function linked above can be reduced to:\njs\nfunction backup() {\n    const blob = new Blob(['something something']);\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    RESUtils.click(link);\n}\nand it errors in the same way.\n. It's not possible to block someone who hasn't messaged you, even through the API https://github.com/reddit/reddit/blob/fcdbaa7147316f3f67903a15b02b564ef03f8b74/r2/r2/controllers/api.py#L1804-L1818\n. It's now possible to block anyone (through the report dialog), so this is feasible.\nhttps://www.reddit.com/dev/api/#POST_api_block_user. related: #2305. LGTM % that one nit\n. Tested; LGTM\n. 10/10 would fix again. Thanks!\n. LGTM % one scss-lint failure\n. Huh, I'm surprised that nobody noticed this before. Edit: oh, it's only broken in dev\nFor those following along at home: caption isn't in any of Imgur's response models.\n. > Twitter not completely expanded (images not shown)\nonExpand might be getting called too early (the expando element has to be in the page for it to work).\n. The album size placeholder seems not to shrink when resizing:\n\n. I'm not a big fan of the \"Show in film strip mode\" button -- I don't think it would be used very often, and it seems a bit out of place, but we'll see what others say.\n. Of course, I can't forget to mention that refactoring showImages is something that we've been wanting to do for a while, thanks!\n. showImages.js:987\noptions.pieces = await Promise.all(options.src.map(async piece => {\nasync piece => doesn't need to be async, you can return synchronously and Promise.all will take care of it\n. showImages.js:1267\nconsole.error('Could not post \"play\" command to iframe', options.embed);\nMight as well log the error e itself here, it could be useful (and below for \"pause\")\n. showImages.js:1519\nconst rc = e.target.getBoundingClientRect();\nNit: destructure this const { top, left } ...\n. @larsjohnsen There are a few TODOs left, are there any more that you want to fix before this is merged?\nOtherwise, this will probably be good to merge after another round of review and testing.\n. showImages.js:320 Nit: extra newline\n. showImages.js:376 .filter(v => v.matches('.collapsed'))\n(as well as any other usage of Element::matches)\nEdge doesn't support that so we need to use $(v).is('.collapsed') :(\n. showImages.js:389 this.forEach(({ expando, data }) => {\n(and below in lazyUnload)\nNit: use for-of loops instead of .forEach when it's not at the end of a .map, .filter, etc. chain\n. showImages.js:946 options.credits = html ? html.html() : null;\n(and a few times below)\nhtml will always be a jQuery object here, so you don't need the ternary (I think?)\n. showImages.js:957 options.sources = $(imageLink).data('sources');\nIt looks like only Onedrive and defaultAudio use this.\nIf it's trivial to convert them to using expandoOptions too, I'd love to get rid of it; if not, don't worry about it.\nEdit: This might not actually work how I expected, feel free to disregard\n. showImages:1136 console.log(index, index >= newIndex - preloadCount && index <= newIndex + preloadCount);\nMissed debugging?\n. showImages:1485 const dragSize = p(p(e.clientX - left, 2) + p(e.clientY - top, 2), 0.5);\nUse Math.hypot\n. showImages.js:1658 .then(_.once(setAdvancedControls));\n_.once is redundant here, promise callbacks are only called once.\ni.e. the Promise.all() will resolve after both mouseenter and loadedmetadata have fired, not once for each.\n. showImages.js:1663 element.parentElement.replaceChild(generateImage({\nNit: maybe this would be a bit more concise with $(element).replaceWith(generateImage(...))\n. Looks good aside from those nits; I'm testing as we speak\n. > For some reason is an empty string returned instead when there's no content.\nAh! Yes, because then the internal $(this).html(...) call looks like $(this).html().\nWe should probably fix this on the safeHtml side: in vendor/index.js, adding || '' after the Pasteurizer.safeParseHTML(string).wrapAll('<div></div>').parent().html() should do it.\n. showImage.js:61 description: 'Preload 2 gallery pieces for faster browsing.',\nCan you make the number of pieces that get preloaded into an option, default 2?\nThat seems like a good default, but I'd like to have the option to load more.\nEdit: Also, while you're at it you might as well move bufferScreens to be directly below conserveMemory (since it depends on it), I'm not sure how they got separated.\n. showImages.js:399 if (testKeepLoaded(data) && media.state === mediaStates.UNLOADED) {\nmedia.state is tested, but is never assigned.\nstate is only held in a local (on line 1165 let state = mediaStates.NONE;)\n. Woo thanks @larsjohnsen!\n\n. Confirmed in 4.6.1 and master. We need to allow ids with ~~size suffixes~~ the new g and r suffixes.\n. I can't reproduce this, although I have seen a few reports.\nIIRC one of them was caused by another extension which was rewriting the URL at the same time as RES' escapeNp -- does it still happen if you disable everything except RES?\n. Closing for cleanup, you may reopen with changes mentioned in https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2921#issuecomment-235066382. Already fixed in #2903 (four of us have fixed this now), maybe I shouldn't have opened an issue :sweat_smile:\n. Closing in favour of #2903\n. We likely need to update node-sass to 3.7.0\n. #3412 should address this\n. Review note: although this is not ideal, I'm accepting it because:\na. There doesn't seem to be a better way\nb. Few videos actually use the native controls (only direct links to video files, IIRC)\n. Reddit already does this :P\n\n. Sorry about the delay. This is now slightly out of date; I'll merge it immediately after it's updated.\n. Looks good, thanks!\n. Thanks!\nGot any test cases we could add to /r/restests?\n. Nope. Thanks again!\n. Can confirm this.\n. They most certainly can be. You just need more specificity.\nSimply appending .res to the selector (and using !important, of course) will do it. (see /r/erikdesjardinstest)\n. This really doesn't play nice with regex filters: you can't edit existing values (only delete) and you can't use commas (e.g. in repetition groups). AFAICT to remedy this we'd have to switch out the autocomplete/tokenizing lib; not sure if it's even worth it.. It's in master...I don't see how it could fall through the cracks? :confused:\n. Thanks!\n. Thanks!\n. Spacing is a little tight for me, strangely (in both FF and Chrome on Windows):\n\n. You're a CSS wizard. Thanks!\n. Thanks @corylulu!\n. This appears to break image moving (shift + drag) for images with captions (not completely sure if that's the cause), e.g. this one. Test comment (subject to change).\n. Demo gif because why not:\n\n. #2866\n. ...of course they are, duh :sweat_smile: \nI think the delay from the batching fooled me\n. Good for rebase on #3531 now\n. Awesome!\n\n. Looks good, thanks!\n. This likely won't work until pixiv supports https embeds, unfortunately.\n. Note to whoever merges this in the future: put (thanks /u/arandomguydontmindme) in the merge commit\n. Thanks!\n. Thanks!\n. There's been a prerelease out for a month, but sure, we're in no rush\n. v3 has now been out for a month; AFAICT the only issue that has appeared is swallowing exceptions in $(function) / $.ready(), which we don't use.\nAt this point I doubt any major issues will show up, so let's go for it.\n. Fixed in #2970; will be released in 4.7\n. This is likely not a concern anymore, since the vast majority of addCSS calls (all except 32) were moved to hardcoded CSS / body classes. I'm seeing just 7 style elements added with default settings.\nSo :-1: if this just means extra complexity to support adding/removing individual styles (which it probably will).\n. We can also remove the baseUrl from makeOptionSearchResultLink in search.js, yay!\n. Awesome, thanks!\n. Awesome, thanks!\n. Looks good, thanks!\n. Looks good, thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Merged in #3556, thanks!\nSorry about the delay.\n. I can reproduce this; should be a simple fix, thanks.\n. I can reproduce this; should be a simple fix, thanks.\n. I reran the build; failure is legit this time:\n/home/travis/build/honestbleeps/Reddit-Enhancement-Suite/lib/modules/showImages.js\n  531:2  error  Mixed spaces and tabs  no-mixed-spaces-and-tabs\n. Looks good, thanks! Sorry about the delay.\n. @andytuba I think so; I'd be amenable to enabling it by default.\n. Thanks! Don't rush it on my behalf; this works for now\n. Appveyvor failure is spurious; appears to be an intermittent issue with node / node-sass / node native bindings on Windows\n. Unfortunately it's not a drop-in replacement. The quotas (8k per item / 100k total) are too restrictive for our use. Especially the per-item limit; 8k is trivial to exceed.\n. Adding this to 4.7 because it's probably as simple as adding .unhide or similar to a selector\n. Fixed in #2903\n. The last release was 4 months ago, so I'm guessing that an option for this would not solve your problem (it's caused by settings getting reset).\n. This significantly changes the coverage, but I believe it's more correct now. (24% was certainly wrong, at any rate)\n. Hmm yeah then we start to blur the line with threadScrollStyle/siblingScrollStyle.\nMaybe replace threadScrollStyle and siblingScrollStyle with nonLinearScrollStyle (or similar name), and use it for move*Thread, move*Sibling, moveToParent, and move*ParentSibling.\n\nwould be the same as moveToParent\n\nWe could have it move to the sibling before the parent, i.e. with:\nA\n  B\n    C\n  D\n    E\n    F <- selected\n...it would move to B.\nI'm not sure how often that would be useful, though.\n. Bisected, e8579aed13691b66b421acc1761b11eafa463a83 appears to be the culprit\n. > Edit: Nope, the browsers still doesn't agree.\nThis seems to work for me -- can you link a post where it doesn't work?\n. Ah, okay. Thanks for the fix!\n. I bet it's #3159 updating the size to the size of the 1px transparent placeholder. Thanks, Firefox\n. LGTM otherwise\n. #3188\n. LGTM otherwise (skimmed through)\n. Thanks!\nThis doesn't seem to break the extension in stable Safari (9.1.1) because unhandled exceptions don't (and shouldn't) kill the background page, but opening new tabs was definitely broken!\n. > probably the reason they were rejecting you.\nPretty hard for that to happen when 4.6.1 was cut 2 months before this change :laughing:\n. @larsjohnsen I thought I remembered you fixing that, I may have fooled myself into thinking it was broken.\nTagging unconfirmed until I test it more thoroughly\n. This was happening because my main Firefox profile was somehow corrupted, see bug 994918.\njpm run was unaffected because it always uses a fresh profile. Deleting and recreating my main profile fixed it for jpm xpi.\nI really hope this isn't a common thing, because there's nothing we can do besides telling users to delete their Firefox profiles...\n. Redditors can be, ahem \"security-conscious\" (which is why we have zero telemetry), so probably not. We might have opt-in telemetry in the future, but that's a fairly large project.\nHopefully this won't be a problem for very long though, what with the planned stabilization of WebExtensions in Firefox 48, where hopefully their implementation of chrome.storage will be stable.\n. Confirmed to work in all browsers; thanks!\n. Minor style issue:\n/home/travis/build/honestbleeps/Reddit-Enhancement-Suite/lib/modules/showImages.js\n  916:5  error  '&&' should be placed at the end of the line  operator-linebreak\n. Was fixed in #3222; please search before opening issues.\nThis is fixed in the beta, if you're feeling adventurous.\n. Thanks!\n. There are multiple1 2 3 extensions that already solve this, and it's not at all a reddit-specific problem, so I don't feel that it makes sense for RES to fix it.\n. Thanks!\n. \n. Done. FYI the next stable release will be 5.0.0 or something with an even minor version\n. Hmm, looks like this has never worked. :sweat:\nI'll change the description, because technically there's no need to subscribe forever (posts are archived and can't receive any more comments after 6 months, so 200 days is good enough).\n. > ostensibly new comment count shouldn't store visits [while incognito] unless the user specifically opts into that\n:+1: Yeah whenever we implement #1330 that's what it should probably do\n. :+1: for keeping it separate from the modules; then we can share them without adding dependencies between modules, and then we don't need to import an entire module if we're using them elsewhere.\nFor maximum safety we probably want it structured something like:\nlib/page-objects/someThings.js:\njs\nexport const foo = '.foo';\nlib/modules/foo.js:\n``` js\nimport * as elements from '../page-objects/foo';\ndocument.querySelector(elements.foo); // ok\ndocument.querySelector(elements.notAnElement); // Error: exported name 'notAnElement' not found...\n```\nOr put them in constants/ and keep them fully decoupled from modules, i.e. lib/constants/thingSelectors.js, lib/constants/linklistSelectors.js\n. > would lead to a messy collection of different kinds of constants\nGood point, I like lib/constants/page-objects\n. > how long will this project exist / be supported?\nIt's a Facebook project, used heavily in the React repo (and being expanded to other Facebook repos like graphql), and is the defacto replacement for React.PropTypes. If it does disappear (I'm willing to bet it won't, but let's entertain that), we can run the code through Babel with only the flow-strip-types transform*.\n\ndoes the benefit(s) it provides outweigh the higher barrier to entry\n\nI think I can say \"easily\", because the barrier to entry is not much higher.\nLet's look at quickMessage.js: I changed ~20 lines to add null-checks, etc. But that's only vanilla js, so you don't need to learn anything else; it's effectively just replacing a review comment \"you should null-check this\" with automation. And in that regard Flow's errors are very easy to understand:\n\nBesides that, only the two exported functions have type annotations (everything else is inferred), so your average contributor (adding a small feature or fix to a module, not adding or changing APIs) may never even see a type annotation.\nIf you're modifying core APIs or utils, you will have to understand Flow. But, to be blunt: if someone is unwilling to learn, I don't want them touching core APIs or utils.\nTo be honest, I do think the \"barrier to entry\" concern is a bit overblown. As long as we don't make a big deal out of using Flow, I doubt most new contributors will realize that we do. If the tools we use are too intimidating, then we should remedy this by improving our docs to emphasize that PRs don't have to be perfect, and that contributors should expect to work with us through review (in fact we should do this anyways, #3325); not by removing said tools.\nAnd lastly: if it does turn out to be a barrier, the great thing about Flow is that it's not all-or-nothing. We could decide to type only utils/, core/, environment/, and leave modules/ untyped. Of course this also misses out on a lot of the benefits, so I don't want to resort to it, but it is an option.\nTL;DR: Flow is backed by Facebook; it's not going anywhere. Contributors don't need to know anything\u2020, they can continue to develop in vanilla js without types (type errors don't prevent you from building), although CI may fail when they open a PR (but that's okay!). Review may take a bit longer when there are type errors, but it's justified by the increased safety/maintainability.\n*: but this will break whitespace formatting\n: but ESLint can autofix (almost) all whitespace\n\u2020: a slight exaggeration\n. You don't need to apologize; it was a reasonable concern, and I'm glad to explain :smile:\n. This is caused by Chrome 49 being out of date (NodeList is not iterable).\nWe don't support old versions of Chrome, sorry. We should have updated the minumum_chrome_version farther than 49; this will be done for future releases (#3349).\n. This is caused by Chrome 49 being out of date (NodeList is not iterable).\nWe don't support old versions of Chrome, sorry. We should have updated the minumum_chrome_version farther than 49; this will be done for future releases (#3349).\n. @slikts Of course it was tested in stable Chrome. I mentioned Canary in that thread cause that's where I would expect it to break.\nWorks on my machineTM (sorry)\n\n. @slikts Of course it was tested in stable Chrome. I mentioned Canary in that thread cause that's where I would expect it to break.\nWorks on my machineTM (sorry)\n\n. > es6 generator functions are only enabled under that flag\nSlight correction here: Chrome now supports all of ES6 (more-or-less) without that flag, including generators:\n\nAt this point, that flag enables tail-call optimization/syntactic tail calls, async/await (maybe), and some other experimental things. I wouldn't suggest you enable it for JS development.\n. Should be an easy fix, just adding 'wiki' to module.includes, assuming that's the issue\n. Should be an easy fix, just adding 'wiki' to module.includes, assuming that's the issue\n. Aside from that, LGTM and tested\n@larsjohnsen can I get a LGTM before merge?\n. Thanks all!\n. I suspect this also.\n. I suspect this also.\n. LGTM\nIf only we could do this retroactively...\n. LGTM\nIf only we could do this retroactively...\n. @mckennajones FYI looks like @thesbros took care of it\n. I think the cache time is incorrectly \"time since last access\" instead of \"time since last fetch\".\nLet's not make an option, and instead fix that and make it refresh every 10 minutes instead of an hour\n. Looks good, thanks!\n. Appears to be Edge-specific; can't repro anywhere else\n. Reported https://github.com/leedo/noembed/issues/75\n. @AjaxGb it doesn't send CORS headers.\n. Can you add a test for this?\n. Thanks!\n. Edited the title: we support reversing gfycat videos, we just don't do it automatically\n. Edited the title: we support reversing gfycat videos, we just don't do it automatically\n. @donlbooth is this fixed for you in 5.0.2?\n. @donlbooth is this fixed for you in 5.0.2?\n. The cache is all in-memory now, so I have no idea what they mean by \"users who have logged in\"; nothing like that should be stored. They were probably on an old version of RES.\n\"subreddits visited\" is probably the subreddit manager last visited time.\n. Great, thanks!\n. Awesome, thanks!. FYI, the Compatibility Reporter's results have literally no bearing on whether the addon actually works in e10s, it's only whether or not the multiprocess flag is set in the manifest (there's nothing stopping you from setting the flag when your extension doesn't work at all).\nI'll take care of it now, though.\n. And, like magic, we are \"Compatible with multiprocess.\" \ud83d\ude1c \n\n. This error:\nERROR in Entry module not found: Error: Cannot resolve module 'GitHub\\RES\\node_modules\\babel-loa\nder\\index.js' in D:\\WebDev\\!GitHub\\RES\\chrome\nis suspect, since babel-loader is definitely in package.json.\nMake sure npm is up to date (npm -v should be  3.10.7 or similar), then try deleting the entire node_modules directory and running npm i again.\nIf that doesn't work, run npm ls and pastebin the result.\n. Ah, I think I see what it is now: try moving it to a path that doesn't include !.\n(Webpack uses ! to delimit paths from loaders...this may be a Webpack bug, paths should probably be escaped)\n. Yes, Webpack (/taking advantage of ES6 modules) is a somewhat new addition to RES.\nSee also https://github.com/webpack/webpack/issues/684\nClosing as there's no reasonable way to solve this within RES.\n. LGTM; should be merged as soon as we start working on 5.1.0 (right now we're only merging bugfixes for 5.0.x)\n. This should be as simple as adding the equivalent of .catch(() => api(a/${id})) wherever the gallery request is made.\nI don't think we should bother checking post age; links to deleted imgur galleries in old reddit posts are rare [read: a tiny fraction of pageloads], so an extra erroring request or id conflict (if that's even possible here?) isn't worth worrying about IMO.\n. LGTM\n. Duplicates #2500\n. What RES version are you using? I can't repro in RES 5.0.1:\n\n. LGTM\n. LGTM\n. Ah we should have also removed any existing fallbacks like https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/012cefaa89778e06ceaba1c36b7dc227afe0eba9/lib/modules/commentTools.js#L747\nEdit: I can take care of it\n. Related: #3214 (but this one is nontrivial to fix, because we already have a workflow for /r/enhancement which overrides the diagnostic info one)\n. Fixed in #3862. /home/travis/build/honestbleeps/Reddit-Enhancement-Suite/lib/modules/commentTools.js\n  719:2  error  Mixed spaces and tabs  no-mixed-spaces-and-tabs\n  722:2  error  Mixed spaces and tabs  no-mixed-spaces-and-tabs\nOtherwise LGTM\n. Otherwise LGTM code-wise, but if anyone thinks that \"private\" browsing mode is a replacement for legitimate privacy, they're gonna have a bad time (hint: Windows users try running ipconfig /displaydns)\n. LGTM ~~although it looks like the fix hasn't been deployed on reddit's side yet (or hasn't hit all the servers), so I can't test~~ and tested\n. It would have been great if this was the default all along but I'm not sure if we should change it. Users especially hate changes to how UI interaction feels, even if it's better. I don't feel particularly strongly about this, though.\n. If they're in a container or anything you can easily select, I'd prefer to remove the elements directly https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/ef709b6f6ba7f1081fb70d36b36c6a198b8d9654/lib/modules/hosts/wikipedia.js#L55\n. Thanks!\n. Thanks!\n. Great, thanks!\n. Looks great, thanks!\n. I would strongly prefer a framework that lets us to pass in a js object (or if one doesn't exist, no framework at all), so that we can parse the (potentially huge) language files at compile time1 instead of every single pageload.\nIt looks like we could write our own backend for i18next to accomplish this, if necessary.\n1: using a Webpack loader; .properties files are nigh trivial to parse\n. Also notably, chrome.i18n is supported by Chrome, Edge, and Firefox WebExtensions.\n. Also notably, chrome.i18n is supported by Chrome, Edge, and Firefox WebExtensions.\n. chrome.i18n uses the browser's language, you can't pass in your own (I prefer this). Note that, because this is a browser API, it's a language the user has explicitly configured, so IMO common arguments against autodetect (fragility, etc.) don't apply.\nAnd most importantly: we can add an option later if necessary, but we can't really go the other way and take an option away. There are also performance implications: module options are too slow, so everything would have to be special-cased.\n. chrome.i18n uses the browser's language, you can't pass in your own (I prefer this). Note that, because this is a browser API, it's a language the user has explicitly configured, so IMO common arguments against autodetect (fragility, etc.) don't apply.\nAnd most importantly: we can add an option later if necessary, but we can't really go the other way and take an option away. There are also performance implications: module options are too slow, so everything would have to be special-cased.\n. #3463\n. #3463\n. We're going to deploy Edge from Travis so this isn't likely to be needed.. We're going to deploy Edge from Travis so this isn't likely to be needed.. > it is utterly unclear that it is a wikipedia expando instead of a regular self post\nI disagree, I think the sidebar (with embedded image in the majority of pages) is more than enough to disambiguate Wikipedia expandos. I'll also note that we've had no other reports of this (on /r/resissues).\n\nwould make a primary element that draws attention to itself rather than a secondary element as it is now.\n\nDo you think that the icon currently added by this PR is not a \"primary element\" and/or doesn't draw attention to itself? Is drawing attention not the point?\n\nI don't think people will appreciate the attribution first before every single image or other media type.\n\nAgain, this is not for all expandos, just text-only expandos, viz. Github gists, deviantART text expandos (not deviantART images), and Tumblr text expandos (not tumblr image posts). Those are also liable to be confused with self posts since they don't have a sidebar or other non-snudown formatting (besides some embedded images).\n\nI talked about with @andytuba on irc we came to the conclusion that currently when you expand things a wikipedia post almost looks identical to self post.\n\nCorrect, and he suggested to move the logo (attribution) up:\n\n. > it is utterly unclear that it is a wikipedia expando instead of a regular self post\nI disagree, I think the sidebar (with embedded image in the majority of pages) is more than enough to disambiguate Wikipedia expandos. I'll also note that we've had no other reports of this (on /r/resissues).\n\nwould make a primary element that draws attention to itself rather than a secondary element as it is now.\n\nDo you think that the icon currently added by this PR is not a \"primary element\" and/or doesn't draw attention to itself? Is drawing attention not the point?\n\nI don't think people will appreciate the attribution first before every single image or other media type.\n\nAgain, this is not for all expandos, just text-only expandos, viz. Github gists, deviantART text expandos (not deviantART images), and Tumblr text expandos (not tumblr image posts). Those are also liable to be confused with self posts since they don't have a sidebar or other non-snudown formatting (besides some embedded images).\n\nI talked about with @andytuba on irc we came to the conclusion that currently when you expand things a wikipedia post almost looks identical to self post.\n\nCorrect, and he suggested to move the logo (attribution) up:\n\n. > it is utterly unclear that it is a wikipedia expando instead of a regular self post\nI disagree, I think the sidebar (with embedded image in the majority of pages) is more than enough to disambiguate Wikipedia expandos. I'll also note that we've had no other reports of this (on /r/resissues).\n\nwould make a primary element that draws attention to itself rather than a secondary element as it is now.\n\nDo you think that the icon currently added by this PR is not a \"primary element\" and/or doesn't draw attention to itself? Is drawing attention not the point?\n\nI don't think people will appreciate the attribution first before every single image or other media type.\n\nAgain, this is not for all expandos, just text-only expandos, viz. Github gists, deviantART text expandos (not deviantART images), and Tumblr text expandos (not tumblr image posts). Those are also liable to be confused with self posts since they don't have a sidebar or other non-snudown formatting (besides some embedded images).\n\nI talked about with @andytuba on irc we came to the conclusion that currently when you expand things a wikipedia post almost looks identical to self post.\n\nCorrect, and he suggested to move the logo (attribution) up:\n\n. Unhandled promise rejection could be anything, probably the majority of errors log that.\n@mc10 see if this works https://www.reddit.com/r/RESissues/comments/53tdjr/res_doesnt_work_for_me_on_firefox/\nOr maybe try to see if anything else gets logged first...Firefox probably strips everything off of the error though\n. Unhandled promise rejection could be anything, probably the majority of errors log that.\n@mc10 see if this works https://www.reddit.com/r/RESissues/comments/53tdjr/res_doesnt_work_for_me_on_firefox/\nOr maybe try to see if anything else gets logged first...Firefox probably strips everything off of the error though\n. Yeah that's a little more hacky than I'd like to go with (and we'd probably need to request permissions, since I doubt the main page sends CORS headers), so I think we should wait until there's a better way.\n. Yeah that's a little more hacky than I'd like to go with (and we'd probably need to request permissions, since I doubt the main page sends CORS headers), so I think we should wait until there's a better way.\n. We can put a comment in the .plist and have the existing build take care of it:\n<!-- {{./Logo.png}} -->\n. We can put a comment in the .plist and have the existing build take care of it:\n<!-- {{./Logo.png}} -->\n. Also https://lodash.com/docs/4.16.2#lowerCase or https://lodash.com/docs/4.16.2#startCase (we already use lodash)\n. Also https://lodash.com/docs/4.16.2#lowerCase or https://lodash.com/docs/4.16.2#startCase (we already use lodash)\n. FYI if you edit closes #1915 (or similar) into the PR description it'll automatically be closed when this is merged.\n. FYI if you edit closes #1915 (or similar) into the PR description it'll automatically be closed when this is merged.\n. Thanks!\n. Thanks!\n. #3490\n. #3490\n. I answered that very post and my solution worked for OP. \u0ca0_\u0ca0\nBut let me tell you right now: I see no way that this can be fixed within RES. That message only shows up if indexedDB.open errors. And then there's nothing you can do. You can keep calling it, and it'll keep throwing errors. Firefox has no other stable storage APIs (simple-prefs is stable but far too limited).\n. I answered that very post and my solution worked for OP. \u0ca0_\u0ca0\nBut let me tell you right now: I see no way that this can be fixed within RES. That message only shows up if indexedDB.open errors. And then there's nothing you can do. You can keep calling it, and it'll keep throwing errors. Firefox has no other stable storage APIs (simple-prefs is stable but far too limited).\n. Great, thanks!\n. Great, thanks!\n. FYI I like to add all rules to config--even if they're just set to off--so we know that a decision has been made. As for those rules:\nno-unassigned-import: off; this will be triggered by the imports of some legacy jQuery modules, and I think if someone does this by accident it'll be a fairly obvious mistake\nno-webpack-loader-syntax: if this passes with existing code, turn it on, otherwise turn it off\nno-dynamic-require: off; we lint against require so any usages will probably be dynamic\nno-internal-modules: off; seems overly restrictive for our use, and similarly to no-unassigned-import it should be a fairly obvious mistake\nThere is also unambiguous which I think we should turn on if it passes with existing code (although it looks like Node is going to use .mjs :sob:)\n. FYI I like to add all rules to config--even if they're just set to off--so we know that a decision has been made. As for those rules:\nno-unassigned-import: off; this will be triggered by the imports of some legacy jQuery modules, and I think if someone does this by accident it'll be a fairly obvious mistake\nno-webpack-loader-syntax: if this passes with existing code, turn it on, otherwise turn it off\nno-dynamic-require: off; we lint against require so any usages will probably be dynamic\nno-internal-modules: off; seems overly restrictive for our use, and similarly to no-unassigned-import it should be a fairly obvious mistake\nThere is also unambiguous which I think we should turn on if it passes with existing code (although it looks like Node is going to use .mjs :sob:)\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. If a control is added to the edge of the sidebar, care must be taken to avoid breaking subreddit styles. I could easily see it affecting absolutely-positioned sidebar elements (even when uncollapsed).\nBecause of that, and it being a de facto adblocker, and due to support requests when hiding the sidebar (re)moves other custom content, I'm not really in favour of implementing this.\nAlso note: if you know what you're doing [read: you accept that it will break stuff], this can be done manually with a custom toggle + a CSS snippet for .side { display: none }.\n. If a control is added to the edge of the sidebar, care must be taken to avoid breaking subreddit styles. I could easily see it affecting absolutely-positioned sidebar elements (even when uncollapsed).\nBecause of that, and it being a de facto adblocker, and due to support requests when hiding the sidebar (re)moves other custom content, I'm not really in favour of implementing this.\nAlso note: if you know what you're doing [read: you accept that it will break stuff], this can be done manually with a custom toggle + a CSS snippet for .side { display: none }.\n. Great, thanks!\n. Great, thanks!\n. We can likely fix this on our side without unreasonable effort\n. We can likely fix this on our side without unreasonable effort\n. Yep, <noun> is not a whitelisted element so it's stripped by the sanitizer: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/41f4e2f757e9d6d2bd1b5863b88d92847130806c/lib/vendor/HTMLPasteurizer.js#L30-L34\nYou can see this in the markup; there's no <noun> element, just whitespace:\n\nXKCD captions should probably be escaped so it stays plaintext.\n. Yep, <noun> is not a whitelisted element so it's stripped by the sanitizer: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/41f4e2f757e9d6d2bd1b5863b88d92847130806c/lib/vendor/HTMLPasteurizer.js#L30-L34\nYou can see this in the markup; there's no <noun> element, just whitespace:\n\nXKCD captions should probably be escaped so it stays plaintext.\n. Looks like \"add tools on focus\" was implemented in #3638 (we're not big fans of the tools disappearing on blur and shifting the page), so I'm just going to close this. You'll still be credited in the changelog, of course :). Looks like \"add tools on focus\" was implemented in #3638 (we're not big fans of the tools disappearing on blur and shifting the page), so I'm just going to close this. You'll still be credited in the changelog, of course :). Looks good, thanks!\nSorry about the delay.\n. Looks good, thanks!\nSorry about the delay.\n. That link is right on the second line of the original issue, but thanks...? \ud83d\ude15 . That link is right on the second line of the original issue, but thanks...? \ud83d\ude15 . Yep, I have a WIP branch locally, should have a PR next week. Yep, I have a WIP branch locally, should have a PR next week. Thanks for the contribution, but it looks like #3501 already implements this (sorry, I should have realized that earlier :sweat:).\nBut fear not: you'll still get credit for Hacktoberfest.\n. Thanks for the contribution, but it looks like #3501 already implements this (sorry, I should have realized that earlier :sweat:).\nBut fear not: you'll still get credit for Hacktoberfest.\n. Context: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3516#discussion_r83296305\n. Context: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3516#discussion_r83296305\n. We now have a keywords field so this should be simple. We now have a keywords field so this should be simple. We now have a keywords field so this should be simple. Actually those are simple, I'll take care of it\n. Actually those are simple, I'll take care of it\n. Awesome, thanks!\n. Awesome, thanks!\n. No, it's only same-origin (hence \"doesn't correctly support\", not \"doesn't support\"). See https://bugzilla.mozilla.org/show_bug.cgi?id=874009.\nSo it doesn't work if you replace the w3schools image with something like https://i.imgur.com/vuV7oVb.jpg\n. @thesbros ooooh yes, it does look like that would work. RES doesn't use WebExtensions (yet) because there's no way to migrate settings (yet), see #3510.\n. I'd prefer not to use Downloads.createDownload because it requires importing another low-level chrome module, which may not play nice with e10s and will mean extra AMO security review, so this won't get fixed yet.\nIt will be revisited once we migrate to WebExtensions.. Thanks!\n. Thanks!\n\nFor those keeping score: this is what Flow excels at. It definitely would have caught this for us. :stuck_out_tongue_winking_eye: \n. Confirmed fixed here as well\n. :heart: perf profiles\n. @tao-lu yeah, that sounds like it would work. You'd also need to add a case to this switch with the character limit for live threads, if you haven't already.\n. @larsjohnsen whenever you have time can you review?\n. Thanks!\nSorry about the delay\n. Thanks!\n. Thanks!\n. Great, thanks!\n. Sweet, thanks!\n. Looks good, thanks!\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2982#issuecomment-290297111. Fixes https://www.reddit.com/r/RESissues/comments/58obhw/bug_gallery_navigation_with_keyboard_doesnt_work/\n. Great, thanks!. Now that RES has switched completely to WebExtensions, it should no longer require a browser or computer restart on update.. Now that RES has switched completely to WebExtensions, it should no longer require a browser or computer restart on update.. Looks good, thanks!\n. Hah, well, that's a non-starter.\nI thought Yosemite could run on any Mac made in the last 7 years, some even older...is yours really that old?\n. .className alone is more specific than tagName (inline styles > ids > classes > elements), so I think most of those selector changes shouldn't be necessary.\n. Planning on it, going to wait a few builds so we have a baseline (since it made zero difference before: #3298).\n. Yes.\nSee also: Rust projects committing Cargo.lock, Ruby projects committing Gemfile.lock\n. Thanks!\n. Even in that example, the imgur album has a period that the title lacks...not sure how often this would work\n. Levenshtein distance would be super useful for filters (and fast-levenshtein is tiny and has zero dependencies), but I'm still not convinced of this use-case.\nThe small possibility of confusion (\"why do some imgur albums not display titles?\") doesn't seem worth the (also marginal) benefit of not seeing the same title twice.\n. It'll work if we change it to NSFWFilter (capital F) instead of NSFWfilter\n. That's likely because you're not running a dev build (or haven't pulled recently)\n. Oh and also:\n/home/travis/build/honestbleeps/Reddit-Enhancement-Suite/lib/utils/Thing.js\n  266:54  error  Missing semicolon  semi\n. Thanks!\n. Yeah, now it's not as big of a deal to require permissions (we should still avoid it where possible though)\n. Thanks!\n. . Looks good, thanks!. We need Edge 15 on Sauce Labs for this, which probably won't happen until a few weeks after it goes stable, so deferring to v5.7.x. Neat, thanks!. Thanks!\n. Test failure may be spurious, rerunning...\n. We could probably use https://www.npmjs.com/package/intersection-observer; import it in vendor/index.js or something (it's a noop if 'IntersectionObserver' in window)\n. You were likely looking at a different one, this one doesn't poll by default, just uses scroll/resize listeners and a MutationObserver...either way is fine though\n. Thanks!. Thanks!\n. Looks great, thanks!. Neat, thanks!\n. That regex (probably all of them) work fine. It's escaped because in general you do need to escape slashes, just not inside character classes. Same with ., +, etc.\nSo just remove the backslashes from those (or disable the rule).\n. Please rebase to get rid of the merge commits.\n. \n. Appveyor failure is spurious\n. Thanks!\n. Yep, thanks. Thanks!\n. Thanks!. This change only affects .gifv links, so this can't be it. PR comments are not the right place to discuss potential issues, please post to /r/RESissues (preferred) or create a GitHub issue.. Very nice, thanks!\n(test failure is spurious). ...but it's too old. Fun!\n. Awesome!\n. Thanks!. Thanks!. Closing as this is, somewhat surprisingly, less effective than removing the element. I'm consistently seeing FOUCs on refresh (~100% of the time) on pages where I never do with the current implementation.\nIt's very important that we don't regress on performance here.. Some stuff I'm working on (making filtering synchronous as much as possible) probably obviates the need for the last commit.\nAfter my changes, if I understand correctly, queuing would only affect async filters, which I think is unimportant enough (async filters are already slow, and an extra call to isURLVisited per thing isn't a big deal IMO).. You could keep the changes to getUpdateRange->getFiltersToTest though, they look good. Looks good, thanks!. Great improvement, thanks!. Thanks!. Appveyor failure appears spurious. Should be investigated for 5.3.x at least, if not implemented. Oh, did I say 5.3.x? I meant 5.1.x \ud83d\ude1c . Nah I left the milestone intentionally (I use them more as \"before this point\" rather than \"at this point\").\nThere's enough complexity in syncing reddit -> RES filters that it's not worth it for the MVP. Further I think it may just be too janky to implement, unless you have to choose only one direction to sync.\ne.g. even in the simplest case when there's a filter present in RES and not in reddit, there are a bunch of possibilities that would require extra bookkeeping to reason about:\nJust enabled the feature? RES -> reddit (or try to merge them?).\nRemove a subreddit from reddit's filter? reddit -> RES.\nAdd a subreddit to RES's filter? RES -> reddit.\nSwitch accounts? Probably RES -> reddit, but not always.. Thanks!. Thanks!. Thanks!. Yep, thanks @andytuba \ud83d\ude09 . Holding up the completion of go is not so important because afterLoad is generally unimportant...but we don't want it to take many seconds, I suppose.. Yes, I'll review this in a few days, we're preparing a release right now. Great, thanks!. Thanks!. #3729. FYI I rebased and force-pushed the branch.\nThough I noticed that it seems to behave slightly differently than the version in-tree (1.6.1, apparently), so we'll have to do something about that. Possibly I'll publish it on npm under jquery.tokeninput. Thanks!. #3714. yep. Thanks!. FYI #3740 is merged. @wojtekmaj can you check \"allow edits from maintainers\" so I can push changes to this branch? Or cherry-pick these commits manually https://github.com/erikdesjardins/Reddit-Enhancement-Suite/commit/1f955b798d9490c00e17744b50568dd1065f5b67 https://github.com/erikdesjardins/Reddit-Enhancement-Suite/commit/aafe92a24cab6f974fe783342d59096569560091. No worries; thanks!. FYI if you haven't seen it I made #3755 for tracking so if you start working on something just leave a comment in there. Awesome, thanks!\nFYI I set up #3755 so we don't accidentally work on the same thing; just drop a comment in there if you want to work on anything else.. Thanks!. This fixes reports of \"loading a new NER page with 'show all images' reopens all images\"?. Integration test failure is spurious (reddit is struggling). Test failure still spurious.... Oh hey, #3909 fixed part of this. Now situation 1 works as expected.\nNot sure what we can really do for situation 2. Right now both things happen. Migrate the filterline shortcut to something else for everyone that has useGoMode disabled?. I've been able to reproduce this once when loading the second page.\nThere was no obvious cause: the second page was loaded normally (i.e. it wasn't a return-to-page after navigating backwards); all future pages had expandos like normal; there were no errors logged except Could not post \"pause\" command to iframe due to contentWindow being null here, but that's probably a symptom, not a cause.. Note: this might not (probably won't) get done by 5.2.2, but it's the main thing we want to work on for that release.. @MichaelRupertDev great! Right now we're mostly doing simple replacement (just moving option descriptions to en.json), so PRs #3740 and #3739 are good examples.\nI'll just give you lib/modules/commandLine.js to get started and get your dev environment set up, etc. See the readme for that, and feel free to join irc if you run into any problems.. I'm taking some of the extras starting at the end, hopefully nobody's already working on those. I'm taking some more extras, again starting from the end. Nice!. This should no longer happen in 5.8.0+ now that we've switched fully to WebExtensions, which shouldn't be able to crash the entire browser (in theory).\nWill reopen if necessary. This should no longer happen in 5.8.0+ now that we've switched fully to WebExtensions, which shouldn't be able to crash the entire browser (in theory).\nWill reopen if necessary. Thanks!. Test failure is spurious (reddit struggling). Run https://reddit.com/#res:settings/troubleshooter/testEnvironment and paste the results here.. Hmm yes we've seen a few cases of this, where chrome.storage fails to store anything but doesn't set chrome.runtime.lastError.\nTry backing up your settings, resetting to factory, then restoring your settings.. This makes minimal difference on my machine, even with 8 threads, it's not worth the complexity ATM. For sure, we use inert-entry-webpack-plugin to do that.\nIt effectively does the same thing as you were trying with file-loader?name=[name].[ext] ...rest of loaders, but it also removes the original asset, which should avoid the error about emitting to the same filename.. Finally! Now I just need to fix some issues in InertEntryPlugin (it breaks in watch mode, strangely) and this'll be good.\nThough I think we should probably wait until after next release to merge this so we aren't making big build system changes right before it. Webpack 2 significantly changes VM startup behaviour by emitting parens around each module (taken as a hint to full-parse up front rather than pre-parsing), so it may regress startup performance; I will revisit/fix this shortly.\nI am intentionally not removing the Babel commonjs plugin, because Webpack's handling is unnecessarily verbose with no advantage (no tree-shaking unless we minify, which we can't really do); this will also be revisited.. Super fast, thanks!. Thanks!. Ah I didn't see that comment, yeah it looks like it's completely unused, might as well get rid of it. FYI I just removed it in 3021af41c0c62eae883fdfb4ea737ba95f0cb0e1. FYI I'm going to force-push to this branch to resolve conflicts and then merge as soon as the build passes. That works too \ud83d\ude1b . Great, thanks!. I would also like to eventually get rid of jQuery, but there are a few things:\n\nthe native replacements like Element.closest(), Element.matches() are not supported by Safari or Edge, so we somewhat need jQuery (unless there's a good polyfill?)\nwe use a few ancient jQuery plugins that would need to be replaced\nif you have a bunch of operations that can each return null, IMO it's a bit nicer to chain jQuery than have a if for each one or a bunch of &&\nfor creating single elements like $('<div>', { id: 'foo', class: 'bar' }) IMO it's a bit nicer to use jQuery\n\nBut for new code definitely use vanilla JS, unless you're creating elements then use whatever you think is cleaner.. That all makes sense.. Sweet, thanks!. FWIW I'm not a big fan of changes like these since they don't really increase type safety and they make refactoring (if we change any of the types) marginally harder. Flow's type inference is very powerful, it doesn't need much help.\nEdit: filling in holes found with flow coverage is welcome though.. This forcibly installs the newest Node version, which we may not always want. Not feasible at the moment.\nEventually Appveyor will ship a newer version of Yarn and we won't need to install it at all.. Sorry about the delay; thanks!. FYI we're not merging 5.4.0 PRs right now (working towards 5.2.2), I suppose I shouldn't have approved this.\nI'll revert if we do a 5.2.2 release (it may not happen).. Thanks!. Thanks!\n(build failure is spurious). Looks good, thanks!\n(build failure is again spurious). Great, thanks! Sorry about the delay. Nice, thanks!. CI failure is spurious (it even says \"Build success\"). build failure is spurious. Thanks!\n(spurious build failure). Thanks!. Looks like this was already done by #3802 (sorry!)\nMake sure you claim modules on #3755 so we don't accidentally duplicate effort.. (somewhat) amusingly the self-update command was removed between 0.16.1 and 0.18.1, so the build will fail again once Appveyor starts shipping Yarn 0.18.1. But that's fine, because we can just remove this line entirely at that point.. @andytuba probably #3128. Thanks!. Verdict: this will be called infrequently enough (only after a [relatively rare] user action: filtering a subreddit) that it shouldn't be a problem for reddit. If it turns out to be, we can revert it.\nOnce a better alternative is available (batch subreddit endpoint), it will be replaced.. Test failure is spurious. Test failure is spurious (#3829). Right, yeah if we ever add any other functionality to the module we can add the option back, default enabled, and it'll behave the same. Neat, thanks!\nI also threw in some optimization on the match-finding side; we were doing a lot more work than necessary (localizing each string every time, etc.).. Using the mp4 files directly is fine IMO; it's what the embed would be doing anyways.\nHowever, fetching the page and scraping the URL out of it is less than ideal. If there's some other way to get the source URL (an API or constructing it manually) then I'd probably be fine with that, but otherwise I don't think there's enough need for Liveleak embeds for us to resort to scraping.. Thanks!. Nice, thanks!. Thanks!. Build failure is spurious, I'll make Appveyor build fewer targets to hopefully avoid the OOM. --pure-lockfile and the integrity check are necessary so that the build will fail if someone uses npm to add/update a dependency (i.e. only package.json is updated); see #3624. Thanks!\n(so the build passed but it's marked as errored...hmmm). Thanks, sorry about the churn!. Please change the PR description to \"{fixes,resolves,closes} #ISSUE\" so the issue will be autoclosed. Thanks!. Okay, no change as expected. Sauce Labs limits us to 5 concurrent test runners and other requests block until one is available.. Thanks!. Thanks!. Damn, I didn't consider that side-effect of moving legacy filters to custom filters. Thanks.. I want to do a bit more with this: require dependsOn to be a function (so we catch misspellings etc.) and possibly subsume noConfig, but I'll just push to this branch to take care of that (unless you want to)\nEdit: also maybe change it to something like isEnabled or isConfigurable, and make automatic body class injection call it. Thanks!. Thanks!. Thanks!\nI changed the default to alt-A, because even with #3909 it's possible to disable the G prefix for goMode (the useGoMode option), making goMode shortcuts behave like any other shortcuts, so anyone with that off would navigate to /r/all when they try to upvote.\n(test failure expected as I manually cancelled the integration test build). Integration test build manually cancelled cause we're about to release (and I don't want to wait); I'll wait for all builds to pass on the changelog commit. Looks great, thanks!. The useRedditFilters option is disabled by default for exactly this reason. Is it enabled? Have you ever clicked the forceSyncFilters button?. Hmm. I can't see how any of that would cause RES to try to sync its filters. All but one of the calls are directly guarded by a check that useRedditFilters is enabled. I thought maybe it could be cleanSlate, but it doesn't touch options, it turns the entire module off directly (which is handled separately).\nCan you try to reproduce this? i.e. backup your settings, uninstall RES, add a native filter, then reinstall and go through roughly the same steps to see if it happens again.. Alright, I'll add it to a milestone and we'll keep pushing it back until Edge 16 is stable. highlightFirstCommenter doesn't know about usernames. The bug is it thinks \"Reply 1\" is a top level comment, and therefore that \"Reply 3\" is a reply from the first commenter.. Thanks!. Ran integration tests locally. This would require a lot of complexity currently (part of the reason it was changed in the first place); but in the future it may not be particularly bad; I'm imagining something like:\n```js\nconst stream = module.options.showCommentToolsAtLoad.value ?\n  watchForElement('textarea ...', HTMLTextareaElement).filter(e => e.offsetParent) :\n  watchForEvent('focus', 'textarea ...', HTMLTextareaElement);\nstream.forEach(attachEditorToUsertext);\n```\nSo deferring to 5.7.x. (and make sure that it doesn't shift the title over). Thanks!. That's not quite true; the filename is displayed (correctly) because it's the imgur title of the image. Though for consistency with other direct links, we shouldn't hit the API for .jpeg, so this patch still makes sense.. FYI if you write \"fixes #issue\" or similar phrases it will autoclose the issue (I've added it to this one). Travis isn't reporting completion for some reason. Yeah, it'll default to escaping interpolated strings, then you can mark strings as safe (like Handlebars' triple brace) with string.safe. Travis is again not reporting completion. This probably won't be feasible for a while, so I'm closing this for now.\n  . Build failure is due to coverage reporting, presumably due to AWS and recent (possibly unrelated) Travis issues. Sorry about that, should have looked for more usages when updating the old branch :/. Another coverage-only failure due to Travis/Coveralls infra issues (still s3?). Thanks!. What is the use-case for bildgur.de instead of imgur.com?\nAFAICT it redirects to imgur without proxying--in which case it's merely a link obfuscator, which doesn't seem like something we want to support.. Thanks!. And none have had any posts in months:\nhttps://reddit.com/domain/superstack.io\nhttps://reddit.com/domain/fitbamob.com\nhttps://reddit.com/domain/offsided.com\nhttps://reddit.com/domain/min.us. Looks good, thanks!. Seems to be because the default href is applied here, which doesn't affect the elements of a gallery; should probably be moved into the generate{Image,Video} functions. FYI I changed it back to the full page--I think the syntax highlighting and line numbers outweigh the floating thing (you can resize to get it out of the way).. Looks like Firefox has started returning consistent values for transparent (#4114). Looks good, thanks!\n\nlet me know if [...]\n\nOnly one small thing (more for you than us), usually you'll want to create a new branch to make your pull request from--since this one is from your fork's master branch, that branch will diverge from our master branch once anything else is merged, and you'd have to force-push to fix it.\n(Though usually, if one is contributing to a repo often, they'll have an upstream remote and branch off of upstream/master instead of their fork's master branch). Possibly fixed by reddit, but I can't get it to appear to test it https://www.reddit.com/r/changelog/comments/5zrtnr/testing_community_recommendations/df0mbbu/. That seems good enough considering it's only a test at this point.. Integration test failure is spurious (/due to test machine starvation); ran tests locally. Thanks!. Thanks!. Probably something is going wrong around here (why doesn't it use Thing?), don't have time to look now:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/58d0f49b127798a0b6e1c01237ac347307cf1f4e/lib/modules/showImages.js#L1474-L1477. This was fixed by #4238 (or something...it works, anyways). Twitch changed their URL format, so those are Reddit's embeds (#4086, fixed in #4087). Integration test failure is spurious; ran tests locally. Integration test failure is spurious. Integration test failure is spurious; ran tests locally. Integration test failure is spurious; ran tests locally. Right, you can't sideload extensions in beta. You can't tell if anything even works until you \"test\" in prod. Thanks Firefox!. Skipping integration tests intentionally. In theory, deleting that permanent storage folder should fix it; it has for me in the past, though it's possible that reverting from nightly corrupts a profile even more than it used to. The only thing I can say is to make completely sure that there are no firefox-related processes running when you delete it, not just that all windows are closed.\nUnfortunately RES is completely at the whim of the browser to maintain/create/delete its database, so there's basically nothing we can do; this is more of a question/problem for Mozilla.. Duplicates #677\nThis has never really worked (in 4.5.4 it resets when you refresh).\nIt will also be very complex to decide whether to whitelist or blacklist subreddit style, as there are three conditions:\n\nstylesheets disabled globally (but I'm not sure if we want to be loading everyone's prefs pages to check)\nstylesheet disabled for the current sub via gold (but we need to know before the body [and that checkbox] is parsed to avoid FOUC)\non a subreddit page that doesn't get subreddit style (like /about/ pages)\n\n...so I'm not prioritizing that issue because it'll take a lot of consideration. Personally I'm not sure if it's even worth it; the logic for the current blacklist + nightmode whitelist is already complex enough.\nNot to mention that CSS is going away, and depending on how it's replaced, we may not be able to easily disable the new subreddit \"style\".. skipping integration tests as this doesn't change any runtime code.... Deferring to 5.8.0 because the 5.6.0 release is on the horizon, but this sounds really good.. This is better, thanks!. I changed it to add an inner element without changing the existing .res-expando-box, which makes me less nervous about unintended consequences. (There were a few things subtly broken before: forced break after expando icons, slightly different spacing above, etc.). Test failure is spurious. Test failure is spurious. Remaining integration test failure is spurious. Remaining integration test failure is spurious. moved to #4219. moved to #4219. Remaining test failure is spurious, still.... Remaining test failure is spurious, still.... Test failure is spurious / should be fixed by #4215. Test failure is spurious / should be fixed by #4215. Test failure is spurious. Test failure is spurious. FWIW this is not the same as #4158, since that would affect all users across all browsers.. FWIW this is not the same as #4158, since that would affect all users across all browsers.. ^ I'm almost certain that that's the bug, it's exactly what we're seeing. ^ I'm almost certain that that's the bug, it's exactly what we're seeing. FTR I can reproduce this in exactly the same way with the fetch backend replaced with XHR, so it's not fetch-specific.. FTR I can reproduce this in exactly the same way with the fetch backend replaced with XHR, so it's not fetch-specific.. Read carefully--they're not talking about staying on the new profile but switching to it momentarily and then switching back to their main profile.. I've dealt with enough crazy behaviour from Firefox that I wouldn't be surprised if creating a new profile could affect existing ones. \u00af\\_(\u30c4)_/\u00af\nBut evidently that isn't the case here, yeah.. All versions of RES require third-party cookies; the older Jetpack-based versions were simply allowed to violate your privacy settings to use them (it's now more secure!).\nSince RES is a third-party (it runs in a special chrome-extension: or moz-extension: domain), there isn't another option, i.e., if you want no third-party cookies, you'll have to uninstall.. I'm going to have to agree with honestbleeps that this is a bit too niche, but thanks for the suggestion!\nFWIW RES does have its own CSS loader (search the settings console for \"snippets\"), so users wouldn't need to install Stylish.. Should be covered by\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1320186 and\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1319474\nand may be (somewhat) remedied by\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1277612. I finished the bisection to #4056 (which isn't surprising).\nFirefox doesn't like something about the template element; changing it to a div fixes it (but then it may break in some circumstances, though it might be good enough to use).\nRemoving the adoptNode() call, .remove()ing the element (or .parentNode.removeChild()) before adopting it, replacing it with cloneNode() (or cloneNode(true)) don't help.\nThe event isn't enlightening:\n. I've seen enough people running 5.6.1, who were either affected by the slowdown (meaning they have many tags) without widespread reports of deleted tags, or quite obviously still have tags (e.g.), so I'm convinced that #4221 is safe; going ahead with this deletion for 5.6.2. Who knows what coveralls is doing \u00af\\_(\u30c4)_/\u00af. The crux of the issue is that tabs opened by WebExtensions don't obey the insertRelatedAfterCurrent preference. So to keep the default behaviour (opening tabs next to the current one), we explicitly open them next to the current one. When Firefox supports openerTabId then this will probably work correctly.. Thanks!. Sorry, I let this slip through the cracks. (integration test failure is spurious)\nThanks!. Note: (#4322)\n. #4250. Ah, I said naive, not native, sorry \ud83d\ude13 , i.e. no individual key syncing. You're right, native chrome.storage.sync is far too limited.\nSeparating it is exactly the problem I'm talking about, cause we'd have to track writes on every key (or some subset of keys), which is (probably) not gonna happen. We can get >90% of the functionality with <10% of the complexity by just polling for the modified date every 5 mins and replacing everything.\nThere'll probably be an option (enabled by default), though, to popup an alert to the effect of \"new backup at \\<date>, restore?\". I'll switch the application to a proper one in #4277. js\nauth: {\n    title: 'auth interactive',\n    type: 'button',\n    text: 'test',\n    callback() {\n        launchAuthFlow({\n            domain: 'https://accounts.google.com/o/oauth2/v2/auth',\n            clientId: '237880911304-a4040773adrek8uq6dpbg2p7308kf03u.apps.googleusercontent.com',\n            scope: 'https://www.googleapis.com/auth/drive.appdata',\n        }).then(alert, e => alert(e.message));\n    },\n    description: '',\n},\nauthNoninteractive: {\n    title: 'auth noninteractive',\n    type: 'button',\n    text: 'test',\n    callback() {\n        launchAuthFlow({\n            domain: 'https://accounts.google.com/o/oauth2/v2/auth',\n            clientId: '237880911304-a4040773adrek8uq6dpbg2p7308kf03u.apps.googleusercontent.com',\n            scope: 'https://www.googleapis.com/auth/drive.appdata',\n        }, { interactive: false }).then(alert, e => alert(e.message));\n    },\n    description: '',\n},. I can confirm that the identity permission does not cause a permissions warning. (if I made a mistake, the beta release will be a final test)\nNotes:\n- it's not mentioned (positively or negatively) on the permission warnings page\n- when installing from scratch, it's not listed in the warning popup\n- running your own autoupdate server (as suggested) does not work, since Chrome doesn't let you enable packaged extensions that weren't signed by the Chrome Web Store--you can add wide-reaching permissions like <all_urls> without a warning\n- ...so instead I used a real extension. Wait a second...Firefox chrome.identity.launchWebAuthFlow works even when redirecting to res.com instead of the special \"mozilla\".reverse() URL, and Chrome also appears to (but needs more testing)...wat\nI guess if it works... \u00af\\_(\u30c4)_/\u00af. Locked posts have a locked class so this is feasible. Hah, beat you by a minute \ud83d\ude1c \n. @corylulu so I guess we can just mark it experimental, why not. \u00af\\_(\u30c4)_/\u00af. Thanks!. Thanks!. Thanks! (build status didn't get reported, but it passed). Great, thanks!. Thanks!. Great, thanks!. #4306. Yes, it will still only run on pageload.\nStoring some machine-specific id would only mask the inconsistency, it wouldn't solve the actual problem.* To be clear(er), by \"spurious restores\" I meant the issue you describe.\nWe're not going to offer conflict resolution, even manually (at least not for the initial release), but it should take you to the options page so you can turn it off or overwrite the backup.\n*: it would work, mostly, but a timestamp is already enough information to know whether the current machine made the last backup...if it didn't have bugs, hence this issue. Do you have third-party cookies disabled for https://reddit.com?\n(In the past that setting didn't apply to extensions like RES, but now it does. RES has always used/required third-party cookies because it is a third party.). FWIW when reddit switches the site over to the redesign all old versions will stop working.\nUninstalling does not harm us. (Though people seem to think it's a threat.)\nBefore the end of the year (Firefox 57) we'd be forced to make this change if we hadn't already. The maintenance and performance benefits from WebExtensions make it better to do sooner rather than later (for us, and the 99% of users with default cookie settings).. Nothing else productive can come of this thread.. Yep, you will need Node 7.6/8 to run unit tests. Everything else should work in 6 though (and even 4 last time I checked).\nI'll add a note to that command, but most people will never need to run unit tests, so we won't require it up-front.. Thanks!. Thanks!. You get a notification each time you click the button after granting permission (otherwise looks good). \ud83d\udc4d . Integration test failure appears unrelated. Ah, so that's why it's dependant on page size. Another workaround is to reduce the number of links displayed at once in your reddit prefs. (assuming you've changed it from the default). We should just catch and log the error then, I guess. > We should just catch and log the error then, I guess\nActually, #4458 effectively does that.. We can't use / by default because it breaks native functionality in Firefox; changed it to alt-/\n(you can of course change it to / if you want to). Thanks!. https://www.reddit.com/r/RESissues/comments/6l86q9/res_not_playing_some_videos/djrtqwy/?context=1. Integration test failure is unrelated. Was incidentally fixed by #4159 (probably). Ugh, I knew I should have killed it earlier. https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/df679ec0a144d9a97429068604e7ccf65656649e#diff-76e5b0daa9643512b72cc4a4d30b79bbL80. Let's use that lib, I guess.. Tested in Chrome 60. 35fd8aaf83c9a6cff419f312ff8b94d60e9ace69. launchWebAuthFlow runs the auth flow in a hidden window, it doesn't just remember the one response. (Works on my machineTM, same browser version.)\nWhen you restart the browser, are you also logged out of dropbox.com? If so, try to fix that and this issue should disappear.. Thanks!. This may not be feasible without a batch subreddit info endpoint. Integration test failure is spurious. Thanks!. Nice, thanks! 5.8.4 is basically all you. Good to know. That's better than this change; can you PR a revert if you have a minute?. Sorry about the delay, 5.8.5 took longer than expected.\nEverything seems good now, thanks!. Sorry about the delay, 5.8.5 took longer than expected.\nEverything seems good now, thanks!. It appears that Dwolla no longer supports direct links (and their documentation is gone!?); added \"JS required\" noscript text. Hmm, I'm not sure why the number of tips changed.\nIf it's intentional / the order is random then you can change/remove the assertion.. Hmm, I'm not sure why the number of tips changed.\nIf it's intentional / the order is random then you can change/remove the assertion.. Tested migration. Tested migration. It looks like Whale refuses to run any extensions that have optional permissions (such as RES). I'm not sure why though, cause they'd have to explicitly disable that functionality. \ud83d\ude15 \nClosing as this is not due to a defect in RES (and we don't guarantee support for non-mainstream browsers / forks).. I think the last part can be pushed back to 5.9.x, we've delayed 5.8.5 enough. I think the last part can be pushed back to 5.9.x, we've delayed 5.8.5 enough. Integration tests are currently broken, but not needed for this. Looks good, thanks. Looks good, thanks. Looks good!. Looks good!. Close button seems good enough for now. Close button seems good enough for now. Looks like this was indeed fixed in Chrome 62; and if not it should be fixed by #4342. It should be more than that. Right now we use position: fixed and insert placeholder elements based on calculations of the height of other elements, and move some header elements around. The idea is that we should be able to replace a lot of that with just position: sticky (since it takes up space like a placeholder).\nHowever, I tried to do this when I opened the issue and it didn't work so well, except for pinning the full header. It might be inherent due to the way the DOM is structured (since position: sticky is relative to parents rather than the whole page). We could of course get around that by moving elements, but that isn't much better than what we have now.. Thanks!\n(build failure is spurious). Thanks!\n(build failure is spurious). This seems okay but it may have been done for some subtle reason.\n@larsjohnsen if you think this is good then go ahead and merge.. This isn't actionable unless you actually explain what you mean.\nThe readme links to a file with 94 lines of (build-related) documentation. It is not clear how it needs to be improved.. Sorry, I should have mentioned earlier: adding new permissions in Firefox right now is a deal-breaker, since they'll cause a warning dialog. We did this once a long time ago, and it caused a shitstorm.. Because that probably won't be implemented for a very long time (and other privacy concerns with users' emails*), I'll instead add a text option where users can fill in the account to use. You'll still be credited in the changelog, etc. because you did a lot of work (partially for naught \ud83d\ude1e).\n*: this'd have to be optional, disabled by default anyways because users will take offense to giving RES their email unnecessarily. duplicates: #1686. Let's close this and just use #1686. Skipping integration tests as we don't (yet) test Edge. Sorry about the delay; thanks! (you too @mc10). Looks good, thanks!. Thanks!. Thanks!\n(CI failure is spurious). Reddit does this dynamically on click (\ud83d\ude1e), so we can't easily detect what the user's preference is. Since the default for logged in users is to not open in a new tab, I think we'll leave it as-is for now.. Hmm, I also noticed this, but then yesterday looping came back.\ne.g. for me this has looping: false and has_sound: false\nLet's wait a few days and see if it's just an API fix that needs to roll out to all of their servers.\nEdit: just thought that it could be related to image age, since I'm testing with my old test cases, but everything on the frontpage also has both. Thanks; I completely forgot about no-restricted-syntax, that's much simpler than writing a custom plugin!. (integration tests skipped as no executable code changed; everything else passed). Thanks!. CI failure is spurious. Thanks; sorry about the delay!. Thanks!. I can't reproduce, which nightly revision are you using? (also works without new messages)\n\nHave you tried disabling all extensions except RES? If it's a conflict between two extensions, disabling them one-by-one will implicate the first one you happen to turn off.\nDo you have something that could be messing with canvas elements (i.e. for antifingerprinting)?\nThat doesn't turn anything up, try creating a second Firefox profile and see if it still happens.. If you disable showUnreadCountInFavicon, RES should stop replacing the favicon.\nClosing as there's not much we can feasibly do here; checking if the canvas is white would be (relatively) difficult as it's generated inside favico.js, few users have antifingerprinting enabled, and the workaround is easy.. Looks good, thanks!. \ud83d\udc4d . Thanks!. Indeed, I shouldn't have shoehorned it in just to avoid forwarding a few methods.... Thanks!. Okay, now I highly doubt this will be reverted in Chromium. And reverting this PR won't be difficult if it does happen.. Sure, though we won't merge it until 57 is stable.\nThis also allows us to remove the index parts, which will fix #4230 as well.. Those are coming from the tab that sends the message to the background page:\npassed in from the native message handler here https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/58e0cfa8da61484fd3b30fe2cd479d434f6551fb/browser/background.js#L29\nand sender.tab is this https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/tabs/Tab. Looks good!. Thanks!\n(CI failure is unrelated). Ah, yep, that'll do it.. Seems like Windows doesn't have a font with that character:\n\n(tried different font families, etc.). CI failure is something else. Fixes this issue? https://www.reddit.com/r/Enhancement/comments/79q432/how_do_i_prevent_quotes_from_changing_color_on/. We could use https://github.com/codemix/flow-runtime, and have e.g. everything checked in dev and then a pragma to just check dashboard.js in prod.\nI tried using this a while ago but I stopped because it didn't work so well, though I don't remember why.. CI failure is incidental. Duplicate of #4262. Thanks!. @larsjohnsen assuming you haven't already implemented this as part of #4191 and it looks good to you, this should be good to merge. \ud83d\udc4d . Duplicate of #4328. If you have NER disabled, then pressing J should never navigate to the next page. It did at one point, but that was due a bug in 5.6.2.\nYou can press N to navigate to the next page; you'll have to press G first if useGoMode is enabled (which it is by default).. CI failure is Flow timing out (working on it). So initially I made smaller versions of the icons because scaling them doesn't look perfect:\n\n```diff\n--- a/lib/css/modules/_showImages.scss\n+++ b/lib/css/modules/_showImages.scss\n@@ -37,9 +37,12 @@ img {\n        margin: 0 !important;\n        vertical-align: middle;\n\n.expando-button {\n.expando-button.expando-button {\n                margin: calc(calc(1em * .5) - 50%) 0 0 0  !important;\ntransform: scale(0.8); // Try to not exceed height of line\n// use smaller sprites in comments\nwidth: 18px;\nheight: 18px;\n\nbackground-position-x: -24px;\n        }\n+ .res-expando-box { margin-top: 5px !important; }\n\n@@ -59,6 +62,7 @@ img {\n            height: 23px;\n            max-width: 23px;\n            max-height: 23px;\n+               background-position-x: 0;\n            display: inline-block;\n            background-image: url('../images/expandoButtons.png');\n            margin-right: 6px;\n@@ -71,17 +75,17 @@ img {\n@function _($i) { @return $i * -24px; }\n\n\n\n&.image.collapsed { background-position: 0 _(0); }\n\n&.image.collapsed:hover { background-position: 0 _(1); }\n&.image.gallery.collapsed { background-position: 0 _(2); }\n&.image.gallery.collapsed:hover { background-position: 0 _(3); }\n&.video-muted.collapsed { background-position: 0 _(4); }\n&.video-muted.collapsed:hover { background-position: 0 _(5); }\n&.expando-button-requires-permission { background-position: 0 _(6); }\n&.expando-button-requires-permission:hover { background-position: 0 _(7); }\n&.expando-button-loading { background-position: 0 _(8); }\n&.expanded { background-position: 0 _(9); }\n&.expanded:hover { background-position: 0 _(10); }\n&.image.collapsed { background-position-y: _(0); }\n&.image.collapsed:hover { background-position-y: _(1); }\n&.image.gallery.collapsed { background-position-y: _(2); }\n&.image.gallery.collapsed:hover { background-position-y: _(3); }\n&.video-muted.collapsed { background-position-y: _(4); }\n&.video-muted.collapsed:hover { background-position-y: _(5); }\n&.expando-button-requires-permission { background-position-y: _(6); }\n&.expando-button-requires-permission:hover { background-position-y: _(7); }\n&.expando-button-loading { background-position-y: _(8); }\n&.expanded { background-position-y: _(9); }\n&.expanded:hover { background-position-y: _(10); }\n }\n\n.res-expando-siteAttribution {\n```\n...but then realized that this doesn't affect the expando icons generated by reddit (we could replace them with ours) and might have other effects on subreddit styles. So let's go with this PR for now, and we can maybe change it once we see how it looks.. Thanks!\nUnfortunately we can't import them directly as they'll get overwritten the next time we sync from Transifex.. Flow doesn't (and can't really) know the shape of the storage blob, so we have to use an any cast (which I've added).. Strings should be in Transifex less than 24 hours from now.. Thanks!. Yes, node-sass is a native module and so must depend on node-gyp. We plan to switch to dart-sass once enough of it is implemented for it to work.\nI'm guessing that you have a /usr/bin/python2.7 binary, but not one for python, so that's why the preinstall script fails. Given the number of different possibilities (python, python2, python2.7) we should probably just remove it from the preinstall script.. Integration test failures are due to reddit's net neutrality modal, and this PR doesn't introduce any new ones. Integration test failure is on reddit's side. This is almost certainly https://bugzilla.mozilla.org/show_bug.cgi?id=1322113 or yet another Firefox bug.\nDoes it work in a new profile with nothing else installed and no settings changed?. Thanks!. Integration test failure is due to reddit dying, and unrelated to this code. \ud83d\udc4d . Yep, looks good on my end too (those frames are 6ms):\n. Integration tests skipped. Integration test failure due to reddit dying (presumably). ESR 52.5 contains only security fixes from Firefox 57, not features. They are not equivalent.. From the page you linked (emphasis mine):\n\nMaintenance of each ESR, through point releases, is limited to high-risk/high-impact security vulnerabilities and in rare cases may also include off-schedule releases that address live security vulnerabilities. Backports of any functional enhancements and/or stability fixes are not in scope.. Indeed, and we're not gonna go back to a platform that can't provide basic persistence for its storage APIs... I'd rather not have to link to either of these pages ever again.. Looks good, thanks!. I did this intentionally, so if we release a patch on the same day people still see the old changelog. da2c3fdf21259d4ad130c4d7f16d1dcae936920d, though maybe worth a code comment. Double checking: this doesn't affect performance?. Yeah that'd probably be better. Hmm, I feel like we might still need to change this (being able to hide the filterline with filters enabled, but only temporarily, doesn't seem particularly useful, so I think some confusion is understandable), but this is fine for now. This needs testing in Edge (which I can do at some point), since apparently it has \"non-standard key identifiers\"... https://caniuse.com/#feat=keyboardevent-key. Tested in Edge 16. For posterity, any file containing all of these will trigger that warning (reducing this was very amusing):\n<table> getPrototypeOf ArrayBuffer( Uint32Array( Float64Array(\n\nThose are all fairly mundane:\n- <table>: RES has tables\n- getPrototypeOf: used in libraries to clone objects, but AFAIK we don't actually use those functions (so it only flags debug info and not the actual js file)\n- ArrayBuffer(, Uint32Array(, Float64Array(: typed arrays, in this case used in snudown-js\nAs for the actual exploit they were trying to detect, I'm guessing it was the usual memory corruption + ArrayBuffer -> arbitrary read/write primitive -> arbitrary code execution. Perhaps a bug in HTMLTableElement.insertRow/deleteRow, given the <table> requirement.. Yeah, we can't really say that when there isn't a newer version.\nStill, no, since we've never supported Firefox forks, mainline Firefox 56 is insecure, and few people stayed behind when Firefox 57 was released.\nIf you accept that things will be broken, you can disable the compatibility check and manually install newer versions.\n(Also, while that tab change is the first thing that required Firefox 57, it probably isn't the only one. There are >100 commits after it, and I don't remember if there was anything else.)\n. For the peanut gallery: despite the post's title, this has never worked (tested in the latest patch of every minor back to 5.0, when you couldn't even do it manually). This can also be simplified https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/e16add10b2ada0a7834a6ae21f17ecaacf54f74f/lib/environment/foreground/ajax.js#L122. Yeah. I imagine two things could happen:\n\nreddit keeps old profiles for{ever, a long time}\nnew profiles are converted to be like the redesign, where classnames are generated and can change every deploy, so it won't be possible to do this\n\nI think the latter is inevitable either way, so I'm going to close this.. (integration test failure is spurious). Crosspost expando failure is due to reddit changes. Oops, yeah, that'll do it. Thanks!. Yeah, it doesn't seem like there's another way to get secrets on pull requests. Which I guess makes sense cause it wouldn't be secure.\nWe'll still be able to run integration tests on master, which would be fine I guess, just a longer feedback loop. To test PRs we could use the \"try\" features of something like Homu or Bors (app), i.e. where a committer comments @bors try on a PR and it gets pushed to a try branch in this repo.. The deploy will fail if any browser fails, and Edge often does for reasons beyond our control, so running both is the idea. (https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/8d66577462d37670670b70efa141de5c036cd2ef is what I wanted to do originally). Build failure looks spurious. Thanks!. Links returned by the API don't work, e.g.\nhttps://imgdjinn.com/api/i/uuzIr2Wymo295495\n=>\n[\"\u200bhttps:\\/\\/imgdjinn.com\\/callbackimg\\/baSdrPbH4jUxBKI2o7Yj9SfjccQoocIaVtr2guWx295495.png\u200b\"]. $ ping imgdjinn.com\nPING imgdjinn.com (191.101.20.83) 56(84) bytes of data.\n^C\n--- imgdjinn.com ping statistics ---\n9 packets transmitted, 0 received, 100% packet loss, time 8004ms. #4423. Integration test failure is spurious. Shift is used as the \"open in new tab\" modifier for other shortcuts (shift-c, shift-l, shift-y, shift-r, etc.) where we couldn't use ctrl because it would override native shortcuts. So I think shift-enter makes some sense inside RES, even if it isn't consistent with the browser's behaviour.\nBut mainly: changing this now will change behaviour for some (\"all\" if not for historical options saving quirks) existing users, with little benefit if they're already used to the old shortcut, so I don't think it's worth it.. #4656, will be released at some point. CI failure is spurious. Integration tests intentionally skipped. Thanks!. Thanks!. Thanks!. Test failure is unrelated. Test failure is spurious. Done. Everyone in the org should have write access to https://github.com/Reddit-Enhancement-Suite/resize-observer-lite\nAnother potential option is to change the disableAnimations CSS to avoid applying to the relevant media elements; maybe you've already considered that and discarded it?. Sounds good to me.. Thanks!. Chrome tests passed, Firefox tests are broken right now. Thanks!. Thanks!. Test failure is spurious.\nThanks!. Ignoring FF integration tests, see #4827 / https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4800#issuecomment-415989329. It appears that there's an issue with the current Firefox dev version, and that we can't request an older dev version from Sauce Labs. I guess we'll have to ignore it for now, or disable it if it stays broken for a while.. Huh, I figured we'd have to manually decode it (pushing \"high\" codepoints to a Uint8Array and using TextDecoder), but I forgot escape/unescape are broken by design, so it works \u00af\\_(\u30c4)_/\u00af\nescapeHTML is necessary so things which look like <elements> aren't removed by our sanitizer, it's unrelated to this bug.. Looks good!. Would you prefer I add both image and html5 to the element's class so I don't need to add this?\n. Of course the linked image will need to be re-uploaded; I also added anti-aliasing to the expando icons that weren't anti-aliased.\n. Originally I tried to add a new elem.type (at around line 680) but the expando wouldn't open (I'm assuming that it had something to do with expando open/close handling) - is it acceptable to do it this way instead?\n. Just realized that I should keep ~~.video~~ as a fallback for subs that replace RES's icons, I'll add that in a couple hours when I have access to a computer.\nOn second thought, I'll need to increase the specificity of a bunch of selectors (may have adverse affects for custom styles) to override reddit's .video styling - should I use .image as a fallback instead (I'm assuming we shouldn't just break them entirely)?\n. I wondered that too, since \"collapsed\" is already added on line 680 (of showImages.js), and it still seems to work fine.\nI'll make those class changes you suggested, ignore my commit from 2 minutes ago.\nEdit: Having the \"collapsed\" actually results in some expandos having \"collapsed\" twice:\n\nEdit 2: I should be able to remove all of the extra added \"collapsed\" classes, since (Line 680 of showImages.js):\nexpandLink.className = 'toggleImage expando-button collapsed collapsedExpando';\nguarantees that collapsed will already be added (as long as no classes are removed), right? Also: would you happen to already have a post with each different type of expando that I could use to test this?\n. Unfortunately we'll have to use something like:\na.toggleImage.expando-button.video.video-muted\nto override reddit's spritesheet which uses:\n.expando-button.video.expanded:hover\nand we'll have to use something similarly specific to style .commentImg:\na.expando-button.video.video-muted.commentImg\nThis does cause some incompatibility with existing styles (may have to be fixed in subreddit stylesheets):\n\nEdit: I think our best bet is to use \"video-muted\" alone instead of \"video video-muted\" - unfortunately I can't think of any other options than the following, perhaps you have a better idea?\na. Use the classes \"video video-muted\" - because of the specificity needed for us to override reddit's spritesheet, we also break subreddit styling (usually results in no expando icon at all).\nb. Use the classes \"image video-muted\" - allows us to use much lower specificity, so subreddits that restyle expandos will have the image icon instead of video (doesn't make sense to do so, results in confused users and still sort of breaks subreddit styling).\nc. Use the class \"video-muted\" - also allows us to use lower specificity, but restyled subreddits will either have an out-of-place RES icon (probably the best-case-scenario) or no icon at all, in some cases.\nWe could use option b. at release and then switch to c. a few releases later (after subreddits will have theoretically updated their styles), but that could cause other problems.\n. Now that this is merged, don't forget to re-upload the spritesheet! :)\n. Right, I meant to ask about that.\n. Sounds good, I think I actually had it formatted normally until I saw it formatted that way (on lines 301, 466, 532, 554, 615, 707, 709, 725-733 [looks better in short form, though], 1077, 1079, 1144, 1670, 1673, etc. of showImages.js) so I thought it was okay :P\nAt least I think those are all formatted incorrectly (found with this regex: \\tif ?\\(.*;\\r ).\nI'm now somewhat tempted to go through the entire codebase and fix (most of) them [where there isn't an obvious downside], but replacing by hand would be tedious and using a script could cause other problems.\n. I actually only used a string because I saw it in existing code (for maxWidth and maxHeight, lines 77 and 83), but then I debated over it because bufferScreens (line 70) is a number.\nI guess I made the wrong choice, haha\n. Very minor, but you might as well fix \"migratoins\"\n. Alright, fixed.\n. Removing .empty() is the cleanest way to keep displaying my text when there are no saved comments.\nIt didn't seem to do anything regardless, since no children are added to savedCommentsContent when there are no saved comments (perhaps I'm overlooking something?), but removing it didn't seem to cause any ill effects.\n. This is to fix a formatting error (stops it from being overlapped by the multireddit sidebar), and it makes the saveRES description look like this, which may not be desirable.\n. I can't add commits, but this regex should do the trick: /^https?:\\/\\/(?:(?:www|m|embed)\\.)?radd\\.it([\\w\\/_]+)/i\nOr, if earl must start with /r/, this: /^https?:\\/\\/(?:(?:www|m|embed)\\.)?radd\\.it(\\/r\\/[\\w_]+)/i\n. Updated. It now also uses a non-breaking space instead of an empty string when displayText is left blank, to avoid breaking stuff that uses ::after{content: \"<displayText>\"}\n. I knew someone would ask (so I probably should have mentioned): the CSS content property doesn't support it (unless I'm missing something).\n. Fixed.\nI originally thought that someone might want a blank space instead of an anonymous name, but now that I think about it, that would be silly (you couldn't go to your profile, etc.).\n. Um, can you use this regex (adds modqueue-type pages):\n/^https?:\\/\\/(?:[-\\w\\.]+\\.)?reddit\\.com\\/r\\/[\\-\\w\\.]+\\/about\\/(?:edit|modqueue|reports|spam|banned)\\/?/i\nI should have done this when I added comment tools to those pages, but it seems I overlooked the preview entirely (my mistake).\n. I just figured out that we should be able to use \\00A0 here, it seems that the CSS content property supports special characters in this format rather than HTML-style.\n. Perfect, thanks so much!\n. ...I should have noticed that, I would have created the same problem I was fixing, lol\n. How does it look now?\n. It would be nice to have a notificationID (and maybe a header) for this notification (see here for an example).\n. We might want to make this much smaller than 100,000, since we shouldn't see more than about 1000 entries per page (I haven't seen more than 1050 in testing). (not sure what a good number would be, though)\nAlso, style: we prefer full block if-statements instead of shorthand.\ni.e. if (foo) bar; becomes:\nif (foo) {\n    bar;\n}\n. Looking for critique / improvements of this regex (designed to remove unimportant parts of URLs so that we can compare them). Here are a few test cases to illustrate what it does right now:\nhttp://www.youtube.com/watch?v=A8JsRx2lois&feature=youtube_gdata_player#t=58s -> youtube.com/watch?v=A8JsRx2lois\nhttps://en.wikipedia.org/wiki/Regular_expression#Basic_concepts -> en.wikipedia.org/wiki/Regular_expression\nhttp://jarkko1.deviantart.com/#/d5d2l2v -> jarkko1.deviantart.com/#/d5d2l2v\nhttps://www.reddit.com/r/pics/comments/92dd8/test_post_please_ignore/.compact -> reddit.com/r/pics/comments/92dd8/test_post_please_ignore\nhttps://i.imgur.com/ppBPV.jpg -> imgur.com/ppBPV\nhttps://www.reddit.com/r/Breadit/search?q=bread&restrict_sr=on&sort=relevance&t=all -> reddit.com/r/Breadit/search?q=bread\nMy main concern is removing everything after the the first & - this is pretty much necessary on sites like youtube that will often have different URLs for the same video, and only the first part of the query string is important (as above). However, there may be sites where this will result in false positives.\n. re: pages with different #sections - iirc the user wanted us to match the page regardless of section, because reddit will treat it as the same page.\nAnd that makes sense, I think I will keep the entire query string, we might as well stay on the safe side.\n. I also found that commit, however, we would have to special-case some other things [determining whether the user is a friend] if we keep it (not a big deal, but something to consider).\nI'd suggest that we scrap it and use #754 (when/if it gets implemented) for viewing the current account's user info.\n. We appear to already have it, here.\n(admittedly I didn't consider that, but I didn't notice it during testing)\n. True. But as long as the previous line starts with return it should be clear enough.\n. Replace this line with the following?\nmodules['userTagger'].attachVoteHandlers(ele.parentNode.querySelector('.midcol'));\nMight not be the most efficient way, though.\n. Yes? profileRegex should match all URLs that this line does.\n. got it\n. One minor thing: can you use tabs instead of spaces here?\n. I'll have to give that credit to my IDE (IntelliJ)\n. I'm on Windows, but I just tried building with makelinks and it also doesn't work (but I get \"cannot connect to extension\", rather than it just not updating).\nYou shouldn't have issues with symlinks if you use gulp or grunt to build though, right? (both work for me)\n. So I just tried makelinks.sh again, a little more carefully (closing Chrome first :P), and was able to reproduce that problem.\nThen I managed to find this issue report, and followed its suggestion to turn off Settings > Appearance & Behavior > System Settings > Use \"safe write\" - and voila, it worked!\n. Needs to be reuploaded\n. > AMO does not permit externally hosted script tags being pulled in from oEmbed like this\nThe thing is, we're adding &omit_script=true to the original jsonURL, which doesn't affect the URL used by our request (thisJSON.url, which has already been created here) - so we were pulling in the script regardless.\nSo we need to decide if we want to correctly omit the script (current behavior in this PR; loses twitter formatting in FF) or keep the original behavior and load it anyways.\n. Heh, they must not have been paying much attention, since they didn't reject 4.5.0.2 or future versions - all of which include the script (I agree, we still shouldn't risk it for v4.6 - but it is amusing).\nAfter some investigation: Twitter expandos were downgraded for about a year, then accidentally upgraded about a year ago: the original commit to omit the script was after release v4.2.0.2, and it was accidentally nullified by this commit after release v4.3.1.2.\n. May conflict with 9093c685e244fa54fd753912ab857675fb9e138f, FYI\n. That should take care of it.\n. Is this left over from something? It never gets called.\n. This can be simplified a bit:\nvar needsStorage = Object.getOwnPropertyNames(modules[moduleID].options || {}).some(function(optionKey) {\n    var type = modules[moduleID].options[optionKey].type;\n    return type !== 'button';\n});\n. Very minor but the comma on this line and the empty object can be removed.\n. This function could do with even more cleanup: this line is unreachable, and the return statements are somewhat redundant.\n. Eh, I don't think this would be any faster: isPageType() gets called at least once per module, so it'll end up doing more regex tests than the previous implementation. Although either way we're dealing with microseconds, so it won't be noticeable.\nOtherwise this is just a slightly more complex way to do it, so I'm not sure that isPageType() needs to be changed. (If nothing else, this implementation matches linklist on every page, so that needs to be fixed.)\n. Yeah I was gonna do that but like half of the variables in that function are jQuery.\nBut I guess it couldn't hurt.\nI wonder if JSCS can enforce this kind of prefixing.\n. It is, apparently:\n\n. You're probably gonna need @-webkit-keyframes too.\n. Very minor: createLinks doesn't have to be a module property, it can just be function createLinks() {...}\n. And if you do decide to diverge, we have a better way of watching for new elements than an event listener (using RESUtils.watchForElement), though that might be more work than it's worth.\n. I think xpost_from should be prioritized, to prevent this from beating it: Something something /r/notxpost [x-posted from /r/actualxpost].\n. href can be '/r/' + sub, to avoid redirecting people from other subdomains to www..\n. Yeah, that sounds logical. :+1: \n. You can add in optionKey: 'pauseAfterEvery' to make the gear link to that option.\n. Do we need to avoid jQuery here? The following appears to work the same, and is less verbose:\njavascript\nvar pos = RESUtils.getXYpos(this._target);\nvar t = pos.y + this._target.offsetHeight,\n    r = document.body.scrollWidth - pos.x - this._target.offsetWidth,\n    l = pos.x;\n$container.css({\n    right: l + $container.outerWidth() < document.body.scrollWidth ? 'auto' : r,\n    left: l + $container.outerWidth() < document.body.scrollWidth ? pos.x : 'auto',\n    zIndex: 2147483646,\n    position: 'fixed',\n    top: t + 2\n});\n. Eh, I didn't refresh to see that it was already merged, you don't really need to do it at this point.\n. You might as well put this in RESUtils.regexes, it seems generally useful.\n. $().safeHtml() here instead of .innerHTML, if possible\n. Also you probably want to allow a query string or hash, i.e. <snip>\\.com\\/?(?:[?#]|$)/i\n. Yeah I'm probably too nitpicky about that, anyway.\n. json[0]['outputs'] is duplicated.\n. Yeah, that's just a separate thing I noticed - if it made a difference I'd be baffled.\nThat's the generic error logged when the promise returned by handleLink() is rejected; if you reject with a value, the value will be logged as well.\nThe error occurs, as mentioned, because on line 23, it's trying to JSON.parse a string containing a URL (i.e. not a proper JSON object).\nIn this case, I don't think you need to parse anything else after parsing the response; you should be able to use the URL directly from json[0]['outputs'].\n\n. Ooooh, that's perfect.\n. In this case, this is unnecessary since the endpoint URL will be different for each user (if no key is specified, the key is generated from the endpoint - e.g. RESUtils.cache.-user-erikdesjardins-about-json).\nEdit: Ah, you're invalidating it as well, in that case prefix it with RESUtils.cache. or RESModules.userInfo., since the key is used for storage and raw usernames aren't preferable.\n. data.res_cache_friend should be unnecessary (it should send a new request when it's expired, so data.is_friend would always be correct), but it's a bit broken (#2506).\n. Yep, correct.\nThe one on this line would do something, but it's not noticeable since the promise is resolved immediately after (on line 185).\nThe one on line 142 always occurs after the promise is resolved, so it does nothing.\n. One last thing: this could be { endpoint: '/user/' + data.name + '/about.json' } - it'll generate the key the same way as fetch.\nIt's my bad, my previous comment was a bit misleading.\n. All pages are included (and none excluded) by default, so these can be omitted.\n. Minor nit: this check is redundant\n. Might as well bail-out earlier (i.e. on line 40) if href.match(/[?&]depth=/), then href = RESUtils.insertParam(href, 'depth', commentDepth) can be used here.\n. This breaks everything because most pages that used to be linklist match subredditPostListing\n. Just in case: don't forget to add subredditAbout and account to pageTypes\n. Does this need to be deleted? Naively I'd assume that gulp would happily overwrite it.\nAlso, it's async; it should return a promise.\n. That's strange, it seems to work fine for me without it :/\nAlthough I have encountered this before; I think I did something weird to fix it (like appending ./ to the dest path)\n. dependsOn: 'warnOldSubmissions', (see)\n. Accidentally left this in?\n. Should probably allow query strings or hashes after the id, maybe something like /^https?:\\/\\/(?:www\\.)?derpiboo.ru\\/\\d+(?:$|[?#])/i.\n. Should check here or above and reject if !info.image, since sometimes the response doesn't include one.\n. Might as well do elem.caption = info.description; and add the fix I described in #2532\n. Actually this seems to happen if an image is a duplicate; if you're feeling adventurous you could make another request if the response includes duplicate_of (some examples of that here).\n. This should probably be moved. But where?\n. It should, we probably need to update to 2.1.0\n. You are definitely allowed to use jQuery; it failed because of the double quotes.\n\n. Not sure if this should be enabled by default. I'm imagining a bunch of reports of \"q&a sort is showing up on non-q&a pages\".\n. Even though this is correct, Firefox (42) seems to only work if it's let ...dammit Firefox.\nThere are two other for (const ... that need to be changed too.\n. Rebasing #2541 should be pretty straightforward; might as well do this first.\n. Might as well log an error here\n. ~~Probably want to avoid doing this, if possible (unless it's shown somewhere else). Does it overlap with the header or something?~~\n. A bit late but: showImages ignores subdomains when checking the domain, so www. can be removed...I'll add a note to example.js.\n. Checking the domain in detect() is redundant (I know, it's in every single module, even example.js...I'll fix that too), and you can use elem.pathname without having to create a URL object, since it's an <a> element.\n. Hmmm. This will double-up on the existing gray border instead of just changing its color, and it doesn't play nice with commentRounded.\nIt might be preferable to use border-color: #99AAEE !important, which does (virtually) the same thing without those downsides. If a subreddit removes all of the borders it won't work, but that's still the status quo.\n. I don't see the benefit to having a pre-calculated chunk size and trying to adjust it after - why not keep processing items until you run out of time?\nSomething like:\njs\nconst end = now() + frameTime; // frameTime = 1000 / framerate * dutyCycle\nfor (let i = 0; i < arr.length; ++i) {\n    if (now() > end) return nextChunk(arr.slice(i));\n    callback(arr[i], i, arr);\n}\nThis obviates the need to guess the initial chunk size, allows it to react instantly to changes in browser performance, and guarantees that each chunk will be the optimal size (+/- 1).\nThis also happens to be the strategy used by FastDOM (might be a FastDOM plugin now), and I don't see any notable disadvantage over the current implementation, so I have reason to believe it's at least marginally better.\nWe could probably even combine the two strategies and guess if the next item will take too long, i.e.\njs\nconst start = now();\nfor (let i = 0; i < arr.length; ++i) {\n    if (i && (now() - start) * (1 + 1 / i) > frameTime) return nextChunk(arr.slice(i));\n    callback(arr[i], i, arr);\n}\n. You should be able to do this in the template, i.e. something like (haven't actually tested it):\nhtml\n<select id=\"userTaggerColor\">\n  {{#colors}}\n    <option style=\"background-color: {{bgColor}}; color: {{textColor}} !important;\" value=\"{{color}}\">{{color}}</option>\n  {{/colors}}\n</select>\nand then when you call template.html(), pass in an object of this shape:\njs\ntemplate.html({\n  colors: [\n    { bgColor, textColor, color }\n  ]\n})\n. Would be cool if this was all in the same template, in a {{#comments}} list.\nThen you could eliminate $wrapper.find('.res-module-description').hide();, and wrap res-module-description in {{^comments}}{{/comments}}, which will only be rendered if comments is falsy or an empty list.\n. This can be done in the template with {{#keyboardNavEnabled}}...{{/keyboardNavEnabled}}.\nThat is: if foo isn't an array, then {{#foo}}bar{{/foo}}{{^foo}}baz{{/foo}} acts like foo ? 'bar' : 'baz'.\n. :last is a special jQuery selector\n. Er, just read your other comment - we can't do this with vanilla selectors without a bunch of special-casing.\n. That'll select nothing, because .search-result-listing isn't the last div\n. Yeah.\n. if (!elem.classList.contains('title'))\n. Not quite, you need to add bodyClass: true to the option too.\n. Yeah, it's done for most video expandos, e.g. youtube, vimeo\n. var updatesStylesheet?\n. document.location.origin probably isn't necessary here\n. Ah, didn't notice that.\n. That's existing behaviour, I just moved it from another file...I think.\n. Yeah https://github.com/erikdesjardins/Reddit-Enhancement-Suite/commit/2eadf20aea566c3e49204a888bf33f234b6a8c2c#diff-a34ff6560c6da1e0b6480724e857032aL2026\nUnless you meant album captions/images, in which case I agree.\n. RESUtils.doElementsCollide is a candidate for removal (I've never seen it anywhere else)\n. Ditto for createMultiLock\n. Ditto for baseStyleProtection (and the cssPrefix helper used to generate it)\n. lookupUrl = new URL(lookupUrl, location.href).href (without the if statement), will resolve any relative URL, and is a bit more bulletproof. (docs)\n. Minor nit: this will focus the tab by default, so the true argument can be omitted\n. If this isn't used outside the module, I'd prefer to have a bare function rotateMedia(ele, rotationState) {.\nWe can add module.rotateMedia = rotateMedia; in the future if we need to expose it (or hopefully I'll be done converting to ES6 modules by then).\n. Might as well make this a default param while you're at it, I guess.\nnewdate is always a Date object or undefined, so no usages should have to be changed.\n. (?:(?:\\?type=looplayer)|(?:\\?type=embed))? is redundant (it's optional, contains no capture groups, and is not followed by $ or another group, so it can't affect the match).\n. async should be removed since nothing is awaited in this function.\nAnd hash should be removed since you're not using it (that will fix the build).\n. Neither the autoplay nor loop options are used by iframe expandos, so elem.expandoOptions should be removed.\n. Might as well just inline this (url: elem.href) in the object below\n. Ditto.\n. Minor nit: whitespace. Not sure why they were double spaces in the first place, you can replace them with single spaces or put them back, whatever you want.\n. This is for .gifs that get converted to gfycat videos on-the-fly, IIRC.\nIf you're feeling particularly adventurous, you could try to run them through hosts/gfycat.js after they're converted, but showImages is a bit of a mess - it probably won't be easy or clean to do.\n. You unfortunately can't use destructuring (or any ES6 features) here because files in vendor/ are not compiled.\nWe may want to move this into showImages.js or its own file outside of vendor/, although we don't have a good story for the latter right now.\n. Do you think this module could be converted from type = 'GENERIC_EXPANDO'; to type = 'VIDEO';, because then...\n. ...we wouldn't need to expose this, it could just be async function videoAdvanced(....\n. For ESLint to pass, you'll need to change the comment up top to /* global chrome: false, msBrowser: false */, and add // eslint-disable-line no-native-reassign at the end of every line where you assign to chrome. Same with the other file.\nAlso some minor code style, see the other lint failures.\n. Tab indentation pls. You can probably fix it from this page: click the pencil in the top right.\n. ``` js\nconst {\n    autoplay = module.options.autoplayVideo,\n    controls = true,\n    frameRate = 29.997,\n    loop = false,\n    muted = true,\n    playbackRate = 1,\n    reversable = 0,\n    time = 0\n} = options;\nconst element = await videoAdvanced({ autoplay, controls, frameRate, loop, muted, playbackRate, reversable, time });\n```\nIt's better but not quite ideal.\n. You can use something like logo: 'https://xkcd.com/s/919f27.ico' instead of attribution: false to show the favicon below the image, e.g.\n\n. This needs to be before background.js, so it has a chance to polyfill stuff before that runs\n. js\nurl: 'https://oembed.graphiq.com/services/oembed',\ndata: { url },\n(it'll do the encoding for you)\n. Interesting, seems that Appveyor projects are per-user, not per-repo. It's definitely building this repo though: https://ci.appveyor.com/project/erikdesjardins/reddit-enhancement-suite-md1r4/build/1/job/3v0yu95bd1o25ou3#L2\n. :+1: on removing it.\nI'm not sure that we need more than one way to change the speed, either - having a dropdown feels redundant when you can do the same thing with a few clicks on the +/- buttons.\n. If you make (embed_[0-9]\\/) a non-capturing group ((?:embed_[0-9]\\/)) then this can just be [, uid]\n. js\nelem.setAttribute('frameborder', 0);\nelem.setAttribute('allowtransparency', true);\nI assume these are from the original PR, but they can be removed, they do nothing because elem is the link element.\nAlso IIRC these are always added to iframe expandos in showImages.js.\n. Minor nit: uri.split('/').join(':') -> uri.replace(/\\//g, ':') (I assume also from the orig PR)\n. Can add attribution: false, here (Strawpoll adds its own \"Powered by strawpoll.me\" link at the bottom)\n. I think it would make sense to add elem.expandoClass = 'selftext'; here, so it uses the text expando icon\n. Minor nit: this async can be removed now that there's nothing awaited.\n. This can be:\njs\nurl: '//upload.gfycat.com/transcodeRelease',\ndata: { fetchUrl: imageLink.src },\n(it'll still be encoded)\n. The spread operator can be used here instead of Object.assign, although it might be a bit less obvious what's going on:\njs\nconst filledOptions = {\n  /* ... */\n  time: 0,\n  ...options\n};\n. Nit: break this into multiple lines:\njs\ndetect: href => (\n    (/^https?:\\/\\/(?:\\w+\\.)?flickr\\.com\\/(?:.+)\\/(\\d{10,})(?:\\/|$)/i).test(href) ||\n    (/^https?:\\/\\/(?:\\w+\\.)?flic\\.kr\\/p\\/(\\w+)(?:\\/|$)/i).test(href)\n),\n. We don't want to assign to elem.href cause it's the actual link element on the page.\nI'd be fine with either .replaceing inline in data: { url: elem.href }, or assigning this to const url, whatever you want.\n. Nit: might as well put the string straight into .append(<span...`\n. Or even just change this line to\njs\nimages = images.map(v => [$(v).offset().top, v])\nN is going to be small (<1000) in almost all cases, so I don't think there'd be a noticeable gain from sorting them up front. At least not enough to justify the complexity, IMO.\nEdit: Or even avoid jQuery\njs\nimages = images.map(v => [v.getBoundingClientRect().top, v])\nwhich consistently runs in ~5ms on my machine (with 950 links).\n. Errors from the consistent-return lint can be a bit misleading; it wants all or none of the return statements to return a value (undefined is allowed, as long as it's explicit).\n. This should be identical to module.options = { ?\n. .map(link => populateSectionItem(baseUrl, link)) ?\n. This is really the only line that was changed in this function, the rest was reindented\n. I thought this might have been the fix for comments getting pushed below the sidebar, but it looks like it's been here forever: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blame/5bef0d2a2edc6fcf06fe760ffa2cb27d52d3eb94/lib/modules/userTagger.js#L51\nSo I don't see a reason to keep it either.\n. This will end up skipping over the next element - you probably want to use a set.\n. Nit: use for (const image of activeImageList) { over .forEach when it's not at the end of a chain. Also works with sets.\n. This calc is a bit strange, it seems to work fine with margin-left: -12px;. Is there something I'm missing?\n. How about using:\njs\nconst controlsHeight = (process.env.BUILD_TARGET === 'edge') ? 250 : 40;\n. Nit: might as well inline it, the comment should make it clear enough\njs\nconst controlsHeight = (process.env.BUILD_TARGET === 'edge') ? (0.5 * rc.height) : 40\n. Yeah, but it won't effectively change anything because it only applies to branches and tags in this repo (PRs are always built).\nMainly, it's the simplest way to avoid building (and then trying to deploy) tags that don't look like version numbers.\n. Maybe; the selector above guarantees that we'll be within a .thing, at least.\n. This class is res-gallery-prev in some places and res-gallery-previous in others\n. The other is for NER mail, but just .havemail here might be enough specificity for both\n. It's only called in one place, the default was unnecessary\n. Nit: _ is redundant in [\\w-_] because \\w includes _\n. This should happen before the _.isEmpty(module.options) check, so it works with modules with no options\n. getUrlParams can be used to do this; you can import it as import { getUrlParams } from '../../utils';\n. I think these classes (and those for credits, and in galleries, etc) should be res-caption res-image-caption instead of just res-image-caption; otherwise the .res-caption styles are never used (AFAICT)\n. Can you add\n``` scss\n\n\n{\n    display: inline-block;\n}\n```\n\n\nimmediately below this line?\n(The .res-image and .video-advanced containers still end up with block sizing, so they fill the full width, which can interfere with middle-click scrolling -- I know, that's a very niche use-case)\nIf you think that selector is too broad and would cause problems, feel free to refine it, but I didn't notice any.\n. I think @at-root is redundant here, since the selector includes &.\n. Seems like if (params.t), if (params.end), etc. would be simpler than looping with a switch\n. I bet the loop is actually slower :stuck_out_tongue_winking_eye:  since V8 can optimize direct property loads like params.t to loads by an offset, as if it were a struct (well, ideally -- depending on object shape, inline cache state, etc.), and collecting all of an object's keys for for..in is (relatively) expensive. But performance doesn't matter here regardless.\nTesting for property existence/truthiness with if (param.t) is very common in JS; tbh I don't think I've ever seen a for..in loop used like that before. :sweat_smile:\nI agree with the duplication but we'll worry about it when more than two cases are duplicated.\n. Minor nit: += was fine here; since the RHS is a string you're guaranteed to get a string (and IMO it's clear enough to read; if we were appending two vars alone then it wouldn't be)\n. These should be separate if statements since we could have multiple params\n. const href was changed to let src above; this needs to be changed too.\n\n. :+1: for getting rid of elem here\n. Might as well return these directly (no await) and get rid of getExpandoInfo\n. We might need to keep the a.memegen/m.memegen distinction for isAnimated\n. replaceWith can accept the html string directly, $(html) is mildly redundant\n. I believe this is only used in one place (keyboard shortcut), can you move it there and get rid of module.toggleViewImages?\n. I'm not sure that we need an option for this, since we've been doing it for a while without one (unless you think you'd use it)\n. I'd prefer return [this._api, string.encodegallery/${hash}]; or return () => this._api(string.encodegallery/${hash}); (probably the latter)\n. Yeah I originally added those, but I was wrong, they're not actually identical: for example, reddit's embeds don't get added to history when you expand them (if you have that option enabled).\nSo I think it's fine to just override everything\n. element.classList.toggle('selected', e.target.checked)\n. If .video.res-media-muted is used above then it should be used here too, or vice versa.\n. The newlines here add extra space, might as well put everything inside the <label> on one line (~~could use CSS of course but that's probably overkill~~)\n\nEdit: wait maybe that's not it\nEdit 2: It's actually the space inside the <a>, which is a bit cumbersome to put on one line. Do whatever you want I guess\n. No longer exists (also used below)\n. _.pull(imageList, expandoButton)\nEdit: pull, not remove\n. Maybe I should have read all of the commits before commenting :sweat_smile: \n. Just have one string per line and concat or [].join() them\n. Maybe pass info as a third argument; I don't think it makes much sense for it to show up in the \"regex results array\"\n. reveal = reveal || this.options... -> reveal = this.options...\n(it's always false here)\n. High-level comment: ideally, this promise would resolve to something like { options, siteModule } so it can always be reused by a duplicate, regardless of whether or not we're ignoring duplicates.\nI believe that would also simplify a lot of the logic in the second half of this function, and we then wouldn't have to expose resolve/reject from a bare promise (which is pretty ugly).\n. If this is returning multiple results, I'd prefer a map from url -> visited state instead of an array of visited urls.\nAlthough, since it's only ever used to check one URL at a time (AFAICT), you could just accept a single URL and return a boolean, which would simplify the implementation a bit. We can always expand it to accept multiple URLs in the future if necessary.\n. async/await here are redundant, we can just return the promise returned by sendMessage directly.\n. Use value: process.env.BUILD_TARGET !== 'safari' and noconfig: process.env.BUILD_TARGET === 'safari'\n. Should return a sensible default instead of undefined (just in case it gets used in the future in Safari).\n. I am a bit concerned about having a potentially slow async operation in the middle of filtering, since right now filters can run before first paint, which I doubt could happen with filterVisited enabled.\nMaybe do filterVisited in a second things::forEachChunked pass directly after this one, so the fast filters are always fast?\n. const newWidth = ..., it doesn't need to be in the let ... up above\n. iframeNode.style.minWidth.endsWith('%')\n. Actually, could we accomplish the same thing by doing:\njs\niframeNode.style.minWidth = '480px';\niframeNode.style.width = options.width || '640px';\nabove?\nOr is there a reason that options.width needs to be the minWidth?\n. async can be removed\n. Could move this into the object, since this function is so simple now\n. I think 166px is better (it's also used here). And width: '100%'\nExamples:\n200px\n\n166px\n\n124px\n\n. Not sure if this is too long. Maybe endpoint.startsWith('album/') ? HOUR : DAY in case album captions are updated?\n. Nit: no newline at start of file\n. detect: href => -> detect: ({ href }) =>\n. elem -> href\n. js\nreturn {\n  type: 'IFRAME',\n  embed: `https://vidl.it/embed/${hash}`,\n  width: `${meta.data.iframe.width}px`,\n  height: `${meta.data.iframe.height}px`,\n};\n. Node 5 should still work; at least, we still test it\n. This is a bit too specific to what it does right now (we could have stuff other than interceptors), maybe something along the lines of Edge-specific overrides of the Chrome environment\n. __tests__ could be any subdirectory (hence the **/__tests__); I don't think we need to point it out in lib/utils.\nI think either keep the **/__tests__ or have a note below this list, along the lines of  \"unit tests can be in any __tests__ subdirectory\"\n. .replace(/\\/?p/g, '') isn't necessary after #3049\n. .+ at the end is redundant, this regex is (effectively) equivalent: ^https?:\\/\\/(?:www\\.)?simplecove\\.com\\/(\\d+).\nYou probably want ^https?:\\/\\/(?:www\\.)?simplecove\\.com\\/(\\d+)(?:\\/|$) or just ^https?:\\/\\/(?:www\\.)?simplecove\\.com\\/(\\d+)\n. this -> thing\nAlso these have always been backwards, apparently: case 'link':    return thing.isSelfPost();\n. for (const thing of things) {\n. addableKeys = addableKeys.filter(k => !blockConfig.exclude.includes(k));\nor\naddableKeys = _.difference(addableKeys, blockConfig.exclude);\n. (addClassNames + removeClassNames).trim() !== '' might be clearer\n. Nit: newline before });, no space around ... (both will be linted soonTM)\n. Missing the terminator after the regex; should be: (/^https?:\\/\\/(?:www\\.)?simplecove\\.com\\/(\\d+)/i).exec(href),\n. /^https?:\\/\\/(?:www\\.)?pixiv\\.net\\/member_illust\\.php.*[?&]illust_id=(\\d+)/i should work.\nWe can ignore the mode=medium since the id is all that really matters.\n. illust_id -> id\n. The tiniest of nits: no div, just #siteTable a.comments\n. Are you sure this is needed? ESLint should allow unused args as long as they're followed by used args\n. js\naddListener('isURLVisited', async url =>\n    (await apiToPromise(chrome.history.getVisits)({ url })).length > 0\n);\nor maybe\njs\naddListener('isURLVisited', async url => {\n    const visits = await apiToPromise(chrome.history.getVisits)({ url });\n    return visits.length > 0;\n});\n. false instead of undefined (so minor, I know, sorry)\nI guess undefined would represent \"indeterminate\", but I don't really want to allow the possibility of if (visited === false) ... else if (visited === undefined) (prefer to throw if we need to handle an unimplemented API, probably).\n. I think this could be a local function instead of a property on module; I probably missed it while converting the modules\n. I'd prefer importing Expando and using instanceof, or checking for expando.expand (if that's equivalent)\n. js\nconst retrieveExpandoOptions = _.memoize(\n    async (...) => {...},\n    (thing, { href }) => href\n);\nAnd then you can remove expandoPromises\n. This promise is probably not necessary if you make retrieveExpandoOptions async...\n. ...because you can return this...\n. ...and remove the try-catch, which will behave identically to this.\n. new Promise(resolve => { resolve(); }) -> Promise.resolve()\n. && -> ||\n. Only on the second one, this should still be &&, sorry\nSince you want !value == noconfig, and !(!a && !b) == a || b\n. This function might make more sense in showImages.js, perhaps with the signature toggleExpandos(thing, scrollOnExpanding) or toggleExpandos(expandos, scrollOnExpanding). But I don't feel strongly about this.\n. Might as well give this error a message\n. I don't think it's standard for the Error constructor to accept multiple arguments, so concat options.src with the message.\nAlso minor nit: s/throw Error/throw new Error/\n. _.remove operates in-place and returns an array of removed elements (i.e. just this.getEntryExpando(), if present); I'm not sure that that's what's intended here -- I would assume that this is intended to be:\njs\nconst entryExpando = this.getEntryExpando();\nreturn Array.from(this.entry.querySelectorAll(Thing.expandoSelector))\n    .map(v => expandos.get(v))\n    .filter(v => v && v !== entryExpando);\n. I'd prefer:\njs\nreturn [...this.getTextExpandos(), this.getEntryExpando()].filter(v => v);\n. I somewhat want this to be a Map for symmetry with expandos, but I don't feel strongly about that. Feel free to leave it as-is.\n. This (and other places where Object.values() was replaced) could be changed to one of two things:\njs\nconst activeExpandos = Array.from(primaryExpandos.values())\nor keep using generators all the way down (with  map, filter, etc. from utils/generator.js):\njs\n// Empty collapsed when beyond buffer\nfor (const expando of primaryExpandos.values()) {\n/* ... */\nprimaryExpandos.values()\n    ::filter(v => v.open)\n    ::map(v => ({ media: v.media, data: v.media }))\n    ::lazyUnload(isWithinBuffer);\n. While we're at it with the generators, we could probably make this a bit cleaner:\njs\nconst [siteModule, detectResult] = [\n    'default',\n    'defaultVideo',\n    'defaultAudio',\n    domainToModuleName(mediaLink.hostname),\n]\n    ::map(modId => domainModuleMap[modId])\n    ::filter(mod => mod)\n    ::map(mod => [mod, mod.detect(mediaLink)])\n    ::find(([, result]) => result) || [];\n...actually that might be worse :confused:\nFeel free to keep it as-is if you want.\n. ((first % pieces.length) + pieces.length) % pieces.length\nThis might deserve its own function in utils/math.js. Maybe positiveModulo?\n. While we're at it, might as well update this to:\njs\nif (!hash.startsWith('#!settings') && !hash.startsWith('#res/settings')) return;\n. Nit: this non-capturing group: (?:([^.]+)\\.) is redundant (i.e. use ([^.]+)\\.)\n. This is only necessary in the example host (not here) because the example host doesn't do anything. I'll change that to make it more intuitive.\n. Needs to be Array.from(this) to accept arrays or generators\n. Looks great, just one last thing:\nCan you add expandoClass: 'selftext', here, so it has a text icon?\n. Looks like tabs instead of spaces, thanks\n. Note: this check existed because styleTweaks took way too long to remove the subreddit style.\nNow that that happens during loadDynamicOptions/beforeLoad, it's always removed before this code runs (in afterLoad), so getComputedStyle alone is accurate.\n. Should we even bother offering anything below \"Large\"?\n. Assuming it works, I think this is cleaner:\nleft = left.replace(/(\\/?[ru])\\/(\\w*)\\s?$/,$1/${inputValue} );\n. Nit: KEEP_VISIBLE\n. value.endsWith('%') or value.includes('%') instead of match\n(same below)\n. This will also select user tags within comments (i.e. mentioned usernames), not just authors.\nProbably need to use: .noncollapsed .tagline .userTagLink.hasTag\n. We should have migrators for these; you can add another one to the end of the array and remove the existing one.\n~~In fact, looking at this now the existing one wouldn't have worked because it was migrating 480 (the number), so you'll have to migrate the height from '480' to '95%'.~~\n. This doesn't work anymore because URLs with #res/settings have more slashes than those with #!settings.\nTo fix this you could switch to #res:settings (like a pseudo-protocol), or change the parsing logic; I prefer the former, if you have no objections.\n. Yep, looks like I was wrong, you do need to use a number in the migrator.\n. Hmm, 95% is just tall enough that images with titles or descriptions require scrolling, and I think we should be a little conservative since we're increasing it from 640x480.\nMaybe bring this down to 75 or 80%?\n. Just use an arrow function with the regex inline, like we have in most hosts. V8 (and probably IonMonkey) cache compiled regexes, so it's not expensive like you might expect.\nOr allow detect to be a regex or a function.\n. Typo?\n.  item needs to be $(item).closest('.flat-list') or something because it's the comments link, not the entire menu\n. Nit: typeof target === 'function' is usually used to do this (and is technically more accurate, though that doesn't really matter here)\n. We need scrollStyle: 'legacy' for this and moveDownThread (looks like that's what it was before?)\n. I know this is a WIP but:\nProbably drop the \\/\\w*, since that can be left out or mangled (with any character) and reddit will still accept it.\n. Why remove the (?:\\/|$)? Are there any valid urls where the comment id or comments isn't followed by a slash or the end of the pathname? (it avoids matching a path section like /comments_something_something, though that may not be relevant here)\nThe comment id is optional in the current regex so that it matches /r/enhancement/comments (legacy behaviour). We could change that, but I'm not sure what a better page type would be and I don't really want to add a new one.\n. Also n.b. we have tests for these which you'll have to change, at the very least to add the comment id capture group\n. I think you should be able to return children.map(c => c.data), since results are returned in order (and not deduped, as you've seen)\n. Should probably _.compact this, because all sources could be null (jQuery appears to preserve null).\nAlso lastSource.addEventListener below will throw if the last source is null.\n. Nit: dataUrl is always truthy\n. If you add ?limit=100 to the url you should be able to make this 100, e.g.\nEdit: or data: { limit: 100 }, to the ajax call\n. Nit: there's an extra newline here\n. Nit: move this next to the other imported template\n. We need to change this to something like goModePanel().appendTo(document.body).fadeIn() because jQuery 3 no longer treats disconnected elements without inline display: none as hidden\n. I see why this is super inefficient, but I'm not sure that we should just remove it.\nI think the usual pattern for doing stuff to a bunch of comments:\njs\napplyScoreHiddenTimeLeft();\nwatchForElement(...);\n// ...\nfunction applyScoreHiddenTimeLeft() {\n    querySelectorAll('.score-hidden')::forEachChunked(...)\n}\nwould be a viable replacement to the mouseenter listener.\nAnd might as well run it in afterLoad, since it's not noticeable until you hover.\n. Hmmm, now that I look at this a second time I think my past concerns were misplaced.\nremoveVisitedLinksActive is always false on pageload, so we'll never hit an await during the initial filter, where performance really matters.\nSo you could put this back to how it was, with the entire function async instead of an IIFE.\n. Nit: extra newline\n. Small improvement: if you change this to \njs\nurl: 'https://vidl.it/oembed',\ndata: { url: href, maxwidth: 640, format: 'json' },\nit'll build the query string (with encodeURIComponent) for you.\n. This template is for commentNavigator, so we don't want to add this until #3111\n. Nit: put this option between top and legacy like it is above\n. Nit: npm will alphabetize this the next time someone runs a command with --save, so let's put it in alphabetical order now\n. This is probably too vague but I'm not sure how to concisely say \"change the link to point to the image instead of the comments\"\n. I don't really think this belongs in filteReddit. I'd prefer to have showImages export a function allowing the caller to enable/disable forced expando completion.\n. Similar thing here, we shouldn't put the burden of null-checking on the caller nor should showImages know about the internals of this module. Instead, have showImages export a function to register (and unregister, if necessary) callbacks.\n. TBH I'm not sure if we need to keep this -- I've never, even seen any subreddit using it. Unless you've seen it used, I'd remove it.\n. We don't need to bind these; I'd prefer filters.forEach(filter => filterline.addFilter(filter)) or a for-of loop\n. Nit: no braces here\n. Nit: use _.once since you're not accepting any arguments\n. This should be showImages right?\n. Spacing is a little off here\n. Call this twitch.tv clips or something\n. detect: ({ hostname, pathname }) => (hostname === 'clips.twitch.tv' && (/^(\\w+\\/\\w+)(?:\\/|$)/).exec(pathname))\n. Params href, [, clipId]\n. Don't need this\n. {CLIP_ID} -> ${clipId}\n. Don't need muted ones\n. When #3174 is merged you can change this to clips.twitch.tv and remove the hostname check from the line below\n. You can remove the extra parens on the outside of ((/^\\/(\\w+\\/\\w+)(?:\\/|$)/).exec(pathname))\n. We should be able to replace this URL with https://github.com/honestbleeps/Reddit-Enhancement-Suite/compare/d35986d871577be6422b3ef445fb4f0c4bd30fcf...v4.7.1 now that 4.7.1 is tagged\n. Wording? More info?\n. Note: jpm warns about the version because it's not valid semver, despite the fact that AMO doesn't even use semver!\nFor reference, here are the docs suggesting to use 1.1alpha1, which isn't valid (1.1.0-alpha.1 would be), and a published extension with version number 1.7.7b15.\n. Note: three or four storage requests are made before init crashes, so this will open multiple alerts in series.\nBut I don't think that's a problem because you'd immediately roll back/disable the extension if this happens (memoizing by worker and current URL would be mildly complex for little gain).\n. Interesting. But amusingly, that page uses 0.1 in its example manifest, ~~the \"invalid semver\" error message printed by jpm suggests 1.0.0rc4~~ (edit: seems this is fixed and I need to update jpm), and AMO doesn't even let you submit extensions with a proper semver beta version:\n\nMake up your mind Mozilla!\n. Yeah this prevents a click from opening the image in Safari. May have to add a mousedown listener to set the initial lastX and lastY and use e.clientX - lastX instead of e.movementX, if that would be equivalent.\n. s/dontLoadAlbumsLargerThan/dontLoadAlbumsBiggerThan/, I think\n. Move it down here and use const?\nconst filmstripActive = module.options.galleryAsFilmstrip.value && (options.src.length < slideshowWhenLargerThan);\n. I'd love to be able to get the originAttributes without iterating through every single cookie, but I can't find any (documented) API that will let me do that (in nsICookieManager or nsICookieManager2).\nOne might expect to be able to use getCookiesFromHost(), but nope, it also requires originAttributes, though this is not documented:\n\nIn any case, we'll be switching to WebExtensions at some point in the (hopefully) near future and this code will disappear.\n. This can be: export default {; the superstack var isn't used anywhere besides the export\n. This can be simplified to: detect: ({ pathname }) => (/^\\/v\\/(\\w+)(?:\\/|$)/).exec(pathname),\n. Albums with a single image are automatically treated as images (we're actually fixing the icon for that as we speak), so this can be removed\n. Individual images can have a title and caption, and should have a type (see imgur; the docs can probably be improved)\n. Due to the comment on the next line, this should be title: data.albumTitle\n. Usually if we need to add more permissions to Safari we also need to add them for Chrome/Edge. Are you sure that it won't work without this?\n. Maybe mediaOptions.muted = mediaOptions.src.every(s => isMuted(s.type));\n. Why lodash instead of Array.prototype.every? (I think this will always be an array?)\n. Nit: use a different var for this, since it's not really the top of the target anymore\n. Note: reddit hardcodes 65px in their own CSS (and I don't think they'll change the header height out-of-the-blue), so I'm not concerned about hardcoding this.\n. If this doesn't need to be reevaluated each time (and because AFAICT it's always or almost always used), then assign it normally (no getter) after this assignment, i.e.  after line 842.\n. Probably move this to HoverInfoCard or inline it; it's not particularly generic over the class (e.g. I imagine you would want more/different elements if it were to be used for HoverDropdownList)\n. Nit: make _displayLoadIndicator an empty method on Hover and remove the null-check (making it more obvious that this is something that a child class can/should override)\nAlso, maybe call it _onOpen or _beforeOpen or something (i.e. why/when it's called rather than what the child class should do). Though I'm not sure if that's overly generic, since we'll probably never use it for anything but a loading icon, so feel free to leave it as-is.\n. Use the equiv of require('fs-extra').copySync for Windows\n. No, version is what we want to use. preversion has the old version number, version has the new version number and is before the commit (which we want to add to), and postversion is after the commit\n. I think the inverse of this would be easier to understand (no double-negative when it's disabled), i.e. \"nested: Hide children for nested comments when hiding all child comments.\"\n. This can probably be simplified to something like\njs\nconst rootComments = document.querySelectorAll('.commentarea .listing');\nWe don't need to keep the original, very precise selector now that all comments should have a \"hide child comments\" button.\nAnd maybe it should be renamed, since it's not just the rootComments anymore.\n. Instead of using the second param for two things, I would break toggleComments into three functions, something like:\n``` js\nfunction toggleComments(action, containers) {\n    containers::forEachChunked(container => {\n        ...\n    });\n}\nfunction toggleIndividualComment(action, ele) {\n     toggleComments(action, $(ele).closest('.thing'));\n}\nfunction toggleAllComments(action, includeChildren) {\n     const containers = includeChildren ?\n        document.querySelectorAll('div.commentarea div.sitetable div.thing') :\n        document.querySelectorAll('div.commentarea > div.sitetable > div.thing');\ntoggleComments(action, containers);\n\n}\n```\n. Huh, I'm surprised that's not deployed yet (I guess only on a new npm release?).\nThe npm version docs go into more detail and seem to be correct:\n\n\nRun the version script. These scripts have access to the new version in package.json (so they can incorporate it into file headers in generated files for example). Again, scripts should explicitly add generated files to the commit using git add.\n. Even if it shouldn't be called more than once because it's only called in  go(), if you're using it to uphold an invariant (or just to be clear about intent) then :+1:\n. Also async post => {\n. I don't really like module globals like this, I think we could call postForNotification() in go() (it doesn't need to be super fast in beforeLoad) and pipe everything down through arguments\n. async () => {\n. #3291 will let you do this in a nicer way without a global\n. Maybe replace this and the two globals with something like\n\n\njs\nconst nativeButtons = _.once(() => {\n    const inbox = document.querySelector('#header-bottom-right #mail');\n    let mailCount = document.querySelector('#header-bottom-right .message-count');\n    if (!mailCount && (module.options.updateCurrentTab.value || module.options.updateOtherTabs.value)) {\n        mailCount = document.createElement('a');\n        mailCount.style = 'display: inline-none;';\n        $(inbox).after(mailCount);\n    }\n    return { inbox, mailCount };\n});\nAlso I think inline-none is a typo\n. This is Object.values(dict), I think :stuck_out_tongue_winking_eye: \n. Yeah that looks fine\n. nativeInboxCount = document\n                ^ looks like this is a tab\n. You could also wrap this in _.once if you want so you aren't selecting #modmail every time\n. Nah Babel transforms it https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/1ef2c155b88c2dbbdd4a36d2b97ce1947df239ba/lib/core/profiling.js#L99-L101\n. Context: typeof MutationObserver is object (!), not function in Safari 9\n. That makes a lot of sense :sweat_smile: \n. You can probably just use _.defer (same as setTimeout(..., 0)), since module loading is synchronous\n. Tested in all browsers (+ with isProgrammaticEvent) and this behaves identically to the (very deprecated) initMouseEvent\n. Nit: use performance.navigation for future type checking (window is untyped)\n. Why not performance.navigation.type === performance.navigation.TYPE_BACK_FORWARD ?\n. Maybe something like This release consists of changes from the 4.7.x beta releases.\nMentioning 4.6.1 feels a little redundant/obvious\n. _.debounce() with no delay is a basically a no-op, so you can remove that and just export function selectClosestVisible() {...\nWe don't need a debounce for this usage, so @larsjohnsen can add it back in his PR if necessary\n. name can be more descriptive than the moduleID, maybe something like 'MTG Card Images' or 'Magic TCG Cards'\n. Note: this adds a listener to both the hide and unhide buttons, but this is correct because the unhide button also removes the post from the page (the /u/me/hidden page, the only place it shows up)\n. Does this need to be in CSS? Ideally the lock icon would be directly in the spritesheet.\nIf there's nothing I'm missing, this spritesheet should work:\n\n. Nit: you can remove async and return the promise directly.\nAlso, I think all callsites now spread the array, so you could replace the ...perms rest param with a single param taking an array.\n. And if you do that you'll be able to reorder these params; siteName could even be optional, perhaps\n. This can go directly in with the table styles (line 521) with .res-nightmode & { /* css */ }\n. This probably isn't necessary because we aren't sending any json\n. The origin header can't be changed:\n\n. ~~s/was/were/~~\n. Can be osu.ppy.sh since we only care about that subdomain\n. Can be simplified by looking only at the pathname:\njs\ndetect: ({ pathname }) => (/^\\/ss\\/(\\d+)/i).exec(pathname),\n. async can be removed here because nothing is awaited\n. Maybe use $('<div>', { html: data.parse.text['*'] }); so it degrades a bit more gracefully if data.parse.text['*'] is null or undefined or invalid html\n. This is alt; the third bool is for shift\n. The option desc needs an update too I believe\n. This class isn't guaranteed to be present since the stylesheet module can be turned off; we should maybe ~~put it in /r/Dashboard CSS~~\n. Actually, instead let's add module.bodyClass = true; in dashboard (if it's not already) and use .res-dashboard here\n. Note: confirmed that this works in Firefox, which is very restrictive about what you can use in e.detail\n. Maybe /^#res:ner-page=\\d+/\n. I think I'd prefer moving this entire function to keyboardNav (but still separated from move), so you can replace this with if (module.options.scrollOnExpando.value) options.scrollStyle = 'top'; instead of setting didAutoExpand here and reading it in a getter in another file, which is a bit too hacky IMO.\n. Acknowledging that this is kinda hacky, but I don't think it'll cause ~~any~~ too many problems since almost everything we interact with is within a .thing already\n. Looks like comments in your inbox previously would return false for both isComment and isLink, so this shouldn't break anything.\nIn the future maybe we should use the attr data-type = link|comment|message\n. Bonus points: don't draw the \"last visited\" column when this is disabled\n. This might be interpreted as adding to history, maybe \"Store the last visited time...\"\n. Let's make this process.env.BUILD_TARGET !== 'firefox' or more conservatively process.env.BUILD_TARGET === 'chrome' since Chrome users will have specifically enabled the extension in incognito mode and seen the persistent warning:\n\n. I guess I don't feel that strongly about this\n. The thing is: most users don't care, they just expect it to work when they enable it. But like I said, I don't really care either, and these aren't really landmark features\n. That's fine too, yeah: less dynamic and the dataflow is one way\n. \ud83d\ude1c \n\ns/a use/any future use/ to clarify\n. Nit: use import * as Init to distinguish it from utils and other free functions (which can be used freely, whereas I want to discourage the use of Init in modules except where necessary)\n. @andytuba this is accurate?\n. One thing to do when updating eslint-* dependencies is to check if they have any new rules and add them if they make sense.\nIn this case, eslint-plugin-import has added no-absolute-path, which looks like something we'd want to enforce.\nSo you can add \"import/no-absolute-path\": 2, to .eslintrc.json along with the other import/ rules\n. I suspect this is unnecessary, this href is only further parsed, it doesn't appear to be used for an image src\n. Same here, if this is used it goes through another .replace after this point, so this should be unnecessary\n. Why change this structure? If you must, replace the string with regex but the rest is just churn\n. This is used for a link, not an image src, so this is unnecessary (we try to preserve the original protocol for the link since imgur supports both http and https--use HTTPS Everywhere if you want this)\n. Same as above, this is just a link so it doesn't cause cross-domain warnings\n. Nit: inline this with the single usage of info.mp4 in the object below\n. Nit: in general we prefer undefined to null for omitted params so that default param values work (if there were any)\n. Note: the reason imgur stopped working is because they (seemingly) stopped sending a download url; this is always undefined.\n. There's some CSS in _showImages.scss to style .video-advanced-download that can be removed since this is removed\n. Actually, there is one thing: I believe we need to replace watch|embed with watch|embed|v and remove the v\\/ from (?:.*?v=|v\\/|\\/), so that links like https://youtube.com/v/iwGFalTRHDA will work.\n. We could do something like: (untested)\njs\n({ hostname, pathname, search }) => (\n    hostname.endsWith('youtu.be') ?\n        (/^\\/([\\w-]+)/).exec(pathname) :\n        (/[?&]v=([\\w-]+)/i).exec(search) || (/^\\/(?:watch|embed|v)\\/([\\w-]+)/i).exec(pathname)\n)\n. I think I'd change it a bit more, but that looks good:\njs\ndetect: ({ pathname, hostname, search }) => {\n    const params = new URLSearchParams(search);\n    const split = pathname.substring(1).split('/');\n    // short url\n    if (hostname.endsWith('youtu.be')) return split[0];\n    // long url\n    return params.has('v') ?\n        params.get('v') : // ?v=\n        ['watch', 'embed', 'v'].includes(split[0]) && split[1]; // watch/embed/v\n},\nAnd you'd have to change the handleLink param from [, hash] to hash\nI removed videoIdRe because unless the URL is really messed up, it'll just match everything. But I don't feel strongly about this, you could put it back if you want.\n. I was suggesting something slightly different (using the advanced video controls); I think we can leave this as-is until we have a need for download URLs other than the first source (YAGNI).\ndownload is not in the imgur data model so I don't think it's coming back.\n. (?:\\/) can now be \\/\n. Nit: import and use formatDate(expDate) instead of expDate.toDateString() here\n. Yep, looks like that needs to be changed. You could open a new PR for that if you want, or I can take care of it.\n. Non-capturing group can be removed\n. This is trivial but we should probably have tests for it anyways\n. I feel like it should be possible to do this up front in attachEditorToUsertext (i.e. never add the handler) instead of covering up the issue later. It will probably be necessary to change this line to return cachedEditBar.clone(); so the first call to makeEditBar doesn't return the cached one.\nUnless this happens because reddit clones reply textareas from a textarea that we've already modified. Then things get more interesting...\n. These also belong under import/, I guess they just don't throw because they're disabled\n. Ditto\n. Ditto\n. Extra whitespace\n. Same here...\n. ...and here.\n. Please keep the swirl.xyz domain in this array so old links still work (put it after vidgif.com).\n(I am assuming that it was just the domain that changed and all content was kept intact, if that's not the case then leave this as-is)\n. We shouldn't change the moduleID since it's used as the settings key (name is what's displayed anyways).\nMaybe also add // vidgif.com was originally swirl.xyz so we remember not to change it in the future.\n. updateCounter listens for input because it needs to update the count on every input. That's not the case here. Right now this reattaches the listeners on every single keypress.\nReddit clones the textarea when you click \"reply\"--leaving the listeners attached through attachEditorToUsertext behind--so we should move the focus{in,out} listeners up here as delegated listeners (and get rid of this one).\n. This is correct, but I think we should leave this out and ignore all comment counts where subscriptionDate is defined, regardless of subscriptionLength. That way the logic for removing thread subscriptions and removing comment counts are kept separate.\n. Can you move this to another PR? I want the jpm update for tonight (and other stuff doesn't matter either way) but I think we should leave this to 5.1.0 just in case there are any bugs (shouldn't be; there are extensive tests but I'm playing it extra safe).\n. I think _.throttle(tryPlay, 150, { leading: false }) in a scroll listener would be preferred over setInterval so it's not checking unnecessarily, unless this was chosen for a reason (I haven't read through everything yet)\n. I think we should play videos that have any percentage on the screen -- doing so would cost a marginal amount of performance (at most two videos, one at the top and bottom, assuming no overlap) but would marginally improve responsiveness, and I think that wins here.\n. It looks like almostThere was added manually by honestbleeps, since it doesn't show up anywhere in the source. Alas, it predates our Git history so who knows.\nWe could just bring back the old local konami.js before it was replaced with the npm module.\n. Should probably move this to utils/async.js (maybe not export it for now, until we need something other than idleThrottle in module code)\n. IIUC this ensures that the callback will only be called once if runIdle is called multiple times before an idle period.\nIf so, this abstraction can be exported from async.js as idleThrottle (just like frameDebounce, which should really be \"throttle\" rather than \"debounce\").\ni.e. we would end up with\njs\nconst runIdle = idleThrottle(runListeners);\n. At this point we might as well just drop konami.js and move the rest of the implementation (that we need) into this module.\nWe don't even use half of it anyways (mobile and IE support).\n. If we do that, we should copy the attribution parts of this comment into easterEgg.js (the copyright notice is required by the MIT license, the rest to be nice).\n. To make sure this only takes effect when subreddit style is disabled, you'll need to change two things:\n1. Add module.bodyClass = true; here - this will add the res-styleTweaks class to <body> when the styleTweaks module is enabled\n2. Move this CSS to the bottom of _styleTweaks.css and wrap it in this condition:\ncss\nbody.res-styleTweaks:not(.res-srstyle-enabled) {\n    ...css here...\n}\n. I think this function should take tabModuleId instead of a module; then this logic isn't hidden and the caller can decide whether they want a gear link by (not) passing a moduleId.\nAlso, technically we could have a module with no options that could still be enabled/disabled, so we'd still want to show the gear.\n. Nit: .*$ at the end of the regex is redundant; it can be removed. But to make the regex a bit more precise, I think we should replace it with (?:\\/|$)\nIs the trailing | in (?:\\/gifs|\\/media|) intended? If so, do you have an example link? If not, we can make that a bit cleaner: \\/(?:gifs|media)\nAnd while we're at it might as well replace ([^/.]*) with ([^/.]+) since an empty id isn't very useful (I'm not sure why it was this way originally).\n. Also, we can remove (\\/html5)?, see below (my other suggestions still apply as-is)\n. https please, and we can make the query string a bit cleaner:\njs\nurl: `https://api.giphy.com/v1/gifs/${id}`,\ndata: { api_key: 'dc6zaTOxFJmzC' },\n. This condition can be removed completely (and always take the first branch).\nIt seems that the giphy API always returns an mp4, and if it doesn't we'll just fall back to the same gif.\n. Nit: we can also remove the null-check from this, i.e. just konami.input += event.keyCode;\n. Nit: we can also remove this return false;, it doesn't do anything anymore\n. This can probably be done with less state and mutation:\njs\nage = _.dropWhile(this.qualifiers, ([qualifier]) => qualifier !== ageQualifier)\n    .reduce((a, [, multiplier]) => a * multiplier, age);\n. I think this would be better expressed with for..of:\njs\nfor (const [qualifier, multiplier] of this.qualifiers.slice().reverse()) {\n    // ...\n}\n. Either remove async (which is unnecessary currently) or await isURLVisited (don't care which)\n. Ditto with async\n. BodyClasses.add('res-filteReddit-filterline-pad-until-ready');\n. Should be possible to make this const and initialize it immediately\n. and then this too\n. Async storage ops in beforeLoad() aren't to be taken lightly since they block go() for all other modules.\nCan we move the active status out of filterlineState and into a module option, so an extra storage fetch isn't necessary? (like nightmodeOn)\nThen we can do the fetch just before createFilterline (maybe pass it down to where it's used so we don't need the global).\n. Might as well log the value of criterion too\n. I think it would make sense to move these classes, the big object definitions at the top (browseContexts, etc.) to their own files in lib/modules/filteReddit and import them here; should make things easier to manage\n. everyhere -> everywhere\n. Either:\nConvert the jQuery object to an array and call .find on that:\njs\nreturn loaders.toArray().find(...);\nUse document.querySelectorAll instead of jQuery, convert that to an array, and call .find on that:\njs\nconst loaders = ... document.querySelectorAll('span.morecomments a') ...\nreturn Array.from(loaders).find(...);\nUse document.querySelectorAll instead of jQuery, and use its iterator (actually jQuery is iterable too):\njs\nconst loaders = ... document.querySelectorAll('span.morecomments a') ...\nfor (const el of loaders) {\n    if (elementInViewport(el)) return el;\n}\n. You could have stuff like:\njs\n_getDomainFromAttrs() {\n    return this.thing.getAttribute('data-domain');\n}\nbut I don't think it's a huge deal.\n. Hah, I didn't even know this was possible. I never added it to the module options type in Flow so I'm pretty sure this is the only usage in the codebase :stuck_out_tongue:\n. :question: you added it -- so I guess it is used for the dynamically generated options for media hosts\n. Needs to be replaced\n. :heart: :heart: :heart: types\n. this is also...suboptimal\n. https://lodash.com/docs/4.16.6#clamp may make this easier to read, or you can keep using this if you think it's more intuitive\n. Ditto for Math.max\n. Ditto for Math.max\n. const MIN_PENALTY = 1;\n. Ditto\n. s/default/value/\n. We should really consider switching the table structure to an object so it's already in this shape (iteration order of string keys is defined to be insertion order), or adding a new table option type (I don't really trust migrators with users' filters) instead of doing crazy stuff like this to write though it.\n. s/!options.value/false/ ? We are already sure that the option type is boolean\n. I assume you'll eventually change sectionMenu to the name of an option in this module\n. Nit: don't move these lines if you aren't changing them\n. This forces the height to always be calc(100vh - 80px). It should use max-height.\n. This forces scrollbars to always display. It should be auto, or:\ncss\noverflow-x: hidden;\noverflow-y: auto;\n. We can drop the gettingMultis flag\n. This can be left in getSubreddits: multis don't need to be sorted since we only care about their number; they don't need to be deduped since we're only making one API call\n. This ajax() call can be inlined into getMultiCounts; we can drop everything else in this function\n. We can drop this line\n. This will become async as a result, which will be marginally annoying on line 210 but shouldn't be a huge deal (just make manageSubreddits async)\n. I think all text option default values should be strings (until we have a number type) to emphasize that you should use parseInt/parseFloat since it could be saved as a string\n. In a larger module I'd say no because it might be easy to miss, but this module is so small that it's not a big deal\n. Moving these into a single object will be taken care of by https://github.com/erikdesjardins/Reddit-Enhancement-Suite/commit/348913b062a16ceeff043b62cae5c5e8c751875a#diff-9a6bec128b40a3ba6580d95a3a4f54b0 (which also includes other changes to those options in some places) so let's leave this out for now to avoid causing conflicts. It will also conflict with i18n'ing the option descriptions\n. Use an exact version like all the other dependencies\n. Exact version\n. Use an exact version; most of these aren't even updated\n. The default values can be inline, e.g.\njs\nconst {\n    width = '640',\n    height = '360',\n} = await ajax({\n. I keep forgetting that I can just change this \ud83d\ude05 \n. We can't do this because the category needs to be the same for each module that's in the same category. In general, if there are multiple strings that are the same, they should be translated with the same key, so that stuff behaves the same regardless of whether or not it's translated.\nIt should instead be aboutResCategory, myAccountCategory, appearanceCategory, etc.\nYou'll also need to change categories in metadata.js to the untranslated names so that category sorting will work correctly\n. Don't translate this description for now, since it has substitutions and inline html.\nI'll comment the same for everything else that has html, since that's an easy exploit for a malicious translator.\nWe should eventually convert all module descriptions to markdown to remedy this.\n. Don't translate this for now; html\n. html\n. html\n. html\n. html\n. html\n. html\n. html\n. html\n. More html\n. Remove the trim(), it was previously there to get rid of the newline at the beginning and end but those are gone now that it's translated\n. Nit: extra newline\n. s/Snoodown/Snudown/ (see https://github.com/reddit/snudown)\n. Nit: extra newline\n. Also s/commandDepth/commentDepth/\n. s/commandDepth/commentDepth/\n. Instead of <br><br> use \\n\n. Array<any> should be able to be removed after rebasing onto master\n. eh I'll do it manually\n. This disable comment should not be necessary. This function should handle !Modules.isEnabled(module). Nit: I don't really like calling this featureID when there's an implicit requirement that it's always an optionKey (unless that's not the case everywhere?), I'd just call it optionKey. href=\"#\" and preventDefault() in the handler below. Also, you could give it a return type export function penalizedDelay(moduleID: string, featureID: string, delay: DelayOption): number { to make it a little more explicit. We should probably log all of these changes somewhere so they can be reverted easily if something goes wrong (yes, they can go find the options themselves and turn them back on, but I suspect people won't be happy to hear that).\nI'm thinking:\nIn this function:\nStorage.set('RESmodules.featurePenaltyBox.log', [...(await Storage.get('RESmodules.featurePenaltyBox.log', [])), { moduleID, optionKey, oldValue, newValue }]\nThen have a button option in the module that does roughly:\n```js\nfor (const { moduleID, optionKey, oldValue, newValue } of (await Storage.get('RESmodules.featurePenaltyBox.log', [])).reverse()) {\n    const mod = Modules.getUnchecked(moduleID);\n    if (!mod) continue;\nconst option = mod.options[optionKey];\nif (!option) continue;\n\nif (_.isEqual(option.value, newValue)) {\n    Options.set(mod, optionKey, oldValue);\n}\n\n}\n```. I shouldn't have suggested this, it doesn't work well when we need multiple keys.\nAs long as we start to load it in loadDynamicOptions it's fast enough. @larsjohnsen is this correct? (so it doesn't move the captions as well). If this selector doesn't match anything, you should use %res-filterline-icon. Can this be worded better?. I'll fix up the renderer in this PR and merge it, you don't need to do anything ATM. I'll leave this as is, it'll be easy to find these later with a simple Object.values(modules).filter(m => m.description.includes(' ')); same with any module options. Hmm we can't change this (name prop of 'table' option fields) because it's used for indexing the option values (which is unfortunate), I'll take care of this later. Actually, not yet, we can still do this.. For compatibility with i18n, we should have a key or index (or something obviously not user-readable) field used by mapScalarToObject\nSee https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3739/files#r92008640. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3587#discussion_r92012987. This is all run synchronously so I think I prefer it this way--if callers who want to provide different text are forced to call i18n there will be less implicit behaviour--and unlike module descriptions, doing so won't result in any extra i18n calls.. They're used here https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/80e5b3403306cc179dc4d33c3dcba4a558943471/lib/modules/nightMode.js#L305. In general, doing this may weaken the type (and rarely will strengthen it), since Flow can often infer a subtype (even if there isn't a sub class). I also try to avoid adding any unnecessary types to keep the barrier to contributing low, i.e. you shouldn't have to encounter any type annotations if you're making a simple change. And there are some situations where it is impossible or infeasible to annotate the correct type, but Flow can infer it just fine (especially with generics).\nThis specific annotation is actually incorrect, but for a different reason: Konami does not return an instance of itself, but of a different object (so it really shouldn't be called with new, actually).\nWhen there are no annotations, Flow infers the correct type (the plain object literal returned by the constructor).. This is okay because it's the return type of an exported function, although without these changes it's inferred to be void | boolean, which was also fine.. We can throw a subclass of Error:\n```js\nclass AjaxError extends Error {\n    status: number;\nconstructor(message: string, status: number) {\n    super(message);\n    this.status = status;\n}\n\n}\n```\nEdit: maybe also include responseText and responseURL. This can use userLink.pathname, since HTMLAnchorElement implements some of the URL interface. FYI (we probably should have mentioned this): we aren't replacing any descriptions that contain HTML yet, they'll be done at the end when they're converted to markdown.\nSimple stuff like <br> can be replaced with \\n though.\n(I've taken care of it for this PR). Does play have any use without pause?. It does work but we want to avoid it because eventually we will switch module/option descriptions to markdown (I should write that down somewhere).\nIn the case of something like a <table> you can just leave it untranslated for now and we'll replace all of those at the end; in this case I changed it to `1px dashed gray` because it looks fine both raw: `1px dashed gray` and in markdown: 1px dashed gray.. Flow wants this disambiguated with event: Event (as opposed to the MouseEvent specialization for click). The cache dir is explicit because Travis caches the wrong directory (~/.yarn-cache or something). If this is intended to be dependent on toggleCommentsOnClickLeftEdge, it should be moved inside the if (module.options.toggleCommentsOnClickLeftEdge.value) { block in module.go, so it doesn't take effect when the former is disabled.. fca902719e007c00bf56cdb98a96257a36fe4d06. lol cargo cult programming; thanks. erik [6:27 PM] I'll explicitly make it `en.reddit.com` so it's not i18n'd if that sounds good, since there's not much else to look for (classless <li>s, but they could be empty if it bugs out)\nandytuba [6:29 PM] +1. lol this has been around forever:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blame/3c442d75707318037f0f606341b29d7c6e56e3a1/lib/modules/showImages.js#L249\nand I cleaned it up twice and never noticed it:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/6a9ce6a3379df0d92ef12ec8e4b60d463c9809bf#diff-81e82c385dc9912064f4bc5e91b47e58L249\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/9e80b5731ad37a527dc5179fbc1944a334426bda#diff-81e82c385dc9912064f4bc5e91b47e58L356. This is the main fix, the rest is just reordering so related stuff is together. Would if (currently selected post is on screen) return; also work? I think I'd prefer that so that there's still some degree of functionality for popular\nEdit: no it wouldn't, since that's not the problem. The problem is which post is chosen to be reselected, not whether or not a post is reselected.. dependsOn?: string | () => boolean,. Maybe switch the transparent and colored sections here so it doesn't overlap with NSFW stripes?. Flow's intersections are order-dependent (so that it's predictable which case is chosen), so in general it's fine to put a more-specific case first. In this case I'd expect it to work either way however; maybe it's because the types are missing from the returned function? i.e. it's () => void instead of (a: A, b: B, c: C) => void.\nDon't worry about it though, I'll be merging this next (probably) so I'll take care of it if that's the case.. FYI this needs to be in afterLoad (or at least go) since it's based on subreddit stylesheets, which aren't ready (perhaps not even parsed, if we're fast) in beforeLoad and which could potentially be removed by styleTweaks at some point. I'll change it though, dw about it. Do we need an option for this? I can't see it conflicting with anything\nEdit: also I don't think we have options for any other CLI commands. (i.e. remove the ^ that npm adds automatically). Also super-nitpick: move this after manifoldjs-package so it's between the build-related scripts and lint-related scripts (since it's a bit of both). Please move this and the other require statements below to the very top of the file. Can remove this // use comment (and two below) now that they're implemented. const enJsonLocation = path.join(__dirname, '../locales/locales/en.json') is the usual way to do this\n(__dirname is the path of the current file regardless of the CWD it's executed from). All of these var can be const (and move this one to the top as mentioned). Nit: strict camelcase like enJson, even for initialisms. This loop can be replaced with Object.assign(enJsonObj, newI18nKeys). You could inline a few of these variables that are only used once, but I don't particularly care here. !subreddit.includes('+'). { currentTarget }: KeyboardEvent will placate flow; you can also do the renaming in destructuring if you want: { currentTarget: shortcut }: KeyboardEvent. Ditto includes. Don't think we need this, options for media hosts are automatically generated. There needs to be two branches here, for static images and gifs (which will give us the .mp4). Something like:\njs\nconst preview = postMetadata.preview.images[0];\nif (preview.variants.mp4) {\n    return {\n        type: 'VIDEO',\n        controls: false,\n        loop: true,\n        muted: true,\n        fallback: preview.variants.gif && preview.variants.gif.source.url,\n        sources: [{\n            source: preview.variants.mp4.source.url,\n            type: 'video/mp4',\n        }],\n    };\n} else {\n    return {\n        type: 'IMAGE',\n        src: preview.source.url,\n    };\n}. Stray console.log. Could use debouncedFunction.cancel() for this to avoid tracking the timeout id. We can possibly remove this rule now, since reddit should have the same thing. updateSaveButton takes no arguments, it just checks whether any options are staged. @BenMcGarry we only want to release betas to the internal beta flight?. Nit: don't translate logging (not intended for user consumption). Nit: I would make this i18n('accountSwitcherCliSwitchToUsernamePrompt', found[0]) and change the string to \"Switch to username: $1\"; the code is cleaner and it gives translators a bit more context (though in this case it's not a huge difference). In JS only `-quoted strings can have interpolation (lint catches this). Ditto. No need to interpolate the whole string. Nit: interpolation here too; in this case translators will have no idea what \"Until \" means. \"Until $1 ($2)\" is a bit better.\nYou can also add descriptions, which I would do here because it's fairly ambiguous (though they're certainly not required for most translations). Ditto, no need to interpolate the whole string. Ditto. Ditto. Ditto. FYI interpolation is fine here because prepending a space is awkward for translating (your code is correct). We want to avoid HTML in translations because it's awkward to translate (and because it's unsafe). In this case, since these are rare error messages, we can go without the extra formatting and just use \\n.\nAlso, JSON strings can't be multiline, so this (and below) is invalid syntax.. Ditto. JSON doesn't support trailing commas. Edge doesn't support passive event listeners, but it treats { passive: true } as true[1], which does something we don't want (makes the listener capturing)\n[1]: this might sound weird but it's fairly logical behaviour. Note to self: todo. The URL constructor is likely what we need here, e.g. new URL(old, `https://${language}.wikipedia.org/wiki/${article}`).href; it can resolve any url relative to a base url. This could imply greater precision than there actually is, should I change it to \u00b1 >1234 ... or similar? (though having \u00b1 and > nearby doesn't look so nice)\nAlternatively we could pull in numeral.js (small dependency) and format it like \u00b1 1k, 20k, 300k, 4M, etc.. tabs. Can be /^\\/(\\w+)$/ since the pathname includes the leading slash ('/stream_name'). This can be simplified:\njs\ndetect: ({ pathname, search }) => pathname === '/member_illust.php' && getUrlParams(search).illust_id,\nThen add import { getUrlParams } from '../../utils'; at the top and change the below to handleLink(href, id) {. This needs to be done on line 25; this will only affect videos with autoplay (unless yt only shows related videos when you enable autoplay? but I don't think that's the case). andytuba [7:17] i\u2019m only a little worried about changing up the order of pagetype checks\nYeah as long as no page types are added or removed it shouldn't really change anything (but we do rely heavily on the fallback to linklist). Technically this doesn't need to be on the background, but it's tiny, and this is consistent with edge.entry.js. Should be able to use native .padEnd http://kangax.github.io/compat-table/es2016plus/#test-String_padding. Ditto. I could imagine someone changing currentSubreddit() to return lowercase (or maybe there are situations where the URL isn't canonicalized); might as well make this isCurrentSubreddit('Enhancement') || isCurrentSubreddit('RESissues'), or make isCurrentSubreddit variadic like isPageType. This PR looks good so it can be probably be merged for the first 5.7.0 beta, so the migrator can probably go right here. Ah, we need e3c946b6c8441ad56d6e553fd720999ea7ef6cbe. I don't really like this, but the existing implementation already has a ton of global state so we can't really do better. Yeah nothing on you, this whole module kinda needs to be refactored. NTS: grid layout may not work quite right in Edge, and/or may need more Autoprefixer configuration to get it to add -ms- prefixes, I'll have to check. \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f NTS: Check if this causes new permissions warnings! \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f. Can we change it to use e.target? Looks like it should be the same as this in both listeners (if it isn't, we find the textarea with .parents(...).find(...) so it should still work).. This ought to do it. Yes, definitely. \ud83d\ude09 . for (const sub of sortedSubs) {. TODO: production. Yep, I definitely broke this. \ud83d\ude05 . TODO: production. if (tagElement) tagElement.remove();. It's part of the DOM 4 spec, which also has a few other jQuery-like things (e.g. closest()).\nWe ship a separate version of jQuery because we can't use reddit's (due to sandboxing), so technically it would still work on profile pages. I plan to get rid of it eventually, though, so avoiding it is a good idea. (the main issue is we use a few plugins which would have to be replaced). You can also await Storage.delete('RESmodules.newCommentCount.counts'); here, since they're temporary anyways, doesn't really matter if the migration goes wrong. FWIW you can use in here if you want, I don't really care about enforcing the use of Reflect (mainly enforce Reflect.apply just so it stands out more than fn.call). If you prefer it this way though then feel free to keep it.. This is safe because if there are multiple expando-buttons, the first one will be the parent (self post). This is safe because the entry doesn't include child comments, etc., so there can only be one .expando. I don't think lastCheck is read anymore, so if that's the case might as well remove it from here and the type on line 89. Done, thanks. Removing this prevents you from hovering on something else while it's fading out:\n\n(it's more noticeable when moving between multireddits). This is equal to Object.keys(nb), but in that case.... ...replace the loop with for (const [key, e] of Object.entries(nativeButtons())) {. const floatingElement = e.cloneNode(true);. This is kinda sketchy, we could eliminate the need for it by replacing\njs\nconst orangeredElements = () => ({\n    ...nativeButtons(),\n    ...floatingButtons()\n});\nwith\njs\nconst orangeredElements = () => ({\n    native: nativeButtons(),\n    floating: floatingButtons()\n});\nand making floatingElements and nativeElements both return { messageButton, messageCount, notificationButton, notificationCount ... }.\nAlternatively remove orangeredElements and do the same.\n...but that would require changing enough other stuff that whatever, we can leave it as-is.. Inline this?. Nit: ... ? 1 : 0. Ditto. s/fb/floatingElements/ or something. Inline these?. This doesn't seem right; the third element here is modmailHasMail.... ...but here is messageTitle. (or replace with object). This should probably be an object? (see below). Event objects aren't shared, so this probably won't do what you want? (Flow is MVP \ud83d\ude09)\nThis is probably what you want:\nconst event = new CustomEvent('orangered', { detail: { sumCount, messageCount, notificationCount } }); \n(Chrome clones the object and Firefox drops it--FF only allows detail to be a primitive type). Why not an object?. The callers of this function still use _setUnreadCount(count), they should probably be renamed (can't comment on those lines). Delete these images if we're not using them anymore. lib/css/modules/_orangered.scss\n  5:3  error  No trailing whitespace allowed  no-trailing-whitespace. lib/css/modules/_floater.scss\n  18:25  error  No trailing whitespace allowed          no-trailing-whitespace\n  21:16  error  Don't include leading zeros on numbers  leading-zero\nHmm the leading-zero rule is kinda silly, you could turn it off (.sass-lint.yml).. Super nit: all other (well, except orangeredElements) top-level functions are function declarations when they can be, why not this one too?. The spec says insertion order; I'm confident that the browser versions we support comply with that.\nObject.keys() > EnumerableOwnProperties > [[OwnPropertyKeys]] > OrdinaryOwnPropertyKeys: \"...in ascending chronological order of property creation...\". Hmm I don't really like this as-is because it'll make RES silently run slowly.\nIMO we might as well fix it for the case we know about, even if it's a bit hacky.\n(When the settings console is moved to a separate page we can probably split the i18n files, inline the non-option-related translations and get rid of this entirely)\nI'm thinking: find the largest localStorage key, if it's a known key (ads.adserverDownvotePixel, ads.adserverUpvotePixel, ads.recent) delete it\n(or maybe just delete those keys unconditionally in this catch block). Agree with the awkwardness, but also agree that we should be able to remove (or possibly repurpose) this module entirely fairly soon...for a certain definition of soon...so seems fine for now.. If you wrote this before I changed the rule to only forbid \\.call and \\.apply, you can change it back to delete. If you prefer this that's fine too.. Remove the i18n string for this. Ditto. Nit: remove , returning. module.options.vwNumber.value ? `[${this.votes > 0 ? '+' : ''}${this.votes}]` : '[vw]'. The native body.querySelector('.res-usertag-ignore label').after( might work. Should this be done at idle? Or is it too cheap to matter? I vaguely remember someone saying that replaceState/pushState were slow on underpowered machines, but I could be wrong. (not sure why it would expensive, though). Theoretically; see the ff-perms branch in my fork. Though I always seem to get Error: May only request permissions from a user input handler. I assume it doesn't handle asynchronicity (which is going to be annoying), but calling chrome.runtime.sendMessage directly from an event listener doesn't fix it either.... Note: inherit doesn't work here because we set the font-size of the parent to 0 above. I think this function would make more sense as a standalone export function isSimilar(a: string b: string) (or areSimilar?) in lib/utils/string.js. That file is exported from /utils as a namespace, so you can call string.isSimilar(thing.getTitle(), mediaOptions.title). Thing is already a pretty big class so I want to keep it focused on things (heh) that are strictly related to things.. Nit: call this useGifOverGifv; prefer RES albums is a legacy name that slipped through the cracks. Nit: move this up next to the other options (resolutionSuffix, etc.). It looks like res-srstyle-disabled is already used for this, so you can remove this line and change the other line to add res-srstyle-disabled. You might be able to convince Flow if you resolve the promise with addedNode and assign it outside\njs\nif (!sitetable) {\n        sitetable = await new Promise(resolve => {. ~~Maybe note that it only works once, i.e. you can't ctrl-z all the way back to the OP. Not sure the best way to phrase that, though.~~ Eh it's technically correct, it's not like people won't understand what's happening when they try it.. This function can't return null or it'll cause errors elsewhere, see the Flow output in CI. We can probably just throw err; in this case.. FTR: I put this here because it's not a standard OAuth query param, and it seems like only google supports it (AFAICT). I don't think this will work properly when you have new messages; it won't hide the message-count icon.\nI think the method described in #3128 will work better; that is use BodyClasses.toggle(userbarHidden, 'res-hide-userbar'); here, and to the bottom of _userbarHider.scss add\nscss\n.res-hide-userbar {\n    #header-bottom-right > :not(#userbarToggle)\n}\n(or something along those lines). requestAnimationFrame would probably be better here, since it'll be called immediately before the first paint after this is injected.\nStill a bit sketchy, though I can't really think of a better option. (autofocus seems to only work once). This text can be localized too; i18n('subredditManagerFilterSubreddits') or something. subredditName.includes(search.value.toLowerCase()). Nit: maybe unset this instead: row.style.display = '';, that way it's more \"reverting\" what we do in the else block (not that it's likely to ever matter, but \u00af\\_(\u30c4)_/\u00af). Can be removed; undefined, null, and false all mean no match. Add muted: true,. .slice(-1) instead of substring; or something like const isRoadmap = zoom.endsWith('z'); (if I'm interpreting that correctly). Maybe use .startsWith() for one/both of these?. Destructuring this const [long, lat, zoom] = (or whatever they should be called) might be slightly clearer. part.startsWith('@'). In general Flow doesn't do refinement \"backwards\", i.e. inference proceeds as:\n- userTaggerEnabled inferred as boolean by its declaration\n- userTag inferred as false | <return value of Tag.get> by its declaration\n- userTaggerEnabled refined to true within the if-statement, but this doesn't propagate \"backwards\" to the existing declaration of userTag\nYou can either replace if (userTaggerEnabled) with if (userTag) (which will refine away false, leaving just the tag object), or change this to:\njs\nif (Modules.isRunning(UserTagger)) {\n    const userTag = await UserTagger.Tag.get(username);\n    // ...\n    return userTag;\n}\nreturn false;\nwhich IMO is simpler for humans (not just Flow) to understand.. Yes; ideally we would never use index, but:\nIn Chrome, if you don't specify index, all tabs go to the end, instead of being grouped next to the openerTabId tab (like ctrl/middle-clicking would do).\nIn Firefox, if you don't specify index, new tabs are grouped next to the openerTabId tab, or at the end if you've disabled insertRelatedAfterCurrent, which is #4230 (either way, the same as ctrl/middle-clicking).. babel-eslint 8 depends on Babel 7, so we shouldn't update it yet. This is going to require changes for the build to pass (#4490). Is this reachable? At a glance it doesn't appear that anything in crosspostMetadataTemplate can throw. Can dataset be used instead?. The original author is /u/andytuba, so this should be /user/andytuba/, I believe.\nYou may also need to use attributeContains, since I think it does the element.href URL expansion (i.e. it's not just element.getAttribute('href') like the name suggests...). How though? string.html` \"${null}\" \"${undefined}\" \"${false}\" ` === ` \"\" \"\" \"\" `, and all the property accesses are only one level deep, so it seems like it would just render nothing instead of throwing?. This is no longer used by reddit.... ...and APNG is unnecessary now that Chrome has native support.. This kind of profiling was misleading, since it was more dependent on how the browser decided to schedule extensions than actually how fast or how soon they ran.. This breaks the comment nav box, not immediately sure the best way to fix it. We can probably remove this entirely, I don't think ads have had the id ad-frame for a long time. Let's move this before otp, so that the password is requested before two-factor. Debugging?. @larsjohnsen is this a good place to add this listener? And do you think it might interfere with anything else that automatically opens/closes expandos?. Might as well make these all return so we can remove all the breaks?. Ah, sorry, I had pushed to this branch and fixed it earlier. I should have merged it right away.\nI'd have to investigate to see why it doesn't work now, and I don't have much time right now unfortunately. FWIW it is intended that you can create tags with no text, in case you just want to use colors to denote different users.. Use isAppType('d2x') (desktop2x, the codename of the redesign...maybe this could be more intuitive) or isAppType('r2') instead of comparing the classname. There might be a better way to do this via the jsapi, @andytuba?. Hmm, this listener never gets removed, so this might prevent other \"press escape to close\" things from working?. Inline sourcemaps are required for Ava to give correct line numbers (perhaps not anymore?), but don't work in Webpack. In addition to the settings incompatibility, Webpack handles sourcemaps separately from the source file (e.g.).. This should only be used for ESLint/Ava which don't understand modules (maybe they do now?), and not Webpack, since it prevents module concatenation, leading to a size (1.84 -> 2.14 MB) and startup time regression.. We don't need preset-env, since we only use experimental syntax and already individually include the plugins. I prefer doing it this way so that we have to explicitly opt in to new syntax.\nI feel like @preset/env is more targeted towards webapps that support much older browsers and need to compile a lot more syntax (-> a lot of plugins to add manually), while we just have a few plugins.. I don't like using two separate ways of setting \"production\" (NODE_ENV and --mode). Originally I avoided this plugin because it didn't work as well as transform-define (leaving 'production' === 'production' checks in the code along with dead code). Even if it works now, using two separate ways to replace process.env properties doesn't seem simpler than the previous solution.. Does !url-loader!../lib/fonts/batch-icons-webfont.woff work here? (to avoid special-casing the build script). This creates a file in the output dir so we only need it in foreground.entry.js. ",
    "mirh": "Duplicate of #1356\nAnd please, for christ's sake. \n. ",
    "ddevault": "Dropping by to express support for this.\nLots of posts in all the relevant subreddits are on this site.\n. It's usually linked from comments. It also mirrors content posted to a number of subreddits.\n. We changed the static image page to HTML because we need to eventually include a report button on there. I don't like the idea of ending a URL with .jpg or something if it's not served as image/jpeg.\nIncluding the filetype in the URL just gets messy. /hash is a great URL scheme, but /type/hash or something introduces ugliness, like how to handle the wrong type.\nIf you have additional suggestions, I'm open to hearing them. Direct links still work the same way (/hash.jpg is a direct link to the image/jpeg of hash)\n. Today. As soon as the backend guy gets back from whatever thing he's doing, I'll have him make it the highest priority. If you need it done super fast, I can take a crack at it myself.\n. Yep, it's a typo.\n. Works fine for me. Maybe your DNS is out of date? We switched nameservers recently. Try google DNS: 8.8.8.8 and 8.8.4.4\n. Works fine for me. Maybe your DNS is out of date? We switched nameservers recently. Try google DNS: 8.8.8.8 and 8.8.4.4\n. Sounds like a pretty good idea. We're hashing out the details on our end. Would you prefer:\n[\n  {\n    \"hash\": \"...\",\n    ...\n  },\n  {\n    \"hash\": \"...\",\n    ...\n  }\n]\nor would you like:\n{\n  \"hash\": {\n    ...\n  },\n  \"hash\": {\n    ...\n  }\n}\n. Sounds like a pretty good idea. We're hashing out the details on our end. Would you prefer:\n[\n  {\n    \"hash\": \"...\",\n    ...\n  },\n  {\n    \"hash\": \"...\",\n    ...\n  }\n]\nor would you like:\n{\n  \"hash\": {\n    ...\n  },\n  \"hash\": {\n    ...\n  }\n}\n. https://gifquick.net/api/info?list=c93yXYkbs_Bp,b-5L568014fb,h3\n. https://gifquick.net/api/info?list=c93yXYkbs_Bp,b-5L568014fb,h3\n. Cool. Any ETA on deploying the fix to users? Will it get into the firefox/opera/safari updates?\n. Cool. Any ETA on deploying the fix to users? Will it get into the firefox/opera/safari updates?\n. This has been fixed on our end by returning the mp4 file first in the list of files on the /hash.json response.\n. Video dimensions aren't stored anywhere at MediaCrush. You can determine them after it's loaded, though.\n. From IRC:\n[00:43:58] <SirCmpwn> gavin19: what's the relevance of that particular CSS snippet\n[00:45:00] <gavin19> The CSS you suggested is actually part of RES now. \n[00:45:29] <SirCmpwn> the css you linked to handles expandos in comment bodies\n[00:45:34] <SirCmpwn> not link titles\n[00:48:12] <gavin19> Ah ok. I thought it was the comment expando you were referring to. It was also floated left in the same manner\n[00:48:24] <SirCmpwn> yeah, I remember that\n[00:48:29] <SirCmpwn> poor screenshot, my bad\n[00:49:03] <SirCmpwn> replaced with better screenshot\n. > 1) The user experience for an iframe is suboptimal at best - you have to use some grotesque resizing hacks to make the iframe big enough to adapt to content... this means either hiding it until size is determined and then a \"snap in\" effect, or picking a sensible default and then watching it \"snap to size\" after, which isn't great. Before anyone argues \"plenty of things in RES are suboptimal user experiences\" - yep, I'll agree with you and I want to fix those - that doesn't justify adding more.\nI don't know that I'd call it grotesque, even though it's not ideal. However, the direct HTML5 video solution suffers from the same problem - the resolution of the video cannot be determined until the browser gets some info about it, which means there's a \"snap in\" effect all the same. This problem exists globally in RES for all expandos and there isn't an immediately obvious solution.\n\n2) The only real advantage to an iframe here is your own convenience. It lets you update how the RES expando behaves without having to submit a PR to RES. Every single beef you have with iFrame vs. non-iFrame support is solved by simply adding your unified video player controls and whatever else you want to your module (which you're correct and very clear about you being the contributor)...\n\nWell, my convenience as both an RES contributor and a MediaCrush contributor. Generating the video player markup from JS would be a horrible mess, and the iframe way is much, much cleaner. You are still right, though, it does make things a lot more convenient from the standpoint of a MediaCrush contributor.\n\nAs an example, and I'm not suggesting you'd do this especially with your recent announcement about adwords ads etc -- but the possibility needs to be mentioned because an iframe solution would make it trivially easy for you to ad ads, tracking code, etc to RES without any changes being made to RES.\n\nAgreed. However, though it might not be trivially done, we could add advertisements to our videos, pictures, etc, with the current version of RES, without the approval of RES. We could probably even manage some tracking code with SVG files. We just have to live with some amount of trust with each other.\n\nEDIT: I should also add that bytes have little to do with the iframe slowness -- it's the extra http request, which can be tiny or huge depending on the latency of the end user's connection... so comparing it to the video size itself isn't really relevant - it's entirely about latency, and not about the size of that extra request.\n\nI really just don't see this as a valid concern. Latency or no, it's still a trivial difference in speed, on the order of dozens of milliseconds at worst.\nAnyway, the points are laid out, let's see what others have to say about it.\n. Let's hold off on this PR for a bit.\n. @honestbleeps addressed this himself in this commit: ea2f15cbec95ea52e18f0f963394119c4d28bc8f\n. I think ignoring the bottom 40px is a reasonable solution. The alternative is a full-blown RES video player, which is probably more work than it's worth.\n. :+1: \n. It's about 30px on Firefox.\n. It's about 30px on Firefox.\n. Not ready to merge - I'm just opening this to keep track of things and get some review. I still have to make it work on Firefox.\n. Not ready to merge - I'm just opening this to keep track of things and get some review. I still have to make it work on Firefox.\n. Alright, this is good to merge.\n. Alright, this is good to merge.\n. Tabs, not spaces.\n. Tabs, not spaces.\n. Can you rework the gfycat and mediacrush expandos to use the generic one? The MediaCrush one is only a little ways from being generic anyway.\n. Can you rework the gfycat and mediacrush expandos to use the generic one? The MediaCrush one is only a little ways from being generic anyway.\n. Branding for all three hosts:\n\n\n\nFitbamob had branding that I didn't want to remove. I also wanted to keep the MediaCrush branding. However, gfycat did not have branding before, so I don't know if they'll want the change. Someone may want to get in touch with them and ask about that.\n. By the way, @honestbleeps, when you offer credit in the next changelog (like this one), can you credit the video player to MediaCrush as a whole? The video player is not the result of my efforts alone.\n. I dislike the idea of splitting the three sites into different controls. I support a consistent interface among all three.\n. By the way, the branding is optional, this media player supports unbranded video. Perhaps we can also support video without any controls whatsoever?\n. Hey @joey5755, it's been a while, have you got anywhere with this? Removing gfycat branding is easy, removing controls is easy, but your vague allusions to an alternative remain untold ;)\n. Additional info here: https://github.com/SirCmpwn/Reddit-Enhancement-Suite/pull/1\nI oppose using different UIs for video playback of any sort across RES as a whole. Also, your alternative UI is much less flexible. That being said, some feedback on the pull request:\n- Can you use Batch instead of adding a new image for controls? It has the icons you need and we've already integrated it. Example usage: <span class=\"res-icon\">&#xFFFF;</span> There's a reference file in the download that lists the unicode code points for each icon.\n- Can you style your controls from a stylesheet, instead of the style attribute?\n. > Re: different controls -- I get the idea behind consistency, but lets not be too dogmatic. We're only about pure gifs and silent, short, looping gif type videos, so there is a difference in form, function and expectations from normal full length videos with sound, and we also have different controls options like reverse and frame by frame. Vimeo links don't need a Youtube skin and that's been working ok. \nAdding new control options like reversing would be pretty straightfoward within the common UI. Your new player doesn't have frame-by-frame playback, though, is that something you forgot to implement? Also, audio-less video doesn't receive volume controls (set mute to true in the video options), and a looping option is also present, so the distinction remains clear. I'm not necessarily against your UI, I'm just against the idea of maintaining several video players in RES. They add cruft and a suitably extensible singular player is better. Honestly, the ideal solution is to use each site's iframe-based offering, but @honestbleeps remains undecided on this matter, and for long enough that it's probably reasonable to consider iframe-based solutions entirely out of the question.\n\nRe: style sheet, I just thought it would be clearest to keep my Gfycat template addition self contained within 20 lines in the template file.\n\nIt's not a big deal, I suppose. I am more concerned about the use of Batch for iconography, what are your thoughts on that?\n. Well, I think all that can be said, has been said. Let's wait to hear back from the powers that be.\n. I think that I'll merge @joey5755's pull request, then modify it to use Batch icons and make it more generic, something like \"lightweight-video-player\". All agreed?\n. Regarding Batch, it's not so much about resource usage, it's about consistency. Also, the logo is 2.7kb :unamused: \n. Note: There's some duplicate changes between this and #756. Whichever one is merged second will have to deal with (simple) merge conflicts.\n. I wasn't seriously considering this before, but since the feature works so well I'll put some more thought into it. Some points from a chat on IRC on the subject are relevant.\nSo to address some of the reasons each host might be choosen, out of MediaCrush, imgur, minus, and gfycat:\nMediaCrush\n\nPro-privacy (https, no information stored, etc) and open-source\nAs fast as any of the other choices (faster for GIFs)\nSupports images, audio, video, and far more file formats than anyone else\nDoesn't require an API key\nBigger upload limit (50 MB) than anyone else\nNot as popular as the alternatives\nRES support for it was written by me, a MediaCrush guy; bias is introduced\n\nIt's so easy to implement that it's already done :wink:\nMinus\n\nWeird private API?\nOnly supports images\nLarger upload limit than imgur\nWell known for being slow\nWeird social shoehorning\n\nThis might be feasible to implement, assuming the weird private API thing isn't a problem.\nImgur\n\nRequires API key, which may be challenging to include in RES\nCompetes directly with Reddit, may revoke API key out of spite\nRate limited per-application, rather than per-user, so all of RES is rate limited\nMost popular, known for being speedy\n\nWorkaround for rate limiting and API nonsense might be OAuth, but making users log into an imgur account sounds like a pain in the ass.\ngfycat\nOnly supports GIFs, do I really have to elaborate here?\n\nIt may be possible to add support for several hosts and allow the user to select one, but the issues with the APIs of minus and imgur make that less feasible. I can make the system more extensible so that if someone wants to come in and add support for their site, they are able to. MediaCrush is a good choice for the default for the reasons in the stuff up above, assuming we can get any other host working as a second choice.\nRegarding the issue of driving traffic to a particular host, it's indeed worrying. That being said, MediaCrush doesn't have ads and only loses money as a result of increased traffic (note: that is likely to change in the future if we can sort out a pro-privacy ad source). Also worth following is this github issue. It's true that I'd love that to happen, so I dunno how to address that. I guess the question is whether or not these hosting sites are worth supporting - I think the answer is yes for all of them. This concern is also partially mitigated by being open to other hosts submitting pull requests.\n. I was thinking about what you said with being more clear about branding and I had a host selection idea - \"Drag and drop or click to upload to <[logo]MediaCrush>, up to 50 MB\" and then you could click on \"MediaCrush\" to cycle through hosts. As for filtering by filetype, it's semi-possible but messy and not really a good idea.\nBy the way, @honestbleeps, let me know if you're open to merging this before you actually do, because there's some clean up that needs to happen first.\n. Closing this cause it doesn't work and I cba to do this properly.\n. >I'll be doing this one, I'm just writing it down.\n- me, over 4 years ago. fyi - @honestbleeps changed his mind about Batch when I explained the situation further to him on IRC. If you want to use your own image, he was fine with that (and presumably still is).\n. This is awesome. Good work, @gablank \n. I can't really think of a good reason to display: none images in md, anyway. That style has been there since \"initial commit\", so I doubt anyone remembers why.\n. @honestbleeps forced pushed a fix.\n. http://www.reddit.com/domain/memejoke.com\n. # What's new in RES v4.3.2:\nBug Fixes / maintenance\n\nFixes several bugs in MediaCrush support (thanks @MediaCrush)\nSubreddit styles are not automatically disabled in night mode (thanks @andytuba)\nDon't run RES on mobile/compact pages (thanks @andytuba)\nFix instragram support in night mode (thanks @gavin19)\nFixes to Reddit over https (thanks @andrewachen)\nPause MediaCrush expandos when closed (thanks @MediaCrush)\nFix Twitter expandos\nFix subreddit bar failing to load for shadowbanned users (thanks @sircmpwn)\n\nNew features / tweaks\n\nHTML5 videos (MediaCrush, gfycat, fitbamob) can be clicked+dragged to resize\nHTML5 videos now have a prettier UI (thanks @MediaCrush, @gfycat)\nGiflike inline image support (thanks @mtsgrd)\nImgflip inline image support (thanks @dylanwenzlau)\nInline YouTube, Vimeo, Soundbutt, and MemeDad support (thanks @thybag)\nImproved colored username support (thanks @andytuba)\nWhen using keyboard navigation and viewing expandos, the current one is closed when moving away\nShow view count on YouTube links (off by default) (thanks @markekraus)\nNow accepting donations via dogecoin\n. Fixed.\n. Well, fixed my comment, not andytuba's.\n. http://www.reddit.com/domain/awwni.me/new\n\nIt gets used pretty often and it's weird that it's the only one disabled by default.\n. Also including a simple but unrelated bug fix in this pull request.\n. @andytuba :rose: \n. Conflicts resolved - we're one little green button away from releasing this feature.\n. @mc10's complaints have been addressed.\n. I have added a GitHub wiki page that documents the procedure for new hosting providers here:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/wiki/Adding-new-media-hosts\nI will update the pull request to link to this in the settings window.\n. With that commit, all outstanding concerns with this pull request should be addressed.\n. Note: merge conflicts resolved.\n. woo\n. Good luck imgrush, hope you're ready to have your servers smashed!\n. https://youtu.be/fjsTZzP8nkI?t=6s\n. Bump. Coming up on release and this would be easy to include.\n. Bump. Coming up on release and this would be easy to include.\n. ^^\n. ^^\n. It just applies CSS to the user pages that recognizes the de-facto standard for spoilers: [text text text](#spoiler) (and variants).\n. It just applies CSS to the user pages that recognizes the de-facto standard for spoilers: [text text text](#spoiler) (and variants).\n. Yes.\n. Yes.\n. :cry: \n. :cry: \n. Changes to settings. Can we also log to a file?\n. For debug purposes.\n. I could use some help with it. I don't really use Reddit anymore so this patch is just a curiosity to me.. Simple mistake, I'll clean it up.\n. Can you style the cursor in a more specific manner?\n. This allows us to use HTML in enum options. I have confirmed that no existing settings are affected by this change.\n. This is here for other hosts that might want to customize the UI on the submit page a bit more, but MediaCrush doesn't use it.\n. This diff is a bit hard to read because I retabbed it, but it's just adding more stuff from the official mediacrush.js to support uploading.\n. Where's the security risk? These are just constants from elsewhere in the code.\n. But there's no real risk here :frowning:\nI suppose I can work a placebo in later tonight.\n. $(element).safeHtml(...) is not easier on the eyes :unamused: \nBut I will change it anyway.\n. I can fix this, but I found out while fixing it that there are loads of other indentation problems in this file. Might be worth addressing at some point.\n. Let's just make a wiki page for this. We don't have to put anything there yet, but having it is better than forgetting to fix this link.\n. I would argue for a github wiki and remind you that it's not just images that can be uploaded here.\n. explicit > implicit\n. I wanted to do that originally, but magic is involved (and also race conditions and more magic).\n. You have push rights on my repo - can you build out what you're thinking?\n. Thanks, I'll read through that after this MediaCrush meeting I'm in.\n. Thanks!\n. Yeah, copy-pasta.\n. No it shouldn't be?\n. I thought you were going to extend this to work everywhere?\n. Ah, I see what you mean now. Thanks.\n. Okidoki.\n. ",
    "dshafik": "@andytuba apologies, committed an out of date version; I amended the correct one and force pushed. (this also fixes the indentation problems and the fact it wouldn't actually work :P)\n. @honestbleeps This ensures that they always end up on the sizes page, which should always use the same selector. Before, it would try to handle this page, and the regular image page, and that's where it would break (and most people link to the regular image page).\n. This is a slight update to my earlier PR, that handles URLs that already have /in/<something> without a /sizes/<size>. \n. ",
    "ggPeti": "This can be closed now, https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/577 fixed the issue.\n. ",
    "creesch": "Are you still working on that? ;) \n. confirmed that I am interested. Also, not sure if that is the idea now, but I would like to only apply the custom stylesheet on pages where I disabled styles (and the frontpage)\n. Cool! One small thing though, mods since a short while have the ability to send messages from their subreddit http://i.imgur.com/v5KCvm1.png. Not a big deal for your average user, but might be nice to include that option at one point. \n. >  (Why? Maybe some people dislike what some subreddit stylesheets do to new posts, but they like the rest of the style.)\nI am eagerly awaiting the clueless bastard that breaks some toolbox stuff with with this :P \n. My thinking is that I rather have not my inbox populated with messages that all have the same title. Which, considering the fact that it is easier to message someone from the RES hover than from someones profile I think is somewhat of a reality. \nAndytuba is not convinced people actually use that spot :P \n. Oh sloppy, I'll fix that right away at home. \n. @erikdesjardins \\o/ it passes!\n. Thing is, I didn't add this as an attribution sort of thing. I did add it because it is utterly unclear that it is a wikipedia expando instead of a regular self post. Which in my daily reddit browsing confused me a few times already. So I set out to somehow distinguish between self posts and wikipedia expandos more clearly.\nI specifically didn't touch the original attribution itself so it remains at the bottom just like is done with all other hosts. I actually thought about simply moving it up but that doesn't make sense as it would make a primary element that draws attention to itself rather than a secondary element as it is now. \nI don't think people will appreciate the attribution first before every single image or other media type. I personally would be annoyed by it for sure, it only makes sense imho for the wikipedia expandos. \nSo I am not going to do the requested changes as I do not agree with them and they are not in line with what I intended to do with this pull request. Sorry.\n. Thing is, I didn't add this as an attribution sort of thing. I did add it because it is utterly unclear that it is a wikipedia expando instead of a regular self post. Which in my daily reddit browsing confused me a few times already. So I set out to somehow distinguish between self posts and wikipedia expandos more clearly.\nI specifically didn't touch the original attribution itself so it remains at the bottom just like is done with all other hosts. I actually thought about simply moving it up but that doesn't make sense as it would make a primary element that draws attention to itself rather than a secondary element as it is now. \nI don't think people will appreciate the attribution first before every single image or other media type. I personally would be annoyed by it for sure, it only makes sense imho for the wikipedia expandos. \nSo I am not going to do the requested changes as I do not agree with them and they are not in line with what I intended to do with this pull request. Sorry.\n. No, I don't want to place the attribution itself on top. I want to better distinguish that this expando is a wikipedia article and not a selfpost.\nBecause, as I talked about with @andytuba on irc we came to the conclusion that currently when you expand things a wikipedia post almost looks identical to self post. \nThis is how the change in pullrequest looks like on reddit. \n\nAs you can see it is not the attribution it changes, it does simply add the wikipedia W inline with the text so people are immediately attended to the fact that this is in fact a wikipedia article. \nIn short: I don't want to change attribution I want to distinguish wikipedia articles better. \n@larsjohnsen  and @erikdesjardins seem to have reviewed it with a different scope in mind. I guess I should have clarified that in the initial pull request more. But I figured that was clear enough as I talked it over with @andytuba and @thybag on irc. \n. No, I don't want to place the attribution itself on top. I want to better distinguish that this expando is a wikipedia article and not a selfpost.\nBecause, as I talked about with @andytuba on irc we came to the conclusion that currently when you expand things a wikipedia post almost looks identical to self post. \nThis is how the change in pullrequest looks like on reddit. \n\nAs you can see it is not the attribution it changes, it does simply add the wikipedia W inline with the text so people are immediately attended to the fact that this is in fact a wikipedia article. \nIn short: I don't want to change attribution I want to distinguish wikipedia articles better. \n@larsjohnsen  and @erikdesjardins seem to have reviewed it with a different scope in mind. I guess I should have clarified that in the initial pull request more. But I figured that was clear enough as I talked it over with @andytuba and @thybag on irc. \n. > I disagree, I think the sidebar (with embedded image in the majority of pages) is more than enough to disambiguate Wikipedia expandos.\nWell you can disagree, but it did happen to me several times. More so when there is no sidebar to speak of. \n\nDo you think that the icon currently added by this PR is not a \"primary element\" and/or doesn't draw attention to itself? Is drawing attention not the point?\n\nOf course it is, but in this case just for these specific expandos as in this case they blend in a bit too much with self posts. \n\nAgain, this is not for all expandos, just text-only expandos\n\nI must admit that I didn't realize this. My sincere apologies for that, that makes it indeed less of an impact. \nThough the other text expandos (except for deviantart which I couldn't get to work) have more distinct elements that make it more clear it isn't your regular selfpost. \n. > I disagree, I think the sidebar (with embedded image in the majority of pages) is more than enough to disambiguate Wikipedia expandos.\nWell you can disagree, but it did happen to me several times. More so when there is no sidebar to speak of. \n\nDo you think that the icon currently added by this PR is not a \"primary element\" and/or doesn't draw attention to itself? Is drawing attention not the point?\n\nOf course it is, but in this case just for these specific expandos as in this case they blend in a bit too much with self posts. \n\nAgain, this is not for all expandos, just text-only expandos\n\nI must admit that I didn't realize this. My sincere apologies for that, that makes it indeed less of an impact. \nThough the other text expandos (except for deviantart which I couldn't get to work) have more distinct elements that make it more clear it isn't your regular selfpost. \n. I dunno, it was in there for some reason. . Seems like that is already covered by #3721. <3. This does something differently though and site attribution in that place wouldn't work for most other expandos,\n. This probably needs changing . ",
    "CyberShadow": "I think this is fixed now? At least purple expando-links stay purple to me.\n. I think node.js is a sane requirement for a JS project.\nI think it would be better to instead provide simple instructions on how to install the prerequisites. For example, node.js can be installed in one command using Chocolatey, and Chocolatey itself can be installed in one command (from PowerShell). Copying and pasting four commands doesn't sound too bad, I think.\n. @honestbleeps @andytuba OK, I've been using this for a few days and fixed all issues I've encountered so far, so this is ready for wider testing and perhaps another round of code review.\nI've migrated the qunit tests to a grunt task + npm dependency, so after running npm install one can just run grunt qunit to run them. The tests are still runnable from the browser, just open tests.html, however npm install must be run once beforehand to install qunit.\nSelenium tests are also ran from grunt (grunt nodeunit). grunt test will run both qunit and Selenium tests. Currently the Selenium test suite only tests for some basic things (RES loading successfully, various expandos working as expected), and only on Opera (limiting factor is installing the extension which is highly browser-specific), but it shouldn't be hard to grow the suite from here to add more tests and browsers. Opera-specific stuff is in opera.js, common.js contains the tests themselves, and all.js will export all browsers to test by default.\nI've created a subreddit for the test cases (/r/restests), and sent you moderation invites. I suppose that ideally we'd want to spin up a local Reddit instance to keep the test pages versioned, but that'd involve a lot of dependencies and I'm not sure if it can be fully automated.\nAs for the way forward with this - I think the best approach would be to keep Opera 12 unsupported so you're not burdened with the obligation to maintain it, but still provide it with \"no promises if it works or not\". I imagine it should be easy to set up your auto-moderation bot to tell Opera users that there is no official support, maybe you could have it notify me so I can follow bug reports from Opera users.\n. Rebased, thanks!\n. Thanks for catching that, fixed.\n. Rebased to remove the snoonet commit.\n. RES wasn't loading because now RES initializes on the DOMContentLoaded event rather than the load event, and the Opera loader shim was expecting the latter.\n. The .gitattributes problem was actually getting in the way of regression testing. It was causing the makelinks.sh file to have Windows line endings, and thus unusable with bash on Windows (or at least my version of it).\n. If so then this entire block is not needed, possibly due to how loader.js works.\n. It's explained in the commit message. The problem is a collision of the ID of the element with the name of the global variable.\n. I'll fix it. BTW, I think grump has a jslint plugin task - if you use JSLint it might be worth integrating it.\n. It's explained in the commit message. This is not directly related to the Opera fixes, but rather a general RES fix. If you like, I can remove it from this pull and create a separate pull request with this fix.\n. It's explained in the commit message. There is a conflict between the function name and the this.lightSwitch variable. I actually don't know why it becomes a problem only in Opera, since it doesn't strike me as correct code.\n. Fixed.\n. Should be fine unless the code expects RESOptionsMigrate to be a property of the global object (window).\n. ",
    "bananastalktome": "\nYou mean that if thisBatch contains 8 ids, and therefore 8 ids are added to the query URL, it can return more than 8 results?\n\nyes, try the following URL which shows more than 2 in the results, although only 2 ID's are passed:\nhttp://gdata.youtube.com/feeds/api/videos?q=yd2jGADNSnQ|GI6CfKcMhjY&v=2&fields=entry%28id,title,media:group%28yt:duration,yt:videoid,yt:uploaded%29%29&alt=json\nThe problem is that the q parameter is not meant to be used specifically for ID's only. As such, any content that references a video in the description (and maybe as a video response etc/) will also show up in this feed.\n. > I tried 500 links from several video-heavy pages and the most responses returned from any given 8-id request was 11 while most most were 7-8. Your given example, with 25 results, I'd imagine is a pretty edge case?\nI guess it's more on the edge, but the more popular a video is the more likely it is referenced in the descriptions of other videos and thus will appear in this query.\n\nSeems the batch method might be the way to go since it's possible to wrap up to 50 id-specific requests into one.\n\nIndeed, the batch method does seem a good way to go. It doesn't support JSON responses, so it's all up to XML processing.\nUsing the same two videos I referenced earlier, here is a simple proof of concept for this (I'm using $.post rather than GM_xmlhttpRequest since it was easier & quicker for testing purposes):\n$.post(\"http://gdata.youtube.com/feeds/api/videos/batch?v=2&fields=entry(id,title,media:group(yt:duration,yt:videoid,yt:uploaded))\", '<feed xmlns=\"http://www.w3.org/2005/Atom\" xmlns:media=\"http://search.yahoo.com/mrss/\" xmlns:batch=\"http://schemas.google.com/gdata/batch\" xmlns:yt=\"http://gdata.youtube.com/schemas/2007\"><batch:operation type=\"query\"/><entry><id>http://gdata.youtube.com/feeds/api/videos/GI6CfKcMhjY</id></entry><entry><id>http://gdata.youtube.com/feeds/api/videos/yd2jGADNSnQ</id></entry></feed>').done(function(data) {\n    $(data).find('entry').each(function(i, e) {\n        var thisYTID = $(e).find('id').text();\n        var thisTitle = $(e).find('title').text();\n        var mediaGroup = $(e).find(\"media\\\\:group\");\n        var thisTotalSecs = mediaGroup.find(\"yt\\\\:duration\").attr('seconds');\n    })\n});\n. > I tried 500 links from several video-heavy pages and the most responses returned from any given 8-id request was 11 while most most were 7-8. Your given example, with 25 results, I'd imagine is a pretty edge case?\nI guess it's more on the edge, but the more popular a video is the more likely it is referenced in the descriptions of other videos and thus will appear in this query.\n\nSeems the batch method might be the way to go since it's possible to wrap up to 50 id-specific requests into one.\n\nIndeed, the batch method does seem a good way to go. It doesn't support JSON responses, so it's all up to XML processing.\nUsing the same two videos I referenced earlier, here is a simple proof of concept for this (I'm using $.post rather than GM_xmlhttpRequest since it was easier & quicker for testing purposes):\n$.post(\"http://gdata.youtube.com/feeds/api/videos/batch?v=2&fields=entry(id,title,media:group(yt:duration,yt:videoid,yt:uploaded))\", '<feed xmlns=\"http://www.w3.org/2005/Atom\" xmlns:media=\"http://search.yahoo.com/mrss/\" xmlns:batch=\"http://schemas.google.com/gdata/batch\" xmlns:yt=\"http://gdata.youtube.com/schemas/2007\"><batch:operation type=\"query\"/><entry><id>http://gdata.youtube.com/feeds/api/videos/GI6CfKcMhjY</id></entry><entry><id>http://gdata.youtube.com/feeds/api/videos/yd2jGADNSnQ</id></entry></feed>').done(function(data) {\n    $(data).find('entry').each(function(i, e) {\n        var thisYTID = $(e).find('id').text();\n        var thisTitle = $(e).find('title').text();\n        var mediaGroup = $(e).find(\"media\\\\:group\");\n        var thisTotalSecs = mediaGroup.find(\"yt\\\\:duration\").attr('seconds');\n    })\n});\n. I'm getting this issue as well (reported in http://www.reddit.com/r/RESissues/comments/1ln387/bug_css_styles_applied_to_all_pages_not_just/). Was in Firefox on osx, and also just now tested on Firefox (23.0.1) in Windows as well. Did not occur in Chrome on Windows.\n. I'm getting this issue as well (reported in http://www.reddit.com/r/RESissues/comments/1ln387/bug_css_styles_applied_to_all_pages_not_just/). Was in Firefox on osx, and also just now tested on Firefox (23.0.1) in Windows as well. Did not occur in Chrome on Windows.\n. ",
    "matheod": "Can't reproduce (I may misunderstand the problem) and post deleted.\n. Well it work for me.\n. By the way, I don't know if it's a normal behaviour, but if I press O then J it will write OJ instead of J.\n. Fixed by #1085 \n. dups of #839\n. See https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/939\n. > Should {{now}} use the same format as the \"Current timestamp\" macro? Should that \"Current timestamp\" macro become a regular macro which uses \"{{now}}\"?\nIn fact I think default macro should be included in the macro options. Like that it would be possible to remove them, and moreover it would give example of macro.\n. So what about that ? I think it's a usefull option.\n. Seems fixed.\n. Seems fixed.\n. This PR is mergeable, I have no conflict, I don't know why github say it's unmergeable.\n. I tested (not deeply) and it work pretty well. But I don't know if the merge will work correctly because it's based on an old file (i.e. now Troubleshooter is in About RES).\n. @honestbleeps What about this ?\n. Fixed by #779\n. Fixed by #779\n. I think the option should be off by default. But being able to choose for each account may be a plus.\n. Related to #1097\n. Should be closen, no ?\n. Fixed by #819\n. Chrome offer function do load/save data over the clound for chrome extension with chrome.storage.Sync.\n. https://github.com/reddit/reddit/blob/3bfe0a2513495f8e667f60ca3efce03f97990e51/r2/r2/lib/validator/validator.py#L574  + https://github.com/reddit/reddit/blob/3bfe0a2513495f8e667f60ca3efce03f97990e51/r2/r2/lib/validator/validator.py#L604-L607\nI.e. :\n- 10 000 (=L) for simple comments\n- 15 000 (=L1.5) for post in subreddit allowing link post\n- 40 000 (=L4) for post in subreddit self post only\n. Cela devrait \u00eatre un tuba, pas un trombone !\n. :+1:\n. Maybe check something like /wiki/XXX, or /r/wiki/XXX instead of /r/XXX/wiki (and other possible interversion).\n. How do you manage the fact that : \nhttp://www.reddit.com/r/EnhanSement/ redirect here http://www.reddit.com/subreddits/search?q=EnhanSement ? (not sure if this module should do something for that)\n. Yes this could be awesome.\n1) But do you see it in a new popup, or at the bottom of the user popup ?\n2) I think it shouldn't support all the commentTools, it's just a way to quickly send mp. If we want the comment tolls we should click on the old send mp link (assuming if we add a send message popup there is still a link to send the mp with the old way), because else it woulde surcharging the popup and loose the \"quick send a mp\" idea. But it's just my opinion. What is yours ?\n. Not sure if I want to do this one day (so if you want to do it, do it !), but waiting answer :p\n. Up :)\n. I think there should be a global module allowing any tip bot.\n. I think there should be a global module allowing any tip bot.\n. Seem fixed (cf:http://www.reddit.com/r/IdeasForAskreddit/comments/21v72e/css_tweak_for_better_res_support/cgqkhbb)\n. Maybe just put the textarea in readonly ?\n. Maybe with the ability to remove the disabled mode by double cliking ?\n. > Don't forget to use the up/down vote buttons\nShould not be displayed for source.\n. About my previous message, does this already fixed ? I can't found it in source code.\nEdit: I'm stupid it's from reddit :D\n. Okay, I was stuck on a stupid problem :D \nI didn't understand why my doubleclick event but it's because event don't work on disabled field.\nThe only solution is to use readonly and put some css to change color.\n. Note : I never contribute on any project and I'm new with git, so I hope I did it correctly :)\n. So do I do it correctly ? I'm really new to git and don't want to break something.\n. This should be ok : https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/932\n. By the way, I looked to allowing user to choose is timezone, but I giveup because I'm not really understanding how UTC time work (the problem is for Summer time (not sure of the english term, when you change the hours of one hours), because it's seems not all country manage it the same way (some add one, some remove one, some add half hours, etc.).\n. Why do you say that ?\n. You have the same thing for my first PR ?\n. That because I close the PR. It's seem when we close the PR your can't do anything. But it's not related to deleting the fork.\n. Note : I can't test myself but it should work (99.999% sure).\n. It seem they come back.\n. I read somewhere Reddit detect it and don't count the upvote. But I don't know if it true.\nBut I don't like the idea to make RES detect the mass-voting and block it (because it can be legit).\n. Yep but on unworking browser (at least for firefox I haven't tested in other but there is no reason it doesn't) the input still working. So it's just a bonus for supported browser (ie. chrome for the moment).\n. Good thing, color is now supported by Chrome, Firefox, and Opera !\n. Fixed with  #1174\n. Fixed with  #1174\n. Something I found really usefull (for exemple to navigate between post from specific user).\nBut I think comment navigator can still be improved (for exemple to navigate between user with tag of our choice).\n. Okay I have no idea why this not working.\nMy initial commit https://github.com/matheod/Reddit-Enhancement-Suite/commit/38b19ba5b262ba0ce023b74ce700b45dfcb0ae61 work perfectly, but with my second commit https://github.com/matheod/Reddit-Enhancement-Suite/commit/0df621c056e663844f11ed6c9b65a46036a7a327 I have a problem : \nAt the first time I highligh someone I have no problem, but then if I highlight an other person, the commentNavigator does not update (it still saying 1 post detected for exemple). Worse, if I switch to an other categorie (for exemple : me) and then come back on highlighted, it's keep previous category notation (until I click on arrow, then it show back the first detection (ie. 1 for exemple) but not the good number !). I checked if there was no error triggered in the tab and in background.js, but nthing. I read all used function in showNavigator but I have no idea why this not working.\nAnyone here have an idea ?\nThanks !\nPs : Note to me : do not open the comment navigator if we unhighlight someone, but think about refresh it.\n. > does changeCategory quit early if you're not actually changing the category?\nNo, and that what is strange, because it call getPostsByCategory and when I check manually (by executing the code in the dev panel) all post are detected.\n. Oh thanks ! I miss reading it. I think the problem come from that, thanks !\n. Now it's okay :)\n. Now this should be okay.\n. Can we have @honestbleeps opinion ? :p\n. The idea is to keep it for a very short period, ie. untill we close the browser or until we close the tabs.\n. An option keepTemporary with the description : keep user tagged until tab closed is not enough ?\n. > What do you think of refactoring so the module itself declares if it's disabled by default?\nI fully agree with that. Before found that part I wondering how to manage module disabled by default. It would be more clear if it's directly declared on the module.\n. Just do that will not work.\n. A working possibility I found is to put position:static to #RESConfigPanelModulesPane. Any better suggestion or this solution is okay ?\n. I tried again but fail again to found something perfect keeping the position fixed but allowing the scroll.\nMaybe @githue have an idea ?\n. Thanks! Do you want to do the PR ?\n. See https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/411\n. Yep I search several ways to select the node, and I think this is the best (some other are to complicate, or select to many things, etc.).\nThanks for the information about #number (but it's a little strange behaviour, what if I want to say : not related to #XXX in my description ?).\n. Oh okay, thanks.\n. https://help.github.com/articles/closing-issues-via-commit-messages\nSo it seems \"doesn't fix #XXX\" will close it :D\n. \n. :+1:\n. maybe 1 per session ? Not sure if usefull but maybe.\n. Fixed by #1094 ?\n. Une notification la premi\u00e8re fois qu'on click sur cette checkbox ?\n. Hum ... I found that very intrusive. But as we can disable the notification, why not.\nOr you could also count number of disabled subreddit style, and if it's > 10, then show the notification with your cooldown thing.\n. I sent you a email to  ste@op_ng__n_s.com the 19 april :)\n. If I put the submit link in the orange box (above advanced search: by author, subreddit...), does it really need an option to enable/disable the modification ? (Because I think it will hinder no one, and too many option kill the options (because it's hard to found what we want after)).\n. I wonder if this shouldn't be on hover by default.\n. Ok.\n. Oh ! We can click on it ! That the way we make it dissappear :D \nI search a long time how to remove it :D\n. Proof : \n\n23:17  matheod Exept if we do the thing you said we shouldn't\n23:17   matheod ie.\n23:17   andytuba    (i'm still at work)\n23:17   matheod foo/hot+bar/new\n23:17   matheod then it do stupid thing\n23:17   andytuba    if somebody types that in and posts to /r/resssues that it doesn't work\n23:17   andytuba    then i will yell at them personally\n23:17   andytuba    for doing a stupid thing\n23:17   matheod okay \n\n:D\n. Some demo would require multiple image. An possible idea would be show [1], or [1] [2], etc. instead of demo, linking to one or more image for demo.\nBut a good idea too is just to get one image with all part to show grouped. Yea I think this is better, first because \"demo\" is more explicit than [1] [2] etc. and then because it may allow in the futur to create beautiful image to show demo :)\n. Note to myself : Filtres > Flou > Flou gaussien > 4,0px\n. Now this should be okay.\n. > 00:21:48   matheod_  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/981#issuecomment-42717669\n\n00:22:01    matheod_  What about using webhook to copy demo folder ?\n00:22:59    andytuba  https://github.com/honestbleeps/Reddit-Enhancement-Suite/settings/hooks/new\n00:23:06    andytuba  \"we'll send a POST request to the URL below\"\n00:23:25    andytuba  select individual events \u2026 I guess \"push\" and \"PR closed\"\n00:23:54    andytuba  and whatever consumes that POST will need to check for \"did files in demo/ folder change\"\n00:25:30    andytuba  prob don't even need to have it very smart, just \"receive event \u2014> pull\"\n00:23:19  matheod_  An other possibility\n00:23:29    matheod_  would be to use the github page functonnality\n00:23:50    matheod_  but this would mean creating an other repository just for demo img\n00:38:18  matheod_  there is also that\n00:38:20    matheod_  https://api.github.com/repos/matheod/Reddit-Enhancement-Suite/contents/img/demo?ref=optionsDemo\n\n[re-formatted by @andytuba]\n. I updated to RESUtils.demoImgBaseUrl = 'http://demo.redditenhancementsuite.com';\n. I updated to RESUtils.demoImgBaseUrl = 'http://demo.redditenhancementsuite.com';\n. Yea this add an option link to the RES options on the chrome extension page.\nFor firefox, I'm not sure this is possible. Options pages are built by firefox from data we give them (eg. text field, select, etc.) but I don't think we can make the options link to an Url.\n. Done, I can't test because I don't have Opera, but this should work :)\n. With all the bad I heard on it ? (the new version, not the old)\n2014-05-08 18:14 GMT+02:00 Andy Tuba notifications@github.com:\n\nbecause I don't have Opera\nThen install it, you goober!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/990#issuecomment-42570028\n.\n. Work on Opera\n. For unknow reason, the preview doesn't update immediatly. We need to write something else. The strange things it's it use the same function for put bold, and with bold there is not this preview problem. I tried lots of thing but it didn't work. If someone have an idea ? (There still the ugly possibility to udpate manually the preview, but maybe someone will have a better idea).\n. How to manage new line in table ?\n. Now we can edit a table by select it before clicking on the table button. I tested for basic use, it work. Maybe there will be some problem with strange table, but I tried to make my best to check all possibility.\n. Normally this should be okay. Tried one chrome and firefox and seems to work perfectly.\n. I was speaking about async script.\n. In fact is not just Submitter. Moderator also have a problem. But the behaviour is strange.\n. I reset it just after : https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/995/files#diff-8dd4ef296489e23f27a2ca803a5788c4R270\n\nThe problem was the reset was in the if block, which is executed only at the first time we select the category.\n. Should be fixed by #914\n. Don't forget to think about compatibily with old saved comment.\n. Just saw #1019 tell me if you prefer your text\n. Don't forget that string in other language than english are generaly longer :D\n. Good Luck :D\n. ## Change Log\nupcoming (2014/05/15 22:23 +00:00)\n\n#921 Fix closing \"Tips and Tricks\" with the Escape key (@CyberShadow)\n#909 Throw if a.protocol unsupported, fix comment (@JordanMilne)\n#904 Correct issue #882 (viewSource parent toggling problem) (@matheod)\n#931 fix user tagging from command line (@andytuba)\n#917 Use url instead of inner text for pulling a post's \"posted to\" subreddit from frontpage/all/multireddit for filteReddit by subreddit (@l1am9111)\n#888 some justification for makelinks (@andytuba)\n#892 Add \"repository\" to package.json (@CyberShadow)\n#891 Fix stuck console on tall screens (@CyberShadow)\n#932 Corrected bug of background color preview when selecting none color (@matheod)\n#933 Remove IE files (@matheod)\n#927 Add active class to subreddit shortcuts dropdown (@githue)\n#866 Update regexes (@mc10)\n#872 Add a sort button for subreddits in shortcut menus (@Timberline)\n#922 Fix keyboard navigation \"Press a key\" popup (@CyberShadow)\n#884 [WIP] Opera 12 support (@CyberShadow)\n#920 Remove spaces before semicolons (@mc10)\n#914 Fix issue #874 (@matheod)\n#841 added option to uncheck \"send replies to my inbox\" in betteReddit (@m-xbutterfly)\n#835 Add followPermalink shortcut (@jspenguin)\n#885 Add setting to turn \"autoplay\" on/off for youtube/vimeo links. (@thybag)\n#877 mediaBrowseMode shouldn't close next image if open (@andytuba)\n#896 avoid error for ads from reddit (@matheod)\n#903 Fix so native controls on gfycat embeds are functional (@joey5755)\n#908 Local date (@matheod)\n#934 Save to store.json.tmp before overwriting to store.json. (@CyberShadow)\n#935 Corrected bug with checkbox auto checking even after unchecked it (@matheod)\n#938 Change the color of \"none\", which was really hard to read with #ddd color (@matheod)\n#424 filteReddit.keywords.unlessKeyword: don't filter a post if the title matches the unlessKeyword for that row (@andytuba)\n#943 Fixed go to post number (@matheod)\n#941 Rename regex variables (@mc10)\n#819 Add image move support (@gablank)\n#944 fixed followLinkNewTabFocus in firefox (@Shne)\n#806 Reduce calls to toLowerCase() in showImages module (@thybag)\n#952 Updated Dwolla payment button image URL to S3 bucket (@Dwolla)\n#955 Add a link to manage tagged user in options (@matheod)\n#948 Remove 'summarize your post' from autofilled title on RESissues/Enh posts (@andytuba)\n#939 Allow to navigate between post made by highlighted user (@matheod)\n#956 Make relative link to don't break https (@matheod)\n#961 replace new comment's \"score is hidden for X minutes\" tooltip with \"scor... (@matheod)\n#974 Fix Gfycat expandos in Opera 12 (@CyberShadow)\n#975 Fix #905 (@matheod)\n#986 Fixing issue #985, where help text read 'Increase' when it should have r... (@dmarklein)\n#980 Remove extra quote mark (@mc10)\n#979 Use https version of image (@mc10)\n#978 Remove old tweet-handling code (@mc10)\n#977 Fix for multiple shortcut (@matheod)\n#1001 Fix http://www.reddit.com/r/RESissues/comments/24nrdw/expandos_stop_work... (@matheod)\n#991 Fix video pausing from parent comments (@Shraymonks)\n#969 Fix image resize and move while the image is loading (@Shraymonks)\n#972 Show full link flair (@matheod)\n#962 Visually distinguish \"source\" textarea from \"edit\" fixes #887 + hide unnecessary text (@matheod)\n#993 Load RES instantly (@matheod)\n#968 Implementation of wiki image in preview (@matheod)\n#1000 Hacked together feature requested in RES issue #851 -- ability to use 'm... (@dmarklein)\n#995 Fix #994 (@matheod)\n#992 Add a Table button to easily create table in commentTools (@matheod)\n#987 browser-specific code refactoring (@andytuba)\n#982 Add expando for Clyp audio uploads (http://clyp.it) (@nathanjones)\n#878 Added showImages support for ridewithgps.com (@purdyk)\n#990 Added options link in page extension. (@matheod)\n#1006 Alternative \"Use direct lookup in showImages\" (@thybag)\n#1013 Fix gitignore for /OperaBlink/browsersupport-chrome.js (@matheod)\n#1012 Fix #958 (@matheod)\n#1015 Fix Fade button + Improvement (@matheod)\n#1014 Correct font on firefox (@matheod)\n#1020 Add help for link with number higher than 9 (@matheod)\n#1023 Support Numpad in link post shortcut + correct link number 10 (@matheod)\n#1024 Correct XSS vulnerability (@matheod)\n#1018 Fix #829 - Update character counter with correct lengths (@matheod)\n#1032 Allow to open link when editing user tag (@matheod)\n#1037 Add poster to MediaCrush expandos (@SirCmpwn)\n#1035 user bar hider // notification cooldown (@andytuba)\n#1034 Remove reference to deleted IE folder (@mc10)\n#1031 Show subscription on reddit (@matheod)\n#1040 sanity check for tab menu before restoreSavedTab (@andytuba)\n#1046 fix launching user tagger from command line (@andytuba)\n#1051 Moved ResTips from UI to About (@matheod)\n#1055 Tidy up some commandLine stuff (@matheod)\n#1057 add on-hover highlight to \"search RES\" button in gear dropdown (@andytuba)\n#1064 Completely update regexes (@mc10)\n#1063 Gruntfile: Fix Firefox build path (@mc10)\n#1060 Transform protection (@matheod)\n#1056 Live preview: update on quote and a little cleanup (@andytuba)\n#1052 Add Context module (@matheod)\n#1048 only add scroll event if the sidebar exists (@bronzle)\n#1045 Enable user Tag on wiki - Fix #1036 (@matheod)\n#1042 Change color to white for tag on (red/orange/olive background) (@matheod)\n#1065 utils: Add semicolons for cssPrefix for protection (@mc10)\n#1049 elementInViewport(): return false if element is falsey (@bronzle)\n#1041 Add space after the user name (@matheod)\n#1067 Don't show Full context link if it's a top comment (@matheod)\n#1068 Add hover effect on temporarily button to make it easier to understand (@matheod)\n#1070 Update makelinks.sh (@mc10)\n#1072 Avoid timezone problem (@matheod)\n\nv4.3.2 (2014/04/03 04:14 +00:00)\n\n#650 Update README.md (@samelawrence)\n#651 Minor changes to .gitignore (@mc10)\n#654 module.include/exclude can be pagetypes, not just URL regexps (@andytuba)\n#648 Added slash to the link in the MediaCrush branding (@jdiez17)\n#658 Restore subredditFrontPage keyboard shortcut, add to other pages (@andytuba)\n#662 Replace spinning gears throbber .gif with CSS3 throbber (@andytuba)\n#673 Add instagram to exemptions/Nightmode tags (@gavin19)\n#670 Macro placeholders (@andytuba)\n#674 Don't run RES on mobile site, some cleanup (@andytuba)\n#667 Fix a bug with the night-mode toggle in the Settings panel (@mc10)\n#665 Enable Esc key for goMode dialog (fixes #664) (@mc10)\n#649 Make button locations more consistent (@mc10)\n#635 Update jQuery to 1.10.2 (@mc10)\n#657 Use Date.now() and move var statements, var -> let for Firefox (@mc10)\n#675 Notifications module (@andytuba)\n#661 Option to not automatically disable subreddit style in dark mode (@andytuba)\n#686 Fix for rts links (@gavin19)\n#685 Adding giflike.com (@mtsgrd)\n#683 Update Tinycon to 0.6.1 (@mc10)\n#680 Regex .match -> .test for just true/false, .indexOf for simple tests (@mc10)\n#687 Convert spaces to tabs (@mc10)\n#688 Refined 8d1135b969 (@gavin19)\n#696 Default CSS3 image-orientation to from-image (@mc10)\n#694 Make slight style changes (@mc10)\n#692 {{escaped}} macro placeholder escapes markdown characters in selection (@andytuba)\n#695 Use https resources if accessing reddit over https. (@andrewachen)\n#700 userHighlight.autoColorUser: improved color selection, selectable strategies (@andytuba)\n#693 Sticky notifications (@andytuba)\n#697 Force HTTPS on all images (@mc10)\n#699 Nightmode update (@gavin19)\n#704 Update MediaCrush support (@SirCmpwn)\n#710 No Comment-Tools in share page (@gowtham1337)\n#709 Possible fix for \"ignore user\" not working in inbox view (@thybag)\n#708 Add support for using inline image viewer on wiki pages. (@thybag)\n#707 Enable drag resizing for HTML5 video elements (@thybag)\n#706 Hook into markdown styling on RES-saved comments (@gavin19)\n#702 Hover module (@andytuba)\n#705 Pause video/audio expandos on close (@SirCmpwn)\n#629 Added Inline Image Viewer support for CtrlV.in (@antriver)\n#718 Minor style fixes (@mc10)\n#714 Fully remove Greasemonkey support (@mc10)\n#719 split RES into multiple files... (@honestbleeps)\n#720 Grunt build files (@thybag)\n#722 Refactor gdAlert (@thybag)\n#724 Minor fixes (@mc10)\n#721 Hogan.js (@andytuba, @SirCmpwn)\n#723 Youtube expando module (comments only) (@thybag)\n#728 Vimeo expando module (comments only) (@thybag)\n#727 Ignore HTML files from Opera modules (@SirCmpwn)\n#729 Hiding/showing expando play/pause iframe videos (youtube & vimeo) (@thybag)\n#730 after inserting macro, put cursor/selection somewhere logical (@andytuba)\n#733 Added imgflip.com support for inline image viewer (@dylanwenzlau)\n#737 adding generic_expando type plus fitbamob support (@waglik)\n#732 Expando support for soundCloud (@thybag)\n#734 RESTemplates.load async, modules['commandLine'] refactor, commandLine uses template (@andytuba)\n#744 pointer and no select css changes (@waglik)\n#743 Fix youtube/iframe embed content left playing when closed as part of reddit selfpost expando's (@thybag)\n#740 Exclude comments pages from filteReddit (@gavin19)\n#738 Some lint-y fixes (@mc10)\n#739 Let user pref determine whether tabs are opened in background or not (@mc10)\n#745 RESUtils refactoring, table option utilities, modules.notifications fixups (@andytuba)\n#751 Fix issue with showKarma and shadowbanned users (@SirCmpwn)\n#748 Add videoViewed to betteReddit (@markekraus)\n#747 More minor JSHint changes (@mc10)\n#746 \"About RES\" modules and some console enhancements (@andytuba)\n#750 Minor change to Module Documentation (@samelawrence)\n#752 Quick MediaCrush fix (@SirCmpwn)\n#767 add node_modules/ directory to gitignore (@bronzle)\n#777 Exclude MediaCrush from default showImage expando (@SirCmpwn)\n#773 Prevent \"self-votes\" (fixes #771) (@mc10)\n#785 Update readme (@thybag)\n#774 Night mode CSS for gold page (@gavin19)\n#759 userTagger: Use batch icon for delete + RES confirm dialog (@thybag)\n#760 newCommentCount: Add delete subscription button to \"my subscriptions page\" (@thybag)\n#765 Add support for future MediaCrush enhancements (@SirCmpwn)\n#766 add floatingSideBar (multireddits) to make visible while scrolling (@bronzle)\n#779 Tidying up 'About RES' modules (@andytuba)\n#789 Add timecode support for inline youtube expando (@thybag)\n#790 Add support for http://memedad.com/ expandos (@thybag)\n#793 modules.sortCommentsTemporarily (@andytuba)\n#798 Workaround for simple-storage failure (@SirCmpwn)\n#756 Switch all HTML5 video to use custom player (@joey5755, @SirCmpwn)\n#803 changing regexp (@waglik)\n#805 Fix youtube not pausing on minimise (@thybag)\n#808 Fix query for keyboardNav.saveLinks() (@mc10)\n#801 Update to batch css icons, fix hotlink case (@joey5755)\n#816 userHighlight.options.dontHighlightFirstComment (@andytuba)\n#833 (Critical) Fix issue with Reddit's updated stylesheet and inline images (@SirCmpwn)\n#831 Removed tests.js references in manifests for Chrome, Opera, and FF. (@brettp)\n#858 Disable NER on wiki pages (@mc10)\n#859 Copyedit and update README (@mc10)\n#855 Clean up utils.js to avoid variable issues (@mc10)\n#856 Update Flickr expando regex (@mc10)\n#861 Add \"show anyway\" option on ignored posts (@thybag)\n#860 firefox survives saving data if store.json isn't created yet (@andytuba)\n#814 Fix (very) minor bug (@thybag)\n#867 fix sortsCommentTemporarily (@andytuba)\n#869 Fix issues with MediaCrush support (@SirCmpwn)\n#870 Fix issue with odd image types and expandos (@SirCmpwn)\n#871 Fix a few mediacrush issues (@SirCmpwn)\n\nv4.3.1.2 (2013/11/22 03:45 +00:00)\n\n#634 Fix drag sort on dashboard (@SirCmpwn)\n#633 Add support for MediaCrush albums and show branding on expandos (@SirCmpwn)\n#626 Address issue in c747295 (@mc10)\n#631 Convert .delegate/.bind to .on and \"return false\" to event calls (@mc10)\n#636 Remove MediaCrush image sizing stuff (@SirCmpwn)\n#630 Night mode fix for traffic pages (@gavin19)\n#637 filteReddit  nsfw filter / allowNSFW fixes (@andytuba)\n#641 CSS patch for rank widths (@gavin19)\n#639 Add svg files to mediacrush regex (@SirCmpwn)\n#644 Move source button to right place (fixes #643) (@mc10)\n\nv4.3.1.1 (2013/11/13 03:04 +00:00)\n\n#624 moveToParent fix (@gavin19)\n\nv4.3.1 (2013/11/12 06:50 +00:00)\n\n#533 Fix issue #529 (show +shortcut on reddit.com/subreddits); also fix a bug with loops using the same variable (@mc10)\n#534 Update MYRANDOM description (@gavin19)\n#535 Clean up regexes across the board; replace leading spaces with tabs (@mc10)\n#538 Make regex fixes, fix a bug with /subreddits (later +shortcut buttons were not appearing) (@mc10)\n#539 Allow hyphen in username (fix first part of issue #441) (@mc10)\n#541 CSS fix for hidden user bar toggle (@gavin19)\n#542 Remove IE files (should set the stage for #448 and #451 and fix #179) (@mc10)\n#544 Add support for m.imgur.com to inline image viewer (@andytuba)\n#545 Add subscribe button to subreddit info hover popup (@andytuba)\n#554 [+shortcut] button is broken (@andytuba)\n#557 The Magnificent Seven - Lost Commits Edition (@gavin19)\n#561 Bug fixes (@mc10)\n#563 Removing Imgur and YouTube permissions, they are not needed. (@JonnyBurger)\n#560 Correctly encode unicode login password (@aidanhs)\n#565 Night mode tweaks (@gavin19)\n#566 Various minor cleanup (@mc10)\n#567 Add char counter back to title field (@gavin19)\n#568 Fixed steam domain detection (@themichaellai)\n#569 Handle multireddit pane on savedComments page (@gavin19)\n#580 Fix RES option buttons not showing in Firefox. (@ericsubach)\n#576 Clicking radiobutton text can select radio field. (@andytuba, @ericsubach)\n#577 updated tinycon (@ggPeti)\n#575 Restore regex method for minus/deviantArt modules (@gavin19)\n#572 Add LICENSE file (wget gpl-3.0.txt) - fixes #241 (@Hello71)\n#570 Remove workaround for loading stylesheets in Firefox (@mc10)\n#583 Never ending reddit loads random subreddit. (@andytuba)\n#584 Enable Esc key for Tips dialog (fixes #312) (@mc10)\n#585 Enable user hover info on moderators page (fixes #306) (@mc10)\n#587 subredditInfo hover in comments (@gavin19)\n#588 Fix neverEndingReddit CSS: hide next/prev links (@mc10)\n#589 Remove hardcoded section for /r/gonewild (@mc10)\n#590 re-added Safari 7 fixes (@phriedrich)\n#600 Allow the \"view images\" tab to be hidden without having to turn off the inline image viewer (@theinternetftw)\n#602 Fix voting with parent hover (@mc10)\n#603 Minor fixes (@mc10)\n#601 Highlight first commenter fixes (@mc10)\n#586 Replace deprecated chrome.extension use with chrome.runtime equivalents (fix for Chromium on Ubuntu 13.10) (@chizu)\n#573 Add explicit script interpreter (@dethbunny)\n#591 Dynamic options, enable/disable inline image site modules, RedditBooru support (@dxprog)\n#604 Bump minimum Chrome version to 26.0 (as mentioned in #586) (@mc10)\n#605 One more Date.now() fix (@mc10)\n#607 Use unminified version of Opera code (@mc10)\n#609 \"back up your data\" tip (@andytuba)\n#615 Add 'draft' background option to the live preview (@gavin19)\n#616 Fix dashboard widgets issue, cache jQuery variables (@mc10)\n#617 Make macros improvement (@mc10)\n#619 show the \u03c0 server / debug info in top right corner with NeverEndingReddit (@andytuba)\n#618 Load RES in Safari 7 / 6.1 on first time reddit.com is loaded in a new tab (@andytuba)\n#621 \"highlight first commenter\" overrides \"submitter\" background from userHighlighter (@andytuba)\n#613 Update MediaCrush module to fix several issues (@SirCmpwn)\n#620 Various whitespace, semicolons, and variables cleanup (@mc10)\n#622 Allow unsaving of already-saved links (@mc10)\n\nrelease-4.3.0.3 (2013/08/18 19:53 +00:00)\n\n#503 Images load synchronously and fixes memory leak (@MikeRogers0)\n#501 Overlay the background to add a higher contrast in the BigEditor (@Zren)\n#509 siteModule for gfycat.com (@joey5755)\n#513 Settings console search should show a result for modules (@andytuba)\n#514 bitcoinTip's \"tip publicly\" does not open comment form\n\nI'm merging this, but per the discussion it's a valid point that we should probably look at other .click() calls and test them in Canary, etc.  Could this be related to the change that was made regarding FF23? (@andytuba)\n- #515 userHighlight autoColorUsernames: apply unique color to usernames (@andytuba)\n- #516 Change gfycat siteModule behaviour to show video instead of gif. (@joey5755)\n- #519 Ignore imgur.com/removalrequest (@mc10)\n- #521 modules['userHighlight'].highlightFirstCommenter (@andytuba)\n- #508 Add \"+ macro\" button back to macro dropdown (@andytuba)\n- #511 Subreddit shortcuts do not save changes if pre v4.1.5 format (@andytuba)\n- #520 Use strict (in)equality comparison operators, other various cleanup (@mc10)\n- #522 More strict comparison operator changes (@mc10)\n- #523 Night mode - mod log page (@gavin19)\n- #525 Bring over changes from the bitcointip userscript. (@skeeto)\n- #526 Exempt Dropbox links from being tagged, various username hider tweaks (@gavin19)\n- #524 Inline image viewer - show # of images in album before expando'd (@andytuba)\n- #527 More strict equality comparison operator fixes, expand .gitignore (@mc10)\n- #528 Ignore \".png\" after a # in the URL (@mc10)\n- #532 Fix issue #517 with the user being unable to set color to none; also use \"transparent\" as the proper background-color (@mc10)\nrelease-4.3.0.1 (2013/08/06 23:17 +00:00)\n\n#493 Night mode tweaks for multireddit bar (@gavin19)\n#495 Night mode tweaks (@gavin19)\n#498 More night mode tweaks (@gavin19)\n\nrelease-4.3.0 (2013/08/06 04:22 +00:00)\n\n#7 Update README (@Hello71)\n#9 Fixed width on 'show parent on hover' popup. (@gavin19)\n#10 Night mode edits (@gavin19)\n#15 improvements to documentation (@Hello71)\n#14 replaced most instances of Array() with []; rewrote some parts for jQuery (@Hello71)\n#25 Fix for the insane disk I/O that occurs when scrolling. (@gamefreak)\n#22 Night mode/[l+c] bg tabs/Pin subredditbar + user bar (@gavin19)\n#26 More sites for the inline image viewer and a fix for a potential bug fix. (@gamefreak)\n#34 Save/unsave doesn't work in multi-reddits \n\ngood find, thank you! (@calaveraDeluxe)\n- #38 Add missing 'nextTip' reference in Tips/Tricks\noops.. good fix.. my bad :-\\ (@gavin19)\n- #40 Highlight current subreddit in subreddit bar/'Continue this thread' links (@gavin19)\n- #46 Fix dupe 'full comments' links in user pages with NER (@gavin19)\n- #51 A fix for cmd-clicks on subreddit manager links in Safari (@technocoreai)\n- #52 Optimize images to save on size (@AlyoshaVasilieva)\n- #57 Fix highlighting of current sub in subreddit manager/Enable tagging/hoverInfo for mod box (@gavin19)\n- #56 Clean newCommentCache every 6 hours instead of 24 (@AlyoshaVasilieva)\n- #63 Add a fadeSpeed option to the userTagger module for hoverInfo animation speed. (@gavin19)\n- #65 Misc (Max-height for subreddit bar/User Highlighter/Night mode/Subreddit highlighting) (@gavin19)\n- #71 Allow selecting a comment by clicking anywhere in the comment box. (@gamefreak)\n- #76 Permit custom macro definitions in the commentPreview module. (@gamefreak)\n- #79 Added polyfill for Function.bind() in Safari. (@gamefreak)\n- #78 Added Picsarus.com to image hosts (@gavin19)\n- #80 Add i.qkme.me to the qkme.me regex (@gavin19)\n- #81 Add 'Refresh All' button to dashboard widgets + Userbar fix +Night Mode fix (@gavin19)\n- #92 Fix Safari's background page not distributing localStorage updates to all tabs (@gamefreak)\n- #89 Add 'cloud.steampowered.com' to inline image viewer. (@gavin19)\n- #91 Store the current NER page in sessionStorage instead of the URL. (@gamefreak)\n- #77 New Module: Persist Hidden Comments across Page Loads (@umbrae)\n- #95 Rewrite of showImages (@gamefreak)\n- #96 Cleanup from the showImages rewrite. (@gamefreak)\n- #99 Prevent autoload of next page with 'j' when autoLoad is disabled. (@gavin19)\n- #97 Implement more agressive caching of XHR requests. (@gamefreak)\n- #100 Restore duplicate image marking functionality. (@gamefreak)\n- #102 Upgrade markdown parser to newer version (@gamefreak)\n- #101 Add setting to toggle the RES ignored duplicate image\n- #105 Cleanup the per browser copies of the main js file. (@gamefreak)\n- #108 Comment editor improvements (@gamefreak)\n- #109 Add shortcut bar options to enable RANDNSFW and MODQUEUE (@signe)\n- #110 [feature request] Display all usernames in popdown, and don't remove the current username\nI'm pulling this in, but I'l be adding highlighting to it too so you can see the current user you're logged in as... (@Lugghawk)\n- #112 Replace the Sundown implementation with SnuOwnd (@gamefreak)\n- #113 Switch to HTTPS for Google APIs (@helkaluin)\n- #115 Fixes for autolinking in SnuOwnd (@gamefreak)\n- #114 Move gallery controls above the image to limit issues when the images vary in size or orientation (@signe)\n- #118 A bunch of last minute bugfixes (@gamefreak)\n- #119 Typo @8823 - valeu/value (@gavin19)\n- #121 Add visibility CSS property to forceVisible (@gavin19)\n- #125 Post release fixes. (@gamefreak)\n- #124 (Re)fix unwanted page autoloading with 'j' when NER is disabled. (@gavin19)\n- #126 CSS fix for share button (@gavin19)\n- #127 CSS fix for night mode spoilers (@gavin19)\n- #128 Add option to disable display of image captions. (@gamefreak)\n- #130 Add pagination to the dashboard user tags page. (@gamefreak)\n- #131 Change to outerHeight to solve some subreddit headers overlapping (@gavin19)\n- #132 /submitted and /comments links added after user links (@mat-person)\n- #135 Add NER listener for Subreddit Info (@gavin19)\n- #136 CSS fix for edited comments (@gavin19)\n- #139 Change over18 to Yes/No in subreddit info (@gavin19)\n- #145 Allow opening subreddit in new tab via Keynav (@cpettit)\n- #142 Add trailing slash support for imgur galleries (@signe)\n- #140 Add Keyboard Navigation shortcut for inbox in a new tab (@gavin19)\n- #137 Issue with new messages count (@dxprog)\n- #138 Added support for scrolling subreddit dropdown (@spencerhakim)\n- #152 Only enable scrolling/fixed height when subreddit dropdown height is too large to begin with (@spencerhakim)\n- #153 Re-added gallery captions. (@gamefreak)\n- #154 Fix for image viewer compatibility with other extensions (@gamefreak)\n- #155 Imageviewer enhancements (@gamefreak)\n- #157 Add length display of the title and text fields during submission (@gamefreak)\n- #133 Update lib/reddit_enhancement_suite.user.js (@olivdube)\n- #161 UsernameHider doesn't reveal username in edited post-comment (@honestbleeps)\n- #163 Improvements to handling of gallery pages. (@gamefreak)\n- #165 Enforce user tag fg text colour in Night Mode + CSS tweaks (@gavin19)\n- #167 Try to prevent subreddits from hiding the style toggle button. (@Krenair)\n- #166 Handle comma separated impromptu albums. (@gamefreak)\n- #168 Minor close button improvement (@MarceI)\n- #175 Make it more difficult for subreddits to hide style toggle label (@Krenair)\n- #173 Set openerTabId in chrome.tabs.create() (@joelpt)\n- #172 RES for IE (@tomaine2002)\n- #171 Exclude comment codes from annotations (@DanGe42)\n- #169 Add onVoteMoveDown to Keyboard Nav (@gavin19)\n- #178 Bring Snuowed up to date with sundown + bugfixes (@gamefreak)\n- #180 Added 'videoUploaded' option to betteReddit (@gavin19)\n- #181 Fix shortcut button /r/reddits (@gavin19)\n- #183 Fix message passing in Chrome (@gamefreak)\n- #186 Remove RESIE.sdf file from repository - it's an IDE file that's rebuilt (@signe)\n- #191 Another snuownd update (@gamefreak)\n- #192 Add Firefox-specific function to followComments (@gavin19)\n- #193 HTML Sanitization (@gamefreak)\n- #198 Escaping quotes correctly (@thelinmichael)\n- #195 Livememe regex update (@gavin19)\n- #199 Haven't tinkered with this yet, but want to pull it in and start to get it going, thanks! (@thelinmichael)\n- #197 Update view images () button, add shared class for +shortcut and +dashboard (@noahkissinger)\n- #204 Adding moveUp/DownThread and moveToTopComment (@urhereimnot)\n- #207 betteReddit - option for orangered to point to /message/inbox, not /unread (@andytuba)\n- #211 orangered-inbox - fixed bug where not-orangered points to /unread (@andytuba)\n- #216 Fullscreen comment editor & much improved HTML sanitization. (@gamefreak)\n- #217 Safari bug where shift+enter on link opens tab at end of tab bar (@robitor)\n- #225 Preload images in inline gallery. (@cjlarose)\n- #226 NeverEndingReddit inbox icon - use /static/ images instead of stylesheet; use colorblind-friendly icon (@andytuba)\n- #229 \"Use subreddit style\" toggle - don't show on top of menus/popups (@andytuba)\n- #230 Fire \"neverEndingLoad\" event for use by other userscripts. (@listen2)\n- #232 do not override reddit gold comment save button behavior #219\n- #238 Fixed Youtube ID regex to support new URL formats, added support for Youtu.be shortened URLs (@darlose)\n- #242 Fix two issues with case sensitive comparisson in the account switcher module. (@allanlw)\n- #247 Fixes issue #235 by adding an onerror function (@patricksnape)\n- #248 Fixes issue #244 (@patricksnape)\n- #250 showParent fixed with better selector (@andytuba)\n- #274 RESUtils.initObservers watches the real #siteTable for changes (@andytuba)\n- #266 Tinycon shouldn't clobber page title if it can't set the favicon (@andytuba)\n- #263 viewSource gets correct source for replies to PMs (@andytuba)\n- #253 CSS tweaks/fixes/night mode (@gavin19)\n- #252 Fixes #212 - replacing r/ is bad practise (@patricksnape)\n- #249 Search RES settings, navigate to settings via URL hash (@andytuba)\n- #245 (follow-up) \"Use subreddit style\" toggle - don't show on top of menus/popups (@andytuba)\n- #276 Fix position of ConfigPanel in settings console (@sesharc)\n- #275 Move MutationObserver into BrowserDetect out of global scope (@andytuba)\n- #258 Fixes #257 and #260 - User account switcher broken (@patricksnape)\n- #251 Load all images from album (@aaronjbrown)\n- #210 Update lib/reddit_enhancement_suite.user.js (@hypah)\n- #278 Remove jquery.reddit.js, since it appears superfluous (@andytuba)\n- #280 subreddit manager adds myrandom link if user has it and option is enabled (@andytuba)\n- #282 expanding/zooming images toggles srstyle visibility (@andytuba)\n- #284 Cleaning up some code for release (@patricksnape)\n- #286 Fix issue with loading top level comments (@patricksnape)\n- #283 Fix parent hover again (@andytuba)\n- #287 Fixed duplication bug (@patricksnape)\n- #288 Subreddit styles CSS (@gavin19)\n- #294 Fix editors (@andytuba, @patricksnape)\n- #290 myrandom button should be gold (@andytuba)\n- #289 Macro dropdown list unusable in \"big editor\" (@andytuba)\n- #301 Don't filter NSFW posts on selected subreddits (@andytuba)\n- #305 Fixes bug where you haven't got anything in the NSFW list (@patricksnape)\n- #304 Fix editors (@andytuba)\n- #299 Sort shortcut bar at top of page (@patricksnape)\n- #308 Settings nav - remove hash from url when closing settings panel (@andytuba)\n- #311 Choose when to not filter selected NSFW posts (@andytuba)\n- #310 Tips'n'Tricks appears on top of settings console (@andytuba)\n- #317 IMPORTANT: Typo causing CSS to collapse (@patricksnape)\n- #318 Update README to include building instructions (@patricksnape)\n- #321 Changes following Firefox's Places update (@patricksnape)\n- #324 Replace CSS utilities with classList methods (@gavin19)\n- #328 Alternative Flickr image expand, without the API (@dshafik)\n- #327 Add settings links and keyboard shortcuts to Tips 'n' Tricks (@andytuba)\n- #329 Handle Flickr links with /in/ in the URL (@dshafik)\n- #331 bitcointip fixups (@andytuba)\n- #333 Upgrade Tinycon to 0.5 and switch to minified (@andytuba)\n- #334 Fix for Chrome type error (@gavin19)\n- #341 update modules.bitcoinTip with skeeto's refactoring, my refactoring, and my fixups (@andytuba)\n- #346 Handle flickr lightbox links (@dshafik)\n- #344 Add highlight to user via [highlight] button on user tagger hover info (@andytuba)\n- #342 classList bugfix (@gavin19)\n- #345 more bitcointip module cleanup (@andytuba)\n- #350 Night mode tweaks (@gavin19)\n- #355 close buttons X replaced with \u00d7 (unicode) (@andytuba)\n- #356 \"big editor\" button now simply X-arrow glyph (@andytuba)\n- #361 add \"share\" button for search results (@andytuba)\n- #360 Flush image captions (@gavin19)\n- #366 Image viewer tweaks (@gamefreak)\n- #354 Quick and easy gallery 'n of m' display fix. (@nm3210)\n- #367 Fix for Youtube dupes/missing videoTimes + night mode CSS (@gavin19)\n- #368 Bitcointip retry (@skeeto)\n- #372 showLastEditedTimestamp fix (@gavin19)\n- #378 fixHideLink works on multi-subreddits now (@andytuba)\n- #373 readme readability (markdown changes) (@Efreak)\n- #385 Notify user when posts are filtered (@andytuba)\n- #392 Remove shell declaration (@patricksnape)\n- #391 Night mode tweak (@gavin19)\n- #390 Use private browsing when programatically opening new tab from Firefox private browsing (@andytuba)\n- #393 Move non browser specific JavaScript into ./lib and upgrade to jQuery 2.0 (@gamefreak)\n- #394 CSS misc/night mode (@gavin19)\n- #395 Roll back to jQuery 1.9.1 (@gamefreak)\n- #399 Fixes for saving option tables (@gamefreak)\n- #400 Comment tools overhaul (@gamefreak, @gavin19)\n- #401 Misc CSS (@gavin19)\n- #403 CSS fix for markdowneditor/textarea (@gavin19)\n- #407 Misc night mode CSS (@gavin19)\n- #406 Changed superscript button's behavior on comment tools module. (@geekman3232)\n- #405 Typography update for deviantART links. (@xraystyle)\n- #408 Fix for HoverZoom/Character counter/BigEditor (@gavin19)\n- #409 Firefox fix for collapsed image expandos (@gavin19)\n- #418 Various fixes (@gamefreak)\n- #420 Night mode tweaks (@gavin19)\n- #422 UserTagger HoverInfo \"give gold\" button opens \"gild comment\" form when applicable (@andytuba)\n- #428 Never-Ending Reddit's autoLoad pause enhancements (@andytuba)\n- #457 Fixed Typo in Readme (wiki URL) (@mercutiodesign)\n- #444 Night mode CSS for multireddits beta (@gavin19)\n- #434 Wiki/markdown fixes (@gamefreak)\n- #429 Notification header can show module name, \"error\", settings link icon (@andytuba)\n- #404 Memegen image inlining (@Hakayati)\n- #445 Rename of GoneWild mode and other stuff (@gamefreak)\n- #467 Settings console CSS tweaks (@gavin19)\n- #470 add keyboard shortcut to go to user profile (@bvenable)\n- #472 Adapt the show parent hover to display all parents of the comment. (@gamefreak)\n- #478 settings console - url hash, code path fixups (@andytuba)\n- #480 Added \"nsfw [on|off]\" filter toggle command to keyboard console (@andytuba)\n- #454 \"give gold\" box in comments breaks \"hide child comments\" (@andytuba)\n- #462 The urlencode method breaks accountswitcher for certain passwords (@andytuba)\n- #443 Comment source can be loaded multiple times in succession if double-clicked (@andytuba)\n- #482 \"restrict search to subreddit\" does not work on /m/ multireddits (@andytuba)\n- #483 Keyboard console multireddit commands (@andytuba)\n- #484 Add pink as tag colour (@gavin19)\n- #474 Fixed issue with label not selecting related checkbox because of ids exi... (@aw-emberex)\n- #464 Fix settings to open on Firefox Nightly (@Hello71)\n- #485 Switch the arrows in the parentHover to be more widely compaible. (@gamefreak)\n- #486 Fix broken tab configuration parsing (@gamefreak)\n- #488 Never Ending Reddit fixes (@honestbleeps)\n- #491 Reverse bg/fg for vote weight in night mode (@gavin19)\n. https://github.com/lalitkapoor/github-changes\nSee also http://mattdeboard.net/2014/01/14/automatic-changelog-generation-with-git/\n. I have to add tag to my PR :D\nEdit : I think this new version have around 100 PR (I quickly count). So I think they miss some :p\n. @andytuba Yes, the table PR (#992) is still not here :/\n. @andytuba The Author field is wrong sometime.\n. The two last of Feature request for example.\n. [WIP] In addition of the changelog, add gif for all new features (only features) : http://imgur.com/a/xjZf3 \n. <matheod-> Next time you generate your changelog, is this possible your mark thing which don't have Gif-Done tag ?\n<andytuba-> sure\n<andytuba-> can you make a comment on the hcangelog issue\n. Dups from #1026 \n. Dups from #1026 \n. Fix #416\n. Yea User Tags sorry :)\n. I like this idea. But should we show the category name or macro name ?\nA better solution (I think) is to add macro on click if the category text field is empty.\n. I'm not a fan of this behaviour :/\nI think people would have to enter \"macros\" if they want it to go on the macros dropdown. In fact, when default macro will be editable on the option, I think the category should be filled with \"macros\". Afer all, it's just a category, it doesn't have something special.\n. +1, allow to remove default macro we don't want and give exemple on how macro work :)\n. In fact maybe some option should go in the comment category.\n. Should not concern : \n- Subreddit created just to only have fun with css (with no thread content interrest)\n- Subreddit with very few people (<10 for example) to avoid blocking lots of useless subreddit\n. Only organize the code position or create a real structure (I.e. RESutils.DOM.fo) ?\n. In the same time, there are just string, not function. So we don't really care about them and will probably not update them. So it's doesn't really matter if it's a little a mess.\n. But we could also do something more cleaner and regroup (with /* comment */) all image in the same js file, then sort alphabetically :)\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/console.js#L166-L171\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/accountSwitcher.js#L63-L64\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/bitcointip.js#L193-L197\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/showImages.js#L1852\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/styleTweaks.js#L203\n. I suppose (I didn't checked) RES remove the  when disabling the custom subreddit css. But as you transform the link into style, RES will not remove it. As your style have a \"data-apng-original-href\" attribute, I think RES can handle this. I will try to solve this problem.\n. Fix #1080\n. Well, we have time :D\n. I have a better idea than using the user info tooltip : \nWhen on http://www.reddit.com/user/XXX, use document.referrer and offer a link to filter message from the previous subreddit we were.\n. I have a better idea than using the user info tooltip : \nWhen on http://www.reddit.com/user/XXX, use document.referrer and offer a link to filter message from the previous subreddit we were.\n. By the way, why do you add the RESConsole.captureKey stuff ? (I;e. disable capture key after pushing a key).\n. Fixed by #1089 \n. :D\n. Hum the dashboard.js file is pretty big. Hard to understand how it work :/\n. Fixed by #1115\n. > andytuba  i think honestbleeps lowercased usernames for userinfocache\n. Tested and work perfectly :+1: \n. I agree with Honestbleeps\n. Well with the context feature It's less usefull :)\n. ~~The problem I saw is :~~\n~~If you add this, you have to option : \nIf you doesn't add an option to add the context in the link, some people will yell because they will don't  want this feature.\nIf you add an option, then it will takes place for not so much~~\nOkay :)\n. I know the god mode but not the goMode :D\n. Still not see what the point with macros :/\n. Oh okay !\n. Starting with : \"Saving with reddit saves the comment as part of your account on the reddit server. You can view these\"\n. Starting with : \"Saving with reddit saves the comment as part of your account on the reddit server. You can view these\"\n. > 17:43:56  andytubaud  yeah, what ideas do you have on that?\n\n17:45:18    Matheod_  Basically :\n17:45:32    Matheod_  - Add a checkbox on console disabled by default (not sure about that)\n17:45:40    Matheod_  - When checked it show advanced options\n17:45:57    Matheod_  - Advanced option are tagged with {advanced : true}\n17:46:07    Matheod_  (in module files options section)\n17:46:22    andytubaud  sounding good so far\n17:46:23    Matheod_  - When searching, don't show advanced option if advanced option unchecked\n17:46:25    Matheod_  BUT\n17:46:35    Matheod_  count number of option hidden and notice user\n17:47:00    andytubaud  oh yeah like a little hazard sign bar up top  \"23 advanced options have been hidden - [Show them?]\"\n17:47:05    Matheod_  exactly\n17:47:27    Matheod_  Not sure if it's good to write number of options hidden\n17:47:37    andytubaud  heh yeah \"Some\" is easier\n17:47:42    andytubaud  on both the user and the dev\n17:47:51    andytubaud  I guess \"some\" is unnecessary\n17:48:19    Matheod_  I don't want people think : \"OMG 23 advanced options, that too many, too boring to look at them, I will rather create a post and ask\"\n17:48:29    andytubaud  ooh good thinking\n. > andytubaud  hmm how about if somebody gets deeplinked into settings\n17:52:02    andytubaud  like blah blah some fancy option\n17:52:07    andytubaud  obviously show that setting\n17:52:34    andytubaud  should that reveal other advanced options? all the module\u2019s options or just some near it?\n17:52:44    Matheod_  hum\n17:53:35    Matheod_  I think more about a warning \"this option is hidden click here to show it\"\n17:53:36    Matheod_  not sure\nMatheod_\n. Next version (not 4.4) : highlightIfAltAccountonoff, scoreHiddenTimeLeft, showFullLinkFlair -> advanced\n21:47:49   Matheod__  I propose that : for new options\n21:47:58    Matheod__  don't put them advanced\n21:48:01    Matheod__  until the next version\n. For history purpose, debate about adv options : \n21:23:25   Matheod__  so let's choose which option are advanced\n21:23:39    andytuba  \u00fcf\n21:23:47    Matheod__  dropDownStyle\n21:24:02    andytuba  defiitely\n21:24:12    andytuba  that\u2019s a stupid legacy style feature\n21:24:29    Matheod__  hum some module should have all their option advanced, but because they are only a few option it doesn't worse to hide them all\n21:24:31    andytuba  showCurrentUsername too imo\n21:24:54    andytuba  are you looking at showCommentKarma?\n21:24:59    Matheod__  yea\n21:25:11    Matheod__  Ok for showCurrentUserName\n21:25:11    andytuba  hmmm yeah that\u2019s kinda gray area\n21:25:23    Matheod__  hum\n21:25:26    Matheod__  lets hide separator\n21:25:26    andytuba  showcommentkarma options i would both mark as advanced because search\n21:25:36    Matheod__  hum true\n21:25:40    Matheod__  so both advanced\n21:25:51    Matheod__  not sure for usecommas\n21:25:54    andytuba  well i\u2019m unsure on commas\n21:25:58    Matheod__  yea\n21:26:03    andytuba  how about just separator advnaced\n21:26:04    Matheod__  especially because it's off by default\n21:26:05    Matheod__  yea\n21:26:06    Matheod__  jsut separator\n21:26:30    andytuba  heh goddamn user bar hider\n21:26:51    andytuba  toggleButtonState advanced?\n21:27:03    Matheod__  yea\n21:27:17    Matheod__  all the module should be advanced but my script doesn't support that :D\n21:27:25    andytuba  lol\n21:27:43    Matheod__  in fact the module is strange\n21:27:45    andytuba  oh are you planning on showing a warning \"this module has hidden options\"?\n21:27:56    Matheod__  I don't know if I should or no\n21:28:05    Matheod__  almost all module will ahve hidden options :D\n21:28:22    Matheod__  in fact the module is strange userbarState should be merged with the user bar hider\n21:28:26    andytuba  i think it would be useful just as another reminder for people who are smart enough to want advanced options but too dumb to look in the titlebar\n21:28:35    Matheod__  forget about : in fact the module is strange userbarState should be merged with the user bar hider\n21:28:41    andytuba  k\n21:28:59    Matheod__  i think it would be useful just as another reminder for people who are smart enough to want advanced options but too dumb to look in the titlebar > So remind me that after\n21:29:26    andytuba  you made an issue for this project, right?\n21:29:28    Matheod__  yea\n21:29:32    Matheod__  you can post on it\n21:29:37    andytuba  oh yeah https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1149\n21:29:51    Matheod__  displayText for username hider ?\n21:30:25    andytuba  ehhh dunno\n21:30:28    andytuba  i\u2019d say not-advanced\n21:30:32    Matheod__  kk\n21:31:04    Matheod__  it's a good thing account switcher have 2 advanced options\n21:31:22    andytuba  for testing?\n21:31:24    Matheod__  because the acount switcher module is the console homepage\n21:31:30    andytuba  oh heh yeah\n21:31:36    Matheod__  people will probably click on advanced at the first time\n21:31:43    andytuba  kinda wanna switch that to the donate page =D\n21:31:47    Matheod__  so if they see no changed they will not try latter :D\n21:31:49    Matheod__  Xd\n21:32:03    Matheod__  I hope dogecoin will not fall XD\n21:32:12    Matheod__  RES have lots of money in dogecoin\n21:32:20    andytuba  yeah like $100 =D\n21:32:21    Matheod__  less now it started to fall :D\n21:32:22    Matheod__  more\n21:32:33    Matheod__  or maybe now 100$\n21:32:54    andytuba  sent: 50k doge   huh where\u2019d that go\n21:33:06    Matheod__  openOnHighlightUseronoff => advanced\n21:33:30    andytuba  RES has received $128 in doge at the current rate of 1000 doge / $0.34\n21:33:38    andytuba  agred\n21:33:40    andytuba  +e\n21:34:02    Matheod__  so arround 300$ when it was $0.9/1000\u00d0\n21:34:07    andytuba  hmm this might actually be me https://dogechain.info/tx/e53d3c08a3b967a0ae25bf39a38de8cc56bff0d2c3304d85d1c6ac250fd4f736\n21:34:31    Matheod__  ahah\n21:34:42    andytuba  yep that\u2019s me\n21:34:55    Matheod__  it's funny, .js are still not linked to notepad++\n21:35:19    Matheod__  but that only because I want to keep the icon :D\n21:35:22    andytuba  wow i\u2019m actually holding onto a decent amount of btc right now\n21:35:30    andytuba  thought you could set custom icons per filetype in windows\n21:36:38    andytuba  do you handle hiding advanced options via CSS or by not rendering them?\n21:36:55    Matheod__  via CSS\n21:36:58    andytuba  okay cool\n21:37:17    Matheod__  I think we could on older windows version\n21:37:21    Matheod__  but we can't now\n21:37:57    Matheod__  oh we can with regedit\n21:38:23    andytuba  did they really take away that customization in win8\n21:40:32    andytuba  hmm okay hoptions\n21:40:36    andytuba  commenttools highlightifaltaccount\n21:41:06    andytuba  really i think everything except macros\n21:41:36    Matheod__  everything as advanced ?\n21:41:41    andytuba  although i kinda want to leave keyboardShortcuts showing for discoverability\n21:41:56    Matheod__  I would not put commentingAsonoff as advanced\n21:42:03    Matheod__  because for people like me who only use one account\n21:42:05    Matheod__  it's boring\n21:42:20    andytuba  hrm\n21:42:33    Matheod__  really i think everything except macros => everything as advanced OR everything as not advanced ?\n21:42:34    andytuba  i don\u2019t feel too strongly about it\n21:42:47    andytuba  macros \u2014 not advanced;  everything else \u2014 advanced\n21:43:32    andytuba  meh\n21:43:38    andytuba  i guess none of 'em\n21:43:42    andytuba  (none advanced)\n21:44:45    andytuba  gotta get rid of filteReddit.notification since that responsibility is now part of notifications module\n21:44:50    andytuba  filtereddit.nsfwquicktoggle  \u2014 advanced\n21:45:26    Matheod__  wait\n21:45:42    andytuba  i guess we could just mark filtereddit.notification adnvaced and deal with it properly later\n21:45:50    Matheod__  I'm still in comment tools XD\n21:46:12    andytuba  heh i got a little overwhelmed with the task\n21:46:13    Matheod__  you said all advanced then all not advanced\n21:46:13    andytuba  so i skipped again\n21:46:24    andytuba  yeah i changed my mind\n21:46:33    andytuba  i think all of comment tools are basic-ish\n21:46:44    Matheod__  I think some should be advanced\n21:46:48    Matheod__  keepMacroListOpenonoff\n21:46:52    andytuba  oh yeah that\u2019s a good one\n21:47:10    Matheod__  Maybe highlightIfAltAccountonoff ? Or maybe not as it's a new option\n21:47:24    andytuba  unsure\n21:47:49    Matheod__  I propose that : for new options\n21:47:58    Matheod__  don't put them advanced\n21:48:01    Matheod__  until the next version\n21:48:05    andytuba  seems good\n21:49:02    Matheod__  userAutocompleteonoff and subredditAutocompleteonoff shoudl be advanced too\n21:49:16    andytuba  hmmm yeah ok\n21:49:18    Matheod__  maybe even showInputLengthonoff\n21:49:27    andytuba  seems ok\n21:49:44    Matheod__  ok to adv ?\n21:49:52    andytuba  advance?\n21:49:54    Matheod__  advanced\n21:50:18    andytuba  oh yeah\n21:50:20    Matheod__  I used the adv abreviation in some part of the code\n21:51:04    Matheod__  automaticonoff\n21:51:10    Matheod__  Hum\n21:51:13    Matheod__  I don't know\n21:51:17    andytuba  comment navigator?\n21:51:20    Matheod__  no\n21:51:23    Matheod__  hide all child coments\n21:51:25    Matheod__  comments\n21:51:27    andytuba  oh\n21:51:31    andytuba  eh not really advanced\n21:51:34    Matheod__  kk\n21:51:36    andytuba  kinda but meh\n21:51:48    Matheod__  draftStyle\n21:51:56    Matheod__  advanced no ?\n21:52:07    andytuba  prob advanced\n21:52:10    andytuba  (yes)\n21:52:35    Matheod__  enablebigeditor not\n21:52:43    andytuba  yeah seems basic\n21:52:49    Matheod__  newcommentcount all basic\n21:53:12    Matheod__  show parents on hover all advanced\n21:53:44    Matheod__  or maybe all except direction\n21:54:23    andytuba  yeah any delay seems advanced\n21:54:26    andytuba  delay / speed\n21:54:41    Matheod__  direction adv or not ?\n21:54:43    andytuba  direction i would say basic\n21:54:45    Matheod__  kk\n21:54:54    Matheod__  Sort Comments Temporarily all basic\n21:55:02    andytuba  heh yeah\n21:55:07    Matheod__  so now filtereddit\n21:55:25    Matheod__  didn't use this module so i don't know\n21:55:52    andytuba  notification, nsfwquicktoggle\n21:56:07    andytuba  everything else basic\n21:56:18    Matheod__  what is the thing you change about notification ?\n21:56:22    Matheod__  (what you said me earlier)\n21:56:38    andytuba  the notification module has an option for \"disable this notification\"\n21:56:45    andytuba  so now filtereddit notifications have 2 options for th esame thing\n21:56:55    Matheod__  oh okay\n21:57:02    Matheod__  So how it handle this oO\n21:57:20    Matheod__  Subreddit Tagger all basic\n21:57:26    andytuba  i say mark it advanced for now and properly migrate&delete it later\n21:57:30    Matheod__  betteReddit now :D\n21:57:38    andytuba  bleh bettereddit\n21:57:42    Matheod__  fullCommentsText advanced\n21:57:46    andytuba  yeah\n21:57:58    andytuba  fixSaveLinks advanced?\n21:57:59    Matheod__  fixSaveLinksonoff\n21:58:00    Matheod__  yea\n21:58:10    andytuba  searchSubsredditsBydefualt\n21:58:39    andytuba  toolbarfix maybe\n21:58:45    andytuba  turboSelfText adv\n21:58:48    Matheod__  didn't agree for searchsubsredditbydefault\n21:59:10    Matheod__  because it changed a default reddit feature\n21:59:15    Matheod__  don't know if you see what I mean\n21:59:16    andytuba  good point\n21:59:44    Matheod__  fixHideLinksonoff\n22:00:24    andytuba  i say basic bc we get a lot of questi0ons about that\n22:00:29    Matheod__  kk\n22:00:30    andytuba  \"why so slow?\"\n22:00:34    Matheod__  I don't understand what the and provide a 5 second delay prior to hiding the link means\n22:00:52    andytuba  maybe we should chop that feature\n22:01:00    andytuba  or split the 5s delay\n22:01:15    Matheod__  i don't understand what it does in fact\n22:01:16    andytuba  when you hide a post on reddit without RES i believe it hide instantly\n22:01:28    Matheod__  oh okay\n22:01:30    Matheod__  i get it\n22:01:36    andytuba  yeah\n22:01:36    Matheod__  so not advanced\n22:01:39    andytuba  right\n22:02:06    Matheod__  unreadLinksToInbox ?\n22:02:18    andytuba  heh yeah that is kinda advanced\n22:02:21    andytuba  that was my first contribution!\n22:02:30    Matheod__  ahah :D\n22:02:41    andytuba  i fucked it up, too\n22:02:43    Matheod__  wait 10s\n22:02:57    Matheod__  re\n22:03:07    Matheod__  uncheckSendRepliesToInbox is a new module\n22:03:13    Matheod__  and it's also basic\n22:03:13    andytuba  oh yeah :)\n22:03:15    andytuba  didn\u2019t you do that?\n22:03:18    Matheod__  no\n22:03:47    Matheod__  I don't know about all the videoXXX options\n22:03:48    andytuba  hmm not seeing anything immediately in the changelog about it\n22:03:53    andytuba  yeah that is a lot of video options =\\\n22:03:56    Matheod__  I mean videoABCD\n22:03:59    Matheod__  not XXX videos :D\n22:04:01    andytuba  hehe\n22:04:07    andytuba  i gotta set up my andytuba.xxx forwarding\n22:04:12    Matheod__  Xd\n22:04:16    andytuba  oh hey it is forwarding right\n22:04:19    andytuba  i just gotta put some content there\n22:04:29    Matheod__  \"andytuba  hmm not seeing anything immediately in the changelog about it\" => you shoudl write it somewhere or you will forget :D\n22:04:34    andytuba  heh right\n22:04:43    andytuba  gonna blame real quick to see who wrote it\n22:04:44    Matheod__  So which video option are advanced ?\n22:04:52    andytuba  buhh\n22:04:56    andytuba  all of 'em maybe\n22:04:59    andytuba  dunno\n22:05:12    Matheod__  all of them\n22:05:21    Matheod__  toolbarFix => I don't understand what it do\n22:05:32    andytuba  have you ever seen reddit.com/tb/asdasd links\n22:05:45    andytuba  if you have the toolbar option enabled in preferences then all outgoing links look like that\n22:05:50    andytuba  they add the reddit companion toolbar to the top of the page\n22:05:54    andytuba  and iframe the real link under it\n22:06:01    Matheod__  what are reddit.com/tb/asdasd links ?\n22:06:08    Matheod__  you have an example ?\n22:06:10    andytuba  like reddit.com/tb/{{post_id}}\n22:06:15    andytuba  1s\n22:06:19    andytuba  however some sites (youtube, twitter, etc) do not like being inside iframes\n22:06:35    andytuba  toolbarFix sends you directly to the link instead of the /tb/ link instead\n22:06:58    Matheod__  So advanced\n22:07:05    andytuba  yeah\n22:07:19    Matheod__  http://www.reddit.com/tb/254oza\n22:07:22    Matheod__  I see nothing special\n22:07:26    andytuba  open it in incognito\n22:07:31    Matheod__  It was in my history XD\n22:07:40    andytuba  reddit redirects you to the real link if you don\u2019t have the \"display links with a reddit toolbar\" option enabled\n22:07:51    andytuba   6https://ssl.reddit.com/prefs/#frame\n22:07:54    andytuba  ^ https://ssl.reddit.com/prefs/#frame\n22:07:56    Matheod__  Oh I enabled res in icognito XD\n22:08:04    andytuba  shouldn\u2019t matter\n22:08:30    Matheod__  Well when i go on\n22:08:30    Matheod__  http://www.reddit.com/tb/254oza\n22:08:33    Matheod__  with icognito\n22:08:36    Matheod__  I'm redirected to\n22:08:40    Matheod__  http://www.reddit.com/r/Enhancement/comments/254oza/res_slow_for_anyone_else/\n22:08:44    Matheod__  without anything special\n22:08:44    andytuba  are you logged in\n22:08:46    andytuba  ohhh\n22:08:47    Matheod__  no\n22:08:50    andytuba  external link\n22:08:54    andytuba  like to youtube or imgur or whatever\n22:09:09    andytuba  reddit isn\u2019t gonna add extra reddit toolbar onto reddit pages\n22:09:29    andytuba  oh https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/841\n22:09:53    andytuba  damn why that no t listed\n22:09:56    Matheod__  http://www.reddit.com/tb/26yp3y/ redirected me\n22:10:00    Matheod__  http://www.reddit.com/r/pics/comments/26yp3y/excuse_me_sir_do_you_know_where_i_could_find_some/\n22:10:09    andytuba  external = not reddit\n22:10:13    andytuba  find a /tb link that doesn\u2019t point to a comments page\n22:10:19    Matheod__  it's external\n22:10:24    Matheod__  it not a self text\n22:10:29    Matheod__  or I get it wrong XD\n22:10:30    andytuba  irrelevant\n22:10:35    andytuba  hold on\n22:10:49    rAnnouncer  r/Enhancement:  Is there a way to hide posts from users with a negative overall karma score? ( http://redd.it/26z9pj )\n22:10:56    Matheod__  http://www.reddit.com/tb/http://github.com ?\n22:10:57    andytuba  ^ no\n22:11:03    andytuba  no\n22:11:43    andytuba  ugh where the hell is a tb link\n22:11:51    andytuba  http://www.reddit.com/tb/26x8pe\n22:12:25    Matheod__  I'm also redirected on reddit\n22:12:30    Matheod__  http://www.reddit.com/r/TrollXChromosomes/comments/26x8pe/girls_when_they_shave_their_legs_relevant_xpost/\n22:12:49    andytuba  do it in a browser where you are not logged in\n22:12:51    Matheod__  ANd i'm not loged\n22:13:34    andytuba  hmm try turning on the frame setting in preferences\n22:13:38    andytuba  and then do it while logged in\n22:14:53    Matheod__  oh it work\n22:16:23    Matheod__  so toolbarFixonoff advanced XD\n22:16:27    andytuba  yep\n22:16:42    Matheod__  turboSelfText\n22:16:49    andytuba  adv\n22:17:02    andytuba  the only reason to turn that off is if it\u2019s broken\n22:17:33    Matheod__  kk\n22:17:44    Matheod__  SO bad we can't create issue form irc\n22:17:46    Matheod__  from\n22:17:54    andytuba  hah that would be fun\n22:18:08    Matheod__  !githubbot create issue Put a fucking -webkit-user-select on .toggleButton\n22:18:19    andytuba  i was about to say something about that =D\n22:19:19    Matheod__  #1150\n22:20:00    Matheod__  showLastEditedTimestamponoff ?\n22:20:11    andytuba  ehhh\n22:20:20    andytuba  unsure\n22:20:26    Matheod__  unsure too :/\n22:20:58    Matheod__  let's say basic\n22:21:08    Matheod__  scoreHiddenTimeLeft ? (next version)\n22:21:28    andytuba  agreed\n22:21:44    Matheod__  scoreHiddenTimeleft advanced in next version ?\n22:21:46    Matheod__  I think yes\n22:22:13    andytuba  yeah\n22:22:22    Matheod__  restoreSavedTabonoff ?\n22:22:26    Matheod__  No idea of what it does XD\n22:22:45    andytuba  i think it should be default enabled\n22:23:03    Matheod__  so basic\n22:23:07    andytuba  it adds the \"saved-reddit\" link back to the user page\n22:23:13    andytuba  yeah basic\n22:23:32    Matheod__  maxWidth/height advanced\n22:23:33    andytuba  reddit devs moved the \"saved\" tab from the userpage tabs to the multireddit sidebar\n22:23:35    andytuba  yeah def\n22:24:25    Matheod__  openInNewWindow ?\n22:24:32    andytuba  hmmm\n22:24:37    Matheod__  not sure\n22:24:38    andytuba  basic\n22:24:42    Matheod__  kk\n22:24:48    Matheod__  hideNSFW basic\n22:24:56    Matheod__  autoExpandSelfText ?\n22:25:03    andytuba  ummm\n22:25:04    andytuba  basic\n22:25:10    Matheod__  imagezoom ?\n22:25:12    Matheod__  move\n22:25:37    andytuba  imagemove is a new feature, let\u2019s leave it basic\n22:25:42    Matheod__  but in next version ?\n22:25:49    andytuba  unsure\n22:25:53    andytuba  i like leaving it ihere for education\n22:25:56    Matheod__  kk\n22:25:59    Matheod__  markvisited ?\n22:26:08    andytuba  maybe advance\n22:26:11    Matheod__  agree\n22:26:20    Matheod__  sfwHistory ?\n22:26:28    andytuba  basic\n22:26:33    Matheod__  ignoreDups ?\n22:26:34    andytuba  the \"privacy\" ones i think should stay basic\n22:26:39    andytuba  oh i ahte ignoredupes behavior\n22:26:40    Matheod__  agree\n22:26:42    andytuba  default behavior\n22:26:56    Matheod__  agree for privacy message\n22:27:04    andytuba  right\n22:27:12    Matheod__  ignoreduplicates basic so\n22:27:15    Matheod__  (I like it :p)\n22:27:21    Matheod__  don't really use it :D\n22:27:23    andytuba  yeah basic\n22:27:32    Matheod__  Well in fact it's nice if you use keyboard\n22:27:49    Matheod__  well maybe this should put the expando into a 0.5 opacity\n22:27:51    Matheod__  or somehting like that\n22:28:02    Matheod__  anyway not the subject :D\n22:28:13    Matheod__  displayImageCaptions ?\n22:28:15    RES-github  [Reddit-Enhancement-Suite] andytuba pushed 1 new commit to master: http://git.io/ei2BsA\n22:28:15    RES-github  Reddit-Enhancement-Suite/master a6ce1da andytuba: no user-select on toggle/module buttons...\n22:28:27    andytuba  i think the default should be fade not whatever it is\n22:28:45    andytuba  what you said\n22:29:07    andytuba  captions is .. um \u2026 advanced?\n22:29:43    Matheod__  loadAllInAlbum ?\n22:29:50    andytuba  hmm\n22:29:57    andytuba  let\u2019s do basic\n22:30:01    andytuba  don\u2019t want to annoy the low-bandwidth people to omuch\n22:30:06    Matheod__  kk\n22:30:16    Matheod__  in the same time it's false by default\n22:30:22    andytuba  yeah\n22:30:26    andytuba  make it easier to find\n22:30:29    Matheod__  but it's basic\n22:30:39    Matheod__  showViewImagesTab basic\n22:30:44    Matheod__  autoplayVideo basic\n22:31:30    Matheod__  I was thinking about something\n22:31:39    Matheod__  maybe add a special style to advanced option\n22:31:40    Matheod__  when showed\n22:32:02    Matheod__  somehting like put the option name in italic maybe\n22:32:03    andytuba  give 'em a little danger iconoor hazard bar outline or something\n22:32:20    Matheod__  wow not a danger icon XD it's to aggresive :D\n22:32:24    andytuba  haha\n22:32:32    andytuba  lemme scroll through our icon webfont real quick\n22:32:52    andytuba  https://github.com/AdamWhitcroft/Batch/blob/master/Webfont/batch_webfont_reference.pdf incidentally\n22:33:28    Matheod__  you don't like the italic thing ?\n22:33:41    andytuba  heh there are no good fons for this\n22:33:43    andytuba  icons\n22:33:46    andytuba  yeah let\u2019s do italics\n22:34:26    Matheod__  or maybe put a ! in grey before\n22:34:29    Matheod__  hum italic is good\n22:34:32    Matheod__  lets go with italic\n22:36:22    Matheod__  So\n22:36:22    Matheod__  Keyboard Navigation\n22:36:34    Matheod__  The first 5 advanced\n22:36:58    andytuba  yeah all the css ones advanced\n22:37:15    Matheod__  autoSelectOnscroll no idea of what it does :D\n22:37:32    andytuba  if you scroll down using pageup/pagedown/space or mouse scroll\n22:37:38    andytuba  (or up)\n22:37:46    andytuba  then the first element you can see gets selected\n22:37:53    Matheod__  oh okay\n22:37:53    andytuba  i really like it\n22:37:55    Matheod__  so basic ?\n22:38:04    andytuba  mm\u2026 sure\n22:38:07    andytuba  personal bias =D\n22:38:12    Matheod__  mediaBrowseMode ?\n22:38:25    andytuba  that one needs a better description\n22:38:40    andytuba  a lot of people ask about that one though so basic\n22:39:00    Matheod__  yea\n22:39:10    Matheod__  If I didn't read someone talk about that\n22:39:15    Matheod__  I would never understand what it does\n22:39:19    Matheod__  so basic I suppose\n22:39:40    Matheod__  In same time it's good if some option people want to change are in advanced option, that educate people :D\n22:39:59    andytuba  heh\n22:40:00    Matheod__  so advanced or not ?\n22:40:06    andytuba  basic\n22:40:08    Matheod__  kk\n22:40:13    Matheod__  scrollOnExpando ?\n22:40:15    andytuba  especially because it\u2019s still kinda new\n22:40:17    Matheod__  kk\n22:40:25    andytuba  hmmm advanced\n22:40:37    Matheod__  scrollStyle (no idea of what it means)\n22:41:23    andytuba  when you use j/k to navigate up and down the page\n22:41:49    andytuba  it controls how the page gets scrolld\n22:42:20    Matheod__  yea but the option ?\n22:42:22    andytuba  directional is \u2014 it keeps scrolling a little when you hit the bottom of the page\n22:42:29    andytuba  page up/page down jumps a whole page\n22:42:32    andytuba  top keeps the current active item at the top\n22:42:33    andytuba  advnaced\n22:42:36    Matheod__  oh okay\n22:42:41    Matheod__  but does it not conflict with\n22:42:47    andytuba  hehe i guess i f i have to explain it a little then it\u2019s worth advnaced\n22:42:56    Matheod__  scrollOnExpandoonoff\n22:43:04    andytuba  scrollOnExpando i think advanced too\n22:43:16    Matheod__  read my previous message\n22:43:39    andytuba  do you mean \u2014 scrollOnExpando and scrollStyle features fighting with each other?\n22:43:43    Matheod__  yea\n22:43:49    andytuba  maybe\n22:46:00    Matheod__  commentsLinkNumbers ?\n22:46:02    Matheod__  I think basic\n22:46:06    andytuba  me too\n22:46:11    Matheod__  but commentsLinkNumberPosition advanced\n22:46:35    andytuba  yeah\n22:46:36    Matheod__  commentsLinkNewTab advanced too I think\n22:46:53    andytuba  hmmm yeah\n22:47:04    Matheod__  clickfocus too\n22:47:23    andytuba  yeah\n22:47:24    Matheod__  onHideMoveDown => Not sure what it does\n22:47:27    Matheod__  oh\n22:47:29    Matheod__  I get it\n22:47:29    Matheod__  Xd\n22:47:35    andytuba  =p\n22:47:38    Matheod__  There is something confusing\n22:47:43    Matheod__  because just before you talk about link in post\n22:47:50    Matheod__  and after about link\n22:47:55    Matheod__  as a post link\n22:47:57    Matheod__  wait\n22:48:05    Matheod__  as a link submitted on reddit\n22:48:38    Matheod__  onHideMoveDOwn => Advanced\n22:48:43    Matheod__  onVOteMoveDown => adv\n22:48:49    andytuba  yeah\n22:49:40    Matheod__  followLinkNewTabFocusonoff ?\n22:49:44    andytuba  adv\n22:49:49    Matheod__  It is hiden among shortcut XD\n22:50:28    Matheod__  wtf\n22:50:50    Matheod__  something is broken\n22:51:06    Matheod__  I don't have all option in keyboard navigation\n22:51:09    Matheod__  it end at prevpage\n22:51:18    andytuba  there, some things are hidden\n22:51:21    andytuba  like the #s\n22:51:28    andytuba  but console might also have broken\n22:51:31    Matheod__  oh\n22:51:33    Matheod__  noconfig\n22:51:35    Matheod__  xd\n22:51:52    Matheod__  Wait\n22:51:57    Matheod__  I used hidden: xx\n22:52:01    Matheod__  maytbe it was noconfig :D\n22:52:31    Matheod__  oh\n22:52:40    Matheod__  the whole category is hidden\n22:52:45    Matheod__  so my hidden: true is useless\n22:53:12    Matheod__  What the best ?\n22:53:17    Matheod__  Remove my hidden: true\n22:53:18    Matheod__  OR\n22:53:22    Matheod__  replace it with noconfig\n22:53:47    Matheod__  I think replace it with noconfig, if one day someone change the hidden attribute of settingNavigation\n22:55:07    andytuba  i think noconfig and advnaced should be separate concepts\n22:55:19    Matheod__  you don't get what I said :D\n22:55:34    Matheod__  modules['settingsNavigation'] = {  moduleID: 'settingsNavigation',  moduleName: 'RES Settings Navigation',  category: 'UI',  description: 'Helping you get around the RES Settings Console with greater ease',  hidden: true,  options: {   advOptions: {    type: 'boolean',    value: false,    description: 'By default, RES only hide advanced options. You can turn on this if you want to see advanced options',    noconfig: true   }  },\n22:55:35    andytuba  is hidden what you just added, or is hidden a thing you added earlier?\n22:55:44    Matheod__   noconfig: true\n22:55:52    Matheod__  I putted hidden: true\n22:56:06    Matheod__  anyway not important\n22:56:26    Matheod__  god github for windows is boring to not add a refresh button to refresh modified file on commit\n22:56:40    andytuba  try ctrl+r\n22:56:41    Matheod__  have to wait 1 min or run console ><\n22:56:45    andytuba  surprised it doesn\u2019t happen automatically\n22:56:54    andytuba  sourcetree does it auto\n22:56:59    Matheod__  Well it take some time sometimes\n22:57:26    Matheod__  Never Ending Reddit\n22:57:53    Matheod__  which one should be adv ?\n22:58:25    Matheod__  afk 1min\n22:59:38    Matheod__  re\n23:00:22    Matheod__  notifyWhenPausedonoff => advanced for same reason than previous ?\n23:00:46    Matheod__  reversePauseIcononoff => don't understand what it does\n23:00:56    Matheod__  showServerInfoonoff => seem advanced but what the Pi server Xd\n23:01:16    Matheod__  I don't know for pauseAfterEvery\n23:01:17    andytuba  notifywhenpaused i would leave basic for discoverability\n23:01:21    andytuba  oh wait\n23:01:22    andytuba  notify advanced\n23:01:23    Matheod__  hideDupes is basic I think\n23:01:26    andytuba  pauseafterevery \u2014 basic for discoverability\n23:01:27    andytuba  yeah same for dupes\n23:01:33    andytuba  showserver, reversepause - def adv\n23:01:50    andytuba  reversePauseIcon  switches  (||)  vs  (>) icons  for \"on/off\"\n23:01:58    andytuba  it\u2019s a minor point of contention between me and hb =p\n23:02:47    Matheod__  Oh\n23:02:48    Matheod__  Okay XD\n23:02:51    Matheod__  ahah\n23:03:21    Matheod__  I prefer reversePauseIcon off\n23:03:29    andytuba  heh\n23:03:32    Matheod__  wait\n23:03:57    Matheod__  yea\n23:04:00    Matheod__  I prefer it off\n23:04:10    Matheod__  I suppose hb also prefer it off :D\n23:04:19    andytuba  yep\n23:04:34    andytuba  however my dayjob involves programming video players, so i have strong feelings\n23:04:35    Matheod__  defaultPosts => adv\n23:04:53    Matheod__  tagsPerPage => No idea of what it does\n23:04:59    andytuba  beats me\n23:05:09    andytuba  yeah i think defaultposts and tagsperpage both adv\n23:05:20    andytuba  oh i know what tagsperpage\n23:05:27    andytuba   /r/dashboard#userTaggerContents\n23:05:30    andytuba  how many users\n23:05:32    Matheod__  Oh\n23:05:33    Matheod__  Okay XD\n23:05:55    Matheod__  Should put user in bold :D\n23:06:19    Matheod__  or precise it's on the usertag tab\n23:06:21    andytuba  yeah\n23:06:57    andytuba  bleh on user tagger module\n23:07:23    andytuba  needs minor overhaul because UX and data storage issues but it\u2019s so legacy that i\u2019m scared of touching it\n23:07:49    Matheod__  :D\n23:08:14    Matheod__  legacy in the term of \"core feature\" ?\n23:08:55    Matheod__  hideLEConoff advanced\n23:09:43    Matheod__  and only that adv\n23:10:39    andytuba  openorder maybe\n23:10:42    andytuba  meh\n23:10:56    andytuba  yeah hidelec adv only\n23:12:39    andytuba  hmmm i kinda wanna make a semi-advanced\n23:12:51    andytuba  like advanced: false, 1, 2, 3, true\n23:12:57    andytuba  undefined/false\n23:13:40    andytuba  true is \"only show if 'show advanced options' is turned on\"\n23:14:09    Matheod__  hum\n23:14:12    andytuba  0b11 is \"hide in module options and in search\"\n23:14:15    Matheod__  Start to be complicated XD\n23:14:15    andytuba  0b10 is \"hide in module\"\n23:14:18    andytuba  0b001 is \"hide in search\"\n23:14:29    andytuba  and then we can add other bitemasks later\n23:14:33    andytuba  bitmasks\n23:14:36    Matheod__  in fact some option should be higlighted\n23:14:43    Matheod__  I mean most important option\n23:14:45    Matheod__  but still complicated\n23:14:48    Matheod__  the user will be lost XD\n23:14:54    andytuba  hmm yeah\n23:15:07    Matheod__  openorder definitively not adv for me\n23:15:15    Matheod__  Style Tweaks\n23:15:18    andytuba  yeah that seems basicky\n23:15:29    andytuba  commentrounded adv\n23:15:33    andytuba  commenthoverborder adv\n23:15:38    Matheod__  agrreee\n23:15:39    andytuba  commentindent adv\n23:15:42    andytuba  continuity adv\n23:15:51    andytuba  lightswitch adv\n23:15:57    andytuba  usesubredditstyleindarkmode   definitely adv\n23:16:07    Matheod__  dunoo what continuityon do but seem adv\n23:16:18    andytuba  continuity is um..\n23:17:24    andytuba  oh  i think it adds colors to the comment boxb orders\n23:17:26    andytuba  on the left\n23:17:39    Matheod__  kk\n23:17:45    Matheod__  need a demo picture in the future :D\n23:17:46    andytuba  color tels you how deep you are in the tree and helps you sort out context\n23:17:49    andytuba  ikr\n23:17:54    Matheod__  ikr ?\n23:17:55    andytuba  like when tumblrs quote each other 20 times\n23:18:03    andytuba  \"i know, right?\"  <\u2014 yes definitely\n23:18:06    Matheod__  kk\n23:18:24    andytuba  kinda like    \"si, je suis d\u2019accord\"\n23:18:34    Matheod__  kk\n23:18:41    Matheod__  visitedStyle adv\n23:18:44    andytuba  can you use d\u2019acord that way?\n23:18:49    andytuba  to mean like  \"i agree\"?\n23:19:02    Matheod__  D'accord means I agree\n23:19:13    andytuba  yay i remember 3rd grade french\n23:19:46    Matheod__  But I translate \"I know, right\" more than : \"Je sais, n'est-ce pas ?\"\n23:19:48    Matheod__  wait\n23:19:56    Matheod__  there something wrong in the way I write it\n23:19:58    Matheod__  forget about that XD\n23:20:11    Matheod__  something seems wrong but dunno what :D\n23:20:11    andytuba  oh i think you got the essence of it\n23:20:21    Matheod__  so visitedStyle adv\n23:20:24    andytuba  yeah\n23:20:46    Matheod__  showExpandos => No idea of what it does\n23:20:56    andytuba  \"compressed link display\" is a reddit preference\n23:21:06    andytuba  it squishes the post a lot\n23:21:08    andytuba  and hides the expando button\n23:21:18    Matheod__  kk\n23:21:20    Matheod__  so adv or not ?\n23:21:29    andytuba  adv\n23:21:34    Matheod__  hideunvotable adv\n23:21:43    andytuba  actually i think that one should be default on\n23:21:48    andytuba  or at least basic\n23:21:54    Matheod__  so lets be basic\n23:22:06    Matheod__  ShowFullLinkFlair => adv in next version, do you agree ?\n23:22:11    andytuba  yeah\n23:22:28    andytuba  hmm when flair is abbreviated currently is it shown in the title?\n23:22:48    Matheod__  humm\n23:22:49    Matheod__  don't know\n23:22:51    Matheod__  I think\n23:22:53    Matheod__  but not sure\n23:22:56    andytuba  it appears yes\n23:23:00    andytuba  okay\n23:23:32    Matheod__  colorBlindFriendly adv\n23:23:35    Matheod__  because it's useless XD\n23:23:38    Matheod__  only one icon change XD\n23:23:41    andytuba  that\u2019s useful!\n23:23:48    andytuba  aren\u2019t there some more things?\n23:23:50    Matheod__  no\n23:23:52    Matheod__  I checked\n23:24:02    Matheod__  or I missed soemthing\n23:24:15    andytuba  huh no i think the icon is the only thing\n23:24:21    andytuba  well that is still a valuable thing\n23:24:40    andytuba  i\u2019ve taught a few people in /r/colorblind about it and a bunch of people were liek \"whoa awesome thanks\"\n23:24:57    Matheod__  In the same time\n23:24:58    andytuba  but it\u2019s a 10% case so \u2026 hmm \u2026 adv\n23:25:02    Matheod__  I could make their life better\n23:25:12    Matheod__  by making them a extension allowing them to see all the web\n23:25:15    Matheod__  in better color\n23:25:17    andytuba  oh, those exist too\n23:25:21    Matheod__  yea\n23:25:28    Matheod__  I tested one but it was quite old\n23:25:36    Matheod__  well not so old\n23:25:42    Matheod__  but only worked on image\n23:25:48    Matheod__  not on the full website\n23:25:53    Matheod__  but in fact it's really easy\n23:26:01    Matheod__  with the css filter functionnality\n23:26:09    andytuba  oh that\u2019s true\n23:26:56    Matheod__  scrollSubredditDropdown => don't understand\n23:26:56    andytuba  scrollSubredditDropdown adv\n23:27:09    Matheod__  floatingSideBar => adv\n23:27:10    Matheod__  kk\n23:27:33    andytuba  scrollSubredditDropdown is a \"this setting is good if two other settings in different modules are disabled\" poweruser thing\n23:27:54    Matheod__  kk\n23:28:05    Matheod__  USDateFormatonoff => does it conflict with my localdate module ?\n23:28:20    Matheod__  oh no\n23:28:21    Matheod__  kk\n23:28:27    Matheod__  just understand what the module do\n23:28:32    Matheod__  I think all option are advanced, no ?\n23:28:42    andytuba  hardIgnore is basic\n23:28:53    andytuba  hoverInfo basic\n23:28:58    Matheod__  hardignore ?\n23:29:03    Matheod__  I don't have this setting\n23:29:09    Matheod__  where are you\n23:29:10    andytuba  which module are you in\n23:29:12    andytuba  haha\n23:29:13    Matheod__  subreddit info\n23:29:18    andytuba  first usdate i saw is usertagger\n23:29:20    andytuba  i\u2019ll go to sub info\n23:29:28    andytuba  yeah all adv\n23:29:28    Matheod__  I do all module in console order :D\n23:29:36    andytuba  i lost my context\n23:29:43    andytuba  and my brain, apparently\n23:30:04    Matheod__  Subreddit Manager\n23:30:17    andytuba  foo\n23:30:23    andytuba  subredditShortcut adv?\n23:30:24    Matheod__  WHY THE FUCK THE CONSOLE RANDOMLY CLOSE ITSELF ><\n23:30:31    andytuba  it\u2019s a little twitchy sometimes\n23:30:52    Matheod__  Yea adv subredditShortcutonoff\n23:30:59    andytuba  i think the rest leave basic\n23:31:21    Matheod__  agree\n23:31:22    andytuba  or hypothetical \"hide in module, show in search\" value of advanced\n23:31:26    Matheod__  Uppers and Downers Enhanced\n23:31:57    andytuba  hmm   all the css  advanced\n23:32:02    Matheod__  yea sure\n23:32:04    andytuba  forceVisible basic for visibility\n23:32:07    Matheod__  kk\n23:32:17    andytuba  same for showSigns i guess\n23:32:25    andytuba  applyToLinks.. basic\n23:32:39    Matheod__  so only style in adv\n23:32:45    andytuba  no showsigns is a goofy ass thing\n23:32:53    Matheod__  ?\n23:33:02    andytuba  i kinda wanna dump it in advanced\n23:33:03    Matheod__  hard to translate XD\n23:33:08    Matheod__  kk\n23:33:09    Matheod__  advanced\n23:33:11    Matheod__  I agree\n23:33:16    andytuba  and we\u2019ll see if anyone complains\n23:33:26    andytuba  it would really help if we had google analytics in RES lready\n23:33:26    Matheod__  bitcointip => useless XD\n23:33:36    Matheod__  Yea somebutton :\n23:33:40    Matheod__  \"I love this feature\"\n23:33:44    Matheod__  \"I hate this feature\"\n23:33:45    andytuba  it might get resurrected later but yeah let\u2019s ignore it for now\n23:33:53    Matheod__  \"I don't understand this feature\"\n23:34:09    andytuba  mostly i want to see how many people have certain disabled options turned on\n23:34:12    Matheod__  User Highlighter\n23:34:17    Matheod__  yea true\n23:34:19    andytuba  css adv\n23:34:22    Matheod__  agree\n23:34:29    andytuba  i think everything else basic\n23:34:34    andytuba  ehhh\n23:34:35    Matheod__  agree too\n23:34:36    andytuba  autocolorusing adv?\n23:34:42    andytuba  i feel like keep it out for visibility maybe\n23:34:50    Matheod__  maybe autoColorUsing adv\n23:34:51    Matheod__  yea\n23:34:54    Matheod__  hum\n23:35:07    andytuba  adv\n23:35:08    Matheod__  adv\n23:35:09    Matheod__  yea\n23:35:14    andytuba  i really only put it in as a \"legacy support\" feature\n23:35:24    andytuba  new installs can go find it if they want it\n23:35:36    andytuba  did we already do user tagger\n23:36:12    Matheod__  Wtf\n23:36:15    Matheod__  autoColorUsing option\n23:36:18    Matheod__  does not have values\n23:36:23    andytuba  lol what really\n23:36:24    Matheod__  no we didn't do usertagger\n23:36:24    andytuba  whooooops\n23:36:32    Matheod__  how does it work XD\n23:36:41    andytuba  loaddynamicoptions\n23:36:49    Matheod__  xd\n23:36:56    Matheod__  User Tagger\n23:37:03    Matheod__  hardIgnoreonoff ?\n23:37:11    andytuba  basic\n23:37:16    andytuba  needs to be beter evangelized too\n23:37:19    andytuba  educated\n23:37:33    andytuba  coloruser, storesourcelink, css, gildcomments, highlightbutton, more css\n23:37:37    Matheod__  storeSourceLinkonoff ?\n23:37:38    andytuba  vwtooltip\n23:37:42    andytuba  all adv\n23:37:47    Matheod__  kk\n23:37:54    andytuba  usdateformat \u2026 ehh basic?\n23:38:01    andytuba  or hide in module show in search maybe\n23:38:30    Matheod__   (i.e. [+6]) rather than [vw]\n23:38:32    andytuba  there really needs to be a [vwShown] option\n23:38:36    Matheod__  miss a )\n23:38:39    Matheod__  and don't understand it\n23:38:45    andytuba  the ) is there\n23:38:52    andytuba  andytuba [+3]\n23:38:54    andytuba  turn that option off\n23:38:57    andytuba  now it's\n23:38:58    andytuba  andytuba [vw]\n23:39:46    Matheod__  why vw ><\n23:39:51    andytuba  voteweight\n23:39:56    andytuba  reallllly old module\n23:40:01    Matheod__  don't understand xd\n23:40:05    Matheod__  +3 is the vw, no ?\n23:40:07    andytuba  yeah\n23:40:13    andytuba  i mean it will literally show   \"andytuba [vw]\"\n23:40:23    Matheod__  Oh\n23:40:24    andytuba  and you can hover over it to show the +3\n23:40:25    Matheod__  it add a +\n23:40:29    Matheod__  when it positive\n23:40:30    andytuba  no it hides the number\n23:40:31    Matheod__  it's that ?\n23:40:39    andytuba  yeah\n23:40:39    Matheod__  don't udnerstand XD\n23:40:45    andytuba  just turn it on and reload the page\n23:40:48    andytuba  after voting on someboy\n23:42:00    Matheod__  wtf\n23:42:06    Matheod__  it broken now ><\n23:42:21    andytuba  whomp whomp\n23:42:24    andytuba  errors in console?\n23:42:59    Matheod__  Uncaught TypeError: Cannot read property 'classicyotas' of null\n23:43:04    Matheod__  YOu know what it means :D\n23:43:24    Matheod__  line 404 (not a joke)\n23:43:35    andytuba  uh oh\n23:43:37    andytuba  is that in usertagger\n23:43:42    Matheod__  yea\n23:44:09    andytuba  it means .tags didn\u2019t get loaded right\n23:44:21    andytuba  which is \u2026 weird ...\n23:44:31    Matheod__  I think it's realted to the recent update on lowercase\n23:44:33    Matheod__  something like that\n23:44:44    andytuba  the one i put in a few days ago?\n23:45:46    Matheod__  maybe\n23:45:50    Matheod__  It's really strange\n23:45:54    Matheod__  sometime it work some time it doesn't\n23:46:03    andytuba  are you hitting refresh, refresh, refresh?\n23:46:08    andytuba  maybe it\u2019s a tming issue\n23:46:10    Matheod__  no\n23:46:23    Matheod__  http://www.reddit.com/r/worldnews/comments/26yr0o/rhino_poacher_shot_dead_by_forest_guards_in/#\n23:46:29    Matheod__  Try to upvote ClassicYotas\n23:46:31    Matheod__  and look console\n23:47:06    andytuba  yep broke\n23:47:09    andytuba  why broke. :(\n23:47:17    Matheod__  Just to finish the adv things\n23:47:26    Matheod__  USdateformat, vwnumber and vwTooltip adv ?\n23:47:40    andytuba  hmmm yeah\n23:47:54    andytuba  unsure about vwnumber but .. we can change it later\n. People will never know why there is a cookie in title :p\n. updated\n. > If a user goes to /#!settings/someModule/hiddenOption, then of course show the hiddenOption.\nHow to inform the user about that ?\n\nAlso not a fan of : \n\nShould other hidden options in the module be revealed as well?\n\nBut that my depend of my previous question.\n. > Hmm.. flash the \"advanced options\" checkbox/label?\n\nHum, no, I really don't thing this way is a good idea.\n. I have no way to update the search when checking/unchecking the checkbox. I can only add a link Some results have been hidden because they was advanced options and you decided to not show advanced option. Click here if you want to enable advanced options. which restart the search but using directly the checkbox will not work :/\nedit : I'm stupid\n. Search is now compatible with advanced options \\o/\n. This is no longer a WIP \\o/\n. Wrong description in alert : The advanced mode stay until we reload the tab.\n\nAndytuba suggest to use sticky notification instead of alert\n. Text updated. But I will not use notification because it's hide the advanced options checkbox.\n. > 20:39:27   andytuba  okay so here's my main concern\n\n20:39:38    andytuba  somebody gets linked into advanced options on a.. let's say weekly basis\n20:39:46    andytuba  but they don't want to see advanced options all the time\n20:39:49    andytuba  and they don't want to see the popup all the time\n20:39:59    andytuba  you use alert, they see the popup a lot, and then they come complain in /r/Enhancement\n20:40:14    andytuba  you can disable that notification, but you can't disable the alert\n20:40:26    Matheod_  Well you don't click on link every day XD\n20:41:02    andytuba  it's still gonna be \"every time i look at an advanced option\" and I don't want to deal with answering that all the time\n20:41:27    andytuba  if the concern is hiding the \"advanced options\" checkbox then we can move the checkbox or we can move the notification\n20:41:41    andytuba  (we have had requests to move the notification down anyway to avoid hiding the userbar)\n. Fixed by adding a checkbox to disable the notification.\n. Hum, it was more at the felling. But it's something like : \nFirst, all css option are in advanced (I.e. : color, etc.).\nThen, all option which concern a minority, or hard to understand and not important are in advanced.\nBut we have done some exeption for \"educational\" purpose.\n\nBut the best way for you to check if there is change you want, is to load this and enable the advanced option checkbox : all advanced option will be in italic. \n. I'm not sure for the User Highlighter module. Now there is the color input, I no longer think they should be advanced (exept for the hover color). And maybe the togglebutton to enable/disable highlight should even be advanced.\n. Merged upstream into advancedOptions to make it mergeable again.\n. Related #970\n. AFIK there is no way to set a from and to time, no ?\n. > 18:06:58   matheod_  http://www.reddit.com/search?q=(and+title%3A%27sunset%27+timestamp%3A1354348800..1354521600)&syntax=cloudsearch\n\n18:07:05    andytuba  that looks right\n18:07:59    matheod_  it don't work with me\n18:08:00    matheod_  http://www.reddit.com/r/Enhancement/search?q=test+timestamp%3A1302416318..1402416318&sort=new&t=all\n18:08:14    andytuba  try adding syntax=cloudsearch\n18:08:17    andytuba  to your query\n18:09:21    matheod_  still doesn't work\n18:09:26    matheod_  http://www.reddit.com/r/Enhancement/search?q=test+timestamp%3A1354348800..1354521600&sort=new&t=all&syntax=cloudsearch\n18:10:10    andytuba  i dunno man\n18:10:19    andytuba  take the thing that works and adapt that to what you want\n18:10:51    andytuba  like, gradually tweak/add bits to it\n18:11:22    matheod_  http://www.reddit.com/search?q=%28and+title%3A%27a%27+timestamp%3A1354348800..1354521600%29&syntax=cloudsearch\n18:11:23    matheod_  Hum\n18:11:27    matheod_  it's a very specific syntax\n18:11:34    matheod_  it's strange\n18:11:58    matheod_  seem to work only with title\n18:12:09    matheod_  Not sure we can really implement this :/\n18:12:26    andytuba  shucks\n18:13:57    andytuba  http://www.reddit.com/r/redditdev/comments/1hpicu/whats_this_syntaxcloudsearch_do/\n18:14:17    andytuba  that looks promising\n18:16:18    andytuba  (and author_field:\"matheod\" timestamp:##\u2026## subreddit:restests)\n18:16:25    andytuba  &syntax=cloudsearch\n18:16:28    andytuba  that'll prob get you somewher\n18:16:44    andytuba  https://github.com/reddit/reddit/blob/master/r2/r2/lib/cloudsearch.py#L172-L326\n. The idea of mythological figures is nice, but I feel like it's not easy name to remember, and it's easy to confound two different name. So we lose a part of the utilty of giving name to release.\n. #373737\n. Well that what I done with 8095f2c (I choose the outside color (i.e. the first arrow), don't know if it was the best choice).\n. @andytuba : @honestbleeps said there is no real reason to use opacity\n\nEdit : And people who really want to use opacity can do it with inline console.\n. So, not so easy to correct ? :D\n. \n. The problem also appear here : \n\n. The problem also appear here : \n\n. Work for me (I justed the bug in the screen).\n. Work for me (I justed the bug in the screen).\n. In fact, it didn't work without your PR too.\nedit : I found where the problem was. I suppose @honestbleeps have a big screen :D\n. https://gist.github.com/matheod/71c92ff59a8b348ead58\n. Well the idea is to have a way to easily backup/store settings. But after thinking, it's just a duplicate of #712.\n. \n. \n. Notification after voting last not enough time IMO.\n. No special notification when commenting/submit a comment ?\n. I don't like the way the undo vote work. First because it's took too many time to revert the vote, then because there is no additional message, and third : Why not just simply prevent the vote with css and a condition in keyboardnav ?\n. I think you should make only one option about vote : something like disableVote which will prevent voting by clicking or with keyboard when enabled. Because yes, hideVOteButtons and undoVOteAutomatically looks duplicate, but it must prevent vote by clicking and by keyboard.\n. > Well, there's already the notification when you start typing the comment.\n\nHum, I don't remember any other notification exept the one when we load the page. I might be wrong, I don't have time to re test for the moment.\n. Then you should change the name :)\n. why not just disableVoteButtons ?\n. Work now ! We can now clean betteReddit easily ! \\o/\n. Work now ! We can now clean betteReddit easily ! \\o/\n.   you can\u2019t RESStorage.getItem or setitem until storage has been loaded already  \n\n I would recommend wrapping everything in migrate.js inside some function, then calling the function from the RESStorageLoaded or whatever\n.   you can\u2019t RESStorage.getItem or setitem until storage has been loaded already  \n I would recommend wrapping everything in migrate.js inside some function, then calling the function from the RESStorageLoaded or whatever\n. ```\nRESmigrateData = function() {\n    var RESOptionsVersion = RESStorage.getItem('RESOptionsVersion');\n    switch (RESOptionsVersion) {\n        case null: // Before migrate.js was implanted (i.e. before v4.4.0)\n            RESOptionsMigrate('betteReddit', 'searchSubredditByDefault', 'searchHelper', 'searchSubredditByDefault');\n        case 1:\n            RESOptionsMigrate('betteReddit', 'foo', 'searchHelper', 'bar');\n                    RESOptionsMigrateFunctions.foo();\n                     RESOptionsMigrateFunctions.bar();\n        case 2:\n    case 3:\n\n    case 4:\n\n    default:\n        RESStorage.setItem('RESOptionsVersion', RESOptionsLastVersion);\n    break;\n}\n\n}\nRESOptionsMigrateFunctions = {\n    foo: function(){},\n    bar: function(){}\n}\n.\nRESmigrateData = function() {\n    var RESOptionsVersion = RESStorage.getItem('RESOptionsVersion');\n    switch (RESOptionsVersion) {\n        case null: // Before migrate.js was implanted (i.e. before v4.4.0)\n            RESOptionsMigrate('betteReddit', 'searchSubredditByDefault', 'searchHelper', 'searchSubredditByDefault');\n        case 1:\n            RESOptionsMigrate('betteReddit', 'foo', 'searchHelper', 'bar');\n                    RESOptionsMigrateFunctions.foo();\n                     RESOptionsMigrateFunctions.bar();\n        case 2:\n    case 3:\n\n    case 4:\n\n    default:\n        RESStorage.setItem('RESOptionsVersion', RESOptionsLastVersion);\n    break;\n}\n\n}\nRESOptionsMigrateFunctions = {\n    foo: function(){},\n    bar: function(){}\n}\n```\n. Remember to merge #1188 first.\n. Remember to merge #1188 first.\n. @honestbleeps @andytuba Can I merge this (I mean, after I resolved the conflict) ?\n. Don't work with resneverending due to saving by url, #page=x mess up\n. Don't work with resneverending due to saving by url, #page=x mess up\n. @andytuba : Is there a purge of hidden link or are they keep forevere ? (to know if I have to handle the migration of data)\n. @andytuba : Is there a purge of hidden link or are they keep forevere ? (to know if I have to handle the migration of data)\n. See #1260 \n\nif a comment or post has been edited since a user saved it, allow them to save the edited version as a different item\n. > 02:26:32   andytubaud  it would be interesting to create a modules['currentSubredditInfo']\n02:26:45    andytubaud  utility module\n02:27:27    andytubaud  and it would act as the interface between other modules and subreddit settings\n02:27:36    matheod_  yea\n02:27:39    matheod_  I may do that\n02:27:47    matheod_  hidden module ?\n02:27:53    andytubaud  modules['currentSubredditInfo'].getFlagValue('NightModeCompatible')\n02:27:58    matheod_  yea\n02:28:06    andytubaud  yeah hidden\n. Well the idea would be to keep a logic on the css property used.\nI thinked of z-index for bolean value.\n. > the main reason i see for this is to protect inattentive mods who only edit content in the sidebar from accidentally blowing away the config flags.\n\nYea, moreover, the #/RES_SR_Config/NightModeCompatible thing is 100% related with the CSS, so it should be directly in the css.\n. Just an update on this => flag should use the content css property because it allow any text, so more flexible :)\n. Personnaly, I don't like. But it's a personnal choice :p\n. Personnaly, I don't like. But it's a personnal choice :p\n. I think you should just:\n- Reset to A-Z label when opening the edit shortcut.\n- Switch to Z-A when clicking on A-Z\n- Switch to A-Z when clicking on Z-A\nBecause I think it's not really usefull to try to see if the data are already sorted.\n(edit : After it's easy, it's just sort the data and see if the string changed)\n. I think you should just:\n- Reset to A-Z label when opening the edit shortcut.\n- Switch to Z-A when clicking on A-Z\n- Switch to A-Z when clicking on Z-A\nBecause I think it's not really usefull to try to see if the data are already sorted.\n(edit : After it's easy, it's just sort the data and see if the string changed)\n. The B problem is strange. The sorting algorithme put them in lowercase https://github.com/githue/Reddit-Enhancement-Suite/blob/editShortcutUX/lib/modules/subredditManager.js#L969-L970.\n. The B problem is strange. The sorting algorithme put them in lowercase https://github.com/githue/Reddit-Enhancement-Suite/blob/editShortcutUX/lib/modules/subredditManager.js#L969-L970.\n. I wonder how many time it would take to do that on post with lots of comments.\n. I wonder how many time it would take to do that on post with lots of comments.\n. Is this a good thing to get the parent comment of t1_ci1rrlw for example ?\n$(\".id-t1_ci1rrlw\").closest('.thing:has(.id-t1_ci1rrlw)')\n. Is this a good thing to get the parent comment of t1_ci1rrlw for example ?\n$(\".id-t1_ci1rrlw\").closest('.thing:has(.id-t1_ci1rrlw)')\n. This return the same element (i.e. .id-t1_ci1rrlw).\n. This return the same element (i.e. .id-t1_ci1rrlw).\n. I could also use : \n$(\".id-t1_ci1rrlw\").closest('.thing:not(.id-t1_ci1rrlw)')\nWhich seem to work, but I don't know if I'm sure it will never catch the child instead of the parent.\n. I could also use : \n$(\".id-t1_ci1rrlw\").closest('.thing:not(.id-t1_ci1rrlw)')\nWhich seem to work, but I don't know if I'm sure it will never catch the child instead of the parent.\n. I'm stupid :D\n. I'm stupid :D\n. > Turn off all/most RES functionality\nHum good luck with that oO\nEdit : In fact it's seem easy by using sessionStorage and prevent the res initialisation. But then, if res is disabled, you can't run easily a module to hide private data :D\n. > Turn off all/most RES functionality\nHum good luck with that oO\nEdit : In fact it's seem easy by using sessionStorage and prevent the res initialisation. But then, if res is disabled, you can't run easily a module to hide private data :D\n. :+1: \n. :+1: \n. Add an option to disable animation of notification maybe ?\n. Add an option to disable animation of notification maybe ?\n. Updated\n. Ahah, It check also for the checkWiki module, so there will never be 0 missing options documentations :D\n. Ahah, It check also for the checkWiki module, so there will never be 0 missing options documentations :D\n. hue vs score plot\n. Yes they are separated. I love your idea to color the rank, I will update this later.\nEdit : Of course I will keep color the score for comment since there is no rank :)\n. Hum in fact, after some test, it look like a little strange : \n\nI don't know what other think. (@andytuba ?)\n. It look beter now.\nHere at 50% staturation : \n\nHere at 75% saturation : \n\nI think I prefer at 75%. But it's still not centered :/\nEdit : in fact it's 'centered' but the font is not adapted.\n. The problem with using less color, it's it reduce the number of possibility (not sure if you see what I means).\nAn other possibility, would be to totally refactor this, and allow the user to configure step:\n0-10 => green\n10-50 =>yellow\n50-100 => Orange\n100+ => red\nThe inconvenient is with the actual system, each score have a different color, with this, it reduce greatly the number of possibility.\n. It's me or it's better without border-radius ?\n\n. > circle border\n\nOh god, just tested that and it was the worse idea of all the life :D\n. This should be okay now.\n. \n\n. \n\n\n\n\n. Nice idea !\n. Moved into #1290\n. Ahah :D\n. http://www.reddit.com/r/Enhancement/comments/29tins/feature_request_cakeday_notification/\n\nWait, cake day is not a fixed date ? oO\n. > 00:09:11   matheod  I was thinking about something\n\n00:09:26    matheod  when on /r/xxx/new\n00:09:29    matheod  clinking on a post\n00:09:36    matheod  and then cliking on the subreddit icon\n00:09:42    matheod  this bring us back to /r/xxx/\n00:09:55    matheod  maybe an option to bring us back on /r/xxx/new could be nice\n00:10:24    andytuba  i was thinking of a module which would let you set preferred new/hot/top/etc. per subredit that would change the subreddit icon to /new/top/whatever\n00:10:32    andytuba  and doing it automatically is a super good idea\n00:10:57    matheod  I was thinking of using\n00:11:07    matheod  I have a \"trou de m\u00e9moire\"\n00:11:20    matheod  \"memory hole\" ? I suppose it's not like that we said in english :D\n00:11:29    andytuba  like, you forgot something?\n00:11:29    matheod  sessionStorage\n00:11:31    matheod  yea\n00:11:40    andytuba  uh  a lapse?  um  there is a good word for this and I forgot it\n00:11:40    andytuba  lol\n00:11:43    andytuba  \"tip of my tongue\"\n00:11:53    matheod  hum not exatly that\n00:12:01    matheod  we have an expression for that\n00:12:06    matheod  \"sur le bout de ma langue\"\n00:12:06    andytuba  presque vu\n00:12:09    andytuba  ?\n00:12:28    matheod  tip of my tongue means we know we know it but we can't success to remember it\n00:12:31    andytuba  yeah\n00:12:55    andytuba  hmm maybe \"my mind blanked\"  is what you're looking for\n00:12:58    andytuba  i think that's an americanism\n00:12:59    matheod  yea\n00:13:06    andytuba  like  \"i knew what i wanted to say and then i forgot it\"\n00:13:12    andytuba  or mindfart\n00:13:27    matheod  We can said \"j'ai un blanc de m\u00e9moire\" too I think\n00:13:31    matheod  but not sure\n00:13:33    andytuba  anyway, storing \"most recent sort used for subreddit/multireddit\" ?\n00:13:37    matheod  yea\n00:13:38    matheod  so\n00:13:43    matheod  using sessionstorage\n00:13:55    matheod  to save the last sort of the subreddit\n00:14:04    matheod  and replace the logo link\n00:14:21    matheod  sessionstorage play the good role of keeping it only of the actual tab\n00:14:50    matheod  but this should be disabled by default\n00:15:05    matheod  And I should put all this stuff in a logo module\n00:15:11    andytuba  how about https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1218\n00:15:12    matheod  with the issues\n00:15:34    andytuba  i think a \"preferred subreddit sort\" module could encompass that idea and mine too\n00:15:52    matheod  well mine is less restrictive\n00:16:09    matheod  Both idea can be coded\n00:16:18    andytuba  yeah i'm thinking they can coexist too\n00:16:21    andytuba  in the same module\n00:16:25    matheod  hum\n00:16:29    matheod  I was goin got said\n00:16:36    matheod    And I should put all this stuff in a logo module\n00:16:39    matheod  with the issues\n00:17:00    matheod  1028\n00:17:20    andytuba  oh that's a different logo though\n00:17:23    andytuba  *button\n00:17:32    andytuba  but they are right next to each otehr\n00:17:38    matheod  Look at the issue :)\n00:17:43    matheod  oh no\n00:17:44    matheod  yea\n00:17:45    andytuba  reddit logo, not subreddit logo\n00:17:45    matheod  sorry\n00:17:48    matheod  yea\n00:17:56    matheod  but as all is about logo\n00:18:01    matheod  I was thinking about a module for that\n00:18:05    matheod  But if you rpefer\n00:18:15    matheod  a module with your idea + the sessionstorage thing could work too\n00:18:45    andytuba  could also have cross-module interaction too\n00:19:07    andytuba  like if reddit logo links back to the subreddit, but \"use last subreddit post listing sort\" module is enabled, use that link instead\n00:22:32    andytuba  man that is a super cool idea to automatically stash sort in session storage\n00:25:30    matheod  yea\n00:25:34    matheod  So you prefer what\n00:25:42    matheod  a module for your idea + session storage thing\n00:25:44    andytuba  i am kinda uncomfortable suggesting it but that an interesting extension to #1185: store  { \"USERNAME\": { seenRecentlyInSubreddits: [ \"sub1\", \"sub2\", \"sub3\" ] }\n00:25:46    matheod  and an other module for\n00:26:03    matheod  1028\n00:26:05    andytuba  and searching on /r/sub1+sub2+sub3/search?q=author:USERNAME\n00:26:13    matheod  or a module for the sessionstorage thing + 1028 and a module for your thing\n00:26:19    andytuba  i think #1\n00:26:55    andytuba  subreddit sort + sessionstorage \"auto-pick sort\" in one module, reddit logo link in another\n00:27:05    matheod  For #1185\n00:27:24    matheod  why keep an history ?\n00:27:25    andytuba  and maybe even on that subreddit sort module, rewriting links to a subreddit on click\n00:27:26    matheod  Only the last matter\n00:27:45    andytuba  just a history of recently\n00:27:56    andytuba  in case you saw the same person in several subreddits\n00:28:00    andytuba  and want all of them\n00:28:06    andytuba  e.g. airz23 posts in a few subs\n00:28:19    andytuba  and i go back and forth between /r/airz23 and /r/talesfromtechsupport\n00:28:24    matheod  wait\n00:28:28    matheod  there is a problem for that\n00:28:37    matheod  I don't know which user I want to trace\n00:28:42    matheod  before cliking on it\n00:28:45    andytuba  hmm yeah i guess you'd have to log everybody\n00:28:52    andytuba  okay scratch that cool idea\npostListingSort\n. I'm just not sure of the position of            $(window).off('scroll', self.setupCheckStyleToggleVisibility);\n and                $(window).on('scroll', self.setupCheckStyleToggleVisibility);\n. But I definitivly think that instead of trying to do things like that, we should just educate the user about using the inline tool to disable the subreddit style. (for example, when detecting something overlapse the checkbox, show an notification on the next page without subreddit style (for example homepage, userpage,etc.).\n\nA page to manage stylesheet enabled/disabled could work too.\n. I like that ! (with input date of course :p)\nEdit : shit http://caniuse.com/input-datetime\n. > to change the background color depending on how old the comment is\n. > Sweet. Also, can we add a few fields for most common text fills? Like macros, but specific to flair usertag? with an easy check box?\n\nDidn't understand\n. Which will probably be removed :D\n. Seem fixed, I have no idea if it was related to the voteEnhancement bug or if it was an unknow random bug.\n. Fixed by #1299\n. Hum I said some stupid thing so don't read (inBackground = (request.focus !== true); is not wrong in fact). There still should be some clean to do, but I close this issues because the chat log contain error.\n. Yea that why I didn't make a migrate thing ^^\n. Thanks :+1:\n. Yea I didn't found any good way to do it :/\n. In fact I didn't found a place to put the button :D\n. Hum yea I forget that honestbleeps have done some change making place for new button.\nIf you want to do it, you can, else I may do it later but not now ^^\n. I also made myself this remark. I agree with you.\n. I would rather enable it by default, but show a notification to explain it disabled.\n. > - please, when possible, place var declarations all together at the top of a function\n\nI don't remember seeing anyone following this :D\n. What is the interest of doing that ? I think it make code less clear.\n. By the way it would be more logical to show the icon when required instead of hiding it when not requried.\n. Oh sorry, didn't see it's after your call the show thing ^^\n. The problem with console error is we don't see them if we don't have the console open :/\n. It's pretty easy, just look on this file : \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/migrate.js\nJust have to think to increase the lastVersion variable :)\nAlso to show a notification, as the notification is no avaible when the migrate thing is loaded, do this trick @andytuba give me : \n\n01:35:43   andytuba  function showNotification() { if (!modules.showNotification) { setTimeout(showNotification, 200); return; } modules.showNotification({ \u2026 }); })\n01:35:58    andytuba  s/)$/\n01:36:18    andytuba  modules.notification\n01:36:21    andytuba  .showNotification\n. @mc10 Yea, it's more for doing it well ^^\n. I would more do something like : \n\nRESStorage.getItem('RESOptionsVersion') || !RESStorage.getItem('RES.firstRun.4.3.2.1') && -1 || 0\nTo avoid using lots of line for something not important. (The important thing is the migration step, having lots of code before hide the important :/)\n. Well value are explained in the switch in comments, so it's not really important how we got the value, no ?\n. Yea, this is a good idea :)\nedit : I think the function should be after the f (not before update, in the same level of depth than f, but after, I.e. in the end of the file ^^)\n. This should be \"Enable ...\" and not \"Show ...\".\n. Because when I read Show advanced options, I think it just show advanced option in the search (just for the search), but it enable advanced option. I don't know if you see what I mean.\n. This require lots of testing, because it can create nasty bug.\n. Didn't understand\n. Didn't understand\n. While in advanced thing with table, maybe something to prepend/append text on cells ?\n(for example to transform test into /r/test)\n. While in advanced thing with table, maybe something to prepend/append text on cells ?\n(for example to transform test into /r/test)\n. > i think the trickiest part may be automagically determining if/when the table has headers or not.\nDidn't understand. Can you explain it please.\n. > i think the trickiest part may be automagically determining if/when the table has headers or not.\nDidn't understand. Can you explain it please.\n. Maybe the this doesn't point to the good element ?\n. Lots of usefull information are found one sidebar. This allow to know when new informations are added/updated. I can give example if you want.\n. http://www.reddit.com/r/starbound\n=> Know when a new version is out\nhttp://www.reddit.com/r/askscience/ or http://www.reddit.com/r/IAmA/\n=> Know when calendar change\nhttp://www.reddit.com/r/dogemarket/\n=> Know if new ruels/importants link\nBut it's a low priority idea.\n. :+1: \n. Any other comment about make it intuitive ?\nGood point about the regex.\n. I fixed the regex. Still waiting comments about making it intuitive.\nBy the way, maybe clean instead of clear is better ?\n. Ready to merge\n\n. So I started working on this : https://github.com/matheod/Reddit-Enhancement-Suite/tree/multipleSessions\nBUT ... when log in with api.reddit.com, reddit still set the cookie session to .reddit.com domain, erasing any other cookie. So it don't work :(\n. > aye. that's a better idea for sure for privacy etc. we should still either not do it for acct switcher, or remove account listings from it.\nAlso think about saved res post.\n. I was going to say I didn't like the UI, then I saw the final version and ... it's awesome !\n\nOpinions on #1927: adding gauges next to age/karma? Maybe a vertical stack of dots or thin horizontal pipes like \u205e, just to the left of the karma / date?\n\nYea maybe just a little gauge next to age/karma.\n. @githue I let you find a good way to show them. You always found good UI :)\n. @githue Okay, thanks :)\n. > :+1: on accessibility: both color and amount! Small problem with red, though: colorblind users will probably have trouble distinguishing red vs gray:\nColorblind can change the color into something that work with them, no ?\n. > Instead of 15 separate options for thresholds, how about 3 table options (age, link karma, comment karma)? same as the comment score color thresholds.\nThe +Add something button will be a problem, no ?  [because each gauge has 5 levels/dots/bars]\n. > What do you think of \"experience\" instead of \"trust\"?\nWhy not ! But then the option name for comment threeshold will be too long :/\n. > What do you think of \"experience\" instead of \"trust\"?\nDone.\n. That look nice !\nBut for the color, I think it's better to have 5 differents colors, because it's quicker to see the \"value\", because with only one color, it's hard to quickly see if it's 2, 3 or 4. What @andytuba thinks ?\n. That look nice !\nBut for the color, I think it's better to have 5 differents colors, because it's quicker to see the \"value\", because with only one color, it's hard to quickly see if it's 2, 3 or 4. What @andytuba thinks ?\n. Fixed by #1942\n. I remember some module (maybe some I created) using more than the value from the storage (i.e. default value maybe ?). But I might be wrong, not sure.\n. The bug was due to #sitetable no longer here in search page. I fixed it, but now I have an issue where the first search result is not displayed. Working on it.\nedit : this is due to reddit also returning subreddit in search result\nedit : we can force only post by adding search option related to post (ex : tomato (self:yes OR self:no), tomato -subreddit:), but this change the result order :/\n. Yellow is perfect !\n. Yellow is good too. As you want :)\n. Yes, the only problem is that the number of result will not be good, but it's better than nothing working like currently.\n. Oh okay, I get tricked :D \nI tried this url but when the console was open. So I believed the link didn't work because it close the console but it's because it was open :D\n. Maybe on http://redditenhancementsuite.com/ with a Webhook who would automatically copy file on the github demo repository ?\nAn other possiblity would be with the GitHub Pages things maybe.\n. To allow people to sort by clicking on header of the table, then opening link in the sorted way choosen.\n. Yea true, now it's better.\n. I used the same notation than above in the code (I.e. showDiv for exemple).\n. Sure we don't lose in visibility with this ?\n. I will write it full lowercase (open on reddit).\n. I found stupid to add the link if we just clicked on it.\n. (note for posterity) only 1ms for 100 context link\n. oups\n. Well, I didn't understand why the appendChild didn't work. This may (just an idea) be related to #993 since it's a recent problem. And I don't see how to fix it otherwise than with a setTimeout since appendChild is a really simple thing :/\nBut if anybody have an idea to why we have this bug/how to solve it.\n. It's not always, it's on target.\n. Like that ?\n. This should be a class!\n. Maybe with Date.parse(\"1/2/1970 \" + input).getHours/Minutes, that would cover the AM/PM things.\n. Because the RESConsole is not yet append to the document. But I would move the code after if you prefer.\n. Should be : \nif (typeof groups[1] !== 'undefined') {\n. Any reason you used \" instead of ' ?\n. :+1: \n. I don't like the idea that the description is in the same character style than the text line 306.\n. On your screen there is a &something, doesn't know if you correct it.\n. This paragraph should be rewrited (I found it not really clear for someone who doesn't know how it work).\n. Wow, I didn't notice that. Or more probably, I notice it but forget it with time.\nI was so sure you didn't put space before if that I sort of tell someone to don't put one in #1165 (seem edited :p).\nI will correct this. But yes a contributor style guide would be good for new people (even if we just have to look at the code :D).\n. I didn't indent the break; due to his \"special\" nature.\n. I was not sure that why I didn't do (because it's was only used in one other module and it didn't use the RESUtils), but now it's added.\n. Shouldn't be placed here if you want to keep the alphabetically order.\n. XSS vulnerability: the hash could contain \".\n. There is two space at the end\n. There is one space at the end\n. I add that because the window color picker allow only to set R,G,B, not hex. So if people want to bring back the default color, they need this.\n. I like this.\n. Done :)\n. The new line look bad IMO.\n. No because it need to be loaded before some stuff are done.\n. :+1: \n. Else if you had a <div><span>toto</span></div> on the checkbox only the span is removed, so the div still block the checkbox.\n. Its tick is to allow to exit the block. He could also use a switch with the default statement, etc.\n. In fact using this trick is more clear.\n. ooops :D \n:+1: \n. Why ? What special thing does Opera ?\n. Oups, that why my ctrl+F didn't worked at first time :D\n. Not sure if this is a good thing, it's less performance and look strange with the rest of the code (for this part only).\n. Oh god I didn't know innerText didn't work on firefox. I think I make the mistake lots of time in my PR :o\n. Done.\n. Because au link go somewhere. A button do an action :D\n. I don't like this description because it doesn't say it's related to on hover mode. We must not confound with hideAllChildComments.\n. The \"so\" sound strange in my head. You don't have something better ?\n. To be reviewed.\n. ",
    "arulprasad": "oops. thats right. Closing this issue. \n. Issue already fixed. Closing this pull request. \n. ",
    "aidanhs": "~/Reddit-Enhancement-Suite $ du -hs .\n375M    .\n~/Reddit-Enhancement-Suite $ du -hs .git\n93M     .git\nNot quite 450MB any more, but meh (the above is after git gc).\nEven if it was 94MB, that's massive. A small project like RES should be under 10MB, probably 5.\n. Ping @patricksnape.\nKeen to get this in, I appear to be literally unable to clone this repo at the moment.\nEdit: finally managed to clone via ssh, seems https was choking.\n. I assume you mean 53564b3f23234e450674cd24d61a6904c2c32850? Was that a purge (i.e. with force push) or just removing them from the head?\nGiven it's 98MB on disk I assume the latter, hence pinging this issue.\n. Amazing, thanks.\n. A manual port of snudown to js - https://github.com/gamefreak/snuownd\n. Initial testing and benchmarking looks promising.\nEmSnudown currently passes all Snudown sanity tests (SnuOwnd fails one edge case).\n```\nSANITY\n============\n=== BODY:\n/r/all-minus-something\n=== SNUDOWN:\n/r/all-minus-something\n=== EMSNUDOWN:\n/r/all-minus-something\n=== SNUOWND:\n/r/all-minus-something\n============\nFAIL: 1\nSUCCESS: 51\nFAILED SANITY TESTS\n```\nRunning through a few thousand random comments has EmSnudown, Snudown and SnuOwnd all producing identical results.\nBenchmarking shows EmSnudown as actually being faster than SnuOwnd which I found a little surprising. I might play around with this some more and see if minifying SnuOwnd helps it. They are micro-benchmarks though and were run on a virtual machine just to see if EmSnudown would be badly slower (apparently not).\nTesting initialisation speed\nSnuOwnd  9.1412460804\nEmSnudown  8.01900315285\nTesting medium number of renders\nSnuOwnd  6.8896510601\nEmSnudown  5.82095980644\nTesting large number of renders\nSnuOwnd  5.66779303551\nEmSnudown  2.73442697525\nSize of a minified EmSnudown is 235KB. Size of the current unminified SnuOwnd is ~100KB. I can't actually check because closure compiler chokes on variables named 'char', but uglifyjs suggests SnuOwnd might be reducible to about 33KB.\nThe current status is that EmSnudown seems to work, and reasonably well. Given that RES currently (I think) only uses a single simple call to SnuOwnd it would be replacable as-is with a few line changes (and putting in the EmSnudown code instead of SnuOwnd).\nTodo:\n- it'd be nice if it was a smaller file\n- @gamefreak mentioned callbacks for sanitisation\n- benchmarks\n- better tests\nCode at https://github.com/aidanhs/emsnudown, tests at https://github.com/aidanhs/emsnudown/blob/79588aff539102adcc321f4634ca3f6f5d974d2d/test/test.py\n. Yup, 235KB. I'm going to look at with a view to potentially reducing this at the cost of speed...might be interesting to see the tradeoffs.\nBenchmarks were run in node, which uses v8 - essentially chrome, which is pleasing because they don't even optimise asm.js yet. Asm.js aware firefox should be even faster. That said, I should do some in-browser benchmarks, particularly for Safari, Opera, IE.\n. Ok, I messed up with benchmarks. It did seem odd that they were faster than handwritten js (especially as v8 doesn't optimise asm.js)...I guess it's nice to know my intuition was right. Anyway:\nInitialisation speed\nSnuOwnd 10.1511340141\nEmSnudown 21.0092520714\nMedium number of renders\nSnuOwnd 7.11319208145\nEmSnudown 14.9687621593\nLarge number of renders\nSnuOwnd 4.14359998703\nEmSnudown 6.31308412552\nAs you can see, EmSnudown is actually still faster than SnuOwnd for rendering, it's just the initial setup which makes it slower (which makes a lot of sense given it needs to initialise a view of memory). Given that this initial setup can be deferred until when comment preview is actually loaded (as RES currently does with SnuOwnd), I'm not sure this is actually an issue.\nAs noted above, I'm not putting EmSnudown forward for inclusion yet - I just wanted to correct the benchmarks.\n. Sorry, I was trying to be clever by comparing the proportional speedup (i.e. rendering speed) but I've realised that 3 datapoints really isn't enough to do that. Smaller numbers are faster, which is why I was saying that the load speed of emsnudown is quite a bit slower.\nInteresting, ok, in theory I should be able to just hook into the stuff that's already in the C code. Might I ask where you use this? I had a look in the RES code but can't see it (nor can I actually see anything but the default renderer being used, implying wiki rendering doesn't work).\n. This is stalled while I think about kripken/emscripten#1382\nIt's not very good if the strange unicode faces people like to use don't preview correctly.\n. The above is solved in the emscripten unstable branch, just need it to graduate to stable...\n. Now waiting on a bug in the actual snudown code - reddit/snudown#54\n. Ok, I\u2019m happy with the rendering. I\u2019ll convert this issue to a PR when I get a bit of time to do the legwork and see what I need to change to fully replace SnuOwnd. Some brief notes:\n- Emsnudown has been reduced to 193KB for \u2018free\u2019 (courtesy of a more recent Emscripten).\n- I\u2019ve run tests on the snudown test suite and on some 63000 comments. I\u2019ve found a few different cases where snuownd doesn\u2019t quite match up with snudown - they\u2019re all quite minor.\n- Done more benchmarking (I can share numbers or the code is all on the repo) - apparently SnuOwnd is ~2x faster for rendering comments and EmSnudown is ~3x faster at initialisation...but it\u2019s all a little irrelevant because both rendering and initialisation are ~millisecond operations.\n- I\u2019ve set up a live comparison page for curiosity - http://aidanhs.github.io/emsnudown/ (holding down a key isn\u2019t jerky at all...which kinda makes me wonder why doing it in RES is\u2026).\n. Thanks for that @gavin19, I thought I'd done that but managed to fail.\nAnd thanks for the jerkiness hint, I guess it must be that.\n@gamefreak they are all minor, to the extent that some of them are literally just notes for interest and would never be an issue in reality. To go through \"test - behavior - impact\" for each of them:\n- minus subreddits - kinda obvious - only really relevant for gold users so meh\n- unicode link - snuownd doesn't urlencode unicode - can't see this being an issue, it seems chrome handles it fine and I hope other browsers do too\n- byte link - there's a non-character byte at the end of the url which is stripped instead of urlencoded - who cares, why do people even have non-character bytes in their comments!?\n- zalgo - looking at it again, I think this is just snuownd collapsing whitespace - no effect since browsers collapse whitespace everywhere that snuownd collapses whitespace\n- mixed whitespace - as above\nI absolutely agree about not fixing it (or any of the above). I wouldn't, even if emsnudown didn't exist. WRT replacement, we'll see if I can fill in for the HTML sanitisation functions...\n. @spladug thanks for that, I actually did notice the plans to replace snudown elsewhere, though it's interesting to now have the details of it being a coordinated effort and the intended roadmap.\nBut: that commit was (almost exactly) 9 months ago and had a stated aim to have a successor to sundown (almost exactly) 8 months ago and had a 'soon' promise made (almost exactly) 3 months ago.\nSince the original announcement, while sundown has been frozen, snudown hasn't (minor changes/bugfixes I admit).\nThis isn't me doubting it'll happen! It's just it's difficult to measure progress with no news. Unless you have some to share? ;) I look forward to sundown's successor - the learning process for emsnudown is coming to an end. And what is life for, if not for learning?\n. As promised, this has been converted into a PR.\nHowever, the final piece of work (read: hackery) I've done to get a sanitiser working for RES has tipped the balance (in my mind) back to keeping snuownd. The original idea behind emsnudown was to create a thin shim wrapper to easily allow new snudown versions without having to do any work.\nUnfortunately the hack that I've had to resort to to expose the custom callback functionality has left it more fragile than I would like. In combination with snudown being deprecated (though I imagine we'll see minor changes slipping in...) the original motivation behind emsnudown is mostly lost and all it provides is a larger, slower, more difficult to customise version of snuownd in exchange for very edge case correctness.\nIf you do have a compelling reason to want emsnudown that's fine (it's fairly easy for me to maintain) but I personally suggest rejecting this pull request and letting it be an example for what was attempted and/or starting point for emscripten compilation of the successor of snudown. Long live snuownd!\n. No objections, closing.\n. ",
    "mturley": "What is currently used to render markdown in RES?\n. ",
    "spladug": "FYI, Snudown and its upstream Sundown are frozen and will be replaced. See https://github.com/vmg/sundown/commit/37728fb2d7137ff7c37d0a474cb827a8d6d846d8 for more info.\n. Would it be possible for this image to be re-uploaded so it's part of the new subreddit image system? Loading images from *.thumbs.redditmedia.com rather than thumbs.reddit.com helps for two reasons: a) request sizes are smaller since it's not on the cookie-domain, b) the browser can parallelize downloads better.\nAll it takes to get on the new system is to re-upload from the subreddit image editor and use the new URL.\n. ",
    "phriedrich": "I also agree, we should wait until the final version of Mavericks is released and see if it is fixed there. \nI can't imaging that it is intended to not work this way, I think this is more a problem of something like over-optimization in the JS engine of Safari in the beta. If it's still broken in the final, then fine, we have the patch to get it working, and if it is fixed there no harm is done and we just don't need the patch.\n. It still doesn't work in Maverick's Golden Master (GM) without the patch. I fear we'll need it. \n. I made a clean new fork and re-added the fixes. Seemed the easiest way to me. \n. Good idea!\n. I've seen this with other extensions, too. \nFor example if you use AdBlock and have a whitelist. Now you are on a whitelisted page and load another page\u2014not on the white list\u2014in the same tab. Ads are shown. Hit reload and AdBlock works again. \nSimilar with RES: if I open a new tab and go to reddit directly (shortcut from the bookmark bar) or open a new tab with reddit (cmd-click to bookmark), it most times work. But if I have another page open and then re-use this tab to go to reddit, it's often not loaded. A simple cmd-r then helps and everything is working again. \nSeems to be some over optimization in Safari to me. \n. I've seen this with other extensions, too. \nFor example if you use AdBlock and have a whitelist. Now you are on a whitelisted page and load another page\u2014not on the white list\u2014in the same tab. Ads are shown. Hit reload and AdBlock works again. \nSimilar with RES: if I open a new tab and go to reddit directly (shortcut from the bookmark bar) or open a new tab with reddit (cmd-click to bookmark), it most times work. But if I have another page open and then re-use this tab to go to reddit, it's often not loaded. A simple cmd-r then helps and everything is working again. \nSeems to be some over optimization in Safari to me. \n. ",
    "Alamei": "The wrappedJSObject property simply allows you to access the underlying javascript object from an XPCNativeWrapper. Firefox implicitly provides you a wrapper in some cases for the sake of security (see documentation on XPCNativeWrapper), but the wrapper only supports certain features of its root object by design. Since Firefox 23 has a variety of security related changes, it is likely that one of two things occured: (1) the relationship between the RES code and the window object is now being classified as \"untrusted\" where it was not in the past, causing you to receive an implicitly wrapped window object when you were previously getting the real window object; or (2) the XPCNativeWrapper object has been adjusted to no longer support some call that is needed to initiate the mouse click event.\nSince the wrappedJSObject property essentially just evades the wrapper security, it is considered somewhat unsafe in implementation, depending on what you're using it for. Since I don't really know exactly how the initMouseEvent function works (and, as Hello71 notes, the documentation isn't great), I couldn't say whether it's \"safe\" to use wrappedJSObject in this case or not. Someone with better understanding of the base functions could probably chime in with a clear answer.\nThe wrappedJSObject property is unique to Firefox, as far as I know, so this code shouldn't be considered safe for other browsers (though I haven't had time to test it myself). I don't have significant experience working with XPCNativeWrapper objects, so I can't recommend any particular solutions to this issue, but I wouldn't recommend pulling this commit in its current state, since it's likely to break cross-browser compatibility and may be insecure.\n. Disclaimer: None of what I say here should be taken seriously until someone with better knowledge of these matters can chime in. I'm way out of my depth with this sort of low-level interface interaction, so I'm just using my basic debugging skills with the Mozilla documentation for context to poke around.\nWith that said, some cursory testing on Firefox 22 shows that a call based on wrappedJSObject works fine there, as well. This suggests that RES is getting an implicit XPCNativeWrapper of the window object in both version 22 and 23, but that the WindowProxy interface is no longer accessible through the XPCNativeWrapper in version 23 for some reason. Hopefully that's enough information to take to the Firefox guys to sort out the issue.\n. Good find, OverlordQ. The defaultView object is supported by most non-IE browsers (though Opera used to have issues with it), so it should be a reasonably safe cross-platform solution going forward. I don't have Safari or Opera on my machine to test, but it's worth at least looking into.\n. Good find, OverlordQ. The defaultView object is supported by most non-IE browsers (though Opera used to have issues with it), so it should be a reasonably safe cross-platform solution going forward. I don't have Safari or Opera on my machine to test, but it's worth at least looking into.\n. ",
    "OverlordQ": "As an aside using document.defaultView works as well, but like the other posters, I have no clue what I'm talking about :)\n. As an aside using document.defaultView works as well, but like the other posters, I have no clue what I'm talking about :)\n. ",
    "allthefoxes": "/r/spam is a mirror\n. Close\n:(\n. I am always going to be interested in having this.\n. Close?\n. I still want this so bad\nRoadTo4.5.3Athena\n. Fine then. We will name 4.5.3 \"Thundercock\"\nIs that good enough for you? ^^/s\nI think this is a relly good idea though, esecially for users. The average net user can't tell a 5 from a 7. I think that, with some branding, It would be much easier to ask users \"What version are you running\" and getting a name response.\nAs for devs, I don't see any harm in having a \"versionnames.txt\" if anyone forgets.\nAs for the \"More things to remember\" bit, I really don't find this a big deal. You are already memorizing so much, and I really don't see any issues with remembering one more association.\nThat said, everyone is different\n. As for branding, it could be pretty simple. Have the template for /r/resissues add in the name. Announcment posts have the name, and res.com has the name as well. Thats all that would be really needed\n. Happens on distinguishing as well. #1752 \n. Yup. \n. Close? Reddit can save anything now\n. This should be much easier to do soon, since Reddit is adding a native unread message counter. I will assume this will be accessible via the API.\n. Noted\n. > rack of all posts made by any account within the last 24-48 hours.\nMuh Storage Usage :fearful:\n. o/\nYou are so welcome world.\nI have no idea how to make this because I can barely .js, but I think it would make a lot of sense if they were button next to the subreddit name in the hover box, in smaller text. It doesn't seem like it would be too hard to do.\n. o/\nYou are so welcome world.\nI have no idea how to make this because I can barely .js, but I think it would make a lot of sense if they were button next to the subreddit name in the hover box, in smaller text. It doesn't seem like it would be too hard to do.\n. Clearly\n. That seems like a good idea, but a bit un-intuitive.\nI think a better idea would be something like\n/r/enhancement (sorted by: [default v])\nClicking the subreddit name will just take you to whatever is in the box.\nDefault is /hot (since putting /hot will 100% confuse people). Then click\nthe dropdown to see /new and /top. Set those, and then click the subreddit\nname to go there?\nThat sounds slightly even more confusing.\nOn Wed, Aug 27, 2014 at 2:24 PM, Andy Tuba notifications@github.com wrote:\n\nwhat do you think about\n/r/enhancement (sort by: [new v])\nand clicking \"sort by\" takes you to /r/enhancement/new, and clicking the v\nshows you a dropdown of new/top/hot?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1431#issuecomment-53617994\n.\n. and harder to do.\n\nOn Wed, Aug 27, 2014 at 7:29 PM, Eric Fox azulalbi@gmail.com wrote:\n\nThat seems like a good idea, but a bit un-intuitive.\nI think a better idea would be something like\n/r/enhancement (sorted by: [default v])\nClicking the subreddit name will just take you to whatever is in the box.\nDefault is /hot (since putting /hot will 100% confuse people). Then click\nthe dropdown to see /new and /top. Set those, and then click the subreddit\nname to go there?\nThat sounds slightly even more confusing.\nOn Wed, Aug 27, 2014 at 2:24 PM, Andy Tuba notifications@github.com\nwrote:\n\nwhat do you think about\n/r/enhancement (sort by: [new v])\nand clicking \"sort by\" takes you to /r/enhancement/new, and clicking the\nv shows you a dropdown of new/top/hot?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1431#issuecomment-53617994\n.\n. Shouldn't this be closed?\n. Could perhaps the NSFW filter itself be given another option for this? \n\n\nNSFW Filter = On/Off/ /r/All Only\n?\n. I believe this has already been fixed\n\nOn February 9, 2015 at 10:24 AM blark notifications@github.com wrote:\nI have this bug in Chrome too, and I've had it across multiple OS installs. \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1494#issuecomment-73526731\n. I believe this has already been fixed\nOn February 9, 2015 at 10:24 AM blark notifications@github.com wrote:\nI have this bug in Chrome too, and I've had it across multiple OS installs. \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1494#issuecomment-73526731\n. Someone remind me to update gulp once this ships, as adding a folder to /modules will break it. Quick change though\n. This is a really cool idea, would be very helpful. I do think a modmail would be the best solutions, a full set of RES settings could be a digital fingerprint\n. @Cataractar You are always free to work on whatever you want to work on! Just make sure you read the development guide, as there are a few standards everyone tries to follow. Get comfy with the RES code, and if you have any questions, ask away!\n. Close please\n. Added another commit because of a mis-type in the Readme\n. Closing. Will make a new one soon\n. I've got a more updated version in a google doc as well\n. Missing a closing parenthesis. Its bugging me. On the \"Fixed search button\" line\n. I know this is just an idea, but even if things like this were default off, I feel like RES shouldn't touch/hijack your account in any way. Even if someone enables it, someone is gonna forget in the end, and something bad will happen.\n\nI think it would be in best interest for RES to leave the account switching to the human.\nRelated and same thoughts to #1686 \n. I'd love to help on this one but the automod and wiki are disabled to non mods.\n. If my opinion counts for anything, I definitely wouldn't want this on by default. I mean, that's the entire point of the username hider is to hide usernames.\n. Close pls\n. Confirmed Win7 Chrome Stable and Beta channels\nNot 100% sure what causes it yet\n. Happens to me on this one: http://www.reddit.com/r/gifs/comments/2kgbq5/tommy_robredos_priceless_reaction_after_losing_to/\nhttp://imgur.com/uSpcaPB\n. You can check off the first one\n. Well fuck\n. Well fuck\n. It would likely take 20 minutes of editing and fiddling at the most to get one nice hefty js file using gulp. \n. Probably can just close this\n. Probably can just close this\n. That's what I get for not searching.\nClosing.\n. That's what I get for not searching.\nClosing.\n. I could probably narrow that down, yeah. I was just writing it all very hierarchical and followed the same style for everything to make it erasier to deconstruct and make changes (For my sake and anyone adapting it)\nBut yeah, the move commands could be smushed. Then again, literally everything could be smushed. But if anything should be smushed, its probably the move commands.\n. I didn't even realize that @listentous was raddit, since I'm stupid, but he is in the process of getting a valid HTTPS cert for the site.\n. I feel pretty yucky for getting someone to pay that much money :(\n. Alternate thing Ive been working on sorta. Hovering over a youtube link in the comment gives a title-[Time] text\n. Could this be consolidated if there are many?\nI.e. at the end of every chain, just have .\nI can imagine this would be very annoying for people with some hefty filters\n. From what I know about most users, they freak out over any errors\n. Version number?\n. > or... A dickbutt.\nHidden secret easter egg option pls\n. Domain  Time Spent (Over 34 Days)\nreddit.com  83 hours and 19 minutes\n:(\n. Domain  Time Spent (Over 34 Days)\nreddit.com  83 hours and 19 minutes\n:(\n. Please change \"reddits\" to \"subreddits\"\nAdmins changed this to the true term some time ago\n. The ones I changed are never reffered to by the name, so these are harmless. There are a few other instances where \"reddits\" are used, but they aren't used in a place a user would see them\n. On the other hand, best reddit change 2014! TY bae\n. Cannot Reproduce - Chrome Stable\n. Cannot Reproduce - Chrome Stable\n. @andytuba The vote weight thing is fixed right?\n. @andytuba The vote weight thing is fixed right?\n. @andytuba I've clened up the changelog a little bit, trying to make it a bit more spiffy and standardized. \n. @andytuba One of the things I am trying to spiff up with spiffying is using a more fixed terminology - I.e. features where something was added should start with \"Added..\" and bug fixes should start with \"Fixed...\" -- all if possible.\n. Fixed it up\n. Gotcha.\n. By the way, I spaced it out just for the time being since editing it is a nightmare without the spaces. \n. Did you add all the changes you made to this today?\n. When its all ready. Still a few more things to finish. \n. How is this invoked?\n. How is this invoked?\n. Right, but, how does it know what to hide?\n. Right, but, how does it know what to hide?\n. :+1:\n. :+1:\n. Have an unread message, then go to page 2 with NER, scroll back up and the unread icon will show as RES's version\n. Fixed in #2041 \n. Should be straightforward to implement. You bored @erikdesjardins ?\n. ty andytuba for fixing gulp\n. ty andytuba for fixing gulp\n. Glad to hear, @imgrush - If you would like to play around with RES yourself and submit a pull request to enable this feature (and replace mediacrush), that would be great!\nIf not, I am sure @andytuba would be glad to work with you guys to get everything going\n. Glad to hear, @imgrush - If you would like to play around with RES yourself and submit a pull request to enable this feature (and replace mediacrush), that would be great!\nIf not, I am sure @andytuba would be glad to work with you guys to get everything going\n. @andytuba I can probably do this myself later tonight.\n. @andytuba I can probably do this myself later tonight.\n. @imgrush Sorry about that, I'll play with it this afternoon!\n. Relevant file\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/ebf015e5b78780f7c86e0c9ae5fde45af2c68fff/lib/modules/hosts/fiveHundredPx.js\nShould be easy regex. I'd rather not break anything and leave the regex to the experts\n. Relevant file\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/ebf015e5b78780f7c86e0c9ae5fde45af2c68fff/lib/modules/hosts/fiveHundredPx.js\nShould be easy regex. I'd rather not break anything and leave the regex to the experts\n. This is confusing me.\nYou just want modules.js in each of the final builds or what?\n. OHHHHHHHHHHH this is a tool that adds file names to the manifests?\n. Cool, so this would just be a tool for people to use to make life easy. \nI like\n. ~~I really can't see anything causing this, and I am thinking this might just be my node js acting up again~~\nNope, @andytuba can reproduce. Not just me!\n. I am having a bit of trouble getting the exact same result (total lockup of browser) but I think this should be done either way.\n. Looks like this just went out live to Reddit\nVia reddit/reddit:\n\numbrae committed 42ca721 (http://git.io/NkJU) to reddit/reddit: Make restrict_sr on search retain state across page views.\n. I just mean that, can't RES detect that we have added the # to the link, \nand check to see if its been posted? Since without the # the warning \nwill come up, with the #, it will\nOn 2/24/2015 4:48 PM, Steve Sobel wrote:\nthis is a reddit limitation that I'm not sure RES can really get \naround... unfortunately some sites use hash / hashbang for actual \nnavigation, especially \"web application\" type sites...\nI'm not going to close this, because someone will probably chime in \nexplaining a situation where I'm wrong, which I'm entirely open to... \njust sharing my first reaction/thought :)\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2048#issuecomment-75853669.\n. No, I understand that par :/\n\nWhat I am saying is that reddit treats http://example.org as \nhttp://example.org#thing as two different things, two different posts.\nExample: In subreddit A, User A posts http://example.org\nIn subreddit A, User B goes to submit http://example.org#thing\nUser B will see, on the same page, RES's warning about 'That link was \nalready submitted to Subreddit A\", however, when he submits the link, he \nwill not get the \"Someone already posted that\" warning, and will be able \nto submit just fine.\nAre we on the same page here?\nOn 2/24/2015 4:58 PM, Steve Sobel wrote:\n\nit could, but the problem is that sometimes it's completely legitimate \nto add #foobar to a link, that's the tricky part.\na plain # at the end of a link has no real function, but is also not \nnecessarily a nefarious attempt to get around the repost filter, \nbecause a lot of sites link to # to scroll to the top or load the \n\"main\" part of the app, etc... it's also nontrivial in javascript to \nremove that \"#\" in a cross-browser way, which is why RES didn't do it \nfor so long (and the fact that it does do it now actually causes some \nback/forward nav issues, but I digress)...\nbasically, it's a tricky situation with no real great answer :-\\\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2048#issuecomment-75855546.\n. I'm having issues reproducing anyways, doesn't matter.\n. I was able to repost a subreddit with a #, but perhaps I am wrong.\n\nSorry for the wild goose chase.\n. Why? Why not just macro an expanation?\nOn 2/26/2015 10:12 PM, Andy Tuba wrote:\n\nSo many people ask \"how do i turn on the uppers and downers i see in \nscreen shots? I looked through settings and didn't see anything.\"\nHow about a functionless module that has all the right words and \nscreenshots to educate people that this functionality is no more?\nWe could even throw in some options to add placebo values for the \ndiehards. Or not, because that's dumb.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2049.\n. Yes, I understand that, but should we not try to match reddit functionality?\n\nIf \"relevant\" is already selected, there is no need to for it show in the dropdown\n. Yes, we are talking about the same things.\nBut alright, I guess I'll close this.\n. I may be wrong here, but is this not a known and fixed issue already?\n. Ah.\n. Fixes #2054 \n. Can confirm\nTest here: http://www.reddit.com/user/meow--\n. All hail @erikdesjardins \n. I'll play with it tomorrow\n. Magic words:\nFixes #2058\n. #2087 lol\n. @andytuba Whatever its built on, there is some cruft that is keeping it on using mediacrush. Refactor may have been the wrong word, but it needs some cleaning up to play nice with any host.\n. Yet Another Button^(tm)\n. Add /rules?\n. Following that link, it still plays as a gif. Did it not work for you?\n. The file extension should make no difference in loading speed\n. This makes my little 12 gig partition for archiving RES builds very very sad.\nBut sacrifices must be made. For the greater good\n\nSeriously though this is a neat idea and something I would like to see.\n. Can you please submit this as a PR to /allthefoxes/RESGulp please? Thanks\n. Tested. Working fine. :+1:\n. :+1: I've already been using it, so its fine with me\n. @agentlame I agree. I would not notice that on my screen.\nIs there any issues with making the stripes red or something?\n. I am not EC2 Default User, Git. :(\n. Honestly it seems like bad design to me :( (Having one thing in two places)\nBut I understand the reasoning\n. Well, maybe I am wrong, but you should not be using www.locale.reddit.com - You should be using locale.reddit.com\nUsing www.locale.reddit.com messes with HTTPS as well.\n. ^\nI can't even make a secure connection into www.locale.reddit.com - \nI suggest sticking to locale.reddit.com\n. Thanks to https://www.reddit.com/user/littlebufflo for the report\n. :+1:\n. Only issue here is that someone turning off useCommas would expect it to remove the link karma comma - Should a little disclaimer be added to the description?\n. The comma in link karma was added by reddit. Already a PR open.\n. Closing for #2197 \n. This would create so many api calls that it would hurt \n. @andytuba already fixed it\n. Its far better to report these things on /r/resissues - At least until it can be pinned down to an issue with the RES code. Your issue is probably something with firefox or your computer.\nI have heard that the issue is that the browser hijacker changes your permissions. Restoring your computer to a backup should fix everything.\n. If nothing works to remove it except an anti virus, thats pretty malicious \n. In the future, consider leaving feature requests on /r/enhancement. Thanks\n. Alt-F opens menu in chrome by the way\n. It does. Please make feature requests on /r/enhancement, not here.\n. nope https://www.allthefoxes.me/img/56-SMbwXeBK.png\n. Pretty sure this has already been fixed. Just waiting on a release. Thanks though. \n. Sounds like a job @erikdesjardins would love to tackle\n:laughing:\n. eli5\n. Cool, thanks!\n. Can definitely confirm this. \n. Nothing is unfixable\n. @BrentNewland It is generally better if you put feature requests in https://reddit.com/r/enhancement - Just so you know! :smile:\n. Thats..not..how it works. \n1. Reddit isn't going to drastically change API policy for RES\n2. Its not that the API can't do it, its that the API can only take one call per 2 seconds.\n3. There is no good reason to be judging accounts based on karma. Everyone on reddit has an equal voice\n. Busted on userpages too https://www.allthefoxes.me/img/08-ivKTMuNy.png\n. Search is also your friend :wink:\n. This is better suited for /r/enhancement,since this is a feature request\n. Again, I would appreciate if you would put this in /r/enhancement instead. The button reads save because it serves the same purpose as what reddits button does, and their button is called save. We can always talk about changing it, but this is not a confirmed bug.\n. :+1:\n. Feature requests should go in /r/enhancement\n. Still happening, just seems to be very specific.\nhttps://www.allthefoxes.me/Bug2.webm\n. Another example: Turning off inline images dims the page, including the save button (lol)\nhttps://www.allthefoxes.me/Bug3.webm\n. Yeah, I didn't realize this, and not realizing it, it looks like the extension is broken\n. Thanks to @madbook for catching this one\n. :+1:\n. Feature requests should go in /r/enhancement\n. Is this really needed? Users interested could easily set this up in chrome search options yes?\n. Okay, what does that have to do with anything?\nedit: comments being deleted make me look like a bigger ass than I already am\n. That's pretty cool. :+1:\nOn 8/20/2015 10:47 AM, br4nnigan wrote:\n\ncompares the post titles with a regular expression (looking for \nstrings similar to \"x-posted from r/gaming\") and creates links to the \nx-posted subs in the tagline, like this (also removed the comma after \ncreating this screenshot)\nthis \nhttps://camo.githubusercontent.com/cdb43c9bca38eb179af5fb04e15772b520b961a1/68747470733a2f2f692e696d6775722e636f6d2f35576e62464c572e706e67\ndid so cause i always hated copy pasting the channel with the usual \nclosing bracket after the sub and also copying link texts is a pain \nitself.\nhope u like!\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2425\nCommit Summary\n- xPostLinks module\n- enhanced the subreddit pattern\nFile Changes\n- M Chrome/manifest.json\n  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2425/files#diff-0\n  (1)\n- M OperaBlink/manifest.json\n  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2425/files#diff-1\n  (1)\n- M XPI/index.js\n  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2425/files#diff-2\n  (1)\n- A lib/modules/xPostLinks.js\n  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2425/files#diff-3\n  (66)\nPatch Links:\n- https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2425.patch\n- https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2425.diff\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2425.\n. Please please please take a look at known issues before making threads about them\n\nThis issue is known and fixed for 4.6\ncc @andytuba close please <3\n. This is a very, very known issue.\nOn 10/2/2015 12:03 AM, Andrew Nguyen wrote:\n\nWhen someone has signed up for the beta, the default RES style lays \nthe beta icon over the username\nscreen shot 2015-10-01 at 11 01 37 pm \nhttps://cloud.githubusercontent.com/assets/1887458/10239242/6ca58998-6890-11e5-8413-f750c698f6a0.png\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2467.\n. This is a very, very known issue.\n\nOn 10/2/2015 12:03 AM, Andrew Nguyen wrote:\n\nWhen someone has signed up for the beta, the default RES style lays \nthe beta icon over the username\nscreen shot 2015-10-01 at 11 01 37 pm \nhttps://cloud.githubusercontent.com/assets/1887458/10239242/6ca58998-6890-11e5-8413-f750c698f6a0.png\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2467.\n. well..i mean..\n\nok..\n. well..i mean..\nok..\n. I would treat it more like code if it were code. \nPersonally I just see it as a pointless commit.\n. I would treat it more like code if it were code. \nPersonally I just see it as a pointless commit.\n. Can confirm.\nGif: http://i.imgur.com/N74aXuV.gifv\n. Can confirm.\nGif: http://i.imgur.com/N74aXuV.gifv\n. I would wait for the issue to get out of nightly, first of all\nOn 10/26/2015 6:43 PM, Luke Davies wrote:\n\nBrowser: Firefox Nightly\nBrowser Version: 44\nRES Version: 4.5.4.1-Signed\nSometimes on /r/funny, gifs aren't visible on expansion, I even \ncleared the cache. Is there a fix for this bug?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2495.\n. I would wait for the issue to get out of nightly, first of all\n\nOn 10/26/2015 6:43 PM, Luke Davies wrote:\n\nBrowser: Firefox Nightly\nBrowser Version: 44\nRES Version: 4.5.4.1-Signed\nSometimes on /r/funny, gifs aren't visible on expansion, I even \ncleared the cache. Is there a fix for this bug?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2495.\n. I would wait for the issue to get out of nightly, first of all\n\nOn 10/26/2015 6:43 PM, Luke Davies wrote:\n\nBrowser: Firefox Nightly\nBrowser Version: 44\nRES Version: 4.5.4.1-Signed\nSometimes on /r/funny, gifs aren't visible on expansion, I even \ncleared the cache. Is there a fix for this bug?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2495.\n. I thought this was fixed already for 4.6? Unsure\n\nOn 11/13/2015 9:26 AM, cubrr wrote:\n\nWhen using the quickMessage module to send a message, any text after \nan ampersand gets left out from the message. Considering the fact that \n|encodeURIComponent| is used by the module \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/a368d4a360b8e07cfb0b4a27b169864a35ea7389/lib/modules/quickMessage.js#L332, \ncould this be a problem with reddit's API?\n```\n      Image 1: Message being written\nscreenshot_8\nhttps://cloud.githubusercontent.com/assets/6078228/11148080/2fb348ea-8a23-11e5-9051-373b5c5b12f9.png\n  Image 2: Resulting message\n\nscreenshot_7\nhttps://cloud.githubusercontent.com/assets/6078228/11148065/1ca6eaf4-8a23-11e5-95af-8f3fc6e70745.png\n```\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2515.\n. I thought this was fixed already for 4.6? Unsure\n\nOn 11/13/2015 9:26 AM, cubrr wrote:\n\nWhen using the quickMessage module to send a message, any text after \nan ampersand gets left out from the message. Considering the fact that \n|encodeURIComponent| is used by the module \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/a368d4a360b8e07cfb0b4a27b169864a35ea7389/lib/modules/quickMessage.js#L332, \ncould this be a problem with reddit's API?\n```\n      Image 1: Message being written\nscreenshot_8\nhttps://cloud.githubusercontent.com/assets/6078228/11148080/2fb348ea-8a23-11e5-9051-373b5c5b12f9.png\n  Image 2: Resulting message\n\nscreenshot_7\nhttps://cloud.githubusercontent.com/assets/6078228/11148065/1ca6eaf4-8a23-11e5-95af-8f3fc6e70745.png\n```\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2515.\n. I thought this was fixed already for 4.6? Unsure\n\nOn 11/13/2015 9:26 AM, cubrr wrote:\n\nWhen using the quickMessage module to send a message, any text after \nan ampersand gets left out from the message. Considering the fact that \n|encodeURIComponent| is used by the module \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/a368d4a360b8e07cfb0b4a27b169864a35ea7389/lib/modules/quickMessage.js#L332, \ncould this be a problem with reddit's API?\n```\n      Image 1: Message being written\nscreenshot_8\nhttps://cloud.githubusercontent.com/assets/6078228/11148080/2fb348ea-8a23-11e5-9051-373b5c5b12f9.png\n  Image 2: Resulting message\n\nscreenshot_7\nhttps://cloud.githubusercontent.com/assets/6078228/11148065/1ca6eaf4-8a23-11e5-95af-8f3fc6e70745.png\n```\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2515.\n. 4.5.4 Is the most up to date public release of RES.\n\nStay tuned for 4.6!\nOn 11/13/2015 5:48 PM, cubrr wrote:\n\nSorry. I didn't know about /r/RESissues.\nHow can I get the \"latest\" version? The one available from the website \nis 4.5.4.1-signed.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2515#issuecomment-156580946.\n. 4.5.4 Is the most up to date public release of RES.\n\nStay tuned for 4.6!\nOn 11/13/2015 5:48 PM, cubrr wrote:\n\nSorry. I didn't know about /r/RESissues.\nHow can I get the \"latest\" version? The one available from the website \nis 4.5.4.1-signed.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/2515#issuecomment-156580946.\n. I believe this is already fixed and ready to go for 4.60\n\nOn 12/14/2015 11:25 PM, Score_Under wrote:\n\nThis has been a problem for me since forever. (Not anything to do with \nthe recent night mode changes). The CSS selectors for code/pre tags \naren't specific enough all the time.\nI went into the inspector and copied out every selector which gave the \ncode a light background colour, so I'm not sure if a couple of these \nare redundant, but what I do know is that it darkens the background \nfor me as expected.\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568\nCommit Summary\n- Fix night mode background colour of code in permalinked posts\nFile Changes\n- M lib/css/modules/_nightMode.scss\n  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568/files#diff-0\n  (6)\nPatch Links:\n- https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568.patch\n- https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568.diff\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568.\n. I believe this is already fixed and ready to go for 4.60\n\nOn 12/14/2015 11:25 PM, Score_Under wrote:\n\nThis has been a problem for me since forever. (Not anything to do with \nthe recent night mode changes). The CSS selectors for code/pre tags \naren't specific enough all the time.\nI went into the inspector and copied out every selector which gave the \ncode a light background colour, so I'm not sure if a couple of these \nare redundant, but what I do know is that it darkens the background \nfor me as expected.\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568\nCommit Summary\n- Fix night mode background colour of code in permalinked posts\nFile Changes\n- M lib/css/modules/_nightMode.scss\n  https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568/files#diff-0\n  (6)\nPatch Links:\n- https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568.patch\n- https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568.diff\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2568.\n. I thought I already had it in markdown?\nOr do you mean the github file?\n\nOn 1/13/2016 12:02 PM, Andy Tuba wrote:\n\nYou should start a new 4.7.0 section and first item \"Converted \nchangelog to markdown (thanks @Ajedi32 https://github.com/Ajedi32)\" \n:grinning:\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2633#issuecomment-171364505.\n. I thought I already had it in markdown?\nOr do you mean the github file?\n\nOn 1/13/2016 12:02 PM, Andy Tuba wrote:\n\nYou should start a new 4.7.0 section and first item \"Converted \nchangelog to markdown (thanks @Ajedi32 https://github.com/Ajedi32)\" \n:grinning:\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2633#issuecomment-171364505.\n. To reproduce\n1. Visit a comment thread\n2. Leave and come back when there are new comments highlighted\n3. Expand a \"show more comments\"\n4. Profit\n5. Repeat as desired until you reach infinity\n\n\nImages:\nhttps://www.allthefoxes.me/res/bugdir/infinite/step1.png - something with new comments\nhttps://www.allthefoxes.me/res/bugdir/infinite/step2.png - Click a \"load more comments\"\nhttps://www.allthefoxes.me/res/bugdir/infinite/step3.png - Results\nhttps://www.allthefoxes.me/res/bugdir/infinite/step4.png - Repeated a few more times\nhttps://www.allthefoxes.me/res/bugdir/infinite/infinite.png - Infinity\nAs the official bug namer, I declare this bug \"4.7 Infinity\"\n. To reproduce\n1. Visit a comment thread\n2. Leave and come back when there are new comments highlighted\n3. Expand a \"show more comments\"\n4. Profit\n5. Repeat as desired until you reach infinity\n\nImages:\nhttps://www.allthefoxes.me/res/bugdir/infinite/step1.png - something with new comments\nhttps://www.allthefoxes.me/res/bugdir/infinite/step2.png - Click a \"load more comments\"\nhttps://www.allthefoxes.me/res/bugdir/infinite/step3.png - Results\nhttps://www.allthefoxes.me/res/bugdir/infinite/step4.png - Repeated a few more times\nhttps://www.allthefoxes.me/res/bugdir/infinite/infinite.png - Infinity\nAs the official bug namer, I declare this bug \"4.7 Infinity\"\n. I currently use gifdelayer for this, very handy\n. I currently use gifdelayer for this, very handy\n. @int3h Sometimes the best you can start with is just to use it. That's how I started with RES - Now, I'm not particularly a developer, I just respond to questions in RESIssues mostly (and I like to pat myself on the back by starting the drive toward build automation, but I only tell myself that to sleep soundly at night)\nThis stands true with any open source project. Do what you can to test, prod at, poke, and use development versions for safari. After that it all just kinda comes naturally as for what needs to be done, where things need to be focused, etc.\nThis is all easier said then done, but its the advice I offer anyone who wants to contribute to any open source project I am apart of. Just start playing with it. You'll know where to go from there. \n. @int3h Sometimes the best you can start with is just to use it. That's how I started with RES - Now, I'm not particularly a developer, I just respond to questions in RESIssues mostly (and I like to pat myself on the back by starting the drive toward build automation, but I only tell myself that to sleep soundly at night)\nThis stands true with any open source project. Do what you can to test, prod at, poke, and use development versions for safari. After that it all just kinda comes naturally as for what needs to be done, where things need to be focused, etc.\nThis is all easier said then done, but its the advice I offer anyone who wants to contribute to any open source project I am apart of. Just start playing with it. You'll know where to go from there. \n. Oops, I mentioned this in IRC but forgot to report it here. Thanks. \nPossibly related: https://www.reddit.com/r/RESissues/comments/4zehre/bug_never_ending_reddit_will_load_the_last_page/ - Fixed by #3112 as well?\n. Oops, I mentioned this in IRC but forgot to report it here. Thanks. \nPossibly related: https://www.reddit.com/r/RESissues/comments/4zehre/bug_never_ending_reddit_will_load_the_last_page/ - Fixed by #3112 as well?\n. Wait there is a new site? I miss everything.\n. With @honestbleeps here - I see no reason to add this option. It seems most people complaining about this suffer from the firefox bug anyways, which adding this setting will be redundant.\nI think the only good alternative is to make it show in a popup like a np warning.\nRES is a very intimate extension. The most out of any I use, the next closest thing I have is my custom ad list in my ad-blocker.\nRES however stores all sorts of things and is highly customizable. The way my filters work, the way links are colored, my accounts, my comment colors, more and more and more. Other extensions might not do this often, but I don't need my extension that refreshes all tabs to do that. Its just a button I press. With RES, its all about me. I need to know what has changed. \nNot only that, but as @honestbleeps has said, many people forget RES is even a thing. Literally multiple times a day, \"Is that an RES feature?\" \"What is RES?...oh yeah I have that.\"\netc...\nLetting people know we exist, where they can get help, where they can contribute, is important. \nAnything you do will annoy someone. It seems to have annoyed a small handful. Job well done.\n. With @honestbleeps here - I see no reason to add this option. It seems most people complaining about this suffer from the firefox bug anyways, which adding this setting will be redundant.\nI think the only good alternative is to make it show in a popup like a np warning.\nRES is a very intimate extension. The most out of any I use, the next closest thing I have is my custom ad list in my ad-blocker.\nRES however stores all sorts of things and is highly customizable. The way my filters work, the way links are colored, my accounts, my comment colors, more and more and more. Other extensions might not do this often, but I don't need my extension that refreshes all tabs to do that. Its just a button I press. With RES, its all about me. I need to know what has changed. \nNot only that, but as @honestbleeps has said, many people forget RES is even a thing. Literally multiple times a day, \"Is that an RES feature?\" \"What is RES?...oh yeah I have that.\"\netc...\nLetting people know we exist, where they can get help, where they can contribute, is important. \nAnything you do will annoy someone. It seems to have annoyed a small handful. Job well done.\n. Latter. No autodetect.\n. Latter. No autodetect.\n. I'm in this A/B so I'll try and reproduce. I'm in this A/B so I'll try and reproduce. Courtesy of /u/tizorres, its mostly fixed https://i.gyazo.com/727131b941f810ae5c0d0bd841acd4b2.png. Courtesy of /u/tizorres, its mostly fixed https://i.gyazo.com/727131b941f810ae5c0d0bd841acd4b2.png. In the future, please post to /r/RESIssues. In the future, please post to /r/RESIssues. It could, yes. I just didnt because if someone had firefox, chrome, and safari, then ran gulp chrome, they would also nuke their safari and firefox.\nI guess that's a pretty edge case. Let me know if you want that changed\n. chrome has options.html\nlib/core has templates.html\n. @andytuba You know, we could always ask /r/enhancement what they think.\n. Can this get moved down to the other /hosts/? Same for all other manifests\n. like gulp zip (all|chrome|firefox|etc)?\n. Noted\n. I personally don't think this is enough. People might be really stupid.\nUse a hover similar to np warnings when enabling? \n. You mean :+1:  ? :joy: \n. ",
    "jdiez17": "Hey there, backend guy here. I'm not sure what an imgur-like API would look like but what do you think about an endpoint like /<hash>.json that'd give you an object like this?\n{\n    'type': 'video'\n    'original': '/<hash>.gif',\n    'conversions': [\n        {'file': '/<hash>.mp4', 'mimetype': 'video/mp4'},\n        {'file': '/<hash>.mp4', 'mimetype': 'video/ogg'},\n    ]\n}\nAnd for images:\n{\n    'type': 'image',\n    'original': '/<hash>.jpg',\n}\n. Revised API:\n{\n  \"original\": \"/hash.gif\",\n  \"files\": [\n    { \"type\": \"video/mp4\", \"path\": \"/hash.mp4\" },\n    { \"type\": \"image/ogv\", \"path\": \"/hash.ogv\" },\n    { \"type\": \"image/gif\", \"path\": \"/hash.gif\" }\n  ]\n}\nAnd for images:\n{\n  \"original\": \"/hash.jpg\",\n  \"files\": [\n    { \"type\": \"image/jpg\", \"path\": \"/hash.jpg\" }\n  ]\n}\n. Hey, just wanted to let you know that the API is live on gifquick.net. Works like we discussed. Just append .json to a file and it'll give you an object with all the information you need. Thanks!\n. Let us know if it doesn't work for you when you're on the ground. Enjoy the flight!\n. Let us know if it doesn't work for you when you're on the ground. Enjoy the flight!\n. Okay, so hitting our API is very cheap on our end (only one redis operation) but may affect load time for RES users. So I think we could go for an API endpoint like /api/info?hashes=h1,h2,h3 that would return a JSON like this:\n```\nGET /api/info?hashes=h1,h2,h3\n{\n    'h1': {\n        \"original\": \"/hash.gif\",\n        \"files\": [{\n            \"type\": \"video/mp4\",\n            \"path\": \"/hash.mp4\"\n        }, {\n            \"type\": \"image/ogv\",\n            \"path\": \"/hash.ogv\"\n        }, {\n            \"type\": \"image/gif\",\n            \"path\": \"/hash.gif\"\n        }]\n    },\n    'h2': {\n        \"original\": \"/h2.gif\",\n        \"files\": [{\n            \"type\": \"video/mp4\",\n            \"path\": \"/h2.mp4\"\n        }, {\n            \"type\": \"image/ogv\",\n            \"path\": \"/h2.ogv\"\n        }, {\n            \"type\": \"image/gif\",\n            \"path\": \"/h2.gif\"\n        }]\n    }\n}\n``\n. Okay, so hitting our API is very cheap on our end (only one redis operation) but may affect load time for RES users. So I think we could go for an API endpoint like/api/info?hashes=h1,h2,h3` that would return a JSON like this:\n```\nGET /api/info?hashes=h1,h2,h3\n{\n    'h1': {\n        \"original\": \"/hash.gif\",\n        \"files\": [{\n            \"type\": \"video/mp4\",\n            \"path\": \"/hash.mp4\"\n        }, {\n            \"type\": \"image/ogv\",\n            \"path\": \"/hash.ogv\"\n        }, {\n            \"type\": \"image/gif\",\n            \"path\": \"/hash.gif\"\n        }]\n    },\n    'h2': {\n        \"original\": \"/h2.gif\",\n        \"files\": [{\n            \"type\": \"video/mp4\",\n            \"path\": \"/h2.mp4\"\n        }, {\n            \"type\": \"image/ogv\",\n            \"path\": \"/h2.ogv\"\n        }, {\n            \"type\": \"image/gif\",\n            \"path\": \"/h2.gif\"\n        }]\n    }\n}\n``\n. Okay, that works. I'll start working on the bulk API as soon as possible.\n. Okay, that works. I'll start working on the bulk API as soon as possible.\n. I'm not sure what you're trying to achieve here, but it won't work. The only values that blob_type can have areaudio,videoorimage`.\n. ",
    "sirrocco": "YES - damn ... how did I not know about that. Thank you\n. YES - damn ... how did I not know about that. Thank you\n. YES - damn ... how did I not know about that. Thank you\n. ",
    "bkeiren": "Would this do?\n. ",
    "Zren": "There are some lighter elements in the night mode (eg: the #sr-header-area), so it does help too.\nIt looks like so:\n\n. ",
    "joey5755": "Haha you're right on top of this!  Yes I think we've got it down now.\n. Haha you're right on top of this!  Yes I think we've got it down now.\n. That is a good point.  We wanted to provide gif hosting without rocking the\nboat too much.  It should be at a minimum, the same as hosting a gif\nanywhere else except with options.\nIn this case we thought users might get frustrated if the videos \"look\ndifferent\", but if they come across a big one they can always click on the\nlink to view the video version.\nOn our site we let users switch back and forth between gif and video, we\ncould possibly do the same within RES.  We could load both objects for the\nuser to choose.\nOn Sat, Aug 10, 2013 at 6:46 PM, honestbleeps notifications@github.comwrote:\n\nok, my immediate question is: why show it as a GIF in RES rather than\nHTML5 video?\nRES is only running in browsers that support HTML5 video, and your website\nshows it in HTML5 video?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/509#issuecomment-22450191\n.\n. Hi there @JonBons I made Gfycat.  In principle, we're ok with this and the traffic load should be manageable.  What generally happens is that there might be a handful of simultaneous requests for converting different urls, but a boatload of requests for fetching the most popular urls at the same time.  And the latter response can be cached and handled at the network edge without ever hitting our api service, so high traffic load wouldn't impact anything.  \n\nI think you might have made things more difficult on yourself than need be however.  Using /transcodeRelease, the response is immediate if the url has already been converted, but you need to follow up with /status checks to determine when processing is completed (by the way status of \"NotFoundo\" is normal, this occurs before processing has started and does not indicate failure).   \nIf you use /transcode (instead of /transcodeRelease) then you don't need to follow up with polling /status, the open connection will respond with the new url when the conversion is completed (although due to network load balancers, this will time out at 30s)  \nBut I probably would do neither polling status or hanging onto /transcode.  I would just hit /transcodeRelease, and if the url is converted go with it, if not go directly the gif and the url will be converted in the background for the next user.  \nAlso we return the new url from /transcode, we could do the same thing from /transcodeRelease to save the extra call to /cajax/get\n. Ok CORS should cooperate on all endpoints now.  I've added the widest permission to every api response-- Access-Control-Allow-Origin: *.  This should work without any OPTION calls.   \nWe had this set previously for /cajax/get requests and it seems to work fine for embeds and extensions, but let me know if there are any issues or anything else I can adjust to make things smoother.\n. Ok CORS should cooperate on all endpoints now.  I've added the widest permission to every api response-- Access-Control-Allow-Origin: *.  This should work without any OPTION calls.   \nWe had this set previously for /cajax/get requests and it seems to work fine for embeds and extensions, but let me know if there are any issues or anything else I can adjust to make things smoother.\n. Great thanks for this.  And thanks for the heads up.  \nPersonally, I think I'd prefer no branding at all for the gfycat links, and maybe even no controls (even the native video).  Just thinking as a user, these clips are normally tiny and quick and I just want to open the expando, view the clip, and move on to the next link.  \nBut give me a bit and I'll propose an alternative.\n. Ok I put a pull request through to this fork.  I toyed with merging this into a generic module with a choice of functions and styles rolled into one larger module.  But in the end I felt that would be harder to maintain and more confusing.  What I've added here is one template for Gfycat, and one set of functions that can handle the features in our links -- reverse playback, frame by frame buttons, slower/faster buttons, and parsing a Gfycat url configured with presets for with those options.  \nI prefer this template for Gfycat links and I'll explain why:  we thought about the look and feel of our short video loops for a long time, and really feel that there are some key reasons why GIF fills a unique niche that video does not.  One of these is that no controls, flash components, or interfaces are ever required, and the GIF always feels \"self contained\" (even though it is really something like a video and the browser something like a \"player\").  So part of our philosophy is to avoid controls and overlays on the face of the videos, and let them feel more like self contained objects.  \n\n. Re: different controls -- I get the idea behind consistency, but lets not be too dogmatic.  We're only about pure gifs and silent, short, looping gif type videos, so there is a difference in form, function and expectations from normal full length videos with sound, and we also have different controls options like reverse and frame by frame.  Vimeo links don't need a Youtube skin and that's been working ok.    \nRe: style sheet, I just thought it would be clearest to keep my Gfycat template addition self contained within 20 lines in the template file.\n. Frame by frame controls only show up when the video is paused, but they are there. \nRe: icons, I put all of the icons in one line of base64 text so it shouldn't cause any problems.  This way the user gets same buttons as they see on our site, so its just a nice consistency in how to operate a gfycat link.\n. Our style preferences aren't so much about placating the GIF crowd, as recognizing what GIF has done well.  We love GIFs.  We think we can do better using video codecs but we want to capture what GIF has done as a video player that is better for some content.     \nSo we definitely prefer minimal controls, avoiding overlays, and avoiding the look and feel of old school video players.  And for branding reasons, we do have some preference for the same Gfycat UI buttons as the site uses.    \nBut if we can hit these three things, then I'm happy:\n-  minimal controls that don't overlay our videos\n-  avoid promoting another sites User Interface using Gfycat links\n-  and best case scenario, but I'm flexible: allow our feature set without extra buttons -- pause, reverse, step faster, step slower, frame forward, frame back\n. I'd be fine with that.  Our icon file is only 1.2kb  (or 1/10th the size of the mediacrush logo file).  But if it helps RES work their magic providing a clean user experience, I'm 100% ok with that.  I'll bring Coke to the RES party in a Red Solo Cup--its their party and Red Solo Cups are still fun-- I just think its a fair request not to drink Coke from a Pepsi cup.  \n. Both were listed as concerns, but if consistency is the one that sticks, I'm perfectly happy respecting the RES teams right to choose consistency, just happy to be invited to the party.   As long as consistency doesn't mean \"everyone gets Pepsi cups\".  And if we're keeping the icons small, only on mouseover, and avoiding anything resembling a progress bar, that will be much much better for the experience we're trying to achieve (ala vine, instagram or any of the other html5 looping video co's with $'s for design). \n. Turns out the batch icons still look ok shrunk down to 12px, and the look and feel is almost identical so no biggie either way to me.\n. Thanks!  I don't immediately find the issue, I'll have to take a look at it a bit later.  This is the first time I've looked through the auto converter, there are a couple of things I can clean up here (we don't need to generate a random ID, and we don't need to call /ajax/initiate for this kind of conversion).   \nMy first thought is that we should use a regexp to avoid the conversion call entirely, when the url is gfycat (since we know it already exists).  But the conversion call should automatically just return the same gfycat info that we need anyway, so it will be just as fast (and therefore simpler to leave as is)...  but I'll have to find out where it is failing.\n. Yes, the url will always be null for direct uploads, so there will be many of these.  Otherwise, it holds the url of the original GIF or video that was fetched to create the Gfycat.   \nIn the gfyObject javascript for generating player controls, the url is used to determine if the link is set for reverse playback, or altered speed, or linked directly to a frame.  eg: http://gfycat.com/RashAffectionateAmericancrocodile#?speed=4  \nFor fetched urls, that should never happen, so I think we can just pass an empty string or any dummy text to the gfyObject.  But I'll change the url parse stuff to accommodate nulls and test if that fixes the issue.\n. Gfycat links are also broken for the latest Firefox builds (4.5.0.2), zooming stopped working and the video disappears immediately.  Another user pointed out that changing the style on the video tag to relative fixes the issue.   \nI was going to try changing the positioning to relative permanently, but I guess that is not the solution.  I'll try some other things...  \n. Gfycat links are also broken for the latest Firefox builds (4.5.0.2), zooming stopped working and the video disappears immediately.  Another user pointed out that changing the style on the video tag to relative fixes the issue.   \nI was going to try changing the positioning to relative permanently, but I guess that is not the solution.  I'll try some other things...  \n. Thanks for the heads up @andytuba, yes I can confirm a1e94e65d3fd4add0a775f551929dd9621095023 fixes the issues I just mentioned (video missing).   \nIt looks like it also fixes this issue.  I can confirm that the spacing placeholder is created and properly sized to the content, and the video is not moving over or under any elements over the page for me.\n. Thanks for the heads up @andytuba, yes I can confirm a1e94e65d3fd4add0a775f551929dd9621095023 fixes the issues I just mentioned (video missing).   \nIt looks like it also fixes this issue.  I can confirm that the spacing placeholder is created and properly sized to the content, and the video is not moving over or under any elements over the page for me.\n. Can you describe what you're seeing, I may not be understanding something?  Is it the right sidebar that is getting overlayed, like this: http://i.imgur.com/BpIGPZY.jpg   \nIt actually works the opposite for me-- the \"Convert to gfycat\" option works (after honestbleeps fix), but when the option is off, the gifs do not work (all image types).  So it looks like max-width needs to be fixed for images.  \nAlso, just below the video tag in the DOM, there is definitely a tag: <div id=\"RESImagePlaceholder\" class=\"RESImagePlaceholder\"...\n. Can you describe what you're seeing, I may not be understanding something?  Is it the right sidebar that is getting overlayed, like this: http://i.imgur.com/BpIGPZY.jpg   \nIt actually works the opposite for me-- the \"Convert to gfycat\" option works (after honestbleeps fix), but when the option is off, the gifs do not work (all image types).  So it looks like max-width needs to be fixed for images.  \nAlso, just below the video tag in the DOM, there is definitely a tag: <div id=\"RESImagePlaceholder\" class=\"RESImagePlaceholder\"...\n. One more thing, what browser and version is this?  It looks like Firefox scrollbar, but maybe Firefox linux?  I just tried a few comment threads on Chrome and Firefox 30.0 Windows with the feature both on and off and it doesn't reproduce the bug.\n. One more thing, what browser and version is this?  It looks like Firefox scrollbar, but maybe Firefox linux?  I just tried a few comment threads on Chrome and Firefox 30.0 Windows with the feature both on and off and it doesn't reproduce the bug.\n. One more thing, what browser and version is this?  It looks like Firefox scrollbar, but maybe Firefox linux?  I just tried a few comment threads on Chrome and Firefox 30.0 Windows with the feature both on and off and it doesn't reproduce the bug.\n. One guess-- you probably have ImageZoom (drag to zoom) off in the UI options?  Just tested and that reproduces no placeholder (although still doesn't reproduce the overlay for me).\n. One guess-- you probably have ImageZoom (drag to zoom) off in the UI options?  Just tested and that reproduces no placeholder (although still doesn't reproduce the overlay for me).\n. ",
    "tekknolagi": "That would most definitely be of interest.\nOn Wed, Jan 1, 2014 at 5:51 PM, Andy Tuba notifications@github.com wrote:\n\nYou may be interested in the neverEndingLoad event which fires on windowwhen Never-Ending Reddit loads a new page.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/509#issuecomment-31434972\n.\n. I have updated my extension :)\n\nOn Wed, Jan 1, 2014 at 5:57 PM, Maxwell Bernstein tekk.nolagi@gmail.comwrote:\n\nThat would most definitely be of interest.\nOn Wed, Jan 1, 2014 at 5:51 PM, Andy Tuba notifications@github.comwrote:\n\nYou may be interested in the neverEndingLoad event which fires on windowwhen Never-Ending Reddit loads a new page.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/509#issuecomment-31434972\n.\n. \n\n",
    "bdesham": "I would have tried to fix this problem from the Instapaper end\u2014they used to have a section on their website in which you could tell them, \u201cfor all pages on *.reddit.com, ignore elements that match the following XPath expression\u2026\u201d. Unfortunately Instapaper was sold recently and the new owners seem to have removed this functionality. (I can\u2019t blame them; how many people are going to write XPath to get rid of a couple of extraneous elements in their Instapaper articles?)\nI understand your objection; this is kind of an edge case. I\u2019ll write to the Instapaper people to see if they can manually tweak things on their end. And even if not, it\u2019s a minor problem.\n. ",
    "seanfreiburg": "This is an issue I'm still experiencing in Firefox\n. ",
    "themichaellai": "Yeah, it seems to be cloud.steampowered.com, and cloud-[1-4].steampowered.com currently.\n. ",
    "ericsubach": "Much obliged! I've tried examples on the web with JSFiddle and they all align to the side. I figured RES must have overridden some CSS, but I couldn't find any.\n. Merged your commit. This is good to go.\n. @andytuba I have yet to read all these comments, but I want to thank you for taking the time to look over this. I should explain that I'm not skilled in web development. I used the Single Click Opener as a model for mine, so that should explain the likeness.\nI would definitely like some help in making this conform to development standards. Any and all help is appreciated.\n. Your comments are greatly appreciated and I will need your expertise in fixing this up.\n. This might turn out to be a good thing. I could spruce up the documentation on writing a module now that I've struggled through figuring out what's going on (at least from a high level perspective).\n. Let's settle on a name for it, and I can globally change it. I can also add a better description. I'll try to make the edits to the developer docs.\nAs far as changes to the code, it would probably be done faster and with less error if you did it. Let me know your thoughts.\n. I can certainly do that, it would just take more time and effort on my part. Is it reasonable to assume the pull request will be accepted if I do that?\n. Good suggestion. It refers to the title of the post (I hope that description is correct; see the image). For some reason I couldn't think of that when I created this.\n\n. That sounds like a task for someone more knowledgeable than myself.\n. I used SingleClickOpener as my basis, and this was the style it did.\nI assumed it was supposed to be done like this so that settings take effect immediately without reloading the page. Is that a false statement? We should update the developer documents to reflect the decision.\n. As a side note, I should also update the docs to show that there is a makelinks.sh script...my first attempt I did them by hand :(\n. Just something to note: the paragraph wrapping the text has a class of title and the div wrapping that has a class of entry. Maybe EntryTitleAction. Thoughts?\n. ",
    "chizu": "Just noticed that uses of chrome.extension.inIncognitoContext are also broken on the Ubuntu 13.10 Chromium build, which points to the namespace being entirely broken on their build. Filed this bug with Ubuntu for that half of these issues: https://bugs.launchpad.net/ubuntu/+source/chromium-browser/+bug/1232575\n. ",
    "dxprog": "redditbooru is indeed my site. Didn't even consider using CORS as a workaround, so I can look into that and update the commit. Thanks!\n. redditbooru is indeed my site. Didn't even consider using CORS as a workaround, so I can look into that and update the commit. Thanks!\n. Thanks for the idea on using CORS. I've rolled back the config changes.\n. Thanks for the idea on using CORS. I've rolled back the config changes.\n. Well, hopefully I didn't fuck the whole rebase operation up (damn my lack of basic git knowledge!). My apologies if I've made a mess of things/caused an enormous amount of github emails.\nCORS has been tested and is confirmed to be working.\n. Well, hopefully I didn't fuck the whole rebase operation up (damn my lack of basic git knowledge!). My apologies if I've made a mess of things/caused an enormous amount of github emails.\nCORS has been tested and is confirmed to be working.\n. No worries. I think that should get my codebase up to speed.\n. No worries. I think that should get my codebase up to speed.\n. Missed the \"master\" bit on my fetch. Seems I got a clean rebase now.\n. Missed the \"master\" bit on my fetch. Seems I got a clean rebase now.\n. Seems to have done the trick. Thanks for the help!\n. Fixed my Sublime whitespace setting and fixed all of them...\n. ",
    "brandonevans7": "Nice improvement!\n. ",
    "GrantCodesCodes": "Yes please add this :+1:\n. ",
    "prusnak": "I already use HTTPS Everywhere, but maybe other users could benefit from having this feature directly in RES.\n. ",
    "antriver": "I'm the site's creator.\nThanks for taking a look. I wasn't really sure what the criteria were to be part of RES. CtrlV gets used on Reddit now and then so I just thought it would benefit some people. I saw that snag.gy is in the RES code already and that gets used less frequently on Reddit than CtrlV (http://www.reddit.com/domain/snag.gy)\n. ",
    "samelawrence": "@andytuba You pinged me in the IRC room but I was away. Do you still want my help on this? Let me know if there's anything I can do.\n. @andytuba Yeah, man. That sounds simple enough for something I can tackle. If you'd like to bring me up to speed, you can PM me on reddit (same username) and we can get to work. I'm free all night (EST).\n. At the top right of the page, there's a small gear that links to Settings Console and then there's a big label that says \"Preferences\". Just based on the size / label differences, I find it hard to imagine people don't know Reddit prefs exist there (though you probably know better than me). Would it make more sense, from a hierarchical perspective, to make RES preferences behave as an extention of Reddit's native prefs page, either as additional tabs, or embedded options below / among theirs?\nI do think that Reddit prefs could stand a good redesign / vertical pixel reduction.\n. +1 to not abstracting anything reddit-native unless needed.\nWHY don't people know there are prefs? Maybe a better 1st-time-user RES-tip would fix this? A set of tips specifically for new users, like a drip email program?\nWHY do we want users using prefs? To create a better experience, right? To me, this comes back to a RES-tip solution (users who opt out either don't care, or are pro users who don't need them). If not RES-tips, the problem is a teaching problem. Screencasts? Documentation? Better support options? (I realize RES generates no revenue, just spit-balling).\nHOW do we get users to play with both types of prefs? Flash the labels once a week? RES-tips? Make the gear look more like native prefs (replace with \"RES Preferences\" and restyle native label to \"Reddit Preferences\")? Restyle the Reddit label to be a red gear next to our blue gear?\nWHO should use prefs? Certainly not everyone, so all these pushing schemes should be opt-out optionally (as tips are).\nI don't think over-riding their prefs is good, and I think too much dithering will over-engineer this problem into just another massive prefs page that nobody looks at. But then, I'm the total newbie in the ~~room~~ thread, so take all this with a pinch of salt.\n. @mc10 Thanks for including that link. Newlines at the ends of files have annoyed me for years and I never knew any valid reason for their inclusion. Now I see they aren't just arbitrary. They'll still tickle my OCD, but hopefully I'll get over it more comfortably now. :)\n. Is the goal for this greater visibility and more readership of release notes?\n. ",
    "srdavis": "Workaround I've found: On Menu Bar, View > Zoom > check Zoom Text Only. \nNot ideal, but zoom will only adjust text and won't blur the favicon. This can cause some view issues because it changes the image to text proportions. But it may work for you until this bug is fixed.\n. ",
    "larsjohnsen": "Cannot be implemented due to the stylesheet not being accessible when allow subreddits to show me custom themes is disabled.. Videos are width-limited.\n. I believe this has been resolved, as the popup appears instantly and has a load indicator. #3273\n. Resolved by #3316, #2755\n. Closing this since RES doesn't generate the toggle button when subreddit have no style.. Implemented.. Implemented by the customToggles module.. Videos marked 'muted' are auto-expanded.\n. Implemented.. Performance improved by #3644.. Implemented.. Not an issue anymore: +RESIssues is redirected to RESIssues.. Fixed.. Implemented by #4248.. Fixed.\n. Appears to have been implemented as per linked request.. @Double-A-92 loggedInUser returns the user id. . The throbber is removed from galleries.\n. FIxed. (#2998, but likely even earlier)\n. Implemented.. > Current issues: doesn't pause on collapse\nWould be resolved in #2903: https://github.com/larsjohnsen/Reddit-Enhancement-Suite/blob/seperate-gallery-image/lib/modules/showImages.js#L1275-L1287\n. Implemented.. @brett1337 You can enable that behavior https://old.reddit.com/#res:settings/showImages/markSelftextVisited. Reddit also adds a beforeunload listener now, so there's unfortunately nothing RES can do to preserve the optimization.. Appears to be fixed.. Appears to not be an issue anymore.. Number of matches are now surfaced.. Fixed #3004 \n. Option replaced with preloadCount.\n. @andytuba The initial post also describes another feature, namely displaying a notice to renew the subscription when it lapses. \nA easy solution could be to to add a notification here:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/4f0ba4c0a54071a894cec10dbc85c4136a43fa27/lib/modules/newCommentCount.js#L269-L271. Appears to be fixed (focus is always restored to document.body); in any case, keyboardNav on buttons is accepted from #3001. \n. @Ajedi32  https://github.com/honestbleeps/Reddit-Enhancement-Suite/compare/master...larsjohnsen:dropbox Appears to work fine.\n. I think this is resolved: scrollStyle is only set to top if scrollOnExpando is enabled https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/218c1bdae2b2595793d209c5ce50933bc5644b53/lib/modules/keyboardNav.js#L806 (the scrollOnExpando description should be updated to reflect this).\n. Fixed.\n. Confirmed. Seems like it tries to open the expando before it is ready.\n. @thybag A compromise could be to prefetch when the expando-button becomes visible. \n. Implemented #3957. Fixed by https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3149/commits/cd37e0a9cbe8328cc45a0ea59eea30ebdfea32d1 since hosts.default.detect now tests pathname (which doesn't include anything after ?) instead of href.\n. Squashed and rebased onto the webpack branch.\n. Thanks for the feedback, @erikdesjardins \nThe now remaining TODO is concerning rewriting the media hosts files (perhaps by pushing all options into expandoOptions), but I don't plan on doing that at this stage.\n. > html will always be a jQuery object here, so you don't need the ternary (I think?)\nFor some reason is an empty string returned instead when there's no content. \n. > Can you make the number of pieces that get preloaded into an option, default 2?\nReplaced it with a new option (in lieu of migrating it), galleryPreloadCount.\n. Fixed in #2903 \n. Closing this since lack of hardware acceleration is not a RES issue.. I believe it is desirable to ignore all links which only changes the hash (either Element.getAttribute('href').startsWith('#') or URL.pathname, URL.origin,  and URL.search matches location).\n. I believe it is desirable to ignore all links which only changes the hash (either Element.getAttribute('href').startsWith('#') or URL.pathname, URL.origin,  and URL.search matches location).\n. Updated to use frameDebounce from #2989\n. Fixed.\n. Thanks, @erikdesjardins. Fixed now.\n. @erikdesjardins Given this any more thought? It's been fairly stable for a while now (for my use cases, anyhow), so it'd be great to get more feedback.\n. Preliminary instructions. I think these should give an intro to all functionality, and the rest hopefully is self-explanatory.\nAny thoughts?\n\nFilterline is a tool to choose what kind of posts that shall be shown, using simple filters or criteria. To activate it, click on the '\u2200' icon in the tab menu. Any filters you choose for a subreddit / domain / user will automatically persist.\n- Click once on a filter (e.g. 'has expando') to only show posts which matches it.\n- Click again to only show things which do not match it.\n- To clear a filter (delete or make inactive), right click on it.\nSome filters support a criterion. This is entered by going through the \"more\" dropdown and clicking on a filter. E.g. 'has expando' can be given criterion 'image', which makes it filter only posts which have image expandos. Likewise, 'post after' can be given criterion '10d' to specify to only show posts less than 10 days ago.\nYou can use the currently selected thing as a basis for a new filter. To do this, click on '=' to the right of the filter name.\n'Save to customFilters' extracts the current filters and inserts them into a new customFilter, which can further specify when the filters shall be active.\nTo see why a post is hidden, go into the dropdown and check 'Show filter-reason'. This also gives you the opportunity to remove an external filter so that you don't have to look for it in the options console.\nYou can also use the command line to manipulate the filterline. Enter it by pressing the key 'f'.\n\n'\u2200' means 'forall': Only posts which comply with every active filter is shown.\n'\u00ac' means 'negate': Only show posts which don't match the filter.\n. @andytuba That would be a nice addition to filterline. I envision it as a small toggle floating to the right.\n. Thanks, @erikdesjardins \n~~I couldn't figure out how to integrate filterlineState.active to options. Any ideas?~~\n. Seems to have been fixed in #2998. I'm not sure why it's broken in master, but I can find out.\n. Related: Shortcut for removing height restriction (useful for multi-picture images) b7c304c57d8fae022bffcfa251d6e1f915259788\n. Related: Shortcut for removing height restriction (useful for multi-picture images) b7c304c57d8fae022bffcfa251d6e1f915259788\n. ~~That panel can probably be removed as it is obsolete. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3089/commits/23bd642fe76667e776f5edf8297c79f0ba12d8be~~\nEdit: Never mind. The new descriptions misled me. I'll see if I can update them.\n. @erikdesjardins When maxWidth or maxHeight limited the size, the aspect ratio of the element became incorrect.\nI've amended the commit to use elementResizeDetector as fallback mechanism.\n. Sorry for not catching this \u2014\nI cannot test this now, but I think it will suffice to add the conditional element.state !== mediaStates.UNLOADED to element.emitResizeEvent https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/3e99d382b0ced43e89f9f231d7f72980758b29a7/lib/modules/showImages.js#L1055\n. I believe I fixed it (or is there a use case I'm missing?) https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3144/commits/2b7c405ed82071fac8de1facf30dded23f30814f\n. This is fixed in the beta. The generic media host now only tests whether the path (i.e. /openseadragonizer/) matches.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/hosts/default.js\n. @RicardoDMelo Could you try using RES with another Windows user account? That should create a fresh Chrome profile, which may reveal that the cause is failed Chrome upgrade migration.\n. @RicardoDMelo Could you try using RES with another Windows user account? That should create a fresh Chrome profile, which may reveal that the cause is failed Chrome upgrade migration.\n. @erikdesjardins showImages doesn't have module.includes specified, so it is running. checkElementForMedia  does however require that elements is within in a Thing. I'll fix it.\n. @erikdesjardins showImages doesn't have module.includes specified, so it is running. checkElementForMedia  does however require that elements is within in a Thing. I'll fix it.\n. Related: I wrote selectClosestVisible which may be used here after click(hide) instead of the scrollStyle: 'null' workaround.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3042/commits/b532b9b7e45c2741726cb7c133c230e98631f596#diff-04a03be1356b2339100df6464d9f34d6R181\nFeel free to copy it. \n. Related: I wrote selectClosestVisible which may be used here after click(hide) instead of the scrollStyle: 'null' workaround.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3042/commits/b532b9b7e45c2741726cb7c133c230e98631f596#diff-04a03be1356b2339100df6464d9f34d6R181\nFeel free to copy it. \n. LGTM\n. @erikdesjardins Should I eslint-ignore the Unexpected path \"../modules/notifications\" imported in restricted zone  import/no-restricted-paths error?\n. Appears to be an issue with the library Noembed uses. https://github.com/leedo/noembed/blob/master/lib/Noembed/Provider/XKCD.pm\n. Finding some way to show the changelog in RESAnnouncementAlert may be preferable, as using both seems redundant.\n. @andytuba The link# keybindings has been noconfig since v4.6.0, so probably very few.\n. Yes\nOn Fri, 9 Sep 2016, 20:07 fireattack, notifications@github.com wrote:\n\nDoes this also fix the shift problem caused by \"Selected Entry\" module? If\nnot I can open another ticket for that.\n[image: zz8mmk]\nhttps://cloud.githubusercontent.com/assets/4130991/18397539/52c7ecf2-768e-11e6-860e-2e4f9940377f.gif\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3400#issuecomment-245992827,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABquKToFfvO4_XzbTL1P0yFPemoPt2PWks5qoaBXgaJpZM4J1Qya\n.\n. When returning to a page and not having the previous page restored, what does entering performance.navigation.type in the browser console result in?\n. To be consistent with the settings console, sure.\n. @erikdesjardins Updated with solution which uses only 1 global interval.\n. I was able to reproduce this. Note that you need to scroll/resize the window after expanding the comment to have the expando completed. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/6541afb22559bb9654d5c06bed405fa30fe82e83/lib/modules/showImages.js#L449\n\n@erikdesjardins Fixed in #3306 \nSteps to reproduce:\n1. Go to https://www.reddit.com/r/videos/comments/52aypc/facebook_automade_a_chipper_video_slideshow_of_my/d7j3ogj\n2. Set comment vote threshold above seanthestone's comment\n3. Reload page\n4. Activate show images\n5. Expand seanthestone's comment\n6. Scroll page\n7. Expando is erronously opened\n. I'm not sure how useful this button is, since it is equivalent to right clicking the video/image and save video/image as\u2026.\n. In case you want to include a list of changed settings in the diagnostics: https://github.com/honestbleeps/Reddit-Enhancement-Suite/compare/master...larsjohnsen:issue-changed-settings\nAppends something like this: \nRESTips           true \u2192 false\n    betteReddit       \n       fixHideLinks                     true \u2192 false\n    commentStyle      true \u2192 false\n    context           true \u2192 false\n    customToggles     true \u2192 false\n    easterEgg         true \u2192 false\n    filteReddit       \n    hideChildComments true \u2192 false\n    hover             \n    keyboardNav       \n       linearScrollStyle                directional \u2192 middle\n       nonLinearScrollStyle             legacy \u2192 middle\n       onVoteMoveDown                   false \u2192 true\n       followLinkNewTabFocus            true \u2192 false\n    logoLink          true \u2192 false\n    messageMenu       true \u2192 false\n    ...\n. An option could be added alongside with autoExpandFirstVisibleNonMuted (https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3306/files#diff-81e82c385dc9912064f4bc5e91b47e58R283) for autoExpandNSFW\n. I envisioned something like this\n\nOnly half the icon is visible, but it could be set completely visible in the foreground on drag (and the coursor hidden).\n. It's not a problem that it has a separate element, as the siteAttribution-element is not always available. As for color, it's probably not desirable that it is too distinct; the icon only needs to convey that it is possible to resize the element by dragging in that area.\n. > (Having just the handle isn't ideal as its quite easy to drag that behind a sidebar)\nTo avoid this, modify makeMediaIndependentOnResize(element, iframeNode); to makeMediaIndependentOnResize(element, element);\n. Try this template\n<div>\n    <div class=\"res-iframe-expando\">\n        <iframe src=\"{{url}}\" allowFullscreen=\"true\"></iframe>\n        <div class=\"res-icon res-iframe-expando-drag-handle\"></div>\n    </div>\n</div>\nand then you can pass the .res-iframe-expando element to makeMediaIndependentOnResize as the second argument. Also, by setting pointer-events directly on the iframe, you can forego using a resize helper. \n. Allowing drag-start from anywhere on the footer shouldn't be an issue, as long as it doesn't interfere with siteAttribution.. I don't think it is necessary to add any additional fields, since it appears that this is a browse context.\n. Though moment could also be used in post cases. A generic postDate could likely replace postAfter and postAge\n. @erikdesjardins I considered that, but since it is polling-based, using it would likely be more expensive and slower.\n. The polyfill appears to work fine in Edge/Firefox, so I removed the old implementations.\n. Also fixes #3625 since it moves generation of edit-tools to the focus event.. Also fixes #2105. Appears to be an issue with case sensitivity (subreddit DnD is tested as if dnd, which doesn't match). Closing as Filterline now has a power off button.. Closing as Filterline now has a power off button.. Correct\nOn Wed, Dec 7, 2016, 17:02 Erik Desjardins notifications@github.com wrote:\n\nThis fixes reports of \"loading a new NER page with 'show all images'\nreopens all images\"?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3744#issuecomment-265487101,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABquKe0pooH6Y6Cz8WG6Z2FQm6gy05Liks5rFtgUgaJpZM4LGaXc\n.\n. This would remove (blank) the shortcut for the options that aren't chosen. Thoughts?\n\n\n. Probably a bit late, but am I correct in that the hideCommentsOnHeaderDoubleClick option does practically the same as disabling/enabling the module?. @KetillG The code seems correct, but in order to get scrollStyle: 'middle' working you need to merge the latest master.. Related: #2977. Fixed in #4839 . Fixed in #4839 . What about using a less intrusive default style?\n.RES-keyNav-activeElement { box-shadow: 3px 0px 0px -1px grey; } gives this:\n which I think sufficiently shows what entry is currently selected.. Appears to be due to #3995 (Set .visited on Thing). trackVisit filters out all Things which already has .visited, but since it is batched (delayed) that's always the case.. Title change since the scope of this PR has steadily increased.. You are correct in that inline-block on .res-expando-block has some issues:\n\nTo avoid that, wrapping .res-expando-block in a div will probably suffice.\n. You are correct in that inline-block on .res-expando-block has some issues:\n\nTo avoid that, wrapping .res-expando-block in a div will probably suffice.\n. Additional style that needs to be reset: https://www.reddit.com/r/RESissues/comments/69l6v0/popups_are_cut_off_when_using_search/. Additional style that needs to be reset: https://www.reddit.com/r/RESissues/comments/69l6v0/popups_are_cut_off_when_using_search/. The error you see is not related to RES (you'll see it without RES enabled too).\nCould you see whether this solves your problem: https://www.reddit.com/r/RESissues/comments/6a8oy6/res_suddenly_stopped_working/dhco25m/?context=3 If not, you might have to create a new Firefox profile.. It might rather be your RES storage which is broken. You could try removing ./browser-extension-data/jid1-xUfzOsOFlzSOXg@jetpack/storage.js from your Firefox profile directory.. Can you tell a little about your use case which requires the last link to be placed at the bottom of the window?. I see. Using page down might work for you after completing the top half, so that the next part comes into view and you can continue downwards without having the viewport moving.. I agree with you that navigating to the next URL when NER is disabled is a step too many. I'll see if I can change that soon.. I'm not sure about how big an issue this is, but by using identity the oauth flow can be a little mysterious:\n instead of, as with Edge: \n.\nUsing identity also makes development somewhat harder, as redirect_url must be specified to match the build's generated id.\n. Thanks \u2014 appears to work fine for all browsers.. Note that the old tag stops responding to clicks. Reddit apparently clones the elements when saving the change, so RES loses track of it and it is correct to re-add a functioning tag. It would be nice to do a cleanup of the old elements when that occurs, but with d2x this issue will likely self-correct.. Changed this to simply flag descriptions that should not be converted.. RESmodules.newCommentCount.count is junk leftover from https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/c8f5911b0893c328594dc4808b2f6defe67af217/lib/modules/newCommentCount.js#L467 which appears to have been a typo.. Disabling returnToPrevPage should prevent this issue. \nreturnToPrevPage saves the currently loaded page in history.state so that it can quickly be restored. Unfortunately, in some cases it exceeds the amount of data Firefox allows to be stored there, and Firefox silently stops further code execution.. Yep\u2014I see no reason not to.. Using this library (js-base64) instead of atob also fixes the issue.. Note that most Regex descriptions will be moved into the module description with #4191 as basically all pattern match filters will support regexes.. To perhaps solve the underlying issue which is that hide is delayed and causes the viewport to move after the automatic scroll, enable hideLinkInstant.. The hideLinkInstant option is dependent on fixHideLinks, which if disabled causes the bug you see.\nI agree that it would be worthwhile with an option here. Having top applied is a good default, but I understand that there's situations where disabling automatic control is desirable. Among other deficiencies, media browse mode does not behave nicely when switching from an expando post to a non-expando post, in which case some may feel disabling the auto-scroll altogether is the best solution.\n. @erikdesjardins The test as is actually indicated a real bug. A userTagger tip erroneously referred to the \"vwTooltip\" option, so when the i18n-string was gone, the guider wasn't produced.. @erikdesjardins The test as is actually indicated a real bug. A userTagger tip erroneously referred to the \"vwTooltip\" option, so when the i18n-string was gone, the guider wasn't produced.. Should be fixed by #4382 . Yes.. Yes.. This is expected, as RES won't replace an already opened expando. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/690b3fcfbbd865a85ff9f42c5af71e4b924b2d7c/lib/modules/showImages.js#L929. This is expected, as RES won't replace an already opened expando. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/690b3fcfbbd865a85ff9f42c5af71e4b924b2d7c/lib/modules/showImages.js#L929. Works with #4989 (might also have been something else that fixed this) on Firefox 65.. Using client(Width|Height) would generally be the correct approach when determining the viewport size, as I see getBoundingClientRect only works because Reddit by default sets html { height: 100%; }.\nThe client-properties returns rounded integers, which can cause issues. When zooming using the browser, the rect size can become fractional, and if rounded up, a element sized to correspond with those causes a scrollbar to appear. That may happen with pictures in showImages which reaches maxWidth.\nIt appears that window.getComputedStyle(document.documentElement) returns the correct fractional values, and should work fine in this case since the function is memoized.. What about creating a temporary element <div style=\"width: 100%;height: 100%;position: fixed;\"></div>, appending it to document.body, and measuring it?. @mc10 Since the element is removed synchronously it will not be painted.. Thanks, @leviroth . Thanks!. As for the text option, it would likely be possible to reuse some of this PR. getActiveEmail could prompt the user for a loginHint once (only if loginHint.get() returned undefined, as not to pester the user) instead of fetching it automatically.  A button to reset loginHintStorage could be added to the the module settings page.. I don't think automatically switching account is desirable, as there's many cases where one could visit a thread without replying and don't want to have to log back into the previous account. Maybe just a notification Noticed another account has created post / commented with a button to switch to that account would be better?. That is implemented. See if you have the option onlyPlayMutedWhenVisible enabled.. Appears to have been fixed on Imgur's side.. Might be easier to set the value of the select to IAmA when the subreddit isCurrentSubreddit('IAmA'). That way you don't need to propagating suppressAutoScroll.\nThe option is probably unnecessary as setting this as default don't really change the behavior of the select.. You're right; it's equivalent.\nThe resetNavigator call which is suppressed does however seem misplaced. I think it would be clearer if it's in changeCategory and then only called if the changeCategory changes currentCategory to a new value. Since showNavigator then already have set the select before calling  changeCategory, the scroll will implicitly be suppressed.. Thanks!. Thanks!. I wonder if CSS would be more suitable for truncating. Something like max-width: 30ch; text-overflow: ellipsis;.. This works fine if looking for existing matches is separated into watchForFuture... variants of the utils.. @erikdesjardins Yes.. @mc10 Appears to be the same issue.. Reopening since that PR doesn't fix the actual issue\u2026. The relevant code has received some significant changes (#4012). Can you see whether the performance has improved?. Thanks!. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/7d338e49e019f9f48a690a6fe595749a843e2563/lib/css/modules/_filteReddit.scss#L19-L21 appears to be causing the subtree for both the unselected and selected thing to be recalculated. I'm looking for a more performant way of achieving the \"display whole comment when selected if filtered\"-effect.\n  . That snippet appears to be a little out of date. RES changed the class with which it styles the selected element to .res-selected (though the earlier is kept, but you may have to increase the specificity in the selector). In your instance, it would suffice to change .RES-keyNav-activeElement to .entry.RES-keyNav-activeElement.. I see that you removed .res from that selector, which lowers its specificity.. Use the seletor .res .entry.RES-keyNav-activeElement.. Fixed in #4625.. Dupe of #4702.. Are there any advantages to using the iframe instead of continuing to use RES' video player?  By keeping RES responsible for generating the video element, we retain fluid resizing, preloading when using media browse, and generally much faster load times.. Note that addLine already implements a line on the right side\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/24edda029d651acd473f521599d639da04ea2f0a/lib/modules/selectedEntry.js#L336-L339\nusing box-shadow instead of border as to not shrink the content box.\nIt should suffice to migrate the value of setColors to addLine, and then disable setColors.. IIRC outline cannot be drawn on only one side of the element.. Thanks!. Closing this since native controls are now hidden for all videos unless manually enabled.. No, I am not able to reproduce unless I enable disableAnimations. \nThe new polyfill layer uses strategy scroll in order to detect resizes. The object strategy, which we used earlier, seems to work fine with disableAnimations enabled, however.. Thanks.\nI haven't really explored adding an expectation to the disableAnimations CSS as I am satisfied with just switching the resize detection strategy; there doesn't appear to be any significant performance difference between the two.. Does it work with a clean profile? https://developer.mozilla.org/en-US/Firefox/Multiple_profiles#Creating_a_profile_through_the_Firefox_browser. That's weird. IntersectionObserver (which Never Ending Reddit is dependent on since v5.12.4) should be available in Firefox 57, so I don't know what causes this issue. The only suggestions I have are to try a clean profile in case your Firefox state is messed up, or to upgrade to the latest version of Firefox.. Thanks!. Closing since this was probably just a browser issue.. Thanks!. It would also be nice to have the additional data distinguished, as per your suggestion.. @corylulu Like in the bottom part of the picture you included \n\n. Ah, yes, I see that now \u2014 sorry for the confusion.. Some bugs I've noticed:\n - [ ] Wikipedia expando's src is empty\n - [ ] Command line state text is unstyled and not updated\n - [ ] Comment navigator buttons' HTML codes are escaped\n - [ ] Tab menu buttons in dashboard contains null (<a title=\"null\" aftercontent=\"null\">My User Tags</a>). This might have been a caching issue. Can you check whether the the link loads the updated image now?. Edit:  This describes another issue. See below.\nThe reason it's somewhat slow is that it by default fetches user info for every account (karma, gold status, etc) before generating the widget. To have it appear instantaneously, disable option showUserDetails.\nA fix for this could be to always show the widget instantaneously and append user info only when it's has been fetched. This is the code in question:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/4f0ba4c0a54071a894cec10dbc85c4136a43fa27/lib/modules/accountSwitcher.js#L166-L196. Edit:  This describes another issue. See below.\nThe reason it's somewhat slow is that it by default fetches user info for every account (karma, gold status, etc) before generating the widget. To have it appear instantaneously, disable option showUserDetails.\nA fix for this could be to always show the widget instantaneously and append user info only when it's has been fetched. This is the code in question:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/4f0ba4c0a54071a894cec10dbc85c4136a43fa27/lib/modules/accountSwitcher.js#L166-L196. Okey, I misread. In that case it is probably just Reddit being occasionally slow to respond. RES executes two calls sequentially, log out and then log in, before displaying the \"account switched\" notice.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/4f0ba4c0a54071a894cec10dbc85c4136a43fa27/lib/modules/accountSwitcher.js#L224-L254. Okey, I misread. In that case it is probably just Reddit being occasionally slow to respond. RES executes two calls sequentially, log out and then log in, before displaying the \"account switched\" notice.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/4f0ba4c0a54071a894cec10dbc85c4136a43fa27/lib/modules/accountSwitcher.js#L224-L254. Hehe, yea\u2014I read this issue a while back but apparently forget everything about it.. Hehe, yea\u2014I read this issue a while back but apparently forget everything about it.. This pushes the progress bar upwards a bit too much for my taste, but I think that the solution could work with a minor adjustment. Instead of padding it in both directions, what about about just upwards?\nWhat do you think of supplementing the existing rules with:\npadding-top: 8px;\n    height: 10px;\n    background-clip: content-box;. This pushes the progress bar upwards a bit too much for my taste, but I think that the solution could work with a minor adjustment. Instead of padding it in both directions, what about about just upwards?\nWhat do you think of supplementing the existing rules with:\npadding-top: 8px;\n    height: 10px;\n    background-clip: content-box;. Feel free to make the controls more accessible. :)\nHaving another font available and eventually just replacing Batch altogether would be great. I say go for it. Adding a new font is now a bit more complex than before though, see here. . Feel free to make the controls more accessible. :)\nHaving another font available and eventually just replacing Batch altogether would be great. I say go for it. Adding a new font is now a bit more complex than before though, see here. . The account switcher works (master branch) on Firefox 65.. Thanks!. Thanks!. I'm merging this and hoping that this won't cause conflict any time soon. If any issue should arise, the inNavbar container can easily be removed and belowFixedNavbar will automatically be used instead.. Thanks.. Thanks!. Added in 7ea56c39280fe8bfc3497001dc246d1939d2a9ab. I've included this fix in #4859 now.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/13bfbc3588d81781885941f885d861a505fb8d75/lib/modules/settingsNavigation.js#L66-L73. I've included this fix in #4859 now.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/13bfbc3588d81781885941f885d861a505fb8d75/lib/modules/settingsNavigation.js#L66-L73. Seems like the Wiki is not affected. To test, go to https://www.reddit.com/r/Enhancement/wiki/index and click any link in the ToC.. Seems like the Wiki is not affected. To test, go to https://www.reddit.com/r/Enhancement/wiki/index and click any link in the ToC.. Implemented in #4859. Thanks, @corylulu . @GlenCarpenter I'm adding support for loggedInUser in #5078. Thanks!. Thanks!. You're right, @mc10. Seems that iloopit is only broken on the test URL.. I realize now that this only changes the declared permission \"Read and change your browsing history\" to \"Read your browsing history\", which may not be worthwhile for the added trouble this makes.. Works in Firefox. Confirmed not working in Chrome. It seems that since RES \"owns\" the succeeding pages, the onclick Javascript is executed in RES' environment.. This is likely due to a change in Chrome or an old bug (the issue is also present in v5.0.3). I'm not aware of any good way to fix this.. Chrome issue: https://bugs.chromium.org/p/chromium/issues/detail?id=912069#c39\nSeems likely the fix will be backported to M71.. To avoid having it inlined in the source, could you save the icon in /lib/images/, like is done for the Giphy logo?\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/57a3fffd19e8a7f0b748da0d02c0a65909cd5ad9/lib/modules/hosts/giphy.js#L5. Added in #5040 . I couldn't replicate the issue. Can you post a screenshot of your flair filter configuration and a page listing where you would expect to work? . ~~I see that you are specifying multiple subreddits using a comma separtor, which is not supported. Try making it into a regex instead.~~\nEdit: It's actually supported. I think I found a bug which is responsible for the flair not being filtered. I'll take a closer look at it. Anyways, thanks for the report.. I realize now that I was wrong about comma-separation not being supported. Sorry about the confusion.\nI don't think there's a issue with your Chrome setup, it's just the bug behaving weirdly. I'll release a fix in a few days.. Fixed by 78b27717296a8e5cdcf32f8392be010fb545356c. It seems that this prevents the content files from being merged?. The settings console has been embedded to make it more responsive, and to avoid having having custom stylesheets inadvertently break it. If you don't mind me asking, what custom styles did you apply to it?\n\nRES removes every post without exception\n\nThe migration process is currently a little slow, so the filters are erroneously applied before the migration is ready. This is something which is currently being fixed.. > How is an iframe more responsive?\nReflows in the embedded window don't have to take Reddit's styles into account. Other extensions, such as LastPass and uBlock, don't slow it down. Previously all the settings console code and styles had to be loaded on every single page. This change will also allow utilizing frameworks such as React there in the future, as they will not become an extra burden on every other page load.\n\niframe broke the style I've been using for years.\n\nDo you mean that styles on pages other than the settings console are broken? If so, that's something I would like to debug.. I'll see if I can make the styles be applied also on the embedded page. Note that classes might have changed a bit (and likely will change more).. Added in #5040 . Yeah, as far as I can see, the only way to add custom styles now is by using RES' stylesheets module. I'll try to find some way to transmit certain styles to the embedded page.. Thanks!. I think having a button after each host could get a bit noisy. What do you think about integrating it with the toggle, to look something like this?\n\n. @Atrolantra No, I don't think that specification was necessary.. Thanks!. @mc10 There are some tests which I think will catch most issues.. @Nutomic That would require loading all links, correct? I think that would be infeasible, both due to bandwidth and privacy concerns.. Thanks, @aliceinwire!. Is the issue fixed?. Thanks for the suggestion, @xxyuk. That seems to fit our use case well!. I've merged the most important part of this PR (the option fetching), and the rest probably is not worthwhile to change due to lowered performance.. Is this obsolete code? lib/modules/hosts/gfycat.js\n. videoAdvanced is now moved into showImages.js.\n. Obsolete.  blob_type is never assigned.\n. I'm sure there's some better way to do this.\n. I was mistaken about convertGifToGfycat, but found a way to keep it and avoid redundancy.\n. This value is not actually saved to the back-end, so any playbackRate saved is only remembered on the current page. Any thoughts on how to fix this, or is this a bad pattern?\n. I agree that the speed selectors are mostly redundant. The idea was to have a way to easily reset the speed, but on second thought might that not be all that necessary.\nI am however still interested in finding a way to have the playback rate remembered, either temporarily (till next page load) or persistent (by saving it somewhere). I think the dropdown can be avoided by having an option in the console for whether playback rate should be remembered automatically, and if we find no way to do that, have the user set the it manually. \n. Updated so that the expando size is adjusted earlier, as the video element is sized at loadedmetadata  (loadeddata isn't fired before the first frame is ready).\n. rank only exists in linklist-pages, so an alternative solution could be to save the element number in the DOM when calling checkElementForImage and use that as basis for the sort.\nAlternatively, change the way imageList is created and filled.\n. I think a binary search on offsetTop would suffice.\n. The width of .video-advanced-progress was 98% (by padding: 0 1%), necessitating calc. Updated now by removing padding.\n. Modified default value here since new gallery behavior limits number of preloaded pieces.\n. You're right. Updated.\n. Appears that this breaks gallery filmstrip-mode: pieces not be placed at separate lines when narrow.\n. I'll do it in #2998\n. Some of the mediaHosts contains something akin to !elem.classList.contains('title') in detect, but perhaps that can be replaced with an option isIdenticalToNative\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3004/commits/4b7552a3eccb216d50b69ebbd81d868f92be601d\n. Fixed. .tabmenu li uses display: inline, which for some reason caused that extra margin.\n. Many of the changes in this commit is replaced in the latest commit.\n. I made an attempt at cleaning it up now. \nI also removed the ignoreDuplicate-option, as it is now unneeded due to the new swap-method. Only issue is that it won't swap active Iframes and instead scrollIntoView their button, though I think that's preferable to having multiple active ones (but perhaps we should have a button to restore position).\n. I don't think it's well placed there, as one would then have to scroll before initiating the option. \nAn alternative could be placing a 'filter' line at top of the linklist, similar to 'navigate by' in comments.\n\n. Thanks. Fixed.\n. Appears that it can be either, as it seemingly is coerced to a number somewhere (storage get RESoptions.showImages)\n. Yeah, I guess that suits most displays. Updated to 80%.\n. You're right; updated.\n. I'll keep it as is for now since I have use for it in #3042 \n. This may sometimes cause an issue where clicking on the image does not open it, but I don't know if this condition (!e.movementX && !e.movementY) is ever met in Safari.\n. Brain fart. Fixed now.\n. These are sufficiently covered by &.commentImg\n. I think this better be placed on the expando-box element, perhaps by setting attribute host.\n. I couldn't find the reason either, so I moved this to 'module.go'.\n. Yeah; forgot to update that comment & others. Will update.\n. That works. Updated.\n. I wasn't able to figure this out. Happens intermittently, it appears. May also be the cause of #3402; anyway, it will likely be helpful to have the debug message included.\n. Does 7c382ae55774ad55f7565f8156ac6ffff63bb5ad look OK to you?\n. I couldn't find a reason for adding 6 if any header is pinned, so I removed it.\n. It might better to add <div class=\"res-expando-siteAttribution\"></div> in the top of text.mustache, and perhaps style it to float right to the title.\n. Note that this would only affect expandos with type: 'TEXT': \n- Deviantart (https://www.reddit.com/r/twitchplayspokemon/comments/53jkmg/kakuna_wars_chapter_six_phone_home/)\n- Tumblr (https://www.reddit.com/r/ShingekiNoKyojin/comments/53rhnt/manga_spoilers_theory_titans_true_objectives/)\n- Github (https://www.reddit.com/r/privacytoolsIO/comments/53hjkt/howto_privacy_security_conscious_browsing/)\n. Related #3296 \nI have added return only here since checkElementForMedia is usually the slowest of all forEachChunked functions.\n. As far as I can see, the siteTable mutation only happens via NER.\n. That would necessitate also listening to siteTable height changes, since hiding things and collapsing comments/expandos moves things around. I could not think of a reliable way of doing so.\n. I found setting this to 1 when using view images very usable.\n. If you modify &.selected a { to &.selected a:not(:only-child) { then you can remove this block.\n. Since this setting only is used with the above one, add dependsOn: 'fixHideLinks'\n. If this is replaced by height: calc(100vh - 80px) , then you avoid unnecessarily limiting the height of the account switcher. \n. Could find anywhere where this was actually run, so I've removed everything relating to consoleTip\n. nit: &-helper in order to stay consistent\n. nit: should be prefixed (&-drag-handle)\n. Is the handle class necessary?\n. Style already included in stylesheet.\n. Double bracket instead of triple bracket in order to reduce vulnerability surface (this applies for all of variable instances in the template)\n. Newline should be kept.\n. I see that my earlier comment regarding this was wrong. For makeMediaIndependentOnResize to work, the 2nd element must be in the subtree of element. Otherwise (like now) the wrapper is lost when appending element to res-expando-box.\n. Since documents don't have a fixed aspect ratio, keeping this is unnecessary. IMO it's more user-friendly to resize the iframe to basically w = offsetLeft, h = offsetTop (though this would mean only allow resize initiated from the right bottom corner).\n. The resizeMedia function is not suitable to this, since it presumes height will automatically follow from the width.\n. To avoid setting width / height on all these elements, rather use a wrapper which you update the dimensions for, and set the height / width of the children to 100%.\n. minWidth is already specified in the stylesheet. You may also want to set a minHeight.\n. Since this style is already set in the stylesheet, it would be clearer to just hide the resizeHelper element by setting resizeHelper.hidden = true.\n. Note that source is returned so that so that .res-filter-remove-entry will remove it from the filter list when clicked. (to see it in action, open Filterline \u2192 open the \"more\" dropdown\" \u2192 click \"Show filter-reason\")\n. May as well have the mapping as a parameter since they're unique for each type.\n. Add parameter mapping here \u2026\n. \u2026 and change this to \nevaluate(thing) { \n  const filters = getStringMatchFilters(key, mapping);\n  return filtersMatchString(filters, thing);\n}\n\u2026\n. \u2026 and replace type with filters.\n. Also: By modifying executeCustomFilters a bit, you can delete this function.\n. Preferably should this be named iframeWrapper or something, as IframeMedia is separate from expandos (so also class names should not contain the word expando).. (this is not necessary; the wrapper element automatically resizes to account for the drag-handle height). If you wrap the drag handle and siteAttribution (<div class=\"res-expando-siteAttribution\"></div>, which addSiteAttribution will detect) in a new element with rules\ndisplay: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n. you can remove rules text-align, display, width. and this block will no longer be necessary. (min-width is not necessary; determined in resize logic). (max-width is not necessary; it's not set to anything else anywhere). One last thing: This should be keepMediaVisible(iframeWrapper) so that the footer follows the iframe when it is moved towards the left.. This should be here.. This should not\u2026\n(likely a rebase gone bad). In Firefox 50, this stylesheet has precedence over Reddit's (though that doesn't appear to be the case for Chrome), so this overrode Reddit's styling of the hidden attribute.. Looks good.. I think frameThrottle is a more natural choice here since it won't use any more resources than available. In addition, debouncing prevents it from being \"search as you type\" since it will only search after stopping typing.. No. It's redundant since embedAutoplay is specified.. I think you can remove these parameters since there's no messaging occurring (so enablejsapi is unnecessary) and enablecastapi is not documented anywhere. These may be more readable as\n.res-orangered-hideEmptyMail #mail,\n.res-orangered-hideEmptyModMail #modmail,\n.res-orangered-hideEmptyNewModMail #new_modmail {\n    &.nohavemail,\n    &.nohavemail + .separator {\n        display: none;\n    }\n}. @erikdesjardins I only got this working by putting the case above the others. Is it correct?. This and below can probably be replaced with KeyboardNav.options.moveDownSibling.callback() since that function will also scroll to the next sibling, but additionally select it and take any pinned header into consideration.. @andytuba handleEscapeKey has no equivalent in the refactor, since close is always handled by the guider library (via onClose), so this penalty event is removed. However, the onClose's penalty is 15, so I'm wondering if I have overlooked something.. The reason why this is limited to goMode is that there are shortcuts which can coexist on the same key, e.g. saveLink and saveComment. . That's a much better solution, thanks.. Probably superfluous at this stage, as neither the help tip nor any of the Filterline stuff are translated yet.. Yes \u2014 must be adopted. Firefox 53: Type error for parameter createData (Property \"focused\" is unsupported by Firefox) for windows.create.. Changed from number of entries (max 100 things / 50 comment pages). Since this isn't very robust, this should probably be changed to always run through the markdown function when message is found in messages.. TODO No need to wrap i18Markdown. Very generic rule \u2014 did not see any place where it applied.. Comments in commentsLinklist (like https://www.reddit.com/comments/) don't have hideChildComments. Instead of manually specifying include, you can import the hideChildCommets module and use requiresModule like this.. toggleChildComments is probably better.. Seems like this can be moved into the subscribe function. \u2026otherwise this will not work correctly.. Using box-shadow instead of border or outline avoids compressing the element.. The fix the alignment, top and margin-bottom has to be reset.. Alternatively, set a solid 5mm white border on .otp-secret-info canvas.. Since .modal-header, .c-close, and .modal-header-title apparently are common for all modals, they can be put in generic .modal block.. This file must be imported here. Since the module does only one thing, you can remove the option and instead add module.bodyClass = true here.. Setting otp_sent to false seemingly didn't make the server ignore the otp field, causing non-2FA accounts to not being able to log in.. Anyway, requiring the module for extending Reddit's hovercard to be enabled in order to disable it is a little awkward. I think this option is better suited for betteReddit.. replaceState is unfortunately fairly costly for this relatively unimportant feature, so I switched to using sessionStorage instead.. Can these be moved to optional permissions yet? Firefox \u2265 55 appear to support it.. I can't see how this branch will be executed after the first time the email address is set.. Nit: loginHint is a string, so converting it into JSON is unnecesssary.. I don't think using isPageType is necessary neither here nor above, as watchForThings anyway is cheap. . Nit: String.prototype.includes instead of comparing indexOf.. It would be cleaner doing in GoogleDrive.js. Perhaps inside the warnUserInteraction callback?. loginHint does not need a default value.. Redundant when type: 'json' is specified.. Can access token be specified as a header, like in the other calls?. Should match the preference (thing.getSubredditLink().target).. I didn't notice this earlier, but filterType === 'tagged users' won't work when the string is translated as the options in the select does not have the value attribute defined.. In order to avoid loading all tags twice, a cleaner solution may be to build a complete tags, then creating the #tagFilter select with the default value depending on whether there's any tags\nselect.value = tags.find(v => v.text) ? 'tagged' : 'all', and don't do any filtering before then.. Passing it as a function arg sounds good, but since tagStorage may change, it may be easier to split tagStorage \u2192 Array<Tag> into a new function and call it from both places.\nI think both options can stay regardless of there being any matching tags, as not to make this too complex.. getPostsByCategory must be called before resetNavigator (and currentCategory must be set before then).. As noted, this option is not really needed.. In order for IAmA to be set as initial select also when  showByDefault is not enabled, the initial value of currentCategory can be set to isCurrentSubreddit('IAmA') ? 'IAmA' : '';.\nThe whole showByDefault block could then be replaced with showNavigator().. Is must also be called when there's no category selected, in order to avoid too much logic.. Since this function now is only called when the selection is changed, it can be simplified to _posts[currentCategory] = sortTypes[currentCategory] ? sortTypes[currentCategory].getPosts() : sortTypes[currentCategory]; and renamed to something more fitting like refreshCurrentCategoryPosts.. It can also be opened by keyboardNav (shortcut n).. Sorry, that was a typo. Anyway, now that the scroll is suppressed when opening the commentNav in openByDefault, we may as well remove the empty select option as that way it's possible to remove a lot of logic related to that.. I was thinking _posts[currentCategory] = sortTypes[currentCategory] ? sortTypes[currentCategory].getPosts() : []; as sortTypes[currentCategory] is not defined for '', and getPosts() return Arrray<HTMLElement>. Anyway, the last commit appears to have made everything work, so my suggestion can be disregarded :) . Probably no need to have this conditional, as .edit-usertext will be available only on things which can be edited.. .entry .edit-usertext so that it doesn't check child comments (in case e is pressed on a non-editable thing).. Might as well inline this in the shortcut definition since it's so small.. It would be nice to match partial names, and see what action this perform when executed (i.e. will this activate / disable the toggle).. onClickToggleMenuItem can probably be used here.. Seems like this fixes a bug. Could you create a new PR for it?. If all this does is determining whether the \"presets\" row is visible, it likely is not necessary. Just not generating the row should suffice.. It would be neat to add a presets directly from the dialog. Perhaps a \"save as preset\" button could be located next to the preview? . A simpler solution would be to add a listener when generating the preset option. Perhaps something like\nelements.presetTag.append(...presetTags.map(([text, color]) => {\n  const element = Tag.buildTagElement({ text, color });\n  element.addEventListener('click', () => {\n    tag.load({ text, color });\n    tag.save();\n    card.close();\n  });\n  return element;\n}). I think the latter sounds most intuitive.. optionValue = input.value can be used. Alert user if this conditional fails. Add ${!presetTags.length && 'hidden'} in order to hide when there's no presets.. A simple window.alert with explanatory text will probably suffice.. Doesn't seem necessary to keep it, as the final else is clear enough.. If this has the hidden attribute by default, buildPresetTagElement can include the line elements.presetTag.parentElement.hidden = false to make it visible.. newPresetTags can be replaced with [...presetTags, [text, color]].. Also, by using Options.set it is not necessary to stage.commit afterwards.. Oh, right, that's problematic. Making display: flex not apply when the hidden attribute is present might be the easiest solution. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/3b04202a7672a431df4adb5097183a9488ffc564/lib/css/modules/_hover.scss#L71 can be changed to .fieldPair:not([hidden]).. Can be avoided with\nwaitForChild(addedNode, '.author-tooltip__profile-link')\n  .then(() => applyResData(addedNode));. You're right. A similar function which observes with option subtree: true would have to be added.. showParent will never be triggered on a non-selected thing, so a parent can't have this class.. This seems like an expensive way to check, as lastAutoSwitched is fetched from Storage for every post.. A more reliable way to notify about this may be to add a token to sessionStorage. Then, when loading a page, it can be checked whether the token exist and if it does, show the notification; if not, run the code which looks for another user.\nThe source of the switch can also be stored, i.e. post or comment, so that it won't be necessary to look for the author when creating the notification.. The notifications ought to be separated out to a new _.once function. That way it can only be invoked once and autoSwitchNotificationShown becomes redundant.. Since the only thing which differs from the above post notification is message and optionKey, they can be combined: message: i18n(isAutoSwitched === 'comment' \n ? 'accountSwitcherAutoSwitchCommentDesc' : 'accountSwitcherAutoSwitchPostDesc', loggedInUsername), and optionKey: `autoSwitchOn${isAutoSwitched}`,. Declaring this within the autoSwitcher scope makes _.once ineffectual, as it would not prevent showNotification from being called for things.\n. showNotification may as well be called directly from here, so that it won't be necessary to add the autoSwitcher watcher after switching, thus avoids the isAutoSwitched conditionals.. This change not necessary if checking that thing.getAuthor() is not null (like how loggedInUser() is checked).. That's a little weird. See if the Flow error changes by typing the username parameter (function findMatchingAccount(username: string, partialMatch: boolean) {).. To avoid adding too much visual noise, the tag probably ought to be placed next to the username.  userTag.link doesn't seem to fit well inside the new userInfo, so the link can probably be ignored as it seemingly is of low value.\nThe attachUserTagger function can then pretty much be replaced with:\nUserTagger.applyToUser(\n    downcast(header.querySelector('.author-tooltip__profile-link'), HTMLAnchorElement),\n    { renderTaggingIcon: true, renderVoteWeight: false }\n);. A issue with placing it on the next line is that the native userTagger is position as if it is fixed height\n\nin this instance the pointer points to another username\n. I think this is a better fit in generateMedia in retrieveExpandoOptions, alongside with adding the site attribution. That way crosspostData can be accessed directly from thing (and not stored as crosspostData).. I think it would be noisy to have this button added to all comments regardless of whether they have been saved. What do you think of extending the saveElement button to show the previous comment?. This will always be truthy if invoked from watchForThings. You can get Flow to ensure that thing is always a Thing by specifying that in the parameter (addReplyListener(thing: Thing)). As @andytuba mentioned, it might be more reliable to listen to new comments and check whether the user is the owner, like is done here: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/b287af15f1a7197f6d29f3acefeea776e7fcde21/lib/modules/newCommentCount.js#L183-L186. Note that getId doesn't work on deleted comments. I think being able to also restore those comments would be useful.. Retrieving all comments replied to could become costly. One solution could be to first retrieve only the keys, and defer retrieving the value till actually needing to render the saved comment.. Looks like the storage would have to be have to converted to PrefixWrapper in order to improve performance, but that can probably wait.. This made the whole process go a bit faster, but that's not the seemingly not case anymore.. This will conflict with view images and autoExpandSelfText. A workaround may be to keep track of the last toggle source in Expand, e.g. toggleSource: ?('click' | 'auto' | 'keyboard') and only collapse other expandos which were opened with the click.. Can expando (currentExpando === expando) be used instead of comparing href? In which case this can be iterated: _.without(Array.from(primaryExpandos.values()), expando).. Since filtering for valid shortcuts is already performed in getActiveCommandOptions, this may be simplified to \ngetActiveCommandOptions()\n  .filter(opt => opt.goMode)\n  .map(opt => ({ key: i18n(opt.title), niceKeyCode: niceKeyCode(opt.value) })). requestIdleCallback is a separate polyfill and AFAICS not implemented in Edge yet.. I'd rather avoid propagating title since a Media instance can be reused by other expandos. It would be easier to retrieve thing by Thing.from(media) along with the other logic below.. Note that even if this returns false the post is still hidden when the filter's state is inverted (i.e. only display posts which returns true). https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/9b4a2fa91d42e6b4b7fed50da6dddb6ba7f6028c/lib/modules/filteReddit/Filter.js#L133-L134 Case#evaluate should probably just throw an error instead when it's not able to evaluate a post.\nAnother way to solve this could be to just disable cases until Thing is built out.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/9b4a2fa91d42e6b4b7fed50da6dddb6ba7f6028c/lib/modules/filteReddit/postCases/IsVisited.js#L12-L14. Yeah, I've overlooked that. That must be fixed.. No, though it would certainly be preferable.\nERROR in ./edge/fonts.scss                                                                                                                                                                                                                                                                \n    Module not found: Error: Can't resolve './' in '/home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge'                                                                                                                                                                                    \n    resolve './' in '/home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge'                                                                                                                                                                                                                   \n      Parsed request is a directory                                                                                                                                                                                                                                                           \n      using description file: /home/ksuaoth/Documents/Reddit-Enhancement-Suite/package.json (relative path: ./edge)                                                                                                                                                                           \n        using description file: /home/ksuaoth/Documents/Reddit-Enhancement-Suite/package.json (relative path: ./edge)\n          as directory\n            existing directory\n              using path: /home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge/index\n                using description file: /home/ksuaoth/Documents/Reddit-Enhancement-Suite/package.json (relative path: ./edge/index)\n                  no extension\n                    /home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge/index doesn't exist\n                  .js\n                    /home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge/index.js doesn't exist\n                  .json\n                    /home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge/index.json doesn't exist\n    [/home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge/index]\n    [/home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge/index.js]\n    [/home/ksuaoth/Documents/Reddit-Enhancement-Suite/edge/index.json]\n     @ ./edge/fonts.scss ./!url-loader!/home/ksuaoth/Documents/Reddit-Enhancement-Suite/lib/fonts/batch-icons-webfont.woff\n     @ ./node_modules/extricate-loader!./node_modules/interpolate-loader!./edge/manifest.json. Added due to nightMode otherwise adding bodyClass res-d2x-nightmode.. toggleModules is a bit slow, so returning a promise prevents the window from being closed prematurely.. Added res-options to distinguishing the option page from other appTypes. . Also restrict this to isPageType('comments') (import isPageType from ../utils ) so that the users are not highlighted when browsing posts.. Any reason for doing this instead of retrieving hostname and pathname directly from link?. Also 'comments' and 'wiki' contains this warning.  . The _.once construction is also used by hideChildComments to determine the submission thing, so I figure we might as well use it here too. While I didn't see the ad myself, the screenshot in the issue shows that the hide all child comments button was placed correctly so I think my solution is sufficient.. @mc10 #console-container is the iframe which embeds the options page. I have not changed any of class names or ids on the options page.. This conditional is probably unnecessary. To get the absolute link, (new URL(href)).href should suffice.. Will this force the user to the www subdomain, even if they are on old (or any other localized / special subdomain)?. Sorry, forgot that you'll also have provide the base for relative URLs: (new URL(href, location.origin)).href. Nit: Newline before/after parentheses on multi-line conditionals. options can be deconstructed to { newWindow = false, leaveNP = false }. It would be cleaner to pass the relative URL to nonNpLocation \u2026. \u2026 and change this to new URL(href, location.href). Both ways are fine with me.\nIt would also be worthwhile to make the object type exact ({| newWindow?: boolean, leaveNP?: boolean |}) to prevent typos when invoking the function.. Opera is based on Chromium, so generally will code which works on Chrome also work on Opera. In this use case it does not seem to matter whether origin or href is used, though. . Could this instead be implemented by adding a permissions field to the Module class, and have settingsConsole prompt for permissions? In #4859 it is no longer possible to import the settings console from modules.. Since the listener is never removed, instead of webReqListenerAdded it would be cleaner to wrap a function which initializes the web request listener in _.once .. Has it been considered to simply update location.pathname when certain conditions are met, instead of redirecting using webRequests? That could reduce complexity a lot (and avoid having to prompt all Firefox users for new permissions).. I wonder if this would be cleaner if the redirect interface was declarative. E.g. could a module add a redirect by substituting the pathname: \nredirect.addRegex({\n  pathnameRegex: /^\\/user\\/([\\w\\-]+)(?:\\/)?\\/?$/i,\n  substitution: `/user/$1/${module.options.customFromProfileLandingPage || module.options.fromProfileLandingPage}`\n})\nThough that may be too restrictive.. Yeah. This function https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/256c10a2c035fb20614e7dc6114b99fd123c2269/lib/modules/settingsConsole.js#L484-L498 could be made async, and when enable is true, check for permissions before progressing.. This is probably the most robust and fast solution, yes. I'll see if I find a way to make optional permissions work in Firefox.. I think it's obvious, but we should probably display a notification to explain why permissions are requested. Maybe like showImages does it?\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/256c10a2c035fb20614e7dc6114b99fd123c2269/lib/modules/showImages.js#L859-L869. Could that be avoided by checking whether the permission is already grantent? await Permissions.has(requiredPermissions);. I don't think we need to introduce this many changes to just check whether permissions are granted. Could just as well try ... catch adding the web request listener, and console.error if permissions aren't granted. Too reduce overhead when this feature is not in used, addWebReqListener should only added if there's any active redirects.. I think making rules persistent could introduce too many edge cases, e.g. redirects not being disabled when restoring a backup where the module is disabled.. Should be made into an utility function, since also other places deals with creating RegExps from strings. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/07c94df4f719079ed617da8ed022696ccf0f802f/lib/modules/filteReddit/Case.js#L76-L79. There's still a lot of duplicated code for each of these rules, which would be nice see shared.. Updating the rules are cheap, so might as well just update all every time to avoid this bit of logic.. It seems that the listener instead should take an object with rules, since that's the internal representation used.\nRules (changedRules: { [name: string]: null | { from: string, to: string type: sting } }) could simply be updated by Object.assign(redirectRules, changedRules). If a rule needs to be deleted, changedRule could for example be { home: null }.. to should be strictly typed to avoid this conditional. See previous comment.. inQuarantinedSubreddit is a function; use inQuarantinedSubreddit().\nmodule.options.hideQuarantinedInSub is the option object; the value is stored in module.options.hideQuarantinedInSub.value. @BenMcGarry, yeah, the option display_peertube is automatically generated, so this isn't necessary. . Are there any way to check that a given link points to a video, to avoid that a link to e.g. https://peertube.openstreetmap.fr/about generates an expando? . I don't think Webpack will be able to resolve that without also bundling all locales.. Note that this misses the voteWeight element. It will also only remove previous tags added with append, not after (see beneath).\nSince this is special behavior is only necessary for the (buggy?) postAuthor container, it might be cleaner if the workaround is moved up to the watchForRedditEvents listener.. To avoid unnecessary many levels of nesting, return early (if (!isPageType('submit')) return;). . Also consider using waitForDescendent.. To avoid making this expensive (as isPageType is invoked under many circumstances), could pageType be made a variable which is updated on reddit.urlChanged? For example: \nexpert let pageType;\n(function updatePageType() { \n  pageType =  ...; \n  waitForEvent('reddit.urlChanged').then(updatePageType);\n})(). You might be confusing waitForDescendant and watchForDescendants. waitForDescendant will stop observing once it has found a match, but it may be a good idea to have it optionally time out.. In that case, maybe this pattern could be used: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/e52dd41196b0cbd597d137ed1703230341b886af/lib/utils/dom.js#L142-L143. I didn't realize that. I have removed the $ dependency f78d299d5840281dc92a5c8f48502166952f5c80, so I think waitForEvent can be used from location now without breaking the test.. ",
    "SicariusNoctis": "This remains unfixed...\n. This remains unfixed...\n. mb, I assumed it was abandoned.\n. ",
    "jvz": "I would just like to pop in and say that this is the best git commit header I've ever seen.\n. ",
    "andrewachen": "Oops, forgot to check-in the stylesheet changes, too.  It's in there now.\n. I swear I tested that // translates into http(s):// in Firefox, too.  See this test page:\nhttp://andrewachen.s3-us-west-2.amazonaws.com/css.html\nhttps://andrewachen.s3-us-west-2.amazonaws.com/css.html\n. I think @joey5755 runs gfycat.\n. ",
    "JonBons": "@honestbleeps I am not associated with Gfycat, I got ahead of myself when messing around with this idea last night and did not take some time to think about the implications of something like this getting pulled in.\nI understand the concerns and would love to know what the people at Gfycat think about extensions like this being made.\n. I believe this is merge-ready. It works well from the testing I've been doing throughout the week and I'm quite happy with it. The only thing I wish I could do with it is support for drag to resize & video galleries but those are a little bit more work.\n. I could not get CORS to work with gfycat so I've implemented optional permissions.\n. I could not get CORS to work with gfycat so I've implemented optional permissions.\n. I'm still working through testing the last bit of this, next push should be final and ready to merged.\n. I'm still working through testing the last bit of this, next push should be final and ready to merged.\n. I've been testing this all over with RES and it seems to be working just fine. I believe this is ready to be merged.\n. I'll spend some time on it tonight and I'm hoping to see no complications with the merge...\n. Alright how is this?\n. Hold on this for a bit, going to push a change which makes this use the new Gfycat ui controls.\n. \nDone, ready to be merged.\n. I'll look into rebasing this again soon.\n. Alright this looks mergeable again.\n. Yes.\nThis happens with the gif to gfycat conversion turned off and on.\n. I just checked and this issue still occurs in rev 6777a08 which is before the PR being merged.\n. #### Info on the thrown error\nCallstack:\n  \nThe error is a result of the response from Gfycat containing a null url param:\n  \n@joey5755 Is this the intended behavior from the API? (url being null for what I assume is a direct gif upload to gfycat)\n. Fixed unescaped periods in the regex.\n. @andytuba I'm a bit busy at the moment so I most likely won't be able to work on this. Have you looked at the Gfygur album PR for an implementation that could be close to what we want? https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/971\n. ",
    "sjuxax": "FYI I tried out this code and it worked well for me. I understand the need to clear the traffic influx with gfycat, just wanted to express my appreciation and successful experience with this request.\n. FYI I tried out this code and it worked well for me. I understand the need to clear the traffic influx with gfycat, just wanted to express my appreciation and successful experience with this request.\n. ",
    "ajslater": "yeah!\n. ",
    "ooker777": "4 years have passed. Is there anything new?. I advertise it here. it only shows the latest 13 versions. The oldest available one is 5.8.0, and isn't compatible with FF52.\n. I try to download 5.6.3 and rename the extension from zip to xpi, but FF says it appears to be corrupted.  Do you have any idea?. It doesn't work at all. ",
    "markekraus": "\n. \n. I tested the firefox and safari addons and they worked without issue. I did not test the others, though.\n. I tested the firefox and safari addons and they worked without issue. I did not test the others, though.\n. thought of a better idea\n. reported in https://www.reddit.com/r/RESissues/comments/2j72pl/bug_imgur_expandos_have_nonfunctioning_download/\n. Corrected.\n. Corrected\n. ",
    "bronzle": "Good, idea, updated pull request; height 100%; overflow-y: auto;\n. Generally you want to ignore those and let the developers bootstrap (the versions are locked in package.json) \u2014 This is the convention I\u2019ve seen on other js projects on github (and that I use)\nFor example: https://github.com/jquery/jquery/blob/master/.gitignore#L13\n. It doesn't hurt, but it is not common practice, and generally discouraged against, because it is not any developers responsibility to track various versions of dependencies (again, that is what package.json is for).\nGenerally you would give a developer documentation on how to bootstrap the development environment.\nHonestly, I don't care, I'm recommending a best practice (go find a node based project that does include it -- try any top required items on https://www.npmjs.org/)\n. just to clarify, putting it in global .gitignore is great (I haven't, but should) -- but even if node modules are required, you shouldn't check it into your repo. I just figured this was overlooked. Close if youd like, I've made my reasoning. \nI hope I don't sound like an ass, I just see this convention, and while again (again..again...again) global would be correct, but people are certainly not going to have it there, and thus the convention.\n. I think you are right we are, and as convention as a node project (which it is not explicitly; though adding a Gruntfile sort of does make it so) it would generally be ignored.\nI understand what you are saying, I don't personally make node modules, but I do find them useful for development deps. which is why I used the Gruntfile and why I did this.\nI will leave this alone, and let you merge or close, it's up to you.\nHow about more constructively, what are your thoughts on #766  ? that was my real contribution to the project :)\n. I didn't realize I closed this, but its less of a problem for me personally since imgur switched to webm videos for gifs, but I think it is still the same.\n. I didn't realize I closed this, but its less of a problem for me personally since imgur switched to webm videos for gifs, but I think it is still the same.\n. hmm, doesn't work for correctly extension'd images (only when fixing the link), I'm gonna close as this only half solves the problem\n. I've seen this as well, I feel like I've had it happen with videos as well\n. ",
    "isstabb": "Hey Andy, we talked here: http://www.reddit.com/r/Enhancement/comments/240v1k/opiniondiscussion_on_flickr_expando_problem/ \nI've got this working.  I didn't use the imgur API so we won't get descriptions/titles of images, but imgur itself doesn't do it when you use this weird comma format, so I think that's probably OK.\nAs I'm a github n00b, can you explain how I contribute?  Am I supposed to fork master, commit to my fork, and then do a pull request?  Also, I probably should have assigned this to myself, not sure how to do that.\n. Interesting, I didn't realize it ever worked.  It's been broken at least a year and it was more than just the regex change in my fix (I had to treat it like a fake album with empty album metadata since it's not possible to pull down more than one image metadata in a single API call.)  I'll pull down the code from around that time to see if it was a regression in RES or an imgur change.\n. Ok, good catch by the way, because the support was already there without faking an album.  The regex got broken somewhere along the line and that's all that needs fixing.  I need to test some more but it's pretty straightforward.\n. @andytuba If you get a chance, please see my fork and see if I got that in order.  As for the regex change, I opted for a tad looser but simpler regex but I think it is OK (and the bug at hand is fixed now.)\n. Yeah, rightly or wrongly I gave it it's own branch in my repo which may be why you couldn't find it.  It should be public.  When I go to PR I see the expected diffs to honestbleeps:master.\nhttps://github.com/isstabb/Reddit-Enhancement-Suite/tree/imgur-list\n. Can be closed?  I'm not familiar with the issue workflow...who closes what and when.\n. It seems reasonable to just leave it unchecked in case someone likes the feature of defaulting all styles off but being able to turn them on on demand.  (i.e. I'm agreeing that there's at least a bug that it's checked when it's really not in effect, but probably shouldn't remove/disable the checkbox.)\n. Treating it as a \"white list\" that is saved is an entered enhancement: https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/677\nI'm just saying the default state shouldn't be enabled when it isn't in this configuration.\n. Oh cool.  I did a quick search but didn't find an issue.  I didn't check the code.  Maybe someone can mark this up as needed and close it?\n. Another use case is i18n subdomains, e.g. de.reddit.com.  Not sure how common that is.\n. Looking into this one now.\n. Looking into this one now.\n. It's just \"gallery\" posts which aren't too common so not a big deal.  I'll post my findings if I can't fix it myself.\n. It's just \"gallery\" posts which aren't too common so not a big deal.  I'll post my findings if I can't fix it myself.\n. I dug through some posts where imgur is broken and unfortunately there's multiple issues.\nWorking:\nhttp://imgur.com/gallery/0ggbP  (https://api.imgur.com/2/album/0ggbP.json)\nBroken:\nhttp://imgur.com/gallery/puCfw8n  (https://api.imgur.com/2/album/puCfw8n.json) - unknown 404, possibly unsupported with APIv2?\nhttp://imgur.com/gallery/mqlbw/new  (https://api.imgur.com/2/album/mqlbw.json) - need to ignore sorting\nhttp://imgur.com/r/urbanexploration/jghFx - Requires APIv3\nUnrelated issue:\nhttp://imgur.com/6mjlF0s,wMKbqYa,cr4BM7m,7xf9fj2#1 - need to ignore selected image number anchor\n. I dug through some posts where imgur is broken and unfortunately there's multiple issues.\nWorking:\nhttp://imgur.com/gallery/0ggbP  (https://api.imgur.com/2/album/0ggbP.json)\nBroken:\nhttp://imgur.com/gallery/puCfw8n  (https://api.imgur.com/2/album/puCfw8n.json) - unknown 404, possibly unsupported with APIv2?\nhttp://imgur.com/gallery/mqlbw/new  (https://api.imgur.com/2/album/mqlbw.json) - need to ignore sorting\nhttp://imgur.com/r/urbanexploration/jghFx - Requires APIv3\nUnrelated issue:\nhttp://imgur.com/6mjlF0s,wMKbqYa,cr4BM7m,7xf9fj2#1 - need to ignore selected image number anchor\n. That's my current suspicion.  I'll try to set up an account and confirm it works with APIv3.\nAPIv3 requires OAuth.  Additionally it's rate-limited for free/OSS but they can white list.\n. APIv3 isn't any different w/r/t http://imgur.com/gallery/puCfw8n  Apparently the 7-char hash is because it was a single image.  It's some sort of weird edge case for the gallery.\nThese two are easy enough:\nhttp://imgur.com/6mjlF0s,wMKbqYa,cr4BM7m,7xf9fj2#1\nhttp://imgur.com/gallery/mqlbw/new\n. I'm not going to try to fix the single-image gallery link issue.  I'm afraid of the repercussions of treating the 7-char gallery link as a single image, should imgur extend the gallery hash length in the future.  I guess we'll see if anyone reports it.\nTest for id1,id2,id3#[number] issue: https://www.reddit.com/r/whatisthisthing/comments/2hhi9u/can_anyone_identify_this_my_dad_and_i_stumbled/\nTest for gallery/id1/new issue: https://www.reddit.com/r/whatisthisthing/comments/2hjw7c/can_anyone_explain_what_this_weird_black_stuff_is/\n. ",
    "dashed": "@isstabb Looks like your changes/contributions was merged via https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1476.\nIf this merged contribution was sufficient enough to solve the issue discussed here, then this issue may be closed. Unless there is further action to be done.\nAny issues that arise should be deferred to a creation of a new issue.\n. nvm\n. Just go with gulp -- streams aren't that hard.\n. I made this PR on a whim. I could look into updating more -- but I'm not intimately familiar with RES codebase.\nI amended the PR with your suggestions.\n\nI may look into replacing the word 'image(s)' with something else. Or did you just want me to update the setting descriptions?\nThe module 'Inline Image Viewer' will obviously need to be renamed given the repertoire of available media expandos.\n. I'm wondering if it makes sense to have separate filters for /me/f/all and /r/all. This could be deferred to a flag for gold users.\n. Since there's a limit of built-in filters for /me/f/all (100 filters), I figured a fallback may be deferred to RES. \nThe issue I found was that once I filtered out 'crappy/noisy' subs  (/r/AdviceAnimals, et al) and thus hitting the built-in filter limits, nsfw/porno subreddits started cropping up. And there are a lot of them.  These I'd like to filter out as well.\nI honestly think that it'll be useful if we somehow have filters for /me/f/all. Since if I apply the same filters to /r/all using RES (via jquery magic), RES would hide about two-thirds of the content listing on the first page. That's quite a lot of real-estate lost.\nOn the other hand, filters in /me/f/all are applied via reddit's backend and shows all 100 links on the first page. The user may wish to do some additional subreddit filtering via RES if they hit the built-in filter limits. Such filter list for RES would be substantially shorter.\n\nProbably the easiest route would be to have an option for filters to apply to:\n- only /r/all (default)\n- only /me/f/all\n- both /r/all and /me/f/all.\n\nI'm curious on opinions on this before I submit a PR or something.\n. @andytuba I only suggested the option as an application towards /r/all and/or /me/f/all for  backwards compatibility. \nI have no problem if filters automatically apply to both  /r/all and /me/f/all. \n. @andytuba @honestbleeps \nCreated PR at #1469 to add the /me/f/all url for application of filters.\n\nIf syncing with /me/f/all filters is needed, as per @andytuba's suggestion, I'm unsure how to do this while maintaining RES's code style. FYI, I don't need this particular feature.\nI think it's preferable to just do a read-only of /me/f/all filters via the API http://www.reddit.com/api/filter/user/<username>/f/all, and do a simple union operation with RES's filters.\nSince /me/f/all filtering is a gold-only feature at the moment, we may have some sort of option flag for this behaviour. \nI looked around the source code a bit, and I'm unsure how to show /me/f/all filters as static rows.\n. @andytuba Awesome! Updated and can confirm it's fixed.\n. I think it'll be better to not show context navs if there aren't any to navigate.\n. > If somebody really wants both f/all and r/all, they can add their own shortcuts.\nThis doesn't work for me/f/all. This links to https://www.reddit.com/r/me/f/all\n. @erikdesjardins Clever :+1: . Following this suggestion, I think I'm going to close this issue.\n. > Proposal for option: enum of f/all (default), r/all, or hidden.\nIMO, me/f/all and r/all are actually distinct if a gold member actually use \"native\" filters. I occasionally like to visit r/all when I want to get out of my own filter bubble.\n. > How do you feel about hiding the RES checkbox when the reddit gold checkbox is present?\nIn my opinion, RES checkbox has been useful in cases where the CSS of the subreddit seems to hide the reddit gold checkbox; so I don't think it should be hidden.\n. I see. Thanks for the clarification \ud83d\udc4d . I see. Thanks for the clarification \ud83d\udc4d . ",
    "kenorb": "Similar project: https://github.com/shadyabhi/reddit-all-comments-viewer. ",
    "komachi": "Rebased.\n. Rebased again.\n. ",
    "behrangsa": "@andytuba I can think of at least one way that shouldn't increase load on Reddit servers. As Reddit itself allows up to 100 entries to be displayed per page, RES can prefetch 100 items but only display the first 50. When the user reaches the end of the page, RES displays the next 50, and prefetches the next 100. You get the idea.\nThis gives the user the impression that the next page is loaded instantaneously when he reaches the end of the current page.\n. ",
    "MrChrisW": "Sorry I must have been running an older build. Noted!\n. ",
    "joshhammock": "Fit to Screen sounds like it would be a simple all-in-one option, but may get tricky if you're viewing inline and it would depend on how it behaved when you scroll. Either that option or switching to a height limit instead of width would keep the next image in the gallery from shooting off the bottom of the screen if it's proportionally taller, and so either would be awesome.\n. ",
    "Farow": "Yes, please.\n. ",
    "gablank": "No, as far as my testing has shown it works as expected with multiple images.\nI guess this use case isn't unique to me, then?\n. Ok. My browser doesn't give me the option to scroll sideways when resizing the picture larger than the viewport. I did not add the functionality for videos because I did not see a use-case for it, but I can probably easily add it if desired.\nThanks for the feedback!\n. I guess the commit messages say the same as I'm saying here, but I added your suggestion, andytuba.\nI also added a check to see if we had moved the image at all, if we didn't we should not prevent default behaviour.\n. Implemented feature request #822.\nAlso: When resizing images we might want to only resize one and one the same way I only move one and one image. When there are a lot of images in a submission / comment my computer lags a bit because were resizing so many images. This should probably be a separate feature request, though.\n. Thanks, @SirCmpwn. It means a lot!\n. I understand that @honestbleeps might be busy, but can I ask how long it is usual to wait for a review / comment on a pull request? I don't mean to be rude, it's just that I'm eager to know what he thinks of my work. I check this page more than once daily :)\n. Thanks for the swift reply, @honestbleeps! Take your time, I'm just happy to know I've been noticed.\n. Okay, I'm sorry if you got a ton of emails. I had some issues rebasing, but I think I've got it sorted out now.\n. I'm not sure if I follow? Does this only happen when the image is small or all the time?\n. Oh, I see. That was kind of by design, I was thinking that if the user wants to screw the layout then I won't be stopping them. Would you rather it be that the allotted space increases/decreases so it always contains the image?\n. So I've been thinking about this for a bit now, and while we can expand downwards easily:\n\nUpwards will probably require some filthy hacks including scrolling the users viewport.\nWhat about I make it expand downwards but not to the other sides (top, right, left)?\nIf I were to implement this do I just make a new PR?\n. Working on this, but I'm not sure if I understand what you mean by first visible? Can there be more than one image showing for a particular submission?\n. Yeah, I kind of figured that out, in a way.\nSo, I decided that the image with the highest percentage of its height inside the viewport is the one we move. It works fairly well, although I'm not used to navigating Reddit by keyboard so maybe someone who is should test it out.\n. Can someone please explain to me why this PR is so much cleaner than #819?\nWhat I did was make a new branch from master called image-move and made this PR with that branch. So as far as I can see the master and image-move branches are identical but their PR's are seemingly very different.\n. ",
    "mathphreak": "Sounds good!\n. ",
    "DaGeek247": "I would love to see this done, and would be happy to pay for it as well. I could also help with the database implementation.\n. ",
    "brettp": "\nI appreciate the contribution and I know some users would like this sort of idea, I just think perhaps there's a cleaner / more \"correct\" way of doing this. What do you think?\n\nAgreed, but my only goal was that single feature. If there's interest in refactoring all the karma-related modules, I can look into that, too. If that's not a task you're currently interested in, I can refactor Zen mode into a less conflicting and more CSS'ing approach.\n. > We'll look at the potential of adding this idea in a cleaner way on our todo list...\nDo let me know if this is a direction you want to go. Glad to spend some time on it.\n. > Chrome version #?\nMacOS 39.0.2171.95 (64-bit)\n\nDo you have the Account Switcher module turned off?\n\nNo.\n\nYou can work around this issue by turning off the Username Hider option for hideAllUsernames.\n\nI just disabled the username hider mod to work around it.\n. FWIW, this is definitely still a problem for me with RES 4.5.4 and Chrome 42.0.2311.135 (64-bit) OS X:\n\n. That fixed it. As you probably guessed, I had the account switcher enabled,\nbut none defined.\nOn Thu, May 14, 2015 at 2:43 PM Andy Tuba notifications@github.com wrote:\n\nCan you try going into your settings and adding an empty row to the\nAccount Switcher's accounts list?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1881#issuecomment-102132157\n.\n. I was just following suit with the existing code :-)\n. \n",
    "m-xbutterfly": "I did some research. This would be easy enough to do but it might take some time.\nIE8 has a remainingSpace property.\nIf we use chrome's storage api, then we can use local.QUOTA_BYTES, and StorageArea.getBytesInUse.\nI haven't looked into the other browsers but one thing we can do is get the quota using a script simliar to the one you linked to and just store that value in our local storage. W3 recommends an arbitrary limit of 5Mb so we can just hard code that value in.\nTLDR: it depends on the browser. It can be done in general, but it won't be pretty.\n. ",
    "FreakBurrito": "So my research has come up pretty flat. There's no API in chrome for interrogating current size and remaining size. Microsoft put remainingSize into IE but it doesn't look like it made the standards.\nA lot of solutions exist for attempting to determine the size of the store, as well as determining the remaining space, but they all seem hackish.\nIt looks like chrome offers an unlimited size store for extensions. That could help get around the problem entirely.\nhttps://developers.google.com/chrome/whitepapers/storage#unlimited\n. Sorry for focusing on Chrome initially, I guess I'm trying to approach the problem here from another direction, the \"Why is warning about space needed?\" If there are ways to eliminate the problem then no other coding effort is required. Of course adding a new permission to the manifest always gets painful when the wannabe security \"experts\" start making waves in /r/Enhancement after a new release. \nThere's a few approaches I see that can potentially work across browsers. This stackoverflow answer http://stackoverflow.com/questions/4391575/how-to-find-the-size-of-localstorage would allow RES to somewhat determine the size of localStorage (obviously depending on various string encodings and the like), but it doesn't really seem like the \"right\" solution.\nIt seems like indexedDB had support for almost all browsers now except Safari, and it seems like there is more room there for managing quota limits. Has this been considered as an alternative to using local storage? I understand that this can mean a massive amount of changes to the codebase.\nIn addition, what would the approach be for notifying users of reaching their quota if the other solutions aren't acceptable? It seems like some browsers have no mechanism to increase local storage at all. Presenting unactionable messages to users is always an area for concern. In addition there's always the anal retentive crowd that complains about the slightest changes that occur in reddit (e.g. Expando Icons changing, Multireddits sidebar, etc.) I'm sure a new naggy dialog would drive them nuts.\nI think that a decent amount of discussion here can help identify the best approach for this issue, seeing as there's no unifying method of managing storage space across the browsers.\n. ",
    "trufa": "I'm pretty sure I have this bug figured out but it's not that easy due to backwards compatibility.\nThere are many ways of doing this, but I don't think the one that we have to be catching the usernames in both ways (lower and mixed case) make sense.\nI am changing the structure the users are stored to userid: {username: UserName}\nThe userid will be the username in lowercase, and then we can save the username as whichever way they were tagged.\nThis means that on the first run, we will have to make sure to change that structure.\nAnd then I we will have to distinguish when we are presenting the username that will be userid.username and when we are showing it to the user and userid for the script's usage.\n@honestbleeps the only question I have since I'm afraid to brake older versions is whether I can trust I will find when a user updates the structure:\nUserName: {\n    color: \"...\",\n    link: \"...\",\n    tag: \"...\",\n    votes: \"...\"\n}\nI will of course check if the properties exist but I don't know exactly what to expect from very old versions.\nThanks.\n. @andytuba I didn't know that, I'll see what I can do about that too. I'll come back to you.\n. @andytuba have you looked into http://pieroxy.net/blog/pages/lz-string/index.html seems to fit the needs.\n. ",
    "BenMcGarry": "Closed as ChangeTip has shut down.. i18n Implementation has started! See the below Project for tracking.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/projects/1\n. Believed to be an Edge limitation at this stage, awaiting confirmation on this.\n. Issue raised: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7480412/\n. Line 337 of accountSwitcher.js. Caught in the block.\n. Appears to be a browser issue at this stage, problem talking to the API. Need further investigation.\n. Issue raised. https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7477886/\n. Fixed, awaiting build.\n. Issue resolved in 14361. Closed.\n. Line 30 backupAndRestore.js - Invalid Calling Object\n. link.href = URL.createObjectURL(blob); << Invalid calling Object\n. Appears to be a browser issue at this stage, problem with creating blobs. Issues existed in IE10+ with a similar MO to ours.\n. https://msdn.microsoft.com/en-us/library/hh779016(v=vs.85).aspx\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/backupAndRestore.js#L36\nInvalid Calling Object\n. Issue confirmed with Edge, fix in progress. https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7187326/\n. In code review.\n. Issue marked as fix in Edge, will test when available in build.\nhttps://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7187326/\n. In build 14342 backup is now functional, but it does not name the file correctly. It gives a name such as \"B1BBD615-8FF5-498E-9217-3FB0AC44CB08\". The downloaded file does have the settings contained. It is just the name. The download attribute is ignored.\nhttp://codepen.io/benmcgarry/pen/xVBPKJ\nCode to test it in edge.\nCurrent issue: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7260192/\n. ## Backup File Name\nWe are still waiting for this bug to be serviced. The backup functionality works as intended it's just that the file is not properly named. You can follow the below to solve this if you require.\nWorkaround:\n1. Save the blob file.\n2. Rename it in file explorer as well as the file extension to \"RES.resbackup\"\n. Issue resolved in 14971. Closed.. Changing line 118 of init.js to console.error(_context.t0.message); allows the cog to show. Dropdown still broken\n. Changing line 143 of browsersupport.js to if (!(response.status !== 200 && response.status !== 0)) { gives hover back on the gear.\n. Poor performance on Edge  compared to Chrome.\n. Issue resolved in https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2905\n. Current Open Issues: https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues?q=is%3Aissue+is%3Aopen+label%3ABrowser-Edge\n. Run INSTALL_SCRIPT.cmd to give permissions to the folder\n'use strict'; MUST be commented out after build in browsersupport-chrome.js otherwise the extension will not load.\nExtension will load but issues here are still present. \n. Full edge support committed, pulls needed files from chrome and only required are in edge directory.\nCurrent known issues: https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues?q=is%3Aissue+is%3Aopen+label%3ABrowser-Edge\n. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/47fa261388c25d3132580143ee9ca139f345fb49/lib/core/templates.html#L445\nRemoving this line solves issue.\n. Fix tested in chrome and edge. Confirmed fix with no defects.\n. Appears to be hidden behind images on Naut at the top due to the high z-index setting.\n. z-index 101 makes it work on naut with no overlaps. Is there any reason why changing the z-index would solve it?\n. The cog overlapping? 100% of the time on edge with current 4.7 master.\n. Since webpack changes the pause button now doesn't show at all.\n. Issue resolved in eb34e08b4bdb76c35518a660443e57e67b380493. Closed.\n. Issue resolved in 7b38a901381b8799b4172e3aa5753eacefa50b8d. Closed\n. Current known issues\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues?q=is%3Aissue+is%3Aopen+label%3ABrowser-Edge\n. @mc10 Should be resolved now, realised it a hour or so ago.\n. Fix confirmed for #2887. Edge volume is now usable without resizing although it means you cannot resize the video from the bottom half, only above where the top of the volume controls being. Due to the controls being vertical this is the best fix option at this time.\n. Issue no longer present in 14352. Closed.\n. Re-opened. https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7996816/. https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9850430/\nMarked as fixed, will test when available. . Confirmed Resolved on 16237.. What's the current status with this PR, would be nice to get it into 4.7.\n. https://www.reddit.com/r/RESAnnouncements/comments/4u4pxu/announcement_upcoming_471_beta_releases_of_res/\n. whooooooooops!\n. congrats to @larsjohnsen for getting his own release!\n. #3112 fixes this.\n. https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9161008/. Appears to be an issue with cloudfront, taking quite sometime to get a connection established. The file is caching correctly and reading from the cache on chrome/ff/edge on my end. Something might be preventing it from reading from cache.\n@TheLQ are you able to check your network dev panel and see if it loads the cache on page refreshes? Also please provide your firefox version. Thanks.\n. This appears to happen due to OpenSeadragonizer being a unsupported media host for RES, So the expando isn't quite sure what to do. If you would like RES to be able to expand these you will need to submit a mediahost, please see the URL below for an example.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/examples/host.js\n. Can you please provide a list of extensions you are using? As well as browser and versions. \n. What version of Chrome are you running?\n. Can you confirm the version of RES you are running? We have seen many reports of this and people have said updated to 5.0.0.1 has fixed it.\n. Ok, from the outset it looks like it could be a Chrome bug, it appears to be resolved on the canary builds but for general usage i wouldnt reccomend those builds. I don't really work on Chrome so i'm not really able to start digging into this issue, when the American guys wake up they should be able to figure out whats gone wrong pretty quick. I'll leave this open as a note to them and monitor it today and try to see if theres anything i can do. Chrome 53 was released the day before we committed for stable and we didnt really have any reports of this in beta, so this has hit us as a bit of a shock.\n. @Ajedi32 Yep\n. @Ajedi32 Yep\n. Issue appears to be resolved in upstream builds and reports of issues in browser vers have stopped. Closed.\n. chrome://flags/#enable-javascript-harmony\nIs that flag enabled for you? If so turn it off.\n. chrome://flags/#enable-javascript-harmony\nIs that flag enabled for you? If so turn it off.\n. 23:15:13\u00a0<\\erikdesjardins>\u00a0it appears to be that the dashboard module does something mildly horrifying\n23:15:25\u00a0<\\erikdesjardins>\u00a0it seems to use a form with  for the sole purpose of reloading the page\n23:15:35\u00a0<\\erikdesjardins>\u00a0and it tries to do (async!) work before the page navigates by capturing the bubbled 'submit' event outside of the form\n23:17:32\u00a0<\\erikdesjardins>\u00a0I would guess that edge differs from the other browsers by not waiting for the microtask queue to drain before navigating\n23:17:34\u00a0<\\erikdesjardins>\u00a0or something\n23:17:55\u00a0<\\erikdesjardins>\u00a0or it doesn't bubble submit events out of forms\n. Is there anyway we can contact mediawiki about this beforehand? Just to check there's not something we are missing and to get their blessing.\nEDIT: mediawiki-api@lists.wikimedia.org\n. For future note for everyone, this was removed as denials are no longer cached.\n. Closed. See \"RES Welcome Wagon\" within the settings console.. https://github.com/honestbleeps/Reddit-Enhancement-Suite/compare/v5.0.1...v5.0.2\n. Ava issue appears to be fixed in next release, see: https://github.com/avajs/ava/issues/1017\n. I have been monitoring this over the past few weeks and it appears to be a non-issue on Insider Builds. Marking as closed but will continue to monitor up until stable.\n. @erikdesjardins looks like the easiest implementation, Would we be using language auto-detect or having options for users to manually select their language? (I'd prefer the latter).\n. Is this the one with the disable res, enable res and restart the browser fix @erikdesjardins?\n. Reference #3315 \n. Reference #3315 \n. FF51 released - https://www.mozilla.org/en-US/firefox/51.0/releasenotes/. \n. I'd say new keywords field, and make search look at those keywords instead of description/module id.\n. I think you missed the total point of this...\n. Saucelabs now supports Edge 15, deferring to v5.10.x as we finalise current rel.. The ability to sideload extensions now exists in Edge webdriver under \"ms:extensionPaths\".\nhttps://docs.microsoft.com/en-us/microsoft-edge/webdriver . https://github.com/SeleniumHQ/selenium/commit/8c1acbdd843eaab83802642d0fd6e460b9597cb2. Untested\n. Ref Dupe #3451\n. @remram44\u00a0can you link to a post where the expand doesn't work?. Works fine for me: \nWhat other extension do you have active?. Confirmed as a bug in 14971. Non repro in earlier builds.. https://www.reddit.com/r/RESAnnouncements/comments/5go2xd/announcement_res_v520_release/. Even though #4233 helps resolve the issue, it is still hard to open the cog menu on Edge with touch.. Issue no longer\u00a0reproducible in 15014.. Related for reference #2877 . Once this has been removed is cloudflare still required for the website?. I believe we still need to merge\u00a0some changes that are on the css file.\nhttp://pastebin.com/1793xxTZ. Resolved in #3858 . https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/93fec936a1da5cca5403586b1f0229c1cf17ec60/lib/utils/alert.js#L43 Use before Dec. @erikdesjardins Looks like this has been resolved on 16237. Edge 16 has October 17th release.. Edge 16 has October 17th release.. #4102 can now be reversed.. #4102 can now be reversed.. Thanks!. ref #4069. No autoplay param at this time but coming soon.. Passive event listener support @ 16215. Ref Microsoft/ChakraCore#2606. Direct tumblr images not affected, only albums.. Don't we have something similar on the sub edit css page? IIRC when you contacted me about /r/XboxOne's styling where we did remove the class, shortly after there was a notice on the page saying did you know you are doing this.. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/423e7599943640b2baf50e53cf7a2787de9efd2b/lib/environment/ajax.js#L87-L92\nUnspecified error on that block. @scottlow Aware of any fetch issues with Edge?. @mc10 I'm getting it on /r/all. Repro on Edge/Chrome, turning off RES resolves.. NER is at default and no errors. I can also repro on Firefox.. width: 2.2ex; is being applied on body >.content .link .rank, .rank-spacer. Disabling this solves it but content is mid-lined.. On mine i'm not seeing body.res. @mc10 what version of RES are you running?. Looks like this doesn't affect 5.4.3, but affects v5.5.x. This is intended, as opera shares the same codebase as chrome, it allows us to set min versions. It does not affect the usage of RES.. This is intended, as opera shares the same codebase as chrome, it allows us to set min versions. It does not affect the usage of RES.. Tested the potential fix mentioned on a user experiencing the issue, new profile did resolve the issue.. Tested the potential fix mentioned on a user experiencing the issue, new profile did resolve the issue.. Related Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1322113. Related Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1322113. \"To workaround this bug, user may add the target host in the cookie exception list, which set Firefox to always allow the cookies from the said origin.\"\nAnyone able to verify this?. \"To workaround this bug, user may add the target host in the cookie exception list, which set Firefox to always allow the cookies from the said origin.\"\nAnyone able to verify this?. @Epholys whats your current cookie settings?. @Epholys whats your current cookie settings?. @Epholys Hmm, we know another fix is to try it on a fresh FF profile. Are you able to try this and report back?. @Epholys Hmm, we know another fix is to try it on a fresh FF profile. Are you able to try this and report back?. I think someone needs to lay off the films a bit.... I think someone needs to lay off the films a bit.... @larsjohnsen is there no way to change it from chromiumapp.org on identity? I reckon we would see a lot of people asking what it is.. Click the X and try again. There is nothing on RES's side causing this, looks to be an Edge bug. Closed.. Ref #4336, this appears to be a Edge issue. Just tested this myself and can repro however on retrying it completed fine. I have checked and we have nothing wrong with our manifest file (it recently passed all tests to be on the store). Please file feedback in the feedback hub.. https://www.reddit.com/r/modnews/comments/7a5ubn/crossposting_coming_soon_to_your_subreddit/\nGeneral release on the 8th Nov. https://bugs.chromium.org/p/chromium/issues/detail?id=765524\nAppears to have been a Chromium bug, fixed in M62. Awaiting confirmation it does fix the issue.. Go for it @tersers :). Possibly related: https://bugzilla.mozilla.org/show_bug.cgi?id=1403963. Looks good to me, @andytuba?. @thybag i would say use the gold icon instead of that on the hover card, would look a lot neater and i would assume most users know what it means.. Ah ok, i didnt see that commit.. Depending when we expect this 5.12 to land we may be able to just avoid the shim. The fix should be released April timeish.. RES has options to automatically backup and restore RES settings to Dropbox, Google Drive and OneDrive. See https://www.reddit.com/r/Enhancement/wiki/backing_up_res_settings.\nThere are no plans to implement a first party cloud storage service for RES settings.. I am not able to reproduce this with the versions mentioned as well as the browser version. All versions mentioned work on Edge inc Store and sideloaded versions. \n\nI would suggest doing a Repair/Reset on Microsoft Edge, these options are on Settings > Apps > Microsoft Edge > Advanced Options.\n. Firefox 57 is set as the minimum required version as we use an API that is only available in Firefox 57+.\nopenerTabIdon https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/tabs/create.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4518. From testing this on Chrome 65 on Win10, the icons can appear hidden when scrolling due to the Reddit information box, account switcher also forces a horizontal scrollbar to appear as the menu opens with overflow off screen.\n\nOn old reddit, this also relocates the existing cog to the floater.\n\n. All problems resolved in testing.. Dupe of #4735. We are building in support for the redesign per our recent release and announcement. We have been working on compatibility for many months and will continue to do so until all features are implemented for the redesign.\n. RES will not be implementing Night Mode for the redesign due to it becoming a first party feature in the very near future.. RES will be supporting both .old and .new. When it becomes a first party feature we will be modifying the toggle to allow change on both sites.. This is a known issue due to a Firefox bug we have been waiting 2 years to be fixed.\nhttps://www.reddit.com/r/Enhancement/wiki/faq/never_ending_reddit. Thank you for the contribution however we do not accept translations within the core language files. \nPlease see our translation document here: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/locales/locales/README.md\n. We are currently working through a few issues with Mozilla. We hope to get the latest version republished soon.. I do not feel comfortable right now with allowing telemetry for a third party service within the extension.\nRES has always prided itself in being very user focused and we have a good track record with not messing around with users privacy. Allowing a single media host telemetry data would set a bad precedence as others may come along asking for the same thing which puts us in a sticky position.\nNot to mention the pain this will cause with getting the extension approved on the browser extension marketplaces. Review processed would become a lot more strict if we are sending data out to third party endpoints. I can't imagine Mozilla would be too happy with it being very user security and privacy focused.\nWe need to tread very carefully because even if we do implement it, if there is a slight security/privacy issue on our end, it will blow up in our faces.. > I'd like to point out that any expandos that use an iframe likely already send analytics data to the embedees, so this isn't exactly unprecedented. In fact, we have a lot more control over the data sent in this case, so it's actually strictly better from a privacy perspective than other expando implementations.\nWhile this is true yes, we are talking about actually going out of our way for a media host to gather telemetry unique to RES apposed to it being universial for all API hits. We suddenly become responsible for how we manage it from our end as apposed to it being baked into their own APIs and it being their responsibility. . Upon further thought on this, i would feel a lot more comfortable if we could reach out to the Gfycat team to see what information they actually gather against their supplied docs. Then we can make an informed decision and see what the impact to the end user would be.. > At a brief glance it seems like iloopit is still around?\nWas it always what is it now? Looks like it might have changed.. It does look like this mediahost moved from a site where you can make general gifs to a NSFW only gif site. Hence the URL change.. @uppusaikiran We release when we are happy with the updates within the release and stability. We do not guarantee release dates or have ETAs.. There is currently a known issue related to the redirect to old that the admins are aware of.\nhttps://www.reddit.com/r/redesign/comments/adxv7b/update_on_the_bug_where_youre_randomly_reverted/\nRight now we have no intentions to ship this feature as we do not want RES to be used solely as a redirect tool while the officially supported feature is being fixed.. Ah i removed one of the wrong statements. Reverting now.. Thanks for the contribution!\nTested and confirmed working on Chrome + Edge. Firefox confirmed based on above screenshot.\n@larsjohnsen Do we need the migration trigger as this is a new module?\nRelated to #5049, https://peervideo.net/about/peertube looks like the best URL for that PR, the multiple domains are covered by it.. RES does not support the redesign so you will not see the show images button on display.. The only thing I'd recommend on that line is to put access/modify any of your information.\n. :pencil2:\n. Nit pick, order A-Z\u00a0so ajax, deleteCookies, i18n, multicast.. At the moment we aren't translating strings that have\u00a0HTML inline due to it being a potential security concern. We still need to convert to markdown @erikdesjardins . Ideally we don't want to make i18n calls within the actual modules themselves, but rather in the backend where they are rendered. This might need some changes to module builder @andytuba\u00a0@erikdesjardins \nSame for all\u00a0below.. Space between .js and \".. Please use specific versions.. Betas to \"Edge Internal Beta Releases\" for now, when the platform is more stable we can push to public beta.. For my own knowledge, what's this doing?. @andytuba Do we have any other plans for this module? . I agree it is a little awkward, but this module is only going to be used as a bridge before we move over to the native hovercards. So it would probably be here until the next major release, by then we will have moved across.. Thanks, i've put it back in.. Can you update this change across all browser manifests?\nEdge - https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/edge/manifest.json\nFirefox - https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/firefox/manifest.json. Can you update \"twitchclips\" to \"znipetv\" please :). To clear lint errors, space after \"if\" on this line as well as line 11 (below).. ",
    "purdyk": "I've looked over the code in generateIframeExpando and noticed that the element is not inserted for image lists.  I suspect the reason for this is to avoid duplicate insertions when reddit does this for you on Youtube expandos:\nJavascript\n        if (expandoButton.classList.contains('commentImg')) {\n            RESUtils.insertAfter(expandoButton, wrapperDiv);\n        }\nI suspect that it would be unwise to remove this conditional.  Let me know what you think.\n. Updated this PR to use the iframe expando instead of the bespoke solution I was using. Also updated the options to reflect the direct lookup changes in #1006 \n. I initially attempted this approach, however, the iframe expandos do not appear to work for link list items, only comment items.  When implemented this way, the expando button shows up but does not work, except in comments.\n. ",
    "JordanMilne": "![](%%IMAGE_NAME%%) is now handled correctly, but ![Foobar]( http://google.com/logos/google.jpg ) still causes an external request to be made. reddit proper drops any images that don't match the %% format.\n. Woot, thanks andy!\n. Derp, I searched for \"i18n\" and \"translation\", but not \"localization\"\n. copy / paste error?\n. You can get around this by storing the json in a Blob and setting .href to the Blob's URI instead.\n. ",
    "githue": "I was just trying to reduce unnecessary CSS and follow Reddit's standard of using lower case for tabs. If you want me to change it back I can do that for you.\n. I think I'm going to redo this so I can set up my branches properly, I'm not sure what's going to happen when I delete and recreate my fork...\n. Here's a screenshot:\n\nAnd the new stylesheet which is now formatted correctly:\n```\n.id-t3_qi5iy span.rank, .id-t3_qi5iy div.midcol, .id-t3_qi5iy div.entry div.expando-button, .id-t3_qi5iy p.tagline, .id-t3_qi5iy ul, .id-t3_qi5iy div.expando  {\n  display: none;\n}\n.id-t3_qi5iy {\n  position: absolute;\n  left: -2000px;\n}\n.id-t3_qi5iy a.title {\n  display: block;\n  position: absolute;\n  top: -50px;\n  left: 2130px;\n  width: 600px;\n  font-size: 11px;\n  z-index: 500;\n}\nnoresults, div.titlebox, div.sidebox, div.sidecontentbox { display: none; }\nuserTaggerTable .deleteButton { cursor: pointer; color: orangered; text-decoration: underline; float: right; }\nuserTaggerTable, #newCommentsTable {\nborder: 1px solid #cccccc;\n}\nuserTaggerTable thead, #newCommentsTable thead {\nbackground-color: #f0f3f7\n}\nuserTaggerTable td, #newCommentsTable td {\nborder: 1px solid #cccccc;\n  padding: 14px 18px;\n  min-width: 140px;\n}\nuserTaggerTable td {\nwhite-space:nowrap;\n}\nuserTaggerTable td:first-child {\nwidth: 170px;\n}\nuserTaggerTable th.delete, #userTaggerTable td.delete {\nmax-width: 40px;\n  text-align: center;\n}\nuserTaggerTable th, #newCommentsTable th {\ncursor: pointer;\n  border: 1px solid #cccccc;\n  padding: 14px 18px;\n  min-width: 100px;\n}\nuserTaggerTable thead td, #newCommentsTable thead td {\ncursor: pointer;\n}\ndiv.show {\n  margin-bottom: 12px;\n}\nnewCommentsTable th:first-child, #newCommentsTable td:first-child {\nwidth: 400px;\n}\nuserTaggerTable td:nth-child(2) {\nwhite-space: normal;\n}\n```\n. Here's a screenshot:\n\nAnd the new stylesheet which is now formatted correctly:\n```\n.id-t3_qi5iy span.rank, .id-t3_qi5iy div.midcol, .id-t3_qi5iy div.entry div.expando-button, .id-t3_qi5iy p.tagline, .id-t3_qi5iy ul, .id-t3_qi5iy div.expando  {\n  display: none;\n}\n.id-t3_qi5iy {\n  position: absolute;\n  left: -2000px;\n}\n.id-t3_qi5iy a.title {\n  display: block;\n  position: absolute;\n  top: -50px;\n  left: 2130px;\n  width: 600px;\n  font-size: 11px;\n  z-index: 500;\n}\nnoresults, div.titlebox, div.sidebox, div.sidecontentbox { display: none; }\nuserTaggerTable .deleteButton { cursor: pointer; color: orangered; text-decoration: underline; float: right; }\nuserTaggerTable, #newCommentsTable {\nborder: 1px solid #cccccc;\n}\nuserTaggerTable thead, #newCommentsTable thead {\nbackground-color: #f0f3f7\n}\nuserTaggerTable td, #newCommentsTable td {\nborder: 1px solid #cccccc;\n  padding: 14px 18px;\n  min-width: 140px;\n}\nuserTaggerTable td {\nwhite-space:nowrap;\n}\nuserTaggerTable td:first-child {\nwidth: 170px;\n}\nuserTaggerTable th.delete, #userTaggerTable td.delete {\nmax-width: 40px;\n  text-align: center;\n}\nuserTaggerTable th, #newCommentsTable th {\ncursor: pointer;\n  border: 1px solid #cccccc;\n  padding: 14px 18px;\n  min-width: 100px;\n}\nuserTaggerTable thead td, #newCommentsTable thead td {\ncursor: pointer;\n}\ndiv.show {\n  margin-bottom: 12px;\n}\nnewCommentsTable th:first-child, #newCommentsTable td:first-child {\nwidth: 400px;\n}\nuserTaggerTable td:nth-child(2) {\nwhite-space: normal;\n}\n```\n. An added benefit of this is that it also works for the users who have custom subreddit styles turned off. That was actually my main motivation but I forgot to mention it.\n. An added benefit of this is that it also works for the users who have custom subreddit styles turned off. That was actually my main motivation but I forgot to mention it.\n. Good points. I'll have an update later.\n. We can use both of those ideas.\n```\nRESConsoleContent {\npadding: 6px 6px 20px 6px;\n}\nRESConsoleConfigPanel {\nheight: 100%;\n}\nRESConfigPanelModulesPane {\nposition: static;\n  overflow: auto;\n  height: 100%;\n}\nRESConfigPanelOptions {\noverflow: auto;\n  height: 100%;\n}\n```\n. okay\n. Related to #1191.\n. Related to #1191.\n. This can go on hold as it's not important and the baseStyleProtection thing needs to be addressed outside of this issue.\n. This can go on hold as it's not important and the baseStyleProtection thing needs to be addressed outside of this issue.\n. Ah, that's good to know. Do you expect it will be ready before the next release? If not, my proposal won't take long to implement.\n. Ah, that's good to know. Do you expect it will be ready before the next release? If not, my proposal won't take long to implement.\n. I'm not sure. For some reason I suspect that if it were on the right then some people would automatically click it without thinking, because it could resemble a dropdown menu. I don't think being on the left is really a problem.\n. I'm not sure. For some reason I suspect that if it were on the right then some people would automatically click it without thinking, because it could resemble a dropdown menu. I don't think being on the left is really a problem.\n. superseded by the referenced pull request.\n. Apart from my coding possibly needing improvement, the only issue is that when you first open the edit dialog the button label defaults to A-Z, so if the subreddits are already sorted A-Z then the label won't match up until you click it a couple of times.\n. Apart from my coding possibly needing improvement, the only issue is that when you first open the edit dialog the button label defaults to A-Z, so if the subreddits are already sorted A-Z then the label won't match up until you click it a couple of times.\n. EDIT: Ugh, nevermind I know what's going on.\n. EDIT: Ugh, nevermind I know what's going on.\n. I managed to get it working, but there are two pre-existing problems remaining from the old code. A) when you press Enter while in the subreddit textfield, the sorting script will run before saving, it shouldn't do this. B) The sorting algorithm treats lower case 'a' differently than uppercase 'A', they should be the same.\n. I managed to get it working, but there are two pre-existing problems remaining from the old code. A) when you press Enter while in the subreddit textfield, the sorting script will run before saving, it shouldn't do this. B) The sorting algorithm treats lower case 'a' differently than uppercase 'A', they should be the same.\n. Would it be ok if I move those two remaining bugs into new issues to help get this commit through?\n. I think I did that right.\n. I think I did that right.\n. Which browser? And is that on Linux?\n. Which browser? And is that on Linux?\n. What do you think of changing the color of the ranking instead of the score?\nExample:\n\nThis way it keeps the traditional grey/blue/orange that reddit uses for scores, so users don't have to readjust their eyes to read the scores.\nCSS:\n.link .rank {\n  color: #fff;\n  text-align: center;\n  background: rgb(200,200,200);\n  border-radius: 1em;\n}\nAre the options separated from each other? Personally I would probably enable colors for links, and disable them for comments.\n. Try it with 50% saturation.\nEdit: here's some new CSS so the numbers fit inside the circles better:\n.link .rank {\n  color: #fff;\n  text-align: center;\n  border-radius: 1em;\n  font-size: 12px;\n  padding: 4px;\n  line-height: 1;\n  height: 1em;\n  min-width: 1em;\n}\n. I think the centering problem is caused by the way RES calculates the width of the boxes in 'ex' units (I think it's RES), you would have to check if other browsers have the same problem . Maybe it should be changed to em with an increase of 0.25em for each extra digit.\nHere's some new CSS which is a bit cleaner.\n.link .rank {\n  color: #fff;\n  text-align: center;\n  border-radius: 1.75em;\n  font-size: 12px;\n  line-height: 1.75em;\n  min-width: 1.75em;\n}\nLastly, the way your example goes from red, to purple, to green doesn't seem logical. I think you should try it with only green, yellow and red. The reason is that green feels cold, yellow feels warm and red feels hot. But pink, purple and blue don't evoke those feelings as much. Alternatively you could try with only red as the main color and have the saturation change from grey to 100% red.\n. I understand. We can wait for the future to try other alternatives if there are any problems.\n. I'll leave new features to more skilled coders, I just like to work on markup and usability.\n. Hmm I just remembered @honestbleeps was working on a redesign of the forms.\n. No one's brought up pinHeader to me before, but updating it should be trivial.\n. TIL about pinHeader... I'll have to make it work with my changes to the dropdown menu.\n. Assign to me please.\n. It only seems to do it for the last item in the menu, so a/b+x will work correctly, but x+a/b won't.\n. Done.\n. Yeah I'm not sure what I'm doing wrong, I did git rebase master on my branch and followed the prompts...\n. No longer needed.\n. I'm going to test this a while longer just to make sure it's really solid. I'll say when it's ready.\n. Yeah I meant normal. I can't see any reason why nowrap needs to be on there in the first place. Overflow will also work.\n. Yeah I meant normal. I can't see any reason why nowrap needs to be on there in the first place. Overflow will also work.\n. Not perfect, but it apparently solved the issue for the person who reported it: http://www.reddit.com/r/bugs/comments/2ay4f7/banned_users_list_falls_below_sidebar_very_easily/\n. Not perfect, but it apparently solved the issue for the person who reported it: http://www.reddit.com/r/bugs/comments/2ay4f7/banned_users_list_falls_below_sidebar_very_easily/\n. Happens in chrome as well for me. I just keep adding /r/f7u12 until the add button disappears.\n. Happens in chrome as well for me. I just keep adding /r/f7u12 until the add button disappears.\n. Happens in chrome as well for me. I just keep adding /r/f7u12 until the add button disappears.\n. I should have a pull request done soon, after some more testing.\n. I should have a pull request done soon, after some more testing.\n. I should have a pull request done soon, after some more testing.\n. The real culprit in the comment box falling below the sidebar was commentnavigator.js! There were too many floats.\n. The real culprit in the comment box falling below the sidebar was commentnavigator.js! There were too many floats.\n. The real culprit in the comment box falling below the sidebar was commentnavigator.js! There were too many floats.\n. I was thinking about this too, I think it's the next logical step since the list keeps growing, but should it really be an option?\n. I was thinking about this too, I think it's the next logical step since the list keeps growing, but should it really be an option?\n. No worries, I thought there might have been some other reason to make it an option, so I was just asking.\n. No worries, I thought there might have been some other reason to make it an option, so I was just asking.\n. This is good feedback, there are evidently many ways to take this further.\nKarma next to name definitely makes more sense.\nYou're right about the 18+ icon, I looked around and found it here: http://www.reddit.com/subreddits/\nMakes sense to use Reddit's existing gold icons. One next to \"give gold\" and one next to the username if they have it, Reddit already has two appropriate icons in their sprite map.\n. This is good feedback, there are evidently many ways to take this further.\nKarma next to name definitely makes more sense.\nYou're right about the 18+ icon, I looked around and found it here: http://www.reddit.com/subreddits/\nMakes sense to use Reddit's existing gold icons. One next to \"give gold\" and one next to the username if they have it, Reddit already has two appropriate icons in their sprite map.\n. Here's an update for the user panel based on Andy's comments. I moved submissions/comments into the body because the title bar is already getting a bit cluttered. The karma numbers would have a dotted underline + tooltip.\n\nInteresting idea with the deeplinks, though not sure what the comments link is there for.\n. Here's an update for the user panel based on Andy's comments. I moved submissions/comments into the body because the title bar is already getting a bit cluttered. The karma numbers would have a dotted underline + tooltip.\n\nInteresting idea with the deeplinks, though not sure what the comments link is there for.\n. So it is.\nI'll play around with deeplinks. Everything is still in the fleshing-out stage so it might change a lot.\nWith async loading, that's prob the way to go. I'll do a mockup for it.\n. So it is.\nI'll play around with deeplinks. Everything is still in the fleshing-out stage so it might change a lot.\nWith async loading, that's prob the way to go. I'll do a mockup for it.\n. I'm thinking it might mean starting  a new design from scratch, that's why I said it might change a lot. I don't intend anything to be an afterthought. :wink:\n. I'm thinking it might mean starting  a new design from scratch, that's why I said it might change a lot. I don't intend anything to be an afterthought. :wink:\n. Ok I created a working concept in a standalone HTML file. I took just about every suggestion into consideration except for the red 18+ icon which throws off the color scheme.\nHere it is on JSBin: http://jsbin.com/nudaje/1?output\nIt simulates loading two sets of data, one instant, the other after 2 seconds. Reload the page to reset the \"cache\". The throbber might be too hard to see at the current color, I might increase the contrast so it stands out more.\nFor the subreddit info popup I've included every possible deeplink, but I think \"controversial\" and \"comments\" should be hidden by default with an option for the user to add them. Notice the \"wiki\" link takes a moment to appear because RES will have to check that it exists.\nWhat do you think of the direction this is going?\n. Ok I created a working concept in a standalone HTML file. I took just about every suggestion into consideration except for the red 18+ icon which throws off the color scheme.\nHere it is on JSBin: http://jsbin.com/nudaje/1?output\nIt simulates loading two sets of data, one instant, the other after 2 seconds. Reload the page to reset the \"cache\". The throbber might be too hard to see at the current color, I might increase the contrast so it stands out more.\nFor the subreddit info popup I've included every possible deeplink, but I think \"controversial\" and \"comments\" should be hidden by default with an option for the user to add them. Notice the \"wiki\" link takes a moment to appear because RES will have to check that it exists.\nWhat do you think of the direction this is going?\n. Added nightmode colors.\n. Added nightmode colors.\n. New revision before I go to sleep: http://jsbin.com/nudaje/2\nAdded more links to user info.\n\n\n\n\n\n. New revision before I go to sleep: http://jsbin.com/nudaje/2\nAdded more links to user info.\n\n\n\n\n\n. Good call. New revision: http://jsbin.com/nudaje/3\n\n\n. Good call. New revision: http://jsbin.com/nudaje/3\n\n\n. Glad you like it. The main info box grows to a max width of 450px and the contents wrap to the next line if necessary. I just tested with 1m link and comment karma and it looks fine.\n. Glad you like it. The main info box grows to a max width of 450px and the contents wrap to the next line if necessary. I just tested with 1m link and comment karma and it looks fine.\n. If there isn't an efficient way to check that data should we leave them out, leave them in always, or check even though it will be slow?\n. If there isn't an efficient way to check that data should we leave them out, leave them in always, or check even though it will be slow?\n. The guages would work best if they were next to each other like in matheod's original design, I'll explore some alternative arrangements.\n. The guages would work best if they were next to each other like in matheod's original design, I'll explore some alternative arrangements.\n. My apologies. I took a break to work on art and lost my momentum for RES. I've been meaning to return.\nI've been thinking about the trust indicator and didn't come up with anything better than the first suggestion, which in hindsight is looking perfectly fine :smile:. Might need to take the border off the karma numbers for the trust indicator to fit nicely.\nI have some minor updates to the CSS which I'll put up later today when it's cleaned it up. As always I'm open to suggestions for changes.\n\n\n(need to give a width to the throbber).\n. My apologies. I took a break to work on art and lost my momentum for RES. I've been meaning to return.\nI've been thinking about the trust indicator and didn't come up with anything better than the first suggestion, which in hindsight is looking perfectly fine :smile:. Might need to take the border off the karma numbers for the trust indicator to fit nicely.\nI have some minor updates to the CSS which I'll put up later today when it's cleaned it up. As always I'm open to suggestions for changes.\n\n\n(need to give a width to the throbber).\n. My apologies. I took a break to work on art and lost my momentum for RES. I've been meaning to return.\nI've been thinking about the trust indicator and didn't come up with anything better than the first suggestion, which in hindsight is looking perfectly fine :smile:. Might need to take the border off the karma numbers for the trust indicator to fit nicely.\nI have some minor updates to the CSS which I'll put up later today when it's cleaned it up. As always I'm open to suggestions for changes.\n\n\n(need to give a width to the throbber).\n. I think a new throbber design could be done as a separate issue?\nHere's the updated code: http://jsbin.com/nudaje/4\nI have an incomplete and probably severely flawed version of this (cohesiveHoverInfo) running in RES because I wanted to test myself, that's why the code is formatted the way it is. I don't know if my approach was good or not, it will be cool to see what you do.\nFor the trust indicators, I'll have an update for that in the coming days (have to see how it currently works). Don't wait up, it will only be minimal changes.\n. I think a new throbber design could be done as a separate issue?\nHere's the updated code: http://jsbin.com/nudaje/4\nI have an incomplete and probably severely flawed version of this (cohesiveHoverInfo) running in RES because I wanted to test myself, that's why the code is formatted the way it is. I don't know if my approach was good or not, it will be cool to see what you do.\nFor the trust indicators, I'll have an update for that in the coming days (have to see how it currently works). Don't wait up, it will only be minimal changes.\n. I don't see the need for more than two colors, though I'm not opposed to it. Here's my take on it with the new hoverInfo design:\nFirst as blue:\n\nAlternative as orange-red:\n\nLowest score:\n\nHighest score:\n\nThe bars are 5 pixels wide and 2 pixels high. Each bar is surrounded by a white border which helps it stand out from the background. When the bars are less than 5 pixels wide they could be mistaken for separators, more than 5 and they draw too much attention to themselves.\n. I don't see the need for more than two colors, though I'm not opposed to it. Here's my take on it with the new hoverInfo design:\nFirst as blue:\n\nAlternative as orange-red:\n\nLowest score:\n\nHighest score:\n\nThe bars are 5 pixels wide and 2 pixels high. Each bar is surrounded by a white border which helps it stand out from the background. When the bars are less than 5 pixels wide they could be mistaken for separators, more than 5 and they draw too much attention to themselves.\n. Can't repro in same version of RES and Chrome 40:\n\n. Can't repro in same version of RES and Chrome 40:\n\n. Can't repro in same version of RES and Chrome 40:\n\n. I think this should be reopened because the heading is still black and code elements have a white background.\n. I think this should be reopened because the heading is still black and code elements have a white background.\n. I'd be happy to.\n. No change to appearance or behavior on /reddits and /subreddits because subredditManager deals with that page individually.\n. No change to appearance or behavior on /reddits and /subreddits because subredditManager deals with that page individually.\n. @andytuba,\nI have the code written and ready to go, should I make a pull request and wait for feedback?\nDemo: https://gfycat.com/RipeShadyCrocodileskink\nSettings: \n\n. @andytuba,\nI have the code written and ready to go, should I make a pull request and wait for feedback?\nDemo: https://gfycat.com/RipeShadyCrocodileskink\nSettings: \n\n. I decided to go through and update as many styles as I could, there were so many little things that had to be done.\nOne thing I'm not sure about was removing the unique text colors on domains and timestamps, tell me if they need to be put back in. I thought they were unnecessary, distracting, and created more work for moderators to change.\n. I decided to go through and update as many styles as I could, there were so many little things that had to be done.\nOne thing I'm not sure about was removing the unique text colors on domains and timestamps, tell me if they need to be put back in. I thought they were unnecessary, distracting, and created more work for moderators to change.\n. Forgot to mention that only Chrome/webkit seems to need this fix, Firefox doesn't show the same issue afaik.\n. Forgot to mention that only Chrome/webkit seems to need this fix, Firefox doesn't show the same issue afaik.\n. Update: after more testing I discovered that right floats don't trigger this bug, so I've made a new commit based on new knowledge. I'm very confident that this new commit will solve the issue for good.\nThe test case is also updated.\n. Update: after more testing I discovered that right floats don't trigger this bug, so I've made a new commit based on new knowledge. I'm very confident that this new commit will solve the issue for good.\nThe test case is also updated.\n. I just discovered this isn't exclusive to naut, in fact the same problem has always existed on vanilla reddit when replying to another comment (not root comments). RES was already taking steps to avoid the issue, but it wasn't perfect.\nIt may explain this report.\n. I just discovered this isn't exclusive to naut, in fact the same problem has always existed on vanilla reddit when replying to another comment (not root comments). RES was already taking steps to avoid the issue, but it wasn't perfect.\nIt may explain this report.\n. That CSS causes the beta tooltip to point to the wrong place and the icon still covers up the toggle button. I'd love to rework the CSS for the toolbar, but I'm not sure if it's ok to make some changes that will require certain subreddits to update their CSS.\n. I spoke too soon.\nAll it takes is changing this selector:\n```\nheader-bottom-right #userbarToggle + *\n```\nTo \n```\nheader-bottom-right > .user\n```\n. fixes #2220\n. I'll add the old classes back as a legacy thing, the themes I checked didn't show any issues.\n. Naut is back to normal. I went through a bunch of style-heavy subs and found two that still look different: /r/askreddit and /r/wow. The former can't be helped because it uses inelegant techniques to position the buttons, and the latter just looks bigger than it should because it's forcing the line-height.\nAlso replaced the image URL with a linear-gradient.\n. Is there a better name for the class instead of res-subreddit-button? What about res-fancy-toggle-btn to convey that it's meant to emulate reddit's buttons?\n. Card sorting is a quick and easy exercise for finding ways to categorize items. When I tried it with RES this was my result: \n. \nI started without any groups and just put similar cards in piles, then I started naming the piles based on their common trait. It took about 30 minutes. You can do your own and compare the results to make it better.\nI then made a new RES branch and updated the categories: \nThat's somewhat better I think, but the 'viewing content' category is far too ambiguous, where should modules like 'spam button' and 'table tools' go? Maybe my categories are all wrong, or maybe it just needs a few changes.\n. /r/resupdates?\n. Can't see any problems. Thanks.\n. Yeah I didn't put much thought into the title, Erik is right.\n. Should the advanced option revert to the old version with the small icon in the subreddit bar, or should it disable drag+drop deletion entirely? I should've mentioned that the PR essentially just repositions the existing icon and makes it bigger, because I didn't think anyone would prefer the 16x16 icon over this.\nWhat would you prefer?\n. Tidied up the 'add shortcut' form since it will lead users to the trash bin (when enabled).\n\n. Alternative: take out the option altogether and have it always apply to self text and comments only.\n. TIL I already have Travis installed with Grunt. :$\n. Participants from #2146 may be interested.\n. I can still use J, K, a, and z. Using Chrome here.\n. Thank you, glad you like it.\nEdit: For editing purposes, here are the sprites with their alpha values:\n\n. \nUpdated the UI and refactored the code.\n- Now using templates.html\n- Makes the whole header of each comment a link to the comment.\n- Gets the subreddit name and puts it in the header (is the regex ok?).\n- When you unsave a comment, it keeps the comment until you reload the page, this allows you to recover from a miss-click.\n- Hovering over \"X days ago\" shows a tooltip with the exact date.\n. Currently playing with the toggle button's appearance. Thoughts?\n\n. Fixed in new Chrome update.\n. Each time renderUserInfo() was executed, it was accessing the logged in user's JSON file, this change fixes that. Also added a cache.expire() on 116 because otherwise the cached version would load before loggedInID got defined.\n. Each time renderUserInfo() was executed, it was accessing the logged in user's JSON file, this change fixes that. Also added a cache.expire() on 116 because otherwise the cached version would load before loggedInID got defined.\n. Hopefully it saves a few users having to ask where stuff is.\n. Good find. Should easy to make the CSS more flexible. I'm playing around with it now.\n. TODO: https://redd.it/40t5ja\n. Already fixed in master: https://github.com/githue/Reddit-Enhancement-Suite/commit/1be2357acefe3a72d4c015206de688a7671e9ca4\n. Nightmode should be using the same selectors that reddit uses for code and pre tags, and reddit keeps adding more. As long as this follows the same rules then it should be good.\nIt's difficult to check right now because reddit's servers are failing.\n. :+1: Looks good.\n. Yeah I think so. Even though the code has been rewritten the effective changes are rather minor, i.e. uses outerHeight(true) instead of height(), adds top: to #header, and removes left: 0; right: 0; from #sr-header-bar.\nSomeone will need to test it in Safari on the mentioned subreddits and a handful of others.\n. The strong tags in the table headers are confusing the script, I believe.\n. This can be resolved by moving commentBoxes into its own module. I'm thinking about adding a module called 'Comment Styling', which would include commentBoxes and any other relevant options.\n. This can be resolved by moving commentBoxes into its own module. I'm thinking about adding a module called 'Comment Styling', which would include commentBoxes and any other relevant options.\n. You're right, I hadn't noticed that. However, showImages doesn't look for images in that text, or in the sidebar, or submission guidelines.\n. You're right, I hadn't noticed that. However, showImages doesn't look for images in that text, or in the sidebar, or submission guidelines.\n. Yes.\n. I'm thinking of just making it the same as before, by removing background colors from those particular thumbnails. However I think we can leave the filter used in RES console, where it makes the RES logo darker. Eventually we can replace these hacks with a nightmode-specific sprite sheet.\nEdit: and lower opacity where appropriate.\n. Any particular reason you're using 4.5.4? The recent 4.6 update fixed nightmode for Reddit Live and many other often overlooked parts of Reddit.\n. @allthefoxes had the same issue.\n. Closing because this seems to be more closely related to vote arrows and/or subreddit themes simply needing to update their styles.\n. Yes, I made a PR about this but it has problems. #2424\nThe idea with that PR was: when the module is enabled, make all .md visited links purple. If disabled, only make visited image links purple. The latter is done to make sure a separate option \"markVisited\" works for inline images.\nThe problem is no one's asking for sidebar links to have a visited style, and that PR would 'break' a lot of custom themes, so it's probably better to exclude the sidebar. The other thing is the dirty [name] selector, but why add a visited style for inline images in the first place? Link titles should have a visited style regardless, afaik, and that's probably good enough for most users of markVisited.\n. This will conflict with #2418, which also fixes the dialog's positioning.\n. Nope, it's broken on child comments. It's an issue with commentBoxes and specificity. Kind of a pain to fix without using a hack like this:\n```\n.res-commentBoxes .comment.spam { background-image: linear-gradient(hsl(0,70%,80%), hsl(0,70%,80%)); }\n.res-nightmode.res-commentBoxes .comment.spam { background-image: linear-gradient(hsl(0,30%,30%), hsl(0,30%,30%)); }\n. I think it's always been that way, could be wrong though.\n.\n removing !important would open a can of worms\n like suddenly half of the styled subreddits wouldn't have the zebra striping?\n probably\n some would have background colors appear that they didn't know where there previously\n hm yeah\n I think the background-image hack wouldn't be too bad, because it's only on removed comments\n yeah it seems like a pr good idea\n```\n. @andytuba, I think this can be safely added to /r/resupdates for 4.6.0 only.\n. Ok, updated to use classList.contains.\n. - The option name is a bit long, how about captionsPosition?\n- When the title is below the image, it's also below other text. Only affects non-tumblr links (e.g. /r/diy).\n- I'm thinking the default value should be creditsBelow, because titleAbove moves the caption below which would be a big change for users.\n. Yeah, User Tagger has extra extra CSS that switches the colors from red|blue to blue|red, which nightmode doesn't take into account. I don't think the colors should be switched in the first place, but I can make a nightmode specific fix.\n. \n\n. Interesting idea. The title is currently a normal link that turns black when visited, it starts as blue like the username.\nHere's how it looks in motion.\nGIF: showlinktitle\n. New gif using Erik's idea:\n\n. After using the above version for a few days I decided not to keep it. It felt weird and counter-intuitive with the title text taking you to the top of the page. Instead I brought back the 'to-top' button and removed the 'open link' button, with the title now being a normal link that stays blue (opens in a new tab by default).\n. I found that the new expando style doesn't mesh well with the existing RES icons, the new default glyph is very simple and stylized which doesn't match the RES style. Furthermore, the gray background offers little contrast for the details to show through. When I placed the RES icons in the light gray circles they were difficult to distinguish among their surroundings.\nSince the +/- symbols are gone we can use the entire circle shape and play with negative space, giving each icon a more distinct profile. If you want people to recognize different media types at a glance this is essential.\nHere's my redesign:\n\nAnd here's an animation:\n\nCSS (for testing only): http://pastebin.com/LE3u0pTK\nFurther notes:\n- There's a bug in 4.6.0 where the 'collapsed' class doesn't get removed on first click, I'll make a PR for that shortly.\n- The CSS snippet linked above includes a new method for styling NSFW expandos, it uses mix-blend-mode which can be used in subreddit stylesheets.\n- I'm iffy about making a high-res version because it would break even more themes.\n. The gifv icon could be a closed circle minus the arrow. I thought it might be too cryptic, but it could work.\n. Nightmode version added:\n\n. I suppose we could beat them to the punch with 4.6.2, presuming they don't plan on changing the design.\nEdit: I don't think we can target only selected-for-testing users.\n. If someone could find the new expando-button CSS from reddit.com and paste it all into a pastebin that would be great. I briefly searched the codebase and didn't find anything.\n. I think most people would settle on the toolbar being in the top left so it doesn't move every time they rotate or resize. That keeps the bottom left available for a separate button for closing the expando (so you don't have to scroll up again), it's something that has been requested before.\nAs for the \"drag to resize\" hint (clippy text?), you could copy Chrome's fullscreen behavior where it overlays a message that fades away after a second (1.5s full opacity, 0.5s fade out?).\nThere could also be a cog icon that takes you directly to the relevant settings, but style it the same as the other icons in the name of uniformity.\n. Module.bodyclass boolean makes sense, I just assumed it was already availabe.\n. \n. Agreed.\n. I have two ideas:\n1. Expand the existing RES spritesheet by adding nightmode versions of the expandos. This will be necessary when Reddit updates their icons anyway. Will cause conflict with custom stylesheets.\n2. Reduce the icon opacity further with something like .res-nightmode .expando-button:not(:hover) { opacity: .5; }. It's currently 0.8, which is better than 1.0. (The hover state is hard to read with reduced opacity.)\n. See hotfix-data.\nEdit: https://github.com/Reddit-Enhancement-Suite/hotfix-data/pull/10\n. Thanks for doing these Erik. \ud83d\udc4f \nI'll find some time to get back into things soon.\n. That all sounds fine to me.\n. I would like to see what they're doing with it, because I'm not sure that line will have much effect.\n. PM sent.\n. This was missing a closing span tag.\n. The margin-right stops a horizontal scrollbar from appearing when you open the menu while logged out.\n. Currently the only problem is it throws a CSS warning/error. Another problem which is less likely is that if it does become a standard property then its behaviour could change too, which might cause it to stop working, at least -x- might act as a legacy property.\n. Had to use !important to override reddit's inline style of color:black.\n. We can just replace it with linear-gradient, I don't know why there was an image in the first place.\n. In the screenshot the styles are ordered top-to-bottom in order of highest priority to lowest, it's from DevTools which re-orders selectors for convenience. If you were to look at the raw CSS it should look like:\n.friend {}\n.submitter {}\n.moderator {}\n.admin {}.\nThe if statements should be in that order too. Sorry for the confusion.\n. No need to avoid jQuery, I originally changed it to simplify it for myself, but we can def use jQuery there. I'll make a new PR with the cleaner code, after retesting.\n. Alright, I'll keep it in mind for other things though.\n. Turns out safeHtml() strips out useful classes from the content, like imgScanned, loggedin, etc, affecting styles.\n. JSHint gives a warning when I do that.\n\nExpected a 'break' statement before 'default'.\n. Whoops! Must have had tunnel vision. This.visible should be sufficient, I'll take another look.\n. Ah, I see.\n. Oh that will be nice. It felt a bit dirty modifying properties, but it was the only thing that worked for me.\n. It looks like we may not need either of those def.notify calls in renderAuthorInfo(). Correct? Nothing changes when I remove them.\n. The width won't always be 334, use offsetWidth to get the actual width.\n. Same for the tag icon, instead of '20', try obj.offsetWidth.\n. It would be nice to fix this in the subreddit stylesheet, and remove the inline style.\n. Done.\n. You probably want div.madeVisible or a.madeVisible depending on which one you're targeting.\n. \n",
    "l1am9111": "I have updated it according to the comments. Although I wasn't sure whether I should use .exec or .match because RESUtils.currentSubreddit uses .match when using RESUtils.matchRE.\n. ",
    "dmarklein": "It looks like https://github.com/honestbleeps/Reddit-Enhancement-Suite/commit/81c72a253c3ba5273c259b3b3785e87561ee4d8b fixed this.\n. ",
    "RollingStar": "This would be awesome! Don't neglect it forever! :)\n. ",
    "hermithome": "Why not make it a thread specific feature that's persistent? \nThat is, highlighting only works on the thread in question, but if you return to the thread hours or days later, highlights remain. That's something easy to explain in a bit of hover text.\nAlso, when you return to a thread with highlights a notify box could pop up asking if you want to keep the highlights you were using or erase them all and browse the thread fresh. \n. Also, let me drag in #1131 here. \nCould we do the same here? At least make it so that highlight colour overrides randomly generated username colour with the unique username colour as an outline. \nThough ideally I'd love to see a RES option to user the unique username colour as the highlighter, the way we plan to for OC highlights.\n. > What do you think of just having highlighting text color overriding the user's \"random\" text color?\nSure, that would work. Would be a bit less pretty, but it would have the necessary functionality. But can we do one better, and for OC, have the random colour become the highlighter colour? In some subs, a large number of OCs reply downthread, and having them all coloured the same can be confusing. Why not make it so that when a person is the OC, the random colour becomes the highlight colour and then the username is either in black (for a light random colour) or white (for a dark random colour)?\n. > re: mod/op/admin/etc. highlights - how about using the \"user's random color\" as border color, letting us use normal text color for that highlight   \nThat sounds good (though it'll work better with some colours than others), but the mod and OP highlights will still need to be modified to be more readable. There are just way, way, way too many names that are totally unreadable when highlighted as an OP or mod\n. Ahhh, yeah, that would work great. \n. @andytuba - should this still be open? I thought you said in channel that you had pushed this.\n. @andytuba - should this still be open? I thought you said in channel that you had pushed this.\n. @andytuba - should this still be open? I thought you said in channel that you had pushed this.\n. @andytuba - should this still be open? I thought you said in channel that you had pushed this.\n. Username hider keeps your username from displaying on your screen. This way, if someone looks over your shoulder at work, or if you take a screenshot, your reddit username is not displayed. This only affects your screen. There is no way to post or comment on reddit without your post being linked to the account you made it from.\n@andytuba - that work okay? Once Issue 1139 is resolved, a line of text should be added to address this behaviour.\n. Sweet, thanks. I've submitted a pull request for the expanded description on username hider, including commented out stuff for once #1139 is implemented.\n. Which paragraph? The bit on local saving or the command line bit?\n. Which paragraph? The bit on local saving or the command line bit?\n. I rewrote the whole section and submitted a pull request.  I also reorganised it so it doesn't flip back and forth between explaining RES and reddit. Let me know what you think. \n. I rewrote the whole section and submitted a pull request.  I also reorganised it so it doesn't flip back and forth between explaining RES and reddit. Let me know what you think. \n. First draft on NP wiki text:\nNP or \"no participation\" is a way to help enforce reddit's rules and etiquette on voting. It is against site rules to engage in vote manipulation or brigading.\nVote brigading is what happens when a group of people get together to upvote or downvote the same thing--be it a person, a comment or a group of people representing a dissenting ideology. That doesn't mean you can't link to a post or comment elsewhere on reddit. In fact, there are subreddits which exist solely to link to comments and posts in other subreddits, such as meta subs like /r/ShitRedditSays and /r/SubRedditDrama and promotion subs like /r/BestOf. However, when you post or follow links like this, it's important to respect site rules and reddiquette and avoid voting or commenting. NP mode helps you do that.\nNP links (np.reddit.com instead of www.reddit.com) helps users and mods prevent vote brigading. Many subreddits use custom subreddit styling (CSS) to disable voting on NP links. Reddit Enhancement Suite also provides warnings not to vote or comment when in NP mode.  You can also adjust RES settings to disable voting and commenting entirely when in NP mode, to protect you from accidentally participating.\nIf you do click on an NP link and want to comment, please learn about the community first. Respect that you are an outsider coming into an established community. Many communities offer an introduction, and have rules and guidelines. Read these before attempting to participate. \u00a0\nIf you frequently follow links and vote, or if you frequently post links without using the np prefix, you may find yourself banned or shadowbanned by moderators or the admins. The admins are the last line of defense, so please use NP links to help enforce good behaviour.\n. Yeah, sorry, forgot to give specifics. Firefox 29, Linux Mint 16.\n. also, filter by date and type (assuming RES gets around to adding save-res for submissions)\nand maybe make the username an automatic tag. \n. Sweet. Also, can we add a few fields for most common text fills? Like macros, but specific to ~~flair~~ usertag? with an easy check box?\n. @matheod same deal for me.  I have a quick code I use for MRAs and redpillers and the like. I also use a code for anyone I make an approved submitter. RES is actually pretty good about this already. My most used tags are already in the top of the autocomplete. So personally, I'd really like to see a quick, one click select. We could limit the macos to something like 5 chars. Or only display the first few or something. \nSo I could click \"C-PM\" (meaning the person sent a creepy pm) and red. Or \"MRM\" and pink. With this kind of interface I could tag most people in three or four quick clicks. \n. Oh.., right of course it is. Lol.\n. and in multireddit popup\n. Dashboard can do more in depth functionality, but I think basics like removing and addings subs and changing privacy settings would work well in the sidebar. I'll draw up a design for it.\n. Well I meant on the subreddit sidebar. Though now having discovered /r/subreddits/mine/ that's a great place in include it as well.\n. Hmm, I sort of mentally thought of it as part of the same thing. For me, I go on kicks where I try and set up multis. But then I don't finish them and forget about them. Where, what I should really be doing is creating the multis as a browse. And this would sorta give me a kick reminder :p\n. Toolbox has its own toolbar with these buttons and numbers. One of the things I do is use both the RES-edited reddit toolbar and the toolbox toolbar. I can set the toolbox icons to mod-mybusiestsub, and since the res-edited reddit toolbar reflects overall, the difference between the two tells me what my busiest sub is like.\n. A simple button to choose justification would work no? I mean, you can do all of the different justifications with simple markdown. \n. Hmm, what about on the popup screen where you decide how many rows and \ncolumns you want? That would work well.\n. Yeah, I couldn't find the big editor button, so I just made the box bigger. Still, it should work.\n. Also, reddit can't save PMs.\n. sidebar links, topbar links, userbar links.\nthe point to NP is not participating on that page. not voting, commenting, etc. but past that...not really. you should be able to follow an NP link, click on a sidebar links to follow rules, click to the main sub page and start participating.\nor go to an NP link, click to a related sub, and participate. NP following you is bad behaviour that confuses the NP protocol.\n. Well...to disable or hide?\nIf we could made it so that it simply visually hid res, then command line would be more versatile, because you could easily toggle it off and on.\nThe advantages of the visible toggle, as I see it are twofold: 1- fewer people use the command line, 2- the toggle is highly visible, and therefore publicises the feature. Hiding RES easily is something that a lot of people could use, and I'm guessing that it's one of the less known features.\n. ",
    "nchristus": "Sounds great. Thanks again!\nOn Thu, Apr 17, 2014 at 11:38 AM, honestbleeps notifications@github.comwrote:\n\nawesome! you'll also find that RES should call this a lot less anyhow\nbecause it's no longer (next version) drawing the console until there's\ndemand for it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/952#issuecomment-40734835\n.\n. \n",
    "GantMan": "Well done!  Works great, I'm adding you to my weekly gittip.\n. ",
    "Squarific": "Why would they reject it?\n. I think you mean it fixes https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1358\n. Solves issue: https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1358\n. Previous pull request that only fixed the wrong unloading of big images: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1362\n. How do I recreate it?\nAlso I noticed it flickers when it changed the images probably because of the drawing cycle or something. I'm not sure if that can be fixed.\n. Yea the resizeMedia call should be before changing the width on the original image, I'll make a new pull request.\n. I enjoyed working on it, definitely a project I'm going to try working on in the future.\n. When will these update be available on the website?\n. We could force this on to change once, would that be a good idea?\n. It doesn't break that.\n. Why is this one not merged yet?\n. http://www.reddit.com/r/RESissues/comments/29sygg/bug_scroll_jumping/\n. Tested it with compressed link display and it still works.\n. Oh I forgot to check and now i'm not sure where to find an album with different sizes. I'll try to find one.\n. The problem has been fixed and this can be closed. \n. ",
    "nathanjones": "Here's an example of what it would look like:\n\nThe mods for this subreddit reached out and asked that I add this expando.\n. Here's an example of what it would look like:\n\nThe mods for this subreddit reached out and asked that I add this expando.\n. Thanks honestbleeps!\n. Thanks honestbleeps!\n. I discovered the same issue when working on adding an expando for Clyp (#982). I came up with almost the exact same solution before even noticing this PR. \n. ",
    "phoephus": "This feature would greatly streamline the user experience in the music collaboration subreddits and anywhere redditors share audio of any sort such as text only subs like /r/guitar or in the comments section of subs like /r/audioengineering or /r/wearethemusicmakers where sound clips are often used as part of the discussion.\nThank You!\n. ",
    "azatoth": "Well, even when I cycled the toggle so it was \"on\" again, and the subreddit style was shown; after reload, it shown the default instead, and having to retoggle it again (uncheck - check the box)\n. ",
    "ohjames": "For the screen reader the people I know use... onclick handlers become \"clickable\" for them when they are applied to a \"button\" or \"a\" element. So not on UL/LI elements etc. You can probably overcome that either with aria or just by wrapping the elements in an anchor (and using \"a $element { outline: 0 }\" to disable the styling on such $element-s).\nThat alone would solve about 70% of the problems I see people having with websites/RES.\n. For the screen reader the people I know use... onclick handlers become \"clickable\" for them when they are applied to a \"button\" or \"a\" element. So not on UL/LI elements etc. You can probably overcome that either with aria or just by wrapping the elements in an anchor (and using \"a $element { outline: 0 }\" to disable the styling on such $element-s).\nThat alone would solve about 70% of the problems I see people having with websites/RES.\n. ",
    "roshkins": "@erikdesjardins Can you post the items you need me to do to have the i18n script working? I lost it in IRC chat.. doing:\n  showImages.js\n  showKarma.js\n * showParent.js. It's in the utils folder, if you didn't notice.. woo!. thanks!. Thanks for the canonicalization !. ok!. Yes I can. I did that to make debugging easier.. ",
    "agentlame": "\nHowever, the cure can be worse than the disease:\n\nWould it be possible to hide any elements that animate at the same time?  Chances are the would be just as annoying.  For example, the clippy on http://www.reddit.com/r/behindthegifs animates and is also useless.\n. @andytuba In your screenshot you noted the the fix might be worse.  However, if the elements that were animated (in this case, the clouds) were also hidden, it would be an ideal solution.  Same thing with my clippy example, the animation and image don't really serve a purpose.\nI suppose a sub-setting to just hide animations rather than stop them might be a better way of explaining it.\n. That makes sense, I guess hiding the elements entirely wouldn't work.  Just stoping stuff from animating would be improvement enough.\n. > but should it really be an option?\nI don't think so... but as a fellow dev, I understand how \"listen, change 'x' as I say\" comes off.  So it's always best to ask nicely. My opinion is it just should be a dropdown matching 'sort by'... but that is my opinion... not that of the RES team.\n. > Implementation wise, how about overriding the button image on .over18 .expando-button and skip the JavaScript?\nDo you mean just the determination code in createImageExpando()?  Because you'd still need some JS to make it an optional feature.\n. Not to knock anyone's work, but I'm not sure those stand out enough to have the desired effect.  Still, glad it made it in!\n. <3\n. <3\n. ",
    "davidmz": "Hi, I'm the author of apng-chrome. I would like to help, but unfortunately I don't know what exactly doing RES.\nThat's what apng-chrome doing on Reddit after the page loads:\n1. Looks for linked styles from *.thumbs.redditmedia.com domains\n2. Downloads them and inserts into the page using STYLE tags\n3. Replaces the style's APNG images to animated canvases\n4. Removes links to external styles \nAll this is done because the styles from other domains are not available from within a document, so I have to embed them in the document itself.\nAt what point this algorithm can interfere with RES?\n. ",
    "mpalermo": "@andytuba I've removed the unnecessary option.  Thanks for the feedback!\n. Thanks for that last bit of QA.  Those URL's live on some older infrastructure that we didn't account for.  We've made a commit to account for them.  Would you like a second pull request or can you merge the change in from here?\n. Just for reference, here's the related second pull request.  Thanks again!\n. ",
    "ivanatpr": "Timestamp searches seems like a good pain point for RES to address. This is a feature of reddit search that's virtually inaccessible to the average user. I doubt even the average reddit poweruser knows it exists.\nRight now, in order to do a timestamp-based search you need to change your search query to use Lucene/cloudsearch's obscure syntax, convert whatever dates you're searching for into UNIX-style epoch timestamps, and manually add \"&syntax=cloudsearch\" to the search page's URL. This makes for a painful experience and is well beyond the capability of non-technical users. \n. ",
    "albino1": "+1\nHaving tried to do this manually several times, and getting frustrated with the conversions and system, I would gladly welcome this addition to RES.  The fact that it doesn't exist in reddit proper still blows my mind.\n. ",
    "jvtrigueros": "Calculating your cake day is actually very complex!\n\nThe trouble is your cakeday is actually a fairly complex thing. If I remember rightly what /u/deimorz\n  said is \n  First take your account creation date stamp and change the year to the current year. Then add 7 days to that. That 7 day period is your cake day eligibility period.\n  The first time you have activity (and I'm not sure if that can mean just looking at pages when logged in or if it means voting or posting) that triggers the start of your cake day, which lasts 24 hours.\n\nIt was mentioned that if you stick to the \"true\" cake day meaning that if you just calculate the cake day based on created_utc, it should make it a lot easier. So maybe we could start with that?\n. The only problem with #2835 specifically is that the Konami module doesn't set notificationID or moduleID, thus when the PR above creates a class for that notification, we end up with an invalid class name.\nShould we expect the module to change to provide a proper moduleID and notificationID?\n. Ah, ok that makes sense. I'll take a stab at solving this problem. Do you have a use case that I can test with? I'm not sure what other actions are being interrupted by the konami code.\n. Yes, I see the issue now. I've resurrected the old local konami code and added these changes. I have questions a specific line. Follow up incoming.\n. @andytuba, so here's the line in question. This is line cancels the almostThere after a short period of time. While this is nice, I believe it should also reset the input. Otherwise, if I enter all of the Konami sequence save for the last character, and I go browse reddit and then press the last char, A, the login menu pops up. What do you say?\n. That's what it was feeling like. If I get both of your blessings then I shall proceed with this.\n. ",
    "13steinj": "I don't believe it has to be calculated-- the cake symbol has it's own unique class so an onclick event can be added, which then just sets a key to the storage saying \"user already celebrated his birthday, expire this key in 7 days from Date() whenever checking the user page\".\n. @andytuba for profile pages, yes. For mod pages, not that I know of (I don't see anything that does this in master nor release/4.6.1). I thought that there was a PR for it (or one that includes it); but I can't seem to find it atm\n. You may wanna wait, since supposedly /u/madlee may change some more things regarding voting, that could potentially even break this fix, who knows.\n. Yup. It should be safe when the voting js changes get pushed to the repo though.\n. @erikdesjardins It should be safe, though you may wanna double check.\n. May wanna post on /r/resissues\n. May wanna post on /r/resissues\n. Also maybe add \"you may be looking for r/companion instead'\n. Also maybe add \"you may be looking for r/companion instead'\n. @mc10 Extremely stupid question: can I build on Linux and transfer it over to Windows no problem?\n. @mc10 Extremely stupid question: can I build on Linux and transfer it over to Windows no problem?\n. That info isn't...well easily available.\nFirstly, log in info is admin only. So you'd have to mean last post / comment.\nSecondly, last comment / post is not stored in the info from the current api call (ex https://www.reddit.com/user/13steinj/about.json) so a second one would have to be made to the actual profile page. I've personally have no idea how RES is doing in terms of following rate limits well, but if they are doing it even close to decently the info hover can take as much as twice the amount of normal time if it isn't being currently held in RES's cache.\n. That info isn't...well easily available.\nFirstly, log in info is admin only. So you'd have to mean last post / comment.\nSecondly, last comment / post is not stored in the info from the current api call (ex https://www.reddit.com/user/13steinj/about.json) so a second one would have to be made to the actual profile page. I've personally have no idea how RES is doing in terms of following rate limits well, but if they are doing it even close to decently the info hover can take as much as twice the amount of normal time if it isn't being currently held in RES's cache.\n. Just to chime in: Can't there be links via the descriptions? E.g. https://www.reddit.com/subreddits/search?q=13steinj (third from the bottom as of typing)\n. Just to chime in: Can't there be links via the descriptions? E.g. https://www.reddit.com/subreddits/search?q=13steinj (third from the bottom as of typing)\n. Oh, never mind then. Just assumed it looked everywhere without actually checking the source.\n. Oh, never mind then. Just assumed it looked everywhere without actually checking the source.\n. Question that I asked someone else on /r/Enhancement:\n1. Have you tried restarting your computer? Yes, as stupid as that sounds.\n2. Next time this happens, can you please right click the page, press inspect, navigate to the console, refresh the page, and see if any errors occur in the console?\n. May wanna check /r/mod and /r/contrib. They're \"special\" multireddits; but I doubt filtering from those would be intentional. (If it happens currently; didn't have the chance to check)\n. Not really part of the project team, but IMO it shouldn't be it's own module, since it can't really be expanded upon greatly. I'd say add it to the \"Appearance\" (betteReddit) module.\n. Just to put this out there: https://github.com/denizdogan/Reddit-Enhancement-Suite/compare/issue-2497...13steinj:2664\nJust because I don't see the reasoning of opening relative comment url fragments in a new tab since only one meaningful one exists (#content), and it kinda goes against common sense to do so.\nE: I made a mistake; there are more meaningful ones than just #content, such as comment ids.\nAlso fixes the regression linked in the commit.\n. The comma should be outside the , not inside it (unless I misunderstand my grammar rules).\n. Ah, never mind me then.\n. Equivalency checks to true aren't necessary, since it can only betrueorfalse, and false wouldn't trigger it. A simpleif (module.options.showSubscribeButton.value)would do.\n. This seems to be leftovers from the other PR\n. Also, I don't remember what javascript's default return value is, but I think this would break L170-L179 since I doubt Jquery's.appendsupports it. May want to do the boolean check there (and come to think of it, the check is incorrect, it should be!module.options.showSubscribeButton.value`, since you want it to not had the button if it's false)\n. @jkcchan \nJust remove the boolean check. A body class is added to the page automatically when options are on. So you just remove the oolean check and add the following to the scss file.\n.res-betteReddit-truncateLongLinks {\n    .link .title {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: no-wrap;\n    }\n}\n. whoops, my bad!\n. +1, but I fell as if this can be done better. Reloading is not very user friendly in some cases\nJust as some psuedocode:\n} else {\n    this.setAttribute('title', 'click to reveal score');\n    $(this).click(function(e) {\n        var thing = $(this).parent().parent().parent();\n        var things = [thing];\n        $.merge(things, thing.find('thing'));\n        var ids = l.map(i => l[i].id.replace('thing_t1_', '').replace('thing_t3_', ''));\n        var mappedthings = {};\n        $.each(ids, function(index, val){mappedthings[val] = $(things[index]).find('>.entry .score-hidden')});\n        var newscoredata = //request data from thing's permalink .json\n    });\n}\nAnd using that data update all possible hidden score spans. I'm on mobile so that was a tad lazy and possible full of mistakes.\n. ",
    "jimmyhchan": "or bump to jquery 1.11/2.1 where they removed this \"feature\".  Side note: Any reason not to use jQuery 2.1. There's no need to support IE<9.\n. ",
    "superlime": "+1.  I find about 90% of the time I want \"new\" rather than \"relevance\".  Would love this option.  :). +1.  I find about 90% of the time I want \"new\" rather than \"relevance\".  Would love this option.  :). ",
    "k-y": "+1 I've always wanted to be able to set the defaults for both Sort (New) and Time (This Month) and ideally, have prefs on a per-subreddit basis.. ",
    "sgtfrankieboy": "Looks like all the problems are fixed now.\nEdit: Found another bug. You can't close the video player.\n. Everything should be working fine now. I can't find any problems myself.\n. No problem :)\n1) I don't think that's a good idea, some videos have loud audio.\n2) That could be possible, not exactly sure how though.\n. I've looked into question 2 further and discovered that it depends on the browsers impelementation.\nOn Chrome you can't click the video itself to play/pause but you can in Firefox. \n. I've read through the Microsoft Service Agreement (It was very fun to read...)\nAnd this section sticks out:\n\n7.3. Are there things I can't do with the software or Services? Yes. In addition to the other restrictions in this Agreement, _you may not circumvent or bypass any technological protection measures in or relating to the software or Services or disassemble, decompile, or reverse engineer any software or other aspect of the Services that's included in or accessible through the Services, except and only to the extent that the applicable copyright law expressly permits doing so; separate components of the software or Services for use on different devices; publish, copy, rent, lease, or lend the software or the Services; or transfer the software, any software licenses, or any rights to access or use the Services. You may not use the Services in any unauthorized way that could interfere with anyone else\u2019s use of them or gain access to any service, data, account, or network. _You may not enable access to the Services by unauthorized third-party applications.\n\nSeems like it isn't allowed according to that. Unless we just implement it and remove it if Microsoft starts to complain (which I doubt they will).\n. @honestbleeps That might work, but I doubt Major Nelson has any influence over things related to OneDrive because he works at the Xbox department.\nEdit: Should I send him a PM anyways or will you send one?\n. Yea, the primary use of OneDrive is sharing Xbox One clips. Not supporting it will also bring some problems with the native mp4 implementation because the urls end with .mp4.\nI will send him a PM asking about it.  (or you, since you're the owner of RES)\n. Is this PM sufficient?\n\nHey Larry,\nA Reddit extension called RES would like to inline support for OneDrive videos/images, similar to what you see with YouTube and Imgur links. Currently OneDrive is used a lot for sharing Xbox One Gameclips on Reddit and this addition will help a lot of users.\nBut for this we require permission from Microsoft to make an API request to the OneDrive service which isn't officially documented thus not allowed to be used by third-party applications.\nDo you know who we can talk to / ask for this permission? So we can improve the experience of RES users.\nGreetings,\nFrank\n. Got a reply from Major Nelson:\nHi Frank,\nGreat question. Can you send me an email request and I can work on this?\nMajor at Xbox.com\nLarry\nPS I love RES :)\n\nJust send him an email.\n. I'm not sure if I should put the actual .ogg file under the video player or audio player because it's mainly used for audio playback but it also supports video playback.\n. Whatever it was, I fixed it by deleting the repository and pulling it again.\n. It seems that Visual Studio 2015 has a problem with saving the file because after editing it with VS2015 the file is cut off but when I edit it with VS2013 it works just fine.\n. Any Feedback?\n. > utilities.space. That's a pretty cool domain name. Do we have to worry about making sure the site stays alive?\nNo, It's running on Azure so if it goes down... OneDrive would probably be having issues too. If I decide to take it down, I will make sure to make a pull request to disable support.\n\nWe'll need to pause video on toggled close.. let's see, how did we solve that with other video players?\n\nWeird, It  paused for me when I closed it.\n\n@sgtfrankieboy, would you mind rounding up a few example posts for me to test on?\n\nI only really used the links in the two domain urls I posted. I will create a few test posts when I get back.\n. @andytuba, @honestbleeps any feedback on the pull request? It would be best if OneDrive support can be handled without external APIs.\n@erikdesjardins Not sure how cherry-pick works. Might be easier to wait on the Instragram expando.\n. Could one of the contributes look into this? I need to shutdown the service the current version is using before 3 September.\n. I've rebased onto master and the conflicts are fixed.\n. Should be lint free now. Removed all the spaces between function (... and moved the brackets to the proper line.\n. Any update on this pull request?\n. The service its currently using will be going offline on the 10th.\n. @erikdesjardins No need for an API.\nAn oddshot link looks like this:\nhttp://oddshot.tv/shot/esl_csgo_1573_201507021602404103\nThe video link looks like this:\nhttps://s3.eu-central-1.amazonaws.com/oddshot/capture/esl_csgo_1573_201507021602404103.shot.mp4\nSo you can do https?://oddshot.tv/shot/(.*)\nVideo: https://s3.eu-central-1.amazonaws.com/oddshot/capture/$1.shot.mp4\nPoster: https://s3.eu-central-1.amazonaws.com/oddshot/thumbs/$1.shot.thumb.jpg\nShouldn't take long to implement, trying to get a pull request done within the hour.\n. It will show the video player but the video won't load. (In Opera)\nIt could be possible to implement a detection system so it will only show the inline video player if the browser supports the file format. Maybe even add text behind the video saying [Unsupported File Format] for the videos the browser doesn't support like RES does with duplicate images.\n. Shall I try and figure out a way to do the detection system then? I think it would work fine using the canPlayType function and only show the inline video player when it returns probably or maybe.\nAnd yes, the pomf.se links are direct links.\n. I just used the same width YouTube uses. \nCertain videos are pretty wide and when opening it you have to scroll down to see the video controls\n. Whoops. Thought I removed all of them.\n. Where can I get the user's set dimension?\nDrag to resize works, partially. When dragging it will overlap the content below. Example\n. The URI endpoint does not support CORS.\nJust switched it over to optional_permissions but now it's failing at CORS.\n. ",
    "j0be": "I stated this in the thread, but the RSS idea is actually a good way of bypassing the the account switching.\nI've never added anything code wise to RES, but I already do a fair amount of work using BitBucket. Do you all have a procedure already in place on how you generally work on these things? This issue seems fun to me to work on.\n. Cool. Let me do some poking at what the technical limitations of this would be.\n. Now that reddit supports site wide https, we could gather and store the information from any page on reddit, so long as the page is https. \nNow, changing your password on an account does modify your private feed hash value, thus rendering a stored value unusable. When this happens it is detectable though (only in the rss feed, not the JSON feed), because it includes a redirect url in the data returned to the feed. (So we could prompt them to relogin to the account to grab the data again).\n. ",
    "jeffzemla": "one cheap hack would be to keep track of all posts made by any account within the last 24-48 hours. by keeping a list of these, you could periodically check them for replies without switching accounts. this wouldn't catch everything, but it would catch most.\nalternatively, a stripped down version of this feature could display the message counter as of when you were last logged in, for cases in which you don't clear your inbox.\n. It's just a handful of post ids. I realize this is not a very good\nsolution, but I don't think storage is really a concern.\nOn Fri, Apr 24, 2015 at 8:17 AM, Eric notifications@github.com wrote:\n\nrack of all posts made by any account within the last 24-48 hours.\nMuh Storage Usage [image: :fearful:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1428#issuecomment-95914918\n.\n. I don't believe there are usage limits for embedding maps.\nThere are no usage limits for the Maps Embed API. You can embed maps or Street View panoramas on your high-traffic websites without fear of hitting a usage cap or query-per-second throttling.\n\nhttps://developers.google.com/maps/documentation/embed/guide\nThere are other variants that do have usage limits, but they are not applicable here.\n. ",
    "TheLQ": "How about saving the cookies of each user? Then there isn't really too much overhead.\n. Yes it does, the expiration date is one hour and reloads show it hitting the cache. But to me it seems to happen more often than that.\nFirefox 48.0\n. Yes it does, the expiration date is one hour and reloads show it hitting the cache. But to me it seems to happen more often than that.\nFirefox 48.0\n. ",
    "jsayol": "Just letting you guys know that I'm working on a possible solution to this. I'll keep you posted.\n. I've been giving a lot of thought to this. Here are some considerations:\n- Feeds are enabled for everyone (even brand-new accounts, just checked) plus there's no way to disable/enable them. That simplifies this quite a bit as RES doesn't need to change any account settings to make this work.\n- A feed id is no different than a password, so storing it in RES should not be a problem.\nTaking that into account, here's the solution I'm going to implement (unless someone can give some strong reasons to do things differently):\n- This functionality will be enabled by default, with a switch to disable it in the settings.\n- Any new account added to RES will have this enabled, unless the user chooses otherwise when adding it.\n- Any existing account in RES will have this disabled by default. This will prevent RES from accessing any account in situations where the user might not want to leave a trace (like accessing the user's nsfw account when they're at work, thus leaving an entry in the office server's logs... not good. Why would anyone add such an account to their workplace computer in the first place if they never plan on accessing it from there, though? Probably no one would, but better safe than sorry).\n- Whenever a user logs into an account defined in the account switcher that has this feature enabled, RES will check if it has the feed URL for it. If not, it will grab it.\n- Add 3 new fields to the account switcher settings table:\n  - \"switch\" field to enable/disable this feature for that account.\n  - \"button\" field to get/refresh the feed URL for that account.\n  - \"hidden\" field (new type) to store the feed URL.\n- Clicking the get/refresh button will temporarily log the user into that account, get the feed URL, and switch back to the original account. We don't want the user doing ANYTHING while this is going on (shouldn't take longer than 3 or 4 seconds) so we will add an overlay over the whole page preventing the user from performing any action. This overlay will have a short message explaining what is going on, something like: \"Obtaining access to the account. Just a moment, please...\"\n- To make sure we properly deal with situations where the user has lots of accounts defined in the switcher, the procedure to check for unread messages will be as follows:\n  - Instead of making AJAX requests straight away, add the account to a queue (unless it's already in it).\n  - Take an account from the top of the queue and make the request. Do this every 5 seconds (from the moment the previous request finishes) until the queue is empty.\n  - When the queue is empty, add all the accounts with this feature enabled to the queue. Wait 5 seconds, start processing it again.\n  - Skip any account that has already been checked in the last 60 seconds, and move it to the bottom of the queue (we still want to check it, not just yet).\n  - Skip the account for the currently logged-in user. You already have the notification up there, so this saves an unnecessary AJAX request.\n  - Both the queue and the \"last time checked\" values are stored in memory, not in the persistent storage, so they reset any time the page reloads. This is done mostly to keep things simple.\n- If a feed URL returns anything other than what we expect (probably because the user changed the password) we remove it from the settings. We obtain it again the next time the user logs into that account or clicks the relevant button in the settings (after updating the password for it).\nI'm not going to start working on it just yet, I'll wait a couple of days to see if there are any comments or suggestions. Let me know what you think.\n. I just realized something:\n\nClicking the get/refresh button will temporarily log the user into that account, get the feed URL, and switch back to the original account.\n\nThat will only work in the original account is one of those defined in the account switcher and has an up-to-date password. Otherwise we won't be able to return to that account and will leave the user logged out. Any ideas?\n. I haven't had much time lately for this but I'll get to it soon. Any ideas or comments?\n. I couldn't reproduce it either ~~but the likely culprit seems to be the quickMessage module. It's the only place where the templates are accessed synchronously (calling RESTemplates.getSync() instead of RESTemplates.load() with callback). In some fringe cases the templates might not be loaded yet when this module initializes.~~\nEdit: brainfart, don't mind me. But I'm still looking into it.\n. I couldn't reproduce it either ~~but the likely culprit seems to be the quickMessage module. It's the only place where the templates are accessed synchronously (calling RESTemplates.getSync() instead of RESTemplates.load() with callback). In some fringe cases the templates might not be loaded yet when this module initializes.~~\nEdit: brainfart, don't mind me. But I'm still looking into it.\n. This happens when the subreddit name coincides with a function in Array.prototype. I did some testing and you can see the same behaviour with subreddits like map or sort.\nThe fix is easy: instead of using object[element] here to check if an element exists, just use object.hasOwnProperty(element).\nI'm creating the pull request now.\n. This happens when the subreddit name coincides with a function in Array.prototype. I did some testing and you can see the same behaviour with subreddits like map or sort.\nThe fix is easy: instead of using object[element] here to check if an element exists, just use object.hasOwnProperty(element).\nI'm creating the pull request now.\n. ",
    "bluelightzero": "is there not a way for RES to have it's own private session/cookies so it can log in and do account actions without affecting your current browser session? In the same way a stand-alone app might connect through http api.\nSeems it would solve pretty much all the problems with . ",
    "jspenguin": "That commit is in the history of the version I tested, so it does not fix the issue. In fact, I am fully up-to-date with the master branch as of this writing.\n. That commit is in the history of the version I tested, so it does not fix the issue. In fact, I am fully up-to-date with the master branch as of this writing.\n. It doesn't seem to happen anymore on the main page or in subreddits, but it happens when converted gifs are expanded in comments: \nhttp://i.imgur.com/r8FEPhS.png\nhttp://www.reddit.com/r/funny/comments/2a1ytx/angry_dogs_kept_apart_by_a_fence/ciqsmsk?context=1\nThere's no placeholder there.\n. It doesn't seem to happen anymore on the main page or in subreddits, but it happens when converted gifs are expanded in comments: \nhttp://i.imgur.com/r8FEPhS.png\nhttp://www.reddit.com/r/funny/comments/2a1ytx/angry_dogs_kept_apart_by_a_fence/ciqsmsk?context=1\nThere's no placeholder there.\n. Yes, it's Firefox 30.0 on Linux. I have a crapload of extensions though; If I have time I'll try to go through and see if there are any conflicts.\nHere is a screenshot of the DOM showing no placeholder present: http://i.imgur.com/IJGrgUJ.png\n. Yes, it's Firefox 30.0 on Linux. I have a crapload of extensions though; If I have time I'll try to go through and see if there are any conflicts.\nHere is a screenshot of the DOM showing no placeholder present: http://i.imgur.com/IJGrgUJ.png\n. No, it's on. Here is the RESoptions section of my store.json: https://gist.github.com/jspenguin/511898651729787e2caf\n. No, it's on. Here is the RESoptions section of my store.json: https://gist.github.com/jspenguin/511898651729787e2caf\n. On further investigation, opening the Network inspector, it appears that RES is rewriting the gifv extension to webm: https://i.imgur.com/hXkpWiu.webm; Imgur serves an mp4 encoded with H.264 instead of a webm; RES then tries to fall back to https://i.imgur.com/hXkpWiu.gif, which redirects to http://i.imgur.com/removed.png.\nIs there any way to redirect these through Gfycat, which always uses webm (like the gif -> gfycat option)?\n. That's what I'm investigating now. I heard it could use gstreamer, which I have installed.\n. I finally figured out what went wrong. Essentially, Firefox uses gstreamer to support H264 on Linux. I verified that gstreamer was installed, and that it could play H264 files. According to https://bugzilla.mozilla.org/show_bug.cgi?id=806917, Firefox is supposed to use GStreamer 1.0 starting with version 30, but poking around in a debugger shows that it was still using version 0.10, which is deprecated and had ffmpeg support removed in Ubuntu 14.04. I managed to find a package to add support back, and it works now.\nI still think the issue should be raised with Imgur, so they can support both h264 and webm, depending on what the browser supports.\n. ",
    "samuelrey": "Hello!\nI'm looking to make my first contribution to RES. Has anybody started work on this?. ",
    "Monotoko": "I was thinking it might be easier to do a check against the URL. Just check that restrict_sr=on isn't there, rather than do it through regex which may break again at some point.\nLet me know if you'd rather me recode it that way.\n. I was thinking it might be easier to do a check against the URL. Just check that restrict_sr=on isn't there, rather than do it through regex which may break again at some point.\nLet me know if you'd rather me recode it that way.\n. I was thinking it might be easier to do a check against the URL. Just check that restrict_sr=on isn't there, rather than do it through regex which may break again at some point.\nLet me know if you'd rather me recode it that way.\n. Don't get me wrong, it's very minor. However:\n1: Because this (http://www.reddit.com/r/networking+sysadmin/search?q=UDP+joke) is a valid search URL and the box saying \"limit my search to /r/networking+sysadmin\" shouldn't be ticked by default when you click it, as it isn't doing that behavior. \n2: When we do a search, that may be the case. But if someone links to something like the following, it goes wrong: http://www.reddit.com/r/networking+sysadmin/search?q=UDP+joke - linked from here: http://www.reddit.com/r/sysadmin/comments/2admxw/can_i_tell_you_a_udp_joke/citzyjf\n3: Curated multireddits work because there isn't a +. However a search like above checks the box if you click someone's link on Reddit.\n. Don't get me wrong, it's very minor. However:\n1: Because this (http://www.reddit.com/r/networking+sysadmin/search?q=UDP+joke) is a valid search URL and the box saying \"limit my search to /r/networking+sysadmin\" shouldn't be ticked by default when you click it, as it isn't doing that behavior. \n2: When we do a search, that may be the case. But if someone links to something like the following, it goes wrong: http://www.reddit.com/r/networking+sysadmin/search?q=UDP+joke - linked from here: http://www.reddit.com/r/sysadmin/comments/2admxw/can_i_tell_you_a_udp_joke/citzyjf\n3: Curated multireddits work because there isn't a +. However a search like above checks the box if you click someone's link on Reddit.\n. Don't get me wrong, it's very minor. However:\n1: Because this (http://www.reddit.com/r/networking+sysadmin/search?q=UDP+joke) is a valid search URL and the box saying \"limit my search to /r/networking+sysadmin\" shouldn't be ticked by default when you click it, as it isn't doing that behavior. \n2: When we do a search, that may be the case. But if someone links to something like the following, it goes wrong: http://www.reddit.com/r/networking+sysadmin/search?q=UDP+joke - linked from here: http://www.reddit.com/r/sysadmin/comments/2admxw/can_i_tell_you_a_udp_joke/citzyjf\n3: Curated multireddits work because there isn't a +. However a search like above checks the box if you click someone's link on Reddit.\n. Hi! I think it's a good idea and will get on it when I can (in the next few days) so we can merge this one. Sorry for the late response, I've had a fair amount going on in real life this week.\n. ",
    "Poonaka": "I'm seeing this with 4.5.4 and the latest El Capitan beta 15A226f.\n. ",
    "dschu012": "There are some pretty simple jQuery examples that allow basic table sorting. Something like this I think would work well.\nhttp://jsfiddle.net/Zhd2X/20/\n. There are some pretty simple jQuery examples that allow basic table sorting. Something like this I think would work well.\nhttp://jsfiddle.net/Zhd2X/20/\n. Thanks for the comments. I'll go ahead and make the changes you suggested. I was planning on adding css, but I didn't know where usable icons were on this project and realized I liked the sorting without any styling.\n. ",
    "opennota": "@gavin19 Wow, thanks!\n. ",
    "Melraidin": "No, links to 500px photo pages aren't being handled here (yet). These already link to a page providing attribution for the photographer. In the future we might be able to make these render inline in a satisfying way but for now I wanted to ensure users of RES could find the page the photographer had originally intended to host their art.\n. No problem with the questions, I'm happy to see how this works. Hope to have some more additions in the near future.\n. Nice, thanks @erikdesjardins.\n. Without having 500px in the reject regex I was finding that the default module was being chosen for 500px images. I have a feeling I'm misunderstanding the intended behaviour here?\n. People link directly to images on the 500px CDN but we still want to pick up these images in the 500px module. This allows us to set the credits property to point back to the original image's page on 500px. Without having 500px in the reject list these links are caught by the default module and so we don't get a chance to set credits.\nThis can be seen in Flickr's case with the top two results here: http://www.reddit.com/search?q=site%3Aflickr.com&sort=relevance&t=all\nThe first is a link that doesn't get caught by the default module, causing attribution to appear in RES:\nhttp://www.flickr.com/photos/thekog/6886709962/sizes/l/in/set-72157629710255725/\nThe second does get caught by the default renderer and so the Flickr module doesn't have a chance to add attribution:\nhttp://farm3.static.flickr.com/2648/4018097501_f89ae5e8ca_b.jpg\n. ",
    "mikerp": "Windows (mumble)\nFirefox 31.0\nRES v4.5.0.2\nI believe the bug may be in the implementation of UI > Inline Image Viewer > conserveMemory\nI can consistently reproduce this error by loading a page, clicking \"view images\", and then scrolling down the page (perhaps enough to trigger the \"buffer screens\" setting (default is 2)). This extensive scrolling gets me to a state where I can get the error to occur. Once in this state, the error occurs in every gallery on the page, regardless of location, and immediately when any scroll event occurs.\nThe events which trigger the error include:\nscroll via arrow keys on keyboard\nscroll via arrows on scrollbar\nscroll via slider on scrollbar\npage up\npage down\nThe error only occurs when a scroll actually occurs. For example, when the screen is in the home position, neither pressing the up arrow or page up on the keyboard nor clicking the up arrow on the scroll bar causes the error. Any downward scroll event immediately causes the error to occur.\nOthers have reported that the error results in a return to a \"random\" image in the gallery. I'm pretty certain that the image which is returned to is determined by which image is being displayed when the state in which the error can occur is entered. i.e., If I load the page, click \"view images\" and then scroll all the way to the bottom and back to the top to get into the state where the error occurs, invoking the error will result in the album's first image to be redisplayed.\nIf, however, I load the page, click \"view images\", navigate to the fifth image in the gallery, and then scroll down to the bottom of the page and back up, the fifth image is the one which is displayed every time the error occurs. (note: I'm using my \"saved\" page for testing, and have populated it with several posts containing imgur galleries so my tests are running against (fairly) static pages.)\nIf I turn off conserveMemory, reload the page, and try to reproduce the error, I have so far been unsuccessful.\nIf you're not able to reproduce this yourself and would like me to try something, let me know.\n. I still have the problem, and it behaves the same as I indicated in my previous post.\nRES: v4.5.2\nFirefox 33.0.2\nBuilt from https://hg.mozilla.org/releases/mozilla-release/rev/7dc4a9d1b3e6\nBuild platform\n  target\n  i686-pc-mingw32\nall other addons you run:\nAdblock Plus    2.6.5   true    {d10d0bf8-f5b5-c8b4-a8b2-2b9879e08c5d}\nClassic Theme Restorer  1.2.5   true    ClassicThemeRestorer@ArisT2Noia4dev\nCookies Manager+    1.5.2   true    {bb6bc1bb-f824-4702-90cd-35e2fb24f25d}\nEventBug    0.1b10  true    eventbug@getfirebug.com\nFirebug 2.0.4   true    firebug@software.joehewitt.com\nImage Zoom  0.6.3   true    {1A2D0EC4-75F5-4c91-89C4-3656F6E44B68}\nJavaScript Deobfuscator 1.6.4   true    jsdeobfuscator@adblockplus.org\nLive HTTP headers   0.17    true    {8f8fe09b-0bd3-4470-bc1b-8cad42b8203a}\nModPlugin   1.0.1159    true    {31d88f70-c791-42d8-8187-faaf71d42f67}\nNoScript    2.6.9.3 true    {73a6fe31-595d-460b-a920-fcc0f8843232}\nPassword Exporter   1.2.1   true    {B17C1C5A-04B1-11DB-9804-B622A1EF5492}\nReddit Enhancement Suite    4.5.2   true    jid1-xUfzOsOFlzSOXg@jetpack\nRememberPass    1.1.2   true    rememberpass@teesoft.info\nNOTE: I disabled all other addons and restarted firefox. It did not help.\nImportant Modified Preferences\nName    Value \naccessibility.typeaheadfind.flashBar    0\nbrowser.cache.disk.capacity 358400\nbrowser.cache.disk.smart_size_cached_value  665600\nbrowser.cache.disk.smart_size.first_run false\nbrowser.cache.frecency_experiment   3\nbrowser.fixup.alternate.enabled false\nbrowser.history_expire_days.mirror  180\nbrowser.places.importBookmarksHTML  false\nbrowser.places.importDefaults   false\nbrowser.places.leftPaneFolderId -1\nbrowser.places.migratePostDataAnnotations   false\nbrowser.places.smartBookmarksVersion    7\nbrowser.places.updateRecentTagsUri  false\nbrowser.privatebrowsing.dont_prompt_on_enter    true\nbrowser.search.suggest.enabled  false\nbrowser.search.update   false\nbrowser.search.useDBForOrder    true\nbrowser.sessionstore.upgradeBackup.latestBuildID    20141027150301\nbrowser.startup.homepage    https://www.google.com/calendar/b/0/render?pli=1\nbrowser.startup.homepage_override.buildID   20141027150301\nbrowser.startup.homepage_override.mstone    33.0.2\nbrowser.tabs.drawInTitlebar false\nbrowser.tabs.insertRelatedAfterCurrent  false\nbrowser.tabs.loadInBackground   false\nbrowser.tabs.onTop  false\nbrowser.tabs.warnOnClose    false\nbrowser.tabs.warnOnOpen false\nbrowser.urlbar.autocomplete.enabled false\nbrowser.urlbar.maxRichResults   0\ndom.disable_open_during_load    false\ndom.max_chrome_script_run_time  0\ndom.max_script_run_time 1800\ndom.mozApps.used    true\ndom.w3c_touch_events.expose false\nextensions.checkCompatibility.3.5   false\nextensions.checkCompatibility.3.6   true\nextensions.lastAppVersion   33.0.2\nfont.internaluseonly.changed    false\ngeneral.useragent.extra.microsoftdotnet (.NET CLR 3.5.30729)\ngfx.blacklist.layers.direct3d9  3\nkeyword.enabled false\nmedia.gmp-gmpopenh264.lastUpdate    1414547990\nmedia.gmp-gmpopenh264.version   1.1\nmedia.gmp-manager.lastCheck 1414547989\nnetwork.cookie.prefsMigrated    true\nplaces.database.lastMaintenance 1414548411\nplaces.history.enabled  false\nplaces.history.expiration.transient_current_max_pages   53646\nplaces.last_vacuum  1327413952\nplugin.disable_full_page_plugin_for_types   application/pdf\nplugin.importedState    true\nplugin.state.npdeployjava   0\nplugin.state.nppdf  0\nplugin.state.npwpf  0\n[a bunch of printer settings]\nprivacy.clearOnShutdown.cookies false\nprivacy.clearOnShutdown.downloads   false\nprivacy.clearOnShutdown.formdata    false\nprivacy.clearOnShutdown.sessions    false\nprivacy.sanitize.migrateFx3Prefs    true\nprivacy.sanitize.sanitizeOnShutdown true\nprivacy.sanitize.timeSpan   4\nsecurity.dialog_enable_delay    0\nsecurity.warn_entering_weak false\nsecurity.warn_viewing_mixed false\nstorage.vacuum.last.index   1\nstorage.vacuum.last.places.sqlite   1412612346\nall of your settings for the Inline Image Viewer plugin except for enabling/disabling specific image hosts which you can omit:\nconserveMemory on\npreloadImages off\nbufferScreens 2\nmaxWidth 640\nmaxHeight 480\nopenInNewWindow on\nhideNSFW off\nautoExpandSelfText on\nimageZoom on\nimageMove on\nmarkVisited on\nsfwHistory Add links to History\nignoreDuplicates on\ndisplayImageCaptions on\nloadAllInAlbum off\nconvertGifstoGfycat off\nshowViewImagesTab on\nautoplayVideo on\ndisplay imgur on\nprefer RES albums on\n...\n. ",
    "kubiq": "It happens to me on every imgur album (res v4.5.2): Select second image in album, scroll(doest matter how, mouse, arrow keys, scrollbar), res shows first image from that album\n. Chrome Version 37.0.2062.120 (281580) (64-bit)\nAdBlock 2.10.3, Always Clear Downloads 1.1, AngularJS Batarang 0.4.3, Disconnect 5.18.14, FlashBlock 0.9.34, Google Analytics Debugger 2.6, Postman - REST Client 0.8.4.9, Reddit Enhancement Suite 4.5.2, Redirect Path 0.7.2\nI didn't change anything in image settings, all are default. \nWhat i noticed is that when images are different sizes they get deformed (bad ratio) when i drag it to resize, it switches to correct ratio and size, then when i scroll page, image switches to first one in the album\n. yes i do open all images with view images, and yes it does it even with all extensions disabled\n. ",
    "joatmon3": "I've got the same problem, no matter if I click the view all button or open the album directly. I tried disabling all other extensions and still got the same thing. I'm using Firefox 25 on a Mac. In the inline image viewer settings, everything is on except: preload images, load all in album, convert gifs to gfycat, and display redditbooru. Happens in Chrome 33 also.\n. ",
    "aiman-alsari": "I also see this behaviour. I am running 4.5.4 under Chrome 39.0.2171.99.\nThe steps to replicate and associated symptoms are exactly as described by previous posters.\n. ",
    "blark": "I have this bug in Chrome too, and I've had it across multiple OS installs. I'm running Windows 7 x64 and Mac OS (bug on both OSes). \nIt happens every time I scroll, the image switches back to the first image in the album. \n. I have this bug in Chrome too, and I've had it across multiple OS installs. I'm running Windows 7 x64 and Mac OS (bug on both OSes). \nIt happens every time I scroll, the image switches back to the first image in the album. \n. ",
    "sdluze": "I still have this problem, OS X Yosemite, Chrome 40.0.2214.111 (latest)\nTurning off 'Conserve Memory' for UI fixes the issue.\n. ",
    "3v1n0": "Yeah, please that's quite a MUST-have feature for a such awesome tool.\nIt would great to include also some fuzzy-search (\u00e0 la SublimeText command palette :))\n. Oh, sorry... I didn't want to \"spam\" there as well, since the issues were actually tracked here, but I'll do this in future.\nThanks.\n. > by the way, do you have a suggested binding?\nMhm... Yeah,/ is already used by firefox... I'd have used we might use Shift+f, but it's already taken... So maybe Alt+f? :)\nProbably it's possible to override firefox default, BTW. Not sure it's nice.\n. Right... So it does in Firefox... Well, just F or 'Shift+F` are active only when in Go mode, so maybe they can still be used.\n. I would love to. ",
    "hidde-jan": "This is something that I'm still interested in. I've had a look at the commandLine code, and it seems that it would require quite some changes to implement, or you would need to hijack the getTip function on r/<subreddit> to do all kinds of shenanigans, like binding eventListeners en performing ajax requests.\nDoes anyone of the maintainers have a preference for how one might implement this?\n. ",
    "mjkaufer": "Sure. I'll look into it.\n. Is there anything in particular I should do to circumvent this?\n@andytuba wanted the module here to be integrated into the imgur part of showImages, but that doesn't seem to be possible based on what we just discussed. Should we just make the function to shrink images its own module, or keep working to integrate it into showImages? Or am I not seeing something that I could do? I could probably fix this by adding code in new places such as line 624 of showImages which checks if a link is an imgur link and runs it through my function. Would that be ok?\nThanks.\n. Not super thoroughly, but it's worked in all the test cases I've used. Also, this shouldn't be a problem if imgur does change the hash length, as it dynamically appends the URL modifier based on where the .extension is. @andytuba recommended modifying the showImages.js module, and I was doing so until I came across a problem: https://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/1507\nAnyways, I personally don't have the fastest internet connection and I'm sure many others don't. Loading pictures bigger than my screen is really quite silly and I feel that, if we spread the word a bit, a lot of people would use this feature.\nThanks!\n. Sorry, careless mistake. I'll fix that.\n. I see. I kind of fixed this problem by assigning the element an id once I modified it.\n. Sounds like a plan. I'll prettify, assign a var, and commit anew. Thanks.\n. ",
    "giodamelio": "I am using the latest Google Chrome @ 1351x638.\n. I can't seem to duplicate this bug. It was originally happening in an Incognito window. I have since restarted my browser and everything is fine. Must be a fluke. I'll comment here if I run into it again.\n. ",
    "landaire": "The \"nightModeOn\" toggle doesn't work, but I noticed the toggle in the RES dropdown does\n\n. Right, and I do that but the setting does not stick. When I refresh and go back to RES preferences, it's back to On\n. @honestbleeps cleared tags, toggled night mode off, refreshed, no dice.\n. Chrome 36.0.1985.143, RES v4.5.0.2\n. Night mode (module) will actually remain off, but that doesn't seem to actually disable the module since night mode is still on. I can turn off Never Ending Reddit and confirm that it's actually off.\n. It actually can be! I'll rewrite the patch to use that instead. @erikdesjardins would it be preferred for me to squash my commits?\n. ",
    "atomic1fire": "I think I've encountered this bug.\nI turn night mode off without completely turning the module off.\nIt's fine for a while, and then suddenly it's night mode again.\nI made sure I was running chrome stable (Am now) and the bug still exists.\n. ",
    "yaomtc": "Using Firefox 48 on Linux and the beta of RES, and browser.tabs.remote.autostart set to true, multiprocess currently doesn't work. It only works if I disable RES (and many other add-ons for that matter)\n. ",
    "tobiasvl": ":+1:\n. :+1:\n. ",
    "calvinli": "The Firefox issue is apparently because Firefox treats HTTP --> HTTPS on the same domain as a cross-site request and is blocking it. Looking into it now.\n. Confirmed now works on Firefox.\n. Note for future: apparently Chrome and Safari do not consider HTTP --> HTTPS on the same domain to be a cross-site request, so we don't need to do anything for those. If at some point they change this behavior, they'll need a withCredentials flag on them too.\n@andytuba that's all I've got\n. ",
    "abc516": "Hi @andytuba , I was wondering if I could take on this issue please. I am participating in hacktobefest, and saw it was still open. Thanks!. Hi @andytuba , I was wondering if I could take on this issue please. I am participating in hacktobefest, and saw it was still open. Thanks!. @andytuba can you review please? Thanks. @larsjohnsen @mc10 @erikdesjardins Can one of your review please? Thanks.. @larsjohnsen @mc10 @erikdesjardins Can one of your review please? Thanks.. ",
    "YahyaZ": "Hi,\nI'm new to open source and I want to try and help. Has anyone worked on this issue/Can I try have a take at it?\nThanks. ",
    "jtymes": "@honestbleeps RESUtils could have a strict match on HTTPS and expandos could check if the host they are attempting to expand is HTTP and open the link in a new tab instead? Could even have a mini expando text explaining why. Seems like a better solution over silently failing. Might be more complicated than it sounds though.\n. Yeah I can do that. I'll take a look tomorrow. Thanks!\nOn Oct 4, 2014 7:43 PM, \"Andy Tuba\" notifications@github.com wrote:\n\nre: cmd-enter on posts .. It might be worth adding in, but then split the\noption into ctrlEnterSubmitsPosts\", ctrlEnterSubmitsComments, and\nctrlEnterSubmitsPosts..\n@jtymes https://github.com/jtymes, if you (or somebody else) slaps in\nsupport for posts, I could take care of the extra options.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1655#issuecomment-57921949\n.\n. @andytuba After looking at the new post page, it doesn't seem like it would be very beneficial to have the shortcut in the post because there is a captcha at the end. Unless it's only being displayed because of my low karma? :cry:\n. Alright, I'll work on adding the post support and testing the BigEditor change I made in all the browsers. I'll recommit and comment when done. \n. I've got bigeditor support added in, but I haven't fully tested everything\nand I don't think I can completely test the post submission since I don't\nhave the karma, but I will be taking a look at everything in the morning.\nThanks for the reminder!\n\nOn Fri, Oct 24, 2014 at 9:17 PM, honestbleeps notifications@github.com\nwrote:\n\nhey, just checking in to see if you had a chance to add bigeditor support,\netc, @jtymes https://github.com/jtymes -- thanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1655#issuecomment-60467088\n.\n. @andytuba \nOK, I think I have everything working. Let me know if there's an issue. I tried bigeditor in all the browsers and I put in the logic for captcha to focus the field if it's empty on post submissions. The submission will be attempted if the captcha doesn't exist or it has a value. \n\nDuring my testing, I discovered an interesting bug. In the post submission screen if you just press enter on the url field, the bigeditor opens for some reason. It looked like it was happening in the released version as well. The BigEditor value will fill the text field for the text post tab.\n. Would something like this make sense then? \nUpdate: looks like I misread the title of this issue, assuming it was for images in RES itself, not the subreddit. But the format would be similar.\n. I just tested this out and it seems to be working for me with the latest from master. I did have an older version loaded at first and experienced the problem. Looks like having the no-protocol image for backgrounds in the CSS file was causing an issue, but once I reloaded the extension it was picking up the new images from AWS. \n. It would make me feel better too!\n. I ended up having to add the permissions and use the JSON API because I ran into the same issues as @erikdesjardins \nhttps://github.com/jtymes/Reddit-Enhancement-Suite/tree/new-issue-1709 Is what I came up with. Modeled it off of /u/xkcd_transcriber's message format. \n. Ah yeah I forgot about that. I'll see if there are any creative solutions...\n. What about using https://github.com/tibbon/xkcd_api_unofficial ?\n. Looks like it should: https://github.com/tibbon/xkcd_api_unofficial/commit/172a852d5d8fd134ce3bdef5303414d49d1a4f8f\n. \nI think it only shows up if you send an origin header...unless I'm completely missing something (I don't deal with CORS often enough). For what it's worth, I tested it out in Opera Blink and it appears to work. \n. Ah, I'm setup to use spaces and it appears the rest of the file is in tabs. That might be why. I'll fix it up. I'll also move it below keyboardShortcuts. \n. @andytuba Look better?\n. It may not actually be necessary. I can take it out. \n. Curious. It shows fine in my editor...but weird on here. I'll see if reformatting it will work.\n. It would be, but because you're pressing two keys, you have two separate events coming in. You need to maintain state outside of the event handler to check because you don't have access to the prior event. \nThanks for catching the ===. I'll change it. \n. ",
    "Saturate": "I worked on support for gamespot video. Here the same issue applies.\nI did send them a ticket about https support, but with no reply yet.\nA feature for detection of this would be nice, then I could finish support for the expando.\n. I worked on support for gamespot video. Here the same issue applies.\nI did send them a ticket about https support, but with no reply yet.\nA feature for detection of this would be nice, then I could finish support for the expando.\n. @jpatapoff I agree, removing the DOM would be a good solution.\n. I looked a little into it, it seems that embedly is doing some crazy stuff with many, many iframes. Changing the size of the first one does not really do anything.\nOverriding the native youtube expando, might be the easiest thing to do. However I feel that the best thing would be to figure the embedly problem out.\nBut I'm not sure, thoughts?\n. I looked a little into it, it seems that embedly is doing some crazy stuff with many, many iframes. Changing the size of the first one does not really do anything.\nOverriding the native youtube expando, might be the easiest thing to do. However I feel that the best thing would be to figure the embedly problem out.\nBut I'm not sure, thoughts?\n. Could this not be simplified greatly?\nhttps://github.com/allthefoxes/Reddit-Enhancement-Suite/commit/ee169cd0a5bfb878f63dc42623e602d8fae47cc7#diff-b9e12334e9eafd8341a6107dd98510c9R34\nWhy all the move commands? You would really only need one. The same thing with all the others, seem super complex for no reason at all :)\n. This issue is linked with https://github.com/leedo/noembed/issues/60. It's possible to make a workaround, until it's supported.\n. I'll do this later! :-) Should be a quick fix.\n. Already on it :-) seems to have used the wrong linting rules.\n. Thanks for the review, implemented the requests.\n. ",
    "jpatapoff": "Clyp co-founder/developer here. For anyone who's familiar with the issue, is this something I can fix on my end? I could listen for an event that fires when the widget element is no longer visible and then subsequently pause the audio file. This would fix this issue, but would cause other problems. For example, if the widget is embedded on someones blog, the user then clicks play and scrolls down the page to look at more content, the the audio file would pause when out of view. I think the result of this hypothetical change would be worse than the situation we're in right now. \nI'm thinking a better solution would be to totally remove the widget from the DOM when collapsing the expando.\nThoughts?\n@honestbleeps this shouldn't be an issue anymore as we're now 100% HTTPS.\n. ",
    "Entriel": "Maybe we could choose to use slideshow instead of filmstrip from the options page.\nI would love using loadAllInAlbum with slideshow.\n. Yes, that's exactly what I mean.\nAnd of course letting the limit(dontLoadAlbumsBiggerThan) also apply to this would be the next step.\nFor example, I would love being able to say \"preload all in albums which have less then 50 images, and show them in slideshow view.\".\n. I wonder if there could be some problem with preloadImages, because although I enabled it, it seems that gallery images only get loaded when I navigated to them using the arrow buttons of slideshow view.\nMaybe it's only that my bandwidth is not high enough.\nBut yeah, it seems that all I need is a dontPreloadAlbumsBiggerThan option with preloadImages enabled.\nThank you for your quick response.\n. I wonder if there could be some problem with preloadImages, because although I enabled it, it seems that gallery images only get loaded when I navigated to them using the arrow buttons of slideshow view.\nMaybe it's only that my bandwidth is not high enough.\nBut yeah, it seems that all I need is a dontPreloadAlbumsBiggerThan option with preloadImages enabled.\nThank you for your quick response.\n. @honestbleeps There is a difference between dontPreloadAlbumsBiggerThan and dontPreloadImagesBiggerThan. What we mean is the number of images in an album.\n. @honestbleeps There is a difference between dontPreloadAlbumsBiggerThan and dontPreloadImagesBiggerThan. What we mean is the number of images in an album.\n. no need to be sorry, honest mistake :)...\n. no need to be sorry, honest mistake :)...\n. ",
    "Cataractar": "Hello guys, \nI would like to start contributing code to RES. I thought I could start with this issue, since it doesn't seem too hard to implement and not too important to give it to someone new to the project. If you have a better issue for me to take care of, I do that one instead.\n. ",
    "CrunchBanging": "I wouldn't have even thought about this feature request if it wasn't for the cosmetic issue.\n. ",
    "Double-A-92": "This is probably done in https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/userHighlight.js If somebody whats to try it.\nEdit: Could be done minimally invasive if there is some function available to get your own user id. . ",
    "diogorolo": "I submitted a fix to the resize but it still doesn't autoplay.\nedit:\nThis line controls the play function of the gifv is here: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/showImages.js#L773-L774\nWhen you quickly double-click the expando, the gifv never started playing so the state is paused. On re-open, since wasPaused is true, it doesn't resume play.\n. ",
    "mralext20": "when using the expandos currently, it opens for a split second, then disappears. it disappears when the css propriety is added to the iframe, making it not display.\nthanks for your time.\n. https://www.reddit.com/r/space/comments/2j3rh0/if_theres_one_place_in_the_solar_system_id_like/cl855aj\nit applies the class directly to the  with the video in it.\n. chrome \n40.0.2182.3\nRES version 4.5.1\ntried disabling ABP and it still happens.\n. \nscreenie refrencing the offending iframe\n. welp, my change wont fix it, so i guess im off to post a bug report. guess @honestbleeps will see it later then.\n. ",
    "Su-Well": "I think part of the reason many users want this is so that they don't forget to switch user, and end up commenting with the wrong account. This could of course lead to others figuring out what their alt account name is.\nI have seen some discussion here and on reddit questioning whether this could/should be implemented in RES. I don't have anything to contribute to that discussion. However, if it's decided against implementing this, or at least until it is implemented, I suggest a different approach.\nMy suggestions is adding options for making it more clear which account is used for commenting, so that users can be relatively confident they won't mistakenly comment with the wrong account. Some ideas: \n\nChange submit button text to \"Submit as [username]\"\nChange submit button text color depending on current user\nChange comment field placeholder text to \"Comment as [username]\"\n\nAnother option is to let users disable the submit button for selected subreddits when logged in as a specified user.\nAll of the above are pretty intrusive changes that will significantly affect the user experience, so they should of course be disabled by default.\nI wrote a tampermonkey script to do something like this. It's very specific for my needs, and not very robust, but I will include is as a proof-of-concept: http://pastebin.com/aZvXK7VX. ",
    "endolith": "@allthefoxes \n\nEven if someone enables it, someone is gonna forget in the end, and something bad will happen.\n\nThis is exactly backwards.  It needs to happen automatically because people forget to change accounts before posting and use the wrong name in the wrong subreddit.. ",
    "benwa": "It's only to match the style of the default button so it's uniform.  Since the expando is a div the cursor doesn't change.\n. Oh you're absolutely correct, my mistake!\n. ",
    "ashvinsrivatsa": "@andytuba That makes much more sense; I hadn't noticed that RESUtils.profileRegex existed. Changed in a1684c4.\n. ",
    "travis-g": "Thanks for the response. For the most part you answered my questions.\n\nI've forked the sourcecode with the intention of merging the javascript files back together.\n\nWith due respect for you and your team, I wasn't asking the RES developers to maintain, edit, or officially support anything, I was only asking a few questions. I've read through issues like #714 and #332 and comprehend that they clearly state RES isn't reasonable as a userscript. Making RES a userscript again is my hobby project.\nMy apologies if somehow I'd implied I wanted you to do anything other than answer questions about your code.\n. @andytuba Thanks for the link, I appreciate it. Some of the old userscript versions had the CSS files set just as variables, so I may just minify the CSS into strings.\n@allthefoxes That's what I was hoping, awesome. Since the file was just split for maintainability I had a feeling it wouldn't be too hard to piece back together.\nThanks for the help.\n. Yep, thanks for the help. \n\nOn Nov 8, 2014, at 1:43 PM, Eric notifications@github.com wrote:\nProbably can just close this\n\u2014\nReply to this email directly or view it on GitHub.\n. Yep, thanks for the help. \nOn Nov 8, 2014, at 1:43 PM, Eric notifications@github.com wrote:\nProbably can just close this\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "pmoody-": "OOC, I can't find the setting to control this behavior. ctrl-k for links is particularly bothersome for me since  I use emacs keybindings on my linux desktop/laptop, so ctrl-k is delete line (and ctrl-a is move-to-beginning-of-line, ctrl-e is move-to-end-of-line, etc)\n. OOC, I can't find the setting to control this behavior. ctrl-k for links is particularly bothersome for me since  I use emacs keybindings on my linux desktop/laptop, so ctrl-k is delete line (and ctrl-a is move-to-beginning-of-line, ctrl-e is move-to-end-of-line, etc)\n. OOC, out of curiosity.\n\nI've heard remarks from some veteran Mac users about the same.\n\nlinux tends to be bastard step child. On mac, the apple key tends to be the modifier for these sorts of keyboard shortcuts, so ctrl-k/a/e work as an emacs user would expect since apple-k is what's actually bound to insert-url. At least that's what I've observed on the other webapps that implement similar features (google docs, gmail, etc).\n. OOC, out of curiosity.\n\nI've heard remarks from some veteran Mac users about the same.\n\nlinux tends to be bastard step child. On mac, the apple key tends to be the modifier for these sorts of keyboard shortcuts, so ctrl-k/a/e work as an emacs user would expect since apple-k is what's actually bound to insert-url. At least that's what I've observed on the other webapps that implement similar features (google docs, gmail, etc).\n. Thanks!\n. ",
    "listentous": "The same dude who created /r/listentous made radd.it, who knew?  (Well, quite a few people actually.)\nThanks for the suggestions.  I looked around for better deals on SSL certs but the cheapest I found (somewhere that looked reputable) was $49 -- but I needed to support 2 additional subdomains, so I was stuck with the $100 package.\nIn related news, HTTPS support should be ready by the end of today.\n. HTTPS live and ready!  HTTP-only limitations removed from radd.it embeds!  Everything ready on my end!  Time for pushing and exclamation marks!  Yay!\n. I don't see how the sidebar functionality could be expanded past radd.it.  I'm certainly not opposed to it, but I don't know of any other playlister sites that let you embed like mine does.  \nI'm open to whatever suggestions you guys may have there-- but please do try it out before rejecting the idea.  It already works in /r/listentous and /r/music.  I think it's exceedingly nifty myself.\n. The errors you're seeing are from youtube-- I don't have a www-embed-player.js in any of my code.  It happens (I think) because my site is banned from AdSense.  Happens all the time and doesn't interfere with anything.\nI updated the sidebar  to match document.location.protocol.  I'll update the verbiage in the header to just \"playlister\" which is hopefully both concise and descriptive enough.\nThanks guys!!\n. > how do you feel about an option to always show the sidebar playlist?\nAn option would be fine as long as \"always open\" isn't the default.\n\nIs it possible to autoplay via an option on the iframe URL?\n\nRight this minute, no, but I can add an autoplay option.  Prolly a good idea.  I'll tweak the pull request and add the feature soon.\n\nDoes the embed automatically resume playback from a previous pageload?\n\nNo, it always starts at the first track.  When you're dealing with an ever-changing list (like reddit posts) it can be tricky to determine \"previous position\" and would probably confuse users.  Could be done (via cookies) but I don't think it'd be worth the effort.\n. If you'd handle the options, I'd appreciate it.  I didn't dig enough into RES's code to figure out how they work.\nI added a autoplay to my site.  While you're fiddling with that option, please append (path.indexOf('?') == -1 ? \"?\" : \"&\") + 'autoplay=1' to the  URL to enable it.\n. @andytuba listentothis sidebar updated!\n. Fair enough.  I will also admit that it's not the most future-proof solution either as albums will probably creep up to 6 digits.\nHmm.  Since we know the rough cut-off date of when images stopped having 5-digit IDs, could this idea be implemented with an additional check on the posts created_utc?  Is that data available in handleLink()?  If it was posted in 2015, the odds of it being an older 5-digit ID has to be acceptably-low\nI want all my imgur links to have expandos, damneet!  The gallery API doesn't seem to accomplish it.\n. Wait-- were /gallery URLs even a thing 2 years ago?  I recall them being slightly-more recent than that.  If they were introduced after images switched to the 6-digit ID/ hash then my method would always work, yeah yeah?\n/gallery URLs not expandoing: https://redd.it/3orjj4  https://redd.it/3opdfo (edit: from last release version, not the dev build)\n. It's probably a safe assumption that /gallery/ and the 6-digit pic IDs were implemented at the same time.  Makes sense to me-- imgur doesn't want to mix up album and pic IDs either.  If that's true, then my method will work 100% of the time.  (At least until we've hit those limits you've listed above.)\nOld pics like https://i.imgur.com/lce0i.jpg can't use the /gallery/ URL.  https://imgur.com/gallery/lce0i automatically forwards you to the old style http://imgur.com/lce0i  (and even forces HTTP!)\nAdditionally, I can find no /gallery/ links on reddit older than a year (in reddit time, so all less than 2 years old.)  Older ones are in the imgur.com/a/ABCD?gallery format.\nYour call but I think this solution is more reliable than even I originally assumed.  Plus it eliminates some pings between RES and imgur.\n. Wanna see something fun?  https://redd.it/3qaoj7  Pic link to a imgur.com/gallery URL w/ a 5-digit ID.\nWhat's fun about it?  Even imgur's gallery API gets it wrong and thinks it's an album.\n. Using the latest release version.   In my browser that page looks a bit different.\n\nClosing this pull request since it's not going to be used.\n. Using the latest release version.   In my browser that page looks a bit different.\n\nClosing this pull request since it's not going to be used.\n. I assume you mean line 3934?  It's just stripping out everything before (and including) the \"radd.it\" in the URL to get the permalink.  (So radd.it/r/blah becomes /r/blah, etc.)  Possible domains are radd.it, www.radd.it, m.radd.it, and embed.radd.it.\n. Updated radd.it embed code to use @erikdesjardins' suggested regex (well, most of it.)\n. ",
    "imjoshdean": "The issue you will run into, no matter what, is that in order to handle high DPI displays, it is going to take custom stylesheets setting background-size, unless you want to use JavaScript to read the CSS properties and set background-size based on calculated height and width.\n. ",
    "NykO18": "If you need something fixed/added on Dailymotion side for this, ping me. I'm working there nowadays, so I might be able to help you.\n. There's a ticket called 'Enable HTTPS by default' open for this internally but so far no progress have been made because the task is a bit daunting. Would a temporary (but easier) fix be of some help?\n. I agree, because the content URLs (mp4/aac) can't be retrieved and shared publicly since they're signed for the current user and you can only retrieve your own streams using the API anyway. I wish I could speed up the process on this, but I'm not working on this part of the project.\nRealistically, what are you trying to embed in the expando? Which URL/page? Can't you use the embed like so: http://www.dailymotion.com/swf/video/x2fx37n\n. ",
    "travismarx": "What about highlighting it similar to the \"Show all\" button on comment pages as well?\n\n. It's currently the brightest thing on that page by a fair margin. Just consideration to soften the brightness blow.\nCurrent\n\nChanged text color only\n\nProposed change\n\n. ",
    "joepie91": "I could try, but I have no idea how to test my changes... as I mentioned, I have no prior experience with extension development and I don't have an awful lot of time now (as I'm currently busy with upgrading the infra behind PDFy itself). I assume you don't want possibly broken code in the repository. Or are the instructions in the README all that is necessary?\n. ",
    "k3n": "Hey guys, thanks for taking this!\n. ",
    "ribolzisalvador": "Thanks! The guys at /r/Enhancement did most of the work, I'm glad that my first open source contribution was to RES :)\n. I was just getting started on this, why do you check for likes and dislikes instead of upmod and downmod ?. ",
    "TheRook": "@andy Tuba - There is no doubt that these two changes will reduce memory\nusage over many page loads.\nOn Mon, Aug 15, 2016 at 6:51 PM, Andy Tuba notifications@github.com wrote:\n\nThe hideDupes: remove and bloom filter aspects of this PR are probably\nstill worth resurrecting.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1844#issuecomment-239980547,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAf2N9-TpNn3J-vam-vLGM4uFM0cRRG9ks5qgRehgaJpZM4DFYy_\n.\n. So why do dupes happen?\n\nMost duplicates are caused by links moving to the head of the feed and\nbeing \"pushed\" back in-front of the browser.   It is kind of like a pilot\nshooting down himself  by flying into his own bullets (\nhttp://aerofiles.com/tiger-tail.html).\nDuplicates should be filtered by default because it will save memory and improve\nthe user experience.  I like having the option to re-enable them.\nOn Sun, Dec 7, 2014 at 8:59 PM, Andy Tuba notifications@github.com wrote:\n\nIn lib/modules/neverEndingReddit.js:\n\n@@ -40,18 +40,18 @@ modules['neverEndingReddit'] = {\n        },\n        hideDupes: {\n            type: 'enum',\n-           value: 'fade',\n-           value: 'remove',\n\nHmm. Changing the default hideDupes to remove instead of fade -- that\nchanges the default user experience. Which one is better UX? (I don't think\nthis discussion has been raised in a few years, so I think it's worth\ntalking through.)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1844/files#r21433869\n.\n. Awesome, I'm happy to hear that. I'll have these changes committed shortly.\n. I really like seeing that RES is taking my suggestion seriously and asking the community to see what they think. \n. A bloom filter that can support 100k entries is still a very small\nstructure.    Let me do some more testing to get an optimal number before\nrelease.\n\nOn Mon, Dec 8, 2014 at 10:28 PM, erikdesjardins notifications@github.com\nwrote:\n\nIn lib/modules/neverEndingReddit.js\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1844#discussion-diff-21507832\n:\n\n@@ -101,10 +97,16 @@ modules['neverEndingReddit'] = {\n    go: function() {\n        if ((this.isEnabled()) && (this.isMatchURL())) {\n            // modified from a contribution by Peter Siewert, thanks Peter!\n-           if (typeof modules['neverEndingReddit'].dupeHash === 'undefined') modules['neverEndingReddit'].dupeHash = {};\n-           // bloom filter to store 100,000 elements with a .01 failure rate.\n-           // http://0pointer.net/blog/projects/bloom.html\n-           // m = -nln(p)/(ln(2)^2)\n-           // m ~= 958505\n-           // k = 0.7m/n\n-           // k ~= 7\n-           if (typeof modules['neverEndingReddit'].bloomfilter === 'undefined') modules['neverEndingReddit'].bloomfilter = new BloomFilter(958505,7);\n\nWe might want to make this much smaller than 100,000, since we shouldn't\nsee more than about 1000 entries per page (I haven't seen more than 1050 in\ntesting).\nAlso, style: we prefer full block if-statements instead of shorthand.\ni.e. if (foo) bar; becomes:\nif (foo) {\n    bar;\n}\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1844/files#r21507832\n.\n. Bloom filters have a significant advantage over dictionaries for the\npurpose of identifying duplicates.  Dictionaries are very inefficient in\nterms of space.  In order for a dictionary to guarantee an O(1) insertion\ntime,  it must be half empty,  when a dictionary become more than half-full\nit will undergo an expansion,  which consumes more CPU and memory. To add\nto this overhead,  the dictionary must also store each element as a string.\n\nThis bloom filter is taking up a total of 958505 bits,  or about 1.1\nKByte.   No strings are stored in bloomfilter,  so that is ~1.1KB for the\nlife of the page.  We could reduce useage by recalculating m and k for 50,000 elements with a .01 failure rate and get the size under 1KB.  Additionally,  there are \"saclable bloomfilters\",  but resizing is an evil that we want to avoid.\nOn Tue, Dec 9, 2014 at 1:05 PM, Andy Tuba notifications@github.com wrote:\n\nIn lib/modules/neverEndingReddit.js\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1844#discussion-diff-21558020\n:\n\n@@ -101,10 +97,16 @@ modules['neverEndingReddit'] = {\n    go: function() {\n        if ((this.isEnabled()) && (this.isMatchURL())) {\n            // modified from a contribution by Peter Siewert, thanks Peter!\n-           if (typeof modules['neverEndingReddit'].dupeHash === 'undefined') modules['neverEndingReddit'].dupeHash = {};\n-           // bloom filter to store 100,000 elements with a .01 failure rate.\n-           // http://0pointer.net/blog/projects/bloom.html\n-           // m = -nln(p)/(ln(2)^2)\n-           // m ~= 958505\n-           // k = 0.7m/n\n-           // k ~= 7\n-           if (typeof modules['neverEndingReddit'].bloomfilter === 'undefined') modules['neverEndingReddit'].bloomfilter = new BloomFilter(958505,7);\n\nOne concern: ROI on adding Yet Another Library. Do you have a sense for\nwhen the bloom filter has better performance, memory/speed, compared to the\nplain dupeHash dictionary; and if that offsets the cost of loading the\nlibrary?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1844/files#r21558020\n.\n. Just brainstorming here:\n\nA bloom filter could be used to build a more advanced re-post/cross-post\nfilter.   The bloom filter could track posts by the URL that they point to,\n and then store this bloom filter in localstorage.  This way RES could\nfilter out any link that has been seen before, and track pageviews over\ntime.\nTo filter images,  the entire image could be passed to to bloom filter.\nAll input goes though a message digest function,  so it doesn't really\nmatter the size of the input that is being tracked by a bloom filter,  this\nwon't impact memory usage.\nOn Tue, Dec 9, 2014 at 1:32 PM, Michael Brooks firealwaysworks@gmail.com\nwrote:\n\nBloom filters have a significant advantage over dictionaries for the\npurpose of identifying duplicates.  Dictionaries are very inefficient in\nterms of space.  In order for a dictionary to guarantee an O(1) insertion\ntime,  it must be half empty,  when a dictionary become more than half-full\nit will undergo an expansion,  which consumes more CPU and memory. To add\nto this overhead,  the dictionary must also store each element as a string.\nThis bloom filter is taking up a total of 958505 bits,  or about 1.1\nKByte.  No strings are stored in bloomfilter,  so that is ~1.1KB for the\nlife of the page load.\nOn Tue, Dec 9, 2014 at 1:05 PM, Andy Tuba notifications@github.com\nwrote:\n\nIn lib/modules/neverEndingReddit.js\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1844#discussion-diff-21558020\n:\n\n@@ -101,10 +97,16 @@ modules['neverEndingReddit'] = {\n   go: function() {\n       if ((this.isEnabled()) && (this.isMatchURL())) {\n           // modified from a contribution by Peter Siewert, thanks Peter!\n-          if (typeof modules['neverEndingReddit'].dupeHash === 'undefined') modules['neverEndingReddit'].dupeHash = {};\n-          // bloom filter to store 100,000 elements with a .01 failure rate.\n-          // http://0pointer.net/blog/projects/bloom.html\n-          // m = -nln(p)/(ln(2)^2)\n-          // m ~= 958505\n-          // k = 0.7m/n\n-          // k ~= 7\n-          if (typeof modules['neverEndingReddit'].bloomfilter === 'undefined') modules['neverEndingReddit'].bloomfilter = new BloomFilter(958505,7);\n\nOne concern: ROI on adding Yet Another Library. Do you have a sense for\nwhen the bloom filter has better performance, memory/speed, compared to the\nplain dupeHash dictionary; and if that offsets the cost of loading the\nlibrary?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/1844/files#r21558020\n.\n. I have taken some CPU benchmarks in Chrome, but they are chaotic and I\ncan't see any difference. (Maybe someone can?)\n\n\nThere shouldn't be a major difference CPU usage when inserting elements\nelements between a dictionary and a bloom filter,  because they both have\nthe same time complexity.  Both a dictionary and a bloom filter rely upon a\nhash function, this bloom filter implamentation uses FNV hash (\nhttp://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function).\nFNV not a cryptographic hash function,  so it is faster than even MD5 or\nSHA1.\n. ",
    "baskervald": "I suppose that's sensible, seeing as how they phased out the Public folders. The reason I implemented it was because a lot of users on my subreddit (a subreddit that relies heavily on screenshots of in-game content) have been providing their image links using Dropbox, but we can just begin policing where screenshots are uploaded if it's an issue.\nAlthough, it admittedly does make me wonder about the inclusion of the \"raw=1\" query for shared files.\nEDIT: I also can't say I've ever seen an official statement from dropbox saying that they don't want to be used as a media host, but that's definitely not definitive.\n. Possible, but to be fair, since it gives you the option to visit it directly (Cannot load . Click here to visit it -- or something along those lines), won't people realize it's dropbox's problem? Or am I overestimating the end user?\nNot to mention, I'm rather sure /r/pics won't let you submit dropbox links because of limits like that.\nIn my personal usage experience, whenever RES can't load something I go ahead and click the link to look at it anyway because I'm curious about what it is, which is why I expanded the image in the first place. Not to mention there are already plenty of instances on subreddits such as /r/ProgrammerHumor where images will be removed from the site that they're linked on and it'll display that message.\n. Ah. I suppose that's a reasonable concern. To be fair, users can already do so with the already existing \"share\" link but they just won't be auto-expanded (unless the user knows to use 'raw=1', which most admittedly don't), but I can see how auto-expansion might further that in some ways.\nMy biggest concern is use with the \"Expand all\" button, seeing as it's not possible to cache the images, since a different URL is redirected to each time (at least with my limited understanding of caching. It may be possible with blobs and getting complicated with localstorage but that's a little much for just implementing dropbox media expansion) and that some users likely use \"Expand all\" every time they visit a subreddit, which would cause a lot of traffic.\n. This is just the one I found on a subreddit I'm subscribed to, but http://transgressingwaffle.deviantart.com/art/Joe-s-Final-Inferno-499835235\nThe majority of content isn't it, but deviantart also allows users to upload pieces of writing, which causes a problem with RES expansion.\n. This was just a quick and untested fix. I'm sure there's a better solution with RegExps or String.slice.\n. I'll let you handle that, if that's not a problem. I'm working on my own project at the moment, which is why this was just a quick fix.\n. Could you explain what you mean? I was planning to use splice at first, but I felt this solution would be more readable. Is there something I've missed?\n. ",
    "Lehmax": "Don't mistake that \"Unblock\" for a button that unblocks it always. Everytime I visit reddit I have to click this button again.\n. Don't mistake that \"Unblock\" for a button that unblocks it always. Everytime I visit reddit I have to click this button again.\n. bump?\n. bump?\n. Will do. Thanks for the answer.\n. Will do. Thanks for the answer.\n. Part of it was my own fault. Should have posted that comment earlier to get some attention.\n. Part of it was my own fault. Should have posted that comment earlier to get some attention.\n. ",
    "Lunatrius": "Most likely due to the async write. Had roughly 10 resets in the last 2 months. Luckily it's not too hard to restore a backup, but it's still annoying.\n. ",
    "ThiefMaster": "Not sure if it's related, but whenever my Firefox freezes for some reason and I kill it via Task Manager (last time it happened due to me leaving the steam minigame open for an hour or two), all RES data goes down the drain. Luckily I could copy it over from another PC, but it would be nice if RES backed up its data automatically, prompting to restore a backup if the main data is damaged/lost.\n. ",
    "KamranMackey": "No problem, @andytuba.\n. LGTM :+1:\n. LGTM :+1:\n. Weird, when trying to merge locally it gives me a whole bunch of merge conflicts. Mind rebasing this against the master branch?\n. @erikdesjardins oops.\n. This looks great to me. :+1:\n. Looks awesome. :+1:\n. ",
    "ProlificAxons": "I was using \"reminders\" in a general sense - like writing \"WoW Raid Leader for Jan10/2014 6pmCST\" in the extended textbox. I think that adding individual hover-reminder notes would be cool, but they could also get extremely cluttered (in the UI/icon sense, and in the fact of having a ton of separate dialog boxes to manage). It seems simpler to me to just have a single expanded textbox.\nEdit: Also, I'm not asking for stylization options. I'm happy with just writing on one continuous line without things like paragraph breaks (though the ability to start a new line within the textbox would be a nice bonus).\nExample\n\nSubmitted verification post at (httplink) on Jan7/2014 -- Personal user scratchpad post at (httplink) updated frequently -- Email address is (address), Skype ID is (Skype) -- Friended May16/2014 after a long discussion about (details of discussion) ++ Moderator at (httplink), needs help with CSS - hope to get (CSS code description) completed and offered as a draft by Jan27/2015 ++ Will be at (subreddit event - live chat) on Feb2/2015 - find a video clip to lighten the mood if that night is stressful\n. ",
    "coreyja": "Where would be a good place to check the gold status and add the icon? A new module similar to the showKarma one that adds the comment karma?\nI have a pull request for #1914 and was going to work on this one too, but didn't know where it should go.\n. Hey Andy,\nThanks for finishing this up for me! I meant to, but then started classes again this semester and it got forgotten about for awhile.\n. Hey Andy,\nThanks for finishing this up for me! I meant to, but then started classes again this semester and it got forgotten about for awhile.\n. ",
    "dhaynespls": "Hey there!\nI've started looking into this issue and it seems fairly straightforward to implement. I was wondering if there were specific opinions about placement of the icon around the user span area. \nIf you take a look here:\n\nI've gone ahead and dropped the 'gilded-icon' in between the user span and the selector '|'. Just curious about an opinion before I go ahead and play with showKarma to get it in there if the user has gold. \n. Relates to #1915 \n. Sure thing, I pulled that line from accountSwitcher (L231):\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/accountSwitcher.js#L231\nThat may need to be modified as well to use formatDate(expDate) instead of toDateString().\n. I'll take care of it in a separate PR, one sec. \n. --> #3486 \n. ",
    "xiongchiamiov": "Thanks!\n. It kinda depends on what your users want, but I'd tend towards either allowing users to force it always on or always off, or getting rid of it altogether.  The hope is the change we're making will \"fix it\" for the majority of the people who are currently using this feature in RES (as well as some who aren't).\n. Sorry, I forgot this was an RES thing or I would've warned you before pushing it out.\nQuestion about the implementation: does it pick up on locale settings?  If not, things will still be a bit weird for people with languages set to places that use period instead of comma for the thousands separator.\n. One thing about the original git-flow is that it's a bit overkill for most development; it has a bunch of stuff that's only necessary if you're supporting old releases.  However, RES isn't going to ship 4.6.2 after 4.7; there's just one current version in the store, so there's no need to backport fixes.\nThat kind of situation mostly works with the standard master branch approach (where feature branches get merged into master and releases are cut from there).  The main problem is when there's a fix that needs to go out quickly, but other things sitting in master prevent that.\nThe easiest way to solve that, I think is to have a two-branch model.  The latest commit on stable is always what's been released to the store, while things that have been approved to go into the next release are in master.  Most of the time, you branch off of and merge into master, and when you want to release, you merge master into stable and cut the release.  When you need to push out a hotfix, though, you can branch off of and merge into stable, bypassing the commits sitting in master that may not be quite ready for a release yet.\nAnd since you're not backporting patches for older versions, you can just use tags when you release instead of creating a bunch of branches that will be never touched.\n. > Sounds like I should rename the release/4.6.0 branch I've created to stable and leave master as-is. I feel a bit odd about using the name stable since it'll be a little rough at some given points..\nOh, my use of master/stable was just what we decided to use at a previous employer; devel/master is, I think, more common, and you can of course use whatever makes the most sense to you. :)\n. ",
    "brett1337": "Wouldn't this behavior be consistent with expanding an image? The user will have consumed the content of the post whether it be an image or text so it should be marked read.. @larsjohnsen perfect, thank you. I guess this issue should be closed then, although I still feel like it should be the default.. ",
    "gmcclure382": "Thanks! Sorry about those two stray commits. I didn't realize pull requests automatically get updated with subsequent commits.\n. Thanks! Sorry about those two stray commits. I didn't realize pull requests automatically get updated with subsequent commits.\n. @mc10 Thank you very much for the tip, I will employ that practice immediately.\n. @mc10 Thank you very much for the tip, I will employ that practice immediately.\n. Oh that makes a lot of sense, I like that idea of isolating each work item to a branch. Thank you, the both of you, for all your help. We use TFS at work (though the usage is more like SourceSafe), so git is pretty new to me. \n. Oh that makes a lot of sense, I like that idea of isolating each work item to a branch. Thank you, the both of you, for all your help. We use TFS at work (though the usage is more like SourceSafe), so git is pretty new to me. \n. ",
    "martey": "I did a search but somehow missed this. Thanks!\n. I did a search but somehow missed this. Thanks!\n. ",
    "danieljl": "When will this version be released?\n. When will this version be released?\n. ",
    "A-deLuna": "right now the way to navigate through a gallery is using the \" [ \" character for left and \" ] \" for right, though it might be nice to also be able to move using arrow keys\n. ",
    "Fyren": "This doesn't appear to fix inline code blocks (at least, in Firefox, but I don't think that's relevant).  The dev tools tell me the CSS rule that's getting applied is for .link .md :not(pre) > code, not the one mentioned in the first comment.\n. I brought this up on r/RESIssues a while back: https://www.reddit.com/r/RESissues/comments/3yz31j/bug_using_firefox_nightly_123115_and_the_latest/\nThis is still happening for me using both master and release/4.6.1 builds I made just now on today's nightly Firefox.  It's been happening on either every page load or nearly every page load since I my Reddit post.\n. Other users have reported this happens to them with 4.6.0 even on the current Firefox release version (45, released yesterday): https://www.reddit.com/r/RESissues/comments/49g0b9/bug_firefox_on_mac_nightmode_bug/\n. ",
    "vermiculus": "Any further thoughts on this?\n. Any further thoughts on this?\n. Any further thoughts on this?\n\nEdit: Wow, I'm not very creative with my bump-posts :)\n. Any further thoughts on this?\n\nEdit: Wow, I'm not very creative with my bump-posts :)\n. :+1: thanks!\n. :+1: thanks!\n. Looks good to me. Thanks!\n. Looks good to me. Thanks!\n. This seems to be broken in at least 4.5.4. [19] and [20] aren't showing inline on this thread.\n. This seems to be broken in at least 4.5.4. [19] and [20] aren't showing inline on this thread.\n. This seems to be broken in at least 4.5.4. [19] and [20] aren't showing inline on this thread.\n. Oh :frowning: my apologies\n. Oh :frowning: my apologies\n. Oh :frowning: my apologies\n. ",
    "rageandqq": "What about Night Mode? I'm not the biggest fan of bright screens, and the dark background makes a difference even on error pages.  \nI haven't delved into how all the different modules work together, but is it possible to only load the module that determines whether night mode (and maybe some other essential features?) is enabled, and not load the rest of RES on error pages?\n. @honestbleeps No worries, I'll try running some performance tests and look into an alternate method of querying the links.\n@erikdesjardins Silly me, forgot to change my editor settings, I'll get on that!\n. ",
    "andrewboerema": "@andytuba - is this still a concern now that night mode is a thing in reddit proper?. ",
    "imgrush": "We have been working around the clock to get this fully set up. We are currently using OVH for the host.  You can update any uploaders to use imgrush.com\n. We have been working around the clock to get this fully set up. We are currently using OVH for the host.  You can update any uploaders to use imgrush.com\n. @andytuba @allthefoxes \ngoing through the code, I can see that we need a vendor file too correct? Just like MediaCrush.js\n. @andytuba @allthefoxes \ngoing through the code, I can see that we need a vendor file too correct? Just like MediaCrush.js\n. @andytuba @allthefoxes Can you take a look at the pull request i made for this:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2030\nThanks\n. @andytuba @allthefoxes Can you take a look at the pull request i made for this:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2030\nThanks\n. @andytuba @allthefoxes did you get a chance to look over the PR https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2030 \n. @allthefoxes  @andytuba any update here? initially, It seemed like changing the domain would be enough to make this work, we probably have to take another look at this. Let me how to proceed. maybe we can go with @andytuba 's original direction? Thanks\n. ",
    "changetip": "Hi @erikdesjardins, @honestbleeps sent you a Bitcoin tip worth 1 high-five (22,020 bits/$5.00), and I'm here to deliver it \u2794 collect your tip.\nLearn more about ChangeTip\n. Hi @erikdesjardins, @honestbleeps sent you a Bitcoin tip worth 1 high-five (22,020 bits/$5.00), and I'm here to deliver it \u2794 collect your tip.\nLearn more about ChangeTip\n. Hi @erikdesjardins, @honestbleeps sent you a Bitcoin tip worth 21,975 bits ($5.00), and I'm here to deliver it \u2794 collect your tip.\nLearn more about ChangeTip\n. Hi @erikdesjardins, @honestbleeps sent you a Bitcoin tip worth 21,975 bits ($5.00), and I'm here to deliver it \u2794 collect your tip.\nLearn more about ChangeTip\n. Hi @ArrestedDevelopment, @honestbleeps sent you a Bitcoin tip worth 1 high-five (21,256 bits/$5.00), and I'm here to deliver it \u2794 collect your tip.\nLearn more about ChangeTip\n. ",
    "markbao": "@andytuba thanks for triaging this! Looks like the main reason it looks like it's \"shifting\" is due to the -45deg rotation. Can you try -225deg and see if that seems to \"anchor\" it to the top?\n. ",
    "yangzihe": "I think I fixed the bug: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2072\n. Oh because I wanted to match the order of the original date variables. I guess it's a little bit nitpicky, but I saw no reason why the variables wouldn't have the same order in the first place, so I just shifted the line.\n. ",
    "k2trf": "Followed from the above link; so long as this is optional I also add a vote for this.\nI do not agree with the principal of NP on Reddit, nor do I see myself ever using it, but it should be an option as there are just as many who love NP as those who hate it.\n. ",
    "jkcchan": "I am currently looking at a solution for this.\n- set all .title to have styles:\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n. For this, the whole drag and drop system would have to be redone.\n- right now, repositioning is done by hovering over other subreddits, then when let go, reordered (i.e. not drag and dropping in between)\n. I've added a new option showSubscribeButton, with the description: 'Show/hide the comment subscribe button.'\nIn handleButton(), I check for the option's value, and returns if false.\nLet me know if this is not how imagined.\n. @13steinj Thank you for the feedback! Will change it so that it's an option on that module.\n. @13steinj thank you for the comments and patience! Will work on this tomorrow. Really appreciate the help!\n. @andytuba Sorry for this mistake, I am making the changes now. Thank you for your help!\n. I will take a look at this.\n. @andytuba from what I understand, do you mean adding the SCSS selectors to the string that is passed in the addCSS function? i.e. .link .title?\n. @andytuba okay, will do. Is that all I have to do? Where would I put the boolean check? \n. @13steinj @erikdesjardins Thank you for the guidance!\n. ",
    "vohof": "Yes it plays, but it gets loaded very slow :frowning: \n. @andytuba thanks!\n. ",
    "mverderese": "Awesome thanks! And yeah he's actually looking into doing that very soon.\n. ",
    "wojtekmaj": "This deserves some attention for sure :)\nMaybe we could set up crowdsourcing translation service somewhere? I'd love to help with translating stuff to Polish.\n. You are absolutely right @andytuba and I share your concerns. It's the matter CSS specifity. I could switch these classed from .className to tagName.className to make them \"stronger\" than tagName { ... }, which probably is not a bad idea, I just need to make sure it won't break anything. Hang on then :) \nRegarding your question about some alternative to ussing BUTTONs - theoretically, you can make an element \"tabbable\" by adding tabindex=\"0\", however that does not make all the BUTTON's goodness available - like hitting enter to click it. So, at the end of the day, it's more of a hassle to make workarounds than just do the job well once.\nAbout your question about dev env - I'll fight some more, maybe it was a problem with too old node.js that've had installed side by side, I'll keep fighting, I need this anyway to get the job done :)\n. Ah, nice catch. I don't know why it didn't work for me at first. Fixed :)\n. Could we have a second look on this? It's likely to be affected by i18n changes a lot in the nearest future.. Nevermind, fixed that\n. Interestingly, we've started getting no-useless-escape errors with this update, and some of them look like we could have wrong RegExes.\nFor instance, submitHelper.js:\nconst stripUrlRe = /^(?:https?:\\/\\/)?(?:(?:www|i|m)\\.)?(.+?)\\/?(?:\\.\\w+)?(?:#[^\\/]*)?$/i;\n                            was this supposed to be backslash or escape character? ^\n. I messed up, will create new one\n. Who needs API for that? https://github.com/mourner/suncalc. #3740 Was posted later than mine but I'd suggest pushing it first as it fixes far more than my PR - although some gaps left by #3740 will be filled by this PR so I'm waiting for it to be merged and happy to merge their changes into my branch. :). @erikdesjardins Done, sorry for the long wait ;). I'm taking descriptions from:\n\ncommentNavigator\nhideChildComments\nhover\n\nkeyboardNav. Option titles:\ncommentHidePersistor, floater, localDate\u00a0have no options so they are done.\nEverything up to & including keyboardNav done\u00a0in #3778, waiting for #3776\u00a0to be merged.. Taking:\ntitles & descriptions:\n\n\nmultiredditNavbar,\n\nneverEndingReddit,\nnewCommentCount,\nnoParticipation, \nnotifications \norangered\npageNavigator\n\ntitles:\n- nightMode\ndone (no options):\n- onboarding. A couple of updates on #4552\nModules\n\nbackupAndRestore: improved in PR\nfilteReddit: vastly improved in PR\n\nExtras\n\nannouncements.js looks done to me\nbackupAndRestore: done in PR\nbetteReddit: done in PR\nfilteReddit: done in PR\n\ntroubleshooter: done in PR\n. @erikdesjardins, if you don't mind me asking, how\u00a0come that you're ending up with manifest.json files without properly \"loading\" json files?\nI can't see how these files are being processed, and if I'm trying to do this myself in my test project, I'm ending up with manifest.json file being corrupted webpack-generated JavaScript file.\nI need to write entry: \\file-loader?name=[name].[ext]!extricate-loader!interpolate-loader!./${entry}`,to get it working, although in that case I'm getting an error that multiple assets emit to the same filename 'manifest.json'...\u00a0Teach me master :O. BTW there'sresult.breadcrumb = ` twice in search.js, it seems to be\u00a0some obsolete piece of code, would you like me to remove it while we're at it?. Aaaah I fixed that this second!. Hmmm... Not that I'm all against jQuery, I agree it could be useful in lots of places... In others though, it's needless. For the sake of this reply let's assume we'd like to get rid of jQuery...\n\n\nad 1. Element.closest don't have nice polyfill, but it would be super easy to write with good Element.matches polyfill, which, thankfully, is there\u00a0waiting on MDN.\n\nad 2. That's a fair point. Although we could\u00a0make our code jQuery-independent and then\u00a0just go deeper in second stage and get rid of plugins that rely on jQuery.\nad 3.\u00a0I'm usually operating on array of elements and using .filter, .forEach etc in chains, works alright if the array is empty, so the issue you're talking about probably could be avoided.\nad 4. Easy to replace, but that makes me wonder, shouldn't we more rely on .moustache templates instead? ;). Consider it done :D. Phew! It appears everything works as I wanted it to, but it needs quite a bit of testing and I think I'd need some assistance with\u00a0flow checks and matchSkipRE, I'm not sure what this part\u00a0was supposed to mean.. @andytuba I believe I've\u00a0done everything you\u00a0requested, correct me if I'm wrong :). Actually this is what I did initially and then decided not to, because gear menu items have lowercase labels, while module names don't. And I couldn't use just text-transform: lowercase as that would also change \"RES\" to \"res\" and such. In some languages things like \"RES settings console\" are translated to, e.g. in Polish \"konsola ustawie\u0144 RES\" - which makes first word not always uppercase, which also doesn't help with figuring out it all using CSS :). Well, I could reuse some like night mode, but it's up to you - I thought it would be clearer to have them all in one place. Plus, we might want to name the toggle differently in the future.. Alright. So let me know when the new strings are in Transifex then and I'll apply the translations :). Would you please assist me with the remaining Flow error? I honestly have no clue how to fix that. :/. Thank you!. That was a duplicated key, don't worry. In that case, this PR doesn't have much sense at the moment. Please let me know when you're gonna be ready with these changes in module builder and I'd be happy to make changes to my PR.\n\n(or maybe you're okay with\u00a0this\u00a0for the time being and you'd like\u00a0it to\u00a0be merged?\u00a0Up to you of course :) ). We\u00a0should have name and label I think. Good eye!\u00a0Done :). The question is whether we even need onText and offText, they are not overwritten anywhere in the code, it seems no feature in the nearest future could use it. Personally, I'd\u00a0just remove them and call i18n on toggleOn directly in rendering function $('<span>'...).. Would be cool if we could write something like\u00a0dependsOn:\u00a0['automaticNightMode', (value) => value === 'user']. Oh well. Thank you! Fixing this right away.. It used to be false,\u00a0so I guess it should be 'none', I've\u00a0fixed that now :). With\u00a0the updates I've just pushed - yes :). I\u00a0have updated preferences description, would that be alright?. Fallbacks implemented!. Oh, I didn't know about that one :) Appears to be running even smoother. Thank you!. That might not work as you expect it to. Done, Sir! Apologies for the delay.. ",
    "himmelarthur": "I guess you are totally right ! Not really a bug then, thank you for your time!\n. ",
    "jamesdwilson": "Figured out it is an issue with RES not working if \"Disable local dom storage\" is checked. Still a conflict. Still need a way to let these both work at the same time. I guess whitelist is my only option at this stage?\nIdeally I don't have to lose my privacy gained from RAS for this.\n. Firefox 37. \nRES 4.5.4\nRAS 0.9.5 (From github)\n. https://github.com/dillbyrne/random-agent-spoofer/issues/175\n. ",
    "rodneyrod": "Unfortunately this is an issue which has recently affected me (I've recently had to change over from FF) and as a result I'm unable to use RES.\nHas there been any progress made on this?\nI'm currently a periodic donor, and if this support was added I would definitely add more when I can.\n. Most of those changes are backported to Seamonkey anyway, so it's entirely possible to port the plugin once the appropriate features have filtered over.\n. So there's no sort of BountySource where I can direct donations to fixing specific issues? Because like I said before, if this was to be fixed, I would be willing to contribute funding to get the ball rolling.\n. ",
    "fj": "\nQuestion about the implementation: does it pick up on locale settings? If not, things will still be a bit weird for people with languages set to places that use period instead of comma for the thousands separator.\n\nThis only changes the default representation, if you look at the commit. It looks like RES uses commaDelimitedString to add commas, which chops up the input string into groups of 3 digits and adds commas between them. See: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/255a399e1f2b9421a2f0322ce4cbe9e661bbe1b6/lib/core/utils.js#L1375-L1385\nIMO, that's not ideal and it should just use number.toLocaleString():\nvar n = 1234;\nn.toLocaleString();\n// \"1,234\"\nIf you like, I can modify commaDelimitedString to fix this in a separate PR, though it seems to be used in a lot of places.\n. ",
    "marcodeppe": "So the pull request says \"merged to master\" on 4/16. Why is it still an issue? http://imgur.com/pt9lq6X\nI'm using RES 4.5.4 on Chrome.\n. Apologies for the spam. Last release (v4.5.4) is from Dec 29, 2014.\nI pulled master locally and the bug is fixed :+1: \n. ",
    "The6P4C": "Probably because there's an option for it. Why though?\nClosing this, if I can work out how.\n. It pretty much is. Going to close this then.. ",
    "jmcbee": "Aw, sorry I didn't notice man. Cheers!\n. ",
    "Bfgeshka": "How about workaround? \nFor example, now we have notification when filtered posts reach some percentage, is it possible to add \"hide filtered\" button in this notification popup?\n. ",
    "rhwang201": "Couldn't find an active thread on this on r/Enhancement, so bumping here. I vote for \"/\", like duckduckgo.\n. ",
    "zuern": "Is there still interest for this feature? I could pick it up if people still want it.. Is this issue closed?. ",
    "John2143": "http://www.reddit.com/r/programming/comments/35kjyi/puppet_apply_is_accidentally_quadratic/\n. ",
    "4xdk": "Is this still an issue? Horizontal scrolling is supported via Right/Left arrows in EditContainer.. ",
    "frjonsen": "Youtube has officially retired the v2 API, which RES uses. v3 requires each request to supply an API key, meaning this is potentially unfixable?\n. ",
    "swiftSwathSee": "@mc10 In the mean time, can you just have the user provide their own API key? It's better than just omitting this highly useful feature.\n. @mc10 In the mean time, can you just have the user provide their own API key? It's better than just omitting this highly useful feature.\n. ",
    "empyrical": "Awesome, and thank you for the tip! :D\n. Now here's an even crazier idea I came up with, but it'll require the use of Babel on any files that use it. I think it'd be more convenient to work with, though.\nThe spec for the ES2016/\"ES7\" hasn't finalized yet, but Babel/Regenerator works with it pretty well in the current state. Basically, it's heavy syntactic sugar for Promises.\nLet's say I make these extremely basic Promise wrappers for Fastdom:\n``` js\nfunction fwrite() {\n  return new Promise( resolve => fastdom.write(resolve) );\n}\nfunction fread() {\n  return new Promise( resolve => fastdom.read(resolve) );\n}\n```\nI can then do this:\n``` js\nasync function test() {\n  await fread();\n  var testDiv = document.getElementById('testDiv');\nfor ( let i = 0; i < 1000; i++ ) {\n    await fwrite();\nlet newElement = document.createElement('div');\nnewElement.textContent = 'hello, world!';\n\ntestDiv.appendChild(newElement);\n\n}\n}\n```\nThe await expression completely pauses the function until the promise resolves, which lets you code this asynchronous function as if it's synchronous and avoiding the callback hell that normal fastdom needs.\nI highly recommend waiting until ES7 finalizes, but I think this could be really useful in the future!\nYou can try this live demo I hacked together in the Babel REPL! My example is a bit excessive as it has some unnecessary fastdom pauses, I just have those there to show it off.\n. Nice! I'm doing basically just that in a reddit browser extension I'm working on - async/await everywhere. A bit risky because the spec isn't finalized, but I think the convenience this syntax brings is worth the risk :) It's especially nice for browser extension development if you make promise wrappers for the browser's message passing API\n. Should disable them for the account activity page too\n. Oops, have to tweak for the code style!\nedit: All good now.\n. Stumbled across another giphy domain on reddit - the domain gph.is. The IDs used by it, however, are randomly generated sadly and can't use the normal image IDs. If anyone knowledgable in giphy knows how to get the image ID from a gph.is url I'd love to hear it\n. Done, and confirmed working for me after this change\n. No problem! Also, just made another commit adding the big editor button (which I forgot!)\n. Perhaps something could be made to fetch things from reddit's Crowdin page?\nAlso, thanks for accepting this! I realize though that I made a small mistake on like 1404, it should be this instead:\nreturn ['you have been banned from posting to [/r/' + subreddit + ': ' + title + '](/r/' + subreddit + ').',\nWould you like me to make another PR for this? or is it something small enough you'd work it in later?\n. I don't know exactly why I put one there, haha. I think it might have been the fact it's got an element selector there, but it should be in the read cycle instead\n. @andytuba should be less nonsensical now!\n. \u2764 es6! That's probably the most readable solution to that problem.\n. ",
    "dansutera": "Hi Kevin,\nThanks for looking at this!  We tested out the new changes and it works\nboth with futurism.com and with the old futurism.co links.  This is because\nthe old links are .jpg\u2019s.  So yes, it supports both.\nCheers,\nDan\nOn Thu, May 21, 2015 at 3:16 PM, Kevin Ji notifications@github.com wrote:\n\nDo old futurism.co links still redirect properly? If so, I think we\nshould also keep support for links using the old domain.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2248#issuecomment-104392847\n.\n. Hi Kevin,\n\nThanks for looking at this!  We tested out the new changes and it works\nboth with futurism.com and with the old futurism.co links.  This is because\nthe old links are .jpg\u2019s.  So yes, it supports both.\nCheers,\nDan\nOn Thu, May 21, 2015 at 3:16 PM, Kevin Ji notifications@github.com wrote:\n\nDo old futurism.co links still redirect properly? If so, I think we\nshould also keep support for links using the old domain.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2248#issuecomment-104392847\n.\n. \n",
    "dsutera": "Hi guys, I just made the recommended changes and committed.  Tested and all looks good for both old and new.  Thanks for the help!\n. Hi guys, I just made the recommended changes and committed.  Tested and all looks good for both old and new.  Thanks for the help!\n. ",
    "BrentNewland": "I opened a request at https://github.com/reddit/reddit/issues/1326\nIf the API is altered, this will become technically feasible, at which point the topic could be revisited.\n. You can limit conversation to a single thread.\n1. This is not asking Reddit to \"drastically change API policy for RES\"\n2. I'm not asking Reddit to allow tons of API calls. I'm asking for an addendum to the API to allow it to return more information.\n3. That's your personal choice.\n. ",
    "denizdogan": "In the pull request I just made, I've put \"FILTERED\" right next to \"ALL\" in the order, just like any other special button. Ideally, I'd like to merge them without a separator, as in:\n- If user wants only ALL, just use \"ALL\"\n- If user wants only FILTERED, just use \"FILTERED\"\n- If user wants both, see them as \"ALL (FILTERED)\", where both ALL and (FILTERED) are separate links\nThoughts?\n. I've now moved it into 'Vote Enhancements' and fixed a couple of minor bugs. Another function that we could add would be to always hide the user's own submission/comment scores. Shouldn't be too much work.\n. I will make a new branch and pull request for this feature\n. @andytuba: Looking at the code for currentSubreddit makes me think, wouldn't it be better to rethink that function entirely? Currently it seems like it does two different things depending on whether an argument is given. If we make it also check if we're on /f/all, it'll start getting messy.\n. @erikdesjardins Yeah, I noticed that quite a bit has changed since I made the PR. I'll do my best to update all my pull requests to make the progress easier.\n. @andytuba: Yes, that seems like the most reasonable thing to do\n. ",
    "pastudan": "just wanted to note that this is a particularly annoying bug, because when you attempt to close the existing reddit expando, the video doesn't close.\n. Haha, thanks for explaining. I probably should have built it from source and tried it before making an issue. Glad this is resolved.\n. ",
    "jlpoolen": "Actually, it's a User Interface (\"UI\") design bug.  I did something, clicked \"SAVE\", and something else happened.  My expectation as a (new) user to an existing feature was different and then learned, e.g. I know now that SAVE means Submit. The use of the word SAVE is ambiguous in that window's context.  Other users may have the same problem, but probably will not take the time to find and log a bug.\nAn enhancement would be a request to add a button that does something else or change functionality.\n. Also, my recommendation re: CLOSE could be an enhancement since any action taken thereon does not affect what happens: you are returned with your content saved.  No harm, no foul.\n. ",
    "eligrey": "~~Hm? Why would this be bad for non-gold users? I'm sure non-gold users would benefit from user tag syncing as well.~~ Edit: Oh syncing into the gold friend notes. Makes sense.\n. Ah, ok yeah I did misunderstand.\n. > We will not be supporting this feature due to our commitment to not cannibalize Reddit Gold features. This isn't something we're willing to bend on, because it's a commitment we've made publicly to both reddit and our users, who have nearly unanimously respected that stance/decision.\nSorry, but what are you responding to? The part of my comment that you quoted is about me wondering if it's okay to ask your community how they feel about this. You responded by telling me how you feel about this (+an assurance that the majority feels this way) and are giving me the vibe that if I even asked your users and got a positive response from them, you would ignore them citing past unanimous support.\n\nit's a commitment we've made publicly to both reddit and our users, who have nearly unanimously respected that stance/decision\n\nYou actually questioned a representative sample of your users about their opinions on your no-gold-features policy? I am skeptical but I will believe you if you can link me to your source. I'd like to see where this \"unanimous\" support is supposedly coming from. Do not claim to be ruled by your peers when it is you that is ruling them.\n\nIn no uncertain terms, this sentence is a threat.\n\nI said \"fairly weigh any potential benefit and harm to your users as whole\". There are no secret meanings. I am referring to direct harmful or beneficial results to your users of you accepting or rejecting this pull request. By harm obviously I am referring to restriction of capabilities for the user, when the user does not wish to be restricted. How does anyone take this as a threat? The only threatening aspect is that users might leave this project for a fork if you do not budge (which is bad for both of us, since 1. I would need to support a fork, and 2. you would lose users).\n\nIf you find yourself starting off a sentence that way, it would probably serve you well to either rethink the sentence or not finish it.\n\nSorry, no. I intended to evoke a very important comparison in your mind with that specific example, and I knew it would be incendiary to you. You should understand the parallels between RES and DRM.\nTo address your two numbered concerns:\n1. Initially I was going to do a simple one-paragraph PR, but then andytuba told me on IRC that you would never accept that PR so I had to rewrite it and add the policy arguments.\n2.\n- I wrote this code without any dependencies on RES a bit ago for a gist.\n- You have no public markdown documentation regarding your module APIs. If you could tell me more about the API and file structure you want me to use (or link me to API documentation), I will gladly port my code to the RES API.\n. ",
    "pornbotnet": "Fixed script id. Let me know if there are any more problems you can see.\n. We can wait. :)\n. Is there anything we can do to help speed this PR merge along?\n. Any updates on this?\n. Sorry, not trying be annoying. Is there something we can watch to know when things have cooled down a bit?\n. No worries. :)\nWill get back to you soon about your questions. Thanks.\n. Hey sorry about the delay. Here are the answers to your questions:\n1. Typical format seems fine.\n2. Favicon - http://static.pornbot.net/logo-small.jpg\n   Big Image - http://static.pornbot.net/logo-large.jpg\nFallback sounds fine. Are we able to adjust the size of the bigger image after the fact? IE it is 30x30 right now, but we may want to adjust at a later date to 150x30.\nThanks.\n. I made the requested changes, and axed https support altogether. I'm a little unsure about what you want to do with the logo container, so I left that.\nRegarding testing. There are a few of us on this team, and me being the programmer was not even aware RES was a browser plugin before. So I built this in the dark. Now that I know what RES is, I will do some testing on my own to help reduce the workload for you. :P\n. Ok great, thanks. I've pushed the latest changes. From my initial testing it appears something is broken as I am unable to open the expando on at least Firefox. Will look into this some more hopefully later this week.\n. Managed to fix the bugs. Should be working correctly on all browsers now.\n. ",
    "crosma": "This would be great for Reddit load wise because of people who browse like I do. I view everything on a page then hide it all. I do this because I browse in random bits when I'm not busy and I hate seeing 50%+ repeats every time I load up my front page. Currently I just scroll back to the first post and then hold H which generates 25 requests.\n. ",
    "Ajedi32": "Wait, does this mean I can use ES6/7 features in my code and it'll just work? It would be sweet if I could refactor #2531 to use async/await.\n. @erikdesjardins Ah, that's cool. A batch API would definitely simplify things a bit in my PR. Let me know when the PR is ready so I can take a look. :+1: \n. Just a note: some SFW subreddits use the NSFW feature of Reddit to mark posts as containing spoilers. That would be a good thing to take into account when implementing this feature.\nI think not expanding NSFW images by default is probably a good idea anyway.\n. @rapkin Assuming you address @andytuba's comment above, it looks like the plan is to release it with v4.7 (whenever that is). Unfortunately it's been awhile since the last release of RES, so at the moment there's no telling when v4.7 will be released.\n. @rapkin I'm not one of the maintainers of RES; you might want to talk to @andytuba or @honestbleeps about that one.\nIn the meantime though, as I said, you should probably address @andytuba's comment above about not rewriting the OP's link. Looks like a pretty easy fix.\n. @rapkin Yeah, the comment he made was on line 57. Though on closer inspection, it looks like that code isn't actually rewriting the link, just changing the link on the thumbnail to match the original link. I find that kinda odd, since I think the link for the thumbnails should already match the link for the post title. Weird. I'm gonna ask about it.\n. @erikdesjardins They don't? I thought I checked...\nYeah, Chrome is showing access-control-allow-origin:* set on https://derpiboo.ru/1025639.json so it shouldn't be a problem.\n. Quick question: I noticed that some of the existing media host modules like Photobucket seem to include code specifically for handling the case where the user links the image in question directly. (E.g. not just the page the image is on.) Given that RES already handles direct image links, is that sort of code strictly necessary?\nProbably won't matter in my case since Derpibooru seems to host its images on a separate domain from the main site, but still I'm kind of curious.\n. Another question, is the caption property still used by RES? The example file mentions it, but the strings I put in the caption property don't seem to be displayed anywhere.\n. So apparently you also need to set imgCaptions on the link element in order to show image captions? https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/showImages.js#L866-L871 Is that intended?\n. Also, just noting this for myself for future reference: the Deviantart host currently silently swallows errors raised in its handleInfo method.\n.  Yay, done! :tada:\n That wasn't too hard...\n. To do: captions. (Test with fixes from #2534)\n. Okay, well that was a lot harder than expected. The new implementation has about 5x more LOC than the original. :sweat_smile: I think I've got this down now though.\nA few notes on the implementation here I feel are worth mentioning.\nFirst, the code attempts to roll strings of API requests spaced less than 0.25 seconds apart into a single batch request which fetches all the data for those images at once. The batch size is limited to 15 images by default, since that is the default page size for Derpibooru's search page.\nThe batching is implemented by running a search using the IDs of the images in question. (E.g id_number:1006970 OR id_number:522355 OR ...). This has two limitations which complicate things quite a bit. Firstly, as I mentioned before, by default a maximum of 15 images per request can be retrieved this way. Secondly, the search just flat out fails to find images which are either marked as a duplicate, or hidden by the default filter on Derpibooru. For those types of images, separate API requests need to be made for the images individually.\nThe next complication is duplicate images. For images marked as a duplicate, only the ID of the duplicate is given by the API. A separate request then needs to be made to fetch the image with the provided ID.\nOne note on error handling. One type of error I'm currently just ignoring is the case of deleted images. Right now, I'm simply rejecting the deferred, which causes the following error in the console: showImages: error detecting image expando for https://www.derpibooru.org/654479. Let me know if you'd rather I handle that differently.\nOne final note is that you may have noticed I removed the code for retrying failed requests in the most recent commit. This is because it didn't seem to be necessary anymore in my testing (after I wrote the code to start batching requests). It is conceivable that for some users it might still be needed though, so let me know if you'd rather I leave that code in.\nAnd of course, any comments on my coding style or suggestions on potential refactorings are welcome.\n And that's it! :tada: \n. Oh yeah, one other thing I just remembered. Captions in this PR are implemented assuming #2534 has already been merged, so they won't work without it. If that's a problem, let me know.\n. Ah, looks like there's a changelog. Updated.\nThis should be ready to merge BTW. Let me know if there's anything you need me to change before that happens.\n. Fixed. Looks like there's some merge conflicts now though. Hold on, I'm gonna rebase.\n. There we go. Took me a minute to figure out the new build process, but everything should be working now and ready to merge.\n. I just found out there actually is a batch request API for Derpibooru, it's just undocumented. I added a commit to switch to that, and now the code looks much cleaner. (Since I don't have to worry about images being hidden by the default filters.)\nI also rebased, and tweaked a few things to take advantage of the new ES6 features available with Babel.\n. Also, the comment in example.js incorrectly states that the caption is displayed below the image. That wasn't the case for me when I tested it.\n. I'm not aware of any specific user-facing problems caused by this issue, it seems like more of an internal thing so far.\nI just used some of the code from the DeviantArt media host as the basis for the Derpibooru host I'm working on, and unintentionally created a similar problem there. It made debugging quite a bit harder until I discovered the problem. (Since problems in the handleInfo method were being silently ignored instead of printed to the console.)\nLike I said, minor issue. Still probably worth fixing though. I'll send a PR which addresses it later.\n. The solution I used for Derpibooru was to just not catch the exception. handleInfo shouldn't be throwing exceptions anyway AFAIK, so if there is one it's because of a bug, and it's best to just let it bubble all the way out to the console so devs can easily see what went wrong and fix it.\n. I think maybe the fix demonstrates the problem a bit better than I explained here. A minor thing, but still worth fixing IMO.\n. From the errors you're getting on npm install it sounds like bufferutil and node-sass require Python to be installed and on your PATH. No idea what's going on with the second error.\nAlso, you don't need to git clone npm packages to install them. npm install -g <package name> will work fine. And npm install within the Reddit-Enhancement-Suite folder should pull down all non-global dependencies automatically (except for Python, apparently; you'll need to install that manually).\n. This should be moved to a new milestone or closed. (I guess it's merged. Does it need to be merged anywhere else?)\n. This should be moved to a new milestone or closed. (I guess it's merged. Does it need to be merged anywhere else?)\n. > Adds QUnit tests to travis\nNice. I was surprised to learn that Travis was just running JSHint and didn't actually have any tests attached to it. It'd be great to start moving in the direction of full test coverage for RES if at all possible. (Though obviously given the current state of things getting full test coverage would be a huge task, it's never too late to start.)\n. @andytuba I have no idea. My usual approach is to just add tests whenever you create a new feature or fix a bug. (Test driven development.) Not sure what the best approach is for making a concerted effort to add tests after the fact.\n. Yeah, it's probably a good idea to go for the high-value low hanging fruit first.\n. @erikdesjardins Pretty sure @andytuba already implemented that: #2584 (In 15a8c2f5269bea61abe2b57d9e18b6b36b5ae0ab)\n. Alternately, is there any way to get around those restrictions imposed by Dropbox? As a browser extension, I suspect RES has a lot more flexibility in this regard than a regular website does.\nOr... maybe I should back up a step. Should we try to get around these restrictions? Any idea why Dropbox is doing this in the first place?\n. Alternately, is there any way to get around those restrictions imposed by Dropbox? As a browser extension, I suspect RES has a lot more flexibility in this regard than a regular website does.\nOr... maybe I should back up a step. Should we try to get around these restrictions? Any idea why Dropbox is doing this in the first place?\n. I'm not actually sure whether there's a way to do this using the Dropbox API. My initial thought was to just rewrite the referer header in the request for the image to prevent Dropbox from detecting it as a hotlink. Not sure if there's a cross-browser way of doing that. I know you can do it with Chrome. https://developer.chrome.com/extensions/webRequest\nI guess a feature like that might be more trouble than it's worth though. Just disabling expandos for those images is a reasonable solution, especially short-term.\n. Yeah, that's why I raised the concern in my previous comment of whether we should try to get around such restrictions, and what Dropbox's motivation for putting them in place initially was.\nI'd argue that what RES is doing isn't quite the same as hotlinking, since users have to click to expand the image anyway (which is essentially the same as them clicking on the link, only slightly more convenient).\nThat said, obviously using the official API is a much easier and better way of doing this if possible.\n. Does Dropbox require an application level API token? The way I'm interpreting the docs, it sounds like the OAuth token is only needed for accessing a user's private files. We only need to access public data.\n. @thybag Interesting. From that, it looks like hotlinking (or any type of linking, really) is more of a concern for the Dropbox account holder than for Dropbox itself.\nAlso, it looks like there is a rather easy fix for this: http://cantonbecker.com/etcetera/2014/how-to-directly-link-or-embed-dropbox-images/ We just need a dedicated mediaHost for Dropbox. Seems easy enough. I really should have just Googled this sooner.\n. @larsjohnsen You wana send a PR for that?\nAlso, see #1852 for a prior attempt at this.\n. Possibly related to (or dup of) #2622?\n. @KamranMackey Check the notice at the top of the PR:\n\ngithue wants to merge 1 commit into honestbleeps:release/4.6.1 from githue:nightmode-remove-filter\n. @allthefoxes Yes, this PR updates the file in the repository on GitHub (changelog.txt).\n\n@andytuba Thanks, I'll add that once I get home tonight.\n. How's that?\nFYI I'm basing a few of the formatting choices for this changelog on the example in https://github.com/olivierlacan/keep-a-changelog\n. This is now on master: 01e436022a176bfd727da9a0f419fcbd1aa06d78\n. So here's the deal, XKCD's API doesn't send any CORS headers. I'm currently looking at the code that gets around that for Twitter and OneDrive, but those are both the GENERIC_EXPANDO type. Any ideas on how to do this with the IMAGE expando type?\nAs I understand it, that whole method for working around a lack of CORS is actually just a big hack right now. Maybe it's time to refactor?\n. :+1: Nice.\nOooh, and we get to use await too? Sweet! :wink: \n. FYI, I've posted on XKCD's forums requesting that they send CORS headers in their responses to API requests: http://forums.xkcd.com/viewtopic.php?f=10&t=113315\nNo response yet.\n. Are we also transitioning to native Promises instead of the jQuery-based ones I've seen scattered around the codebase? The example media host seems to suggest that we need to return a jQuery promise object from the handleLink and handleInfo methods, which AFAIK is impossible if we declare them as async. (They'll always return a native promise then, right?)\n. Woah. :open_mouth: Nice.\n. Pretty sure the Babel fix needs to be released first right? 4142003bbd2fe3f862f9ddfde05274ee003de2cc is just on master right now.\n. Also, are you sure T2776 is fixed? The issue is still open.\n. :+1: I tried implementing this earlier using the official XKCD API (#2634), but got stuck because they didn't support CORS. This is much nicer...\n. :+1: For this. Test coverage for RES right now isn't great, and I think making that problem more visible is a good first step to fixing it.\n. Are you sure this is working? The coverage reports seem to be showing a lot of lines that actually are tested as uncovered: https://coveralls.io/builds/5630299/source?filename=lib%2Fcore%2Futils.js#L1419\n. :+1: Awesome! I love how much the new refactorings simplified the code. ES6 + the new batch utility function made a huge difference!\n. This was resolved by #2871, correct?\nEdit: Oops, wrong issue number.\n. > +3,546 \u22127,120\n:+1: It's pretty amazing how much ES6 can simplify things.\n. Note that this won't actually reduce the size of the existing repository (unless of course you rewrite the entire commit history), but it might prevent it from growing more in the future if we add additional logos.\nAlso, is this really becoming a significant problem? Even the largest version of the logo is only 8.5 KB: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/icon128.png\n. Ah. Yeah, I see what you mean. 6 MB isn't horrible, but maybe big enough to be worth using LFS.\nIf you're going to rewrite history I'd suggest doing it ASAP, since the longer that commit exists the more people will be basing stuff on it and the more annoying it's going to be to fix. (Maybe just remove the commit entirely for now then work out the best way to add it back in later?)\nHonestly though I'm still not sure its worth using LFS just for that one 7 MB file, unless there are going to be frequent revisions to it.\n. > A fix could be stopping off-screen videos from playing, and perhaps stopping all videos when the tab is blurred\nMight be okay for videos with no sound (like the ones from Gfycat), but for videos with sound there's a decent chance I might want to be looking at something else while still listening to the audio from an expanded video.\n. I'm really curious as to whether this problem actually has anything to do with RES.\nPlaying videos definitely shouldn't be a CPU-intensive operation, so unless there's something else RES is doing that's causing this I'd guess the problem is more likely with Chrome.\nWhat format are the videos you're experiencing this with? Do you get the same effect if you download the video first then open it with Chrome in a new tab?\n. Seems like a reasonable idea. I've already been doing something similar to this by just using a version of RES that I built myself on my computer.\nMaybe this would give more non-technical users a chance to test upcoming changes though, which could help avoid situations like in the previous release where few people were aware of the upcoming changes to night mode until after the release. Getting early feedback from users is a good thing.\n\nFor tags with an odd minor version number (to be used as beta releases)\n\nIs there a reason you're suggesting using odd version numbers here as beta releases instead of the SemVer convention of appending -beta.0, -beta.1, etc to the version number?\nFrom http://semver.org/#spec-item-9:\n\nA pre-release version MAY be denoted by appending a hyphen and a series of dot separated identifiers immediately following the patch version. Identifiers MUST comprise only ASCII alphanumerics and hyphen [0-9A-Za-z-]. Identifiers MUST NOT be empty. Numeric identifiers MUST NOT include leading zeroes. Pre-release versions have a lower precedence than the associated normal version. A pre-release version indicates that the version is unstable and might not satisfy the intended compatibility requirements as denoted by its associated normal version. Examples: 1.0.0-alpha, 1.0.0-alpha.1, 1.0.0-0.3.7, 1.0.0-x.7.z.92.\n. No problem, I almost didn't notice the mistake myself. It's pretty subtle.\n. I wonder if we could have RES automatically report this somewhere. It'd be nice to have some hard data on how common this is.\n. Safari is most definitely supported. The build process produces a Safari extension, and Safari-related issues are fixed when the devs become aware of them. I think what you're really saying here is that the QA process could use some work, which is true.\n\nUnfortunately, since Safari is only available on Apple computers, not everyone has access to a machine they can use to test RES with Safari, so that's likely the main cause of the problem you're noticing here. When you combine that with the fact that automated test coverage is still qutie minimal, and includes no browser-specific tests, it's pretty easy to see how changes like that might slip through the cracks.\n. FYI, I did a bit of digging, and regarding automated testing with Continuous Integration on Safari, the only viable option I was able to find is BrowserStack. Other solutions either don't support Safari, or only support Safari versions up to the point where Apple stopped supporting Safari on Windows. BrowserStack does have a free option for open source projects, and supports Safari up to version 9 on Mac. BrowserStack also includes integration with Travis.\nStill, I imagine getting automated testing up and running for all browsers will definitely be a non-trivial undertaking.\n. Shouldn't this be marked as a pre-release like all the other beta releases on the releases page? https://github.com/honestbleeps/Reddit-Enhancement-Suite/releases I was confused for a minute there, thinking there had been a stable release...\n. I'm a bit skeptical of changes like this since, unlike the ES6/7 transformations, this is adding additional syntax that isn't part of the JavaScript language. You're undoubtedly a bigger stakeholder in this than I am though, so if you and the other major contributors believe this will make development easier for you then go for it! :+1: \n. @tekmosis The latest stable version of Chrome is 53, try updating to that and see if that fixes the problem.\n. @tekmosis Try downloading the deb package from Chrome's site again and installing from there; it should have the latest version.\n. @hammerschaedel Can you press F12 to open the dev tools and post a screenshot of what the console shows after you refresh the page and scroll down (so NER attempt to load the next page)? I haven't heard of this issue cropping up on Chrome 53 before...\n. Interesting, doesn't look like anything too out of the ordinary...\nI wonder if maybe another extension is interfering with RES. Try it on a separate Chrome profile with only RES installed. That way we can at least narrow down the problem...\n. Ah, looks like that's a known issue with Shine: https://www.reddit.com/r/shine/comments/50sntp/reddit_enhancement_suite_updated_and_changed_a/\n. This is the cause of #3339 and #3344, right?\n. This is the cause of #3339 and #3344, right?\n. Interesting to note that RES doesn't seem to be broken for me in Chrome 53.0.2785.89 m on Windows 7 with a fresh install of RES 5.0.0.1.\nIs this only an issue for users who have chrome://flags/#enable-javascript-harmony enabled? Some users have reported that turning that setting off fixes the issue.\n. Interesting to note that RES doesn't seem to be broken for me in Chrome 53.0.2785.89 m on Windows 7 with a fresh install of RES 5.0.0.1.\nIs this only an issue for users who have chrome://flags/#enable-javascript-harmony enabled? Some users have reported that turning that setting off fixes the issue.\n. Alright, so I just talked to another user for whom turning off the flag didn't work, and it turns out he was using the dev channel of Chrome, which has tail call optimizations enabled even without the flag.\nSo for users affected by this issue:\n1. Make sure the setting at chrome://flags/#enable-javascript-harmony is disabled. If it is enabled, disable it and restart your browser.\n2. If you're using the dev channel of Chrome, switch to the stable or beta channels.\nDoing those two steps should solve the problem. In any case, Chrome will likely fix this issue soon. It's already fixed in Canary, so it's only a matter of time before those fixes make their way into the other release channels.\n. @thibault-ml That's really strange. Based on what I've heard so far, RES shouldn't be working on either of those computers since they're both using the dev version of Chrome. (Assuming they're both running the exact same version of the dev channel.)\nI believe since this problem doesn't affect the stable version of Chrome (unless you opt in to an experimental flag) and because it's already fixed on the master branch of V8, the current plan is to just wait for the upstream fix to make its way into a release. Or at least, that's my understanding of the situation.\n. Yep. To be clear, \"Restart Chrome\" in this instance means restarting all Chrome processes, not just closing the main Chrome window and reopening it. The chrome://flags page should provide a button that does that at the bottom of the screen after you change the setting.\n. Dup of #3339\n. Dup of #3339\n. Not just /watch either, the short URLs use just a string of random (base 64?) characters. E.g. https://youtu.be/dQw4w9WgXcQ\n. For the record, I find it absolutely hilarious that XKCD 859 ended up being the comic to trigger this issue. \ud83d\ude1c \n. > I was unable to figure out how to replicate getting section content via the #this_section hashes, so now the expando will always just show the top section of the article.\nFYI, here's the complete reference for the parse action: https://en.wikipedia.org/w/api.php?action=help&modules=parse\nLooks like you can get a list of sections by specifying the sections property. E.g.  https://en.wikipedia.org/w/api.php?action=parse&format=json&prop=displaytitle|sections&page=Krulak\u2013Mendenhall_mission&origin=*\nFrom there, you can get the text of a specific section by specifying the section parameter. E.g. https://en.wikipedia.org/w/api.php?action=parse&format=json&prop=displaytitle|text&section=1&page=Krulak\u2013Mendenhall_mission&origin=*\n. Another option would be to request the full article content and section data with one API call, then use the section data (byteoffset) to decide what part of the content to display. That'd half the number of API calls, but it'd also mean that you're loading the full article text instead of just the section(s) you need.\n. To elaborate on that, denials aren't cached because they no longer need to be; since the permissions dialog now only appears when you try to expand a link to a site which requires that specific permission. If you accidentally clicked deny and want RES to request permissions again, just click the expand button again.\n. Rather than just randomly opening a new tab (which can be rather jarring, not to mention confusing), it might be better to show some kind of notification when RES updates with an option to view the changelog.\n. It's in the background? For some reason I thought I remembered it being a foreground tab...\n. Thanks, that's a pretty good explanation. I realize this is a fairly minor detail, so I won't make too big of a deal out of it if your mind's made up, but I do feel like there's almost certainly better ways of accomplishing those goals than a random \"what's new\" page opening in the background whenever RES updates. Specifically:\n1. Tech Support: I feel like a notification appearing within Reddit itself would actually serve this goal better than the current solution, as it would be putting the same information in a far more relevant context than a new tab. It'd also give you the flexibility of experimenting with various levels of intrusiveness to help balance user experience with user education. Also, a big banner notice in /r/resissues after a release might also help with this.\n2. Analytics: This seems like a more difficult issue, as I get the feeling there's a lot of history/drama surrounding this that I'm probably unaware of, but isn't the current solution really just a roundabout way of implementing \"send usage statistics to RES with no opt-out everytime an update is triggered\"? Personally, I've never really understood the desire some people have to avoid sharing anonymous usage statistics with developers, but I recognise that some (though probably a minority, even among Reddit users) are very passionate about that particular issue. If even an opt-out isn't satisfactory, maybe some kind of opt-in/opt-out notification that pops up every once in a while until users make a decision would work? Or maybe a notification that gives users several opportunities to opt-out before collecting anonymous statistics becomes the default?\n3. Contributions: Wouldn't an in-page notification serve this same purpose? You could probably even make it better by emphasizing the fact that donations and contributions in the form of code are welcome.\nImagine something like this appearing on Reddit after RES updates:\n\nReddit Enhancement Suite has just updated to v5.0.0!\nThis is a major release with many new features, enhancements, and bug fixes. Here are some of the highlights:\n- Microsoft Edge Support (huge thanks BenMcGarry and erikdesjardins)\n- Massive infrastructure overhauls towards faster development, faster startup times (massive thanks erikdesjardins, mc10)\n- IndexedDB storage for Firefox: more stable than simple-storage (thanks erikdesjardins)\n- Chrome storage improvements: increased performance and unlimited capacity (previously 5 MB) (thanks erikdesjardins)\n- Show Images overhaul (huge thanks larsjohnsen)\n- i.redd.it and redditmedia image support\n- A ridiculous amount of hard work from erikdesjardins, mc10, larsjohnsen, githue, matheod, thybag\n- Contributions from many other members in the community\nSee the full list of changes | View current known issues with this release\nRES is entirely free - as in beer, as in open source, as in everything. If you like our work, a contribution would be greatly appreciated. \nDonate | Contribute Code\nDismiss\n\nAnd like I said, you could vary the size, shape, and UX of that notification to balance user experience with education, user contributions, etc.\n. Yeah that's a good point. Actually, now that I think about it, I think my main problem with the background page right now isn't really so much that it's intrusive as it is that it's not immediately obvious what it's for, or what caused it to appear. (It's just opening the changelog, right? I'm not really sure how to trigger the update behavior manually, so I'm just going off of memory right now.)\nThe page it opened for 5.0.0 doesn't even mention \"Reddit Enhancement Suite\" on the page anywhere immediately obvious, nor does it say that RES just updated - it just gives a random list of updates with no context. At the very least, a dedicated page for announcing the update should be created, maybe with wording similar to what I suggested above.\n. FWIW, I agree that right now it's not always entirely clear when a link is expanding to a Wikipedia page vs a self-post or some other text post. The sidebar does help, but it's not always present for all articles.\nAs for how to distinguish between different sources for text posts, I think I'm leaning towards the position being advocated by @erikdesjardins, as I'm not really convinced this is a problem unique to Wikipedia.\nAnother alternative to moving the attribution text would be to just move or duplicate the site logo next to to the title. E.g. {Wikipedia Logo} {Title} \\n {Article Text} \\n {Full Attribution}\n. FWIW, I agree that right now it's not always entirely clear when a link is expanding to a Wikipedia page vs a self-post or some other text post. The sidebar does help, but it's not always present for all articles.\nAs for how to distinguish between different sources for text posts, I think I'm leaning towards the position being advocated by @erikdesjardins, as I'm not really convinced this is a problem unique to Wikipedia.\nAnother alternative to moving the attribution text would be to just move or duplicate the site logo next to to the title. E.g. {Wikipedia Logo} {Title} \\n {Article Text} \\n {Full Attribution}\n. Huh, I didn't know you could create collapsible sections in markdown like that. I'm guessing GitHub supports the <details> tag?\n\n\n\nLet's see....\n\n\nWoah, it works!\n\n. Pretty sure this isn't an XSS issue, as RES sanitizes HTML content in captions.\nMore likely RES is mistakenly removing <noun> as a non-whitelisted tag (instead of just escaping it), or it might be an upstream issue with noembed related to #3384.\n. \ud83d\udc4d Cool.\nMight want to tell Travis to cache the Yarn cache directory as described in the docs:\ncache:\n  directories:\n  - $HOME/.yarn-cache\n. We were avoiding this before due to it requiring an extra permission, but there have been some rather recent user-experience and API improvements to the way the permissions system in RES works so maybe now this way would work fine?\n. Might want to change the milestone on this issue then, assuming that even matters now that it's closed.... Also, might it be a good idea to also support syncing in the other direction? So if you make a change to Reddit's filters (maybe from another client), those changes show up in RES?\nMight be a bit tricky to determine which direction to sync in though; we don't want to be accidentally undoing user's changes. There'd also be the question of what happens when you switch accounts, since RES filters are universal but Reddit filters are per-account.. Yeah, I can think of a few reasonable ways to do it (like setting the sync option per-account, keeping track of which items on the blocklist were added/removed since the last sync, etc), but I think ultimately it'd probably turn out to be more trouble than it's worth.. Could you go to Reddit, open the JavaScript console (Ctrl + Shift + J), refresh the page, and take a screenshot?\nOne user in the linked Reddit thread provided the following screenshot:  It'd be interesting to see if you're getting a similar error. (FYI, the line referenced in that error message is here.)\nAlso, have you enabled any flags in chrome://flags/? In particular, it's possible #enable-javascript-harmony or #disable-javascript-harmony-shipping might cause problems.. Yeah, random flags being enabled has broken stuff for people in past releases as well. When Chrome says \"Careful, these experiments may bite\" they really do mean it. Perhaps we should add \"go to chrome://flags/, click Reset all to default then restart your computer\" to our list of standard troubleshooting steps.. Presumably by \"expand\", you mean the resize control is missing? Yeah, I noticed that as well.. Is there a Firefox issue open for this on Bugzilla?. I've thought about doing this in the past as well. One potential problem with it though is that RES is licensed under GPL, and it's questionable as to whether it's legal to use a GPL-licensed node module as a dependency of a non-GPL-licensed node module. This is somewhat problematic for Node-land, where the MIT license tends to be the prefered standard. \nThis leaves us with a few options:\n\nWe could release a GPL-licensed module based on RES's code. Unfortunately, this would mean very few projects would be able to legally use that module without changing their project's license.\nWe could attempt to contact all the authors of the code under lib/modules/hosts (as determined by git) and ask them to relicense their contributions under the MIT license. Given the number of people who have contributed modules to RES, that might be difficult\nWe could start from scratch with a MIT-licensed clean-room implementation of the code under lib/modules/hosts, and modify RES to depend on that new implementation, encouraging new contributors to contribute new hosts to the library rather than directly to RES.\n\nI'm personally in favor of a combination of 2 and 3. Ask authors to relicense their code where possible, and for those who either refuse or don't respond, reimplement the hosts they worked on via a clean room design.. This could potentially be a problem for mobile (e.g. Firefox) users, could it not? With this change, is it still possible for mobile users to open the hover menu without opening the settings panel?. Looks like you need to update the yarn lockfile in order for the tests to run.. Perhaps Firefox ESR should be supported? Even though it doesn't match the latest stable version of Firefox in terms of features, 52.5 ESR is still actively supported by Mozilla, so it's not really an \"old\" version in that sense.\nThough I guess 52.5 doesn't support WebExtensions, does it? I assume that makes supporting it impractical.. Not sure what you mean, but unless you're new to Reddit it should be pretty obvious whether you're using the redesign or not. The changes aren't subtle.\nThe old design looks like this: \n\nThe new design looks like this:\n\n. I'm not 100% certain, but it seems to me you just need to update the existing code that already does this to account for the DOM changes in the redesign, such that it works with both. No need to explicitly detect that the redesign is being used.\nYou might want to reference some of the previous changes made concerning the redesign as examples: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pulls?q=is%3Apr+is%3Amerged+label%3AApp-d2x. I'd like to point out that any expandos that use an iframe likely already send analytics data to the embedees, so this isn't exactly unprecedented. In fact, we have a lot more control over the data sent in this case, so it's actually strictly better from a privacy perspective than other expando implementations.\nAs for implementation, rather than an annoying pop-up or notification I strongly recommend embedding any consent requests within the expando itself. (Probably as a simple one-line explanation with yes/no buttons, with a link to more information on exactly what information is included in the analytics data.) This would be much more user-friendly, and makes the association between expanded content and request for consent more clear.\nWhatever button the user clicks, change the relevant setting don't bother them again. This isn't important enough to be worth asking more than once. Maybe add a gear icon at the bottom of the expando linking to the relevant settings page (maybe for all expandos, as I think that's just good UX in general).\nAlso, we need to make sure we respect incognito mode and avoid sending analytics data or prompting the user when that mode is active.\nIf, in the future, we end up implementing this for other expandos, there should also be a global setting to toggle everything on or off (and maybe an additional button for the consent requests to easily access that setting).. I'd like to point out that any expandos that use an iframe likely already send analytics data to the embedees, so this isn't exactly unprecedented. In fact, we have a lot more control over the data sent in this case, so it's actually strictly better from a privacy perspective than other expando implementations.\nAs for implementation, rather than an annoying pop-up or notification I strongly recommend embedding any consent requests within the expando itself. (Probably as a simple one-line explanation with yes/no buttons, with a link to more information on exactly what information is included in the analytics data.) This would be much more user-friendly, and makes the association between expanded content and request for consent more clear.\nWhatever button the user clicks, change the relevant setting don't bother them again. This isn't important enough to be worth asking more than once. Maybe add a gear icon at the bottom of the expando linking to the relevant settings page (maybe for all expandos, as I think that's just good UX in general).\nAlso, we need to make sure we respect incognito mode and avoid sending analytics data or prompting the user when that mode is active.\nIf, in the future, we end up implementing this for other expandos, there should also be a global setting to toggle everything on or off (and maybe an additional button for the consent requests to easily access that setting).. Yeah, that's starting to get a bit complicated for a Regex. Certainly still doable, but it might be cleaner if I used a real URL parser. Is https://developer.mozilla.org/en-US/docs/Web/API/URL an option, or does RES need to support older browsers?\n. Ah, thanks. I was having trouble finding a place with a lot of Derpibooru images to test on. (/r/mylittlepony usually only has a lot of Derpibooru images immediately after a new episode comes out). I'll definitely give the duplicate_of bit a shot.\n. Yeah, seems reasonable...\n. Yeah, I think I'll probably just use URL then. It's supported in everything but IE.\n. Just in case it's not clear, resolve here was calling the handleInfo method, so exceptions thrown from that method were being caught by this try catch block here, instead of bubbling up and being shown in the developer console.\n. No, they don't. My guess is they wanted to make it possible to check the status of duplicate images.\n. Thanks for the tip. I'll fix this over the weekend.\n. Ah, okay. Yeah, definitely mention that in example.js; better documentation will help prevent others from making the same mistake in the future.\n. @andytuba Are you sure this code is actually changing the OP's link? It looks to me like it's just setting the link for clicking the thumbnail to be the same as the link for clicking the title of the post. (Which should do nothing, unless I'm mistaken, since that link should already match the OP's link, right?)\nThis code seems to be in several different host modules. Any idea what it's for?\n. To me, \"Set as default\" strongly implies that this is persistent behavior. So my take is that it should either be made persistent, or the text should be re-worded. (Or as a third option, the feature could just be removed. I'm not actually sure how useful a \"default\" playback rate that only affects the current page would be.)\n. Pretty sure this is actually restricting all builds/tests to only those branches, not just deploys, right?\n. FYI, JPM's requirement for Semver is documented here: https://developer.mozilla.org/en-US/Add-ons/SDK/Tools/package_json\n. Might want to use postversion for this, so that build/version.js isn't using the old version when creating the changelog file. Although, I guess that might mess up the tagging? Hmm... does this work the way I'm imagining it does?\n. You should just be able to use process.env.npm_package_version here. See: https://docs.npmjs.com/misc/scripts#packagejson-vars\n. Ah, really? Somebody needs to tell npm to update their docs:\n\npreversion, version: Run BEFORE bump the package version\n\n:stuck_out_tongue_winking_eye: \n. Oh. Haha. They just did: https://github.com/npm/npm/commit/c565d893a38efb6006e841450503329c9e58f100\n. I guess import/no-commonjs can be removed now since you're using ES6 imports?\n. Probably a good idea to extract this to a method.\n. In my mind that warning isn't an excuse for extensions to misbehave (by saving browsing history even when users have implicitly requested not to have that data saved), it's just a warning to users that some extensions might and Chrome has no way of preventing it, short of disabling the extension entirely.\n. Honestly this Regex looks to be getting a bit bloated to the point where it's becoming difficult to read. Maybe it's time to drop the Regex here and use URL or something like that instead? (Does URL work in Edge?) Or maybe it could be broken up into a few smaller Regular Expressions? Just a thought...\n. Couldn't this be made a bit more restrictive, like the other permissions above it? (I.E. https://xkcd.com/*/info.0.json)\n. ",
    "prech": "Would highly appreciate this feature, please.\nCurrently resorting to manually inserting CSS snippets to hide those users and avoid harassment, so something more convenient/native would be greatly appreciated!. Would highly appreciate this feature, please.\nCurrently resorting to manually inserting CSS snippets to hide those users and avoid harassment, so something more convenient/native would be greatly appreciated!. I'd very much like to see this \"block user\" feature available in the User Info hover.\nRather than having to wait or find the user to somehow make his/her way into my inbox, I've very much appreciate a way to block the user just in the thread or subreddit.\nThank you!\n. I'd very much like to see this \"block user\" feature available in the User Info hover.\nRather than having to wait or find the user to somehow make his/her way into my inbox, I've very much appreciate a way to block the user just in the thread or subreddit.\nThank you!\n. Looking forward to this feature, thanks for keeping it alive\n. Looking forward to this feature, thanks for keeping it alive\n. ",
    "abdulrahmanosoble": "I cannot reproduce the issue. I created a subreddit and sent a message to an admin through modmail. The name displays red background and white text and during hover it changes to dark red background (unlike OP example where it displays with white background and dark red text that changes during hover to dark red background).\nI tested on Mac with the latest versions of Chrome and RES just as OP did. I'll try to find a way to reproduce it. Meanwhile if anyone else figures it out please let me know.\n. ",
    "perry-mitchell": "Wow, you guys are definitely on top of this. We'll be adding proper API support for our shots very soon, and with that most likely a PR for the enhancement suite.\n. ",
    "Antrikshy": "For anybody who decides to tackle, this one is tricky because RES uses this library to parse Reddit's Markdown, which is a JavaScript port of this parser. The latter has support for the no-leading-slashes case, but the JS port does not, and seems to be a dead project.. Verified @erikdesjardins's regex.\n. Verified @erikdesjardins's regex.\n. Does this involve anything beyond replacing position: fixed to position: sticky in betteReddit.js? There are five instances in there for the various components that get pinned.. I tried replacing the call to showNavigator with commentNav().select.value = 'IAmA';. While this updates the value of the select, it does not trigger anything along with it, and the navigator arrows don't appear. I added a call to changeCategory right after it, which results in the same behavior as my changes but without the suppressAutoScroll variable. \nThe reason I pass the suppressor around is that without it, the page otherwise auto-scrolls to the first comment (as determined by the navigator). This is expected to happen after the user manually selects \"IAmA\", but it's jarring when it happens on page load, forcing the user to scroll up to see the post title and body this way.\nWith the suppression argument, the auto scrolling is not triggered, giving the user time to scroll down to the comments, and the navigator is then ready for them to use.. Hey, perfect! That also resolves the various failing tests that I was not looking forward to fixing. Still think the option isn't required? Not that I can think of an edge case when someone would want to turn it off. I added it initially because I didn't know it would be so easy to roll it up into the \"show by default\" option.. I see the dumb thing I did that's causing that integration test to fail. Gotta move the call to resetNavigator.. I reverted the get-posts logic back, re-added a conditional that I removed before that caused Flow checks to fail.\nI also enabled IAmA mode on r/casualiama, as #1442 said. I forgot to do this before.. True! I should get more well-versed in regex.\n. I don't get why we'd assign _posts[currentCategory] = ... : sortTypes[currentCategory].. Will do, but does that matter? Doesn't the user need to click on one of the \"navigate by\" buttons to show the navigator if it isn't shown by default? I don't use the feature much, so I might be missing something.. I think I found it like this, but ok!. Some change along the way prevented the navigation buttons from activating when IAmA mode was activated quietly.. Oh, I forgot that this change you suggested causes the flow check to fail with really cryptic messages.. Can you correct the typo? Did you mean to set it to a reasonable default like _posts[currentCategory] = sortTypes[currentCategory] ? sortTypes[currentCategory].getPosts() : {};?\nAlso, something causes the scroll to only be suppressed when \"IAmA\" is pre-set. I removed the empty option and navigated to a non-AMA page. \"submitter\" was selected, and the page did jump. I could dig deeper and clean it up, but could we do that as a separate PR? It's quite a bit of refactoring, and I'd have to understand the module better to really test it. \nAlso, now that I think about it, what would you like to default the option to, if I were to remove the empty option?. ",
    "tankorsmash": "Thanks everyone!. ",
    "madbook": ":+1: \n. ",
    "pll33": "This should be closed since PR #2366 was merged right? @erikdesjardins\nJust looking for some other things to do :). Added inline CSS for the preview row to flex-wrap so the new button gets pushed down to the next line if the tag text is too long:\nWithout flex-wrap:\n\nWith flex-wrap:\n\n. When should tags be built? It currently looks like it's being rebuilt every single time the table needs to be drawn. So that's kind of excessive? \nWhen the #tagFilter select is created initially, it's not aware of the tags since those haven't been built yet. So should I build the tags once only when the dashboard functionality is being added (in function addDashboardFunctionality instead of function drawUserTagTable) and then load those same tags every time the table needs to be redrawn? (I'm guessing I would have to pass them to drawUserTagTable as function args?)\nAdditionally should the tagged users option never be shown if there are no tagged users, or should it only show all users at first, initially by default, when there are no tagged users? The latter of which the user can select 'tagged users' but it will still only show an empty table. . Would \"save as preset\" also save that tag to the current selected user, or would saving it only append that to the presets in the dialog and the presets table in the settings console?. Is there a way to conditionally include the presets row in the dialog? I tried something like this within the body assignment but it wouldn't load the dialog even though the HTML immediately after assignment looked completely fine. \n${presetTags.length > 0 && string._html`\n    <div class=\"fieldPair\">\n        <label class=\"fieldPair-label\" for=\"userTaggerPresetTags\">Presets</label>\n        <span id=\"userTaggerPresetTags\"></span>\n    </div>`\n}\nedit: Though this would make it a little harder to append a preset from the \"save as preset\" button. How should the alert be set up?. Should I keep that else if for the sake of readability, or remove it since the next else is optionValue = input.value anyways?. The fieldPair won't immediately show when a user clicks 'save as preset' without refreshing the dialog. I was thinking of removing class=\"hidden\" with classList.remove() from elements.presetTag.parentElement when saveAs is clicked but is there an alternate/simpler way you were thinking?. display:flex in fieldPair is overriding display:none in the hidden attribute which is why I was thinking to set up a hidden class instead. \nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden (see note). Actually right now it seems like you're able to set up a preset tag in the settings console with no text. That will show up in the dialog under presets but tagged users won't show up on the dashboard since the text is considered null. \nSo should users be able to set up tags without text, or if not, is there a way to validate that the fields in the preset table in the userTagger settings console are not empty?\nAdditionally it seems somewhere in my changes I have introduced a new bug that allows you to save a tag without any text. I don't really see where my additions to userTagger would cause this to happen but I'm taking a closer look. Also I'm not getting that issue in v5.8.6 on Chrome though I haven't checked out v5.9.0 or master yet.. Update: Looks like that bug is in master too but I've only tested it out with Firefox so far. . ",
    "helarqjsc": "Any reason why it hasn't been merged yet? Is there a problem with the code? It's been half a year, but #2367 issue still persists, even though there is a pull requests that fixes it.\n. ",
    "kAbhi": "this seems to be fixed. Confirmation provided: https://www.reddit.com/r/toolbox/comments/3frjkb/suggestion_character_countwarning_in_the_ban/ctrccf4\n. ",
    "br4nnigan": "Thank you guys for all the feedback! Will try to incorporate everything.\n. Allright it's all done. Do i have to do anything now? I'm sorry, i've never done this sort of collaboration before :) I'm enjoying it a lot :) Thank you guys/girls.\n. Awesome! Very welcome.\n. > this is a pretty niche need \npersonally I find it a major UI improvement\n\nthat could be easily satisfied with a CSS snippet \n\nI used this with the Stylish addon for quite some time, but how many users are even aware of the possibility? The module just takes this snippet and adds an option.\n\ndefault value of this \n\nYeah true, I also had that concern. \nAnyway, take it or leave it ;). > this is a pretty niche need \npersonally I find it a major UI improvement\n\nthat could be easily satisfied with a CSS snippet \n\nI used this with the Stylish addon for quite some time, but how many users are even aware of the possibility? The module just takes this snippet and adds an option.\n\ndefault value of this \n\nYeah true, I also had that concern. \nAnyway, take it or leave it ;). watchForElement seems super useful especially\n. I've been aware of the problem you mention, however the other way creates other problem cases. I've put some more thought into it and came to this conclusion:\nI think we can agree that if after \"x-post\" something with the pattern of r/string is found, we can be pretty sure we found gold. That's priority 1.\nSuggested priority 2: if we find one or two words after the \"x-post\" part we can be pretty sure it's either something like \" from askReddit\" or just the subreddit. \nProblemematic are cases with more than 2 words after the x-post. We could guess the subreddit is probably the last word, but i've already encountered a case where this would fail. I'd say we just skip those. Should be pretty rare.\nI made some tests which showed prio 1 would be 80-90% of all cases, prio 2 the rest. In about 200 x-post finds none failed (only tested the regex programatically, no manual evaluation)\ntry yourself\nhttps://www.reddit.com/search?q=x-post+subreddit%3Abooks&restrict_sr=&sort=top&t=all\n```\nvar el = document.querySelectorAll(\".search-title\");\nvar xpost_re      = /(x-?post\\S)(.+)/i;\nvar xpost_from_re = /^(\\s+\\S+)?\\s+\\/?([a-zA-Z0-9_]+)(([)]}])|(\\S$))/i;\nvar subreddit_re  = /r\\/([a-zA-Z0-9_]+)/i; \nvar s;\nvar success = {\n    \"xpost_re\": 0,\n    \"xpost_from_re\": 0,\n    \"subreddit_re\": 0\n};\nfor (var i = 0; i < el.length; i++) {\nif ( el[i].textContent.match(xpost_re) ){\n    success[\"xpost_re\"]++;\n    s = el[i].textContent.match(xpost_re)[2];\n    if ( s.match(subreddit_re) ){\n        success[\"subreddit_re\"]++;\n    } \n    else if ( s.match(xpost_from_re) ){\n        success[\"xpost_from_re\"]++;\n    }\n}\n\n}\nconsole.log(success);\n```\nwill commit later\n. I know i had some reason not to do that, however i can't recall it... i'll change it anyway.\n. ",
    "sfoop": "The quick answer is you just need to put an iframe tag inside the div, where the src URL is the Miiverse post (which is a data- attrib on the div) with /embed added to path. I'd have to look into trying that later.\nEdit: I wrote that thinking about the situation of enabling the DIV that's included with the embed code you copy & paste into a web page, in this case we just add /embed to the URL and make an IFRAME.\n. I updated the code to generate an IFRAME for Firefox. I didn't actually test it in Firefox though (I've never done extension development there), but I forced the code to run in Safari and it worked as expected.\n. ",
    "JordanDevelop": "I hate to be a bother, but is anything else needed on my end to successfully merge? \n. It's seems it's not working anymore for some reason. I must have mistakenly made a change on my server. I have a feeling I know what it may be.\nDo you have any idea why console would be saying this?\nshowImages: error detecting image expando for https://vidly.io/p/29\n. Here's an image of it working:\n\n. @erikdesjardins what seems to not work?\n. @erikdesjardins Thanks for the tip.\n. @andytuba any updates?\n. @andytuba can you try clearing your cache?\n. Also, I haven't redirected HTTP to HTTPS yet. \n. thanks for mentioning, but that doesn't seem to show any progress.\n@andytuba That's because I deleted it before you had a chance to look at it. This error still holds truth with: showImages: error detecting image expando for https://vidly.io/p/15\n. ",
    "DrLeh": "It seems like clippy isn't working at all right now.\nIf I'm not mistaken, I believe the && should really be an || on this line: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/e6238bd47e9c4b656b3d563978a4fbb82657c7ee/lib/modules/showImages.js#L1781 \nThis would make it skip clippy text if either clippy is set to false or the title has already been applied.\nIn the javascript console:\nvar module={options:{clippy:{value:false}}};\nelem = {title:''}\nif (!module.options.clippy.value && elem.title) console.log('skipped 1');\nif (!module.options.clippy.value || elem.title) console.log('skipped 2');\n\nskipped 2\n. This got left out of 4.6.1, any reason?\n. \n",
    "sangaline": "It's tested and working with the site.\n\n. It's tested and working with the site.\n\n. ",
    "membrq": "Can I claim this?. ",
    "joulay": "Hi, is this still available?. ",
    "callahad": "That makes sense -- want me to split this into two PRs, or would you like to just cherry pick the getURL commit while we test the other?honestbleeps/Reddit-Enhancement-Suite wrote:I should add, just for clarity: the manifest changes are unquestionably better, it's just a matter of whether it will cause us a gigantic flurry of tech support requests due to the security popup people will see about \"new\" permissions.\n\u2014Reply to this email directly or view it on GitHub.\n. Opened #2464 instead. Closing this. We can revisit the manifest later. I suspect the explicit http:// permissions will need to get updated as TLS becomes more common, so maybe we could roll this in whenever that happens. :)\n. I literally haven't touched Opera 12 in years, and don't have any experience or knowledge re: debugging add-ons for it, so this is untested. But logically, it should work. Force-pushed a new rev of the patch.\n. Thanks! :+1: \n. As far as I can tell, Opera 12 doesn't seem to work at all. Neither self-built master nor v4.5.4 from the Opera add-ons site run successfully.\nThis might be a larger policy discussion, but... maybe it's time to drop support for Opera 12? It hasn't seen a security patch in over a year, comments indicate that RES hasn't worked since at least April, and virtually no one seems to be complaining in the issues.\nHeck Given the lack of updates, I'd personally feel it's irresponsible to continue supporting users on that platform, but that's your call. :)\nShort term, maybe we could merge this since it certainly can't break Opera support any more than it's currently broken, and revisit Opera altogether in another bug?\n. bump?\n. ",
    "jwdeitch": "gotcha, thanks!\n. ",
    "theGeekPirate": "@allthefoxes Treat all text the same way you would code.\nI would remove the www's as well, but those are handled individually by most HTTP servers, and I wouldn't want to risk them not working in the future because of it.\n. https://developer.apple.com/devcenter/safari/index.action redirects to https://developer.apple.com/safari/, but the instructions contained are no longer correct as the site seems to have changed. Needs to be updated by someone who understands this process.\nhttps://developer.apple.com/programs/safari also now redirects to https://developer.apple.com/programs/, and should be looked into by someone more knowledgeable, as I cannot find where to sign up for a free account as instructed.\nFor the meantime, those sections are untouched and incorrect.\n. @allthefoxes It is a form of code, as it affects where the URL leads to. http://example.com/blog does not necessarily lead to http://example.com/blog/, not to mention forcing redirects where they aren't needed.\n. @honestbleeps Right, which is what my last commit has changed, it simply avoids all redirects, regardless of a trailing slash or not (with preference to without).\n. The larger issue at this point is that your documentation is incorrect RE: Apple Developer program, as I commented above.\n. ",
    "zjaved": "hey andy. could you tell me what the Conern-MediaHost label means and what we should do to fix it? We really want to have this pulled. Thanks!\n. ",
    "withmorten": "Arrows for archived posts are visible, you are correct. I was wondering why they suddenly were.\nExample archived post here: https://www.reddit.com/r/gallifrey/comments/2kbbun/doctor_who_8x10_in_the_forest_of_the_night/\n. ",
    "LiterallyWTH": "This entire branch is devoted to the dynamic chunking:\nhttps://github.com/LiterallyWTH/reddit-moderator-toolbox/tree/dynamic-chunks\nYou can just monitor that to stay up to date as I test (and refactor?) it.  You can performance test it on arrays inside or out of RES or toolbox.  I'll be more than happy to put together a PR if you guys like it.\n. The precalculated chunk size is to account for other processes.  If each one runs how long we give it, it's not aware of the other render calls callbacks.  Each one could take the time calculated for a given frame rate.\nBy pre-calculating chunk size based on time since the last call we naturally account for other the time needed by anything else on the render queue.\nIdeally, we maintain a global render queue, which I believe fastDOM does (global WRT fastDOM), but RES has a unique need where we want to render everything that the first x elements need at once, like tags and vote totals etc...  We want to chunk the top and render the first few fully, and work the way down the page.  The strategies to manage this wouldn't be too hard to work out but, this does so inherently.\n. Ah, looks great.  The pseudo frame-start-time is gotten and passed synchronously to the setTimeout callback which would not take into account outside processes.  It should be set when setTimeout is called:\njavascript\nconst raf = (callback => { const startTime = now(); setTimeout(() => callback(startTime), 1000 / framerate)});\nThough Babel will polyfill RAF for us right, so for RES it's not as important, and it's outside of our scope of support for TB so we can probably drop it altogether.\nYou're right about RAF.  RAF callbacks are differed to an animation queue and I believe the API estimates when to pause the normal eventloop queue and call the animation callback queue instead.  Anything else that executed prior but requires rendering is rendered after RAF callbacks prior to paint.\nThis might help show what's going on:\n``` javascript\nx = y = 0, t = performance.now();\nfunction st(){setTimeout(function(){\n    if(x > 25) return\n    setTimeout(function(){\n        console.log('setTimeout: ',{sto:x++,raf:y,time:(performance.now()- t).toFixed(2) });\n    })\n    st();\n    requestAnimationFrame(function(time){\n        console.log('requestAnimationFrame: ',{sto:x,raf:y++,time:(time - t).toFixed(2) });\n    });\n})}\nst();\n```\nBecause they are differed and the frame time comes from the an independent number irrispective of RAF calls I don't think we need the duty coefficient anymore;  I think it'll cut off at the right time even if other processes are causing us to drop frames.\n*edit: sobriety\n. No problem!  This guy was fun.\n. ",
    "Cervenka": "Hi @andytuba, I included an additional host-file for uploadly.com. I hope I got the tabs right this time and that this is in time for the next release. Thank you!\n. ",
    "rapkin": "Hello! Please tell me, if it possible, when this code will be included into release?\n. @Ajedi32 Thanks for your reply, it's very helpful for me.\n. @Ajedi32 Is there any way to get this released faster? Reddit moderators ban posts with iloopit.net links due to RES incompatibility. Our users upset about it. We announced to them that integration made. But there was few months ago, and this still not online :(\n. @Ajedi32 can you describe what means \"OP's link\"? we are talking about line 57?\n. @andytuba Hello! What are the next steps? Please advise.\nWe have got tons of complains from the users about RES incompatibility :( That's why we'd be happy to get this released asap.\nBest regards\n. @andytuba Hi, we have some issues in this release (4.6.1).\nView images (inline image viewer) does not work for for iloopit.net (and other media hosts)\nExample: https://www.reddit.com/domain/iloopit.net/\nI click View images  tab - none gets displayed http://puu.sh/nJOzQ/f8a4e3819c.png \nPlugin version is correct, 4.6.1. browser Firefox/Chrome, \"inline image viewer\" and \"iloopit\" are switched to \"On\" in settings.\nIt looks like a bugs in plugin. Maybe will be better to create issue, what do you think?\n. @honestbleeps Those are  html5 looping  (5 sec max) mp4s for desktop and gifs for mobile devices. mp4s are used just because of the format that\u2019s more lightweight vs gif. But the service is positioned as gif maker/gif hosting for the users . So I guess it\u2019s fair to open them with \u2018view images\u2019\n. @erikdesjardins Thanks for your suggestions! With this option \"view images\" works.\n. @andytuba Could you please merge it to release/4.6.1 as well? Feature will improve performance.\n. @erikdesjardins Thanks for your suggestions. I made some changes, looks good?\n. @andytuba @Ajedi32 any updates? maybe if I delete code on line 57, does it helps?\n. ",
    "gofirst2220": "Before the gifs were working on yesterday's hotfix. I'm guessing something changed in today's hotfix update\n. Before the gifs were working on yesterday's hotfix. I'm guessing something changed in today's hotfix update\n. ",
    "tswaters": "There's no way to remove the callbacks aside from modifying RESUtils.watchers.siteTable... so if someone disables nightMode the callback would stay until they refreshed.\nA cool pattern to deal with this sort of thing I've seen was with atom.io -- all the events they attach return a Disposable which can be used to remove the listener.\nI could enhance the watchForElement api... right now it doesn't return anything, so it could return a function that when called would remove the callback (by splicing on the index).... stay tuned!\n. There's no way to remove the callbacks aside from modifying RESUtils.watchers.siteTable... so if someone disables nightMode the callback would stay until they refreshed.\nA cool pattern to deal with this sort of thing I've seen was with atom.io -- all the events they attach return a Disposable which can be used to remove the listener.\nI could enhance the watchForElement api... right now it doesn't return anything, so it could return a function that when called would remove the callback (by splicing on the index).... stay tuned!\n. Ok, well, poor-man's disposable pattern coming right up!\nAlso, I should note there seems to be a few bugs around the initial toggle to true.  It seems isNightModeOn was returning true even though it wasn't on.  I had to refresh for it to come around.\n. Ok, well, poor-man's disposable pattern coming right up!\nAlso, I should note there seems to be a few bugs around the initial toggle to true.  It seems isNightModeOn was returning true even though it wasn't on.  I had to refresh for it to come around.\n. Inside the streamable iframe, there is a listener that accepts play/pause requests - this raises an error videojs is not defined.  If this was changed to player it appears to work.  This is on streamable to fix; RES can't modify an iframe... it's already doing everything it can posting {method: \"pause\"} to the iframe.... streamable appears to recognize this but instead of pausing, it raises an error.\n. ",
    "bmalnad": "I cleaned up the issues you mentioned.  Let me know if you notice anything else.  Thanks!\n. I cleaned up the issues you mentioned.  Let me know if you notice anything else.  Thanks!\n. I cleaned up the issues you mentioned.  Let me know if you notice anything else.  Thanks!\n. Disabling it by default is probably a good idea. \n. Disabling it by default is probably a good idea. \n. Disabling it by default is probably a good idea. \n. ",
    "cubrr": "Sorry. I didn't know about /r/RESissues.\nHow can I get the \"latest\" version? The one available from the website is 4.5.4.1-signed.\n. Sorry. I didn't know about /r/RESissues.\nHow can I get the \"latest\" version? The one available from the website is 4.5.4.1-signed.\n. Sorry. I didn't know about /r/RESissues.\nHow can I get the \"latest\" version? The one available from the website is 4.5.4.1-signed.\n. Okay, thank you.\n. Okay, thank you.\n. ",
    "lamby": "@andytuba\n\nhook into like the visibility of a \"saving...\" throbber.\n[..]\nseparate option for this behavior.\n\nWhy a separate option if it were robust? I mean, is there really a genuine use-case to be able to press ctrl+enter very fast to get duplicate comments..?\n. > I'm thinking about potential failures, like reddit 502's, and now your text is gone\nExactly. Do I not mention this above? :)\n\nin case something unanticipated breaks \n\nThat certainly makes sense, but I was mostly asking for clarity of communication in some kind of  hypothetical 100% robust and bug-free scenario.\n. This version, at least, won't delete your comment..\n. ",
    "darkred": "So, if I got this right,\nI do this the 1st time:\n```\ngit clone https://github.com/mozilla/jpm\ncd jpm\nnpm install \nnpm link\ncd ..\ngit clone https://github.com/honestbleeps/Reddit-Enhancement-Suite\ncd XPI\nnpm install\ngit clone https://github.com/gulpjs/gulp\ncd gulp\nnpm install -g gulp\n```\nand after every time I do a git pull in the Reddit-Enhancement-Suite directory: ??\ngulp build -b Firefox \ncd dist/XPI \njpm xpi\n\n\u0399s gulp build -b Firefox really necessary in order to build the xpi (not run it in a new profile)? \nIsn't jpm sufficient?\nAnd, what's the purpose of the above command?\n. Thanks for your reply.\nSo, I tried following the above procedure, but, after:\ngit clone https://github.com/honestbleeps/Reddit-Enhancement-Suite\ncd XPI\nnpm install\nI get npm WARN EPACKAGEJSON reddit_res@4.5.4 No repository field\n(using npm 3.3.12  (node.js 5.1.0 x64) in win 10 x64)\n. Thanks.\nSo, its:\ngit clone https://github.com/honestbleeps/Reddit-Enhancement-Suite\ncd Reddit-Enhancement-Suite/\nnpm install\nUnfortunately, npm install showed various WARN and ERR messages:\nhttp://pastebin.com/raw.php?i=471JZVQ4\nDo I need to install other packages too?\nOr I may just continue with gulp?\n. Thank you for replying\nSo, here is the complete proceduce I've followed::\n```\ngit clone https://github.com/mozilla/jpm\ncd jpm\nnpm install \nnpm link\ncd ..\ngit clone https://github.com/honestbleeps/Reddit-Enhancement-Suite\ncd Reddit-Enhancement-Suite/\nnpm install\n```\nThen: \ngit pull, \ndeleted the Reddit-Enhancement-Suite/node_modules directory, \nand then re-run \nnpm install\nUnfortunately I got various errors. Here is the log: http://pastebin.com/raw.php?i=1XBtA1M7\n\nThen, I did\ngit clone https://github.com/gulpjs/gulp\ncd gulp\nnpm install -g gulp\nnpm link\nand finally\ncd ../Reddit-Enhancement-Suite/\ngulp build -b Firefox \ncd dist/XPI \njpm xpi\nbut here is what I got\n[01:54:25] Requiring external module babel-core/register\n[01:54:26] Using gulpfile ~\\Desktop\\New folder (2)\\Reddit-Enhancement-Suite\\gulpfile.babel.js\n[01:54:26] Starting 'babel'...\n[01:54:26] 'babel' errored after 9.44 ms\n[01:54:26] TypeError: Cannot read property 'dests' of undefined\n    at getBuildDir (gulpfile.babel.js:112:60)\n    at gulpfile.babel.js:119:41\n    at Array.reduce (native)\n    at pipeToBrowsers (gulpfile.babel.js:118:18)\n    at Gulp.<anonymous> (gulpfile.babel.js:144:2)\n    at module.exports (C:\\Users\\Kostas\\Desktop\\New folder (2)\\Reddit-Enhancement-Suite\\node_modules\\orchestrator\\lib\\runTask.js:34:7)\n    at Gulp.Orchestrator._runTask (C:\\Users\\Kostas\\Desktop\\New folder (2)\\Reddit-Enhancement-Suite\\node_modules\\orchestrator\\index.js:273:3)\n    at Gulp.Orchestrator._runStep (C:\\Users\\Kostas\\Desktop\\New folder (2)\\Reddit-Enhancement-Suite\\node_modules\\orchestrator\\index.js:214:10)\n    at Gulp.Orchestrator.start (C:\\Users\\Kostas\\Desktop\\New folder (2)\\Reddit-Enhancement-Suite\\node_modules\\orchestrator\\index.js:134:8)\n    at C:\\Users\\Kostas\\Desktop\\New folder (2)\\gulp\\bin\\gulp.js:129:20\n    at doNTCallback0 (node.js:430:9)\n    at process._tickCallback (node.js:359:13)\nand there wasn't any dist directory created,\nand so I can't do:\ncd dist/XPI \njpm xpi\n. Could someone please help me with this? What's wrong in the procedure I followed?\n. > Could you make this kind of post to /r/RESissues in the future? We prefer restricting GitHub issues to todo tasks.\nSure (and sorry, I didn't know that)\n\nDoes the order of filters matter for your user experience, or are you just noting the inconsistency between the browsers?\n\nYes, the order matters for me because I have my filters in Firefox like this:\n\nbecause I almost never disable the filters Humor and Repack,\nbut I frequently toggle the Discussion and NFO ones (the NFO one more frequently than Discussion).\n. > Maybe I should improve the issue template message to not just 'Is RES broken?' but 'Is some feature of RES not working for you?'\nGood idea! \n\nThank you for the suggestion.\nSo, I tried your instructions converting my 4 filters intro a single custom filter.\nbut I'd definitely prefer using the filterline instead of the FilteReddit's flair filters. \nbecause I find it easier to use:\n- I can toggle each one separately,\n- the status for each of them is always visible (if you toggle the filterline), and\n- because the toggle you suggested requires  to refresh the page each time you enable/disable it,\nwhile the filterline filters are applied immediately.\n\nAnd maybe I wasn't accurate but, when saying \"I never disable those filters\", it wasn't meant literally, \nit's more \"almost never/rarely\" \nIn fact the order I have for those 4 filters is from \"the least used --> the most used\".. First of all, thanks a lot for your work.\nJust one thing:\nI just tried 5.9.5beta in Firefox, and I find the displaying of full regex as filter titles. difficult to distinguish, something which I think is unnecessary when using simple string filters, e.g. 'Humor', 'Discussion', and 'NFO' :\n\nWhat about displaying just the string, when the filter is just a string(=a simple regex containing just a string), like in the previous version?\n\nIn the above example, I have simply entered e.g. 'NFO' in the filter box (screenshot) (as well as 'Humor' and 'Discussion') and so \nto display: link flair NFO, \ninstead of link flair /^NFO$/i\nFor reference, the full regex can already be displayed next to each filtered post, via toggling the \"Show filter reason\" option, whenever the user wants to check the applied filters. \n  . Thanks a lot for implementing my suggestion, @larsjohnsen!\n  . ",
    "PureTryOut": "After a browser restart (I had some important tabs open so couldn't just close it) it worked again, not sure what happened.\n. ",
    "corylulu": ":haircut: \n. @githue Okay, so it's fixed there as well, then problem solved. I submitted this a while back (https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2548), but it looks like you implemented a fix on your own afterwards when you reworked that code. \n. Updated and I was testing using Chrome's console for general benchmarking of the regular expression using a script like this: http://pastie.org/10836388\nThe expressions themselves I tested on https://regex101.com/#javascript\nDon't have a full build tested, however. \n. @erikdesjardins Okay, I've made that change. \n. @erikdesjardins Does this look good to you now? \n. @andytuba, Can you elaborate a bit more? Don't have a firm grasp of everything going on in regards to that. \n. @andytuba Ahh, got it. Updated that block.\n. @andytuba Ahh, got it. Updated that block.\n. Umm, maybe an alternative default could be setup for when GoMode is / isn't enabled, or simply strip the modifier keys out of the GoMode hotkeys when enabled. Think having to include a modifier kinda defeats the purpose of using GoMode. \nAny oppositions to something like that? Or alternative ideas?. @Ajedi32 Well if that's the case, there are plenty of other features that wouldn't work as well. Doubtful mobile users are using RES, though... Am I wrong in thinking that? \n@andytuba Okay, well I'll see if I can get some time on Monday to write in those options... but yeah, I'm not a big fan of the current system. I originally though to make it a click toggle menu, but it just didn't match the other similar elements... This change makes it identical to how the Mail button works. . @andytuba Updated to add those options. Lmk if I need to tweak anything. All worked from my tests.. Test failure due to behavior change of #RESConsoleContainer, but I believe it's working as intended. . @erikdesjardins Any way this can get pushed to the next update? It's a pretty simple fix that caused me quite a few problems. It's particularly problematic for anyone using the RES multi-reddits feature because those menu's immediately show, so it's very easy for the first one that gets hovered to be the incorrect one. \n. https://gfycat.com/VastUnluckyAnemone\nHere's the bug in question. I have accidently deleted the wrong subs/multi's a couple times from this :( \n@andytuba Can you take a look at this? . I'd think it would also be good to separate out tag, newcommentcount, commentHidePersistor, and subredditsLastViewed data from the rest(since those are all frequently changing) and load them in as parts. Then you can hash the settings parts and compare it before uploading/downloading to save a lot of bandwidth.  \nYou could also then make tag (with option to exclude users with only vote data), newcommentcount, commentHidePersistor, and subredditsLastViewed data optional to sync as well (which might be appreciated by people with metered connections).\nA general cleanup of some data seems needed as well as mentioned in #4325\n. @erikdesjardins Nice, might be a good idea to store an md5 of the data to help safe guard against a bad backup/restore if it's not already there. . @erikdesjardins What do I need to do to make this work if I'm building it myself? Should I need a specific chrome.pem or anything while packing the extension or will I need to supply my own client ID? \nI can't get it to not show Error in target's \"authFlow\" handler: Authorization page could not be loaded.. Just to be sure, the backups are still be triggered by the page load though, just sent to the background. Correct? Otherwise, if two machines are left on, they'll constantly backup over each other. \nAlso, would be handy to save a marker (like an ip address) to be saved alongside a backup to indicate which machine the backup originated from. That was the automatic restore can know to ignore backups from the same machine when doing an automatic restore. \nHad that happen to me yesterday and not sure why. It wanted to restore to a backup made the prior day. It was the only machine setup for auto backups, which case, should never need to restore automatically. \nAlso, I kept getting a prompt to restore to that point even after dismissing it. I'd think that dismissing a restore should persist, rename that restore point to res-storage-conflict-<origin-ip>.json, and then do an auto backup. . Umm, well it was a sizeable portion of my save files and nothing besides the manual removal of it got rid of it. So I'd imagine plenty of others have a similar issue.. Auto-backup to Dropbox forgets my home PC and gives me a prompt once a day, but my work PC it always remembers. Also this isn't between sessions or anything, my home PC never turns off and always has browsers opened. . @larsjohnsen I am logged into dropbox.com, though. Also tried cleaning up my devices list on their site as well. Still got the prompt though. . Yeah, the problem never went away for me... I just moved it to Google Drive and it worked fine. I did everything I could think of to stop it. No luck. . Can't figure out what failed on the test here. @erikdesjardins Wasn't sure if it would be desireable to make another link surrounding it to still make it clickable or not, but just to get a quick fix, I just pushed it like this. What do you think? I didn't wanna make it a sluggish operation. . @erikdesjardins Wasn't sure if it would be desireable to make another link surrounding it to still make it clickable or not, but just to get a quick fix, I just pushed it like this. What do you think? I didn't wanna make it a sluggish operation. . Okay, I instead grouped all the options together and at the bottom.\n\n. Yay! That worked :). Looks like this will need to be updated for #4850 once that gets merged. I have another branch that looks like:\n\nConverting it to TimeAgo rather than a fixed date. I was thinking of making this an option if you'd guys wanna merge it... I can also make it the default behavior. Would like to get opinions on that. I find it much more useful than just a date stamp with no hover to get the full date/time. \njs\nif (module.options.videoUploaded.value) {\n    const uploaded = new Date(snippet.publishedAt); // 2016-01-27T05:49:48.000Z\n    const dt = `${uploaded.toDateString()} ${uploaded.toTimeString()}`;\n    const timeAgo = i18n('submitHelperTimeAgo', formatDateDiff(uploaded));\n        // Requires using `string.safe(info.join(' '))` for `string.html` to parse it \n    info.push(`[<time title=\"${dt}\" datetime=\"${snippet.publishedAt}\" class=\"live-timestamp\">${timeAgo}</time>]`);\n}\nI'm haven't checked yet, but I'm not sure if the new html function from #4850 can parse it the same way or not since I haven't looked into it yet. My current code is:\njs\nlink.appendChild(string.html`<span class=\"gray pay-link\">${string.safe(info.join(' '))}</span>`);\nWould that just be like this?: (@erikdesjardins )\njs\nlink.appendChild(html`<span class=\"gray pay-link\">${safeParse(info.join(' ')).firstChild}</span>`);\n. Any chance this can get merged or is there a hold-up or concern? @larsjohnsen @andytuba. @larsjohnsen Sorry, I'm not sure what you are referring to exactly. . @larsjohnsen That's how it should look. Except I changed it to the <time class=\"live-timestamp\"> like shown here:\n\n. Do you worry at all that making the function just html might hurt it's searchability and might make it a bit less readable to those unfamiliar with the function? Perhaps something like htmlParse might be better. . @larsjohnsen Okay, I adjusted that, but kept 2 extra pixels of padding on the bottom since I think it's all too compact. Honestly, I think all the controls on that bar could be enlarged a tiny bit and/or add some more padding (some better icons too). If nobody is opposed to that, maybe I'll tweak that a bit next. I was tempted to adjust it all on my first pass to make it all uniform and bit easier to use, but decided against it. \nSpeaking of better icons, how would you guys feel about changing from the embedded \"Batch\" font to the 'Material Icons' font? The file size is very similar and it could be swapped out gradually since it's a different syntax, but the syntax is way more readable via code... It converts the whole name of the symbol into the symbol...\nSo to get a \u25ba symbol, instead of content: '\\f16c'; , it would just be content: 'play_arrow'. @larsjohnsen Okay, I adjusted that, but kept 2 extra pixels of padding on the bottom since I think it's all too compact. Honestly, I think all the controls on that bar could be enlarged a tiny bit and/or add some more padding (some better icons too). If nobody is opposed to that, maybe I'll tweak that a bit next. I was tempted to adjust it all on my first pass to make it all uniform and bit easier to use, but decided against it. \nSpeaking of better icons, how would you guys feel about changing from the embedded \"Batch\" font to the 'Material Icons' font? The file size is very similar and it could be swapped out gradually since it's a different syntax, but the syntax is way more readable via code... It converts the whole name of the symbol into the symbol...\nSo to get a \u25ba symbol, instead of content: '\\f16c'; , it would just be content: 'play_arrow'. @andytuba \nOld Reddit is where I've seen the issue. \nPrevious to the change: \nhttps://gfycat.com/HairyThisEelelephant\n(notice the page fully refreshes when clicking the link)\nChanged:\nhttps://gfycat.com/QueasyThoughtfulGadwall\n. @andytuba \nOld Reddit is where I've seen the issue. \nPrevious to the change: \nhttps://gfycat.com/HairyThisEelelephant\n(notice the page fully refreshes when clicking the link)\nChanged:\nhttps://gfycat.com/QueasyThoughtfulGadwall\n. @larsjohnsen Great, I wasn't sure if Wiki anchor links were handled the same way by Reddit and including refreshes, but I guess they aren't, so it's fine to only handled the #res:settings links. One thing to mention tho, Andy's point about the ctrl+click would still need to be ignored. . @larsjohnsen Great, I wasn't sure if Wiki anchor links were handled the same way by Reddit and including refreshes, but I guess they aren't, so it's fine to only handled the #res:settings links. One thing to mention tho, Andy's point about the ctrl+click would still need to be ignored. . Oh, mb, forgot about this. Thanks for adding. \ud83d\udc4d . I originally did this, but offsetWidth returns 0 because it's not visible when called, it returns properly using jquery, but then it doesn't pass the github test. I'll revise this however and find a suitable solution. \n. Oh, my mistake, but regardless, I have it working now without it. \n. @erikdesjardins Oh, didn't think to do that. I'm only used to working in strong typed languages. Not a fan of doing things weakly typed and loop + switch cases help reduce repeating code in this context. \nI'll make the change if you want, though. But almost wanna bet the loop performs better and imo strong typed methods are more readable. It is more nested though, which gets annoying. \nIt does mean though that I have to copy and paste the same code a lot more, especially when introducing more parameters... each case would need their own if statement with it's own \nsrc = '${src}&start=${params.start}';\nwhere the current method can reuse the same code for multiple cases. My way is more flexible in that regard. \n. @erikdesjardins didn't pass the checks, which is why I changed it. \n. Yeah, was debating between the two, thought 166px looks better for posts, but worse for comments... but sure... \n. I didn't like it either, but I didn't see an easy solution, so I went with essentially how everything else was working and just copied that. . I think I had originally just added a variable to the $subredditGroupDropdown containing the object. Essentially: $subredditGroupDropdown.selectedItem = obj;, but it didn't match the existing workflow, so I went with that. . Is that using the jQuery definition or predefined? I try to avoid jQuery if I can since it's not included in the new profile build, but if you'd prefer jQuery extensions, I'll just use those. . Is it all fine now?. Okay, I'll revert that part.. Any other ideas on how to best denote which options are go-mode enabled? Should I just group them better, all at the bottom of the list?\n. You're right, the ctrl-click would run, incorrectly, I'll fix that. Middle and Right clicks won't fire the event though, so those will work as intended. (Tested). const url = !e.ctrlKey && e.target instanceof HTMLAnchorElement && new URL(e.target.href);\nwould resolve Andy's concern about ignoring ctrl+clicks. ",
    "ScoreUnder": "\nI believe this is already fixed and ready to go for 4.60\n\nI checked out the release branch (there doesn't seem to be a develop branch) and I can't find a similar fix.\nThe release branch also hasn't had master merged into it so the nightmode.css file would go away anyway.\n. I suppose I could use the z-index above that, but it feels a little awkward because at that point it's no longer possible to use any more z-indexes for any other purpose. What brought the z-index to my attention was invisible hint markers in pentadactyl. I tried to fix this by setting pentadactyl hint markers to z-index 2,000,000,000 and was surprised when they were still hidden by the menu. (Then I used the inspector to find the real z-index I should be using)\n. ",
    "grafixoner": "@andytuba Hey not pushing here but am wondering about how long does it take to add a host into a release?  Only reason I'm asking is so I can set some expectations for people as this is an important component to our product right now. \nThanks\nMike\n. @andytuba Hey not pushing here but am wondering about how long does it take to add a host into a release?  Only reason I'm asking is so I can set some expectations for people as this is an important component to our product right now. \nThanks\nMike\n. Thanks for the update, I'll keep an eye on that.  \nWe are currently working with embed.ly for them to work with our videos.  Once that happens I'm hopeful that they will just display. \nThanks again.\nMike\n. Sure thing, here is where you become an embed.ly provider.  http://embed.ly/providers/new \nIf you have video players you have to make sure first everything works with player.js which also taps you into other providers as well. http://playerjs.io/\n. Hey @andytuba, we got our embed.ly working so expando is on the main post.  Would be awesome to get the RES suite in place so they work in comments. :)  Let me know if there is anything you need from my end.  Thanks!!\n. @andytuba Hey, just checking in again it's been a while since I've reached out. \nThanks\nMike\n. ",
    "gfairchild": "This has been a bug with Vidble albums for months. Does PR #2616 fix it for Vidble albums as well?\n. This has been a bug with Vidble albums for months. Will this PR fix it for Vidble albums as well?\n. It makes sense to fix that. Basically, all albums should function the same, regardless of host. Clicking on the image to take the user directly to the album anchored on the clicked image is the correct behavior.\n. ",
    "zschmidt": "It would seem that it gets more interesting! Restarting didn't fix it, but here's a new development:\nThe tab hovers at 99% CPU until it's viewed, then it drops. So the steps to reproduce are like this:\n1.) Navigate to Reddit with RES v4.6.0\n2.) CMD click on the \"Comments\" link of any post (or right click, Open Link in New Tab)\n3.) Note that Activity Monitor reports 99% CPU usage on \"Google Chrome Helper\" and Chrome's Task Manager identifies the tab that was just opened as the culprit\n4.) Navigate to the newly opened tab\n5.) Observe CPU usage drops to 0% \n. I disabled my only other extension for the above test, as well as the current test (the conflict thought occurred to me as well)\nI can confirm it happens on the following pages (without viewing the tab, of course):\n1.) Comment threads\n2.) Subreddits\n3.) The homepage (right click on favorites link), though this is probably the same as the subreddits\n4.) User pages\n5.) Wikis\nLet me know if there are other cases that I can try.\n. ",
    "legate": "I also had this issue, but it doesn't seem to happen anymore after updating to the latest stable version of Chrome (47.0.2526.111). This bug fix seems relevant.\n. ",
    "dsedivec": "\nI also had this issue, but it doesn't seem to happen anymore after updating to the latest stable version of Chrome (47.0.2526.111). This bug fix seems relevant.\n\nSame here.  I have been having this issue all week and as recently as this afternoon.  I've since upgraded Chrome to 47.0.2526.111.  Just now I opened four Reddit tabs in the background and CPU usage stayed normal.\n. > I also had this issue, but it doesn't seem to happen anymore after updating to the latest stable version of Chrome (47.0.2526.111). This bug fix seems relevant.\nSame here.  I have been having this issue all week and as recently as this afternoon.  I've since upgraded Chrome to 47.0.2526.111.  Just now I opened four Reddit tabs in the background and CPU usage stayed normal.\n. ",
    "beck": ":star: \n. Installed master, seems to be fixed.  Assuming it was corrected with https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2668\nThanks @erikdesjardins \n. There has been some cleanup & refactoring, issue seems to have been re-introduced.\nRemoving the hardcoded scroll style fixes for me: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2830\n. This issue should be reopened as a regression.\nHere is a pull to fix: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4375. Why keep the legacy branching logic at all? What would happen if it always uses the configured pref?\nI had a similar issue with the hard-coded scroll style, using the config fixed it as well:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/2830/files\n. How should hideLinkInstant behave? Toggling it on/off I do not see any change (also see a silly bug where the setting itself disappears - video).\nRegardless, I think this pull is still valuable. When browsing without hiding (using j to step trough expanded media) my preference is to use \"adopt top\", not \"top\". User preference, as captured by the settings, should be abided not ignored.. ",
    "BrettDuclos": "Sorry about that.\n- Night mode: true\n- RES Version: 4.5.4\n- Browser: Chrome\n- Browser Version: 47\n- Cookies Enabled: true\n- Platform: Windows\n. My mistake guys, thank you for your time.\n. ",
    "yingnansong": "What does Concern-MediaHost mean? Is LiveCap supported now?\n. Thanks for the clarification! Looking forward to being able to watch LiveCap videos using RES =)\n. ",
    "AjaxGb": "@githue\n- Good suggestion, implemented.\n- This will require quite a bit of refactoring to fix; I'll get started now.\n- I agree that it would be a big change, but it's also the main reason I started this fork in the first place. While the current caption ordering is familiar to current users, I can't think of a single other site that places the image description above the image. Correct me if you know of any. This means that for many hosts, putting the description above the image can break ordering, especially in the common case that I described in the original request.\n. @githue\n- Good suggestion, implemented.\n- This will require quite a bit of refactoring to fix; I'll get started now.\n- I agree that it would be a big change, but it's also the main reason I started this fork in the first place. While the current caption ordering is familiar to current users, I can't think of a single other site that places the image description above the image. Correct me if you know of any. This means that for many hosts, putting the description above the image can break ordering, especially in the common case that I described in the original request.\n. @githue\nThat was easier than I thought it might be. Does this fix your problem?\n. @githue\nThat was easier than I thought it might be. Does this fix your problem?\n. Noob question here, but how do I sync my version up? I've done some research into rebasing, and it looks pretty hard, assuming that's even the right thing to do. Any tips?\n. Noob question here, but how do I sync my version up? I've done some research into rebasing, and it looks pretty hard, assuming that's even the right thing to do. Any tips?\n. Well, I guess that closed the pull request. New request here.\n. Well, I guess that closed the pull request. New request here.\n. Thank you very much.\n. Thank you very much.\n. @thybag\nhttps://www.mediawiki.org/wiki/API:Etiquette\nhttps://www.mediawiki.org/wiki/API:Main_page#Identifying_your_client\nIt seems pretty lenient; they just ask that you try not to overload the server, and that you provide a User Agent that \"identifies your script or service and provides some type of means of contacting you (e.g., an e-mail address).\" Proof of concept.\n. I have to ask, why use Noembed when xkcd has a perfectly good JSON API?\nhttps://xkcd.com/json.html\n. I have to ask, why use Noembed when xkcd has a perfectly good JSON API?\nhttps://xkcd.com/json.html\n. @erikdesjardins Ah, that's disappointing. And apparently the JSONP API has encoding issues.\n. @erikdesjardins Ah, that's disappointing. And apparently the JSONP API has encoding issues.\n. ",
    "hillai": "So glad to see that someone fixed the issue. Good work! Hoping this will get merged.\n. @andytuba You're right, that'd definitely be more responsible. Noted.\nThanks for your responses, everyone, I'm glad this will be addressed :)\n. ",
    "jetlej": "@andytuba - I've made it so the API endpoints returns false on blog post types. Should be fixed now!\nExample: https://www.reddit.com/r/Cyberpunk/comments/43ail3/australian_scientists_will_soon_begin_trials_for/\n. @andytuba - We took it offline briefly during a caching issue, but now it's back up\n. ",
    "gdtrombetti": "I will add this link\n. ",
    "johnnybigoode": "Heya, I think this is still open? I'd love to take this. . Thank you. I'm still working on it. It's been a crazy week but I'm sure I can do it. . @radhakri555 Be my guest. I havent been able to have some me time to do this =(. ",
    "radhakri555": "Can i take up this issue? This feature is to add hyperlink stating (preferred comment order) and when pressed it,  navigate to setting page where the user can change the sorting order?. Can i take up this issue? This feature is to add hyperlink stating (preferred comment order) and when pressed it,  navigate to setting page where the user can change the sorting order?. ",
    "ofekp": "@radhakri555 are you on it?. @andytuba / @larsjohnsen / @erikdesjardins \nCan someone please review? https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4898\n\n. @andytuba Please review my changes.\nThank you \ud83d\ude3a . @andytuba Kind reminder.. \ud83c\udfc1 . \ud83c\udfc1 . \ud83c\udfc1 . \ud83c\udfc1 . \ud83c\udfc1 \nI think...\nThe if (update) return; I added in the callback of the event is being called. But it's not bulletproof and the check this comment points to (now inside applyToPost) is still needed.. Do you mean ${string.safe(SettingsNavigation.makeUrlHashLink(module.moduleID, 'hardIgnore', ' configure ', 'gearIcon'))}\nIt only links to the extension settings, not to the Reddit settings. Also my gear has an opacity of 0.3 otherwise it is too obnoxious over the white background.. \ud83c\udfc1 \nNo need for that whatsoever, I removed it entirely, hope it is OK.. \ud83c\udfc1 . Of course, I meant that without it, and contrary to what I thought should happen, I occasionally saw more than one setting gears. This means the id that the update event is receiving is not consistent enough to ensure that there is really only one setting gear. Unfortunately, I could not find the reason for that. Perhaps, and this is really shooting from my hip, Reddit are reusing DOMs and therefore we're getting the same id in the event.... ",
    "ssonal": "@andytuba, this is the same as #3018 \n. @andytuba, this is the same as #3018 \n. @lcrossan I'm ready to pick this up if you haven't started yet.\n. @lcrossan I'm ready to pick this up if you haven't started yet.\n. I wanted to get this done with minimal effort because I'm not very familiar with the codebase so I didn't want to risk breaking stuff elsewhere. \n. I wanted to get this done with minimal effort because I'm not very familiar with the codebase so I didn't want to risk breaking stuff elsewhere. \n. @andytuba I'm not sure if I understood your comment. Did you mean I should ensure expired subscriptions are cleaned as part of this process like so?\n. Makes sense. Good way to avoid bugs from future changes. \n. I think the latest commit ought to do it.\n. Silly me!\n. Sounds good.\n. Sounds good! Will make the first two changes.\nWith if (href.includes(baseURI) && isSettingsUrl(href)) I check for changes in location and only then checks for the settings hash. \nSo in that case, responses from the AutoModerator with say a link to settings at https://www.reddit.com/#!settings/search still open in a new tab.\nIs this what the comment described? Can you give me a more concrete example on Reddit so I can test this?\n. ",
    "OmgImAlexis": "I'd like to branch off this and suggest allowing an option to only hide voted posts on the homepage. This would help keep the homepage fresh but still allow the user to see all posts in a subreddit.. ",
    "mtblanton": "I'm working on this. I have the confim working, but I'm not getting anything from option.description to put into the prompt. This is making the \"Applied Preset:\" part of the prompt not show anything. Is this a known issue, or should I file a new one?. I'm working on this. I have the confim working, but I'm not getting anything from option.description to put into the prompt. This is making the \"Applied Preset:\" part of the prompt not show anything. Is this a known issue, or should I file a new one?. I'm not loading it in at all, confirmPreset is getting called with what I think is a malformed option. I couldn't figure out where the callback was being called from. Do you know where it's being called from? I think if I knew that I may be able to track this down.\nHere's my modified code along with the param values at the top.\n\nAlso, I realized I didn't mention that it wasn't working with a clean repo as well. I tested with release and the master branch and was getting the same issue. Here's the missing \"Apply preset:\" on the release version:\n\nFor reference, this is in presets.js. ",
    "tcmal": "I'm up for this, though I'm not entirely clear what this applies to as the link you gave is populated for me. Do you mean like empty search results?. ",
    "ZongMan": "i figured it out ima dummy lol can a mod delete this post , what it was is the tilde key is what starts the code line and hitting the tilde key again inputs and makes the code appear. like this\n. ",
    "esjay": "Relevant code seems to be here:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/3e6b8ef8ca22f20625f59b785424881591688e8f/lib/modules/keyboardNav.js#L871-L902\n. ",
    "bartnic1": "Hello, I'm new to making contributions and wanted to take this issue on as my first pull request; with your permission I'd like to work on it. Is there anything I should know as a new contributor? I've read the contributing.md document and I have experience with github.\nThanks!. Not sure what's causing this timeout issue, I'll test it a bit more later today.. I'll have to come back to this a bit later. I'll see if I can get everything working locally before attempting another pull request. Initially the reason was that goModeActive was being set to false before navigateTo() was being called in handleCallbacks(), so I made a more delayed boolean (it switches to false only after all callbacks have been called). I could have changed the order that things were handled in handleCallbacks(), but I wanted to avoid causing any unintentional side-effects. \nThe only thing with always escaping NP mode is that, if the user changes their mind and exits go mode (or was never in go mode), I need some check to ensure that NP mode isn't being escaped, because navigateTo() is also being used in other non-go-mode functions.. Thank you! I'll make the change. ",
    "anhallbe": "So a big problem with the embedded \"Play Button\" is that it doesn't have an embedded music player. It just controls an existing one (for instance a native client, or another browser tab).\nThere is no real API to control playback either. I still think it would be neat to have, even though it would lack some features.\n. Quick demo:\n\n. ",
    "zakrid": "These new icons seem really cool! Are they going to make it into the 4.6.2 release?\n. Interesting, I would also love to see this implemented :smile: \n. @andytuba good point, but do you know is just changing the protocol (not the actual web URL) will still deactivate the extension? \nAlso, it would be a great idea to test this on your dummy extension :smile: )\n. ",
    "brandonpatrick": "Done.\nOn line 201 is it still necessary to add the newComments watcher? When I remove this line, the functionality still appears to work.\nRESUtils.watchForElement('newComments', scanPageForFirstComments);\nIt looks like the watcher calls 'scanPageForFirstComments' once for every new child comment loaded, but that shouldn't be necessary if the highlighting style has already been added for the thread.\n. @erikdesjardins Okay, I thought there might be something like that. The branch is good to go, then\n. ",
    "TimHarrison": "Ahh thanks for the tip. I knew that too from using it at work! Slipped my mind.\n. Please hold on merge. I found more contrast issues in hidden content that needs to be resolved.\n. Ok additional fixes applied. I'm gonna stop looking at this thing or I'll find more issues! :laughing: \n. ",
    "hickford": "I also found https://www.reddit.com/r/Enhancement/comments/32xk6a/feature_request_sort_posts_by_number_of_comments/\n. I also found https://www.reddit.com/r/Enhancement/comments/32xk6a/feature_request_sort_posts_by_number_of_comments/\n. ",
    "wickles": "It keeps breaking on my mac system. Every week or so. \n. ",
    "edgariscoding": "@andytuba I see that this issue was last updated March 13th and it is now May 15th. \nIs there any updates on publishing the Safari version of v4.6.1?\n. @erikdesjardins Yeah I saw that :-/ is it possible to compile the extension from source code in the meantime?\n. ",
    "fireattack": "Thanks. Is it possible to customize the size of said iframe? To be honest, the default size it way to small for video streams to be useful.\n. Is it actually working in other browsers? I can't see any video length in https://www.reddit.com/r/videos/, even though I'm on Chrome and Firefox.\nActually, I tried to tick \"videoUploaded\" and \"videoViewed\", they don't look like working either.\n. I did some further investigation. I disabled all the modules I can disable, but the problem persists.\nCould anyone at least confirm this bug?\n. @andytuba \nLike I said before, I think it's caused by RES because it can not be reproduced (see screenshot below) when RES is entirely disabled and can be produced with only RES extension installed (but Subreddit Manager module disabled).\n\n. No, it's not relavant. Mine is \"none\", and changing it to any other option doesn't affect/fix this problem.\n. It happens on this subreddit too: \nhttps://www.reddit.com/r/instant_regret/\n. By the way, it's a regression introduced by RES 5.X.. Does this also fix the similar problem caused by \"Selected Entry\" module? If not I can open another ticket for that. \n\n. Another funny thing is that \nWithout RES, Reddit will use a different style for mobile gallery from the desktop one.\nWith RES, it will become the desktop version of Reddit's built-in expando.\n. Weird, I can't reproduce it any more suddenly. I guess just something temporarily happened.\n. The problem (in my opinion) about this particular is that\n\nyou don't need to refresh to turn it on\nYou don't need to refresh to turn it off for the previous \"filter visited links\" function, which is now integrated into this Filterline.\n\n. ",
    "caleywoods": "What's the status on this? I was about to open an issue for neverEndingLoad having stopped working but found someone in an old thread on /r/Enhancement mentioning tried neverEndingLoaded and I got that function to work.\n. A replace all should fix anyone's code once this reverts back - don't see any reason to have it emitting both events.\n. ",
    "VirtualSatai": "@beck Didn't want to risk changing the behaviour of the other modes, as I havn't tried them out. \n. @beck Didn't want to risk changing the behaviour of the other modes, as I havn't tried them out. \n. ",
    "kevinulrich": "Yes, just checked. All Addons disabled except RES, still the same problem. I just dove into the code a bit and figured this might be the problem:\nfunction followSubredditShortcut() {\n    if (BrowserDetect.isFirefox()) {\n        // stupid firefox... sigh...\n        location.href = `${location.protocol}//${location.hostname}${clickedShortcut}`;\n    } else {\n        location.href = clickedShortcut;\n    }\n}\nclickedShortcut contains the original link href, which is already an absolute URL. Whatever made you do that FF-fix in the past seems to be gone :)\n. ",
    "CrispyKat": "I am going to close this and create a new pull request with the lint errors fixed. \n. ",
    "eliatlarge": "Why has this not been pulled yet \n. ",
    "ShadedJon": "I want this. Why hasn't this been added? @andytuba @honestbleeps @erikdesjardins \n. @CrispyKat Let's try this again eh?\n. ",
    "slikts": "Embedded clips with sound seem very rare, and they should be muted by default when opening them in batch (with \"view images\"). The video elements have a .muted property that could be checked, and also .mozHasAudio in Gecko.\nIn any case, the CPU load I'm seeing from this can be significant, and can drain laptop batteries and heat up devices, so the current approach is really not good.\nEdit: volume == 0 could also be checked.\n. From what I can tell the video playback is accelerated, since GPU usage is following video playback, but it's still putting a fair share of load on the CPU. I'm using a high spec machine, but I've had cases where a forgotten reddit frontpage in the background is using up 40% of the CPU. This is when using the infinite scrolling feature, so it's a number of videos playing. I also tested with RES in Firefox, and the same happens.\nRegardless if it's specific to RES, it's something that could be fixed or mitigated by RES. Pausing the videos while scrolling through multiple pages at least should be a given.\n. It continues to be a common occurrence that I notice Chrome eating up my CPU and it almost always turns out to be a stray reddit front page tab.\n. Was this release not tested outside of Canary?\n. Was this release not tested outside of Canary?\n. That fixes it, thanks. I'd prefer to keep the flag on, though.\n. That fixes it, thanks. I'd prefer to keep the flag on, though.\n. ",
    "billmalarky": "@erikdesjardins Is this PR good to go or is there something else I need before it can be merged?\nThank you.\n. @erikdesjardins really appreciate your detailed feedback, made updating this super easy. Let me know if it is missing anything else.\n. Thank you for the feedback Erik. Much cleaner now.\n. Feel free to nitpick! I want this to comply with the style guidelines.\n. ",
    "Droyk": "I do like this feature because I Think it's way better than automatic account switcher and by the way why do the majority of the user's switch their account because they want to comment via an alt. account this requested feature will make it too easy and will definitely be a big time saver. Thanx /u/0moi for bringing this up and thanx @andytuba for starting this discussion up!\n. ",
    "Princesseuh": "If this is still relevant\nShould it ignore every settings URLs (in which case maybe we can simply use isSettingsUrl) or just URL to the current page#!settings? \nFor example would the url https://www.reddit.com/#!settings/search be opened in a new tab if it were posted in a comment? (AutoMod does this in /r/Enhancement)\n. If this is still relevant\nShould it ignore every settings URLs (in which case maybe we can simply use isSettingsUrl) or just URL to the current page#!settings? \nFor example would the url https://www.reddit.com/#!settings/search be opened in a new tab if it were posted in a comment? (AutoMod does this in /r/Enhancement)\n. ",
    "RomanHargrave": "This likely has something to do with the fact that RES places the inline styles for keyNav and whatnot after the subreddit style.\n. This likely has something to do with the fact that RES places the inline styles for keyNav and whatnot after the subreddit style.\n. ",
    "Michael-Bell": "+1\nCould this be extended to comment chains as well? It wouldn't emulate the Reddit Gold feature as that only highlights comments since the last visit, while this would just color based on age.\nDoes the Reddit api return enough info for this to be useful on very old comment chains where all comments are just \"1 year ago\"?\n. ",
    "AGSPhoenix": "Oh look, it's my thread. +1, obviously.\nI kinda figured there was some sort of system for inter-tab communication already, to synchronize the new mail indicator, but wasn't sure if it could be repurposed to do what I wanted as well. At the very least, implementation shouldn't be too complicated, just send the thingID and the vote. On the receiving end, search for the voted thing and apply the appropriate styling (or something along those lines; can't say I know how RES works).\n. ",
    "jdalton": "Another example of breaking up the compound selector for perf wins would be:\njs\n[$(usertext).find('.usertext-edit'), $(usertext).find('.ban-details:has(#ban_message)')].forEach(...\n. ",
    "arandomguydontmindme": "Hi.\nFirstly, I forgot to thank you both for creating and working on this PR, so figured I'd do that now. Thanks!\nAnyway, decided to check up on Pixiv's HTTPS support, and to my surprise, HTTPS seems to be supported, which means this should now work (hopefully!)\nA few notes:\n Regarding the size parameter in line 10, I think this could be changed to large. I read somewhere that RES had some sort of fix for this in V5 or something, but that might need some checking.\n Looking through the embed source code, it seems that there's another url parameter named border that could also be specified. When set as off, the frameborder is removed and the image is just displayed. Not sure if you'd want to do this, though, but I figured I'd suggest it in case.\nAnyway, not sure if you'd be able to read this, so hopefully this'll get your attention: @BenMcGarry @erikdesjardins . ",
    "xenithorb": "Ah, yes. I've been seeing this in Firefox Developer Edition, 48.0a2 and I was wondering what happened. Came here to file the ticket. Glad to see it was already reported.\n. ",
    "esanchma": "Aurora user here. As a temporary workaround, reverting 34a323b makes everything work again for me.\n. ",
    "Torvin": "Reverting 34a323b would work, but will be broken again a couple of FF versions later, since it is supposed to be a temporary fix, as stated in the linked bugzilla entry.\nThe proper approach is to read the cookie first, take its originAttributes and pass it as the last parameter (instead of the second false).\n. The bigger problem, though, is that this change was made to implement contextual identity. The idea is to allow users to log in to the same website using different usernames in different tabs. And RES is not quite ready to support this change - it assumes that all opened Reddit tabs are logged in under the same credentials. You can test this already by enabling privacy.userContext.enabled in about:config.\n. ",
    "robotortoise": "groannnnn\nBut in all serious, yeah, please do! PNG crushing is incredibly easy.\n. Ah, well there is none!\nAll you do is use OptiPNG's compiled 32-bit build and drag and drop the PNGs onto the executable.\nHonestly, I don't think you really need me. I'm happy to help out, but it's as simple as drag and drop.\n. ",
    "AlaricCalmette": "Could be really cool for subs like /r/dataisbeautiful /r/visualization ... \ud83d\udc4d \n. ",
    "yoannmoinet": "@erikdesjardins thank you for the fast review.\nI've updated the code.\n. @erikdesjardins here you go.\n. @erikdesjardins here you go.\n. ",
    "miniyuuzhan": "I scroll down using the middle click, I didn't intend to use this click on the vote buttons, but it happened that I scrolled right after upvoting, made me notice this.\nIt may not be kept as an issue, I just shared these behaviors here.\n. I scroll down using the middle click, I didn't intend to use this click on the vote buttons, but it happened that I scrolled right after upvoting, made me notice this.\nIt may not be kept as an issue, I just shared these behaviors here.\n. ",
    "chewong": "That's right, kind of hard to distinguish between admin and alum but they are two different colors i think\n. That's right, kind of hard to distinguish between admin and alum but they are two different colors i think\n. ",
    "prayashm": "Hi, I want to solve this issue.\nJust to confirm, when the unread count is 0, the counter should be hidden right?\n. ",
    "hzoo": "Will make another release this week\n. Ok done \ud83d\ude04  https://github.com/babel/babel/releases/tag/v6.13.0\n. ",
    "raidancampbell": "ah, good catch, storage quantity has never been an issue for my uses.  Thanks for the quick response\n. ",
    "isaacl": "(Looks like it's coming from onboarding.js)\n. Seems similar to gif->gfycat in scope though, albeit not as general \n. ",
    "bluetidepro": "@andytuba Good to know. Sorry, first time posting both of those issues! Thanks for the quick response! :)\n. ",
    "int3h": "Glad to help out. It definitely was killing the background page; I couldn't get or set any options. I suggest you resubmit the extension to Apple for review after merging this, as not being able to run the extension was probably the reason they were rejecting you. \n. You're right that my wording could have been better, and I apologize for that. I don't mean to create a toxic environment by any means, and I do appreciate the work you guys do on RES.\nI think my frustration stems from hearing that Safari support was being worked on, and getting my hopes up that RES was always just on the verge of working in Safari again, once Apple approves it. Then I try to install and run the current code myself, and find that it has been broken for three months, on top of other bugs. The frustration comes from being led to believe it was all on Apple, but then seeing the code has a long way to go on Safari, and nobody seems to be working on it.\nI also sincerely didn't mean to insult anybody by saying Apple rejected the extension because of the fatal bug I fixed in the PR. My thinking was that Apple's communication is so terrible, they probably would just not say anything, rather than tell you they couldn't get it to work. Since the fatal bug had gone unnoticed for three months, and I didn't know when the last re-submission of the extension to Apple was, I (incorrectly) assumed that the broken version could have been submitted without anybody realizing it, and without Apple informing you of it.\nI definitely recognize the difficulties in Safari extension development. The $99 developer program requirement is really balling any way you look at it, and if you're running Windows, there's no good way to test with Safari directly. Still, if you are trying to support Safari, then some sort of solution has to be found? If not, Safari will keep breaking, to the frustration of Safari users of RES. \nAgain, I apologize for my tone, and I do appreciate all the hard work put into RES. I will be more respectful with my issues/PRs. Hopefully by submitting one working PR that fixed a major Safari bug, and tracking down another to the specific lines and commits, I have shown my good faith and willingness to help. I'll try to make my wording reflect that better.\n. I don\u2019t know exactly how much free time I have these days, but is there a specific/structured way I can help contribute to better Safari support? \nI don\u2019t know if I\u2019ll be able to own code, but I could definitely at least build+install+run a revision in Safari, to do a basic sanity test. If there is a documented set of tasks I can perform to test that everything works (human unit testing?), I would be happy to run through those. If not, I can just install and use the revision to be a super beta tester, who can drill down to the code level when I find bugs.\n. If I may also be so bold, I'd like to also suggest some project changes that could help improve development, including cross-platform development. I mean no offense by these suggestions, and I am definitely not demanding you guys adopt them or anything. They are just approaches to development I've seen that have helped combat the very problem RES is currently having.\nAutomatic tests\nAs was pointed out, a CI server that can test using Safari is hard to get. However, there's a middle ground between a fully automated CI server and no tests at all. If RES had a set of tests that could be manually run in the browser, and report their results on screen, that would make \"pull and install latest version and check for regressions in Safari\" much easier. \nInstead of just having a tester open http://reddit.com and then clicking around on some stuff, you could have them open \"tests.html\", which would run the tests in their browser. Then I (or any other tester) could manually report test failures, with details, back on GitHub. Doing this would mean you could ignore the automation part of testing, and just focus on tests on their own, though that is its own challenge.\nI know better than many that adding tests to a large codebase written without testing in mind is hard, so I definitely don\u2019t expect that to be a near term change. However, it seems like it may be the right goal in order to decrease developer workload, increase development velocity, and increase stability, especially on a large, cross-browser project like this.\nStructured development Workflow\nA slightly more manageable change that could help development would be to adopt some sort of structured development workflow, like GitHub Flow. Changes/new features would be gated by Pull Requests, which would get both automatic (CI, etc.) review and manual (code style, manual cross-browser testing) review before being approved and merged. Something like lgtm can help in manual code review/browser testing.\nWith the current \u201ceverything on master\u201d approach, it\u2019s hard to see all the changes made by a particular feature/task/chore, and so hard to isolate and test them for bugs. I can check out master every week or so and run it in Safari, but I won\u2019t be able to see why user tagging (for example) broke without doing some code archeology. If RES used something like GitHub Flow, I could checkout a PR for \u201coptimize image interaction\u201d or whatever, and run it in Safari, and then tell the developer \u201cthe idea is good, but it breaks in Safari.\u201d The PR would then be kept out of master until it was fixed. In this way, regressions could be caught during development, before making it into master.\nA tool like lgtm can help formalize manual code review and testing.\n. ",
    "jabbalaci": "Thanks! I think we can close this issue.\n. ",
    "michaelskiles": "I gave this a whirl:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3442\nNote that this only applies to browsers that are currently supported by RES.\n. I gave this a whirl:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3442\nNote that this only applies to browsers that are currently supported by RES.\n. Thanks for the feedback. This was my initial thought as well, but my debugger was reporting the module as being out of scope when I tried this. Turns out my debugger was just being goofy because I wasn't reloading the plug-in from the Extensions menu after each build -___-\nI'll clean this up.\n. Sorry, I didn't quite follow your first comment. Are you suggesting removing the unnecessary variable assignment? I'm totally cool with that -  just making sure I'm not blind and missing something else. :)\n. Face Palm Of course. Thanks!\n. ",
    "Idiomatick": "Having the same issue on FF 48 // Windows 10. Maybe FF broke caching.\n. ",
    "steiney001": "Same issue. cdn.redditenhancementsuite.com takes ~2 seconds to load. \nFF 48.0.2 OS X 10.9.5\n. ",
    "avandecreme": "OpenSeadragonizer dev here (thanks @harrisongill for opening an issue here as well).\n/u/openseadragonizer is creating a link to a url like this:\nhttps://openseadragon.github.io/openseadragonizer/?img=https://i.redditmedia.com/3HRNAw4oQ2NaGXbV2ZCJn1wDTFww3uTkyF0OqP0HG_o.jpg?s=59f48e391b2473b93adb36e83a2b2989\nRES seems to (wrongfully) interpret that as an image. Hopefully, we can work out something making RES and /u/openseadragonizer work better together. What do you think?\n. Having the expando working would be great, however is there a way to just disable it with OpenSeadragonizer as a first step?\nI currently don't have time to dive into implementing a media host for RES.\nFurthermore, it seems that RES might behave poorly with any URL containing .jpg/.png when they are not images.\n. Excellent! Thanks.\n. ",
    "Lycerion": "Alright I think this is actually an issue with privacy badger; I had disabled my other extensions to make sure it wasn't them, but after re-enabling it and manually allowing those domains, it's working again. Seems like there might be some persistent settings.\n. ",
    "MrCraftCod": "I'm running\u00a054.0.2840.8 dev-m (64-bit).\n. Yeah I do have this one. I even forced the updates in case. Then went to see on the chrome page and saw it was updated yesterday. So I maybe thought I was because of that.\n\n. Ok, I checked with the canary version and yeah, the extension seem to work fine. I'll close the issue as it is Chrome's fault and will wait that the update from canary passes into the other channels.\nThank you for your help and sorry to have disturbed you for that.\nHave a great day.\n. ",
    "hastings-recursive": "chrome v 49, cant update because i wont update osx after 10.8 since they messed with samba.  please fix\n. chrome v 49, cant update because i wont update osx after 10.8 since they messed with samba.  please fix\n. ",
    "tekmosis": "It stopped working on Linux, Chrome Version 50.0.2661.86 (64-bit).\nTried to uninstall and install, no dice.\nTried to turn it off and back on in the settings but settings wont save. Clicking button does nothing and closing asks if I want to abandon changes. \n. apt-get says google-chrome-stable is already on the latest version. I'm on Debian;\nLinux navi 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt25-2 (2016-04-08) x86_64 GNU/Linux\noriginally installed from the .deb provided on chrome's site.\n. ",
    "hammerschaedel": "using Chrome 53 with win10 , NER doesn\u00b4t work\n. http://i.imgur.com/r1G9TuE.png\nthe funny thing that i silent counts on if i scroll down again. And wenn i click open next page i start at page 3 or 4.\n. ok, checked it out. Seems that the Problem is \"Shine for Reddit\". After disabling it, scrolling works. thx for your help^^\n. ",
    "vramana": "Can generators be transpiled and run using rengeneratorRuntime till we get a fix in chrome?\n. Can generators be transpiled and run using rengeneratorRuntime till we get a fix in chrome?\n. RES working in Dev Channel (55.0.2853.0)\n. ",
    "RicardoDMelo": "Turning this flag off don't work for me. I'm on Chrome 53.0.2785.89 and Windows 10.\n. Turning this flag off don't work for me. I'm on Chrome 53.0.2785.89 and Windows 10.\n. @chevex You nailed it. I missed the button too. Now it works!\n. ",
    "chevex": "I'm on Macbook Pro running OSX 10.11.6 and using Chrome version 53.0.2785.89 (64-bit). Disabling the harmony flag fixed the issue for me.\n@RicardoDMelo At the bottom of the screen chrome prompts you to click \"relaunch\" after disabling this flag. I missed it the first time and simply closed the tab and wondered why it was still broken. Did you perhaps miss that you needed to relaunch Chrome? Once I did that RES started working as expected.\nIf that generator bug is indeed the issue here then disabling harmony should be the defacto work around since es6 generator functions are only enabled under that flag. I'm guessing with it disabled RES must use some sort of shim to get generator functionality and must not use the shim when harmony generators are available.\n. So they aren't using a shim, they're just using stable generators and the optimization change broke them. Gotcha. Thanks for the correction @erikdesjardins.\nThanks @Ajedi32 for letting us know what you found :)\n. ",
    "thibault-ml": "Interestingly enough, I have two 10.11.6 machines running 54.0.2840.8 dev (64-bit), and RES works in one of them, but not the other! The chrome://flags/#enable-javascript-harmony is disabled in both.\nIs there anything I could provide to help, or is the strategy to wait for the upstream fix in Chrome?\n. ",
    "oscillot": "Disabling the harmony flag worked for me on 53/OSX but I had to restart chrome fully (kill all BG process too, eg Postman, Authy)\n. ",
    "alexvanolst": "@larsjohnsen Thanks, the problem still occured so I changed the behavior of selectClosestVisible to pass the options { scrollStyle: 'none' } since one typically doesn't want to scroll whilst hiding.\n. @larsjohnsen Thanks, the problem still occured so I changed the behavior of selectClosestVisible to pass the options { scrollStyle: 'none' } since one typically doesn't want to scroll whilst hiding.\n. Reddit has hidden this by default on their end. Can probably close this.. Updated name to Gatherer MTG Card Images\n. Cool, have removed the debounce and added the _select options as a parameter to be consistent with the rest of the select functions\n. ",
    "slcc2c": "Should be as easy as detecting the /channel/ substring, will try and make time to fix. \n. Damn you're right, I'm not a big YouTube user so I limited my consideration to the example.\n. ",
    "odensc": "@slcc2c I don't think so, there is lots of different channel URLs. (e.g. /username, /c/username, /channel/username)\nA better solution would be to see if it has /watch, otherwise handle it as a normal URL.\n. @erikdesjardins Sure thing. Changed null to undefined and removed unused SCSS.\n. It seems that the id in this URL is different from the actual video id, so we would need to get the video id somehow.\n. I think this could be fixed by using chrome.downloads (WebExtensions) or Downloads.createDownload (old API), depending on what RES uses.\n. Another solution could be to draw the image to a canvas, and then convert that into an image and download it. However it might just be better to wait for WE.. I'll experiment with a few different methods to see what works.\n. I also came up with this method:\n``` js\nconst videoIdRe = /^([\\w-]+)/;\n[...]\ndetect: ({ href }) => {\n    let url = new URL(href);\n    // split path excluding first /\n    let split = url.pathname.substring(1).split('/');\n    return url.hostname.endsWith('youtu.be') ?\n        // short url - get video id\n        videoIdRe.exec(split[0]) :\n        // long url - ?v=\n        url.searchParams.has(\"v\") ?\n            videoIdRe.exec(url.searchParams.get(\"v\")) :\n            // long url - watch/embed/v\n            (/watch|embed|v/i).exec(split[0]) && videoIdRe.exec(split[1]);\n},\n\n```\nIt works with every URL I've found. (including /v/)\nI feel like this is a lot more understandable than the regex. Whatever you think is better I can implement.\n. @erikdesjardins  :+1: Squashed and commited. Only change I did was the array into the regex. The regex is slightly faster, and case-insensitive.\n. ",
    "mckennajones": "Going to try tackling this within the next few days\n. ",
    "mrkorb": "I believe this is caused by the pinHeader option (Appearance > betteReddit) being set to either the 'Subreddit Bar only' or 'Subreddit Bar and User bar' option.  If you toggle it to any of the other options, the menu opens up just fine, but if you select either of those 'Subreddit bar' options, it does not open, regardless of the custom CSS (or lack of) on a subreddit.\n. ",
    "lucaswerkmeister": "It\u2019s a pre-existing test case for any xkcd scraper/parser/viewer, isn\u2019t it? :)\n. ",
    "jdforrester": "Hey there, RES user who's also a Wikimedia staffer, provisionally this looks fine. We don't mind distributed read API load like this \u2014 it's just natural reader traffic, after all. Using \"Reddit-Enhancement-Suite/5.0\" in the UA string is great, thanks for doing that.\n. Well, since you asked, if you want to be fancy, using the REST API instead of the actions API would probably be faster for your users and lower load for us.\nFor example, https://en.wikipedia.org/api/rest_v1/page/html/Foobar response is the cached \"desktop\" HTML for the whole page. That's an \"unstable\" API, but we're not changing it without a bunch of warnings and deprecation time of at least a few weeks.\nThat doesn't solve the section issue though. Although the API takes a \"sections\" parameter, it currently means the top-level DOM nodes in the <body> \u2014 so if the user passed in https://en.wikipedia.org/wiki/Foobar#Example_use_in_code you'd have to pull the HTML from the first query, then work out where Example_use_in_code appears (it's mwPA as of writing, but that's not stable between revisions), work out that that section consists (as of writing) of the ids mwPA, mwPQ, and mwPw (and have code to know that the next blob, mwQA, isn't part of that section because it's an <Hx> where x is equal to or higher than the starting heading, and then either do the work yourself to trim the document or re-request from us, which'd be https://en.wikipedia.org/api/rest_v1/page/html/Foobar?sections=mwPA%2CmwPQ%2CmwPw\nThat's a bit meh, sorry. :-( We're still working on this area, trying to make it nicer for us as well as third parties to use, especially around sections.\nIf you want content that's been pre-processed to be more friendly for mobile devices (e.g. block templates like infoboxes and some inline media files like pronunciations are removed), you could use https://en.wikipedia.org/api/rest_v1/page/mobile-sections/Foobar to get the HTML split out by section. This has the advantage of letting you just show the section you want (by sections.[].anchor), but might not be quite the content you want.\nThere's also https://en.wikipedia.org/api/rest_v1/page/mobile-sections-lead/Foobar to get the HTML for just the lead section and the IDs for all the other sections, for (I presume) the main use case of a no-anchor entry, which would reduce bandwidth usage.\nHope this helps! Sorry it's a bit of a mess right now.\n. BTW, this isn't a country code but a language code, but it doesn't matter much. :-)\n. ",
    "l27-0-0-1": "Opening it in background is jarring considering that chrome updates extensions at seemingly random times. I had a situation multiple times when I open some tabs in background from news sites to read later and when I do, I discover some random patchnotes that I couldn't care less about in that stack. Honestly, I see no reason to even show the changelog at all, most of the people probably close it as it opens, and people who do want to read it would find it on their own.\n. Opening it in background is jarring considering that chrome updates extensions at seemingly random times. I had a situation multiple times when I open some tabs in background from news sites to read later and when I do, I discover some random patchnotes that I couldn't care less about in that stack. Honestly, I see no reason to even show the changelog at all, most of the people probably close it as it opens, and people who do want to read it would find it on their own.\n. Wait a second, so the reason you don't want to make popup disable-able is because you use it as a telemetry tool, but because of semantics you can use it to gather data and also claim there is no telemetry in the extension, while also not giving users option to disable said telemetry? That's some flawed logic right there.\n. Wait a second, so the reason you don't want to make popup disable-able is because you use it as a telemetry tool, but because of semantics you can use it to gather data and also claim there is no telemetry in the extension, while also not giving users option to disable said telemetry? That's some flawed logic right there.\n. ",
    "trlkly": "Every other extension I have either doesn't display a notice, or offers a way to shut them off.  Not even the web browsers themselves force you to read the change notes. \nI note that RES already puts out a notification the Reddit userbar when a big new update comes down. People who are interested can click that. Plus, that way they see the notice when they are using Reddit, and not just randomly. \nPlus, when it comes to new features, it seems you are now (brilliantly) putting a gear icon to let us quickly shut them off if we don't like them. That means we don't really need to be told about those features. We'll discover them on our own. \n. I see a lot of problems with the reasoning here. First off, asking for a\nfeature that nearly every other addon has is not \"blowing things out of\nproportion.\" It's just a request.\nSecond, you can get those same analytics without opening a page. Just use\nan xmlhttprequest. Or, if you need to get past the Cross Site Origin\npolicy, use JS to load an image but never display it. (It doesn't even have\nto actually be an image--the server will still log it, and the request will\njust run the onerror function.) Plus Mozilla at least provides at least\nthat basic level of analytics and I'd be shocked if Google doesn't. So\nyou'd only need data for other browsers.\nThird, the people who don't like the popunder are unlikely to donate, since\nthey will simply close the ad and not read it. So it probably won't affect\nrevenue. And there are many other places you could put a Support RES link\nto make up any small difference. The dropdown would make sense, as would\nthe settings console.\nFourth, if it's just a few users, then they are unlikely to affect much\neven if you didn't do any of the above stuff I mention. I see no mention\nof  actual testing to even see if any of your concerns are actually valid.\nYou don't actually know if revenue will drop or how many people are willing\nto turn the feature off.\nFifth, if you annoy users, then they are less likely to contribute. I have\nno other addon that hijacks my browser and forces a popunder, and I use a\nlot of addons. A couple have it on by default, but I can and have turned it\noff. Popunders are a thing so hated by users that web browsers instituted\nbuilt in blocks. Only recently have sites been working around this--but\nmost of us block them with adblock.\nIn conclusion, I don't really don't think it's nearly as bad as you have\nportrayed it here. There are other ways to get the minimal analytics, and\npeople who always close the popunder aren't going to donate anyways. Plus\nyou have no real data to support your claims.\nRES is all about removing annoyances. I hope you will allow users to remove\nthis one.\nOn Tue, Sep 6, 2016 at 5:40 PM, Steve Sobel notifications@github.com\nwrote:\n\nThere are other reasons why we open the what's new page besides telling\npeople about new features, which I realize some of you just flat out aren't\ngoing to like, but they are reality:\n-\nWhen users have no idea that RES updated, our tech support requests\n   are likely going to be more confused, poorly written and frequent than they\n   already are\n   -\nThe what's new page is our ONLY source of analytics for knowing how\n   many users we have and on what mix of browsers, etc - in part because the\n   mere mention of throwing analytics into the extension, even with an\n   opt-out, was met with rage (and please, please do not suggest opt-in\n   analytics, that defeats the entire purpose of analytics - it wouldn't be\n   nearly as useful)\n   -\nThe what's new page is (well, was, we still need to add it back on the\n   new website) our only vehicle for actively pointing people to the fact that\n   they can contribute to RES (via money and/or code). Yes \"people can seek\n   that out if they want to\", but the amount of donations RES sees is already\n   extremely paltry as is - and while this is absolutely not a money making\n   venture, being able to provide beer/coffee money to the people busting\n   their ass to make this product better is not something I'm willing to just\n   write off / forget. We already know anecdotally that the vast majority of\n   RES users rarely/never open up the console, so even that isn't a great spot\n   to draw attention there. We could, in theory, add a different sort of nag,\n   but tying it to \"work was done to make RES better\" seems sensible in terms\n   of timing.\nWe're talking about a background tab that doesn't steal focus from what\nyou're currently doing, and it opens somewhere between maybe 3-6 times per\nyear here. The information / benefit it provides us, in my opinion, far\noutweighs the vocal complaints of annoyance from a passionate few people.\nThe vast majority of the time, I'm all about listening to the users and\ngiving them what they want - but sometimes I feel like people are\noverblowing really tiny things, and we're going to create a culture of\n\"everyone who yells enough gets what they want\" when in reality we should\nbe prioritizing things based on a combination of users needs, depth/breadth\nof impact, and also our own needs as developers.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3397#issuecomment-245118454,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFNSrk6bR4u-6mgIOg0GQ9__LRQMPldLks5qnevSgaJpZM4J1BiS\n.\n. \n",
    "donlbooth": "It gives me a result of 2\n. It's still occurring on my work computer, I'll check my personal one after I get home from work\nRes 5.0.2\nFirefox 49.0.1\nEdit: don't know if it helps, but i had the console open to check the navigation again and it gave this error:\nreddit-enhancement-suite:Unhandled promise rejection Object {  }\nEdit edit, does it at home still too.\n. It's still occurring on my work computer, I'll check my personal one after I get home from work\nRes 5.0.2\nFirefox 49.0.1\nEdit: don't know if it helps, but i had the console open to check the navigation again and it gave this error:\nreddit-enhancement-suite:Unhandled promise rejection Object {  }\nEdit edit, does it at home still too.\n. This is now kinda working in 5.0.3, but the pages are not auto increment as I scroll, I have to click something on each page to get it to trigger\n. ",
    "stompk": "GREAT! thank you !\nOn Tue, Sep 6, 2016 at 9:26 AM, Andy Tuba notifications@github.com wrote:\n\nSounds like you ran out of storage space. Try pruning your user tags (go\nto the res settings console, blue gear in the top right corner, and search\nfor \"troubleshooter clear tags\". Alternatively, upgrade Firefox and RES to\nthe latest versions.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3404#issuecomment-244988041,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVAlBDMkAzyVPlDN48nkXp3_XLDZGZPLks5qnYYpgaJpZM4J13Jv\n.\n\n\nScott\n. I haven't tried yet. I was thanking you for your response. I plan to\nupgrade first and see what that does. I didn't even realize I was behind.\nthanks again.\nOn Tue, Sep 6, 2016 at 10:40 AM, Andy Tuba notifications@github.com wrote:\n\nSounds like it worked?\nP.S. For this type of support question, we prefer folks to submit posts to\n/r/resissues and include diagnostic information like RES version, browser\nversion, etc.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3404#issuecomment-245011309,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVAlBHNRO48bJkTZCValS7Yr1gQY8Lb2ks5qnZdzgaJpZM4J13Jv\n.\n\n\nScott\n. ",
    "redditMonger": "I created an account just to come here and report this bug.  It is indeed very annoying.\n. ",
    "Ruddiger": "That does the trick, thanks!\n. ",
    "groovenectar": "I came to the repo to mention the new icons as well, but specifically regarding night mode. The new icons make it a bit of an eyesore in night mode now. The exapando icons now seem to attract a bit more attention than the titles...\nHere is a screenshot:\n\n. ",
    "IsSuEat": "Enabling e10s via about:config with only RES installed doesn't work. \nAlthough the Addon Compatibility addon says RES is multiprocessor capable, e10s is disabled in about:support. \n. Enabling e10s via about:config with only RES installed doesn't work. \nAlthough the Addon Compatibility addon says RES is multiprocessor capable, e10s is disabled in about:support. \n. ",
    "martixy": "Was 3.10.3. Updated to 3.10.8.\nRemoved node_modules and even did you one further with git clean -xdf.\nStill errorrs out.\nnpm ls\nhttp://pastebin.com/1WvG20Gk\n. Was 3.10.3. Updated to 3.10.8.\nRemoved node_modules and even did you one further with git clean -xdf.\nStill errorrs out.\nnpm ls\nhttp://pastebin.com/1WvG20Gk\n. That is indeed the culprit.\nI use ! as a sorting thing for folders or files, I want to appear in the beginning. The thing is, I've previously successfully built RES in that path, so this is a new thing.\nBuild output reports webpack 1.13.2 which is the latest non-beta version.\n. That is indeed the culprit.\nI use ! as a sorting thing for folders or files, I want to appear in the beginning. The thing is, I've previously successfully built RES in that path, so this is a new thing.\nBuild output reports webpack 1.13.2 which is the latest non-beta version.\n. ",
    "Dexesttp": "Thanks for the quick feedback !\n. ",
    "Atario": "Sorry, I should have been clearer.  This is in comment pages.\nAlso, on further experimentation, this is for the following case:\n1.  Find a comment that (a) started out collapsed when the page loaded, and (b) contains a YouTube/SoundCloud/other audio-producing link with expando\n2.  Expand the comment\n3.  Do \"show images\"\n4.  Link plays\n. Oh, and yes, this is v.5.0.1.\n. Should I repost it there?\n. Should I repost it there?\n. ",
    "nfnty": "Fair enough, scaled back to only fix mixed content errors.\n. Rebased.\n. No, it's enforced for all links. All API calls and images are already HTTPS. This fixes the problem where Imgur's API returns HTTP links for gifv.\n. ",
    "Anichale": "Looks like the API documentation around the new structure for shared videos is pretty sparse. What youtube-dl does right now, is to download the entire webpage then parse the html metadata for the videoId. Not sure if that's the method RES wants to go with, or wait until maybe a better way is revealed by the API.\n. Looks like the API documentation around the new structure for shared videos is pretty sparse. What youtube-dl does right now, is to download the entire webpage then parse the html metadata for the videoId. Not sure if that's the method RES wants to go with, or wait until maybe a better way is revealed by the API.\n. ",
    "Haroenv": "If lodash is already used that seems like a logical choice \n. If lodash is already used that seems like a logical choice \n. Why no pull request @lcrossan?\n. Awesome!\n. ",
    "mxtetrachord": "Hey, I'd like to take this on if nobody else has it. Is this up for grabs?\n. Hey, I'd like to take this on if nobody else has it. Is this up for grabs?\n. @andytuba would you be able to point me at the code that handles this? thanks!\n. @andytuba would you be able to point me at the code that handles this? thanks!\n. Hey, I have it working for me. I'm having trouble pushing though -- mind giving me commit rights? Thanks!\n. ",
    "mikhoul": "@erikdesjardins  I understand what you are saying but Why only RES loss his DATA (or corrupt it ?) as often ?  :flushed:\nI have lot of other addons that save data and they never become corrupt, the only addon that lose his setting so often is RES. \nI've use a very simple UserScript that use cookies to save his data https://github.com/spmbt/googleSearchExtraButtons\nI never see before this technique maybe you should consider it since it would allow all browsers to use the same mechanism to save their data. :smiley_cat:  And moreover it's very reliable !\nRegards ! :octocat: \n. @erikdesjardins  I understand what you are saying but Why only RES loss his DATA (or corrupt it ?) as often ?  :flushed:\nI have lot of other addons that save data and they never become corrupt, the only addon that lose his setting so often is RES. \nI've use a very simple UserScript that use cookies to save his data https://github.com/spmbt/googleSearchExtraButtons\nI never see before this technique maybe you should consider it since it would allow all browsers to use the same mechanism to save their data. :smiley_cat:  And moreover it's very reliable !\nRegards ! :octocat: \n. ",
    "Express50": "I'd like to take a crack at this. If I go the overriding css route, should I do it in the main css file or do I need to create a separate module?. @erikdesjardins can you please take another look at this? I think I fixed the issue with the hover not showing up again.. ",
    "bartw": "I created a pull request for this issue: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/3519\n. No problem. I saw it too but by then it was already too late. :-)\n. ",
    "sparksis": "I've downloaded an extension (User CSS) and added the following to reddit.\n```\n@media (max-width: 960px) {\n  .side {\n    display: none;\n  }\n}\n```\nI think having a toggle in the options to inject this CSS would be amazing.  The media tag hides the side bar when the screen size is less than or equal to half my screen width (1080p).\nI think this nicely addresses @honestbleeps issue of hiding the sidebar altogether while adding a quality of life improvement.  \nPS. I have subreddit styles globally disabled so @erikdesjardins comment is still valid.. ",
    "williamparry": "Waiting on @andytuba to review my pull request.. Ah I accidentally added commit 8859411. Re: const - sure.\nRe: .css('padding') I did some investigation, and while running the function several times has a performance hit I looked up how jQuery does the calculation and did a test of my own:\n```\n<!DOCTYPE html>\n\n\n\n\n\n\n\n<style>\n    #test {\n        padding-left: 10px;\n        padding-top: 15px;\n        /*margin-left: 20px;*/\n    }\n</style>\n\n\n\n<div id=\"test\"></div>\n\n<script>\n\n$(function() {\n\n    var $t = $(\"#test\");\n    var pr = $t.css(\"padding-right\");\n    var pl = $t.css(\"padding-left\");\n    var mr = $t.css(\"margin-right\");\n    var ml = $t.css(\"margin-left\");\n\n    console.log(pr, pl, mr, ml);\n\n});\n\n$(function() {\n\n    var $t = $(\"#test\");\n    var ps = $t.css(\"padding\").split(\" \");\n    var ms = $t.css(\"margin\").split(\" \");\n\n    // If no margin set, returns undefined, which will break parseInt\n    console.log(ps[1], ps[3], ms[1], ms[3]);\n\n});\n</script>\n\n\n\n```\nCoupled with this from the jQuery docs:\n\nRetrieval of shorthand CSS properties (e.g., margin, background, border), although functional with some browsers, is not guaranteed.\n\nIt shows you're right - I'll make it more explicit.. I've put in:\nhideSidebarMenuItem.parentNode.classList.remove(\"selected\") instead of rebuilding the element.\nGiven the action to hide the sidebar is explicitly triggered by the user and the functionality is to do with the aesthetics of the screen (readability etc) I'd argue that having the selected state for this toggle is counter-intuitive:\n\nHowever, I'm happy to leave it as the default (there's consistency argument). Let me know.. Done.. Done.. Done.. Done.. Done. Please check (and check how I set up i18n in module.beforeLoad). Done.. ",
    "alberto467": "@andytuba On Reddit you've talked about the idea of moving the big editor button, i tried it out and it's seems really good, but unfortunately i've had some problem since the edit bar and the big editor button are created from two separate modules.\nBasically, you need to check for each module on the other and disable the caching on the edit bar, or edit the already made edit bar on the big editor button module. I wanted to keep the code as clean as possible, but if you want to see it i can make another commit with that.\n. Nope, calling the slideEditBar function in the attachEditorToUsertext function doesn't work for comments, which is why i added this line.\nThe updateCounterfunction which was already in the code did the same since it needs to be called on comments too, exactly like mine.\nThat's also why i didn't edit the makeEditBarfunction, i fiddled around with it for a while, but then i saw the updateCounterfunction and i just decided to conform my code to that.\nEditing the makeEditBarcould also allow to move the big editor button, i tried to but then had some problem with the caching/cloning/interesting things/???. (See the comment to andytuba)\n. ",
    "amews": "Thanks @andytuba - note changes.\n. @erikdesjardins @andytuba are you happy with these changes in their current state?\n. ",
    "dralley": "Developer guide to embedded WebExtensions:  \nhttps://developer.mozilla.org/en-US/Add-ons/WebExtensions/Embedded_WebExtensions\nEdit: I'm oblivious, and somehow didn't notice that this was already posted\n. I somehow didn't notice that that was already posted.... time to get sleep.... ",
    "mechacrab": "Can we not add SEO fucking keywords to anything - sure sounds like multi-accounts trying to pull some wild-assed CTR bullshit and can't get RES to update adequately.\n\"I'm logged in with 5 accounts and only a couple auto-update; please halp!!!111  Think of the SEO and migration possibilities!!11\"\nNo thanks.  \nBurn this motherfucker alive, please - I'm sick of these multi-account pricks ruining subreddits left and right and asking for (apparently they can't write them, the cocksuckers) tools to overrun and kill the things as well.\nLet's not, for a change.  What the hell does \"I have like...18 accounts and I'm getting confused because I'm posting on all of them in a 15 minute period!!!11111\" offer?\nReally?  \nI don't want SEO, I don't want their bot accounts, I don't want them using their browser to run bot accounts, I don't care overly if they're using a fucking advanced trapper keeper smartphone to run their bot accounts, but I think this gives them a tool and I think they're too god-damned fucking stupid to do it.\nI say no.  Bitch, if you have that many accounts, on fucking Reddit, you've got something wrong with ya.\nYour call, but...no thanks for that goddamned result.\n. ",
    "Tarun80": "Firefox has supported <a download> since Firefox 20. W3Schools has more details about it. It also has a Try it Yourself where the functionality works just fine.\n. ",
    "Lakston": "Hey Andy, thanks for all the advice ! I'm fairly new to OS and PRs so it is always nice when someone helps me get better.\n. ",
    "SeanHayes": "Any chance this could get merged?\n. No, thank you!\n. 1. We have short URLs in the form \"https://tenor.co/s2Vn.gif\", where \"s2Vn\" is an encoded int. This function decodes that int ID.\n2. Just rewrote it to use reduce.\n. ",
    "vishva007": "Hi, \nCame here from hacktoberfest site. Can I look into this issue ?\nThanks \nEdit: Looks like this is already being worked on by @nkoxlien . \n. ",
    "deecewan": "\ncan't reproduce this.  there's also no instance of NSF Wfilter in the codebase.\n. ",
    "tyler-m-dunn": "Done. Thanks for taking a look so quickly.\n. Done.\n. ",
    "remram44": "Since recently, no image from imgur.com will expand on Reddit. Is this because of this?\nFrom my location both imgur.com and i.imgur.com have invalid SSL certificates (Chrome says \"security certificate is from a.ssl.fastly.net\"). From the front page:\n\nYou can see the submitted link is HTTP, and the rewritten link doesn't load.. ",
    "rizzles": "Great. Thank you guys. ",
    "jshier": "Latest Apple Gallery release is 5.0.3 for Safari, as is the latest direct download. Even if there are delays in Apple's approval, can we get direct download updates? Or are those deprecated in favor of the vendor distribution methods?. ",
    "mubashariqbal": "Thanks for the cleanup and merging the code!. ",
    "alex-seville": "Hmm, actually that endpoint doesn't work with noembed. Let me find another way.. cc @erikdesjardins . ",
    "inunah": "Got an identical error.\n\nI did not have #enable-javascript-harmony enabled, so I enabled it. No change.\nI did not have #disable-javascript-harmony-shipping enabled, so I enabled it. No change.\nI enabled both of them together. No change. I re-disabled them.\nI had  #enable-experimental-canvas-features enabled, so I disabled it. No change.\nI had #disable-accelerated-2d-canvas enabled, so I disabled it. No change.\nI had #enable-fast-unload enabled, so I disabled it. No change, so I re-enabled it.\nI had #disable-hyperlink-auditing enabled, so I disabled it. No change, so I re-enabled it.\nAt this point I realized I had to restart for each change, so I restarted Chrome. \nSuddenly, the issue was fixed. One or both of those two canvas features was the problem, I'm guessing.. ",
    "josephkmh": "Are you sure you don't have an adblocker on? I can only reproduce this error with uBlock Origin on.. ",
    "preethamrn": "I could reproduce it without uBlock Origin. whatismybrowser.com/w/A3AC9CM. Sure. I've made most of those changes but I'm not sure how to get a Thing object in the updateCommentCount function.. Any reason you want to get post.getCommentsLink() instead of post.getCommentCount()? It seems like the latter would be easier since we're using thisCount to get the currentCommentCount anyway.. Do you know how I can test the travis build locally? Despite the testing I do, I still get errors in the build and I don't want to clutter up the pull request with mostly small bug fixes.. Would this be a filter like the NSFW filter in filteReddit?. Ahh. That simplifies things. There seems to be a Travis failure in the flow job because href isn't a property of userLink? Do you have any idea how to fix this?. ",
    "rupertdev": "@erikdesjardins Hey Erik! I've never contributed to RES before but I've got a good knowledge of JS and would be happy to help. Let me know what I can do!. ",
    "jakewilson": "I'll do nightMode.js. Doing \n- presets.js, \n- ~~profileNavigator.js~~ (someone already did it), \n- quickMessage.js, \n- RESTips.js, \n- searchHelper.js.. Doing\n- selectedEntry\n- settingsNavigation. I think I can handle this. Which comment module would this go in? 'Editing tools' or 'Hide All Child Comments'? Or perhaps create a new one?. I only did two commits, both starting with Issue #xxxx. I'm not sure why the other 4 were added.. Will do. I opened another PR using a branch other than master since it's better practice and less stress on my part. See #3809.. So, since I already closed my other PR, is it okay if I leave this one open with all the commits? I will make sure I do that when doing further work though.. Updated.. Okay, thanks.. Yes, I didn't like doing .children[0] but couldn't think of a more dynamic way to do it. Thanks.. I did this, but can you elaborate on this? How do comments get loaded dynamically?. Oops, thanks. Is this too little for one commit?. I checked it in my browser before committing, shows up as expected. Good eye!. ",
    "MarcusJohnson91": "I downloaded the zip and installed it myself, I posted to remind you guys. the one on Apple's extension page is 5.0.2.. ",
    "J-tt": "Updating my Firefox version to see if I can reproduce this.\nWhat Distribution are you using? (And related details, eg: window manager, desktop environment).. No problems on the latest nightly (53.0a1) running straight from the executable, Ubuntu 16.10 i3wm lightdm.\nI would say use the latest stable build, but, well, you're an Arch user... ;P\nBut seriously, if you haven't already try getting the latest nightly directly from mozilla or try updating your current version if you don't already have the latest version.. I'll do those steps and see if I can reproduce the error.\nAny feedback to the dev console?\nOn Wed., 14 Dec. 2016, 21:26 Arindam Banerjee, notifications@github.com\nwrote:\n\nOk, so I tried again with a new profile with only RES installed.\nVisited some image heavy subreddit (r/unixporn) and toggled the\nshow_images option on and off.\nThen moved to another subreddit, and it crashed again.\nClearly the bug is with RES.\nAny way to further find the cause ?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3761#issuecomment-267033053,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKB4La5ZtY7yVlF9paebqPRwW2Bosp_Bks5rH-6HgaJpZM4LJlJc\n.\n. Still unable to reproduce the issue on my setup :/\n\nUsing latest (53.0a1). Same setup.. ",
    "SageEx": "I'm using Arch Linux with Nightly installed from the AUR. The window\nmanager is bspwm.\nThe plugin worked fine till last version. It broke on update to the latest\nversion. The tabs crash constantly and since all tabs share same process,\nall tabs crash.\nOn Wed 14 Dec, 2016, 2:38 PM Jett Jackson, notifications@github.com wrote:\n\nUpdating my Firefox version to see if I can reproduce this.\nWhat Distribution are you using? (And related details, eg: window manager,\ndesktop environment).\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3761#issuecomment-266981175,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGz560d1Kx3XDha7bwFLryhK52jnEtcoks5rH7H3gaJpZM4LJlJc\n.\n-- \n\nArindam Banerjee\n. Let me try again.\nOn Wed 14 Dec, 2016, 5:11 PM Jett Jackson, notifications@github.com wrote:\nNo problems on the latest nightly (53.0a1) running straight from the\nexecutable, Ubuntu 16.10 i3wm lightdm.\nI would say use the latest stable build, but, well, you're an Arch user...\n;P\nBut seriously, if you haven't already try getting the latest nightly\ndirectly from mozilla or try updating your current version if you don't\nalready have the latest version.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3761#issuecomment-267013516,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGz56wyx7_cDexsm2SUO1mkuaGWa-Gghks5rH9X7gaJpZM4LJlJc\n.\n-- \nArindam Banerjee\n. Ok, so I tried again with a new profile with only RES installed.\nVisited some image heavy subreddit (r/unixporn) and toggled the show_images option on and off.\nThen moved to another subreddit, and it crashed again.\nClearly the bug is with RES.\nAny way to further find the cause ? \n. Here are the messages from the browser console\n```\nreddit-enhancement-suite:Object {  }  sandbox.js:340\nreddit-enhancement-suite:Error: Error in target's \"multicast\" handler: [object Object]\nStack trace:\n_handleMessage@resource://gre/modules/commonjs/toolkit/loader.js -> resource://jid1-xufzosoflzsoxg-at-jetpack/background.entry.js:814:21\nonAttach/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://jid1-xufzosoflzsoxg-at-jetpack/background.entry.js:533:12\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nreceive@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/content/worker.js:76:18\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:123:45\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nmessageReceived@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/remote/parent.js:96:37\nError: Error in target's \"multicast\" handler: Error in target's \"multicast\" handler: An invalid or illegal string was specified\n. Complete log\nreddit-enhancement-suite:Object {  }  core.js:106\nreddit-enhancement-suite:Object {  }  sandbox.js:340\nreddit-enhancement-suite:Error: Error in target's \"multicast\" handler: [object Object]\nStack trace:\n_handleMessage@resource://gre/modules/commonjs/toolkit/loader.js -> resource://jid1-xufzosoflzsoxg-at-jetpack/background.entry.js:814:21\nonAttach/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://jid1-xufzosoflzsoxg-at-jetpack/background.entry.js:533:12\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nreceive@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/content/worker.js:76:18\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:123:45\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nmessageReceived@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/remote/parent.js:96:37\n  background.entry.js:745\nabout:tabcrashed?e=tabcrashed&u=https%3A//www.reddit.com/r/archlinux/&c=UTF-8&f=regular&d=Arch%20Linux%20-%20Keeping%20it%20Simple : Unable to run script because scripts are blocked internally.  (unknown)\nreddit-enhancement-suite:Object {  }  sandbox.js:340\nreddit-enhancement-suite:Error: Error in target's \"multicast\" handler: An invalid or illegal string was specified\nStack trace:\n_handleMessage@resource://gre/modules/commonjs/toolkit/loader.js -> resource://jid1-xufzosoflzsoxg-at-jetpack/background.entry.js:814:21\nonAttach/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://jid1-xufzosoflzsoxg-at-jetpack/background.entry.js:533:12\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nreceive@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/content/worker.js:76:18\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:112:9\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nemitOnObject@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:123:45\nemit@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/event/core.js:89:38\nmessageReceived@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/commonjs/sdk/remote/parent.js:96:37\n  background.entry.js:745\n```. Sure, I'm all in. Will I need to build it?\nOn Thu 15 Dec, 2016, 3:59 AM Andy Tuba, notifications@github.com wrote:\n\n@SageEx https://github.com/SageEx Would you be interested in trying a\ncustom build of RES that adds better logging around multicast?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3761#issuecomment-267177378,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGz566JE7X-IUtdKc1ZSiwrJjwt9QZFWks5rIG3fgaJpZM4LJlJc\n.\n-- \n\nArindam Banerjee\n. Is there a verbose logging mode in RES?\nMaybe that would help.\nOn Thu 15 Dec, 2016, 1:27 PM Jett Jackson, notifications@github.com wrote:\n\nStill unable to reproduce the issue on my setup :/\nUsing latest (53.0a1). Same setup.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/3761#issuecomment-267262371,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGz567wFRUOsVa663bA9iwqKsfLNW-Asks5rIPLvgaJpZM4LJlJc\n.\n-- \n\nArindam Banerjee\n. ",
    "twchapman": "```\nPrivate browsing: false\nSending multicast: 0.21988190836163568\nStorage.set(): 0.7216450787621831\nStorage.get(): null\nStorage.has(): false\nStorage.delete()\nStorage.get(): null\nStorage.has(): false\nSession.set(): 0.7254436118702177\nSession.get(): 0.7254436118702177\nSession.has(): true\nSession.delete()\nSession.get(): undefined\nSession.has(): false\nwrapped.set(): 0.21791468885474874\nwrapped.get(): default\nwrapped.has(): false\nwrapped.delete()\nwrapped.get(): default\nwrapped.has(): false\ndomain.set(): 0.79862600284539\ndomain.get(): default\ndomain.has(): false\ndomain.delete()\ndomain.get(): default\ndomain.has(): false\n```. That didn't seem to do it  :(. It seems to have stopped now - I wonder if I just didn't refresh the page after resetting to factory, but it's not popping up anymore. Thanks folks, appreciate the fast responses!. ",
    "MJGTwo": "@andytuba I think this is closed now since Issue #3792 fixed it.. While looking into this I came across an issue. Live streams can happen in three types of URL: two of them RES can handle (https://youtube.com/watch?v=IDCODE and https://youtu.be/IDCODE) but the third is https://www.youtube.com/c/CHANNELNAME/live which it cannot handle. The first two types (https://youtube.com/watch?v=IDCODE and https://youtu.be/IDCODE) are for the standard uploaded and not-live videos.\nWhen a live video ends and it was linked to reddit using either of these two supported urls, it will still have that url and the link will still work. However, with the third type, https://www.youtube.com/c/CHANNELNAME/live, it is directing to the current live stream of the channel. So if the live stream ends, it will default to the channel. \nEDIT: Correction. It seems to go to a place saying that the stream has ended. Statement still stands that the third type of URL doesn't give us the IDCODE for embedding. . Did a bit more looking and it looks like you can use Google's Youtube Data API to get the IDCODE from a channel if you know the channelID for the live video posted. However you need to know the channelID, not the Channelname.\nIf you know the ChannelID and request a snippet, you get a JSON in this format:\n{\n  \"kind\": \"youtube#searchResult\",\n  \"etag\": etag,\n  \"id\": {\n    \"kind\": string,\n    \"videoId\": string,\n    \"channelId\": string,\n    \"playlistId\": string\n  },\n  \"snippet\": {\n    \"publishedAt\": datetime,\n    \"channelId\": string,\n    \"title\": string,\n    \"description\": string,\n    \"thumbnails\": {\n      (key): {\n        \"url\": string,\n        \"width\": unsigned integer,\n        \"height\": unsigned integer\n      }\n    },\n    \"channelTitle\": string,\n    \"liveBroadcastContent\": string\n  }\n}\nThe key part in this is the item \"liveBroadcastContent\" which has 3 values, which includes the value \"live\", and the item \"videoId\" which has the value needed for embedding the video.\nThe only problem is that we need an API_key for this.... ",
    "KetillG": "Yeah, that sounds great. Would love to join and learn how this all works!. No it's commented-out anyway so it's not doing anything. Removed.. /r/pokemon looked strange without this.. Since you added a check to see if the whole module was disabled I think this should be on by default now. The feature doesn't look that good with this enabled.. That sounds like a great idea. Would probably be simple to substitute the code.. ",
    "WilliamChiu": "Given https://www.youtube.com/channel/CHANNELID/live , https://www.youtube.com/embed/live_stream?channel=CHANNELID seems to work: http://stackoverflow.com/questions/39275889/how-to-embed-new-youtubes-live-video-permanent-url.. Ah.. can somebody help me out with the failed check? Sorry. In order to implement this, should redd.it be added as a host?. @andytuba I dunno how to go about this with only the the image's link. Might want to replace \"Fixes #1234\" with \"Fixes #3883\". To show the line numbers, you could click \"Use subreddit style\".. Thanks! Didn't notice the string encoding util. One thing that bugs me is that the differing widths of 'On' and 'Off' shift nearby content ever so slightly \ud83d\ude22 . thanks!. alright, good idea. Before 'display: none;', use a tab instead of four spaces in order to pass the lint check @kevinliu6102 . ",
    "kevinliu6102": "Like so? \nIs there something I'm missing in orangered.js?. @andytuba I think this should do it?. @andytuba I actually went ahead and added a general option for hiding the new modmail button since I saw the original modmail button had such an option. If it's not needed, just let me know and I'll get rid of it.\n@larsjohnsen Thanks for the advice.. Hopefully the update works. I'm a beginner so a lot of this is actually flying over my head; it's not clear to me what you're asking for in request 1. I may have bitten off more than I can chew. Sorry about that. . Also realized #1234 was fixed already? . Thanks for the advice.. ",
    "tance77": "@gavin19 here is an example sub \nhttps://www.reddit.com/r/learnprogramming/comments/5oc8v3/pythonflask_oauth2_missing_access_token/. ",
    "dtfinch": "It is disabled, and I never clicked the sync button.\nUpon installing I turned off RES modules one by one, and about halfway noticed the \"clean slate\" prefix and used that. I added a domain filter for \"washingtonpost.com\" (my motivator for installing RES), then went to /r/all and saw that my native filters had disappeared.\nI toggled useRedditFilters on and off once after noticing my filters were gone, but I'm fairly certain (so much as one can be) I did not click it before.\n. If I had toggled useRedditFilters on/off quickly without remembering, would that onChange() have run immediately, without waiting for me to click \"Save Options\"? . ",
    "dasJ": "Yes, it already works, sorry. I was mistaken. ",
    "lhofmann": "Is there something wrong with the integration tests? The error I'm getting is \n\nTesting if element <#thing_t1_dcsuno9 .author> has css property \"background-color: transparent\".  - expected \"transparent\" but got: \"rgba(0, 0, 0, 0)\". Thanks!. \n",
    "magicwizard8472": "Welp, not sure what went wrong. Was that change enough to make Travis' check fail?. Tried having a look into this. Made a request to the endpoint @andytuba mentioned, and got this as the response. Still returning the wrong image for some reason.... Ah sorry, must've missed that when looking for a place to insert it.. ",
    "scottlow": "@BenMcGarry not that I know of. Can you provide me with more information such as what version of Windows you're seeing this on and what file you're trying to access? Any reduced case extension you could provide for investigation would also be helpful!\nAlso, where is this request coming from? Content scripts or background? \nIf you start a thread with me once you have more info, I can add a dev who can take a look. ",
    "olihawes": "I think we're definitely stuffed on the strikethrough, but applying font-style: normal; to .res-expando-box seems to sort the <em> while still allowing italicisation from source articles:\n\n. Not that I've noticed, no other markdown formatting seems to fall through at all.. ",
    "monk-time": "I seem to have the same issue on Firefox v53.0.2: starting with the update to 5.6.0, never ending reddit doesn't load anything beyond the first page on /r/new, and it loads posts from default subs for the second page on 'home'. I am able to reproducibly fix this by going into FF settings and switching Privacy > Accept third-party cookies from Never to Always or From visited; the bug reappears when switching back to Never. Curiously, disallowing them was never an issue before the update.\nWhy would this setting influence anything though, aren't reddit cookies not third-party on all reddit pages?\nedit: got a couple of confirmations on the thread in /r/RESIssues as well.. I seem to have the same issue on Firefox v53.0.2: starting with the update to 5.6.0, never ending reddit doesn't load anything beyond the first page on /r/new, and it loads posts from default subs for the second page on 'home'. I am able to reproducibly fix this by going into FF settings and switching Privacy > Accept third-party cookies from Never to Always or From visited; the bug reappears when switching back to Never. Curiously, disallowing them was never an issue before the update.\nWhy would this setting influence anything though, aren't reddit cookies not third-party on all reddit pages?\nedit: got a couple of confirmations on the thread in /r/RESIssues as well.. @BenMcGarry: See here. And for me too adding 'https://www.reddit.com' as an exception fixes this issue.. @BenMcGarry: See here. And for me too adding 'https://www.reddit.com' as an exception fixes this issue.. I think it's obvious that switching to a new profile \"works\" only because it resets all browser settings, including limitations to third party cookies. By default they are allowed in Firefox. @apastuszak, your Linux distro may have custom default settings that tighten security and privacy, which can explain why resetting doesn't work. Try toggling that setting manually.. @erikdesjardins: but switching to and fro by itself AFAIK can't possibly change anything in the old profile, can it? It may be the case that simply restarting the browser after adding exceptions instead of doing what you describe would have fixed it as well.\n@Epholys, does your main profile still have above-mentioned cookie exceptions and third-party set to disabled? Does the issue re-appear if you remove them? Does it disappear if you re-add exceptions or allow third-party cookies? If the last step doesn't work, does restarting the browser help?. @apastuszak: Have you tried adding cookie exceptions and restarting the browser after that as described above?. ",
    "azizLIGHT": "@monk-time your solution worked on my regular Firefox profile. I had to change my setting in Privacy -> History from \"Firefox will: remember history\" to \"Firefox will: use custom settings for history\" for the additional settings to show up where I selected to accept third party cookies \"From visited\". \nWhat's interesting is that the fresh Firefox profile has \"Firefox will: remember history\" selected by default as far as I can tell and didn't need that setting change for third party cookies, nor is it visible, when remember history is selected.. @monk-time your solution worked on my regular Firefox profile. I had to change my setting in Privacy -> History from \"Firefox will: remember history\" to \"Firefox will: use custom settings for history\" for the additional settings to show up where I selected to accept third party cookies \"From visited\". \nWhat's interesting is that the fresh Firefox profile has \"Firefox will: remember history\" selected by default as far as I can tell and didn't need that setting change for third party cookies, nor is it visible, when remember history is selected.. @monk-time your solution worked on my regular Firefox profile. I had to change my setting in Privacy -> History from \"Firefox will: remember history\" to \"Firefox will: use custom settings for history\" for the additional settings to show up where I selected to accept third party cookies \"From visited\". \nWhat's interesting is that the fresh Firefox profile has \"Firefox will: remember history\" selected by default as far as I can tell and didn't need that setting change for third party cookies, nor is it visible, when remember history is selected.. ",
    "Epholys": "@BenMcGarry @monk-time I'm maybe doing something wrong, but I can't resolve the issue, even adding 'https://www.reddit.com' as an exception in the Cookie Exception List. My case seems to be the exception, however, as it worked for many users.. @BenMcGarry @monk-time I'm maybe doing something wrong, but I can't resolve the issue, even adding 'https://www.reddit.com' as an exception in the Cookie Exception List. My case seems to be the exception, however, as it worked for many users.. \"Use custom settings for history\" ; \"Accepts cookies from site\" ; \"Never accept third-party cookies\"\nExceptions :\n http://www.reddit.com\n http://reddit.com\n https://www.reddit.com\n https://reddit.com\n\n\n. \"Use custom settings for history\" ; \"Accepts cookies from site\" ; \"Never accept third-party cookies\"\nExceptions :\n http://www.reddit.com\n http://reddit.com\n https://www.reddit.com\n https://reddit.com\n\n\n. @BenMcGarry Everything works on a fresh profile. Surprisingly, switching back to my main profile seems to have fixed whatever black ritual was going inside Firefox, RES is behaving correctly now!. @BenMcGarry Everything works on a fresh profile. Surprisingly, switching back to my main profile seems to have fixed whatever black ritual was going inside Firefox, RES is behaving correctly now!. @apastuszak The switching profile fix worked on my Linux laptop, so I don't think this is tied to a platform.. @monk-time I think you're right, I switched profile after I added the cookie exceptions but I don't think I tried to restart Firefox just after that. I restarted Firefox several times, so I assumed it would not change anything.\nAnyway, here's what you asked:\n Main profile with exactly the same parameters as above : OK\n Removed the cookie exceptions : ISSUE\n Re-added cookie exceptions : ISSUE\n Restarted Firefox : OK\nSo, sorry, no black ritual inside Firefox, just my imagination!\n. ",
    "apastuszak": "Switching to a new profile and switching back also corrected the issue for me.. To further comment.  The switching profiles \"fix\" only works on Windows.  On my Linux laptop, even creating a new profile and deleting the old one does not fix the issue.. I launched Firefox with the -p option on Arch Linux.  I delete my profile, exited Firefox.\nLaunched Firefox with -p and created a new profile.  Ran with new profile.  Went into preferences and turned off third party cookies.  Installed RES and went to reddit and logged in.  Never Ending Reddit still shows subreddits I am not subscribed to on page 2.\nAny other arch users out there?. @monk-time I don't want to add cookie exceptions.  I don't need them on Chrome.  I should not need them on Firefox.  I block third party cookies for a reason, and I did not need to allow them prior to this update.  Is there a way to go back to the old version and prevent it from updating?. Is there a way to roll back to a version that doesn't require third party cookies?. ",
    "Amndeep7": "Hey just wanted to mention that if you try to use the \"Never-Ending-Reddit\" feature to scroll down your list of upvoted posts (https://www.reddit.com/user/$username/upvoted), you end up with an error along the lines of XHR 403 error as opposed to getting a page with random posts on it like you get if you scroll down the frontpage.  It gets fixed as well when you do the set cookies to never, add exceptions for the various reddit domains, and restart firefox trick, so I figure it's related.. Hey just wanted to mention that if you try to use the \"Never-Ending-Reddit\" feature to scroll down your list of upvoted posts (https://www.reddit.com/user/$username/upvoted), you end up with an error along the lines of XHR 403 error as opposed to getting a page with random posts on it like you get if you scroll down the frontpage.  It gets fixed as well when you do the set cookies to never, add exceptions for the various reddit domains, and restart firefox trick, so I figure it's related.. ",
    "Forty-Bot": "Also an Arch user, the aformentioned process does not work, and I'd rather not have to add exceptions.. ",
    "Tain101": "I would also like to roll back. . ",
    "rmansolino": "Media Controls is missing on static images (multiple sites); \nworks for animated images, (multiple sites/formats). Media Controls is missing on static images (multiple sites); \nworks for animated images, (multiple sites/formats). ",
    "DonWinston": "Yeah as I'm diving into code, I'm realizing how much of the controls and stuff is specific to RES. \nRight now I'm thinking of making two parts, one that takes in a url and outputs metadata like you said and the other, a react component that takes in the metadata and actually displays the media along with options for styling and controls. \nThis is something I want to do pretty soon, so I may just start doing it on my own. If you guys don't get to it, I can contribute the code or we can collaborate on it.. Yeah as I'm diving into code, I'm realizing how much of the controls and stuff is specific to RES. \nRight now I'm thinking of making two parts, one that takes in a url and outputs metadata like you said and the other, a react component that takes in the metadata and actually displays the media along with options for styling and controls. \nThis is something I want to do pretty soon, so I may just start doing it on my own. If you guys don't get to it, I can contribute the code or we can collaborate on it.. ",
    "asampal": "I get the following:\n\"[[\"RES.i18nCachedMessages\",99871],[\"ads.adserverDownvotePixel\",54792],[\"ads.adserverUpvotePixel\",3119],[\"ads.recent\",37],[\"RES.i18nCachedMessagesToken\",17],[\"plugin.RES.state\",8],[\"ui.collapse.wikiactions\",5],[\"search.restrict_sr.checked\",5],[\"ui.shown.welcome\",4],[\"newsletterbar.seen\",4],[\"RES.i18nCachedLang\",2],[\"rules_modal_on_comment_Vive\",1],[\"rules_modal_on_submit_The_Donald\",1]]\"\nI deleted the top two entries and RES is still not working.  BTW, I don't see other errors when loading Reddit pages. So you're saying my profile is toast?. I did that and nothing changed. Was the file supposed to be re-created? It doesn't seem to be.. ",
    "RicardoAlmeida25": "Fixed on version 5.6.4.. ",
    "jrmrjnck": "A page of 25 links does not fit in one screen so some scrolling is needed. First I browse through the top half (e.g. 1-17) and then I browse the second half (e.g. 8-25) by using moveDown until the last link is brought into view. The moveBottom action will skip past 18-24. It's obviously much easier to spam moveDown until scrolling stops than to go one-by-one and carefully watch for link 25, which is what I have to do now. Unless there is another keyboard action I've missed which will let me easily browse just 1 page of links?. The generic browser Page Down is suboptimal for me:\n1. It only shows 16-25 + blank space, rather than 8-25.\n2. Requires moving my hand from the home row.\nI don't understand the rational for having moveDown to go the next page, especially since moveUp does not have complementary behavior. There is already a shortcut to go to the next page, and people can also use never ending reddit to get more links.. ",
    "reallyuniquename": "Yeah, just figured out it's basically effects of #4219 .\n\nIn the past that setting didn't apply to extensions like RES, but now it does\n\nCould you please clarify what's the latest version of RES that ignores browser cookies settings?. All right, the last version that doesn't require adding www.reddit.com to cookies exceptions is 5.4.3.\nThis version is available for download at addons.mozilla.org. It works fine. Don't forget to disable this addon's autoupdate setting in Firefox.. >Adding the ability for the extension to send the same cookies you're already sending in non-extension http requests\n...and allow third-party cookies on reddit domain for all http requests. Yeah, no. You can't apply that setting only to addons.\n\nRunning outdated versions of the extension will mean bugs, no new features, and guaranteed eventual breakage.\n\nKinda true. But generally new versions introduce breaking changes (like this one) that overweight all the new features they provide. \nAnyway you drop Firefox ESR support too fast. I've spent years on 4.5.4 and the only issue I had was broken imgur album inline expander.\nBy the way some users on /r/RESissues chose to completely drop RES instead of allowing 3rd party cookies even for 1 domain.. ",
    "smartfonreddit": "There is another UI bug that could be related to this. In the RES Dashboard, any post that has more than 1,000 upvotes displays the 4th digit underneath the content box. A post with 9773 upvotes is shown as 977. For example http://i.imgur.com/4xz23Wg.png\nOr should I open a new bug for this? \nThanks for the addon!. The extension just updated to 5.10.1 and it fixed the problem. You can delete this. Thanks.. ",
    "Baggykiin": "Can confirm this one. Keyboard navigation does not work at all past the first page. Pressing J once at the bottom of the page will not do anything, simply keeping the last post of the first page selected.\nAdditionally, the click-to-select feature does not work on posts past the first page.\nI use Firefox on several different PCs and they are all affected by this bug.. Nice find, @larsjohnsen! I decided to take a look inside Firefox's about:config page to see if it defined the maximum size of history.state anywhere, and it turns out it does.\nSo for those who want a temporary fix but don't want to disable returnToPrevPage, try increasing the value of browser.history.maxStateObjectSize in about:config. Adding a zero seems to do the trick.. ",
    "ElvisDumbledore": "I've been having this same issue for a while now.\nMy browser (copy from https://www.whatismybrowser.com):\n    Firefox 55.0.3 on 64bit\nMy RES version:\nv5.8.4\n\nAm I in reddit beta (yes/no):\nno\n\nOperating System\nWindows 10 64bit Version 1703 build 15063.540\n\nDeleted all other addons. Pausing Never Ending Reddit and manually clicking at the bottom of the page does not fix the problem. Disabling Never Ending Reddit allows manually opening pages by using the next button.\nSomewhat related: About the same time this error began I noticed that some websites will not load additional pages at all. Nexusmods is one. Specifically the forums section. I can view the first page of results but the next page just show a letter E. Like the original poster said, this is likely something to do with Firefox itself.\n. I've been having this same issue for a while now.\nMy browser (copy from https://www.whatismybrowser.com):\n    Firefox 55.0.3 on 64bit\nMy RES version:\nv5.8.4\n\nAm I in reddit beta (yes/no):\nno\n\nOperating System\nWindows 10 64bit Version 1703 build 15063.540\n\nDeleted all other addons. Pausing Never Ending Reddit and manually clicking at the bottom of the page does not fix the problem. Disabling Never Ending Reddit allows manually opening pages by using the next button.\nSomewhat related: About the same time this error began I noticed that some websites will not load additional pages at all. Nexusmods is one. Specifically the forums section. I can view the first page of results but the next page just show a letter E. Like the original poster said, this is likely something to do with Firefox itself.\n. ",
    "matthew-piziak": "Can repro:\n```\nMy browser\nFirefox 57 on Linux\nMy RES Version:\nv5.8.6\nAm I in reddit beta (yes/no):\nno\nOperating System:\nLinux 4.12.3-1-ARCH\n```\nHappens when everything in the first page is filtered, and I cannot reproduce on Chromium.. ",
    "hellosputnik": "I am experiencing the same issue on Firefox 57.0b6 using RES v5.8.6. I experience the issue on Windows 10 and macOS High Sierra so it's very likely something to do with Firefox.. This bug essentially renders RES obsolete on Firefox. Unfortunately, it looks like we'll have to use Chrome until Firefox or an RES contributor resolves this issue :'(. Thank you so much, @larsjohnsen!. ",
    "Sorgrum": "Neither of the proposed solutions are working for me on Firefox Dev Edition. I've set browser.history.maxStateObjectSize to 65536000 and I have never ending reddit disabled so return to previous page shouldn't be enabled anyway.. ",
    "decadent": "Huh, this seems to move faster than I do =)\nRegarding andytuba's request to avoid faking clicks on the links and use RES' functions instead: afaik RES only adds 'hide child comments' links on nested comments, whereas links on the root nodes are Reddit's\u2015which means the root links potentially can have new event handlers on them in the future, such as statistics. So personally I wouldn't override 'native' clicks with custom functions, but I don't know if there are other considerations at play.. ",
    "njvorwerck": "It's treating the numbers as strings and comparing them lexicographically. A fix would be checking to see if the column has numeric values. If it does, convert them to a numeric type and sort. (I'm not going to do it, I just stumbled upon this page and thought I'd offer my 2 cents) . ",
    "mikeparas": "I was just looking into this, and the code already does what @njvorwerck suggests. The sorting function checks if the cell contains a numeric value using jQuery.isNumeric. However, in the post @airatin links to, his numbers contain commas, and isNumeric apparently does not consider that numeric.\nIt would be easy enough to accommodate this case, but are there other cases that should be considered? Money comes to mind (e.g. '$1.99'), but there are probably others that I'm not thinking of.. That does seem better. Thanks for the suggestion!. ",
    "jrogozen": "whoops, wrong file. sorry. whoops, wrong file. sorry. ",
    "JMccormick264": "I have done that. Multiple times. I am not sure if it's an Edge bug or RES. I was able to load it custom before.. I have done that. Multiple times. I am not sure if it's an Edge bug or RES. I was able to load it custom before.. ",
    "scholtzm": "@erikdesjardins \nOk, everything \"clicked\" after your response.\nI haven't logged into dropbox.com in a very long time. When I clicked the Dropbox button, it launched interactive auth flow. This opens login form without \"Remember me\" checkbox, hence the need to re-authorize RES after every browser restart. This wasn't immediatelly obvious to me and seems like several other people ran into this issue.\nTo fix this, I just went to dropbox.com and logged in. This time, after clicking the Dropbox button, non-interactive auth flow worked and my data was backed up right away.\nTo me, it looks like the interactive auth flow for Dropbox is only usable for a one time backup.. ",
    "jrittenh": "I have a similar issue, but using Google Drive.  For me, it appears to be tied to the multiple Google profiles I have logged in at once.  Every \"first\" access to reddit prompts for login, and I then have to select which account I would like to use.  No additional auth is necessary if I reuse an account, but I have to choose the account every time the browser's session ends.. ",
    "Setmaster": "Same issue @jrittenh . ",
    "shiruken": "I am also experiencing the same issue as @jrittenh and can confirm it appears to be associated with multiple logged in Google accounts.. ",
    "gabrielsoldani": "@jrittenh @Setmaster @shiruken This is a different issue, see #4376.. Apparently, the relevant field is login_hint (see the docs) in the request to https://accounts.google.com/o/oauth2/v2/auth. It should contain the sub identifier, which according to this is Google's account id.\nThis ID seems, from the documentation, to be the same that you receive when you validate the access token, but would require the profile scope as well.. I'm not sure. Also from the docs:\n\nThe server uses the hint to simplify the login flow either by prefilling\nthe email field in the sign-in form or by selecting the appropriate\nmulti-login session.\n\nThe wording of this sounds to me that passing the email would prefill the\nfield and the sub identifier would select the correct session, but we'd\nhave to test it as it's not specified.\nOn Wed, Sep 20, 2017, 13:34 Agrim notifications@github.com wrote:\n\n@gabrielsoldani https://github.com/gabrielsoldani Wouldn't the\nuserinfo.email be sufficient as opposed to the more intrusive\nuserinfo.profile scope as defined here\nhttps://developers.google.com/identity/protocols/googlescopes?\nFrom the login_hint description in the docs\nhttps://developers.google.com/identity/protocols/OAuth2UserAgent:\nSet the parameter value to an email address or sub identifier.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/4376#issuecomment-330908734,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABNb3OUn7FPMl2cRE-Ni2IxJ89L88Uhwks5skT52gaJpZM4Oy2NE\n.\n. I'm not sure. Also from the docs:\nThe server uses the hint to simplify the login flow either by prefilling\nthe email field in the sign-in form or by selecting the appropriate\nmulti-login session.\n\nThe wording of this sounds to me that passing the email would prefill the\nfield and the sub identifier would select the correct session, but we'd\nhave to test it as it's not specified.\nOn Wed, Sep 20, 2017, 13:34 Agrim notifications@github.com wrote:\n\n@gabrielsoldani https://github.com/gabrielsoldani Wouldn't the\nuserinfo.email be sufficient as opposed to the more intrusive\nuserinfo.profile scope as defined here\nhttps://developers.google.com/identity/protocols/googlescopes?\nFrom the login_hint description in the docs\nhttps://developers.google.com/identity/protocols/OAuth2UserAgent:\nSet the parameter value to an email address or sub identifier.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/4376#issuecomment-330908734,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABNb3OUn7FPMl2cRE-Ni2IxJ89L88Uhwks5skT52gaJpZM4Oy2NE\n.\n. \n",
    "andystevens91": "Same thing happens for me using OneDrive, using Firefox 56.0b8 and RES 5.8.4.. Same thing happens for me using OneDrive, using Firefox 56.0b8 and RES 5.8.4.. ",
    "chrisblakley": "Same issue here. I logged into dropbox.com to confirm all the apps and security settings, but I'm still getting it.. ",
    "ELLIOTTCABLE": "I've tried logging out, and back in, on Dropbox.com; no dice over here.\nSame problem.. ",
    "theinfra": "Chrome Version 65.0.3325.181\nRES 5.10.3\nWas having this issue for a couple of days and ever since I logged into the Dropbox website (like suggested here by @larsjohnsen) there hasn't been a repeat prompt for permissions since.\nI was using Google Drive as a backup service but since I use Reddit on 2 different PC's with different settings for each, I decided to switch to Dropbox on one to avoid one config rewriting the other. I haven't used Dropbox for ages,  so 100% I wasn't logged into the website. I just authorized the API prompt on http://redditenhancementsuite.com and the prompts where very frequent, sometimes on the same browser session without closing. I opened session on dropbox.com and the issue got solved.. I had this issue with Dropbox, but as was said here, I tried logging into the http://dropbox.com website in addition to giving permission to the API and for I haven't had the prompt since. Maybe logging into OneDrive website directly solves this issue too.. ",
    "Jademalo": "RES 5.12.8\nIt will correctly sign in to Dropbox and sync for a few hours, but then it requests authorisation again. It's extremely inconvenient since I need to go through the full 2 factor auth in Dropbox, and it happens multiple times per day.. ",
    "kevingrahl": "\n. I could have sworn there was a layering issue when I wrote this yesterday with .ProfileTemplate__sidebar, .ProfileBanner and .ProfileSidebar\nI just wanted to take screenshots to illustrate why I added those but can't replicate that any more. . That made me smile! :smile: \nHappy to help, even if it's just some little CSS fixes.\n. ",
    "BeatLink": "Any updates to this?. ",
    "AgrimPrasad": "@gabrielsoldani Wouldn't the userinfo.email be sufficient as opposed to the more intrusive userinfo.profile scope as defined here?\nFrom the login_hint description in the docs:\n\nSet the parameter value to an email address or sub identifier.. @gabrielsoldani Wouldn't the userinfo.email be sufficient as opposed to the more intrusive userinfo.profile scope as defined here?\n\nFrom the login_hint description in the docs:\n\nSet the parameter value to an email address or sub identifier.. Well, if the user is already signed in (for multiple accounts), then it\nwould only make sense for Google to show the multi login session page,\nrather than the sign in form.\n\nBut yes, will need to test this for certainty.\nOn Sep 21, 2017 00:43, \"Gabriel Soldani\" notifications@github.com wrote:\nI'm not sure. Also from the docs:\n\nThe server uses the hint to simplify the login flow either by prefilling\nthe email field in the sign-in form or by selecting the appropriate\nmulti-login session.\n\nThe wording of this sounds to me that passing the email would prefill the\nfield and the sub identifier would select the correct session, but we'd\nhave to test it as it's not specified.\nOn Wed, Sep 20, 2017, 13:34 Agrim notifications@github.com wrote:\n\n@gabrielsoldani https://github.com/gabrielsoldani Wouldn't the\nuserinfo.email be sufficient as opposed to the more intrusive\nuserinfo.profile scope as defined here\nhttps://developers.google.com/identity/protocols/googlescopes?\nFrom the login_hint description in the docs\nhttps://developers.google.com/identity/protocols/OAuth2UserAgent:\nSet the parameter value to an email address or sub identifier.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/4376#\nissuecomment-330908734,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABNb3OUn7FPMl2cRE-\nNi2IxJ89L88Uhwks5skT52gaJpZM4Oy2NE\n.\n\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/4376#issuecomment-330911085,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGF0x0LtW3cYEF-ne00lpBgcU1JBm9KMks5skUCbgaJpZM4Oy2NE\n.\n. Well, if the user is already signed in (for multiple accounts), then it\nwould only make sense for Google to show the multi login session page,\nrather than the sign in form.\nBut yes, will need to test this for certainty.\nOn Sep 21, 2017 00:43, \"Gabriel Soldani\" notifications@github.com wrote:\nI'm not sure. Also from the docs:\n\nThe server uses the hint to simplify the login flow either by prefilling\nthe email field in the sign-in form or by selecting the appropriate\nmulti-login session.\n\nThe wording of this sounds to me that passing the email would prefill the\nfield and the sub identifier would select the correct session, but we'd\nhave to test it as it's not specified.\nOn Wed, Sep 20, 2017, 13:34 Agrim notifications@github.com wrote:\n\n@gabrielsoldani https://github.com/gabrielsoldani Wouldn't the\nuserinfo.email be sufficient as opposed to the more intrusive\nuserinfo.profile scope as defined here\nhttps://developers.google.com/identity/protocols/googlescopes?\nFrom the login_hint description in the docs\nhttps://developers.google.com/identity/protocols/OAuth2UserAgent:\nSet the parameter value to an email address or sub identifier.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/4376#\nissuecomment-330908734,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABNb3OUn7FPMl2cRE-\nNi2IxJ89L88Uhwks5skT52gaJpZM4Oy2NE\n.\n\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/issues/4376#issuecomment-330911085,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGF0x0LtW3cYEF-ne00lpBgcU1JBm9KMks5skUCbgaJpZM4Oy2NE\n.\n. @gabrielsoldani I have verified through testing with Google's sample client id that a login_hint with email address suffices for recognition, and the user doesn't have to choose from a list of accounts.\nThese are my reproducible test steps:\n1. Logged into 2 Google Accounts.\n2. Obtained a sample google client ID from the docs and sent an auth request, with scopes for Google Drive appdata + email (need to send it first time, but not once the email address is known). Also provided a login_hint for the desired email address and the redirect_uri was set to localhost. This GET request was performed in the browser:\nhttps://accounts.google.com/o/oauth2/v2/auth?client_id=583306224539-atbcaa8ne8g85e8kc006o6vmq99qiid0.apps.googleusercontent.com&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.appdata+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&redirect_uri=http%3A%2F%2Flocalhost%2Foauth2callback&response_type=token&login_hint=redacted%40redacted.com\n3. The previous request redirected to the localhost redirect_uri without asking the user to choose the google account to authenticate with. This is where the access_token was obtained:\nhttp://localhost/oauth2callback#access_token=redactedzLRXrSUlV_59eN2sg_GrHWibRmGlzqUT544PF4rNbMAyBBQ7sx0zInNs8xvnLX73a0gCLhoVu1kKrc2&token_type=Bearer&expires_in=3600\n4. Sent the following request using Postman to verify and decrypt the obtained token:\ncurl -X POST \\\n  'https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=redactedzLRXrSUlV_59eN2sg_GrHWibRmGlzqUT544PF4rNbMAyBBQ7sx0zInNs8xvnLX73a0gCLhoVu1kKrc2' \\\n  -H 'cache-control: no-cache' \\\n  -H 'postman-token: d7158dfc-4e77-d424-1caf-bd6f911fc0b1'\n5. The tokeninfo endpoint responded with the following. The decrypted email address here matches with the email address from the login_hint in the first step:\n{\n    \"azp\": \"583306224539-atbcaa8ne8g85e8kc006o6vmq99qiid0.apps.googleusercontent.com\",\n    \"aud\": \"583306224539-atbcaa8ne8g85e8kc006o6vmq99qiid0.apps.googleusercontent.com\",\n    \"sub\": \"redacted60989126715\",\n    \"scope\": \"https://www.googleapis.com/auth/drive.appdata https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/plus.me\",\n    \"exp\": \"1506142086\",\n    \"expires_in\": \"3556\",\n    \"email\": \"redacted@redacted.com\",\n    \"email_verified\": \"true\",\n    \"access_type\": \"online\"\n}. @gabrielsoldani I have verified through testing with Google's sample client id that a login_hint with email address suffices for recognition, and the user doesn't have to choose from a list of accounts.\nThese are my reproducible test steps:\n1. Logged into 2 Google Accounts.\n2. Obtained a sample google client ID from the docs and sent an auth request, with scopes for Google Drive appdata + email (need to send it first time, but not once the email address is known). Also provided a login_hint for the desired email address and the redirect_uri was set to localhost. This GET request was performed in the browser:\nhttps://accounts.google.com/o/oauth2/v2/auth?client_id=583306224539-atbcaa8ne8g85e8kc006o6vmq99qiid0.apps.googleusercontent.com&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.appdata+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&redirect_uri=http%3A%2F%2Flocalhost%2Foauth2callback&response_type=token&login_hint=redacted%40redacted.com\n3. The previous request redirected to the localhost redirect_uri without asking the user to choose the google account to authenticate with. This is where the access_token was obtained:\nhttp://localhost/oauth2callback#access_token=redactedzLRXrSUlV_59eN2sg_GrHWibRmGlzqUT544PF4rNbMAyBBQ7sx0zInNs8xvnLX73a0gCLhoVu1kKrc2&token_type=Bearer&expires_in=3600\n4. Sent the following request using Postman to verify and decrypt the obtained token:\ncurl -X POST \\\n  'https://www.googleapis.com/oauth2/v3/tokeninfo?access_token=redactedzLRXrSUlV_59eN2sg_GrHWibRmGlzqUT544PF4rNbMAyBBQ7sx0zInNs8xvnLX73a0gCLhoVu1kKrc2' \\\n  -H 'cache-control: no-cache' \\\n  -H 'postman-token: d7158dfc-4e77-d424-1caf-bd6f911fc0b1'\n5. The tokeninfo endpoint responded with the following. The decrypted email address here matches with the email address from the login_hint in the first step:\n{\n    \"azp\": \"583306224539-atbcaa8ne8g85e8kc006o6vmq99qiid0.apps.googleusercontent.com\",\n    \"aud\": \"583306224539-atbcaa8ne8g85e8kc006o6vmq99qiid0.apps.googleusercontent.com\",\n    \"sub\": \"redacted60989126715\",\n    \"scope\": \"https://www.googleapis.com/auth/drive.appdata https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/plus.me\",\n    \"exp\": \"1506142086\",\n    \"expires_in\": \"3556\",\n    \"email\": \"redacted@redacted.com\",\n    \"email_verified\": \"true\",\n    \"access_type\": \"online\"\n}. This bugfix has been tested in Chrome, Firefox and Edge. Should be ready for review and merge now.. Is this ok for merging now? I think I've addressed the outstanding concerns. Please let me know if this is not the case, thanks.. Are there still any outstanding concerns here?. Since adding optional permissions in Firefox seems like a non-trivial task, how about we get this in first and then handle the permissions in a separate PR? . Because the email address cache is invalidated here when a user logs out of their google account: https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4440/files#diff-ad1ac56107331cb3882bedd9fd80ffb0R17\nThe user could get logged out of their google account for several reasons:\n1. Manual google account log out.\n2. Cookies cleared.\n3. Google for Business accounts are automatically logged out after 30 days.\nFurthermore, if after logout, the user chooses to log in with a different google account, then this cached email address would need to be updated. Note that with the login hint, the user would be prompted by Google to log into the same account which was stored here in local storage, but it's up to the user to log into the same or different google account.. Thanks, nice catch. Had missed that while thinking about the JSON parsing.. Thanks, that makes sense. Should we also remove these redundant headers from other ajax calls where type: 'json' has already been specified, e.g. https://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4440/files/3ccdb7164d81aa4cc06fea43edd18be54c6c2c42#diff-0a606b28b4a58094611f298cd827e0b9R94 ?. Unfortunately, no, the Google API specifies that this access token should be sent as a query parameter. Ref.: https://developers.google.com/identity/protocols/OAuth2UserAgent#validate-access-token\nI also tried to send this info in an Authorization header, but got a 400 Bad Request response:\ncurl -X GET \\\n  https://www.googleapis.com/oauth2/v3/tokeninfo \\\n  -H 'authorization: Bearer <access token...>' \\\n  -H 'cache-control: no-cache' \\\n  -H 'postman-token: c7c9317b-2089-e3a0-c4eb-dc076de14af6'\nResponse: \nStatus: 400 Bad Request\n{\n    \"error_description\": \"either access_token, id_token, or token_handle required\"\n}. ",
    "jon-m-chu": "It looks like reinstalling Chrome helped with this issue. . ",
    "ingochris": "Do you mean the cumulative vote amount?. Do you mean the cumulative vote amount?. ",
    "leviroth": "Looking into this a little more, it seems to be related to an inaccurate document.documentElement.getBoundingClientRect() height value. This is meant to determine the size and position of the current viewport, and it's used that way in the RES scrolling code, e.g.. However, on /r/NFL's pages I get much larger values:\n```\n\ndocument.documentElement.getBoundingClientRect()\nDOMRect {x: 0, y: -1730, width: 1287, height: 45978, top: -1730, \u2026}\nbottom: 44248\nheight: 45978\nleft: 0\nright: 1287\ntop: -1730\nwidth: 1287\nx: 0\ny: -1730\nproto: DOMRect\n```\n\nPerhaps a fix would be as simple as changing getViewportSize to use document.documentElement.clientHeight etc. instead of getBoundingClientRect - but I'm very far from a JS expert.. >It appears that window.getComputedStyle(document.documentElement) returns the correct fractional values, and should work fine in this case since the function is memoized.\nThat seems to have the same issue on /r/NFL where the documentElement has the height of the whole page rather than the height of the viewport.. That looks like it works.. ",
    "tersers": "I'd like to take a shot at this!. It appears that certain posts linking to a i.redd.it URL don't link to the image itself but rather to the comments. See below:\n<div class=\"entry likes RES-keyNav-activeElement\">\n    <div class=\"top-matter\">\n        <p class=\"title\">\n            <a class=\"title may-blank loggedin \" data-event-action=\"title\" href=\"/r/pics/comments/78oxmo/my_little_guy_fought_off_3_coyotes_and_lived_to/\" tabindex=\"1\" data-href-url=\"/r/pics/comments/78oxmo/my_little_guy_fought_off_3_coyotes_and_lived_to/\" data-inbound-url=\"/r/pics/comments/78oxmo/my_little_guy_fought_off_3_coyotes_and_lived_to/?utm_content=title&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=pics\" rel=\"\">My little guy fought off 3 coyotes and lived to tell the tale</a>\n            <span class=\"domain\">(<a href=\"/domain/i.redd.it/\">i.redd.it</a>)</span></p>\n        <a class=\"expando-button toggleImage image collapsed collapsedExpando\" title=\"\" data-host=\"default\"></a><span></span>\n        <p class=\"tagline \">submitted\n            <time title=\"Wed Oct 25 16:45:39 2017 UTC\" datetime=\"2017-10-25T16:45:39+00:00\" class=\"live-timestamp\">10 hours ago</time> by <a href=\"https://www.reddit.com/user/skatesofla\" class=\"author may-blank id-t2_edq3b\">skatesofla</a><span class=\"RESUserTag\">\n                <a class=\"userTagLink RESUserTagImage\" title=\"set a tag\" href=\"javascript:void 0\"></a>\n            </span><span class=\"userattrs\"></span></p>\n        <ul class=\"flat-list buttons\">\n            <li class=\"first\"><a href=\"https://www.reddit.com/r/pics/comments/78oxmo/my_little_guy_fought_off_3_coyotes_and_lived_to/\" data-inbound-url=\"/r/pics/comments/78oxmo/my_little_guy_fought_off_3_coyotes_and_lived_to/?utm_content=comments&amp;utm_medium=hot&amp;utm_source=reddit&amp;utm_name=pics\" data-href-url=\"/r/pics/comments/78oxmo/my_little_guy_fought_off_3_coyotes_and_lived_to/\" data-event-action=\"comments\" class=\"bylink comments may-blank\" rel=\"nofollow\">4080 comments<span class=\"newComments\">&nbsp;(11 new)</span></a></li>\n            <li class=\"share\"><a class=\"post-sharing-button\" href=\"javascript: void 0;\">share</a></li>\n            <li class=\"link-save-button save-button\"><a href=\"#\">save</a></li>\n            <li>\n                <form action=\"/post/hide\" method=\"post\" class=\"state-button hide-button\">\n                    <input type=\"hidden\" name=\"executed\" value=\"hidden\"><span><a action=\"hide\" href=\"#\">hide</a></span></form>\n            </li>\n            <li class=\"report-button login-required\"><a href=\"javascript:void(0)\" class=\"reportbtn access-required\" data-event-action=\"report\">report</a></li>\n            <li class=\"crosspost-button\"><a class=\"post-crosspost-button\" href=\"javascript: void 0;\" data-crosspost-fullname=\"t3_78oxmo\">crosspost</a></li>\n            <li><span class=\"redditSingleClick\"></span></li>\n        </ul>\n        <div class=\"reportform report-t3_78oxmo\"></div>\n    </div><span></span>\n    <div hidden=\"\" class=\"res-expando-box\" style=\"min-height: 20px\">\n        <div class=\"res-expando-box-inner\"></div>\n    </div>\n</div>\n\nIn the title element, where you would normally find your imgur link, only the comments URL is found.\nI'm not quite sure if this can be fixed RES-side, or if it's an issue with how reddit populates their entries.\n. Hey there, sorry about that! I'm quite new to JS. The recent commit fixes the linting issues. Thanks for pointing those out!. ",
    "Criticalstone": "I would like to contribute to this, will take a look at it this weekend. @miggs125 Seems like @asoderman made a PR on this issue? #4642 . ",
    "miggs125": "Is anyone assigned to this issue? I would like to work on it.. ",
    "isiah-lloyd": "I have just tested this issue and can reproduce using version 5.8.6 on Chrome. I have just tested this issue and can reproduce using version 5.8.6 on Chrome. I believe the issue is occuring at this line of code: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/userbarHider.js#L112. It seems to set all unset the display for all the children of #header-bottom-right which includes .message-count. I'm going to try to fix it!. I believe the issue is occuring at this line of code: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/userbarHider.js#L112. It seems to set all unset the display for all the children of #header-bottom-right which includes .message-count. I'm going to try to fix it!. Duplicates: #3128. @larsjohnsen I don't really have an opinion, just saw that the feature has been requested. Maybe have a toggle to automatically switch or to just notify? \n@andytuba What do you think? . @andytuba Sorry for the long wait between this commit but I think it's now ready! I switched from using query parameters to saving the time of switch in RES storage and seeing if the account switched within the last minute to show the notification. . @larsjohnsen I've updated it so it now only calls the function once before the module loads. . @larsjohnsen I switched to using sessionStorage. @larsjohnsen Implemented your suggestion for notifications.. Was just wondering if there is anything I need to do for the PR, or if we are just waiting to merge it?. I very much agree with you, I felt icky writing that code but it was the only solution I could think of to retain data across the page refresh to login. I'm trying to learn the Storage module by reading the Comment Hide Persistor code but it's kind of confusing for someone who doesn't have much ES6 knowledge. Is there any documentation available? If this is changed this should fix some other changes you requested as well retaining to the Query Parameter.. If I understand it right watchForThings(['post'], autoSwitcher); would return posts even if we were on the frontpage or a subreddit listing. We don't want to switch a user if they just happened to load one of their posts on the frontpage. I agree that for the comments if statement it is superfluous. Doing this causes each comment on a user page to be autoSwitched, eventually leading to you being logged out of reddit.. Interestingly, that's what I tried first but after some googling it seems that flow does not like checking directly against a function argument but requires that the variable is a const. So I cannot just do if (!username) return; like I do below.. ",
    "EchterAgo": "I tested it, works fine for me. Sadly I managed to delete my RES settings while testing :. Not for me, tested with Chrome and Firefox, running fine for 2 days now.. ",
    "4thJenkins17": "reference #4477 . @andytuba were my changes enough?. Totally goofed. Thanks.. @andytuba Changes made.. ",
    "octagonal": "Can I claim this?. Fixed! Btw, I noticed that the help message will only show if the helper function returns null. So in the settingsConsole command it will never show. See my updated code. You were right, fixed!. ",
    "seandgrimes": "@erikdesjardins Thanks for taking a look at this, I've made the requested changes and this is ready for another round of review.. ",
    "corysimmons": "@larsjohnsen Thanks. It seems enabled, but the videos still drag.\nSome videos seem to load much faster than others. I would think it was Gfycat's fault, but if I go directly to the Gfycat page with the slow-loading video, they load/playback instantly.\nDoes anyone else seem to have this problem?\nCollaborators could probably test by throttling their device and connection a little bit and scrolling through pages of gfycats after hitting Show Images.. ",
    "kraigh": "@erikdesjardins should the ESLint rule also check for other invalid names that would need quotes, like with a \"-\" or a reserved name? Or is just checking for spaces sufficient?. ",
    "nkoxlien": "I accidentally forked this branch from another issue branch instead of the master and didn't realize until after I made the pull request :/  I'll make another pull request from a branch with the correct changes. . Yeah that's cleaner.  I still want it to be inclusive of the case where the string is only 5% different, so in my case it'll be return distance / title.length <= 0.05;.  I'll add another commit to change this.. Yeah I wasn't really sure what the best place for it would be, but that seems a lot more fitting.  I'll add another commit moving it to string.js .. For some reason I assumed the issue was asking for an additional class on top of res-srstyle-disabled (which wouldn't really make sense looking back on it).  I'll change it to just use the existing \"no subreddit style\" class.. ",
    "draggehn": "@erikdesjardins It is indeed because I had \"privacy.resistFingerprinting\" enabled. Toggling that setting off reveals the lovely Snoo that I missed. Do you know of any way to have this setting enabled and still have the favicon show up?. ",
    "niralpokal": "I can work on this if it is still available . I was able to make a change that only displays 30 characters and will display the full text if the user hovers. I only made this change to user tagging, but are there other things that you can tag? Let me know if this was what you were looking for or if you want it to be different. \nBelow is an example:\n\n. I can make those changes. I can then do a PR. I made a PR but it failed on the linting test, I can fix that up. One thing I wanted to ask was that @larsjohnsen  pointed out that maybe I could use CSS instead. I honestly didnt think of that but that could work aswell. I can change it to CSS but I was wondering if you guys preferred I apply the style inline or with a class? . @larsjohnsen  I didn't even consider that, that would work really well. I asked the question in the main issue and wanted to get more thoughts on what they preferred.  . I looked into the CSS problem further and the problem has to do with the anchor tag being an inline element. I would have to change it display to inline-block or block.  I haven't tried that yet but I can test this and see if that works. \nI made a quick JS Fiddle for testing this: https://jsfiddle.net/6c3Lckua/\n. I updated the code to do the CSS way and it works. The only problem now is that it makes the overflow start at  38 characters and the tags display not centered. I can adjust these with the margin and changing the max-width property but I wanted to see what your thoughts were:\n\n . Is there still interest in implementing this? . Is there still interest in implementing this? . Does this happen to you in all of the browsers, or a specific one? . Does this happen to you in all of the browsers, or a specific one? . @andytuba I can add a check against the cookies if you want to go down that route. . @andytuba I can add a check against the cookies if you want to go down that route. . I am able to reproduce this, let me see what is causing the issue. . Thanks! I didn't notice that, I can make that change! . ",
    "mercutiodesign": "I just tested this code and I noticed two linting errors: \n...\\lib\\modules\\singleClick.js\n80:16  error  Expected '!==' and instead saw '!='  eqeqeq\n85:38  error  Expected '!==' and instead saw '!='  eqeqeq\n. ",
    "CapacitorSet": "Pinging @erikdesjardins for feedback on the prompt thing.. ",
    "tjwhalen16": "This sounds cool. I'll take it.. ",
    "jsmnbom": "Would you like me to remove the index parts from chrome/background.entry.js#L31 as well, or should they stay?\nWhere is the index (and stuff like the cookieStoreId) coming from in the first place? \nSubmitted #4518 with current changes.. Ah I see, thank you for that explanation :). ",
    "Giljjj": "The thing.entrygets a likes class for an upvote, dislikes class for a downvote, and unvote for not voting.\nI think it's easier to check for the classes of the reference we already have, than scanning (even if the path is known) for the upmod \\ downmod, for each post the filter checks.\nI may be wrong, so please do double check me ;)\nThanks!. ",
    "LtPatterson": "Any updates? This feature is still not working.. Doesn't work even on a fresh install. Sometimes it does work, but rarely. It worked for a few days with the new FF update and broke again out of nowhere. I keep seeing threads about this being posted in /Enhancement so I figured I would make a report here on the github.\nI am still experiencing the issue since moving to FF Quantum. Before Quantum, it worked, so I think it might be an RES w/ FF Quantum issue specifically.. I'd really like to see if anyone else has this issue as it drives me nuts!. Cleared cookies from reddit, whitelisted the site (https://reddit.com) - only worked when I used that exact URL, and the issue is finally resolved (for now). I hope it stays fixed! I had the wrong URL listed in there, you must have the exact URL as it appears in the browser tab or it will not work after restarting the browser.\nClosed.. ",
    "CRMinges": "I would be interested in working on this for my first PR. Would it be possible to get some direction on where to start? Thanks!. ",
    "Alexendoo": "Whoops, I missed that sass-lint didn't like that property.\nLooks like sass-lint does not yet have a release containing the property but it's in the develop branch sasstools/sass-lint@ba8887eac8061dbdd0487025f75137c9c31eeba6. I've added an exemption to .sass-lint.yml in the meanwhile.. ",
    "justinjk007": "OK tried it but as you can see here the white color is still over-riding my css file.\n\n. I also tried \ncss\n.entry.RES-keyNav-activeElement .md-container {\n    background-color: #434b55 !important;\n}\nNo change what so-ever. so what will be correct snippet then ?. Thank you very much\ncss\n.res .entry.RES-keyNav-activeElement {\n    background-color: #434b55 !important;\n}\nThis fixed it. ",
    "asoderman": "I moved my implementation to the saveComments module and made the recommended changes. I had to partially rewrite functionality so please let me know if I forgot any changes.\nI probably need to implement some sort of filter for filtering autosaved comments to not clutter the users saved comments. Also a way to disable this feature.. @andytuba Is everything good here?. I don't see any other module.options however I moved this one to the top of the file.. What do you think about storing the reply comment id as a property of saved comments, then in the event of a deleted comment retrieving saved comments by their child (reply) id? Just brainstorming.\nThe problem is that the comment is saved before the reply is actually created.. I'm not sure how to fix this as it doesn't appear there is a method to return a BlobWrapper keys.. It appears the id does remain visible in deleted comments via <div class=\"reportform report-t1_drow9l2\"></div>. I will try to extend functionality to deleted comments.. ",
    "farid-fari": "Sadly I have way too many pinned tabs to do that....\nI'll close the issue since it seems to be only me.. Can confirm a reset does work.. ",
    "blackwind": "Well, it's good to see the version restriction was chosen conscientiously, though I do wonder if it's worth breaking compatibility for a surely-not-insignificant portion of your users over a triviality precious few would've ever noticed. Given that it's only a couple lines, would you consider restoring the old code behind a conditional (if Firefox < 57, do it the old way; else, do it the new way)?. You might not endorse it, but that's exactly what's happening with the RES team's silence on this issue, potentially putting users at risk. It'd be great to see accommodations made for at least Firefox 56, which many of us will be unable to move on from for the foreseeable future.. ",
    "Mutantoe": "You can go here to download an older version. That's what I've done, and it seems to work fine.. ",
    "overdodactyl": "Now that Reddit has the option to opt out of the new profiles, should I go ahead and close this?\nI guess the only reason to keep it around would be if there's interest in it and there's reason to believe Reddit will remove the option once the redesign hits. If that's the case I'll make sure to keep up-to-date with any changes (looks like there's just a few things that would need adjusting at this point)...otherwise I probably won't bother :). Sounds good! At the time there were enough requests/questions about opting out of viewing the new profiles I thought this might be an avenue worth looking into in :). I could only get this to work without using i18n(.  \ni.e name: styleTweaksflairEmojiAsTextNever seems to work and loads in the value from en.json, but i18n('styleTweaksflairEmojiAsTextNever') prevents the extensions from being loaded all together\nDoes that sound right?. Fixed in 79b904e. ",
    "Araly": "any news on this ?. ",
    "flymason": "Based on the code in download.js, it looks like Firefox already prohibits cross-origin download actions. Perhaps we need to switch chrome over to send a download message like Firefox here.. ",
    "DavidHaynesHasGitHub": "@andytuba not sure why the travis test is failing as none of them are failing locally, any advise? . ",
    "aslakhol": "I think saving for this post makes a lot of sense. One of my main usecases for tags are to follow one user for the duration of a thread. Take an example of an /r/askreddit post where a particular user who is not the OP has specific domain knowledge that makes their comments particularly interesting for this debate, but you might not be interested in following them outside of this thread. Now imagine this being an active thread, and the user in question is actively posting comments. You might want to refresh to see new activity.. ",
    "a-marquez": "I have rebased this to the latest from upstream, it is no longer failing (I believe it was a false negative last time). Could I have someone please review this or point me to the next step? . ",
    "thekodester": "Cool, thanks for the information, didn't see that post.. ",
    "CPUTek1": "Chrome Version 69.0.3497.100 (Official Build) (64-bit)\nWindows 10\nPlugins:\nAvast Online Security 18.3.56 (disabled)\nReddit Enhancement Suite 5.12.6\nFilters work on the old version of Reddit, but not the new version.. Chrome Version 69.0.3497.100 (Official Build) (64-bit)\nWindows 10\nPlugins:\nAvast Online Security 18.3.56 (disabled)\nReddit Enhancement Suite 5.12.6\nFilters work on the old version of Reddit, but not the new version.. ",
    "filipewl": "\nSorry, still working on them! If anyone would like to help, I've already posted a WIP pull request\n\nLinking it here:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/pull/4768. ",
    "MatthewRalston": "So it's a dead feature. Cool. Can you at least remove the component from the UI, it's misleading.. ",
    "prasoc": "I have minimised the pull request to only have functionality for the \"Original Content\" nav item (incl. translations which needs to be implemented). can i get a review on this please :). Whoops that was copy-pasting from Chrome Devtools, will take notice in the future :). it seems to load the hamburger menu once and then at some point in the future re-load the items - it would be nice to have an event that we can hook into. I see, that makes sense. So the \"@xxxx.json\" take the parent JSON array? Less redundant code. OK I will split the originalOC code and pull it in. Fixed. It does look cleaner than using a triple-equality comparison. What is the \"jsapi\"? Where is it located? I cannot find anything online related to this term. ",
    "kdreagle": "I'm not sure that this is fixable, or related to RES, because at least on my end, manually clicking load on the bottom that link without RES freezes the page for 10 seconds. I have a lot of tabs open and my free memory is running low. With RES, it's like a second longer, whether the auto load comments feature is on or off. I think it's mainly a problem with the browser being low on resources. The fact that more extensions slows this down supports my theory. The best way to reduce the loading times and fix this issue is to change the native Reddit preference to load less comments. \nThe only way to reduce load times on the RES end is to make optimizations pretty much anywhere, which isn't being overlooked. The Reddit redesign seems to fix the issue for me with my limited memory, but I see the moderators for RES decided not make a never ending Reddit module for the redesign.. Could you provide a link or two to with an example? I don't seem to have this problem on my end but I could also be misinterpreting the issue. I'm also having trouble finding self texts with media inside in the first place.. Ah I see. Yeah, I don't think that should be happening. Looks like this happens even if autoExpandSelfText is off.\nEdit: I see, this is because it's a native expando, which I wasn't aware existed. So this isn't a bug. I guess the two options to fix this are either give the native expando the controls that the RES expando has or just ignore the native expando and remove it.. First thing I can think of is update npm by typing npm install -g npm and then try npm install again.\nYou can also just type npm i instead of npm install.. Looks like Travis is failing for real this time because of my changes\ud83e\udd14. Gonna try to figure this out.\nEdit: I see where the problem is. Will commit a fix in a bit. Maybe I should've kept the escapeHTML like this escapeHTML(decodeURIComponent(escape(alt)))?\nI guess I should also try encodeURI instead of escape but it's 3am so I'm going to bed lol. I put the escapeHTML function back in to be safe, but it looks like it isn't needed at least for recent browsers because I tried injecting those escape characters after the decodeURI function call just to see what would happen. The first example screencap I gave even has quote characters in it without any problems.\nAnd as for the escape function, it is deprecated (not strictly), but encodeURI and encodeURIComponent do not work at all in terms of fixing the original bug. Maybe escape worked because the XKCD API is also deprecated? I guess using deprecation is one way to fight deprecation.\nEither way I guess this is a fix for most cases right now.. Yeah I painstakingly tried cooking up a hack that could decode it for a few hours until I came across a much easier solution on stackoverflow \ud83d\ude44. Unrelated to this issue, the shortened bit.ly link is broken. Looks like a bot bug.. Oy vey, I should've check out the Thing class first. Thanks! Apparently that was actually causing the flow errors.. ",
    "flipperbw": "Here's one: https://www.reddit.com/r/MadeMeSmile/comments/95115t/this_tomato_looks_like_a_duck_that_is_all_have_a/\nNotice no controls, no ability to resize. Yet if you go to https://www.reddit.com/r/MadeMeSmile/ and manually open the expando, the controls appear.\nhttps://imgur.com/a/Yob19WF\n. ",
    "JackNeus": "I'm new to open source and would like to take a stab at this. I'm not sure I fully understand what the goal is, though. \nDoes this fix involve finding the u/ in the post text and then calling the referenced function? If so, what would be the most appropriate file to add the code to?. I'm new to open source and would like to take a stab at this. I'm not sure I fully understand what the goal is, though. \nDoes this fix involve finding the u/ in the post text and then calling the referenced function? If so, what would be the most appropriate file to add the code to?. ",
    "IAmBullsaw": "Take this with a grain of salt  since I have no connection to this repo - except via Hacktober ^^, but I think it means that:\nWhen making a self posts on reddit, it's always made by one user.  When this user posts answers to other users questions, the username is highlightet to more easily discern the user who made the AMA post.\nHowever, there's often AMA's where a whole team answers questions. Still one user can make the original post, but it's often that the other team members are presented with their usernames in the self posts post text. \nI think it's these users who are supposed to be highlighted in the same way the original poster is. Makes sense?. Take this with a grain of salt  since I have no connection to this repo - except via Hacktober ^^, but I think it means that:\nWhen making a self posts on reddit, it's always made by one user.  When this user posts answers to other users questions, the username is highlightet to more easily discern the user who made the AMA post.\nHowever, there's often AMA's where a whole team answers questions. Still one user can make the original post, but it's often that the other team members are presented with their usernames in the self posts post text. \nI think it's these users who are supposed to be highlighted in the same way the original poster is. Makes sense?. ",
    "Brcrwilliams": "I have created a WIP pull request for this feature. Feedback welcome. There are a few things that I am not sure how to do (locales?), which is described in the PR if anyone is able to offer advice. . I have created a WIP pull request for this feature. Feedback welcome. There are a few things that I am not sure how to do (locales?), which is described in the PR if anyone is able to offer advice. . New changes pushed. I have split this up into a few functions. getUserLinksFromContainer in order to get the HTMLElements, then getUsernameFromAnchor to extract the usernames using regex imported from userTagger. Main thing that looks iffy to me is the query selector to get the links, I am not sure if there are edge cases that it does not cover.\nI also added titles and descriptions to en.json, and tested this as working in Chrome 69 using this Reddit post.. Could you please supply the exact link that you are trying to use? It is not clear from your post which site you are trying to reach.. Could you please supply the exact link that you are trying to use? It is not clear from your post which site you are trying to reach.. This one? https://addons.mozilla.org/en-US/firefox/addon/reddit-enhancement-suite/\nI don't think there is a good way to distribute Firefox extensions besides Mozilla's Add-On's site.\nThat aside, it is concerning that you are getting an HSTS error. HSTS is a security feature which Mozilla is using to prevent Man-In-The-Middle attacks. It prevents you from accepting invalid TLS (HTTPS) certificates (An attacker can create a fake one and use it to intercept your connections if you accept the invalid certificate). The fact that you are receiving this error suggests that someone is doing something nefarious on your network. . This one? https://addons.mozilla.org/en-US/firefox/addon/reddit-enhancement-suite/\nI don't think there is a good way to distribute Firefox extensions besides Mozilla's Add-On's site.\nThat aside, it is concerning that you are getting an HSTS error. HSTS is a security feature which Mozilla is using to prevent Man-In-The-Middle attacks. It prevents you from accepting invalid TLS (HTTPS) certificates (An attacker can create a fake one and use it to intercept your connections if you accept the invalid certificate). The fact that you are receiving this error suggests that someone is doing something nefarious on your network. . I see no reason to do this. They are asking that we send them the user's tracking cookies, since the cookies aren't necessarily sent when API calls are being made. I dislike these analytics methods, I block them on all sites that I visit, and I would not like for them to be implemented into any software I use. Full stop. \nSo, my mind is already made up at that point. Then you add on the legal conundrums and the amount of work that this would cost us and it solidifies into a hard no. I agree with @honestbleeps: If this is really a requirement for Gyfcat, then I would rather drop Gyfcat support than implement these analytics. . Done. I imported usernameRE from userTagger in order to extract usernames from the href.\nI also created a helper function in order to get /u/ links from a container, but it basically uses the same query selector as this line, so not sure if you wanted something different.. Good idea. I have added this in my latest changes.. Bit of a nitpick, but you should use forEach instead of map here. Map is intended for making a copy of an array with changes to each element. . I didn't realize that anchor elements had those attributes. That is much better, thanks.. ",
    "nguyenminh-phuc": "I deleted package-json.lock, then reran npm start and the error went away.. ",
    "jistjoalal": "3128 dup.",
    "Unihedro": "Yes. ",
    "kuhnertdm": "@niralpokal Just installed on Chrome to test, Chrome is currently switching after a ~1 second delay, while Firefox is currently switching after a ~1.5 second delay. Like I said in the OP, the delay time seems to vary.\n@andytuba This is using the old site. See the linked recording.. @niralpokal Just installed on Chrome to test, Chrome is currently switching after a ~1 second delay, while Firefox is currently switching after a ~1.5 second delay. Like I said in the OP, the delay time seems to vary.\n@andytuba This is using the old site. See the linked recording.. @larsjohnsen The delay is between when I click a particular account and when the page reloads. The widget shows up just fine.. @larsjohnsen The delay is between when I click a particular account and when the page reloads. The widget shows up just fine.. TFW making a fix is \"Difficulty-1_Easy\" but reading the issue is slightly more difficult :^). TFW making a fix is \"Difficulty-1_Easy\" but reading the issue is slightly more difficult :^). ",
    "vince": "Just also pointing out that, as of today, the addon version is listed at v5.12.6 on the website but 5.10.3 on the addons page.. ",
    "Void2258": "Confirmed still not working after latest update.. ",
    "Dogeek": "Thanks for the input, I've edited the code in my issue.\nThere's not really a good way to check if the tab is a new tab. From what I know though, the new tab page is titled \"New Tab\" even though the rest of chrome is in another language.. ",
    "CthulhuHalo": "The link that goes to the firefox addons page for RES. I can't access it.. The link that goes to the firefox addons page for RES. I can't access it.. ",
    "fenuks": "Hello, to answer your question, for example I have few multireddits that I browse once a week, which means that I have many, many pages to catch up, and sometimes I want to make a break, or move with browsing to mobile device, etc. As side note, I think that most often infinite scrolls give little power for user to control it, or return to the point where browsing has ended previous time.\nIn case of Never-Ending Reddit workaround to \u2018extract\u2019 next URL is, as noted above, to pause it, but it's a bit tedious, doesn't work instantly (user has to scroll through next page to have box with next page link), and I simply think it's convenient to have this information available \u2018out-of-box\u2019.. Hello, to answer your question, for example I have few multireddits that I browse once a week, which means that I have many, many pages to catch up, and sometimes I want to make a break, or move with browsing to mobile device, etc. As side note, I think that most often infinite scrolls give little power for user to control it, or return to the point where browsing has ended previous time.\nIn case of Never-Ending Reddit workaround to \u2018extract\u2019 next URL is, as noted above, to pause it, but it's a bit tedious, doesn't work instantly (user has to scroll through next page to have box with next page link), and I simply think it's convenient to have this information available \u2018out-of-box\u2019.. ",
    "xenius": "Ive setup NER to pause when i reach 3th page. But then when i click next page which opens a new page, but it doesn't unpause NER. Is it possible to renable this?. It is fixed yes. Thanks alot!. ",
    "ackinc": "The next page and prev page shortcuts seem to have more in common with in-page navigation than navigation to a different page, especially when NER is enabled, so I've left the current behavior unchanged.. The next page and prev page shortcuts seem to have more in common with in-page navigation than navigation to a different page, especially when NER is enabled, so I've left the current behavior unchanged.. The force-pushes are to keep up with master. The force-pushes are to keep up with master. \n. \n. I don't think the hook is added when husky is installed, since we're able to change the hook (in package.json or the husky config file) long after installation.\nI'll try to dig into the library a bit to see how it works. I don't think the hook is added when husky is installed, since we're able to change the hook (in package.json or the husky config file) long after installation.\nI'll try to dig into the library a bit to see how it works. Looked into it. Husky does add git hooks (all possible hooks - pre-commit, pre-push, etc. - inside .git/hooks) at installation time. Looked into it. Husky does add git hooks (all possible hooks - pre-commit, pre-push, etc. - inside .git/hooks) at installation time. The conflict area was tiny, so I've taken a stab at resolving it. Going to test this PR a bit more, then I'll remove the [WIP] tag.. Tested, and everything works fine.. Calling new URL with a relative link throws a TypeError, so I had to put this entire block in. Yes, that is a problem. I will try to figure out how to store the subdomain the user was on before entering np, so it can be restored in NoParticipation.nonNpLocation. Would it make sense to spin this block off into a separate \"relativeToAbsUrl\" function, and put it somewhere in util?. Please ignore the previous comment. I missed that users who use goMode from a subdomain different than www will be forced to www even if they never entered NP.\nWill push a fix shortly.. Thank you, I've made the change. Pushed a fix. Using goMode no longer forces users onto www, unless they were in NP.. Commit #59e628 changes the signature as recommended. If we are introducing a new escapeNPKeyboardNav option:\nSome users might be confused that the escapeNP option has no effect on keyboard nav. Should I edit its description to say it only affects link clicks?\nThe current description of the escapeNP option is \"Remove np mode when leaving a No-Participation page.\". > Could you also verify that the NoParticipation module and its escapeNP option are both enabled? There should be a helper like \"get opaque option value\", there are some other modules which check options from other modules. (Let me know if you'd like a pointer.)\nAdded this in commit #4789f18. Made this change and got rid of getOptionValue in the latest commits. Yes, but then each new option we add support for in navigateTo would have to be specified twice - once in the deconstruction, and once in the type definition. If we want that, I'll make the change. Changed in commit #0c385ee. Replacing options: { newWindow?: boolean, leaveNP?: boolean } entirely with { newWindow = false, leaveNP = false } results in flow errors\nCannot call navigateTo with object literal bound to the second parameter because property leaveNP is missing in object literal\nfor every time navigateTo is called with one of the options missing (like navigateTo('/', {newWindow: true})). I'll try to figure out how to make this work.. > Both ways are fine with me.\n\nIt would also be worthwhile to make the object type exact ({| newWindow?: boolean, leaveNP?: boolean |}) to prevent typos when invoking the function.\n\nMaking function param destructuring work with flow types is a bit harder than I expected. I've made the 'object type exact' change for now.. window.location.origin seems to be supported in Edge, but not in Opera. I'll change it to location.href, which is supported everywhere. It was interesting to see though that location.origin always returns undefined in Opera. Leaving the PR as-is would have broken go-mode for our Opera users.\nI'll be more careful about cross-browser incompatibility issues for future PRs. Thanks to mc10 for raising the issue.. Firefox doesn't seem to like this. Well. Why didn't I think of that? Change coming up. Implementing redirects using location.pathname would mean letting the user see a flash of the redirect-from page, and we (Andy and I) wanted to avoid this. You can see this flash when using the \"Profile Redirects\" module, which does redirection through the location API - https://www.useloom.com/share/1387e09253c7403a819ac66a0c7dace2. Yes, that's a better way to do things. Changed in commit #6702373. I could add an \"enableModule\" function (and optionally a simple disableModule function for symmetry) to the settingsConsole module that\n1. checks what permissions the module we're about to enable needs (from the module's permissions field)\n2. requests permissions from the user as necessary\n3. only actually enables the module when the required permissions are granted\nIs this what you had in mind?. Done in commit #e7e8f9a. The toggleHandler fails silently (i.e. throws an error that the user doesn't see) if the required permissions are not granted. Is this ok, since it should be obvious (?) to the user that the permissions we're asking for are required to enable the module, or should I be showing a notification?. Changes in commit #60dee98 allow modules to control the notification displayed when requesting extra permissions\nBut:\nTurns out chrome doesn't show the user a warning prompt when an extension requests the webRequestBlocking permission via chrome.permissions. Instead, the permission is granted silently (I've tested this)\nSince users might find it strange that RES is explaining why it needs extra permissions when there's no prompt, I've made the permission-notification optional, and am not currently showing one for the Redirects module. There's no prompt even if this permission is being requested for the first time, not just when it is being requested after already having been granted. BTW, I've made this feature a separate PR since it seems like a generally useful feature that other PRs might want to leverage before this one (#4921) gets merged. The latest commits include this change. Any module can now add/delete redirect rules like:\nRedirection.updateRedirectBackgroundState([\n    {name: 'profile', from: (/^\\/user\\/(\\w+)\\/?$/i).toString(), fromType: 'abs', to: '/user/$1/hot'},\n    {name: 'subreddit', from: (/^\\/r\\/(\\w+)\\/?$/i).toString(), fromType: 'abs', to: null},\n])\nto: null deletes the rule. Rough edges in the current implementation:\n\n\nThe home-page redirect rule (used to send users to old.reddit.com or np.reddit.com etc. instead of www.reddit.com) doesn't work when the user clicks on the reddit logo when on a reddit subdomain other than www\n\n\nThere should be some protection to prevent users getting into an infinite redirection loop by setting the home page redirection options a certain way: 'custom' option set to 'https://reddit.com'. 3. Possible redirect-rule-name and redirect-rule-from collisions when other modules are adding redirect rules. Need some kind of warning system.. I made the rules persistent because leaving the responsibility of initializing the background redirection script's to foreground scripts (like the redirect module) causes redirect rules to not be applied on \"cold start\", such as when a user goes directly to a redirect-from page (ex: bookmarked reddit.com) after just starting the browser.\n\n\nThe other option (other than leaving responsibility to fg scripts) was to make the redirection bg script pick up option values from various other modules' storage, and then process them into redirection rules. So the bg script would need to know which other modules' options to pick up and how to translate their values to RedirectRules, which makes it less self-contained.\nRedirects continuing to apply after a backup-restore that should disable them seems like a pretty serious problem. Perhaps we can solve it with something like this:\n1. Redirection bg script keeps track of which fg modules supplied the redirection rules in its (persistent) state (can just extend the RedirectionRule type to have moduleID)\n2. When restoring a backup causes a fg module's enabled-state to change, a message is sent to the background scripts\n3. Redirection bg script listens for this message and removes all rules supplied by the fg module that was turned off\nThe opposite case (backup restore turning a disabled module back on), we can just have fg modules send their rules to the bg script onBeforeLoad\nI'm not familiar with the code handling backup-restoration yet, so maybe the above doesn't make sense. Will look into how it works in a bit.. I originally wrote these as separate functions to demonstrate how to add a single redirect rule. Agreed the duplicated code should not make it into the final PR. Will de-dupe in the next commit. Will do. I'll make that change. Does it also make sense to add a line to CONTRIBUTING.md, at the top-level or as a sub-section under the 'Adding New Files' section, saying something like \"When adding a new dependency or devDependency, make sure to fix the version in package.json\"?. Changed. Done. Done. Moved buildRegex into utils/regex.js (new file). We're only storing the rules as an object to make deletions easier. I'm not sure we should require other scripts to be aware of the way the redirect bg script represents redirect rules in its internal state (instead of thinking of them as a generic \"bag\"/\"list\" of rules). That sounds like a leaky abstraction.. ",
    "schilkyl": "Correct me if I am wrong but it seems like this already exists:\nold.reddit.com\n\n\nwww.reddit.com\n\n. Your code appears to be working on old reddit. I would assume you are having a similar issue to me in that the module showKarma is not running on new reddit. I'm trying to find some time to debug so I will let you know if I find anything.. @andytuba when I was testing @GlenCarpenter's code, the module wasn't running. I was looking at #4959 and was having a problem with ERRORED_KEY which was causing the module check to be false and thus not run.\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/8dbd471c90c0bd8e1e459a3d487544e4d073ca77/lib/core/modules/modules.js#L56\nI haven't had the chance to find out why.. Seems like a fair deduction. #header-bottom-right doesn't exist in the new reddit dom so no username is ever gathered.. Note: the <a>s are not loaded on the page initially and only show up after the dropdown has been opened so the listener should be added after that.. I was just getting it done. Sorry for stepping on your toes.. @Jarob22 do you have the module enabled?. RES Settings -> Broswing -> Logo Link -> On\n\n. ",
    "GlenCarpenter": "Is this for the element showing as class=\"s1ilcdod-2 cZgSfx\" in this screenshot?  I can take a stab at this.\nIt seems we should hit the API for the exact values and then use jQuery to insert the values into the <span> element?. @andytuba sounds good, I'll take a look!. Sorry to say I'm a bit stumped here, I'd be happy to continue working on this if you could point me in the right direction.\nI am calling my addFloaterKarma() function from module.go() but can't seem to get it to show up, here is my code:\n```\nasync function addFloaterKarma(username) {\nconst { data } = await getUserInfo();\n\nlet postKarma = data.link_karma;\nlet commentKarma = data.comment_karma;\n\nif (module.options.useCommas.value) {\n    postKarma = commaNumber(postKarma);\n    commentKarma = commaNumber(commentKarma);\n} else {\n    postKarma = uncommaNumber(postKarma);\n}\n\nlet floaterKarma = string.html`\n    <span id=\"RESAccountKarma\">\n        <a title=\"post karma\" href=\"/user/${username}/submitted/\">${postKarma}</a>\n        ${module.options.separator.value}\n        <a title=\"comment karma\" href=\"/user/${username}/comments/\">${commentKarma}</a>\n    </span>\n    `;\n\nFloater.addElement(floaterKarma, { order: 7 });\n\n}\n``. It seems the module is failing after theif (username)conditional.  I did some digging and it looks like theloggedInUser method is making a call to thedocumentLoggedInUsermethod, which is pulling the username from the#header-bottom-right`  of the navbar on the old design.  Is this possibly the cause?\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/8dbd471c90c0bd8e1e459a3d487544e4d073ca77/lib/utils/user.js#L18\n. Are you referring to the accountSwitcher module?  It looks like it's calling the same method:\nhttps://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/accountSwitcher.js#L179. Just checking in - is the solution here to find a new method of verifying the username?   Or do we already have a solution in place?. Thanks @larsjohnsen!  I am ready to go when #5078 is resolved.. Closing due to comments on related issue #4963. ",
    "all3nvan": "Hi, I'm taking a stab at this and from what I can tell, the JSAPI Comment event is incomplete. Here's an example of the event I see (body is undefined):\napprovedAtUTC: undefined\napprovedBy: undefined\nauthor: \"DeadBallloon\"\nbannedAtUTC: undefined\nbody: undefined\ncreated: 1547679681\ndistinguishType: null\nid: \"t1_ee8blwo\"\nisApproved: undefined\nisRemoved: undefined\nisSpam: undefined\nisStickied: false\nisTopLevel: false\npost: {id: \"t3_agq2qj\"}\nremovedBy: undefined\nsubreddit: {id: \"t5_2sy6n\", name: \"RESAnnouncements\", type: \"restricted\"}\nI'm inspecting the event from inside this function: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/utils/watchers_d2x.js#L36-L88\nIs this known or am I doing something wrong on my end?\nI'm following this example of listening to the comment event (https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/showImages.js#L488-L493), but there doesn't seem to be a reasonable way to target the comment buttons currently.\nThis is my first attempt at contributing, thanks for the help!. Hi, I'm taking a stab at this and from what I can tell, the JSAPI Comment event is incomplete. Here's an example of the event I see (body is undefined):\napprovedAtUTC: undefined\napprovedBy: undefined\nauthor: \"DeadBallloon\"\nbannedAtUTC: undefined\nbody: undefined\ncreated: 1547679681\ndistinguishType: null\nid: \"t1_ee8blwo\"\nisApproved: undefined\nisRemoved: undefined\nisSpam: undefined\nisStickied: false\nisTopLevel: false\npost: {id: \"t3_agq2qj\"}\nremovedBy: undefined\nsubreddit: {id: \"t5_2sy6n\", name: \"RESAnnouncements\", type: \"restricted\"}\nI'm inspecting the event from inside this function: https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/utils/watchers_d2x.js#L36-L88\nIs this known or am I doing something wrong on my end?\nI'm following this example of listening to the comment event (https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/showImages.js#L488-L493), but there doesn't seem to be a reasonable way to target the comment buttons currently.\nThis is my first attempt at contributing, thanks for the help!. ",
    "Zshuff03": "Hey! First time contributing to this repo, but this seems like a pretty simple task, I'll get too it.. On second thought, I'm not quite sure how to see if it's redesign or not and where to make this change. If you could point me in a direction that would be awesome \ud83d\udc4d . @Ajedi32 Well yes, but I mean in the code not in the browser. How does the code know when to add the new comments bit for the redesign?. I've noticed that in newCommentCount  in the before module load,\nwatchForThings(['post'], displayNewCommentCount, { immediate: true });\nis being used for setting the new comment count but this never gets called in the redesign.\nI have attempted to use \nwatchForRedditEvents('post', (thing, postEventData) => {... instead but that only gives me a thing span that is empty. Is there another watchFor that I am missing? . Hey @andytuba I'm not seeing any comment data coming through from the watchForRedditEvents postEventData. This is what's coming through:\nhttps://gyazo.com/c3081a64dbb04e4eba9f3e4df4d416d7. Nice! I'm now running into an issue where the module.afterLoad is not running, therefore never setting the current number of comments, when we hit the comments page, and then getEntryBatched is always null. I'll keep searching for the issue but any ideas would be appreciated. . ",
    "zachary822": "```javascript\nlet ele = document.querySelector('div[aria-labelledby=\"send-replies\"]');\nele.getAttribute('aria-checked')  // returns \"true\" or \"false\" based on current status\nele.click() // changes the checked state\n```\nNot sure if this is what is needed.. ",
    "prakhar1912": "\n@prakhar1912 Does this look interesting?\n\nSure, I will work on this too.. > @prakhar1912, would you like to take on this bug?\n@andytuba Sure, on it.. > Looks like we're almost there! It looks like the user tagger pop-up stays open when the lightbox changes. Does that automatically go away when the tag is removed, or does that need more work?\nYeah, that needs more work. I thought of creating another PR for it. Do you want me to fix that in this one itself?. Yeah, you are right. The previous instance's element has a tag that is not removed when a new post is loaded.. @andytuba Removing the element won't work because every instance refers to the same container (instance.element) to insert the tag. I tried removing the element, and the tags did not show up. Please advise.. Turns out all instances are actually appending children in the same <span data-name=\"reddit-enhancement-suite\">...</span>, because every instance's element points to it.\nUser tags repeated inside the span\n\n. Yeah, so I need to clear the instance.element before appending more tags.\nif (instance.tagger) instance.tagger.remove(); : This check already exists\nDo keep in mind that the tags being repeated are of different users and not the same user.. Okay, got it.. Okay. Thank you for pointing that out. I will make the change.. Sure.. Yeah, good point. Thanks!. Tried it. waitForDescendants adds another observer, which is causing the Send Reply Notifications toggle to switch whenever the React component for Submit is mounted. So, I think I'll stick to findElement, since it only fetches the element once.. Yeah, good catch. Thanks!. Okay, got it. My bad. Thanks!. This will actually break the tests for utils/location.js because getting the page type will dive into the DOM. And since the function is an IIFE, it will be run when importing functions from the file.. ",
    "codevenkat": "Hello. I am a beginner. Can I try to fix this issue?. Hello. I am a beginner. Can I try to fix this issue?. Hello, I want to take up this issue, I am a beginner. Could you tell me what I basically have to do to fix this issue?. Hello, I want to take up this issue, I am a beginner. Could you tell me what I basically have to do to fix this issue?. I will try to do that, thanks! Just one thing, where is this helper function located? I'm not able to find it in any of the existing files. @andytuba . ",
    "austinrutledge0": "@codevenkat have you made any progress on the issue? \n@andytuba I will be taking a crack at this. ",
    "Jarob22": "@andytuba Just looking to start contributing - looks like it'll need to be document.querySelector(\"header a[href='/']\") - .header doesn't exist anymore. Can I please ask how to test this? What is currently broken/not compatible that will be fixed by fixing this bug?. @andytuba poke?. This seems a little rude when I was in the original issue checking whether my solution (that you've used) was correct, but you do you, I guess. =/. I was trying to get started on a small easy pr thats all, and it wasnt really clear what this feature was supposed to do, so I didnt know what to do to test it, hence why it'd taken ages to get it done.. In fact weirdly, I dont seem to get the same behaviour as you @schilkyl? I've uploaded a screenshot - I'm hovering over the alien icon, im on popular and yet I get the base homepage url show up, not /r/dashboard. You can see in sources I've loaded the updated code.\n\n. Ah maybe not. How do I do that?\nSent from my iPhone\n\nOn 22 Jan 2019, at 00:53, Kyle Schilling notifications@github.com wrote:\n@Jarob22 do you hvae the module enabled?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Thank you! I\u2019ll take a look tomorrow - am in bed now! Do please carry on here - sorry for being a bit short before, I\u2019ll make it more clear next time I pick up something that I\u2019m either waiting for a response or am in progress.\n\nSent from my iPhone\n\nOn 22 Jan 2019, at 01:11, Kyle Schilling notifications@github.com wrote:\nRES Settings -> Broswing -> Logo Link -> On\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @schilkyl That seems to have worked, thank you!. \n",
    "pbowden91": "@codevenkat The function is watchForRedditEvents('post', function(container, data) { /* do stuff */ })\nIt can be found in lib/utils/watchers_d2x.js\nExample usage can be found in the modules showImages.js and userTagger.js. . @andytuba How would you suggest handling ads now? On the old platform I see RES does not apply stuff to ads (at least [l+c] or user tags).\n\nPromoted ads still trigger the post event for the redesign -- should [l+c] be added to those (even though comment sections are disabled)?\nWorkarounds may be a little hackish -- I'm not sure there is a clean way to determine whether a post is promoted or not, at least from the event data / dom classes.\nPerhaps it is true that data.subreddit is an empty object IFF the post is promoted? Are there any non-promoted posts that return no subreddit, or any promoted posts that return a subreddit?. ",
    "Atrolantra": "How should the existing useMobileGfycat option interact with the new option selection?\nI assume it should be kept but it will only be relevant if the user chooses \"video\" (I.E. how it currently is)?. Heya, I'd be keen to give this issue a crack. Haven't worked on this project before though so if you could give me a little bit more info on where/how to add the button to each host module that'd be awesome. \nAlso where would this button appear to users? It'll help me verify I've implemented this correctly; I'm not fully understanding at the moment. \nCheers. Awesome, thanks for the help.\nI've gotten started on it over here.\nI whipped up one for gfycat real quick, current looks like this:\n\nAny changes you'd like to that before I go through and add it to all the media hosts?. @larsjohnsen if there's no real reason for the privacy links to be buttons in particular as called for by the originating issue then I agree that the design you proposed is a lot nicer and less cluttered.. ",
    "lampij": "```JAVASCRIPT\n/ @flow /\nimport { Host } from '../../core/host';\nimport { DAY, string } from '../../utils';\nimport { ajax } from '../../environment';\nexport default new Host('gfycat', {\n    name: 'gfycat',\n    domains: ['gfycat.com'],\n    logo: 'https://gfycat.com/favicon.ico',\n    options: {\n        useMobileGfycat: {\n            title: 'gfycatUseMobileGfycatTitle',\n            description: 'gfycatUseMobileGfycatDesc',\n            value: false,\n            type: 'boolean',\n        },\n        //Added mediatype enum\n        gfycatMediaType: {\n            title: 'gfycatMediaTypeGfycatTitle',\n            description: 'gfycatMediaTypeGfycatDesc',\n            type: 'enum',\n            value: '',\n            values: [{\n                name: 'iframe',\n                value: 'iframe',\n            }, {\n                name: 'video',\n                value: 'video',\n            }],\n        },\n        //Added privacy policy button option\n        gfycatPrivacyPolicy: {\n            title: 'gfycatPrivacyPolicyTitle',\n            type: 'button',\n            text: 'Privacy Policy',\n            description: 'gfycatPrivacyPolicyDesc',\n            callback() {\n                //TODO: Not exactly sure what to do here.\n                open();\n            },\n        },\n        gfycatPrivacyPolicy: {\n    }\n},\ndetect: ({ pathname }) => (/^\\/(?:(?:ifr|gifs\\/detail)\\/)?(\\w+)(?:\\.gif)?/i).exec(pathname),\nasync handleLink(href, [, id], info = null) {\n    const isMobileResolution = this.options.useMobileGfycat.value;\n\n    info = info || (await ajax({\n        url: string.encode`https://api.gfycat.com/v1/gfycats/${id}`,\n        type: 'json',\n        cacheFor: DAY,\n    })).gfyItem;\n\n    //Choose handlelink implementation based on mediatype enum value\n    if(this.options.gfycatMediaType.value == 'iframe'){\n        return {\n            type: 'IFRAME',\n            muted: true,\n            embed: `https://gfycat.com/ifr/${id}?autoplay=0`,\n            embedAutoplay: `https://gfycat.com/ifr/${id}?autoplay=1`,\n            width: `${width}px`,\n            height: `${height}px`,\n            fixedRatio: true,\n        };\n    }\n    else {\n        return {\n            type: 'VIDEO',\n            frameRate: info.frameRate,\n            loop: true,\n            muted: !info.hasAudio,\n            playbackRate: +(href.match(/[?|&]speed=([\\d\\.]+)/i) || [undefined, 1])[1],\n            poster: isMobileResolution ? info.mobilePosterUrl : info.posterUrl,\n            sources: [isMobileResolution && {\n                source: info.mobileUrl,\n                type: 'video/mp4',\n            }, {\n                source: info.webmUrl,\n                type: 'video/webm',\n            }, {\n                source: info.mp4Url,\n                type: 'video/mp4',\n            }].filter(x => x),\n            time: +(href.match(/[?|&]frameNum=([\\d]+)/i) || [undefined, 0])[1] / info.frameRate,\n        };\n    }\n},\n\n});\n```\nHey Andy, first time working on an open source project, was wondering if you could take a look at what I've done for this ticket. I'm only scratching the surface of the iceberg here so hopefully what I've gone off of is somewhat in the right direction? \nPlease let me know, would love to contribute more to this project.. ",
    "uppusaikiran": "@larsjohnsen  To see this Update reflected in Release, how many days we should wait ?\nIs there any way to custom build the chrome extension ? . ",
    "aaomidi": "That seems like a weird decision but I respect it.\n. ",
    "JourneyOver": "List of my filters for flairs \nhttps://i.imgur.com/P8IX3qm.png\nlink for one of the subreddits listing the \"expired\" flair tag, that should be filtered.\nhttps://www.reddit.com/r/FreeGameFindings/\nhttps://i.imgur.com/PItpDUe.png. It used to be supported O_o but it's the same thing with https://www.reddit.com/r/Marvel/ and the \"Comics\" flair as well, and https://www.reddit.com/r/runescape/?count=50&after=t3_afy6bl with the \"MTX\" flair and the \"CH1\" flair for clickerheroes as well..\nAlso I made it into a regex instead with /(FreeGameFindings|FreeGamesOnSteam)/i and even attempted to just do FreeGameFindings instead and doing neither fixes the issue, as the flaired posts still end up showing up.. Hmm I actually just noticed something, with the version that is on my daily chrome (which is using the Beta version of RES) vs a clean install with only RES (non beta version) when I type in a subreddit it doesn't pop up the whole type subreddit name thing, and the subreddits thing also looks completely different between the two variants as well (the subreddits have the white background thing around them in teh clean install of chrome variant)..\nClean Chrome -- \nhttps://i.imgur.com/Qd8LBAy.png\nDaily Chrome --\nhttps://i.imgur.com/fW1YtdD.png\nWhich for some reason the clean chrome variant is now working as well...while my daily chrome variant is still broken... Guess I'll look into doing a clean install of my daily chrome variant and see if it fixes things or not. Will report back in a little while.. It's all good, and I'm guessing the bug is only in the RES Beta version and that's why I wasn't experiencing it in the clean chrome variant with RES non-beta?. Yep just a bug with the beta version of RES, I've moved back to the normal releases for now and things are working fine there.. ",
    "narcolepticinsomniac": "Tried to export a backup, side-load the previous stable version and import the backup, which doesn't seem to work at all. Only filters I have are for visited links, but after importing the backup, RES removes every post without exception. This sucks. I just want it back the way it was 2 days ago.. >The settings console has been embedded to make it more responsive\nHow is an iframe more responsive? If anything, they're usually less.\n\n...to avoid having having custom stylesheets inadvertently break it.\n\nAlso achieves the exact opposite, since the new iframe broke the style I've been using for years.\n\nIf you don't mind me asking, what custom styles did you apply to it?\n\nI maintain my own, but there's probably hundreds published on userstyles.org and other similar sites. Any of them that are halfway decent would've at least given the console a once-over. \nExtensions injecting iframes which are off limits into webpages is annoying, particularly when it's completely unnecessary and provides the exact same functionality which has existed for years without any.. >Do you mean that styles on pages other than the settings console are broken?\nNah, just the console. Making it off limits to user scripts/styles is no small detail though.\nAs for it being more responsive, I thought you meant in terms of CSS. At least there's some benefit to them, but quarantining the console will have a negative impact on anyone who has customized it in any way.\nAny type of workaround would be a bonus.  Didn't even expect that much tbh, I just needed to complain to somebody. Appreciate you taking the time.. I've got 5.14.2 now. How is this supposed to work? Thought maybe you'd import any styles applied to Reddit to apply to the console, but that doesn't seem to be the case, so it's still off-limits to most user styles. It's a hidden menu, so not like speed's a real issue.\nI can only guess that previously you weren't even applying your own Stylesheet Loader to the console, so you switched it to do that. Doesn't help any of the existing user styles injected by other means, which'll still fail. Not all that helpful for most use cases. Let me know if I'm missing anything here.. ",
    "Tensounder54": "If you really need a complete list of my extensions then let me know. \nAlso if your willing to give me some pointer as to where you think I should start I can look into fixing this myself.. ",
    "aliceinwire": "working screenshot:\nhttps://screenshots.firefox.com/BA6L2Ttj2hgCtXUH/www.reddit.com. working screenshot:\nhttps://screenshots.firefox.com/BA6L2Ttj2hgCtXUH/www.reddit.com. Would be nice to add a setting in the UI for adding new domain for Peertube.\nBut I have no idea if is possible or accepted.\nAnyway it will probably be in a next pull request, as I'm already enough out of my competence sphere.. Would be nice to add a setting in the UI for adding new domain for Peertube.\nBut I have no idea if is possible or accepted.\nAnyway it will probably be in a next pull request, as I'm already enough out of my competence sphere.. Leaved untouched migrate.js and expand only with videos.\ntested here:\nhttps://screenshots.firefox.com/51zDsLk99btKVqYA/www.reddit.com  . Leaved untouched migrate.js and expand only with videos.\ntested here:\nhttps://screenshots.firefox.com/51zDsLk99btKVqYA/www.reddit.com  . @kevinji  thanks. @kevinji  thanks. @SoniEx2\npeertube instance url depend from the server. \nAs now I'm adding the most common one.\nI have some idea to implement in the RES settings, maybe in a next pull request.  . @SoniEx2\npeertube instance url depend from the server. \nAs now I'm adding the most common one.\nI have some idea to implement in the RES settings, maybe in a next pull request.  . @SoniEx2 @Nutomic the problem is doing it from just the URL.\nIf you have a better way please send fix commit here.. @SoniEx2 @Nutomic the problem is doing it from just the URL.\nIf you have a better way please send fix commit here.. would be nice to use a peertube instance list like https://fediverse.network/about\nunfortunatly their api is not ready yet . would be nice to use a peertube instance list like https://fediverse.network/about\nunfortunatly their api is not ready yet . oh yes.\nsending update. ok thanks. ",
    "SoniEx2": "any reason this uses a domain whitelist?. it's actually possible to detect the URL layouts of peertube and the peertube API. altho the tag does make it easier I guess.. Hm. p2p-sourced link data?. that pissed me off with youtube-dl and it pisses me off here too. altho youtube-dl downloads the full page anyway so they don't have an excuse for it. does RES not?. I don't think that handles non-federating instances. ",
    "Nutomic": "Maybe you could check for the Peertube meta tag instead of hardcoding an instance list? However it is not released yet.. ",
    "bjuergens": "This may be a little off-topic, but shouldn't the og-tags always be loaded for unkown urls? After all og:video and og:image exists exactly for situations like this. . ",
    "xxyuk": "Can't personally vouch for it but have read about Day.Js as an alternative\n\u23f0 Day.js 2KB immutable date library alternative to Moment.js with the same modern API\nhttps://github.com/iamkun/dayjs\nreference: moment/moment#2373 (comment). ",
    "Poilaucul": "Any plans to support it?\n\n. \n",
    "listen2": "Did you leave a stray comma?\n. ",
    "Hakayati": "Ah, thanks for spotting! Removed it now.\n. ",
    "skeeto": "Noted, thanks!\n. ",
    "tomdwyer": "Of course the way that it's built, it could possibly come across a few use cases but as you said, it's likely uncommon. I guess I could make it a function instead that they can turn on/off. \n. Precisely.\nIt's happened once too often that someone posts a mobile link and having to manually go in and forward myself to the desktop version. This simply automates having to manually doing it each time.\n. I'd just like to defend some points here. \n@mc10 Okay so whilst this (1.) technically could happen, the liklihood is far slimmer than it occuring that they clicked on a mobile link posted by a reddit user. \nAfter reviewing, I still believe it's a good feature to add but I'm leaning in the way of saying that it's probably a good idea to make it a toggleable. Because reading 28k lines of code isn't all that appealing to me, I'm guessing that I just create a new module and if(toggle == true){function();} ?\n. ",
    "gfygur": "Thanks for the response. I apologize in advance for my naivete for this. When I was preforming the xhr calls to gfycat's api, it kept complaining about CORS. I assume I was simply not using the correct calls. I will recheck.\n. ",
    "morgil": "That's fine by me, I just copied that line from other filters where a RegExp is used (e.g. https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/filteReddit.js#L535)\n. @gamefreak, is there a reason why you used regular expressions instead of string comparisons? In my opinion, this should rather depend on the regexpFilters setting.\n. I agree, but I still believe that this should depend on whether the user has activated regexpFilters. But this pull request is probably not the right place to discuss this. Maybe I can find some time for it later this week.\n. The only problematic location might be where domain names are tested. I don't think there will be a situation where this becomes relevant (if no one starts using iximgur.com or similar on reddit), but it's still unintuitive. Still, you are far more senior with this project, so if you say it's ok I won't complain.\n. Yes, as in https://github.com/honestbleeps/Reddit-Enhancement-Suite/blob/master/lib/modules/filteReddit.js#L381\nLooking at http://stackoverflow.com/q/2140627, RegExp actually seems to be one of the less ugly methods for case-insensitive string comparison (when escaping control characters).\nIt still breaks for languages such as Turkish, where uppercase i is \u0130 and lowercase I is \u0131 - see https://jsfiddle.net/csu3pf9a/1/. Actual language-independent case-insensitive string comparison seems to be impossible. I am not sure how badly this affects situations such as the title filter and the title custom filter - has anyone complained yet?\n. ",
    "ngyikp": "The keyboard shortcut to open Safari Preferences is pressing the Command\nand the comma key\nhttp://www.bu.edu/tech/files/2009/10/safari-preferences2.gif\n. ",
    "dank": "@andytuba The check is there so the video does not auto play if there's another expando is opened. \n. ",
    "SimpleCove": "I've removed it.\nThank you\n. You are correct. I changed it to ^https?:\\/\\/(?:www.)?simplecove.com\\/(\\d+) . Thank you.\n. Thank you for the tip. I've fixed it.\n. ",
    "LazyMammal": "Thanks!  Fixed.\n. ",
    "dimes": "Changed. \n. Changed.\n. Changed.\n. Added titles and captions to the photos. \n. Changed. \n. You are correct, this was not required. \n. ",
    "Daniel15": "A lot of users won't know what an \"API\" is - What about just saying \"RES needs permission to access these sites\"?\n. ",
    "spezzino": "It is inside a loggedInUser() if-statement\nCheck previous lines to confirm this\n. ",
    "Overv": "Good idea, I've made the URL more restrictive.\n. ",
    "jontonsoup4": "Good idea! Just made that change\n. ",
    "cmckenzie6": "Right, I see that popped up on the Travis CI check. I'll adjust.... ",
    "qenya": "Sure thing! Is this (6aae1ae) OK?. ",
    "ralcar": "hehe yeah maybe a good idea, thank you \ud83d\ude04 . ",
    "git-uname": "I thought the warning page shows up only once per sub but it seems that it only shows up once total, so I have removed this entirely.. "
}