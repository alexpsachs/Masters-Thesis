{
    "mikepenz": "Will be independent of the FastAdapter\nPossible solutions:\n- https://github.com/plusCubed/recycler-fast-scroll\n- \n. @hendrawd true that sample no longer contains the fastscrolling. well the GenericItem sample still has the thing in. The FastScrolling was always an external library, and I just show compatiblity in the sample. It is in no way related to that project. Could be done via an Util class\n. @Rainer-Lang some basic items you can base your items on. --> Default behavior for background as example\n. There is the https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java which implements all the base stuff :D\n. At the moment i've done this with the awesome lib by @timehop https://github.com/timehop/sticky-headers-recyclerview\nThe sample application contains a sample activity which showcases how to use this lib in combination with the FastAdapter by providing a StickyHeaderAdapter, and wrap it into the adapter chain. \n- The sample activity:\n  - https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/StickyHeaderSampleActivity.java\n- The adapter:\n  -  https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/adapter/StickyHeaderAdapter.java\n. The sticky header is just a sample of compatiblity. \nYou can open a PR to provide a sample for that implementation ;) . was machst du? :D\n. +1 :)\n. coud probably done via a helper class which just calls the correct update methods on the adapter\n. still for the adapter is a remove\n. no helper :P\ndefine a FilterPredicate which will internally be used to filter out the items\n``` java\nitemAdapter.withFilterPredicate(new IItemAdapter.Predicate() {\n            @Override\n            public boolean filter(IItem item, CharSequence constraint) {\n            return false;\n        }\n    })\n\n```\nafterwards you can simply do:\nitemAdapter.filter(\"test\");\nor to reset\nitemAdapter.filter();\n. @FabianTerhorst good suggestion ;). thanks\n. @FabianTerhorst that's how the RecyclerView adapter works. \nHow have you removed the item?\nIn general you should call \njava\nitemAdapter.remove(int position);\nThis will not only remove the item at the given position, but it will also notify the adapter about the removed item so it can animate\n. @FabianTerhorst then you should provide this via a new List and not by modifiying the previously set list\nThis works:\n\nAs mentioned this is the way how adapters work with the RecyclerView that's no behavior changed by this lib\n. @FabianTerhorst to get a bit more into detail:\nYes it may work if we call notifyDataSetChanged(), but that's not true. If you set a list to the ItemAdapter you change all items of this adapter, but this one may isn't the only adapter providing items, and there are other adapters which also host items inside the RecyclerView as this is the case, we want to animate the change of items, so i call \njava\nnotifyAdapterItemRangeChanged\nand make sure the Adapter know how to correclty animate the changed items. \n\nSo in case when set is used, it is important that we really set a new list. If we set the previous used list it will cause problems inside the Adapter. If you modify items of the current list, the specific methods for those actions should be used\n. @Rainer-Lang this method will return the positions of the selected items. What do you need?\n. @Rainer-Lang i do not have to care about the parcable. i will just return a Set<Item> where item = <Item extends IItem>\n. probably it will get Iterable<Integer> \n. thanks you\n. :D\n. com.mikepenz:fastadapter:v0.8.0-SNAPSHOT\n. @EpsilonOrionis could you please provide some code? Which version are you using?\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L93\nThe bindView() takes the ViewHolder type which was defined for the AbstractItem<YourItem, YourViewHolder> \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L27\nSo you don't have to cast the RecyclerView.ViewHolder to the specific ViewHolder used for this item\n. @MacSzh sorry no. The FastAdapter is only meant for RecyclerView and i highly recommend that you switch to a RecyclerView as it has a lot of internal improvements in comparison to a ListView \n. @EpsilonOrionis what was the issue?\n. @mattiasbe thank you for answering :)\n. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SimpleItemListActivity.java#L81\n. huge PR from Ahmed :). Thank you guy :)\n. @hsdmiranda yes this should be possible. as you can control both features independent from each other. \n. @seba123neo yes it does :D (Just the sample app doesn't) You can try it out with the MaterialDrawer beta release which also contains the FastAdapter. The MaterialDrawer sample can be executred on API 10\n. hi @tasomaniac thank you so much :). \nI know that the README and the javadoc still can be approved. For v1.0.0 my goal was to jave at least a description for most public interfaces and methods people will use. \nI had some troubles in the past with code in the javadoc comments. Somehow the build always failed with characters like \">\", ..\nI am really happy about all suggesitons which will make this lib even better :). \nI will try to improve it :), I hopw with the help of others like you and @Rainer-Lang .\nThanks again :)\n. @Rainer-Lang because there is javadoc. You can even look at the javadoc here: http://www.javadoc.io/doc/com.mikepenz/fastadapter/1.0.3\nThere are code samples, and if someone wants to create a wiki he can do so. I also take all pull request improving the descriptions, documentations etc. :D \nAnd this will be a never closeable issue (like the one on MaterialDrawer) and to be fair i do not like issues. :D\n. @seba123neo could you please provide the issue as a small sample so I could debug it?\nI can not reproduce this in any of the sample apps, neither in apps which are in production already. Also the MaterialDrawer does not show this issue. \n. @seba123neo I can't see the issue with your sample either. If I click on the first item the toast will show \"Item1\" and if i click on the second it will show \"Item2\"\n. @seba123neo seems like a weird issue of the CardView. Somehow it does not show the click, neither does it show the ripple by default. seems like you would have to apply the ripple on your own. \nI have modified your demo to show a touch effect. \ndemo.zip\nI also have the description why it looked like the effect was always one off. If you click, the default behavior is that the FastAdater selects this item. So the view is in a selected state. (i disabled this now with withSelectable(false), so there will be no selected state, you can enable it again if you want)\nIf you now select the second item, the previous item is deselected, and this sometimes displayed the ripple. \nSo what I've done. I added a background to the CardView which has a touch color state, and a selected state. it will now probably display those things\n. @Rainer-Lang sieht soweit gut aus. danke\n. @Rainer-Lang thank you for opening this issue. I am really glad about the try to get some feedback :D \nAnd as long as I help others, I think, I have reached exactly the goal i was striving for ;)\n. Thanks everyone for the kind words ;)\n. @SMontiel thanks :)\n. @hsdmiranda thanks ;)\n. Thanks everyone for the answers. It's really great to hear that people like this lib. \nWill close this now in the progress of cleaning up a few issues ;)\n. @timusus will it also fail if you provide the factory for your item? See the following two methods:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L130\njava\n    /**\n     * our ItemFactory implementation which creates the ViewHolder for our adapter.\n     * It is highly recommended to implement a ViewHolderFactory as it is 0-1ms faster for ViewHolder creation,\n     * and it is also many many times more efficient if you define custom listeners on views within your item.\n     */\n    protected static class ItemFactory implements ViewHolderFactory<ViewHolder> {\n        public ViewHolder create(View v) {\n            return new ViewHolder(v);\n        }\n    }\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L142\njava\n    //the static ViewHolderFactory which will be used to generate the ViewHolder for this Item\n    private static final ViewHolderFactory<? extends ViewHolder> FACTORY = new ItemFactory();\n    /**\n     * return our ViewHolderFactory implementation here\n     *\n     * @return\n     */\n    @Override\n    public ViewHolderFactory<? extends ViewHolder> getFactory() {\n        return FACTORY;\n    }\n. @timusus it is my fault as i haven't yet written this in the README just showcased in the sample app.\nThe solution via reflection was just created as the factory may confuse beginners so they can do it without reflection. For devs with more programming experience the factory is the way to go ;). \nGreat that it solved your issue. \nIf you have thoughts about the FastAdapter please let me know. Or answer in the other issue a friend opened. ;) Thank you \n. @mattiasbe hi. thanks for your suggestion. \nI am afraid this feature is \"out-of-scope\" of this library. The FastAdapter is here to manage your items, to provide all the API's you need for selection, expandable items. It allows you to add, remove, move, change items. And provides all the required methods to make your RecyclerView as fast as possible. \nThe FastAdapter also provides the Items interface, which contains the methods how to display a specific item, but itself does not know about how an item looks like. \nSo having an item which provides the above logic is in the scope of the dev using the library. \nI would love to have something like this in the sample. But right now I do not see this in the core of the FastAdapter may as additional addon. \nSurely I would love to see a pull request adding something like this to the sample. \nThere are also already other libraries out which implement this kind of behavior. https://github.com/daimajia/AndroidSwipeLayout\n. @mattiasbe thanks for the detailed answer. If you find some time for a PR... just open it ;). I would really love to have something like this in the sample\n. @mattiasbe sorry for not yet answering your questions. The preview video you have added looks already really promising\nLooking at your current implementation, it really might be something I would add to the core. Really clean, and also works without deep wires, so it stays very flexible. \nI really like it!\n. @mattiasbe I added notes to the PR. The changes are fine, but it seems like you merged the master into the develop which resulted in all the releases being part of the PR so i can't merge it :/\n. @mattiasbe the base is now part of the fastadapter-extensions module. Now we can improve the API. or even add deeper integration (as far as possible without altering the FastAdapter)\n. Will close this now as the base is included. I'm still open for improvements ;). But this might should find a new issue or PR then ;)\n. @mattiasbe oh i think i can't merge your pull request. Seems like you merged the master into the develop :/ You may could cherry-pick all your changes into a clean branch, branched from the develop. \nAs you see above your PR also contains all my releases etc. :/\n. @mattiasbe no problem. Still thank you so much!\n. @mattiasbe I use SourceTree, it features a GitFlow button (or at least previous versions did, the latest version removed it --> shortcut CMD + ALT + F is a good workaround here :D)\n. @mattiasbe seems fine this time ;)\n. Thank you so much!\n. As already discussed I may will look / or probably you to create a proper API for it, so it can be easily used from within the lib. \nA thing here --> I will move the helper to a new \"module\" which can then be used as an addon dependency. So they can be published without depending on each other, it will also allow me to remove the support-design dependency from the core. \n. @jonas-arkulpa you can already use the merged code which is used inside the sample. Regarding the addition into a new module. I can't give an eta for this at the moment, but will try to do this really soon ;)\n. @jonas-arkulpa the thing is. The helper classes for the swipe feature are now part of the fastadapter-extensions module. As of the way the FastAdapter works. There may will never be an item which by default comes with this functionality. As of the current definition it will always require some implementation in the Item itself. \nThe FastAdapter provides the items and list handling, and all of the additional required stuff, and the developer of the app using the FastAdapter will then provide the data and the logic how to display a specific items. And this is the thing where the implementation for the swipe has to go. \nI hope this answer helps. \n@mattiasbe as already mentioned. the 2 helper classes are now part of the extensions module\n. @FabianTerhorst thanks for answering the question ;). \nIf there is just one Footer item you can also do:\njava\nfooteradapter.add(new ProgressItem())\n. @hmedat2008 this is out of scope of the Library. There may be a helper at some point, but not at the moment. \nIf you implement this for your project, you may consider making a PR\n. @DJafari there is a sample showcasing multiple models, for different items. Head over here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java\n. @Rainer-Lang thanks for answering\n. thx\n. @PDDStudio which version do you use?\n. @PDDStudio could you please add some more detailed steps to reproduce? Or even a sample app?\nIt is really hard to reproduce such exceptions because they are thrown by the RecyclerView LayoutManager\n. @PDDStudio can you please try again with v1.1.0\n. @PDDStudio doesn't seem to be a FastAdapter issue, but a general RecyclerView issue. As far as I have tracked down the issue it seems when recreating the view, it has a different Thread as the first time, so it gets into an inconsistent state. \nI solved it by doing:\njava\nnew Handler().postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                fetchArpInfo();\n            }\n}, 0);\nBut I do not know what exactly is causing this..\nI also found this bug report: https://code.google.com/p/android/issues/detail?id=158046\n. @PDDStudio I downloaded your source and run it. It worked. \n. @rubengees I think this is out of scope. You can provide a new list to the FastAdapter at any time. And sorting is as easy as \njava\nCollections.sort()\nhttp://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#sort(java.util.List)\nNo need to add more methods here, as it would just call this single method. I prefer this library to stay really focused. \n. @Rainer-Lang normally you know about your items. You have to add them at some point. So I assume that you still know about the items at the point of time when you want to sort them\n. @brittonjg I am sure it has nothing to do with the Fragment I assume your listener misses the required call for the expandable function. I will loook if I can simplify this step, so the listener does not have to handle it. \n. @brittonjg yes. this will be done by the lib in the next version\n. @brittonjg great :). So it is correct :D\n. @brittonjg with v1.2.0 it is now even cleaner to have the animation. See the latest changes. With the listener within an item you can now move the animation to the item itself. \n. @jlelse please check the new sample added by @FabianTerhorst https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/EndlessScrollListActivity.java\n. @FabianTerhorst thank you so much! ;)\n. @franciscofranco could you please post the code which caused this? I would really love to reproduce this on my side. \nSeems really weird, as at this line there's nothing which could be null:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L570\n(The mAdapterSizes is a TreeMap which get's never set to null)\nThank you so much. \n. @mattiasbe thanks for answering. And yes you are right. Just tried it and seems like the exact cause for this. Totally missed this. \n\n. @franciscofranco ok great :). No problem.\nAs long as it works now :)\nIf you might have suggestions how to improve the  `FastAdapter\u00b4 let me know\n. @hsdmiranda \nregarding your first topic. You can extend the SimpleDragCallback and overwrite the \njava\n@Override\n    public void onMoved(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, int fromPos, RecyclerView.ViewHolder target, int toPos, int x, int y) {\n        super.onMoved(recyclerView, viewHolder, fromPos, target, toPos, x, y);\n    }\nFor the second thing I've implemented a IDraggable interface which will be checked in the SimpleDragCallback and disable the drag feature for the items which are not draggable. \nThis is in v1.2.2\n. @hsdmiranda so the onMoved() method does not fire after dropping an item?\n. @hsdmiranda no problem. Oh cool. :)\n. @shubhamchaudhary thanks \n. Seems fine now :). Thank you very much for this PR\n. @brittonjg you might want to check out the source of the EndlessRecyclerOnScrollListener should be possible to alter it, but would require some time.\nIf you do it, you can open a PR if you want ;)\n. @brittonjg you can open the PR with the current implementation and we can have a discussion direct on the code. If you do the branch on a separate branch and create the PR from it, it is really easy to add additional commits to this PR\n. @Wouter0100 the Filter-API will filter out the current list of items. It can't be used if your items are loaded just while scrolling. \nIn your case you will have to implement a search on your API and if the user filters you will have to retrieve the filtered data from the API. \nThe problem is that filtering client side won't work as long as you do not already have all elements available. \n. @EpsilonOrionis are you talking about the StickyFooter which is available in the MaterialDrawer this can't be done via a normal RecyclerView and is out of scope for the FastAdapter \nIn the MaterialDrawer this is implemented via an additional LinearLayout at the end of the Drawer (lowering the size of the RecyclerView) and adding items in it. Those items there have a normal OnClickListener and in the onClick it will then execute the code. \n(The responsible code within the MaterialDrawer  https://github.com/mikepenz/MaterialDrawer/blob/develop/library/src/main/java/com/mikepenz/materialdrawer/DrawerUtils.java#L386)\n. @EpsilonOrionis that's why I asked if you talk about the StickyFooter which is different from a normal Footer \nThe click of an FooterAdapter item is triggered the same as of normal items\nThanks @FabianTerhorst for answering\n. @seba123neo are you sure your ImageView is clickable or that noting else consumes the click? The ClickListenerHelper itself does not much and jsut sets a normal OnClickListener on the view\n. @mattiasbe you use databinding with the FastAdapter?\n. @mattiasbe might fit as an additional sample (even if it is nothing complex) but still helpful for people ;)\nI would be really greatful if you could do a PR with it\n. @mattiasbe yes I konw. But it seems that people think there's a big difference. \n. @mattiasbe , @DJafari thanks\n. @sparkitny your item needs a background (or foreground) which has the selected state. \nI use the following in the sample items:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L131\nBest, \nMike\n. @DJafari good point. will add that method. \nv1.2.4 should be fine. Everything looks ok on maven central:\nhttp://search.maven.org/#artifactdetails%7Ccom.mikepenz%7Cfastadapter%7C1.2.4%7Caar\n. @DJafari I also use it in the MaterialDrawer and in many other projects. Also some friends use it. \nAre you on the latest support libraries? You might need to check what the exact exception is\n. @DJafari weird. do you have proper connection to the maven repo? perhaps v1.2.3 is already cached on your machine. \n. @DJafari ok great it's working now. \nFor the second thing. please open a new issue.\n. @DJafari most methods are now chainable in the adapter. Theoretically it is now also possible to init everything with a one-liner. \nPlease check it out and let me know, what you think.\nI think it is unnecessary to add an additional api as the one shown above (counting up many many methods...) as the original api is already really flexible, and mostly chainable\n. I think the possibilities with the current API is already really great. If someone want's to add a different API via an addon library I'm open for PRs. Otherwise I think it's ok to stay with the current API ;)\n. @shubhamchaudhary if you want to have your model split of the items you can use the GenericItemAdapter which does things like this for you. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java\nThe GenericItemAdapter will keep also a list of the model, and the items, but the items will just hold the reference to the model. This will allow you to just work with your model as normal, and you can add / remove / set it to the GenericItemAdapter without having to init the items on your own. \n. EDIT: the GenericItemAdapter will no longer keep an additional list of the model\n. @hmedat2008 I assume you talk about having an adapter with 4 different Item's right?\nDo those items have different types?\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L105\nDo all have their own ViewHolder?\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L163\nDoes the generic definition define the correct type?\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L28\n. I will close this for now as it seems to be a problem with the items, rather than the library. We can keep up the discussion in here. \nPlease make sure first that the above things are done correctly for the items. \nThe AdvancedSample for example contains different items in one list\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/AdvancedSampleActivity.java\n. @shubhamchaudhary thanks. This is a really good one ;)\n. @R4md4c as you do not use it, it should not matter as those are just Warnings. The UndoHelper is  a standalone class not used from the FastAdapter core itself\n. @R4md4c yeah had planned to add this to the README, but have not yet found the time for it.\nThanks ;)\n. added to readme ;)\n. yes\n. good one\n. too :D\n. @franciscofranco I have the weird feeling that it may be related to the ItemAnimator or that it is caused by the LayoutManager. Perhaps from the StaggeredGridLayoutManager and a wrong messurement. \nI am pretty sure it is unrelated to the FastAdapter itself as the Adapter just provides the items, but does not handle positioning, nor animations. The items themself follow the ViewHolder pattern and just provide the general view, which is also unrelated to the positioning. \nYou assumption that it may be the custom DPI could be true.\n. @franciscofranco already found something new about this issue?\n. @franciscofranco ok fine.\n. I think I can safely close this issue as I am pretty sure it is unrelated. If we find the root cause or a solution we can still answer it here.\n. Basically you need to do the following:\njava\n        int preItemCount = getFastAdapter().getPreItemCount(fromPosition);\n        Item item = mItems.get(fromPosition - preItemCount);\n        mItems.remove(fromPosition - preItemCount);\n        mItems.set(toPosition - preItemCount, item);\n        getFastAdapter().notifyAdapterItemMoved(fromPosition, toPosition);\nAlso added the .move(from, to) to the ItemAdapter. \nSomehow I have the feeling the notifyItemMoved() from the original Adapter animates really weird in some cases \n. @gromiloff omg you are completely right. :O It was just to late. sorry for the inconvenience. \n. fixed this to v1.2.8 (the move works with the global position)\n. @FabianTerhorst \n. @FabianTerhorst awesome ;)\n. @shubhamchaudhary thank you so much for this initial setup\n. @gromiloff the issue is not related to the FastAdapter. It might be related to the Item you have created.\nHow do you define the width of the items? Items are reused. \"Recycled\" when you scroll. So you might need to invalidate the view when it is bound again. \nI do not know if you can fix it with a custom LayoutManager. You might need to ask this on StackOverFlow. It might also be an issue related to the latest support libraries. \n. @shubhamchaudhary awesome, thank you so much ;) I already added you to the CONTRIBUTORS.md yesterday ;)\n. @FabianTerhorst that was fast ;). Awesome. Thanks. Still waiting for travis to finish. will merge afterwards ;)\n. a prive method to his project, or the total count of items in the current list. @FabianTerhorst awesome. Thank you so much!\n. @readbeard this should not happen if the ActionMode is finished when the action is clicked. \nmode.finish() should do the job here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiselectSampleActivity.java#L157\nRelated to #94 \n. @readbeard you can have any behavior you want. If you select an action, just finish the ActionMode you do not have to depend on the default implementation here. It is just a simple class to simplify things for most cases ;)\n. will be improved in the next version\n. @readbeard that was the case before. That's why I had to do the following change:\nhttps://github.com/mikepenz/FastAdapter/commit/d999c652ae67f0671d1085dfce82c0c04cfac66d#diff-31afcdcd4f3dcf443fc7b3c2cfaded2cR50\n. will be in the next version v1.3.0\n. @FabianTerhorst oh great. thank you. loooks fine ;)\nThanks @jasonsparc for your help too\n. @jasonsparc oh cool. Will have a closer look later today. But looks really awesome ;). Thanks\n. Might be helpful to have a sample showcasing the usage of the helper. \n. No problem. \n. @FabianTerhorst thank you so much. Looks good. Will merge as soon as the travis build run trough\n. Thanks\n. makes sense ;)\n. @FabianTerhorst awesome. thanks\n. @Rainer-Lang you could just provide an item with height=MACHT_PARENT which devs can use. \nShould be in the extension lib\n. Thanks ;)\n. @or-dvir an empty view is really easy. I did something similar for the ABoutLibraries with an ProgressItem\nhttps://github.com/mikepenz/AboutLibraries/blob/develop/library/src/main/java/com/mikepenz/aboutlibraries/ui/item/LoaderItem.java\n. @jonas-arkulpa should be fixed in the next version. The root cause seems that you have a selected item in some cases. The filtering will now deselect all selections before filtering. \n. @Rainer-Lang no it won't. \n. @mattiasbe not really sure if this is a good idea. \nI have updated the README to show that the extensions now also require transitive. They now depend on the Materialize library\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/build.gradle#L37\nIf you add the transitive the warning should go away\n. @seba123neo if you item allows click on itself, and has a selectable background it will show. This is not the case in the sample, as it showcases some different usecase\n. @Alchemist0823 for this case there is the GenericItemAdapter\n. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java\n. @FabianTerhorst has added two new methods to reset the EndlessRecyclerOnScrollListener which can be found in v1.4.1.1 of the library-extensions \nhttps://github.com/mikepenz/FastAdapter/commit/f6c9446c019f45516d99b80e94c019ad8df6aab7\n. please add your text to this issue: \nhttps://github.com/mikepenz/FastAdapter/issues/107\n. @seba123neo in the sample the child does not know about the parent. You could extend the child items to get a reference to their parent (just set the parent when you add the child items to the container item) so you will always have a reference to the parent and get the information when the onClick happens\n. @dsbeckham thanks for the PR. After some internal discussion we came to the decision that this PR does not solve the issue discussed in 107, and will break if items are removed and also cause problems in some other circumstances.\n. @robertdolca thanks. fixed in v1.4.1.1 of the Sample app\n. @jlelse I am sure it is possible. You just have to define the color in your onBind method. Shouldn't be a FastAdapter limitation as the FastAdapter doesn't know about how to visualize an item in general\n. @jlelse it wouldn't work with the SimpleSwipeDragCallback but you can have your own SwipeDragCallback which allows you to do this. The provided Callback is just meant for easy, default usecases. Advanced use cases are possible but will require more implementation on your side. \n. The SimpleDragCallback is here:\nhttps://github.com/mikepenz/FastAdapter/blob/master/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/drag/SimpleDragCallback.java\nwhich extends from the ItemTouchHelper.SimpleCallback which comes with the following package:\njava\nimport android.support.v7.widget.helper.ItemTouchHelper;\n. @jlelse you can't get it into the AbstractItem you will have to implement your logic here:\nhttps://github.com/mikepenz/FastAdapter/blob/master/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/swipe/SimpleSwipeCallback.java#L121\nThere's the itemView which has getTag() and the tag is the current item of this itemView if you item contains the color you can use this information to decide which color or drawable to use\n. @jlelse as mentioned the Simple* classes are just an addition to the FastAdapter ia the extensions lib to simplify default behaviors. more complex custom behaviors will need to be implemented by the dev himself\n. @DJafari as @Rainer-Lang already said. Your item will have to set it's background in the bindView() method. Depending on it's position \n. Fixed in the latest version of the extensions lib:\ngradle\ncompile 'com.mikepenz:fastadapter-extensions:1.4.2.1@aar'\nThanks @FabianTerhorst \n. @markic22 perhaps mavenCentral has not yet synced. have you jCenter also in your gradle?\n. ok it's at least already on maven central:\nhttps://oss.sonatype.org/content/repositories/releases/com/mikepenz/fastadapter-extensions/1.4.2.1/\n. Fatal Exception: java.lang.RuntimeException: You have to provide a ViewHolder with a constructor which takes a view!\n. Either your ViewHolder misses the CTOR with the view. or there was some weird Generics exception on a specific device. \nIn this case you might want to provide an ItemFactory and the getFactory() method\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/IconItem.java#L75\n. https://github.com/mikepenz/FastAdapter#proguard\nBut yes it is weird that it never happened during testing nor devvelopment. Any pattern on which device and android version this happened. or was it really a one time crash?\n. @artests87 Hi. thanks for your report. \nAnd thank you so much :)\nI found the issue and fixed it in the latest version v1.4.5\nBest,\nMike\n. @artests87 sorry I am not quite sure what you want\n. @artests87 the FastAdapter is already able to keep the selection and the expanded state upon screen orientation change etc.. See the SimpleItemListActivity\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SimpleItemListActivity.java#L114\nRegarding your second topic. \nThat was a decision I made when I started the FastAdapter so it works as expected, and I have no plancs to change this behavior as it will have other bad side effects. \nSo a more technical insight for this:\nThe FastAdapter keeps track of the position (not the item) for selections, and the expanded state. This is a really important thing to know, because this allows to FastAdapter to stay high performant even with Integer.MAX_INT items in it. So what are the pro points for this decision:\nThe FastAdapter will stay fast for selections no matter what happens, it is really fast to get the current selections, to store and restore the state, and so on. And there is no change in performance the more items we have. \nThe cons for this implementation are, that your requirement can't be handled by the FastAdapter as it can only keep track of selections for items which are currently dispalyed. So which have a position within the FastAdapter (SubItems are definitly not in the list and so have no position) \nSo I could have chosen to just keep the selection within the item itself, but it will have bad sideeffects. Every function which needs to keep track of the selection, expandable state will always have to iterate over all the items in the list and this will provide worse performance the more items the list contains. \nThe FastAdapter provides all callbacks and listeners, so you can keep track of selections of sub items in for your project. And you can select them again as soon as the event is triggered that a sub selection is opened again. \nI hope this detailed description clears things up\n. @artests87  you might be interested in this huge new feature: https://github.com/mikepenz/FastAdapter/issues/122\n. You need to have the snapshot repository as repo in your root build.gradle \n. maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n. @readbeard that is not related to this library. Collapsing Toolbar was used in the MaterialDrawer it might help you\n. @readbeard it is definitely not related to the FastAdapter as it is only an adapter and completely unrelated to CollapsingToolbar behavior or anything else UI specific. \nIn the README there's just adapter and item logic. Nothing activity specific. \n. @readbeard the question is if you even need the Materialize library in your project?\n. @RR12 can you please add some code how you init the FastAdapter? The crash is weird. It seems that the RecyclerView tries to init and fill the list with items, but there are no items in the list anymore / or the list was altered. So it seems there is some issue there.\n. you do not have to do the following:\njava\nmAdapter.notifyAdapterDataSetChanged();\nThis is already all managed by the FastAdapter itself\n. @RR12 right. Everything already handled by the FastAdapter as long as you call the corresponding methods on the ItemAdapter. \nIt will correctly call and forward all those notify calls for you:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L422\n. @Rainer-Lang in the new behavior I have to go over the list to find selections and the expandable states, so the longer the list will get the slower this behavior will get. (More flexible, but slower on long lists)\nWheras in the previous behavior I always kept the position of the selections and expandable states, so I was able to directly access the positions which are needed. (Does not allow to remember selections within sub items, when filtering, very fast up to lists with size Integer.MAX_INT)\n. @artests87 yes ;). As the new StateManagment is just a pre release all discussion should go here, so we can pretest everything to work as expected. \nThe first issue I can reproduce and will fix now. \nTo the second. Does your item have an identifier? \n. @artests87 subItems do not have a position as long as they are not displayed. That's not possible as they are then currently not part of the list. \nAlso you may group your answers. Otherwhise this thread will get a bit complicated :D\nselect / deselect - I will have a look, but this may be easier if you just go over the items, and notify the adapter that the items were changed. \nyou can expand items already via the fastadapter\n. @artests87 I found the issue about deselection. Will be in the next SNAPSHOT. \nAbout expanding. I was talking about this method:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1046\n. @artests87 new SNAPSHOT is available\n``` gradle\ncompile('com.mikepenz:fastadapter:1.5.0.b2-SNAPSHOT@aar') {\n    transitive = true\n}\n//extension:\ncompile 'com.mikepenz:fastadapter-extensions:1.5.0.b2-SNAPSHOT@aar'\n//The tiny Materialize library used for its useful helper classes\ncompile 'com.mikepenz:materialize:0.8.8@aar'\n``\n. @artests87 yes modified thedeselect()method ;)\nFor this case I added aselect()method for you :D \n. @artests87 shouldn't be the case as I call:notifyDataSetChanged();` after the select was done. I just tried it in the sample app and it worked, and instantly displayed all items selected. \n. https://github.com/mikepenz/FastAdapter/tree/develop/app\nJust added .select() to the menu click in the sample app to try it out\n. @artests87 ok great. What was the issue?\n. @artests87 related to the snapshot you use? Please keep issues and talks about this pre release in the specific thread.\n. @artests87 does your item have an identifier?\n. @DJafari That's nothing the FastAdapter can handle for you. This is just about the way your cardview is configured. Please see here: \nhttp://stackoverflow.com/questions/31273203/what-is-the-best-practice-to-group-items-into-cardview\nWhen you expand you just have to change the margin of the parent CardView so it will \"group\" with the sub items. \n. @DJafari please look again at the link I posted above. It will group together the CardView so you can get the same effect and make it look as it is \"inside\" the CardView \nOtherwhise you will have to handle this on your own. You will have to listen for the click event and then call notifyItemChanged() and add the new views to your item inside the bindView() method\n. @artests87 related to the snapshot you use? Please keep issues and talks about this pre release in the specific thread.\n. @hsdmiranda the method might not be added to the GenericFastItemAdapter but you should be able to call it directly on the  GenericItemAdapter. \nGenericFastItemAdapter.getGenericItemAdapter().withFilterPredicate() should do the job\n. No problem :D Sometimes I wonder myself how many questions I can answer without even looking at my code :D\n. @alashow I am not quite sure what your issue is. \nYou write your item, it can have any properties any settings whatever you want. You can set them. And the view will use them and display them. If all items should have more or less a \"configuration\". Then you can create a \"configuration\" object. Pass it to the item, so all have a reference to the same \"configuration\" object. And If you change this object. Notify the adapter all items will change. \nBest, \nMike\n. @alashow the correct solution is that you have a non typed FastAdapter (or you go against the interface IItem) As the FastAdapter is there to manage all items he gets, Also those from sub adapters like the FooterAdapter, it is important that he is always on the base class for all your items. or he is not typed at all. or you use IItem as type. \nAs of your exceptions it seems you have typed your FastAdapter to Product which is for sure not castable to your FooterItem BasketTotal\n. @alashow FastItemAdapter == ItemAdapter.wrap(FastAdapter) \nThat's correct, if you have an untyped FastItemAdapter all the methods of it will be with type IItem you will have to cast most things and get the correct type. \nWhat you can do is that you really split up FastItemAdapter to ItemAdapter and FastAdapter you will then have your FastAdapter with the general IItem interface, or your common base class, and your ItemAdapter typed to Product.\nIt is not possible to have a FastAdapter with a specific type, but another adapter (your FooterAdapter) which wraps the FastAdapter with a different type. That's how Java works, and that's how type safety is designed. \nYou have to decide what fits more your usecaes. work with the interface, but loose the advantage of the correctly typed listeners etc. or you type the adapter but then you have to make sure you type it with a base class common to all other typed adapters which wrap the FastAdapter\n. @artests87 you can't. An item must not have a view at all times.\nIf you want to change an item you will have to change it's data and notify the adapter about the changed item. It is nothing the FastAdapter will have to handle. Just add the udpate method for the data to your item. And make sure the bindView method will correctly handle the view and the data. If you call notifyAdapterItemChanged() bindView will get called and the view is then updated\nYou may should watch some talks regarding RecyclerView and how views are handled inside a RV\n. @artests87 if you want to apply a filter on images, you will have to do this in the bindView method. If you want to change it at a later time, your item needs to have a variable which you can set, which will define which filter to set, if you change this variable on this item, and you want the change to be visible, you will have to call notifyAdapterItemChanged() \n. Hi @bachhuberdesign \nTake a look at this method withOnlyOneExpandedItem:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L251\nIt will always collapse all other expanded items and will just keep one opened. \n. @suleymanccelik no there isn't but the collapse should trigger a notifyItemChanged on the parent which should call the bindView and so you should be able to just change the color there\n. @dexion I am not sure if this can be fixed. The  StickyHeaderAdapter uses an Decorator to display the header above the item. The project used in the sample is the following:\nhttps://github.com/timehop/sticky-headers-recyclerview\nI just added a small animation optimizations (that's why it has a SNAPSHOT version)\nI can't give support for external libraries. And it seems they no longer maintain the project. There may be other StickyHeader implementations which deal a bit better with the above usecase\n. @artests87 I do not know :D which support lib version do you use?\n. support libraries? ;)\n. no support libraries. app-compat, and recyclerview and so on?\n. Do you use a different layout for the ImageItem?\n. @artests87 maybe those conflict. \nYou always should use the same version for all dependencies from the com.android.support package. So try to change all your support library dependencies to v23.3.0 (the FastAdapter also uses v23.3.0) \nIf it still crashes, do you use the ImageItem exactly as it is in the sample app? or your custom layout? \n. @artests87 oh you changed it to a CardView then you should check out this article: \nhttp://stackoverflow.com/questions/26399670/android-graphics-drawable-colordrawable-cannot-be-cast-to-android-support-v7-wid\n. Great that you solved it. But in general those questions are not library specific anymore. The logic how your view should look like is up to the dev who uses the FastAdapter that's completely independent from the lib\n. Use the latest app version from here:\nhttps://github.com/mikepenz/FastAdapter/releases/tag/v1.5.1\nIt is no issue, in the previous versions I just had not stored the savedInstanceStateso it is simple why it didn't stay. \nWith this commit this was changed:\nhttps://github.com/mikepenz/FastAdapter/commit/13bbe76165063bfd4bdad6fc44124bbb740ceb49\n. @artests87 the latest stable version has the features from your SNAPSHOT merged, so you can now use the upstream version (just enable the alternative state managment for your usecase) \nas mentioned, it was just not enabled in the sample, I have changed it and it will now retain the state\n. @ncapdevi the FastAdapter is just an adapter coming with all the items logic. You should be abel to use any ItemDecorator or any other library which provides StickyHeaders. I'm sorry that timehope stopped supporting their lib. It's pretty stable, with some small glitches when animating. If this is an issue on your side you might find better or other alternatives. \nPlease report back if you find an alternative.\n. @dexion can you provide a sample showcasing exactly this issie?\n. @dexion to fix your issue just replace \njava\nfastAdapter.notifyAdapterItemMoved(oldPosition, newPosition);\nin line 208 of your ListShiftTypeActivity with \nitemAdapter.moveModel(oldPosition, newPosition);\nThe following happens. By default this would be done by the SimpleSwipeDragCallback but as you want to handle the event on your own, the default behavior does not kick in and you have to call this method. You also don't have to notify then as this is done within the moveModel method.\n. @Schinizer yes this is possible. You can have as many types as you want. So there are different possible solutions to your question. \nIn general it is possible to define the Type to your FastAdapter /  ItemAdapter /  FastItemAdapter, if you define a Type all added items have to fit this Type. If you have different types of items you can either use those adapters without a given type, or you use a parent class of your items as type (if they have something in common). \nThere are also some examples which showcase this. (Not exactly the same, but even more complex situations) \nFor example the IconGridActivity which has the ExpandableItem and the IconItems which are added if you click the ExpandableItem (so in fact the FastItemAdapter in this sample will hold both types if expanded, in this sample the FastItemAdapter is not typed). In this case the events will fire with an IItem which you can cast to your specific type (make sure to check instanceof :D) \nSee the sample here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/IconGridActivity.java\nYou can also look at the MultiTypeGenericItemActivity sample where we have a model class, and multiple item classes:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java\nI think this should already give you an idea how this works. \nAs there is no sample for the typed MultiItem situation here a description:\nMessageItem\nLeftMessageItem extends MessageItem\nRightMessageItem extends MessageItem\nSo your FastAdapter / ItemAdapter will have the type MessageItem which means all events will fire with a MessageItem and you can then decide on / cast to the specific item type. \n. Hi. Thank you. \nFor the first issue, I have no idea as this is something handled by the RecyclerView and LayoutManager and not the adapter. So you may have to ask this somewhere like StackOverflow (expanding / collapsing is basically adding and removing items, so you might can ask it in a more general way)\nYour second question. You are right, right now there is no solution that you can also get the OnClick event from the ExpandableItem as this is internally managed of the item. I made this decision as in general people will just want the single functionality from this item. I really should add the possibility to add an additional OnItemClickListener on it. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/ExpandableItem.java#L89\nAs an additional note. The general listener won't fire as we consume the click event here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/ExpandableItem.java#L98\n. Will be in the next version\n. @artests87 in the snapshot this behavior was default. For the stable branch it is not default and just has to be activated :D (to be correct the default behavior has to be deactivated)\njava\nwithPositionBasedStateManagement(false)\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L225\n. @artests87 just use the latest stable version and set this property. then it's exactly as in the snapshot\n. @gupta11 are there now already native ads available? The AdView is not the most performant if used within a RecyclerView\n. But in general you can use the WrapAdapter which wraps around the FastAdapter and will add items inbetween your list:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/adapters/WrapAdapter.java\n(The above WrapAdapter will add the items of the given list in equal distances)\nYou can modify the above too add items all 6 items or so too. Just overwrite shouldInsertItemAtPosition and itemInsertedBeforeCount of the AbstractWrapAdapter \nI have done this here: https://github.com/mikepenz/FastAdapter/blob/feature/admob/library-extensions-admob/src/main/java/com/mikepenz/fastadapter_extensions/admob/AdmobAdapter.java (but this is not yet finished, as there were no real NativeAds at that time \nAs you can see I used the AdView in this branch: https://github.com/mikepenz/FastAdapter/blob/feature/admob/library-extensions-admob/src/main/java/com/mikepenz/fastadapter_extensions/admob/items/AdBannerItem.java which resulted in bad performance. \n. @gupta11 probably not via the AdView of AdMob as it's a WebView that's why I asked if you have beta access to native ads which will then be image and text provided via api and is displayed natively as item, which will provide best possible performance :)\n. I think as far as I can tell this is answered. \n. @stonecold123 where do you \"wrap\" the adapters as done here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java#L61\n. @stonecold123 you have the GenericItemAdapter and the FooterAdapter so you need to do the following (the above link was just a sample)\nfooterAdapter.wrap(adapter);\nand you then apply the footerAdapter to the RecyclerView\n. @stonecold123 yes correctly the FooterAdapter already needs the global FastAdapter because the FastAdapter will manage everything. and without this it will fail too.\n(In your case the FastAdapter is the GenericItemAdapter which is FastAdapter + 1 GenericItemAdapter combined)\n. @duyngn hi \nIf you can't extend from the AbstractItem you either could just implement the IItem interface, or you choose to split up Model and Item as shown in the MultiTypeGenericItemActivity\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java\nIt just uses one model class, but you can easily change it to allow different model types too, and you can then simply define which item to choose for which model or any logic which is used. \n. @or-dvir it's totally fine. In general the type definitions in Java will help you while coding the most, the code which is executed in the end does not care much about it anyways.. @HammadNasir sorry this is no FastAdapter related issue. Please head over to Stackoverflow to get programming related help. \nIn your bindView you just set the text. And you never init glide or anything to load your image onto an ImageView\n. @HammadNasir answered it\n. @stonecold123 first of all you mix up Adapters and Items. You are talking about an item the whole time. The ItemAdapter is a normal adapter which can be used with the FastAdapter and which will manage items. \nComing back to your question of having different views with the same item in different activities. \nThere is no way to set the layout and the type as this is a really bad behavior and should not be done! There are many scenarios where it will break, and it should not be done. \nAn Item also has a ViewHolder which is layout specific so it also makes no sense to have it changeable. \nIn some rare cases it might work though (no support will be given from my side). As you already write your own item implementation you can just overwrite those two methods and make it setable. \nREMEMBER:\n- You must not have different layouts for the same type in one activity\n- You must not change the layout during runtime in one activity\n- You may can have the same item with different layouts and the same type in different activities (as long as you don't use a shared Pool)\n. @pkozlovskiy with must not change layout it is meant that the layout file used for a specific item is not changed. That's also not possible with a normal recyclerview as the views are cached. You will need a different item for a different layout. @gaspar1423 this is not related to the FastAdapter this is related to the StickyHeader implementation of the 3rd party lib used in the sample. \nYou may find some answers here: https://www.google.at/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=clicklistener%20decoration%20recyclerview\nBut otherwhise you have to switch to a different StickyHeader implementation\n. @HammadNasir see the following answer: https://github.com/mikepenz/FastAdapter/issues/141#issuecomment-223638340 \nIt will require some logic from your side to correctly implement those methods, as you want the items to be inflated \"randomly\", as there is no \"random\" in a RecyclerView as the position of items is pretty important and has to be fixed. (otherwhise the update method has to be called)\n. @stonecold123 you create a new implementation of the OnBindViewHolderListener which does not call:\njava\ngetItem(position).bindView(viewHolder);\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1651\nYou could also just extend the OnBindViewHolderListenerImpl and add your logic (don't forget to call the super) \n. @stonecold123 great. \njava\npublic class MyOnBindViewHolderListener extends OnBindViewHolderListenerImpl {\n...\n}\n. @yolapop why would you need it?\n. @yolapop why don't you do this simply in the item's onBind method?. @yolapop sounds interesting. The MaterialDrawer also builds heavily on flexible generic items.\nI wonder the specific usecase where the item specific methods do not work. @waninkoko could you please provide a sample app so I could debug this?\n. @waninkoko I am not sure if I am able to have a closer look today. Will answer as soon as possible\n. @waninkoko the id you used in the sample application is it a demo id or a real one?\n. @waninkoko great. thank you. added a clean solution to the latest release\n. @stonecold123 if the background does not change color via states and you require a method to change the background you might have to change the behavior to call the update via this:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L169\njava\nFastAdapter.withSelectWithItemUpdate(true)\n. @stonecold123 one question. why do you do all of this in the onBindViewHolder and not in the bindView method of your item, where it should go to?\n. @stonecold123 bindView is always called when an item get's into the visible range or the notifyAdapterItemChanged was called. If you have enabled it select will trigger an notifyAdapterItemChanged. \nYou should use the identifier for those items, so you can get their positions easily. \n. @stonecold123 great ;)\nwithSetSelected just changes the property of the item. This does NOT yet trigger the bindView then. To inform the Adapter that the item has changed you have to notify him that an element was updated.\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1455 \n. @gradha it is related to the amount of icons and their rendering. (Painting the path of the icon using the font)\n. @waninkoko oh thank you a lot. \nI also have seen that we have to do the same here:\nhttps://github.com/mikepenz/FastAdapter/blob/eca22327b1f75bd113f7681a5e9fb9253b50fbee/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/drag/SimpleDragCallback.java#L65 (4 times)\nand here. but here we don't have a reference to the FastAdapter\nhttps://github.com/mikepenz/FastAdapter/blob/4260c728632e8261cabf524b30197e9638f94c60/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/swipe/SimpleSwipeCallback.java#L106\n(also not quite sure if it is really required here) \n. @stonecold123 weird. I also was able to reproduce this on Android N. It gives the exception that only the original thread woh created a view can modify it. But that's weird as both actiosn are done with the main thread. \nTo get it working and to also save the selectiosn upon filtering you can use the alternative state management by doing the following:\njava\nadapter.withPositionBasedStateManagement(false);\n. @stonecold123 that's possible when you switch to the alternative stateManagement via \njava\nwithPositionBasedStateManagement(false)\n. @stonecold123 new version with a fix for this released\n. @rsd-raul it is not possible with the included ExpandableItem but should be really easy to implement. \nIn general the following changes have to be done:\nremove the listener here (this is currently used to replace the default behavior): \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/ExpandableItem.java#L121\nadd the listener on the ImageButton with the functionality as the listener above had. \nyou might still want to provide a included click listener as the one above as you have to return \"true\" in normal cases otherwise the normal collapse functionality will be executed\n. You need more help?\n. @rsd-raul it was not 100% possible with the previous release. I have now added a new feature to allow this. I also added this branch: https://github.com/mikepenz/FastAdapter/tree/feature/solution_issue_157 with the changes needed to get this proper working. \n. @rsd-raul for the separate branch I have just modified the existing ExpandableItem you should copy and paste this item and do the modifications as in the commit + you should make it autoExpanding false:\nhttps://github.com/mikepenz/FastAdapter/commit/74c70366c6b3b5b672bb3c042ef5b9b285554bd3#diff-e3cb79b0c8d0b1c3872031cefbdf5cf9R87\nUse IItem as type for your adapter if you have multiple types of items, if you have just one you should use the specific type. \nOh cool. You use private github repos?\n. Thank you\n. @SahajRana you don't have to call the notify methods if you use the add, ... methods from the FastAdapter everything is handled for you. \nIf you want to add something on top just add it at position 0 \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L341\nmFastItemAdapter.add(0, mFeedSuper)\n. @Spotik if you change an attribute you have to call a notifyAdapterItemChanged event. Which will call the bindView again. \nIn general you should not directly access the view as this is all handled by the RecyclerView and optimal caching is not possible otherwise. \nWhat you can do is that you get the view from the onClick event and search for your view, and that you update it then. Also remember that the bindView has to handle the same logic otherwise you get inconsistent behavior. \nIf you delete an item you also have to call notifyAdapterItemRemoved() (and all those notify methods have to be called on the main UI thread)\n. @BobOtike the easiest way is if you do the following\njava\nitemAdapter.getItemFilter().getConstraint()\nIf the above is empty or null the adapter is currently not filtered\n. @BobOtike can you provide a small sample app to showcase this issue?\nIn general you must not call the notify* methods from the adapter just the notifyAdapter* ones. Also the set, add, ... methods all handle this already for you so this also is not really necessary. \nIf you change the whole list you have to options either via setNewList or via set. Have you tried both? \nAlso it would be good to know if you provide identifiers to your items? Or have enabled the automatic identifier util (which will define identifiers for all items) ?\n. @BobOtike ok after some testing. The issue is realted to the  ColorDrawable, more specific to theFadeDuration which is defined when you define animate=true\njava\nstates.setEnterFadeDuration(duration);\nstates.setExitFadeDuration(duration);\nIf you change to not animate in your code (change to false):\njava\nUIUtils.setBackground(holder.itemView, FastAdapterUIUtils.getSelectableBackground(context, Color.RED, false));\nit works without any problems. \nI assume this is a plattform bug, or not properly supported somehow. \n. @BobOtike the animation can theoretically be \"enabled\" when you set that the adapter will update on click (but it has a slight delay) which is also not the proper thing. \nregarding your afterglow of the ripple. not sure where it comes from because the RecyclerView does not have ripple's on the views, and the item you sent to me had non either. Do you define it somewhere?\n. @BobOtike oh completely missed that this bases on the selectableItemBackground if you want it without, I would recommend you to create a select background as shown here: https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/res/drawable/button_rect_list_normal.xml\n. @BobOtike oh great :). \nStill weird enough that this is broken in andoird\n. @munsuri this is meant to work starting with API 11 as the sample app does. The R.attr.selectableItemBackground has a bit a different behavior which is the reason why I chose to use the other one. \nYou can just add the code to your project if you need a different behavior and API 10 support\n. @RedMillLtd that's the intended behavior, as the programmatic methods allow you to select items which are not selectable. \nThat decision was made because in some applications it's necessary to be able to select even if the item is in general not selectable via user interaction. \nWould be an improvement to add a flag for this on the select() method\n. this feature is available in the v1.6.1-SNAPSHOT (which is on the maven central snapshot repository) it will be included in the next release. \nYou can already test it and use it with the above named snapshot. don't forget to add the snapshot repository to your repos. \n. @knezmilos13 thank you. \n. @Demuss definitely not related to the FastAdapter as it has nothing to do with the Toolbar as it is only an adapter providing items to the RecyclerView and also not really related to the MaterialDrawer as it also does not add / change the Toolbar. \nThe issues possibly only happens because a redraw occurs and this makes it visible. \nCould you perhaps make a small sample app showcasing this issue, to make it easier to debug it for you. \n. @Demuss thank you. \n. @jp1017 is this method executed on the main thread? If you use the add etc methods of the FastAdapter you must not call nay notify methods. \n. @jp1017 what's the output of \njava\nThread.currentThread().getName()\n. @jp1017 can you please provide a small sample app showcasing this issue? So we are able to debug what's going on in this case?\n. Fixed with this PR\nhttps://github.com/jp1017/FastAdapterIssue/pull/1/files\n. @jp1017 you can simple create an Item which is the full height, and has an icon inside. \nThis isn't something I see in the FastAdapter as there are already many libs which do this. \n. @MFlisar depends on the exact thing you need? like the expandable items? or just always visible items within each other?\nYou can still provide them as flat list and have different items with different paddings?\n. @MFlisar this is also possible. Even done in the sample app. \nThere is just a limitation. If you want to update an item from a sub sub level this is currently not supported. Updating a sub item only works with 1 level. \nEverything else is fine and works\n. @MFlisar the AdvancedSample has multiple levels\n. @FabianTerhorst @mattiasbe thanks both for answering\n. @LukA888 you might should head over to Stackoverflow as this is definitely a support libs topic and not library related.\n. @girish3 this exception also happens when you use proguard or anything and don't have a ViewHolder factory:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L148\nFor optimal performance it is really suggested to have the ViewHolder static. but it is no requirement. \n. @dexion I have added the initial WIP state of a FirebaseItemAdapter to the repo. This is untested and may not yet work as expected. \nFeel free to open a Pull request to enhance it. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions-firebase/src/main/java/com/mikepenz/fastadapter_extensions/firebase/FirebaseItemAdapter.java\n. You can't cascade external adapters as they have to be supported. That means you can only wrap adapters which implement the interface from the FastAdapter library. Which the FirebaseItemAdapter does. So you can basically use this one (it will definitely need more work and additions, but should be a good start)\nBut for normal use you can also just load the list of elements from Firebase pass it to a normal adapter and you are good to go. Using the FirebaseAdapter will just simplify things even further\n. Hi @gpulido \nSo for your inital setup everything looks fine. \nYou have correctly found out that you need the GenericItem and with it the GenericItemAdapter for your case, as you have model and view split up into 2 separat elements. \nIt is theoretically possible to combine those two too, but your solution is the prefered one. \nThe following steps are also correct, by wraping the FastAdapter with your GenericItemAdapter\nNow let's come to the more confusing part for you. \nFirst, you can not mix GenericItems with normal Items, as their containing adapters only accept one type. So what does this mean for your case. \nYou will have to modify your SectionItem to implement the GenericAbstractItem instead of the AbsractItem \nThe next step is, that you want to have a list with groupings together. As you do not talk about StickyHeaders this is possible with just one GenericItemAdapter (without the need to use the sticky header solution, or without using the WrapAdapter)\nFor this the easiest solution is,  to change the types for your GenericItemAdapter to feature the common types of your ContenderItem and SectionItem. I think it would be Object and IItem. Then you provide the function which is used to map the model's with the items:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java#L58 (with java8 this should be quite simple)\nAnd afterwards you simply just fill the adapter with a list containing the items and the sections (this may not be the cleanest solution, but the easiest)\ns1\ni1\ni2\ni3\ns2\ni4\n...\n(in case this solution does not fit your needs, you also can implement your own ItemAdapter which will accept your Map<Competition, List<Contender>> with items)\n. @gpulido oh sorry I wrote the answer directly so I missed that the correct type would be GenericAbstractItem as both items extend this one, and the GenericItemAdapter requires it. \nOh ok I see. \nI think you misunderstand the HeaderAdapter. The HeaderAdapter is meant to add a header section (before the normal item section). So this will result in something like (H1 H2 i1 i2 i3 i4 i5). It won't add items within the items dataset, but above. \nOn the other side the AbstractWrapAdapter (you have to implement shouldInsertItemAtPosition and itemInsertedBeforeCount) allows you to do this, but you will have to know if a Header is needed at a specific position.\nFor the sorting. You can provide an Comparator to the ItemAdapter https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L135\n. @gpulido really? But it is not much different than in the MultiTypeGenericItemActivity sample https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java#L58\nYes. If you come up with something let me know, perhaps we find something to bring it back to the lib and make it easier for the future\n. @gpulido ah yeah you are right. Sometimes generics can be a bit of a mess :D But yeah. We will figure it out. I really have to try it too so I don't give you wrong hints :D again xD\nYou will have the normal GenericItemAdapter which wraps the FastAdapter and then around those the WrapAdapter which wraps both. (in general the WrapAdapter can wrap around any RecyclerView.Adapter) \nYes should be enough if you pass in the positions for the headers. \nYou do not have to change any positions of the FastAdapter or the GenericItemAdapter the WrapAdapter already handles this. \nBasically you have to define that at position 0 shouldInsertItemAtPosition returns true, and that at position 0 there are 0 header items inserted before itemInsertedBeforeCount. at position 1 this should return itemInsertedBeforeCount. \nWhat might also be important is that you should keep the inserted items in mind when calculating the shouldInsertItemAtPosition as the positions will always move forwards once, each time you added one header. \nGreat. thanks. \nRegarding Realm. I have a first WIP adapter here: https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions-realm/src/main/java/io/realm/RealmItemAdapter.java (it is far away from doing a lot, basically displaying items added) but it should be a good start, and I hope people will add pull requests to it. \n. @gpulido ok after some debugging and digging around. You are right. It was not possible to have an GenericAbstractItem as general type for the GenericItemAdapter. To support this I came up with the following change: https://github.com/mikepenz/FastAdapter/commit/3604d2c9a7301d630f237647052d2116a52ba879\nwhich will now allow us to have something like this:\njava\nGenericItemAdapter<IconModel, GenericAbstractItem<IconModel, ?, ?>> itemAdapter = new GenericItemAdapter<>(new Function<IconModel, GenericAbstractItem<IconModel, ?, ?>>() {\n            @Override\n            public GenericAbstractItem<IconModel, ?, ?> apply(IconModel o) {\n                if (o instanceof RightIconModel) {\n                    return new RightGenericIconItem(o);\n                } else {\n                    return new GenericIconItem(o);\n                }\n            }\n        });\nYour solution already looks really good. And I think it will work dynamically for a lot of cases, but yeah you are right that it's probably not yet the best solution. \nPerhaps we should have an ItemAdapter implementation which takes the Map from us and handles the rest. So no more WrapAdapter etc, but just the items. In general it would only have to get the Map flatten it to a list, and have the rest happen automatically. \nFor the realmadapter. It is a first WIP thing. We will need a second GenericRealmItemAdapter too, but first this one should be working 100% ;)\n. Oh and for the above mentioned change. I have created a 1.6.3-SNAPSHOT relese, to test this beforehand. \n. I know it does not help for the RealmItemAdapter but for normal usecases (and probalby also the GenericItemAdapter --> untested) I have created a new HeaderHelper which can be used to add headers inside your list. \nhttps://github.com/mikepenz/FastAdapter/blob/37134b6b68cdda04c44ee1f84bd38cb48ba94ec8/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/HeaderHelper.java\nUsage is shown in the branch:\nhttps://github.com/mikepenz/FastAdapter/tree/feature/header_helper_sample\nThere is currently no release of it, so to test it just copy it to your project\n. @gpulido have you already found the code?\nYeah I think if you just add the latest version it should not conflict in this case. But in general you should exclude the FastAdapter from the MaterialDrawer in your gradle. '\nsomething like this (but for the MaterialDrawer :D):\ngradle\n    compile('com.mikepenz:aboutlibraries:5.7.0@aar') {\n        transitive = true\n        exclude module: \"fastadapter\"\n    }\n. @gpulido first of you need the Snapshot otherwise the above mentioned function won't work (https://github.com/mikepenz/FastAdapter/issues/175#issuecomment-240498476) \nAs of how to use the HeaderHelper in the beginning it had Item extends IItem set, but I changed it, so you can now define any class being used inside the list for the HeaderHelper so in your case with the GenericItemAdapter it should be your Contender class\n. @gpulido I am not yet 100% sure why it should break. The HeaderHelper has no reference at all to IItem \nhttps://github.com/mikepenz/FastAdapter/blob/37134b6b68cdda04c44ee1f84bd38cb48ba94ec8/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/HeaderHelper.java\nThe Item in the context of the HeaderHelper can be an IItem but does not have to be.\nBoth adapters which are passed in are also not typed. And just the grouping and sorting functions. So if you have the GenericItemAdapter in your case, you just pass in the list containing your Models and it should work. \nOr do I miss something :/\n. I have updated the HeaderHelper and added a second type. \nhttps://github.com/mikepenz/FastAdapter/commit/f03d17a8723cdfbcffcc9b0a7562d5d7dff1b198\nThis should solve your problem you have. \nWith the above would have it been possible you using just Object as type? So the lowest possible type?\n. Thank you ;)\n@gpulido now we run into a different problem. \nYou have a GenericItemAdapter which only takes models with the type Contender and items with the type ContenderItem the problem is that your header is non of this. So no matter on how we turn around the HeaderHelper it will always fail because the GenericItemAdapter won't allow your items. \nSo in fact you have to get your GenericItemAdapter down a bit and allow him to take perhaps Object as model and GenericAbstractItem as item. (as discussed here: https://github.com/mikepenz/FastAdapter/issues/175#issuecomment-240498476)  \nthe point is that the adapter will always make sure the items in it are the correct type. Theoretically you can totally drop the type but then you have to be really careful and make sure no cast exceptions occur.\n. @gpulido ok great :)\n. Hmmm you may send me this project via email so I can debug it sometimes\nthis weekend? Just remove everything non issue related\n. @gpulido any update?\n. @gpulido no worry. It's fine ;) I would just love to fix this one ;)\n. I have created a branch with a sample activity which solves your issue, and allows you to do what you want:\nhttps://github.com/mikepenz/FastAdapter/blob/feature/solution_issue_175/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java\n. No problem\nOh could happen. The branch was just there to showcase the grouping helper. \nAwesome that it works now :). \nBest, \nMike\n. @rmoreira0 no their is no Item which has a Sub-RecyclerView included, and there is no solution that the main adapter will get the events from the adapter set to the sub RecyclerView. \nThis is a rather complex use case, so there is no sample for it and probably wont be. \nI know that @FabianTerhorst has some experience with nested RecyclerViews. @FabianTerhorst any hints?\n. @rmoreira0 no I just said that there is no default item handling this for you. You have to create an Item which then has the sub RecyclerView as you did above as child. \nI think you and @FabianTerhorst already are on good track with the above code you posted\n. I think the answers, answered your questions. ;). \n. Are you using the SimpleDragCallback? \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/drag/SimpleDragCallback.java#L18\nYou should be able to check if the move is allowed with an ItemTouchCallback and defining a onMove method:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/drag/SimpleDragCallback.java#L65\n. @sumitsahu2207 you can implement the filter to take any values from your item:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SimpleItemListActivity.java#L79\nJust check out the sample activity\n. @sumitsahu2207 yes it is filtering based on search. but you can alter this. the integrated filter only takes a CharSequence as param. \nYou can either implement your own filtering and just update the list. Or you use the provided functionality and pass in some pattern you can use in the filter like:\njava\nfastItemAdapter.filter(\"price:2000-5000\");\n. as mentioned above you just need to have the logic inside the filter to identify on which pattern to search. so for gender and name you would probably add something like:\njava\nfastItemAdapter.filter(\"price:2000-5000;gender:male;name:Max\");\n. @MFlisar IItem is an interface :D Just make your implementation of the IItem to be a parelable\n. Using\njava\nContext ctx = holder.itemView.getContext();\nis the correct way of getting the context. \n. @waninkoko have you read the changelog here: https://github.com/mikepenz/FastAdapter/releases \n. Hmm I can't test right now but could be related to those changes\nBut in general the above should always be called. as the other does no longer exist\n. @waninkoko just had a look at their code. They have simply implemented the adapter wrong. They just overwrite the bindViewHolder without the payloads. \nSo the one with payload is never forwarded to the FastAdapter. \nThey should handle it the same as done in the android recyclerView code to forwarding the call from the bindViewHolder with payload to the other one. \nEither you are able to move out their adapter to your project and implement the payload listener too, or you keep the old version. Or you change the MopubFastItemAdapter to look like this:\n``` java\npublic class MopubFastItemAdapter extends FastItemAdapter {\n    private MoPubRecyclerAdapter mMoPubAdAdapter;\npublic MopubFastItemAdapter withMoPubAdAdapter(MoPubRecyclerAdapter moPubAdAdapter) {\n    this.mMoPubAdAdapter = moPubAdAdapter;\n    return this;\n}\n\n@Override\npublic int getHolderAdapterPosition(RecyclerView.ViewHolder holder) {\n    return mMoPubAdAdapter.getOriginalPosition(super.getHolderAdapterPosition(holder));\n}\n\n@Override\npublic void onBindViewHolder(final RecyclerView.ViewHolder holder, int position) {\n    super.onBindViewHolder(holder, position, Collections.EMPTY_LIST);\n}\n\n}\n```\n. @waninkoko it also does not work with v2.6.2?. please let me know as soon as you had time to check. . Currently no plans to add something like this. \nBut you may want to open a PR to support this. \nI have checked it's code, and found that it may need some changes to be 100% compatible. \n. @addelll there are many articles on the web comparing those. In some areas its about small details, in others it is personal preference, ... just check on google. No lib specific issue\n. @Christophe668 in general I would say, that it's a bug by this library and I would say they have to fix it. \nAs an alternative you are also able to just extend the FastAdapter and overwrite the onBind without the payloads. \nOn a side node. Having an adapter which animates the items at scroll is not the best idea. And it makes more sense to just have normal ItemAnimators in terms of performance etc. (But I understand that some design requirements need this)\nI will also probably look, and will add a \"legacy\" mode to the FastAdapter which (when activated) will forward requests to the proper onBind method\n. But in the end I think legacy mode makes sense because if you check out this issue:\nhttps://github.com/mikepenz/FastAdapter/issues/181#issuecomment-243502324\nThe problem is that many Adapter wrapping Adapters do not correctly override and forward all methods, which leads to these issues\n. @waninkoko do you have some more details? As of the code I can't see this inside the FastAdapter maybe I am just overlooking something. \n. It is currently only available on the ItemAdapter \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L299\nYou can create a PR to add it on the GenericItemAdapter for the Models too\n. I have tested it with the normal ItemAdapter yes\n. @meNESS-RooyeKhat I am not sure what you mean, and what you are trying? May youc an provide a sample app showcasing the issues? Or screenshots?\n. @meNESS not quite sure what's your goal. You can't simply use the same items inside a RecyclerView and somewhere else at the same time. Or at least not the way you have implemented it right now. \nAlso there is already a method to generate the VIew for you. If you want to get a View from an item. \nSee here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java#L199\n. It is not called. That's true. You can call it to get a view from this item\nwhich you can use then. You can't just use the view which will be used by\nus recyclerview\nAlireza notifications@github.com schrieb am So., 4. Sep. 2016, 19:05:\n\n@mikepenz https://github.com/mikepenz generateView() is probably the\nmethod I need to, but I already knew about its existence, the problem with\nthat method is, it will never be called! (I tested with logs and break\npoints) I know it sounds weird but that's true.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/186#issuecomment-244614889,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiKevxIjoBhEB4QSnEZZzVpESqgUGks5qmvo-gaJpZM4J0RdR\n.\n\nMike Penz\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.io\n. @meNESS-RooyeKhat I don't think that it is a good idea what you are trying. The view created from an Item has to be always the same otherwise the caching from the RecyclerView will break and you will see bad results. (This is RecyclerView behavior nothing I can change) \n\nThe only thing you can do is, that you alter the view inside bindView(), but this will give you bad performance. \nYou could theoretically really alter the view creation. But you have to remember that the returned view needs always the same structure. So you can't just return different manually inflated views. That's not possible as of the design of the RecyclerView. You will need different items for this\n. Thanks. \n. Is it intended on the branch solution_issue_175 ?\n. That's up to you. Either your list has the selection or you get the selection and reset it. Enough possibilities but it is up to you how to do it in the end. That's independent of the lib \n. Because the sticky adapter is not notified about the changes from the filter. You would have to notify it in your own afterwards\n. Awesome. Great :)\n. Oh looks really good\n. Will merge later today. Will have to test it first\n. Thank you once again\n. thank you\n. Just use the set method on the FastItemAdapter or ItemAdapter:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/FastItemAdapter.java#L218\nIt is also highly recommend to NOT alter the list of items directly. The FastAdapter will take care of everything if you use the provided methods. The getAdapterItems method is just there if you want to get the items out again, for nothing else. \n. and yes the above will get the position from the item via it's identifier\nFor your original question: @MFlisar no this is only supported in the MaterialDrawer but might be a handy addition to add a update method for this. \n. @MFlisar sorry for not yet answering. I am very busy at the moment. \nHaving collapsables + deleting is a really tricky topic. :/. Will I be able to just copy paste your above code and debug it?\nEDIT ok just have seen that it comes with long click etc. can you provide a small sample application to reproduce this issue? Thank you. \n. @MFlisar thanks for the demo applicaiton. \nAfter testing it. There is a simple answer to this. Deleting subitems via the normal methods is not supported. \nLong answer:\nTo be extrem fast and extrem performant, the FastAdapter has to keep track on which items are selected / not selected. It will also treat sub items not as normal items. They are temporary and will not exist in the normal item level. So if you delete with the deleteAllSelectedItems it goes over the list via the positions removes the items. as subItems are temporary shown there it will delete the elements at these positions. the ui will hide them as the recyclerview just animates them away. but in the background the original items (the one not on a sublevel) are deleted. \nI am also not yet really surewhat the most performant solution for this scenario would be. :/ \nEspecially as removing sub items should result in removing the items from the list inside its parent. not inside the main list. \nThe whole thing add some complexity. That's also why you can't currently notify about sub item changes for sub-sub hirachies.\n. @MFlisar if sub items change there is the notifyAdapterSubItemsChanged method which needs to be called. It will then take care if items were deleted or added. \nBut it's true there should be some SubItemUtils class which adds some helpers for sbitems\n. notifyAdapterSubItemsChanged correct. The hope is anyway that this will do also sub, sub, sub ... hirachies. \nSub sub sub hirachies would not really work via all the notify methods. that's the point. sub items are outside of the normal items range, as they should not alter the general list. \n(as an alternative I would have been able to do a simple implementation of the \"subItems\" where the parent would just add those items, and remove them again, and they would be in the normal list, etc... but I think this would have some other ba^d side effects)\n. @MFlisar the selection is only lost in the position based state management, but not if you disable this one and use the identifier based statemanagement\n. https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L228\n. The reason for this is, that the position based statemanagement can't keep the selection for an item which is no longer there. The alternative statemanagement can do this as it will keep the identifiers of the items. which adds a bit more flexibility\n. @MFlisar currently at a conference. will have to check later. \n. @MFlisar sorry that it took so long for me getting time to have a look. \nThere is quite an \"easy\" description on why things start getting weird when you delete items and just call notifyAdapterSubItemsChanged, and I think it is a problem of the current core. \nthe FastAdapter keeps track of the count of expanded items inside themExpanded SparseIntArray so I will always know on how many items are expanded, and at which position. This allows to quickly get counts etc, which eliminates unnecessary loops. This only is used with the PositionBasedStateManagement. An additional problem is that this is also used to check when expanding collapsing. As the list will contain the positions of the expanded items, but the indexes were moved it will fail also.\nInside the notify method there is no update for this, which is resulting in some problems. \n. @MFlisar so if you remove the withIsSelected(true) from your sample, use the (newly added) .expand() method (which will expand all on the root level). and then delete it will work fine. \nPerhaps we should just limit this use case to the id based state management as it will cause quite some overhead for the normal state management\n. @MFlisar ok after some more digging, I was able to detect 2 problems which were causing this issue when deleting. After applying the fixes it works now fine, inside your sample application\n. @MFlisar are you sure? https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1279 deselect is not called in this case\n. Ok. I will have to debug this. \nThe link to the code you sent may be the problem. \nwe use long as it is better to use primitive types. and you can still use any really high ID near MAX LONG or so. \nTo honest I am not sure if I never use i < 0\n. It will get complicated again when restoring selections with the savedInstanceState when the parent remembers. \nIssue with the selections is that we currently do not iterate over the childs. So they stay selected but you do not get them via the method. getSelections()\nif you get near MAX_LONG - headerCount you will have a real problem anyway. Also some additional information. RecyclerViews in Android can have at a maximum MAX_INT entries\n. so the last \"issue\" is now getting the selections inside getSelections \nI may just need to add a recursively algorithm there\n. @MFlisar that's true. We may need to move the recursive function to the SubItemsUtil which then allows you to get the selections + sub items. \nWhat may also could help is creating a connection between childs and parents. So we will always know which items are sub items, and which items are the main parent. (this will also allow to get ot the parent, because we know that it will be my total position - my position in the sublist)\nSo having\nIItem (id = 1, level 0)\n    ISubItem implements IItem (id = 2, parent=1, level 1)\n         ISubItem implements IItem (id = 3, parent = 2, level 2)\n         ISubItem implements IItem (id = 4, parent = 2, level 2)\n         ISubItem implements IItem (id = 5, parent = 2, level 2)\n    ISubItem implements IItem (id = 6, parent = 1, level 1)\n    ISubItem implements IItem (id = 7, parent = 1, level 1)\ngetting the positions for the selections will always be a problem, thus it will always just return visible items. \ndeleting items only allows to delete normal items anyway so child items should be ignored here\n. @MFlisar the above metioned points sound fine. \nOne more addition. The IExpandable interface has to be changed to be:\njava\npublic interface IExpandable<T, Item extends IItem & ISubItem > {\nThe additional question is if it shouldn't be required that the ISubItem has extends IItem as it will always have to be an IItem too\n. And yes the level can be dropped, as it would only result in problems when not correctly recalculated. \nIt is ok if you make the necessary changes :) \nAfterwards I will have a look and perphaps it is possible to simplify the FastAdapter core code too with the above changes\n. @MFlisar I know :) But we will release the next version as v2.0.0 which can have some breaking changes ;)\nOh wait one more second I will merge the PR from @Rainer-Lang first. So you don't run into merge conflicts afterwards\nEDIT MERGED\n. @MFlisar yes that's a really good idea, as selection change must not directly come from the user clicking on a view (which then can also be blocked) \nReally good idea. Thanks. \n. for the first comment. I have no idea why this happens. expand shouldn't remove the state\nthe second comment. It is ok if you do this when really just changing general information, for more this will cause issues as the internal methods are not called with it\nthird comment. yes I have to look at it anyway to make sure things work as expected. preventing multiple calls, yes I have to check this. will take a look, but it shouldn't be the FastItemAdapter\nthe fourth comment. I don't think this is necessary. at the moment I use the identifier to check if items are equal so this should be fine. no general equals methods used \ncould you open a pr with the chagnes. will make it easier to check what is changed and to test. with your branch I can't directly see what is different\n. @MFlisar ok great. \n. @SeyedAliFarjaD could you please be bit more specific about your issue. I am not really sure what you mean\n. @MFlisar this is currently not planned. But I would be happy about a pull request adding something like this to the extension library package. \n. As of the API of the drag-select recyclerview it is not as easy to add this. It might end up in something similar as the the firabase or realm implementations. as extensions lib module. \nFor credits. This module should have credits to @afollestad. and also the README should feature him. I also would love to prior ask him for integration. \nThe best solution will still be to combine both without the requirement of copy pasting everything (which is probably not possibl as of the different selection mechanisms)\n. Combining means, creating an adapter which extends from the ItemAdapter which will have the methods as defined in his adapter, but calling the select methods etc provided by the FastAdapter\nAnd this can then be added as another library module to the FastAdapter as special feature\n. @MFlisar thanks. Great ;) You can add a sample activity to the FastAdapter to showcase the combination of your RV with it ;). @SeyedAliFarjaD how do you filter the list? And how do you add it to the filtered list? Could you please post some code? \n. @SeyedAliFarjaD you are right this was not possible. I have added this new feature which allows you to add... items when filtered by using the ItemFilter provided methods:\njava\n((ItemAdapter.ItemFilter)fastItemAdapter.getItemFilter()).add(new SampleItem().withName(\"Hallo tester testing\"));\n. this will be in the next version\n. @shuufi I am not sure but perhaps you also need the following with kotlin:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L148\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SampleItem.java#L160\n. @shuufi I am not sure what a companion object is, but the getFactory() method should be overwritten from the AbstractItem\nIf the above does not work. I think it may have some problems with kotlin, which I can't support. If you find something it would be great. \n. @rafakob just use the getSelections() method of the FastAdapter:\njava\nfastAdapter.getSelections()\n. @MFlisar you don't have to use the FastItemAdapter which is in general just a combination of FastAdapter and ItemAdapter. If you use those on their own you simply can get the AdapterItemCount from the ItemAdapter which will be the count without the HeaderAdapter\nOr you use\njava\nFastItemAdapter.getItemAdapter().getAdapterItemCount()\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L171\nEDIT just had a second look. will answer for the thing you meant :D\n. So if you have an ItemAdapter<IItem> and you use for example the HeaderHelper to group them. you want then know the item count without the headers? Wouldn't you have the count of items before adding the headers anyway? I don't think that the adapter should have the above method. \n. @MFlisar but I am not wrong with my assumption that you already have to know the count of your items prior to adding the expandable sections. \nI think this method can be added to the FAQ --> \"How to get item count without expandable parents\" \nThanks\n. @MFlisar oh I see. The problem is that the ActionModeHelper hooks in via the onPreClickListener which is not fired when setting the selection programatically. \nThe question is, what makes more sense. Fireing the event prior to doing the seleciton, which would allow the current implemented mechanisms to work (you would just need to enable fireEvent when done programatically) or adding the above method.\n. @MFlisar no the functionality is already correct in the onPreItemClickListener as the item is not yet selected / deselected at this state. Which allows the ActionModeHelper to hook into this process and probably even prevent the click event from being further executed. \nAdding the selection cound would be a nice PR ;). \nAnd I think there is nothing against adding checkActionMode to the ActionModeHelper could you please also open a PR for this?\n. So the missing part is that the select method does currently not fire the onPreClick listener? \n. @MFlisar withAutoDeselect. where will this property be used afterwards?\n. @MFlisar ok great. \nYeah that should be fine. \n. @MFlisar the bundle should not be held inside the adapter. As this might be the wrong case for most applications. It would be better to hold it on your side. \nAlso it might not even be necessary to set the savedInstanceState especially when selection may changed for different data... \n. Ok for this usecase the best would be to simply hold the Bundle somewhere in your activity, until the data is ready. and then you just call withSavedInstanceState and it will take care of expandable states + selections)\n. In general there is not a problem why the adapter could not do it. It is just about keeping it as clean as possible, and keep functions out which may be only required quite rare, or are doable quite easy. \n(you also just need 4 lines of code or so)\n. @MFlisar I am happy bout your suggestions :) It's great to move the lib forward. \nOn the other side I still have to make sure it stays light and maintainable ;). the FastAdapter shouldn't feel heavy :D\n. @Marty you can already provide the DiffCallback with the set call, which may does the job for you already. \nAs an addition. If you do not want animation, but have an animator set. You will have to set the animation time to 0 or remove the animator during the altering of the list. The FastAdapter itself just notifies the RV about the correct changes. \n. @mattiasbe thanks for ansewring\n. @MFlisar the build is failing because the sample app was not adjusted to the changed api. But as I already proposed to allow the onClick without the activity this should be fixed afterwards.\nRegarding the renaming of the modules. I have to maintain 10 libraries, and have set up some tooling etc which helps me to keep everything simple. For this I have defined everything as library. In general you shouldn't use the module anyway. For testing purposes I always use the sample app anyway so I don't have to reconfigure anything. \nIn your case as you had to add it to your project. just rename the folder, and change the settings.gradle to link to the new folder. No other changes should be necessary\n. @MFlisar thank you \n@FabianTerhorst thanks for code reviewing\n. @hsdmiranda you will have to extend the SimpleDragCallback and overwrite the getDragDirs method. https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/drag/SimpleDragCallback.java#L84 \nThere you will not only check for IDraggable but you will also check if this item is really dragable, if not you will return 0.\n. @MFlisar you shouldn't do the above. Just tell the Adapter that he has to recreate all views. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1416\njava\nnotifyAdapterDataSetChanged\n. @MFlisar oh yes. You are right (as of the deleted comment) you also should map the new possible types: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/AbstractAdapter.java#L230\n. @MFlisar ok great\n. What exactly do you mean with \"remap\"?\n. Ah I see :D yes there is no such function at the moment. But I wonder why it's necessary, as the type integer will change and the item is set then. This is in general only used to  get the correct class for the type provided in the RecyclerView\n. @MFlisar ok for those the normal mapPossibleTypes method should already do the job. \nIn general. It is really important that you do not have multiple layouts for the same type as the RecyclerView will internally cache the views themself.\nSo if you are going to change the layout used, you will also have to change the type. \n. @meNESS the animation is played by the ItemAnimator you define. This has nothing to do with the FastAdapter \nyou can either set null as ItemAnimator or you set the animation time to 0 milliseconds\n. @meNESS could you please be a bit more specific. the click listeners them self are called by the android system. I hook a ClickListener and LongClickListener on the itemView so those are called. the preClick or normal click events on FastAdapter side are then just before internal stuff is executed / or after. \nSo I can not really prevent the real onClick listeners from being called. \nPerhaps you can show what's causing troubles for you\n. that's really easy to achieve. just turn the long click selection on / off depending on the count of selections:\n``` java\nmFastAdapter.withOnClickListener(new FastAdapter.OnClickListener() {\n            @Override\n            public boolean onClick(View v, IAdapter adapter, SimpleImageItem item, int position) {\n                if(mFastAdapter.getSelections().size() > 0) {\n                    mFastAdapter.withSelectOnLongClick(false);\n                } else {\n                    mFastAdapter.withSelectOnLongClick(true);\n                }\n            return false;\n        }\n    });\n\n``\n. both at the same time does not really make sense. But if this is also needed you could just have a longClick listener and call theselectmethod\n. @meNESS isn't this something similar toPullToRefresh`?\n. This is currently not in the lib. There is a PR which adds some support for it, but it is not yet in a 100% useable state. You could probably also contribute for this feature. \nhttps://github.com/mikepenz/FastAdapter/pull/213\n. Awesome :)\n. nice one. danke\n. @steventxc please see here: https://github.com/mikepenz/FastAdapter/issues/181#issuecomment-243502324\nThis problem is caused because Mopub implemented their adapter not 100% correct\n. Can I merge this PR already?\n. Thanks\n. thanks\n. @MFlisar could you please fix the build: https://travis-ci.org/mikepenz/FastAdapter/builds/161855519#L1848\n. By the way you are from austria? \n. @MFlisar can you contact me via hangouts pls?\n. The main problem why the chaining for the SampleItem is no longer working is that it is used for many different use cases in the sample. Which required it to be SampleItem<S extends IItem & IExpandable> as a result of this java can no longer resolve the proper types. Either we create more specific items for the sample, or we make the SampleItem abstract and add empty implementations of it with the proper type speficications. \n. I will merge this now and will make some improvements. so we can built upon this. It will be quite hard if we continue with this PR as it is already very big\n. @MFlisar the flags are not used for the normal listeners as I did not want to break the behavior when introducing them. perhaps for v2.0.0 I can try to add them there, and test libs like the MaterialDrawer if it will have some bad side effects\n. The flags are now no longer ignored. will be live with v2.x\n. I can't reproduce this issue. If I add the following to the ExpandableSampleActivity It will output the correct positions:\njava\nfastItemAdapter.withOnClickListener(new FastAdapter.OnClickListener<IItem>() {\n            @Override\n            public boolean onClick(View v, IAdapter<IItem> adapter, IItem item, int position) {\n                if(item instanceof  SimpleSubItem) {\n                    Log.e(\"WTF\", ((SimpleSubItem) item).name + \"  -  \" + position);\n                }\n                return false;\n            }\n        });\n. as an alternative you will be able to get the position of an item by it's identfier like this\nfastItemAdapter.select(fastItemAdapter.getPosition(101));\nin v2.x\n. thank you\n. In general the problem is very easy to describe. A FastAdapter will always have to handle all types of items provided to it via various ItemAdapters . You can type a FastAdapter and you can type a ItemAdapter but you will always have to make sure that you follow this simple rule:\nFastAdapter\n- it's type has to be the common type accross all the items provided for the ItemAdapters\n  ItemAdapter\n- It's type has to be the common type used within this ItemAdapter\nThis means you can solv eit via the following:\n``` java\npublic class MainActivity extends AppCompatActivity {\nFastItemAdapter<GenericAbstractItem> fastItemAdapter;\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    fastItemAdapter = new FastItemAdapter<>();\n    fastItemAdapter.withSelectable(true);\n    fastItemAdapter.withSelectWithItemUpdate(true);\n    fastItemAdapter.withOnlyOneExpandedItem(true);\n\n    for (int i = 0; i < 10; i++) {\n        fastItemAdapter.add(new SampleItem(String.valueOf(i))\n                .withSubItems(Collections.singletonList(new SampleSubItem(\"expanded: \" + i))));\n    }\n\n    RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recyclerView);\n    recyclerView.setHasFixedSize(true);\n    recyclerView.setLayoutManager(new LinearLayoutManager(this));\n    recyclerView.setAdapter(fastItemAdapter);\n}\n\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    MenuInflater menuInflater = getMenuInflater();\n    menuInflater.inflate(R.menu.menu, menu);\n\n    return true;\n}\n\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    GenericAbstractItem next = fastItemAdapter.getSelectedItems().iterator().next();\n    Toast.makeText(this, next.getModel().toString(), Toast.LENGTH_SHORT).show();\n\n    return true;\n}\n\n}\n```\n. ah you were referring to something else. I just debugged the crash, and fixed it. \nI will have another look\n. @WonderCsabo I just added to have a colored background for the selected item. and I was able to reproduce. it make sense at a closer look. No idea why nobody else realized this until now. \nThe problem happens here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L441\nwe expand the item first and then set the selection. Thank you for showing this. It will be fixed in v2.0.0 \nbest regards.\n. FastAdapter_218-fix.zip\nAdjusted your project to work with the new v2.0.0 (changed the items to use the new ISubItem interface, and fixed the wrong isAutoExpand method) \n. @MFlisar which count of selected items do you expect in general? if the count is not to much you could simple sort them on your side?\n. the order in which the user selected the items. You get this, by using your SelectionListener\n. @MFlisar I am not 100% sure. What speaks against a TreeSet in as your perspective? Also I assume in general that selections (the count of those) is quite minimal in comparision to the amount of items displayed in a list. So having the access as fast as possible is more imprtant than probably some overhead in storing this information\n. As of the current moment it seems to be a really rare usecase. There were no other issues opened for this problem. theoretically it would be ok to allow any list which extends Set during creation. Would this already solve your requirement?. @MFlisar I already did this change. \nEDIT  oh no sorry. I didn't. Missed it at this spot\n. Looks fine. I will have to check why the test are failing\n. @meNESS that is not possible, as a ViewHolder is reused from the RecyclerView\nYou can just hook into the view creation with the listeners and do some custom stuff if needed. But there is no possibility to get a ViewHolder by a position. \nWhat also would be possible is to directly get the View from a position, but that only works if the view is currently visible\n. looks fine so far\n. @JorgeBazarte will be in v2.x which is not yet released. \nif you have OOM's that means you probably bind to large images to your views. \n. @meNESS could you please adjust the things as mentioned in the review?\n. @meNESS looks good. thanks \n. @kolorszczak oh interesting. Do your items have identifiers? Could you try to use the alternative state management? withPositionBasedStateManagement(false)\n. @kolorszczak awesome. thanks. \n. @ncapdevi for these cases please provide a ViewHolderFactory\nhttps://github.com/mikepenz/FastAdapter\n. @SeyedAliFarjaD if your item changes. you should handle this via properties in your item or model. and just call the set method to change and update the item at this position:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L489\nOr if it stays the same object you can simply just call:\njava\nfastAdapter.notifyAdapterItemChanged(position);\n. you just get the items themself from the list by calling getSelected() and then you add them in a different adapter. \n. @MFlisar I think it makes more sense to split it up, as many items may not have this feature. \nI am not yet sure about the additional interface's name. \nIExtendedDraggable, IDragDraggable\n. Ok so let's use IExtendedDraggable :D\n. thank you :)\n. @MFlisar I think so we should also move the interface for it?\n. Hello @FuriousSeraphim \nThank you for your suggestion. \nIn general the payloads are already not null so you don't need this check. It is also a problem as this could cause more confusions and problems as it will help. I want to keep the API as simple as possible. It should also be very very similar to the normal adapters api. \nAnd adding such an method would cause confusions if and if not the method would be called on the initial call or not. \nYou can still do this for your project if you create your own AbstractItem class which will overwrite the bindView and adds the additional abstract method for you\n. Check out the GenericItemAdapter it is showcased in the GenericItemActivity allowing you to use your exisiting model and combine it with an item:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java\n. @rakesh1988 I do not understand why you need to change the footers? Just set and switch out the items in your footer. A adapter does not have to be strictly typed. You can have an adapter which goes against IItem\nThe sample app showcases many uses of the adapter with multiple item types in one adapter. \nYou will then just add the items to the footer and depeding on the current case you remove them and readd them to the adapter. \nAlso one hint. Why do you add Footer to your items? It makes more sense to keep them general, and reuse them wherever possible\n. @rakesh1988 perhaps you misunderstand how a RecyclerView works or how you add / remove items.\nYou have items. Which are meant to display one type of information. You can then provide this item to the FooterAdapter with .add() you can remove and readd this item at anytime. That's the same with the others. \n. @bloodcarter that's just yet available in the snapshot for the upcoming v2\n. @veeranath depends on your usecase. Which button click are you talking about?\n. answered. \n. @rakesh1988 what's wrong with returning it as shown above? GetViewHolder will create a new viewholder for the given viewType which is the correct behavior\n. @rakesh1988 which type does your FastAdapter have? If an item handling adapter has a different type your FastAdapter must also use IItem\n. If it works for you it's fine. \nBut I don't think this is necessary. the fastAdapter.getTypeInstance will always return the correct ViewHolder based on the viewType accross all ItemAdapters provided. \n. That's even the default implementation if you don't provide a OnCreateViewHolderListener:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1764\nBut if the above works for you it's fine ;)\n. @MFlisardo you use any other library like the MaterialDrawer or the AboutLibraries, do you include the module on your own, or do you use the latest snapshot?\n. @MFlisar yes. But in this case it isn't that easy. As the v2.x will have some breaking changes which change the interface. So existing items have to be altered. The MaterialDrawer and the AboutLibraries both use Items. \nI will have a look and release compatible snapshots. \n. @MFlisar if you update to the 5.7.0-SNAPSHOT version of the MaterialDrawer it should work\n. @SeyedAliFarjaD the easiest is to just get the ItemFilter from the ItemAdapter and check if the constraint is null or empty\n. something like this\njava\nTextUtils.isEmpty(((ItemAdapter.ItemFilter)fastItemAdapter.getItemFilter()).getConstraint().toString())\n. @markus2610 I think unbind is for a bit a different usecase. In our case in unbind we just reset the views to the values we want them by default\n. @gotev in general you should not put listeners in the viewHolder as you do above, as we do not have access to the items inside the adapter. \nInstead we do this when a ViewHolder is created. \nSee this answer here: http://stackoverflow.com/a/39845532/325479\nThis is also the proper way of doing the listener at the moment. But the plan is to simplify this for v2.x.x\n. You can see the changes here: https://github.com/mikepenz/FastAdapter/pull/241/files\n. For the SwipeableItem it is fine as it is just used internally, no need to externally access this listener. \nYou can have the implementation of this Event inside your item, and just pass it outside. This will only work if you do not have to access anything outside of this item, and just do internal stuff. I have adjusted the PR and changed this\n. Great. Thank you\n. @jp1017 which version of the lib do you use?\n. @jp1017 please add more details. \nDid you solve it already?\n. Thanks for answering @FabianTerhorst \n. @jp1017 proguard removes methods which are not used. Do you have any crashes or does something not work? \n. But above I see just warnings. If it works etc then it's ok. Proguard just did what it should. Remove not used methods. \n. @rafakob I am not yet 100% sure what you mean with changes to the whole list \nIf you have an endpoint which gives you items for section 2, the best would be that you just remove  the item range from section 2 -> section 3 and readd the new list of items at this position. This won't change any other items other than those. \nFor the rest. If you refresh the whole list, and get a new (new is important, don't update the items in the list you set in the beginning of the adapter, as it will not allow the diffutil to work), and then you just use the set method which takes the DiffCallback. Implement the methods, and you are good to go. The interface of this is very similar to the one from the DiffUtils themself so just look up totorials regarding this one. Nothing special to handle here\n. @rafakob \nfor the first part. Yeah I think having this solved via expandables would work. Or you just remember the amount of items you have per section. and then just remove the specific range\n(By the way I think the HeaderHelper could simplify the grouping for you: https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/HeaderHelper.java)\nFor the later. It depends. You can have 2 different cases here.\n1.) You know which item (so which identifier) was changed. So I would recommend just change the object (if you have the same reference which as in the list) and then call notifyAdapterItemChanged (https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1617)  for this element. You can pass any payload you want, and just hae to react in the bind method for it, and may change only a specific view value\n2.) As an alternative if you always get the full list (make sure it is not the same list (talking about its reference) which was added to the adapter before. And then use the set method using the DiffCallback in there implement the methods, and the rest will be handled for you. it will make sure the correct notify methods are called for the correct positions\n. @dexion please use the FastAdapter specific notify methods:\nnotifyAdapterDataSetChanged()\n. The point is that you should use the provided methods like setModels, or similar. to set new lists. Otherwise the model->item conversation won't happen.\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/GenericItemAdapter.java#L66\nor if you know the position of the changed element:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/GenericItemAdapter.java#L120\n. What happens in the onBackPressed or onOptionsItemClick listeners in the activity where you add the new item?\nYou have to somewhere add the new item to the Models / Item's which are currently displayed inside the list? \n. @dexion if you can not find out or notify the main activity about which items you have changed, the best is to get the list of items new, and use the method to set a new list of items. (The best would probably be the one with the DiffCallback, so the UI just updates new / modified / removed items)\n. @ravidsrk there are no plans to change the package name. Migration steps will be documented in a separate readme and in the release notes. Also the changes required will be rather easy to implement. \nIt also does not make sense to have v1 and v2 at the same time inside the project. \nThanks for your suggestion\n. @jp1017 please add more details. Sample showing the issue? adding some code?\n. @jp1017 any other libs like the MaterialDrawer or the AboutLibraries in use which may refer to an older version of the FastAdapter? \n. @jp1017 it is no problem in the sample's. As I also use it that way, and the adapter interface is the same. \nYou can try List<Object> payloads if you want\n. @jp1017 that's what I meant. the List without any types is correct. It works in the smaple etc. there must be some other issues. \nCan you please provide a small sample app which has this issue. so I can compile and test myself?\n. @jp1017 after looking at the code. \nIt is no issue of the FastAdapter it is a limitation of the GreenDAO library you use. \nI suggest you, to use the GenericItemAdapter instead, which allows you to have a model class and a separate item class.\nCheck out:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java\nOr:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java\n. @jp1017 I do not understand what you meant. The GenericFastItemAdapter has the same methods as the FastItemAdapter \n. @sumitsahu2207 I also recommend to implement it via the GenericItems just take a look at the samples for implementations which split model and item apart. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java\n. @stonecold123 yes that's possible. you just have to make sure your FastAdapter has a parent type implemented by both types used in the HeaderAdapter and FooterAdapter (and ItemAdapter). So if those items are completely different you want to use IItem as type for the FastAdapter\n. @kwf2030 the included Swiping functionality was not meant to be used in the way you try it to implement. It was created to support the functionality you can see inside the sample app. \nThere are libraries out which are created to support exactly the behavior you want on views, and I suggest you use a lib like this, for this requirement\nIt may is possible to bring in similar functionality to the included swipeCallback. If you want to implement something like this you can open a PR to bring it back to the lib. \nthanks\n. Great :)\n. @jp1017 the above method is correct, but I assume your item does not have an identifier set which is required to search if the same is already in the adapter\n. withIdentifier on the item. as shown here:\nhttps://github.com/mikepenz/FastAdapter/blob/8f2c8e37bf81238035cd84989b19b1b5527f7534/app/src/main/java/com/mikepenz/fastadapter/app/dummy/ImageDummyData.java#L17\n. @sumitsahu2207 check out the RadioButton sample which could be the thing you are searching for\n. @sumitsahu2207 do you have this line too: https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SampleActivity.java#L172 ?\n. will be fixed in the next version*\n. @WonderCsabo I will have to take a closer look at all of them. but yeah you may be right. \nI also prepare for the release of 2.1 which will introduce a even smaller core dependency. \nYou may also open a PR to change this?\n. @tengma it depends on what you are going to implement. \nthis sample has a click listener on the checkbox which will trigger the onItemClick event: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/CheckBoxSampleItem.java#L143\nSo in this case it is a bit different. It always really depends on your usecase\n. @siper do you use the latest version of those libraries? If you have fastadapter 2.x but an old version of the MaterialDrawer you will run into problems\n. Your FastAdapter needs to have the parent type of all sub-adapters defined. \nSo if you have a NormalItem and a FooterItem and both implement the IItem interface. the FastAdapter needs to have the type IItem defined, and the FooterAdapter can have FooterItem,  and the ItemAdapter, NormalItem\n. @Demuss you found the issue? \n. ah ok. great :D \n. @stonecold123 if you check the sample, you can see that it initiates the adapter with the function:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java#L58\nAnd the function defines how the items specific for a model are initiated. You can there use any ctor those items provide. \n. @stonecold123 yes as it will re-select after the screen was rotated. and if the items were not yet added to the list it is not able to select this item again for you. \n. @franci22 2.1 will slightly alter this method. So for 2.0 you should have just List without the <Object> in the bindView  method\n. You can always look at the source code for a specific tag: https://github.com/mikepenz/FastAdapter/blob/v2.0.0/app/src/main/java/com/mikepenz/fastadapter/app/items/SimpleItem.java\n. What do you mean? \nhttps://github.com/mikepenz/FastAdapter/blob/v2.0.0/app/src/main/java/com/mikepenz/fastadapter/app/items/SimpleItem.java#L114\n. Do you have a wrong ViewHolder import? not the one defined in the class definition?\n. @franci22 could you just remove the unbind method and use Android Studio to generate the override method for you? I can't see the issue in your sample\n. please answer back. close this for now\n. @akhilps I do not see code which is related to the FastAdapter. @akhilps you did not post the full error log, not the code which is not compiling, nor a detailed description what's going on. Please create a new issue, with proper description, with proper code, otherwise I can't help you. This has nothing to do with the FastAdapter library. Please use Google or StackOverFlow.... This issue has nothing to do with this library.. @hmedat2008 this was deprecated in favor of the new EventHook' s you can find it here in the sample:\nhttps://github.com/mikepenz/FastAdapter/blob/b8467b6c9850f1c2e7c0b42810e455ae9f888dcf/app/src/main/java/com/mikepenz/fastadapter/app/CheckBoxSampleActivity.java#L69\nhttps://github.com/mikepenz/FastAdapter/blob/a060aca5105eda89d02cced1a7da6e20077dba2f/app/src/main/java/com/mikepenz/fastadapter/app/items/CheckBoxSampleItem.java#L143\n. @hmedat2008 the deprecated function will be removed in v2.1 and it is highly recommend to use the new more flexible eventhook system. \n. @rakesh1988 do you have any other events or anything else which might prevent the click event from being forwarded?\n.true-> event was consumedfalse-> event was not consumed\n. @rakesh1988 weird. It seems something is preventing theonClickevent being triggered on theviewHolder'sitemView`\nBasically the FastAdapter has to maintain a OnClickListener on the itemView (once per viewHolder` to allow an efficient handling of these events)\nHow does your Item look like?\n. @AliYusuf95 what do you expect to happen?. @Fuhrmann looks good. thanks\n. @MFlisar in general. please never set listeners inside the bindView method. This method is called many many many times and such operations will just make things slower. \nIn general the best place to attach the listeners is when the viewholders are created. \nTo simplify this, v2.0 comes with the EventHooks \nSo how does it work. In general you implement one of the provided hook's or you can implement a custom one. using a predefined one looks like:\nhttps://github.com/mikepenz/FastAdapter/blob/a060aca5105eda89d02cced1a7da6e20077dba2f/app/src/main/java/com/mikepenz/fastadapter/app/items/ImageItem.java#L211\nAnd afterwards you just need to give the FastAdapter this eventhook. It will automatically handle everything else for you:\nhttps://github.com/mikepenz/FastAdapter/blob/b8467b6c9850f1c2e7c0b42810e455ae9f888dcf/app/src/main/java/com/mikepenz/fastadapter/app/ImageListActivity.java#L80\n. @MFlisar you can reuse the EventHook for different types if you implement the support for it in the onBind here: https://github.com/mikepenz/FastAdapter/blob/a060aca5105eda89d02cced1a7da6e20077dba2f/app/src/main/java/com/mikepenz/fastadapter/app/items/ImageItem.java#L214\nGood idea. \n. Ok great. \nThe \"good idea\" was about this :D\n. @MFlisar just had a deeper look into this topic. \nI think it is not a good idea to have the unbind trigger the EventHook. as unbind is called many many times. The EventHook on the other side is just created once per ViewHolder. The RV does not provide a similar method like onViewHolderDestroyed. \nIt is still the best idea to just implement it in the views unbindView method \n. https://github.com/mikepenz/FastAdapter#4-click-listeners-for-views-inside-your-item. @or-dvir you can define multiple views at once. see the onBindMany you can implement. \nAnd you can also define not only a ClickEventHook but also a TouchEventHook or a CustomEventHook\nAnd yes it is the most efficient, as it will create the listener only once, instead of multiple times. it will also prevent you from passing in the adapter to the ViewHolder and set the listener there. and the cast isn't that expensive as you may think. so basically you would provide an EventHook per action you want to implement. \nThat means you would have for example a ClickEventHook defined for 2 views which will launch an activity\nyou will have an additional ClickEventHook for a view which will like a user. The main idea is to bundle the logic of this into re-useable components\nAnd for the CustomEventHook you would have one per listener. so youc an have one for your spinner, one for your progressBar, ... whatever. \nIn the onEvent you get passed in the view: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/listeners/CustomEventHook.java#L14\nThere you would then just implement your listener you want to attach to that view\nThat has by the way the big advantage of having the ViewHolder & the FastAdapter available, which gives you access to the item \njava\n//we get the adapterPosition from the viewHolder\nint pos = mFastAdapter.getHolderAdapterPosition(viewHolder);\n//make sure the click was done on a valid item\nif (pos != RecyclerView.NO_POSITION) {\n    Item item = mFastAdapter.getItem(pos);\n    ...\n}\n. @or-dvir you can do it as your code sample shows. But the better solution would be to have it's own EventHook per listener. So you can simply re-use it in different items. \nSure it is possible to use one and put everything together, but having multiple makes it easier to re-use and splits apart the different logics. \nAnd the EventHook prevents you from creating the listener for each onBind call. At least that's the thought behind. . It is anyways clever to have the same names for views doing the same. \nIf you do not feel comfortable with all of this. You can do it differently too. You could provide your own BindViewListener and set the listeners there. You can do it inside the ViewHolder but then you have to somehow pass in the Adapter's reference to the item. \nThe FastAdapter does not really limit you from doing anything as you may would do. It just tries to prevent you from doing the \"wrong\" thing. @ncapdevi I have found the issue already. And it is fixed in v2.1 (currently available as snapshot)\nYou can see the changes which were done to fix this here:\nhttps://github.com/mikepenz/FastAdapter/commit/a6a3f2e8a8cf73a019a51147630c78fe82e66c6c\n. @HammadNasir your question is independent of the FastAdapter. Please refer to the official android documentation on what the setAdapter method does. Also the Android project is open source which allows you to check out the source code which will show you what happens with the set method. \n(a small tip on the side. set methods in general replace the value which was there previously. --> you can't have 2 adapters at once)\nIf you want to have all items shown at once. Just use one ItemAdapter and add the elements to it?! \n. https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html#setAdapter(android.support.v7.widget.RecyclerView.Adapter)\n. @Demuss which version are you on? \n. Seems like you have a version missmatch. Do you use also the MaterialDrawer or AboutLibraries?\n. Please read the migration guide. \n2.1.0 requires material drawer 5.8.0\n. @eskandarpour a EventHooks will hook events on views inside your items. In some cases you want to have different stuff to happen when a person clicks on a view. (not the whole item) for exmaple an small image inside a list element. For these cases you will create an Eventhook which you will hook onto this view. This is done once when the viewholder is created the first time. so it is very fast. \nAfterwards it will call this eventhook when the user clicks on the view and you can react on it. @niyasmohaideen please do not use the general notifyAdapterDataSetChanged if you just update items. \nEspecially when working with subitems you should use the specific notify methods to update the subitems. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1672\n. ok great. @gromiloff this is not possible with this flag as it will prevent any additional hirachies of being opened, no matter about the level. \nIn this case you will have to check the selected items count when a new element is opened and perhaps close other parents. \n. https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L882\nmight help. \nOr also this:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/utilities/SubItemUtil.java. @FabianTerhorst perfect. thanks. \nwill wait for travis to finish before merge. looks awesome. thank you so much. @steventxc a WrapAdapter wraps around normal adapters and will not change or being visible for the FastAdapter in general it modifies the positions of the internal adapters and just inflates new items within your list without your main list knowing about those. \nThere is a sample application here: https://github.com/mikepenz/FastAdapter/blob/b8467b6c9850f1c2e7c0b42810e455ae9f888dcf/app/src/main/java/com/mikepenz/fastadapter/app/adapters/SampleWrapAdapter.java\nwhich will add an item at position 10\nThere is also a more complex implementation:\nhttps://github.com/mikepenz/FastAdapter/blob/b8467b6c9850f1c2e7c0b42810e455ae9f888dcf/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/adapters/WrapAdapter.java\nWhich will equaly split up the list you provide accross your main items. . @steventxc you are right. there is a real problem. the click listener inside the FastAdapter does get the real position of the click and not the adjusted persion which is caused by the movage through the wrapadapter. I have to check what would be the best way to improve this behavior. @steventxc oh I remembered how this can be solved. Simply extend the FAstItemAdapter and implement the getHolderAdapterPosition make sure to use the same logic as in the wrapadapter there. \nI have done the following adjustments.\nIn the MyAbstractWrapAdapter\n```java\n@Override\n    public int itemInsertedBeforeCount(int position) {\n        return getItemInsertedBeforeCount(position);\n    }\npublic static int getItemInsertedBeforeCount(int position) {\n    // TODO: 16/11/25  I'm not sure this is the best way\n\n    for (int i = 0; ; i++) {\n        int span = SPAN * (i + 1) + i;\n        if (position < span) {\n\n            Log.e(\"ERROR\", \"\" + i);\n            return i;\n        }\n    }\n}\n\n```\nand I implemented a CustomFastItemAdapter\n```java\npublic class CustomFastItemAdapter extends FastItemAdapter {\n    public static final int SPAN = 10;\n@Override\npublic int getHolderAdapterPosition(RecyclerView.ViewHolder holder) {\n    int pos = super.getHolderAdapterPosition(holder);\n    return pos - MyAbstractWrapAdapter.getItemInsertedBeforeCount(pos);\n}\n\n}\n```. @ontherunvaro this is on the todo for the next update. I hope I will be able to release this weekend. is now possible in v2.1.5. @sumitsahu2207 you have to check in your code that there are not more than one selection. The radioButton itself won't deselect other radiobuttons as they do not know about each other. \nThanks for the sample code, but I would need a whole sample application to test this. . Ok great. . how do you handle the selected state of an icon? do you have it set via a ColorStateList or do you define it in the `onClick? how would you expect to remove the selected icon again when a new icon is clicked?\nIn general the FastAdapter would not call bind if an item is no longer selected, it will just set the state of the item to normal. \nIf you need the bindView call to be done change the mode of the FastAdapter to call the bind method upon a change:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L196\n. Perhaps it is easier if you send me some running code project via email\nwhich I can test and adjust. Just remove project specific code\nsumitsahu2207 notifications@github.com schrieb am Fr., 2. Dez. 2016,\n23:26:\n\nThank you for your reply Mike :)\nI'm not using ColorStateList, instead i was trying with below logic in\nitem bindView using isSelected() method.\nif (isSelected()){\n   viewHolder.mItemBasketSelectedYes.setVisibility(View.VISIBLE);\n    viewHolder.mItemBasketSelectedNo.setVisibility(View.GONE);\n}else {\n      viewHolder.mItemBasketSelectedYes.setVisibility(View.GONE);\n    viewHolder.mItemBasketSelectedNo.setVisibility(View.VISIBLE);\n}\n\nAnd Below Shopping Basket View Click Listener is in Fragment:\n//a custom OnCreateViewHolder listener class which is used to create the viewHolders\n//we define the listener for the imageLovedContainer here for better performance\n//you can also define the listener within the items bindView method but performance is better if you do it like this\nfastAdapterService.withOnCreateViewHolderListener(new FastAdapter.OnCreateViewHolderListener() {\n    @Override\n    public RecyclerView.ViewHolder onPreCreateViewHolder(ViewGroup parent, int viewType) {\n        return fastAdapterService.getTypeInstance(viewType).getViewHolder(parent);\n    }\n\n    @Override\n    public RecyclerView.ViewHolder onPostCreateViewHolder(final RecyclerView.ViewHolder viewHolder) {\n        //we do this for our ServicePackage.ViewHolder\n        if (viewHolder instanceof ServicePackage.ViewHolder) {\n            //if we click on the rl_basket_container (mItemBasketContainer)\n            mClickListenerHelper.listen(viewHolder, ((ServicePackage.ViewHolder) viewHolder).mItemBasketContainer, new ClickListenerHelper.OnClickListener<ServicePackage>() {\n                @Override\n                public void onClick(View v, int position, ServicePackage item) {\n\n\n                        Set<Integer> selections = fastAdapterService.getSelections();\n                        if (!selections.isEmpty()) {\n                            int selectedPosition = selections.iterator().next();\n                            fastAdapterService.deselect();\n\n// ServicePackage servicePackage = (ServicePackage)\nfastAdapterService.getItem(selectedPosition);\n// servicePackage.withPressed(false);\nfastAdapterService.notifyItemChanged(selectedPosition);\n}\nfastAdapterService.select(position);\n// item.withPressed(true);\n// fastAdapterService.notifyItemChanged(position);\n                    mListener.onServiceFragmentClick(item,serviceSubCategoryIndex); //Send back clicked Service Package\n\n\n                }\n                });\n            }\n\n        return viewHolder;\n    }\n});\n\nI've below click listener in item (which is for animating when\nexpands/collapses)\n//we define a clickListener in here so we can directly animate\nfinal private FastAdapter.OnClickListener onClickListener = new FastAdapter.OnClickListener() {\n    @Override\n    public boolean onClick(View v, IAdapter adapter, ServicePackage item, int position) {\n// if(item.mPressed){\n// item.setItemSelected(true);\n// }else {\n// item.setItemSelected(false);\n// }\n// return true;\n    if (item.getSubItems() != null) {\n        if (!item.isExpanded()) {\n\n//\nViewCompat.animate(v.findViewById(R.id.material_drawer_icon)).rotation(180).start();\n} else {\n//\nViewCompat.animate(v.findViewById(R.id.material_drawer_icon)).rotation(0).start();\n}\nreturn mOnClickListener != null ? mOnClickListener.onClick(v, adapter,\nitem, position) : true;\n}\n    return mOnClickListener != null ? mOnClickListener.onClick(v, adapter, item, position) : false;\n\n\n}\n\n};\nI've tried with many combination (using sepearate mPressed fields also for\nbutton press tracking). but it's not working.\nI've noticed that when item expands/collapse view basket view\n'rl_basket_container' listener get called once for 'item' and 'subitem' so\nwhen I tried to use 'mPressed' field it throws 'Cannot Cast Subitem to\nItem' error. As they're of different type.\nIn general, clicking basket icon works until item is not expanded. Since I\nguess, it selects item which changes whole basket icon color selection\nlogic.\nThanks,\nSumit\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/277#issuecomment-264579316,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiHwpiOjJMLD24ERoPI9fahOpM1pmks5rEJsNgaJpZM4K8nuS\n.\n-- \nMike Penz\n\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.io\n. Sent you the fixed source. \nIt was no library issue, just some bad configuration and the requirement that an update is done when selecting / deselecting. \nbeside removing a tiny bit of code and letting the fastadapter do it's magic, correct configuration and enabling: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L196 I did nothing :)\n. I have changed the base branch. and will merge into the base branch so @FabianTerhorst can do the modification. \nThanks @MFlisar for the PR and for the enhancments to it. You might take a look at the changes @FabianTerhorst proposed in the new branch. @MFlisar I think we mixed up Collaborator and Contributor, it's a bit a different role. I have now merged it in a different branch so we can add the suggested edits. @HammadNasir as @FabianTerhorst already mentioned. \nA RecyclerView works on the principle of reusing views. For this they designed the ViewHolder pattern which is basically holding the references of a item inside your RecyclerView. So that means the ViewHolder itself is just created as less times as possible (enough to fill up the screen, and a few additional ones) so when you scroll the RecyclerView will always call bind again, and reuse the existing ViewHolder's so those are not recreated anymore. \nThat's why you shouldn't do this: \nholder.now = System.currentTimeMillis() / 1000;\nholder.startTimeDateInEpochLong = Long.parseLong(holder.startDateTimeInEpoch.getText().toString());\nholder.diff = holder.startTimeDateInEpochLong - holder.now;\nI don't think the ViewHolder needs this information anyway. Keep it in the item. . @HammadNasir if you filter data from the firebase database, you just have to get the data and set the list new. If you want to filter the lists content. Just use the filter provided by the FastAdapter\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SimpleItemListActivity.java#L79. @HammadNasir I am not sure if you read and understood my previous comment. don't store values in your viewholder. just work with values in your items. And then apply the filter using the item's value. \nThe filter method already provides the item you can access. \nit will never work if you have those in the ViewHolder as @FabianTerhorst already mentioned the viewholder is cached and does not exist many times. \nSo for example if you have a list of 10000 items there are perhaps just 20 viewholders which are reused over and over again. \nThis is no library issue so I have to close it. . So if you item looks similar as the one used in this sample app. Do the following:\nRemove these methods:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/expandable/SimpleSubExpandableItem.java#L98\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/expandable/SimpleSubExpandableItem.java#L67\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/expandable/SimpleSubExpandableItem.java#L71\nand also remove this class you don't need it. just keep the logic:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/expandable/SimpleSubExpandableItem.java#L77\nnow there won't be expanding / collapsing on item click. \nSo to get it now if you click on the view. Just move (and adjust the code) to work inside a normal click event hook\nhttps://github.com/mikepenz/FastAdapter#4-click-listeners-for-views-inside-your-item. for the animation to happen you should set a click listener on the view with the arrow via the event hook:\nhttps://github.com/mikepenz/FastAdapter#4-click-listeners-for-views-inside-your-item\nand in there you just check the current state and then you do the animation. (you should be able to use the code from the sample item)\n. how do you add those? in which order? on the main thread?\n. but both are added on the main thread. and you use the methods provided by the adapter?\n. The getFastAdapter().getPreItemCountByOrder(getOrder()) is required as the .add() method asks for the global position. So this is the same everywhere. To then make sure we have the adapter specific \"local\" position we remove the item count prior to this adapter. \nIt shouldn't return -1 though. can you send the sample you tried to reproduce this issue? I would love to fix the root issue of it returning -1 . @victor5171 oh now I see. \nAs of the concept of the fastAdapter it is correct that this does not work. \nThe methods (also mentioned in the javadoc) require you to pass the global position. So this means that if you have an header with 1 item you can only start to add items at position 1 in the second adapter. This decision was made to make sure we have a correct and clear api for all methods, and no jumping. \nYou can use the same helper methods as used internally (if you don't know the count of items in other adapters) \nOr you use this method which directly gives you the correct global position:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L213. @renanferrari it was done so we can always work with the same position, and you do not have to mix between different positions as the fastadapter can only work with the global position. and we anyway have to notify within again with the global position. \nIf you feel uncomfortable with it. You can simply implement the IItemAdapter interface or extend the ItemAdapter and just change the specific methods to work with the relative position ;) . @ncapdevi it is no problem of the FastAdapter \ncould you please check to also set the alpha in the ViewHolder and perhaps also in the unbind method? \nif it is set but not shown. I assume it is some API issue? it is definitely something android specific. sorry. @ncapdevi ok thanks. @ncapdevi writing your own item animator ;) or using provided ones. Or setting the alpha on a different view element instead of the itemView \nAnd no it does not have to do with the FastAdapter the ItemAnimator is from the android system ;) (to be more specific support lib). @ncapdevi you can for exmample use my ItemAnimators lib and have your own DefaultAnimator class written: https://github.com/mikepenz/ItemAnimators/blob/develop/library/src/main/java/com/mikepenz/itemanimators/DefaultAnimator.java which will then for example animate not on the itemView (still not sure which other view you would use. \na different solution for you would be to have one additional layout (would deepen the layout structure)\nor you jsut set the alpha on the texts / views etc which should have it. @schaal thanks :D. @MFlisar it was never added because I saw a bit too much special handling in this functionality. And I didn't expect this to be such a core functionality in some cases. \nIn addition I saw no real usecase of having the same methods of adding, ... as for normal items. \nBut that does not mean other people don't need it too. \nAs of your initial idea of implementing this. \n- For the first point it's true\n- For the second, you will also have to update the subitems count in the map where we remember how many subitems are shown for a specific parent. and you have to check if a specific global position is within a subitem list. I would recommend an additional method of doing this. so not with the normal add method. as it may break things or cause confusion. @IlyaGulya thank you very much. \nHmmm I was referring to the methods name itself filter so true --> filter out. false don't filter out \nBut I see what you mean. I am not sure if it is such a good idea to change this behaviour at this point of the project . @rakesh1988 there is the method onBindMany which allows you to return a list of views which will be reacting to this hook:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/listeners/EventHook.java#L17. exactly. you just define on which views the even hook is bound and then you will get back the event. \nand if you have different eventhooks you just add more to the FastAdapter. @rakesh1988 if those 5 buttons have different actions. yes. . @rakesh1988 as it was not so flexible, and not reuseable. The eventhook can be defined in the item so it can be encapsuled and you clean up the activity. \n. @stonecold123 yes should be possible. In general it is also possible to just use the ActionMode without the helper. no magic behind it ;). @zhangle1 sorry I am not sure about your question. What do you need?. @tilmanginzel @hamdache202 thanks for answering. @hannta if you have different item types you will have to make sure your FastAdapter is typed with the most common type. which will in all cases be at least IItem- \nSo your onClick will then also come with IAdapter<IItem>, and an IItem item. @FabianTerhorst thanks for answering. \n@or-dvir as @FabianTerhorst already pointed out correctly. It just simplifies what you have to write for a very easy setup. the commons library in general provides classes which simplify things. in general the core dependency is capable of doing everything (some thing might just need a few more lines). @or-dvir you can use the javadoc to see which dependency contains what:\nhttp://javadoc.io/doc/com.mikepenz/fastadapter/2.1.5\nhttp://javadoc.io/doc/com.mikepenz/fastadapter-commons/2.1.0\nhttp://javadoc.io/doc/com.mikepenz/fastadapter-extensions/2.1.0. Thank you very much for the detailed descriptions. @rakesh1988 in general that's no task for the adapter. \nYou could create a PlaceHolderItem for your project though, which just has \"match_parent\" as height, and fills up the whole RV with your information. @or-dvir it depends. how did you implement your listeners?. @or-dvir ah I see what you mean.. it was never considered as an issue as it's also the normal behavior of the click listeners. if there is no longlick the single click will trigger. \nit could have bad impact if I change it at this time. After some more thoughts about this, I came to the conclusion that it would be not a good idea to automatically prevent the onClick event from happening, as some devs may want to have their own logic inside the click event.\nYour solution with the longClick listener was the proper fix I think. https://github.com/mikepenz/FastAdapter/issues/344. @eygraber I suggest of using v2.5.x right now. A few cleanup and bigger API changes were already done. So It's better to keep with the 2.x branch until we get to a more feature rich state of v3. It is important that the LayoutManager is set before items are added to the adapter. Also make sure to set the adapter to the RV first. \nother than this it's fine. \nbetter would be if you would know what changes and do not do a clear everytime you get new data. your adpater is bound to the RV?\nthe layout manager was set before?\nthe RV is visible\nthe item is added in the main thread?. @MFlisar yes this is intended. As with the ID based state management we do no longer depend on the position, but will just check the items and their current internal state. (with the position based we always check via the mExpanded map). https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L207. So you mean if the CAB is shown? otherwise you can just get the selected items, which will return your multiple positions if the user selected more than one. @uiiang if you use hte CAB you can check if it is active: https://github.com/mikepenz/FastAdapter/blob/3b5f1af9702762e84cef8e6b9d8abcbf93fd1958/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/ActionModeHelper.java#L69\nOtherwise there is no getter for the isMultiselect field of the fastadapter. @TheMaxCoder @YuriHeupa sorry for the late answer. \nCould you please try the following: \nhttps://github.com/mikepenz/FastAdapter/issues/275#issuecomment-263085653\nThis will make sure the fastAdapter internally will also reference the correct positions, as a wrapAdapter moves all around and may lead to issues like the one above . I close this as there was no more activity since over a month. Please report back to re-open. @seba123neo you can still do this. you can just implement the ClickEventHook as a anonymous class and pass it to the FastAdapter as you would do with any other listener too. @alashow do you set a LayoutManager to the RV? \nWhich version of the support libs do you use? It may be a result from the updates to the RecyclerView rather than the adapter.. @alashow very interesting, shouldn't be an incompatiblity as the fastadapter fullfills the requirements a normal rv adapter has. https://github.com/mikepenz/FastAdapter/blob/b8467b6c9850f1c2e7c0b42810e455ae9f888dcf/app/src/main/java/com/mikepenz/fastadapter/app/IconGridActivity.java#L57. @veeranath for 2 different actions you should just define 2 event hooks. so you will add one eventhook with the like logic, and one with the unlike logic.\nThe bindMany should be used if you have the same logic for these 2 clickable views. @veeranath that's correct now. . @saeedrooyekhat depends on what you are doing inside the onBind method and how long creating one view takes on your side. https://medium.com/google-developers/recyclerview-prefetch-c2f269075710#.26zcdl7jy. @seba123neo which ripple for what?. @HammadNasir the sample contains exactly what you need. It showcases how you can use the Filter to filter out items depending on a specific rule. \nThe FastAdapter provides the interfaces, and the features, the implementation is up to you. \nWe can't help you writing code 1:1. \n\nAs a different note. I understand that it is important for you, but we already guided you into the right direction. This is a open source project, and @Rainer-Lang and me doing this for free, we have regular jobs, we have regular lives, and do this in our free time. There is new year now and we want to spend time with our families and have some vacation, even from open source. Never ask for ETAs, you have not bought a service or anything. I do this for free. Please remember this!. @Ben-Reily are you sure\njava\nexpandableContent = (ConstraintLayout) view.findViewById(R.id.vac_expandable_content);\nexists? \nCan you debug into the ViewHolder constructor and check if it gets set?. @rakesh1988 it is definitely unrelated to the FastAdapter and has to be a implementation issue at some place. \nHave you tried it with a normal LayoutManager already? \nCould it be some butterknife issue? \n. @rakesh1988 seems weird. Some activity behaviour or something. Have you debugged, is it calling all method correctly. Can you try to set the data via a handler?. @rakesh1988 make the RV match_parent \nhttps://github.com/rakesh1988/FastAdapterTester/blob/master/app/src/main/res/layout/activity_rv_holder.xml#L11\nhttp://stackoverflow.com/a/28709795/325479\n. @FabianTerhorst @Rainer-Lang Thank you very much :) \nHappy new year. Thank you both for all the contributions, and for the help running all the open source projects. \nLooking for an awesome open source 2017 \ud83c\udf89 . @saeedrooyekhat the RecyclerView handles and decides how many ViewHolders need to be created, that's nothing the adapter decides. . you have to get more comfortable with the RecyclerView APIs. For prefetching I think there is now a new method in the latsest support libraries which allow you to do this. \nfor the first issue, it sounds like something in your code causes this issue. . do your items have unique identifiers?. caling the bindView method is done by the RecyclerView nothing of the lib. \nYou are sure the elements inside your result.getResult() are correct? . Close for inactivity. Please report back to re-open. just have a footerAdapter wrapped and add the item in there. it will be a normal list item, just make sure you are scrolled down far enough to make it visible. @nimaa77 a FooterAdapter can have as many items as you want to have. \nBasically adapters allow you to define a type. but you can also choose to use it without a type like this: \nnew FooterAdapter() --> which will allow you to add in any item. \nIt is more or less the same as new FooterAdapter<IItem>()\nThere is one important thing to remember. The FastAdapter is managing all items, so it has to have the super class of all the included items. in your case I think it would / should be IItem \nSo after you keep the above in mind, you can handle a FooterAdapter as any normal ItemAdapter and add as many elements as you want to. \nLike in the below sample: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/StickyHeaderSampleActivity.java#L55. @jp1017 please try the lastest support libs 25.1.0. If you can't use those exclude the support libs of the FastAdapter. @aliab as already noted by @Rainer-Lang the sample app shows most cases :D\nPlease have a look in there first. \nYou can by the way provide an unlimited (MAX_INT) number of items (different items) to the fastadapter.. @shymmq seems like you have some issues in your app and in your code. the above described behavior does not exist on any app I implemented both in, nor does anyone else mention this. @shymmq the android system is very very unpredictable if things are not done via the UI thread :D. @aRusenov the FastAdapter is the parent of all subadapters. so the FastAdapter will also get the event of the FooterAdapter just listen in the FastAdapter's click listener and react on the event. @hannta your code already looks really good. As of \"correct way\", I think it always depends on the usecase. But the above should be fine and looks good\nIn addition you might enable pre item fetching (or however this is called) on the recyclerview. so it can efficiently already setup the upcoming items in the RV\n. @dyckster I think you may use some function in your layout which is not supported on API 19. . Checkout this sample activity:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SwipeListActivity.java. @eygraber very interesting work. \nSo your SortedAdapter sorts and then uses the DiffUtil to display the changes? \nThe best would be to have this functionality as it's own component, and just use the FastAdapter class as is. So it would be a util class or so inside the library-extensions module \nSo I assume it would be some API like SortedUtil.sort(FastAdapter, SortFunction) . @eygraber as already mentioned if you wish to add this, please wrapt this into it's own component and just wrap the FastAdapter in it. \nJust open a PR if you still wish to do this. @eygraber I'd prefer that there is a different IItemAdapter implementation (and/or extending AbstractAdapter) for the SortedItemAdapter which you would like to implement. As having an additional ItemList interface would just result in an additional amount of methods, even though the general ItemAdapter can already be extended or the IItemAdapter implemented. @eygraber I think it would be ok to have a custom implementation of the List available for the ModelAdapter I still assume that this might cause issues when you add an item, then the ModelAdapter instantly notifies for that position, but in the same moment that list would re-sort?. @eygraber well doesn't that mean that you will also have to adjust all list related functions from the ModelAdapter and that only allowing a different list implementation is not enough.\nSo basically it would be a completely different IItemAdapter implementation?\nRelated your question of Kotlin policy. The core modules can't contain it, as I still want to support people who can't or don't want to use Kotlin a new additional module though can be in Kotling though\n. v3.1.1 launched with the new IItemList interface :) . with v2.1.7 there is now a new ISwipeable interface which allows you to disable swiping on a per-item basis. @MFlisar sorry for not yet merging this. Is this still ready?\n. @MFlisar thank you. @echthard I am not 100% sure about your question. Do you want to remove an item / modify it in the list? \nOr do you want a click listener on something else than the whole itemView?. @echthard ok I see. It is a question in 2 parts :D\nSo first. Deleting an item is very easy. You just call the remove method on the ItemAdapter which hosts your elements: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L428 this will take care of the notifying for you. \nas for the second part. Basically you have to think of the EventHooks to be normal listeners which you set on a view. But as the RecyclerView is reusing views this had to be solved a bit more clever, so we don't spawn many many unnecessary listeners in the bindView method. And to allow the programmer to have this logic in his activity / fragment I provide the EventHook \nSo for your case you will need to have a CustomEventHook and a ClickEventHook\nAs the sample item's event hooks do not need any reference to the activity they were implemented as static classes inside the item. But you can also have it as anonymous class in the activity.\nSo that's how you provide a eventHook to your FAstAdapter;\nhttps://github.com/mikepenz/FastAdapter/blob/7bc4b381dde839eb230dbaf2c1e4ec61b6579d1c/app/src/main/java/com/mikepenz/fastadapter/app/CheckBoxSampleActivity.java#L69\nAnd the EventHook itself looks like this:\nhttps://github.com/mikepenz/FastAdapter/blob/a060aca5105eda89d02cced1a7da6e20077dba2f/app/src/main/java/com/mikepenz/fastadapter/app/items/CheckBoxSampleItem.java#L143\nIt basically needs to know when it's bound to the view\nand what will happen in onClick\nAs there is no TextWatcherEventHook you will have to use the CustomEventHook class. \nIt basically works the same, you tell it in onBind when he should use the EventHook and in onEvent you have the view in this case which allows you to set the TextWatcher on it. @echthard but some logic will adjust the visibility of this view somewhere. Something must tell the view next time it will be hidden. So there must exist some logic somewhere And this logic should already handle this. There is only a evenHook for UI interaction like, touch, click, longclick. \nEverything else is triggered by something else and you can interact with it at this point.\nSo you wrote there are 3 ways this happens. so you have to write your logic and hook it into those 3 places. \nThere shouldn't be the logic anyways directly inside the Item, as this will cause huge troubles during scroll. You should do this outside the item, outside the adapter. If this is still an issue report back to re-open. @MFlisar I think the normal click listener should be fine already. . that's true though. But it must already go through the events somehow because it should also update the arrow for example. @MFlisar if you wish to improve this behaviour, please open an PR. Close this issue for inactivity. . I am not sure what you mean. As the checkbox in general would be just a flag in your item, you update your item and then notify the drawer about the changed element? . @bfayette it is the same, just use the itemAdapter and add your items. The only important part is, that this happens on the UI Thread as the adapter will notify the RecyclerView. Ok great. Please report back. @AllanWang thanks ;). @ItsAnubhav please see the following section:\nhttps://github.com/mikepenz/FastAdapter/blob/b45d10c0959ccf0b80909eaf6eb527c5bb372e11/README.md#4-click-listeners-for-views-inside-your-item. the SimpleItem has a ColorStateList as background\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SimpleItem.java#L106. I think you mix 2 things. \nitem.withSetSelected() just changes the boolean inside an item. It will not do anything with the adapter. Only if you manually notify it. \nthe deselect() function is done on the FastAdapter itself, so this will handle it. There is also a select() method directly on the adapter, just in case. @stevesea hmmm sounds like some concurrent issue. . @FabianTerhorst the issue seems to be a concurrent issue caused by the ItemFilter, which is the only description why it would be able to set a \"null\" list to the adpater. @stevesea I think that's something I should figure out inside the filter code. . @stevesea have you found what could be the cause? I have a hard time reproducing this. Perhaps you can provide a sample to showcase the issue. awesome. thanks. @stevesea any update?. @stevesea thank you very much for the detailed report. I think this sounds like the FastAdapter itself is less the problem but more the way how it was used / how the items were defined. \nI'll close this for now, and we should keep an eye on this. @frmz this seems to be out of scope of this library. That's a rare usecase of having it already sorting  on lazy fields. You may be able to achieve it with the built in filter already, but I am not sure. \nOtherwise you have to implement this on your own. Perhaps you like to do a PR at some point if you figure it out ;). @or-dvir it may be possible, but I am not really sure, as the provided helper classes are just included to simplify such cases, but are not supposed to do everything which may be possible. \nI suggest you to take a close look on the available Android APIs and check directly with these. It should be independent of the FastAdapter. \nIf you figure it out, you may want to open a PR with a sample for other devs. @tomeroto are you updating the adapter on the UI thread?. @tomeroto possibly this happens because you do the update inside submit and textchange?. could you make sure the loadData() method is executed on the main thread?. @tomeroto that'S weird. as the footeradapter works in all projects including the sample I have. \nas for your sample. There is none, as nothing special on adapter side is required. Just add the items to the adapter via the provided methods. done.. @tomeroto the items and the notify methods are already called internally via the FastAdapteR so you should not have to do this anymore. \nIt's weird as it works for all cases where I use the FastAdapter and I even have multiple sub adapters. Do you have an update for this? \nBy the way bindView is handled and called by the Adapter via the RecyclerView. So if the RecyclerView does not need to re-bind it won't call this method. @tomeroto you could send me the project (remove everything which is cirtical for me to see) via e-mail. And I can have a look on that exact part. \nThe only thing I can say is, if you set the new items to the adapter on the main thread, it will work. If it does not it is not related to the FastAdapter but to some other issue with the RecyclerView, as the adapter only holds the items and notifies the adapter, it is not the component of the RV handling animations, or updating the list. That is all done via the LayoutManater + the Animator which are coordinated from the RV. You have my e-mail? If the zip is too large upload it to google drive or so ans share a link please. ok I'll have a look\n. There are 2 very easy solutions to your problem. Either you add:\njava\nfastItemAdapter.withUseIdDistributor(true);\nor you add:\njava\n@Override\npublic long getIdentifier() {\n        return id;\n}\nto your item. \nWhat happens. For performance reasons the FastAdapter has the setHasStableIds(true) flag set, which will allow the RecyclerView to optimize it's animations. This results in the requirement of the elements inside the adapter to provide an identifier. This can either be done by you if you return the identifier in your item (normaly you would set it with withIdentifier() or you use the IdDistributor. This only is a requirement in cases where we update and modify the items in the RecyclerView . Ok my initial thought was wrong. it was not related to the ID sorry for that. The ID just masked the issue a bit and improved the behaviour. \nThe real issue is that the page size you have set is 10 items. which results in the onLoadMore trigger to fire multiple times very fast. if this combined with the clearing of the list happens (because of fast typing) the RecyclerView will be lost in an unresolveable state. \nThe easiest to fix it, ist just to set a higher page size like 24 items or so:\nhttps://drive.google.com/open?id=0B4Y8HN2BnSjpNjFNVjQyZGg3MkE. @or-dvir you can only (possibly) change the Snackbar style for the whole application (please google this) but not the single one here. If you need this you possibly need to use the code of the UndoHelper and modify it to your needs:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/UndoHelper.java#L66\n. @or-dvir perhaps you would like to open a PR for this :). @or-dvir I would suggest you scroll just up or down depending on the position. \nThe UndoHelper can't do this as it does not know about the RecyclerView so it can't do the scroll for you. . @or-dvir this happens because the filter keeps the list of item inside a temp list. As during filtering the main list is switched out. \nIt may require some more logic to get filtering + allowing to delete / add items. @or-dvir if you are deleting an item and you also currently filtered, you have to use the internal provided methods for adding deleting of the Filter\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L675. @or-dvir are you able to include the source of the library in your project. I have made some chances a while ago which might help here:\nhttps://github.com/mikepenz/FastAdapter/commit/318ded9e29453a190e8f5643bb47358fdc341437. hmmm :/. Did you use the provided methods from the filter instead the ones from the Adapter? . @or-dvir those available on the ItemFilter which is available from the ItemAdapter\n((ItemFilter)itemAdapter.getItemFilter()).*. The RecyclerView can be quite unhappy if different things change items at the same moment. Shit shouldn't be done. \nPerhaps the best is. to reset the filter. remove the item. and reapply the filter?. or you handle the filtering on your side, as it seems you have a special scenario where more logic is required and the default filtering doesn't do everything for you. Please report back to get this reopened :). @Shakezulla57 you can directly interact with the mActionMode. @MFlisar basically it is a thing the developer has to do. If the activity is recreated the I have to assume that the items which come in will also be new (not retained). So all the logic which happens inside the withSavedInstanceState will work. \nI would like to prevent the need of iterating over each item just to set it back. \nHaving to iterate over each item when they are added to the adapter, and expand them if necessary would be very bad in performance and we shouldn't do this :/. It's possibly something for v3: https://github.com/mikepenz/FastAdapter/pull/294 to completely redesign this. \nFor v2. I would say or I would suggest to keep track of this on your own or to reset it on your side. \nThe issue also does not happen if you for example use the GenericItemAdapter where the model is independent of the item. Close as it should get improved in v3. @saeedrooyekhat this is completely handled by the RecyclerView + it's LayoutManager nothing I can do about it. \nYou can have a look on the RecyclerView's API and might want to check out it's feature to define a prefetch amount (or whatever it's called). @cbeyls I just tested your changes. And it looks really really good. \nThank you very much for doing this PR. \nVery impressive. \n. @cbeyls it's fine. 2.1.0 was very stable, so devs can keep using it. \nFor new features they have to update ;) (They should anyways)\nI will have a look at that remaining one. @or-dvir thank you so much! \n@FabianTerhorst I've added the annotations. @judemanutd please have a look on the GenericItemAdapter samples. Basically it will allow you to have your model class, and a different item class used to display your model. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java#L58. Great that you solved you issue. \nYou your own EndlessRecyclerOnScrollListener I can't give support for this one. \nIf you have no more items, just remove the progress item from the adapter. Nothing special required here.. @judemanutd the messages states exactly what's going on. It's unrelated to the FastAdapter too. . just call the thing you are doing inside the scroll callback via a handler, as written in the error message above. Please have a look on the MultiTypeGenericItemActivity\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java#L60. Basically just define a parent class which is true for all your items (if non exists then just use IItem) \nDefine the logic how your model (model's) define your item \njava\nGenericItemAdapter<IconModel, GenericIconItem> itemAdapter = new GenericItemAdapter<>(new Function<IconModel, GenericIconItem>() {\n            @Override\n            public GenericIconItem apply(IconModel o) {\n                if (o instanceof RightIconModel) {\n                    return new RightGenericIconItem(o);\n                } else {\n                    return new GenericIconItem(o);\n                }\n            }\n        });\nAnd then fill the list.. 2 ViewHolders --> 2 Items\nMike Penz\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.eu\nOn Wed, Mar 1, 2017 at 10:14 AM, Jude Fernandes notifications@github.com\nwrote:\n\nIs it possible to have two separate viewholder with different views in\nthem?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/351#issuecomment-283285978,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiPgEvKqiB70qr0CsQlfRNP0f4y-vks5rhTcFgaJpZM4MORH4\n.\n. Non was implemented yet, but it is probably similar to something like the RealmItemAdapter\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions-realm/src/main/java/io/realm/RealmItemAdapter.java. It would be nice if you would like to do a PR if you implement something like this. @k3b I meant if you at any point decide to do a FastAdapter based implementation :). @Shakezulla57 the proguard change you defined seems fine. Proguard just removes something which is needed. So don't worry aobut it. @judemanutd yes the add methods will automatically call the internal notify methods. Just make sure you call these methods on the UI thread. If it happens on any other thread it won't work. \n\nI think the RV has already by default the animator set, but you can define it again and make sure. (Thanks @ankitbatra11 ). @judemanutd have you tried doing it via an handler to make sure doing it via rx is not the problem? \nAndroid is very unpredictable if things were not done on the correct thread (and yes I have seen that you would do it via the mainThread scheduler). @judemanutd you do not have to notify the adapter or anything. The FastAdapter / and it's ItemAdapter already takes care of this. \nSo if you call .add() it will automatically call the correct notify method for this. @ankitbatra11 you can exclude the support libraries via gradle, so it won'T cause issues. \nhttp://stackoverflow.com/a/21765656/325479. @MFlisar thanks. Close as it will be solved in v3. So you have your data already grouped, which means you do not have it as a flat list? \nIf you flatten your list, it would be very easy again, where the flattening logic would create something like:\nList\n   groupitem\n   item\n   item\n   groupitem\n   item\n   item\n   item\n   groupitem\n   item\n   item\nThen you could simply add the items to the FastAdapter and it would just work. @Shakezulla57 you can use as many different items with any adapter you like. You just have to soften the constraint defined via the type you set to the adapter. So basically you can also just create a GenericItemAdapter with the lowest possible type which is GenericAbstractItem (the same is possible for normal items via the IItem interface)\nyes :). @fikr4n oh you are totally right. Would you mind opening a PR to fix this?. I close this issue as it will be completely fixed in v3 and is no real problem in v2. . @chanonly123 then you probably should use the Generic approach. Which splits apart item and model:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java. @judemanutd currently there are not yet v3 builds as it is in development, and things are subject to change. I suggest you either build the dependency from source manually (you will find solutions how to do this on Stackoverflow) Or you include the library as module in your project. Or you just try around the sourcecode with the sample app directly in Android Studio. I will provide alpha builds as soon as we feel it's ready. @AllanWang this is something the adapter can't handle for you, as the adapter itself also does not know when the RecyclerView finished updating it's view. Basically the adapter adds the items to the managed list of items, and will notify the recyclerview (via the adapter's method) about the changed items (added, removed, ...) \nSo then the RecyclerView will kick in, use it's Animator + LayoutManager to draw and display the new items. All of this happens beside the adapter, and is not interacting with it (it just binds the views) \nA quick google showed the following:\nhttp://stackoverflow.com/a/33710606/325479. @or-dvir do you use mSupportSubItems? of the ActionModeHelper?\nCan you please debug the locations where the mActionMode is set to null:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/ActionModeHelper.java#L149\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/ActionModeHelper.java#L156\nand what triggers them?\nThat's the only reason for it to return false. @or-dvir I really wonder what was going on here. I was testing and debugging it myself and was not able to see it. but possibly your use-case just results in this limitation?. Close as it is already part of that PR. @AllanWang the isRecycleable error comes from the RecyclerView the FastAdapter itself nor the IItem interface do not makr the items as recycleable or not. That's all handled by the RV itself. I think that's an issue caused by the animation you use. Please head over there. (you can also try the ItemAnimators library from me, perhaps it is different). Thanks for adding this info :). @or-dvir at which point of time do you check for the selection count?. You can see in this sample that the correct popup (and the correct count) is returned by the methods:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiselectSampleActivity.java#L88\nWith at which point you ask for the count I meant if it's the normal Click listener, or the withOnPreClickListener (which would have not the correct value yet), ... ?. Well stupid me. Makes totally sense. (This only happens for the positionBasedStateManagement):\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1028. What exactly do you mean with sticky? Like the StickyHeaders? \nThis is not possible for normal items. sorry. The sticky headers are not items, but it's an ItemDecoration. @bmarty great :). @YuriHeupa thank you. @urob0ros the MoPubRecyclerAdapter has to be set to the RecyclerView and all other adapters are just it's childs\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MopubAdsActivity.java#L62. ok thanks :). @or-dvir hmmm I am not really sure why the `FindViewById method would return null. \nI use a base ViewHolder in a project and it works without problems. \nWhat layout id is defined for the base/implementing class?. that's weird. \nFor example you can have a loook on SimpleSubItem and SimpleSubExpandableItem where SimpleSubExpandableItem extends SimpleSubItem. Ok. I'll close this now, as I am sure this is possible (as I use it multiple times already). @bachhuberdesign thank you. @MFlisar I would not depend on the adapter for this, as it is not the adapters function to display the element. It just creates the view. But it is no guarantee that it is then displayed already \nI think maybe the RV has listeners or the LayoutManager which give you a better control over this. \nIn addition why don't you simply set the items to the adapter, and then display the tutorial?. @MFlisar simply reset the filter prior to changing the items should solve this. @MFlisar resetting after the list was updated?. Ah ok. for this case it makes sense. In general for the adapter itself it shouldn't be the case. as new data-set should result in a new filtering. so not keeping the filter. Ah ok. :). \nAlways be careful with non-ui threads and wrongly timed method calls :D . @ankitbatra11 sorry for the late answer. \nThe reason for this is, that the selecting of an item will happen in the internal parts of the FastAdapter and not by the ActionModeHelper this results in the need that the ActionModeHelper can't consume an event, as otherwise the item wouldn't be selected / deselected. \nThis changed a bit since v1, that's why the sample still shows wrong information. \nChecking in your onClick if the ActionModeHelper is currently active should already handle most click cases. \njava\nif(actionModeHelper.isActive()) {\n    return false;\n}\nIn addition I have to update the ActionModeHelper and consume the event for the last deselection as in this case the ActionModeHelper would no longer be active (already resulting in a triggered click) which is not good. . This will be fixed in the next rlease by: https://github.com/mikepenz/FastAdapter/commit/2175fedd4e7664e72fc4ea7626c94a92fcc9100e. Fixed in v2.5.2. @marbat87 the withOnlyOneExpandedItem was properly designed for a single level. If you have deeper nesting you may want to do some logic on your side, as handling all those scenario in the lib would make it to huge. And I believe the FastAdapter itself should be as slim as possible.. I have no ETA for it. \nIf you already need it jitpack might work, or building the library from source. @jelther so basically the ItemAdapter provides the Filter functionality built in. For this it has a inner class... the ItemFilter. \nSo after you set a list to the ItemAdapter you are good to go. \nYou just need to define how filtering works based on your items:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SimpleItemListActivity.java#L79\nAfterwards just use the filter method:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SimpleItemListActivity.java#L163\nAs soon as the constraint==null or constraint=\"\" it will reset to the initial/original unfiltered list. \n. @jelther I just tried. It is indeed an issue (also reproduceable) in the sample of v2.5.0. @jelther thanks for reporting. And sorry for the trouble. \nI am already uploading and releasing v2.5.1 with this issue fixed.. @jelther thank you very much. \nI have also re-released v2.5.0 (to limit the reach of this bug) \nThank you very much. \nAs for v2.1.7 vs v2.5.0 there were some changes in the item interface. So you may want to directly use v2.5.0. . please read the Migration steps :D \nhttps://github.com/mikepenz/FastAdapter/releases/tag/v2.5.0\n. The drawer version you use needs to match. https://github.com/mikepenz/MaterialDrawer. The bug is a MaterialScrollBar crash. please refer to this libs doc.. @marbat87 thank you for the report. you may want to open a PR enhancing it's behavior. Thanks. As @FabianTerhorst already noted, this is not related to the FastAdapter library. @dcgavril this case is not provided by the simple drag callback helper class. I think you will make faster progress if you implement this for your special case, by directly using the functions of the support library. \nOr you implement your own implementation of SimpleCallback based on what we provide:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/drag/SimpleDragCallback.java#L65\n. @dcgavril I understand your suggestion. And I totally back it. I just meant that the provided callback is the most simple case. I am more than happy to take a PR to improve this. But some of these helper classes were more meant to provide the most basic functionality for quick access of this, and more advanced cases, with more focus on detail. Is not covered by this Callback, as it would mean we have to implement a various range of configurations. \nIf you want to improve it. I am more than happy to accept your PR though :). @veeranath this is not a FastAdapter related question. Please see the Realm documentation on how to save data. \nAlso I am really sure the nullpointer already tells you what's going on. As usual I updated the support libraries with the update of the library. \nYou can exclude the included support libraries from the FastAdapter \nLike shown here: http://stackoverflow.com/a/21765656/325479. you might also just overwrite it for all:\nconfigurations.all {\n    resolutionStrategy.force \"com.android.support:appcompat-v7:${versions.supportLib}\"\n    resolutionStrategy.force \"com.android.support:cardview-v7:${versions.supportLib}\"\n    resolutionStrategy.force \"com.android.support:recyclerview-v7:${versions.supportLib}\"\n    resolutionStrategy.force \"com.android.support:design:${versions.supportLib}\"\n    resolutionStrategy.force \"com.android.support:percent:${versions.supportLib}\"\n    resolutionStrategy.force \"com.android.support:preference-v14:${versions.supportLib}\"\n    resolutionStrategy.force \"com.android.support:customtabs:${versions.supportLib}\"\n    resolutionStrategy.force \"com.android.support:support-annotations:${versions.supportLib}\"\n}. @engi there is no adapter which directly accesses a cursor. So this doesn't exist yet. It should be possible to implement a CursorAdapter implementing the IAdapter interface, but will require some code. \nIf you want to add such a functionality to the library it will be great.. That's definitely not the case. The Snackbar is recreated no matter of the fact if it's null or not:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/UndoHelper.java#L121. Oh. yes :D Thank you!. @dthib the firebase adapter is very very experimental and was created a long time ago. So it might already be incompatible with the latest firebase version. It is also not mentioned in the README as I do not directly support it anymore. You might get it running, but it may require some changes from your side. If you figure out, I would be happy about a PR though\nI am sorry for this.. See v3 preview. This might help: https://github.com/mikepenz/FastAdapter/blob/0e82274356ce9cb7bc894ac957decd2642f19c95/app/src/main/java/com/mikepenz/fastadapter/app/RealmActivity.java. This will be fixed with v3. @judemanutd in the first place you should already make sure the items are added to the correct position. so you would not run into a sorted issue. if this is not possible. You have to sort it manually before stetting and then possibly applying it with the diffutil of the recyclerview or so. \nThis seems to be no library issue.. @urob0ros I guess the issue with the ads + sticky header is that the StickyHeader goes to the absolute position, which is no longer true when different items were added inbetween (so the ads). \nYou might solve it by modifying the positions the sticky header attaches to, or you just add the ad items inside your drawer manually. and handle the whole combination manually. \n. @urob0ros to be honest, as the sticky header is an external library and the the MopubAdapter too, I do not know. \nI guess it needs some adjustment of the StickyHeaderAdapter, or of the MoPubAdAdapter. \nBasically it is not a FastAdapter issue :D. @urob0ros sure :). @MFlisar the methods require the GLOBAL position. if you have a header then position \"0\" is not in the item list. position 0 is in the header. \nso if you do something on the itemadapter and have a headeradapter you need to make sure the positions you use in the headeradapter are the global positions. The ItemAdapter provides a method to get the proper adjusted position if you need it. https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L213. exactly the AccountHeader is displayed in a HeaderAdapter. The javadoc of the methods mention that you should use the globalPosition . @MFlisar not sure why?\nit is basically an adapter before the itemadapter. that means it shifts the GlobalPosition next per item you add to the adapter before. Basically the FastAdapter allows you to have as many adapters as you want to. Even though in most cases you will just have 1 or 2 or 3 (header item footer). The HeaderAdapter is exactly the same like an ItemAdapter just with a different order value (making it display it's items before the itemadapter)\nJust use the above mentioned method which will return the proper global position if you know the relative position. @judemanutd setNewModel just sets the full new list. \nThere is this util which would work for normal item's: https://github.com/mikepenz/FastAdapter/blob/a0d22ee7a483cbbda46038e04f387f81971666d5/library/src/main/java/com/mikepenz/fastadapter/commons/utils/FastAdapterDiffUtil.java \nIt doesn't work for model's though. \nHow does your diffutil class look like?. How do you dispatchUpdatesTo to the adapter?. Well you should dispatch the items like shown here:\nhttps://github.com/mikepenz/FastAdapter/blob/a0d22ee7a483cbbda46038e04f387f81971666d5/library/src/main/java/com/mikepenz/fastadapter/commons/utils/FastAdapterDiffUtil.java#L78\nby default it does use the notify methods of the RecyclerView.Adapter, which won't allow the FastAdapter to do anything (the notify methods are final, so it's not possible for me to overwrite them) . @xdk78 thanks. well if you started \"selected\" the problem is that the internal \"selection\" state is not set in the FastAdapter.. For faster access to the number of selected items (without iterating the whole list) the FastAdapter keeps track of this for you. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L64\nIf you use the alternative StateManagment this wouldn't be an issue. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L254\njava\nwithPositionBasedStateManagement(false)\n. @AllanWang thanks. @engineers-bojan \"wrapping the adapter clear and add methods in a Handler/Runnable\" is the proper solution as also noted by the error message. Does the crash occur in the sample? If yes please open a PR. Thank you. Please report back. closing for now. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/res/values/styles.xml#L6. @urob0ros thank you very much. I'll test and merge \ud83d\udc4d . @jelther no creation a new object should not be necessary. \nIf I am correct the onResponse from Retrofit is not on the main thread. Please move the code to the main thread and it should be fine.. @jelther it does. But I didn't talk about the request. I just talked about the result. All UI interactions have to happen on the Main Thread! Adding items to a RV adapter and notifying on any thread other than the UI thread will cause problems. . @jelther ah yeah. didn't think of something like this. But the RecyclerView uses the identifier to optimize the display of items, and to speed things up. Great find. \n. @jelther in such cases there is the GenericItemAdapter. It splits up model and item so you do not run into these problems. @avs20 then you can simply use the GenericItemAdapter which allows you to have a model and an item...\nSee a sample in action here: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java. @avs20 it is a little bit different as you have to call getModel() inside your item to access the fields of the model. but in general it's almost the same. \n. model is a simple POJO\nitem is defining how to display that model\nexactly. If your object has a unique ID it's totally fine. You can do this. It's only important that it's unique as it is used for some functions like remembering the position of a selected item, and it's also used by the RV to properly animate and display items. \nIf your implementations are not super slow it's totally fine. Awesome :) Thank you very much. @Alex293 that's not possible. Item's are not sticky. There are possible ways via a custom LayoutManager. But you'd have to write it on your own, or find one supporting this. As @FabianTerhorst just told me. It's possible using for example this one: https://github.com/Doist/RecyclerViewExtensions/blob/master/StickyHeaders/src/main/java/io/doist/recyclerviewext/sticky_headers/StickyHeadersLinearLayoutManager.java. @ncapdevi which is anyways not a good pattern. But no matter of that. You won't be able to use it with any lib which is not correctly implementing bindView (with the payload) \nEither you adjust the code of that lib, or you hook them together manually or so, or you just do the animations on your own. . Well if the items are animated the first time they are shown + if they are switched it makes much more sense. if you overdo it, the scroll behaviour just seems weird, and you waste performance on really fast scrolling. \nBe careful on not overdoing it. I'd say the maximum should be something like the google plus app does. @ncapdevi well I do not make the decision. I just properly implement the adapter, and that animation library doesn't. The PayLoad method should be preferred. not the one without. \nI do not prevent anything. The FastAdapter is a normal adapter implementation. . I didn't say it's deprecated. The thing is that the method with the Payload should be used. If you see the code it is basically just calling the other method without payload. As the FastAdapter has a main focus on preventing misbehaviour + misuse of the APIs it directly uses the proper method with the Payload. \nYou can simply extend the FastAdapter and just call that method. nothing is preventing you from extending it. The source code is open. \nI am just saying that the method with Payload should be used. In addition this was necessary as other libs would cause circular calls of the onBindViewHolder method.... The method with payload is always called. See the RV implementation. The\none without is just called by the one with payload.\nThe FastAdapter is open source and you can at any time extend and overwrite\nanything you need.\nOn Thu, 11 May 2017, 22:48 Nic Capdevila, notifications@github.com wrote:\n\nI just am not sure where the logic come from it being the one that \"should\nbe used\" or that is the \"proper method\" there's nothing in the android\ndocumentation that indicates that. It's just a newer, additional method.\nIt's not legacy. If you look at the actual support library code, all of the\nlogic resides in the void bindViewHolder(VH holder, int position) method.\nSo to say that use of that method is not proper or shouldn't be used, seems\nodd to me. I'm just not sure where you're getting any evidence from that at\nall, other than that it's a new, additional method. Either way, this issue\nis easily solved by using the .withLegacyBindViewMode(true) method being\nused on the adapter. But again, it's not a legacy function, payload isn't\nthere as a replacement, it's there in addition to it. the method without\nthe payload will ALWAYS be called, where as the one with the payload will\nonly be called if specifically mentioned. It seems like if the goal is to\nminimize misbehavior, you'd want to use the method that is always\ncalled as well. But like I said, it's easily fixed with a method to allow\nthat method to be performed, so it's a non-issue. I'm just not following\nthe logic. Don't mean to take up all your time with it.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/414#issuecomment-300912534,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiOIIEyYEms33r8X23ImNErghyyeBks5r43QRgaJpZM4NYbk4\n.\n-- \nMike Penz\n\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.io\n. @anton-khansa this is nothing the Adapter normally handles. In general empty views are separate views which are shown instead the RecyclerView. \nIt is possible though to have an item which is displayed full height, and you can re-use it accross your app. Just create an item with a layout having \"match_parent\" as height. @ligol oh yes you are right. please open a PR. thank you. @ligol thank you very much. @MFlisar in your case you want to go with the CustomEventHook. The core only comes with a few pre-provided event hooks to keep it slim. So Click, LongClick, Touch. \nIf you want to have a custom event being bound properly to the Item's View. you should use the CustomEventHook  and  implement the onEvent method. \nIn onEvent you get the RecyclerView and set the listener to that view. That's only done once during ViewHolder creation. So the FastAdapter takes care of this. \nIf you need access to the item within the event you define you'll then need to check what is already done automatically for the Click EventHook for example:\njava\n//we get the adapterPosition from the viewHolder\nint pos = fastAdapter.getHolderAdapterPosition(viewHolder);\n//make sure the click was done on a valid item\nif (pos != RecyclerView.NO_POSITION) {\n    fastAdapter.getItem(pos); //this will give you the proper item at the current position\n}. I guess I can close this, as the documentation is added with this PR: https://github.com/mikepenz/FastAdapter/pull/425/files. I guess you should always check for the NO_POSITION as soon as you access the getAdapterPosition, as it might return it. @LadwaAditya you'd have to implement this on your own. The provided SimpleDragCallback is like @FabianTerhorst already pointed out using the default list behaviour. \nAs far as I remember someone else already opened an issue similar to this, to only notify the RV about the position change after the item is dropped. you'd need to do something similar and then switch the 2 items.. @EladKeyshawn you do not have to use the ActionModeHelper if it does not work as you expect. It's just a small helper to simplify things, but it is in no way necessary to implement a contextual actionbar. @or-dvir so I see a few things which might lower performance. Setting the LayoutParams each time might result in an additional measure pass which makes things slower. So if you can avoid that it would be good. \nIn general setting the textSize or textColor shouldn't do too much harm if it stays the same as I guess the TV already optimizes it. I am just a bit surprised that you manually set small, medium or large. Just set a specific textSize using \"sp\" and you are fine. The user can anyways define in the phone settings how large he want the text to be displayed. It shouldn't be a app setting. \nregarding the adapter. As you are not able to prevent setting the adapter, i'd still suggest that you look into the prefetching of items in the RV. (That's not adapter related):\nLinearLayoutManager.setInitialPrefetchItemCount(N)\n(Search for it in the changelog and read more in their docu: https://developer.android.com/topic/libraries/support-library/revisions.html). About the text size. The Material Design Guidelines define exact values to use. Those should be used through all apps, so in fact the user most likely adjusted the text size in the past on his phone. But that was just a suggestion, if you think it gives some advantage its fine. \nRegarding the link I posted. Yes it refers to RecyclerView, but pre-loading next items ahead of time should also improve scrolling for other types which need to display a list. and are a bit more expensive. \nAs of the usage of it, please refer to the docs as it is not related to the adapter. \nWell That are all things I can directly mention. I don't think you have many other options. Possibly using something else than a spinner. Or checking directly what people suggest how to use a spinner in a recyclerView. That are basically all non FastAdapter related issues, as it is a general problem then. . @baadillahnabil glad that you figured out with the help of @or-dvir . \nIn general the code + the APIs + the javaDoc + annotations make the whole library very self describing. So using the code + reading the code + looking at the JavaDoc should be quite obvious. \nI know the documentation is not written for beginners, but with a bit of experience in Java programming it should be fine.\nIn any case. as @Rainer-Lang pointed out, you can at any point check out the sample application which shows full working samples how to use the FastAdapter. . the null info might not be true anymore.\nBut the event was not consumed, that's why nothing is returned. \nDo you have any problems because of this?. @MFlisar well there was a reason for the change, as it was preventing a special use-case. I think it had something to do with selecting the first time and/or the last time. . Just looked in the changes :D I have no idea to be honest. These lines were last changed by you :P. \n. @gaspar1423 you can use whatever lib you want, as long as it does not require to extend the adapter.\nBasically the FastAdapter is very open and flexible, so it allows almost any lib to be used in addition. The only limitation is that extending is not possible, if the lib provides an interface or similar it will work to extend the FastAdapter and implement that interface. @rosenpin by default the selection state is only handled via the view's selection state. That means the onBind method is not called, and only the states of ColorStateLists, ... are updated as the state of the view changes. \nIn your case you can either define the color of the text via a colorStateList, or you tell the FastAdapter that it should call the notifyItemChanged method when a deselection happens:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L47\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L198\n. @rosenpin I don't think you did understand what I answered. \nIn general only the state is set from setSelected(true) to setSelected(false) so only ColorStateLists, or StateListDrawables are changed. \nIn your case you depend on the onBind method being called again. \nYou can do this by simply setting:\nfastItemAdapter.withSelectWithItemUpdate(true);\nto true. @rosenpin it is very flexible. Don't know what you mean. The fastAdapter even gives you the choice. . These methods are called by the RecyclerView \nIt is not really clever to have some runnables running within a viewholder, as it is reused all the time while scrolling. \n. Well but even in this situation there should be no runnable or handler within the view, the problem is that you can't just handle the scrolling which will result in many open handlers / runnables. \nThe way how this should be done is by using the notify method. \nThere is the way to notify the adapter about changes, providing a payload, that payload can be anything, like the value which you want to display. So the updating and so on happens outside the list, and you notify the items about the change of their view. And I suppose those progressbars all should be at a different value, if they are all equal re-consider the design of having it displayed only once ;)\n(beside that as it seems you do a 2FA app, you know authy?) . https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#notifyItemChanged(int, java.lang.Object)\notherwise you can possibly check: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/IItem.java#L145\nother than this I guess you should use the payload variant, as it is the safest. the adapter itself won't notify all items at the stop of your activity (as far as I know). you need the position...\njava\n//we get the adapterPosition from the viewHolder\n                    int pos = mFastAdapter.getHolderAdapterPosition(viewHolder);\n                    //make sure the click was done on a valid item\n                    if (pos != RecyclerView.NO_POSITION) {\n                        //do whatever you need to do in here :)\n                    }\n. You can disable the animation either by setting the animator to null, or by setting the animation duration very low. (the coresponding methods are used here: https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SampleActivity.java#L163)\nThat's a RecyclerView functionality, and not a FastAdapter thing. \n. @surindersinghbindra as mentioned the adapter does not handle the animations, that's done by the RecyclerView's ItemAnimator. And it also does not handle decorations. That's done by an ItemDecoration. \nPlease refer to the corresponding docs. \nIn addition. If you item uses a AnimatedStateListDrawable or so, it's your item which animates the background :D. @gpulido have you found out what the right logic would be?. Don't worry :) Was just curious. @gpulido I have adjusted the code of the HeaderHelper can you please try if it is now working fine for you?\nhttps://github.com/mikepenz/FastAdapter/commit/f9e8b4f828bf92616f0344c0066b8e8d57945c3b. in v2.6.0. Sadly I can't give you and ETA yet. . @frmz the FastAdapter can not automatically check if some field on the item changed. The Adapter always needs to be notified about changes. \nwell it is always a bit tricky in that case. You can look at the current filter implementation:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L488\nYou might want to implement your own filter, more optimised for your case. A different option would also be (depending on your list length) to just supply the new list with the new amount of items and notify the adapter (you might even use the diff-util for that). It's not a bug, it's just how this specific thing was thought to work.\nWell the chosen behaviour of setting a new list in the adapter will also reset the filter as this is the most common use-case. \nIf you have a different use-case you could like I said just filter outside without using the constraint provided. You can also overwrite any of these methods from the ItemAdapter and change it's behaviours. . @frmz if you can think of a short solution to achieve this. I am always more than happy to see a pull request from people \ud83d\ude04 \nthank you very much :). You are welcome. . I have added this functionality to the setNewList method with a new param. \nYou can test this using the preview release of v2.6.0-SNAPSHOT. well then I suppose it just needs to be replaced with:\ngetItemFilter().publishResults(filter, getItemFilter().performFiltering(filter));\nThat would do everything synchron. ;). How do you add the ProgressItem? \nHow do you start the animation, please provide some more code. @noam2 I think AnimatedDrawables are quite expensive, and using it in the RV when bindView may be called many times it could slow down things. if you do not use an `AnimatedDrawable you do not have any problems at all right?\nyou might also stop the animation when the item is unbound. . it's not really related to this library. That's a general AnimatedDrawable displaying. Have you looked on StackOverflow or so if anyone else has problems with displaying an animation like this in the RV? \nHow does the animation look like? 15 different images? perhaps the single frames are too huge. @noam2 well sorry I can't really help with that. The RecyclerView itself is displaying the element, the FastAdapter is only the adapter providing the calls to bind the data. not more. \nClosing this now as it is something the adapter can't change or handle. \nThe FastAdapter provides all the methods a normal RecyclerView.Adapter would provide so of the core logic it's the same. \nSorry that we were not able to solve your issue. \nI guess it is a good idea to check if other people had similar issues with such an animation in a RecyclerView. \n(The RV is base android, nothing is handled here from the adapter). @gpulido isn't the MultiSelect Sample more or less what you need? Long click starts the CAB and then you can select. \nThe only thing you have to add is the fact that also a single click on the \"icon\" starts the selection. \nBasically you would just select your item and then call that: https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/ActionModeHelper.java#L142. @gpulido well the helper is in theory designed to automatically handle it in the longClick. So as mentioned in my previous message. You have to select that item in the onClick. and afterwards you call that method I linked you to. \nIf I'm not wrong the selection listener is called so you should be able to notify the adapter about the changed element there. Pass a payload so you know that you just have to change the icon. @gpulido you never access the view directly in a RV. You never do that :D\nYou will adjust the item, (if needed) and then you call the notifyAdapterItemSetChanged (hopefully I did not write the name wrong) with a payload which is then calling the bindView with that payload. So you can react at that place. Glad you made it work :). \nAs mentioned. Have a look on notifying + a payload as you can just update the specific view :) . @gromiloff that's true there is currently no callback for the clear:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L509\nYou might react at the point where you pass in the constraint on your side. At least for now. It would definitely make sense to have an additional callback for the reset/clear event. \n. This will be provided in the upcoming release. v2.6.0\nhttps://github.com/mikepenz/FastAdapter/commit/7314d50e53ba19df54a1dc576b0f0e628ee02000. You can test this using the preview release of v2.6.0-SNAPSHOT. You are welcome :). @MFlisar no this will not be supported as this is a really bad implementation and should not be done. \nThere should always be 1 item -> mapping to exactly 1 identifier. And this should never be changed dynamically. Please open a PR.. tested with the normal list, there it worked. Thanks. @FabianTerhorst as the realm extension is no longer (at least for now) part. I'll close this. Remaining TODO's\n- [x] Id's negative\n- [x] IdDistributor false by default\n- [x] delete setModel\n- [x] change filter behaviour. @gpulido sounds like a possible solution. \nIn the end you probably would have 3 items. one is groupBeginItem, groupCenterItem, groupEndItem or so. And in the best case you use a GenericItemAdapter to define which model get's which type. (You can have some logic in there to get the groups correct, so you do not have to use the HeaderHelper which basically will just add an item inbetween) \nIf you use the HeaderHelper you might have a HeaderItem which combines start and end of the cards somehow.... @gpulido currently I think it's not necessary to add this to the lib itself. But thanks for providing the code which works for you, I have marked the question s \"Good to know\" \nIf you find time it would be awesome if you'd add a small sample using your code to the sample application :) . @surindersinghbindra I don't see a point why this shouldn't be possible. Have you tried it already?. You should either use a FastItemAdapter or a FastAdapter and an ItemAdapter. you can't have a  FastItemAdapter + another ItemAdapter at the same time. \nas for the order. yes. the StickyHeaderAdapter is the outside one. The sample shows this:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/StickyHeaderSampleActivity.java#L65\n(The Sticky header is an external library, and just included in the sample to show compatiblity). @or-dvir I made the experience that using post on a view in some cases does not call the runnable. Please use a handler for example which run's on the UIThread or runOnUIThread of the Activity . @or-dvir that's why you should have either using the runOnUi thing of the activity or a handler which is posting to the activity. \nsomething like that. and you can reuse that handler for other cases too\n```java\nHandler mainHandler;\npublic Handler getMainHandler() {\n    if(mainHandler == null) {\n        mainHandler = new Handler(Looper.getMainLooper());\n    }\n    return mainHandler;\n}\n\n```. oh by the way. you are adding a progressbar in the code sample :D only now that I realized that. \nwouldn't you want to just clear?. mFooterAdapter.clear removes the element\nbut the line below you directly add it again with mFooterAdapter.add(new ProgressItem().withEnabled(false));. @baadillahnabil what's the height of the RecyclerView inside the NestedScrollView? . @baadillahnabil have you already debugged into it, because I assume that due to the nature of that setup (RV inside a ScrollView, and no defined height) causes that problem. \nAnd if that's the case it's not the FastAdapter's fault, as the FastAdapter library itself is just the adapter. \nCan you please provide a sample application which showcases the issue, perhaps this helps a bit better to investigate the issue. @CodyEngel thank you very much for the report. \nThanks for the very detailed report. I'll also have a look into this sometimes this or next week. \nSomething possibly interesting. The positionBasedStateManagement will be removed in v3, and there will only be the newer approach. (This allows me to remove code base related to the old original approach) \nI am a little bit surprised that the issue only happens for the new approach. \nI'll report back if I found something. . @CodyEngel the +1 fixed it :D \nI have released v1.6.2 with that fix :) thanks you very much. @AllanWang well the layoutRes might be unique, but there is a possibility that you may re-use it. in addition it's no \"identifier\". \nYou can use it, and it will be fine for most cases, but I just wanted to make it clear that there is a difference. \n. Thanks. this will be solved in a future release of the app. @JiminKim2036 very great finding. \nYes that should work, and as far as I can find of, this shouldn't cause any side-effects. \n. This will be included in the next release. @hendrawd as noted the StickyHeadeR is a external library. I do not think they have support currently for grids. . And yes it is possible to combine the two. Ok great :). @or-dvir the loadmorelistener basically checks when a specific threshold is reached if there is the need to call the listener, this happens for example if new items were added, if there are no new item's added this condition will never fire again, as the set did not change, --> there won't be new items. \nThe check is here: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/scroll/EndlessRecyclerOnScrollListener.java#L117\nThe existing EndlessRecyclerOnScrollListener can not achieve what you need, and you will have to adjust it for your needs. . @or-dvir well I don't think one of those 2 options are the best, I think you could just extend the listener and add a method which is called in case the items didn't change. @or-dvir ok great. You can come back to this topic later. As far as I can tell it's no general issue of the FastAdapter, but more or less an implementation detail for your usecase. @noam2 well the filter only always works on a ItemAdapter the StickyAdapter is an external library basically, and the FastAdapter is managing the adapters defined (so all adapters implementing the IAdapter interface). @gpulido you can use the DiffUtil but it depends on your item, and is something the FastAdapter shouldn't depend on. You can try the DiffUtilHelper or how I called that class from the extensions. \nThe set does by the way notifications, but only on section basis and not on per item basis. \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L257\n. @Abdurrahmanjun well the Filter class I depend on (which is from Android) provides only one method, which allows you to pass in a CharSequence \nFor your case, you can either use the provided one, or you just use your own one. Basically it does not matter. \nIf you want to use the provided one, simply pass in all your values seperated with a delimiter and split it apart. \nSo you could pass in sortname;fullname;mothername and filter all of them. . @Abdurrahmanjun you have to split apart the string again, and apply it. It was just a proposed solution so you can pass in multiple fields :D \nYou are anyways writing the filter code, so if you know how the constraint which is passed in, is structured your can also split it apart again, and do whatever you have to do to properly filter. \n. @rakshithsj30 you just create 2 fastAdapter's. \nThere's nothing special about it. . @ncapdevi basically the FastAdapter makes the methods normally called from the RecyclerView.Adapter accessible in the item. \nI suggest you directly check out the lifecycle of the RecyclerView.Adapter . - bindViewHolder (bindView)\nhttps://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#bindViewHolder(VH, int)\nhttps://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#onBindViewHolder(VH, int, java.util.List)\n\nonViewRecycled (unbindView)\nhttps://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#onViewRecycled(VH)\n\n...\n. @noam2 not 100% sure about the case. but the FastAdapter has all methods like select(), deselect(), ... and those have to be used, just changing the selection on the item itself won't work properly. @nizamsp oh yes you are right. Thank you very much. . @AlexTip without taking to much time first regarding the other questions. \nWHY do you need to do this: I create own adapter \"OwnAdapterType1\" witch extends ItemAdapter and ovverides onBindViewHolder methods. @AlexTip but you should not do this by overwriting the onBindViewHolder method. That is definitely the wrong approach. \nIf you want to update an item at a later time, you should change the object, (set the values) and notify the FastAdapter that the items were changed. \nWell WrapAdapters have to be the outer ones, so this one. (basically that's not really FastAdapter specific, as the WrapAdapter were just added to simplify, but yeah :D)\nand then for the normal ItemAdapter's here the wrapping does not matter, as theordervalue which is defined within theItemAdapterandHeadeAdapteranyways defines their order ;). @AlexTip I am just saying that the proper approach is to handle thebindView` inside the item, and if data changes you notify the adapter. \nYou can do what you did, but it seems just not the best approach. @AlexTip the FastAdapter is set on the itemView as tag: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L605. @AllanWang the problem is that the Order of all the HeaderAdapter's is the same, which results in just one HeaderAdapter being known by the FastAdapter .\nExtend the HeaderAdapter and make the Order configurable, something like this:\n```java\npublic class CustomItemAdapter extends ItemAdapter {\npublic CustomItemAdapter(int order) {\n    this.order = order;\n}\n\nprivate int order;\n\npublic CustomItemAdapter<Item> Order(int order) {\n    this.order = order;\n    return this;\n}\n\n@Override\npublic int getOrder() {\n    return order;\n}\n\n}\n``` \nI am sorry that this is not mentioned in the README. It will be solved in v3, as I'll eliminate the order definition. @veeranath  I suppose you do not add the header on the UI thread. what is repeated?. @AllanWang thanks for answering. make the gridview not clickable, remove the click listeners. @ssppgit well sadly the item itself has not much control about the views inside, if it catches the click the item can't do anything. \nin the worst case you can just pass on the click to the parent, within the item, or manually moving on the click. :/ or attaching a \nEventHook as (a click listener on a specific view). Thank you very much :)\nGreat to hear that it's solved. @judemanutd I do not see any code on how you set the adapter, how you wrap the ItemAdapter for the FastAdapter, .... https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/AbstractAdapter.java#L244\nThe crash only happens if you use an adapter which was not wrapped. please make sure that this was done. \n. @or-dvir well there is no clear use this, or use the other definition. If you can handle and order all items within one adapter, go this route. If you need to specifically handle them in different adapters, use multiple. \nIn any case. You can always use the FastAdapter without a specific type by just using it as FastAdapter and not FastAdapter<Type>. Basically the biggest advantage of having type specific ItemAdapters is, that you will have type safety for this specific ItemAdapter this is not true for the FastAdapter though as it needs to have the parent type defined. In the worst case this is simply IItem so you'd have FastAdapter<IItem>. \nYour approach is definitely correct and working. And as long as you do not need to have any diversion of the item (and you can handle this on your own) then it is totally fine. . @FabianTerhorst thanks for answering. @jelther which exception. sounds like it's an issue on your side, and not on FastAdapter side. \n. Very interesting. Thanks for letting me know. \nRegards,\n. Yes it runs in a seperate thread. That's how Android has implement the\nItemFitler class.\nThe reason for this is that filtering is with a high chance a long running\ntask. so it should not block the UI\nMike Penz\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.eu\nOn Thu, Jul 6, 2017 at 7:26 PM, Jelther Gon\u00e7alves notifications@github.com\nwrote:\n\n@mikepenz https://github.com/mikepenz , I got the \"error\" now:\nI'm trying to update a View (a simple TextView) inside onReset at\nItemFilterListener and the error is the folowing:\nandroid.view.ViewRootImpl$CalledFromWrongThreadException: Only the\noriginal thread that created a view hierarchy can touch its views.\nDoes this method runs in a separated thread? What's it purpose?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/469#issuecomment-313463809,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiNE238pdVTuFjPMjg_jdUcCoOW0Fks5sLRjSgaJpZM4OMsvD\n.\n. post it on a handler which has the UI thread\noruse runOnUiThread from the activity\n\nMike Penz\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.eu\nOn Thu, Jul 6, 2017 at 7:35 PM, Jelther Gon\u00e7alves notifications@github.com\nwrote:\n\n@mikepenz https://github.com/mikepenz , okay.\nI'll try to find other approach to manage the UI. Do you have any tip?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/469#issuecomment-313466225,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiIrITflf-WO--l2fOnA4yKBhmrEwks5sLRrugaJpZM4OMsvD\n.\n. @sosite which animation would you use?. Hmm that's really weird. \n\nIf you try the AdvancedSampleActivity you will see that animations are stilll working in it:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/AdvancedSampleActivity.java. Any updates Did you check the sample? \nPlease report back. closing for now. You closed this again?. @TimVelo can you please also create a sample which uses this helper?. @TimVelo thank you very much for this PR :)\nYou can just add commits to your branch, they will be added automatically to the PR. @TimVelo yeah take your time :). Thank you very much. @TimVelo yes please. @TimVelo did the info from the e-mail help you?. @TimVelo did you have time to check it out? . @TimVelo sorry to hear that. I hope you can resolve the problems. \n. @TimVelo I close this PR now as it misses most of your additional changes. \nIt would be really nice (as soon as your computer issues are resolved) that you redo your changes on v3 and open the PR against v3. \nAs there will most likely be no more v2.x release. Closing this as the PR only contains the manifest change. Well I basically always used the auto site generator for the gh-pages. I did not really invest any time at all in this as there is the main github page already available anyways :). @AllanWang I never used this before. Anything else required to set this up?. yeah. this will happen as soon as I do a new release, right now I'll temporarily keep the README alone :D. @narun2001 thank you. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeGenericItemActivity.java#L58. The sent link is exactly what you need. \n1 Model class. \nMany Item classes .. Seems to work for me. \nAndroid Studio 3.0.0 Canary 8\nSupport libs 26.x\nBuild Tools 26\nTarget 26\nCompile 26\n.... @AllanWang well you can also enable that the FastAdapter updates automatically and calls onBind again\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L249\nBut your solution is as good. @bernaferrari well I guess the problem in this case is that (I think) you assume the FastAdapter could automatically update the list as soon as you add items to the colorList that's not the case. \nThe FastAdatper's ItemAdapter keeps it's own list internal to hold the references to the items, and you have to call add, remove, set, ... on the ItemAdapter so that everything can be notified correctly. \nSee the code for add: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L344\n. @bernaferrari I do not use Firebase, but I'd guess something with the timing, or the amount of the callbacks might confuse the RecyclerView or its RecyclerView.Adapter. But honestly I don't know. \nYou might want to also try to not use the same list for everything. Just add the single items directly to the adapter in the onDataChange instead of going via the colorsList. Awesome :) . @Rainer-Lang, @tehfonsi, @sosite. @sosite it did not work in previous versions because ItemAdapter's had a fixed order --> a second itemAdapter is ignored as the order was already taken. This is no longer the case with v3.\nI am not yet sure why you need multiple adapters in your case?. @sosite do those \"header\" (divider,... whatever you want to call those section headers :D) allow collapsing? \nBecause if not there is a small helper class which would combine items into groups and add a header in front of them:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/HeaderHelper.java. yeah I know that I could simplify it like that. :D I always prefer the \"longer\" style to keep it easy for devs who are not used to this notation :P\nManagement of additional type of class? \nthe HeaderHelper keeps everything flat within one ItemAdapter and just adds a header before the items . @sosite ah ok I understand. ;). \nI am currently thinking of providing the \"clever\" ViewHolder like you do too. But I'd like this without really breaking current APIs. @sosite v3 is NonNull by default. So lint will inform you that this is wrong. yes: https://github.com/mikepenz/FastAdapter/blob/feature/v3_new/library-core/src/main/java/com/mikepenz/fastadapter/items/package-info.java. So perhaps a bit more info to the previous message. \nWith v3 we use the jsr findbugs bundle to make everything nonNull by default: https://github.com/mikepenz/FastAdapter/pull/485/files . @sagrawal2002 that's nothing related to the adapter. orientation etc is controlled by the LayoutManager. @sir-gawain you had similar issues with v2?. closing this as v3 will soon reach stable ;). @Rajeshr34 the EventHook API won't work for you in this case. \nOne of the big advantages (and performance improvements) of the EventHooks is, that those are just bound ONCE (per ViewHolder) during ViewHolder creation. \nthe onBind of the EventHook won't be called afterwards. \nSo as I assume that you can't have those view's available during ViewHolder creation (which would be the most performant way to do it) you will have to bind the Listener in the bindView method (which is really bad, remember that this method is called many times). @FabianTerhorst hmmm or should it probably into the commons?. @noam2 you can still attach a normal mOnClickListener to the adapter and listen for the event when a user expanded (so clicked on the parent) item. And youc an then do whatever is necessary. @noam2 well do you collapse using the correct thread? what and how do you do it? You can check the sample app, there it works (for example for the IconGrid sample). That's the activity visible int he Sample app: https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/IconGridActivity.java\ncontaining a collapse open / close animation. @noam2 you mean you want to notify if a sub item is added? \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1817. Closing for now. Please report back. @sosite thank you very much, we will have a look into it. \n. Ok the crash is happening because you use the relative position (so \"0\" is relative to the secondAdapter) As the javadoc already writes. This method expects the global position to be used. \njava\nsecondAdapter.remove(secondAdapter.getGlobalPosition(0));\nadapter's come with a handy helper to give you the globalPosition. @bb1690 please write a proper issue report. \nWhat are you doing. \nWhat is happening. \nWhat do you expect to happen. \nWhich code are you using. \nWhich version of the library are you using.. @henengel https://developer.android.com/studio/preview/index.html\nIf that'S no option for you, you can modify all the stuff localy to be compatible again with the old toolings. \nBut the source itself is supposed to be only AS 3 compatible. 1) well I use Android Studio 3.0 for all my development, and it only makes sense to use the same tooling for my libs too then. in addition it does not prevent people to use the built *.aar, so just include the maven dependency and you are fine, it does not matter which version you use \n2) well not really. you'll probably have to compare with older projects. or do it with knowledge. \n3) reading reading reading, trying trying trying, coffee :D, keep trying and keep going, keep learning. never stop. \nAndroid Studio 3 will be soon final and it has huge advantages like a improved build setup, better profilers, faster, support for all the new stuff from Android. See the Android sites for this please. You are welcome ;) . Let's say you have 3 adapters. \n\nadapters (10 items)\nadapters (10 items)\nadapters (10 items)\n\nSo if you then use the adapter 2 and get it's second item, you will say. adapter.get(1). In this case you will use the relative position. (Position relative to this adapters list) \nBut If you use the FastAdapter it will give you possibility to access any item from any adapter. \nSo if you say give me the item at position 5 (that's the global position) it will return the item with position 5 from adapter 1 (as adapter 1 has 10 items)\nIf you want the 15th (global position) item (you can do this as the fastadapter can access all 30 items) then it will give you the 5th (which would be the relative position seen for adapter 2) of adapter 2. . exactly :) . @or-dvir that's very interesting. Can you reproduce this with the sample?. @or-dvir any new updates?. @or-dvir thanks for reporting back with such a detailed report. \nI think it may be really a result out of foreground vs background. \nI am 99.9999% sure it is not an FastAdapter issue but rather a problem of the RV and how it handles such a CardView view. @judemanutd the first code will not work if:\nyour item is not clickable\nyour item is not enabled\nyou consume the click event somewhere else\nyour view has clickable false somewhere\nsome other listener consumes the click event\nsome view is above your recyclerview and consomes the event. @judemanutd I do not know the code of the material-dialogs. if this one applies it's own click logic, or listeners then it might overwrite and prevent any listeners of the FastAdapter \ntry your adapter code and item with a RecyclerView somewhere else in the app, if it works you know that the material dialogs are preventing it. @guuilp as @FabianTerhorst already pointed out correctly nested scrolling is not supported. The ScrollListener we offer is just a nice addon and not really a core component of the library. You should be able to use any scroll listener which offers this functionality (as long as it does not require a specific adapter) \nWe are always glad to get a PR to improve such elements.\nI might close this issue in the upcoming days as the provided listener works as intended.. @judemanutd oh sorry I haven't had pushed it to maven central, it was just uploaded to bintray. @sparkitny did it work before? Did you have a look into the samples?\n. @DarrylJohnson170 please have a look on the GenericItemAdapter: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/GenericItemActivity.java\n. @DarrylJohnson170 well you do getEvents in onResume and onCreate both are called so this might double it in your code. It is not visible what your eventPresenter.getEvents(savedInstanceState); does but I assume it will add the elements instead of clearing out the previous elements and adding the new ones. \nAlso make sure that you do the addition of items on the UI thread. \n(closed as you solved the main issue) You can still keep conversation up for the other onresume problem you mentioned. @sosite well I am not sure. That's simply the way how RecyclerViews treat ViewHolders. A ViewHolder of a specific Type is always reused. So if it's the same ViewHolder and there are recycled once it will always reuse them. So basically breaking what you are trying to do. \nYou should potentially look into the EventHook feature which allows you to attach listeners to item's and still do actions depending on the item/model and not as a result of the  ViewHolder \n. Have you had a look into the EventHook?\nIt allows you to hook event's on view's like you do in the above sample. It will add the listener once during viewHolder creation, and it has the information about the element available. @sosite great to hear that it is working now :). @MFlisar as of the current behaviour this is expected, and you should use the expand() methods to expand.\nIt might be different in the future. Someone might write a extension for the FastAdapter v3 which allows this. hmmm well you could theoretically use the \"savedInstanceState\" too :D and define the \"id's\" you want to expand. Well it would definitely simplify your code. at least for the time being.\nfor v3 someone might want to improve the expandable extension though\nthe thing with expandables simply is they have to be added to the RV (added to the main list of items) and get displayed, and removed there again. \nI have not yet thought of a nice (and fast) solution to display them without modifying the main displayed item list. (and I am afraid there is no real good alternative, as to the current solution). Thanks. @geniusforapp I have no idea what you are talking about. https://github.com/mikepenz/FastAdapter#4-click-listeners-for-views-inside-your-item. the thing is that the FastAdapter makes sure that listeners are only bound once during viewHolder creation as everything else would slow down the RV's performance and result in unnecessary created objects.\nI use the FastAdapter in a setup myself with clickable spans in TextViews and it works quite fine. \n. well we do this in the bindView method:\ntv.setText(spannableString);\ntv.setLinksClickable(true);\ntv.setFocusable(false);\ntv.setLinkTextColor(highlightColor);\ntv.setMovementMethod(LinkMovementMethod.getInstance());. and the span has the ClickableSpans applied. . @bernaferrari thank you very much. @AleksanderMielczarek thank you very much. looks good. I'll have a look soon. @AleksanderMielczarek works amazing :) thank you very much. @noam2 you can set a item enabled or disabled \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/IItem.java#L45\nDisabling the attaching of the listener itself to the item is not supporteD:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L608\n. Closing as answered. Please report back in case this was not helping. @ndrdmarshmallow might be unrelated, but there was a PR to improve the FastAdapterDiffUtil here: https://github.com/mikepenz/FastAdapter/pull/509/files (for v3.x) \nYou might want to have a look on it's implementation . @ndrdmarshmallow have you had a chance to check it out from v3?. Closing this for now. Please report back. @DJafari as @FabianTerhorst already pointed out properly. You should have a look into th eGenericItem sample. which basically splits apart item and model. This approach allows you to have the model handled in the database and the item to just define how the model is displayed in your UI. \nother than that there is no special thing regarding the FastAdapter. that basically depends on the database you use, and what the best approach and most performant approach with that one will be. . @AllanWang you use the position based state management? \nSeems to be only related to that one. It will be no more issue with v3.x as it will remove that state management completely. (as of it's complexity) \nbut yes seems like an issue for 2.x.. @manid2 seems to be related to the CardView or so. It is not really related to this library. \nThere might be some weird behaviour of a CardView in a RecyclerView... \nPlease see here: https://github.com/mikepenz/FastAdapter/issues/495. @guuilp another way would be (as you have the item + the position and the adapter) to notify the adapter about the change with a payload. so you could only to a partial view update (which would be the preferred solution as of the android docs). the payload is a standard RecyclerView.Adapter thing. nothing special. \nyou notify with the payload. \nthen you get the bindView called with that payload. You go through the list of payloads and just update the view you have to update.\nall mentioned in the official Android javadoc. \n(fastAdapter.notifyAdapterItemChanged()). well if you have an animator and the partial update is not possible, \njust use the view you get in the eventHook, and get the parent, or child whatever you are searching for. @adrianpdm seems like I do not pass forward the value. true. . This is fixed in v3. @fly7632785 you simply use the IItem interface as type, which will allow you to pass in any item you want to use. \n. See for example this sample: https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/IconGridActivity.java\n(the sub items have a different type than the parent). @Pantkowsky at the moment there is no ETA available, as we want to make sure the new version is as stable as v2. and that everything works as expected. \nJust follow the open branch and the commits + dicussion happening in the PRs ;) . @bernaferrari thanks for the feedback. v3 is already pretty stable for the core functions I'd say. . @bernaferrari the FastAdapter does not change anything on that behaviour at all. It is just the adapter code. I am wondering why it would differ. @Pantkowsky the FastAdapter  as managing instance has to have the upper \"type\" defined. so if the only parent class combining those items is the IItem interface, use this one as type for the FastAdapter. \nBasically you also do not have to define the type of the adapter, you will loose the type safety, and your listeners will no longer pre cast to the type you expect (So you have to cast and use instanceOf more oftne :D) but in general ther eis no requirement to just use the same type of item. \nthe sample shows this already a few times. . Please see my answer. if there are more questions. re-open. @sosite but the issue is still occurring for you?. @bernaferrari you can define as many hooks inside an item as you want, you can also hook up the same eventhook to multiple views within the same item. \n. @MFlisar sounds like you may want to create your own open source lib for this decorator :). \ndecorators are not part of this lib. \nthanks for the suggestion though. . Thank you. @manid2 di you use the ActionModeHelper? or do you handle the CAB manually, if you handle it manually I see no reason why it would do that. for the ActionModeHelper that's expected behaviour if you end the CAB state. Well that's default behaviour of the helper as you can see here: \nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/ActionModeHelper.java#L92\njust do not forward the onClick in this case.. @noam2 I use DrawableStateLists myself and they do not prevent click listeners or anything. \nAnything else in your code which might prevent this?. @noam2 please report back. close for now. @gpulido well you can simply add elements at the end and remove elements from the top. there is nothing in the adapter doing something like this. \nseems like a very specific usecase. @gpulido there is nothing preventing it, as basically everything is build upon the RecyclerView.Adapter interface. just add/remove the items, I don't see a problem with this. \nyou can also just move them for example which would be even better. sure it is not able to re-use a viewholder if it is still used. \nI also don't think that it's clever to have MAX_INT items. just listen in the scroll and move items from the top to the bottom and visa vers. (it should theoreitcally work) \nbut the whole thing is not FastAdapter related. as it behaves and acts like a normal adapter.. @ncapdevi do you have stableIds? identifiers set for your items? \nThe rv should normally be clever enough if the items do not change that it does not do an animation. @ncapdevi @Rainer-Lang is this reproduceable int he sample?. @ncapdevi @waninkoko looking at the code seems super weird that this should change it. \nbefore it would have done a complete notify. Which I guess should have done the same. I see the re-animating also with the old variant. \nPerhaps a few more details would help:\n- Is it the same list or did you create a new one\n- Are those the same items (same reference) or just the same content but the item was generated new\nDid you also try the setNewList call?. v3 will allow providing custom logic on how the notify happens. this will allow the new and the old behaviour:\nhttps://github.com/mikepenz/FastAdapter/pull/443/commits/278c590f8a4f11632bc414af94ccb64d14ab5fe4. for v2.x releases please stay on v2.6.2 if it is causing troubles\nwith v3.x we will over a solution to adjust this behaviour. . @rraikarnvi that's the animator of the RecyclerView which is automatically doing this with the notifyItemChanged. \nYou can either remove the animator, or the better solution is you use the payload when notifying, so you can have just a partial update of an element. That's not a library issue. \nAfter you refreshed via the swipe listener, you also have to reset the scroll listeners last page and so on...\n. https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/scroll/EndlessRecyclerOnScrollListener.java#L128. Yes that's the same I think. \nI think it's just how the RV + the LM lays out the views. That's done by those classes not by the adapter. \nand it is also unrelated to the expandable thing. . @siyanew please try to read up more infos on how the RecyclerView works. \na ViewHolder is re-used. which means you can not directly access it. if you want to remove an item in the list, just remove it from the adapter with the remove method. \nIf you want to update the current displayed things of a ViewHolder change the item, and notify the adapter that the item was modified. . hmmm I think you may look for the SnapHelper\nhttps://developer.android.com/reference/android/support/v7/widget/SnapHelper.html\nIt's unrelated to the Adapter the adapter only provides the items. \nEverything else like scroll behaviour, snapping, animations, is all controlled by the RV which is not scope of this lib. @sagrawal2002 this issue is not related to this library. (as mentioned in my earlier answer) please had to StackOverflow or to a different place to get help. \nthe Adapter (so here FastAdapter)  is not responsible on how the items are displayed in the list (horizontal, vertical, grid, ...) that's the thing of the LayoutManager. If you want to have a sticky effect the SnapHelper could help (but also not related to this lib) \nSaving to the db is definitely not related to this library. . @sosite it would be great to get your opinion on this one too.\nThanks. Try to set IItem as generic type . I think it is. How else would you define that the type does not matter. . @DJafari sticky headers are not part (and most likely won't be part) of the core library. \nSticky headers showcased in the sample with some external sticky header libs. . @DJafari it it is compatible, and you can make it to support FastAdapter item's but it is a different lib. . https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ViewHolder.html#getAdapterPosition(). @bernaferrari please refer to the library providing sticky headers. if you don'T want to sticky header you just need to add the items in-between. you can also use the HeaderHelper https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/HeaderHelper.java \n(basically headerItem, normalItem, normalItem, headerItem ,... ). https://github.com/mikepenz/FastAdapter/issues/540. @markuspaschi if you have a GenericItemAdapter you should use the model methods. \nIf you want to work only with items then use the ItemAdapter. @guuilp well withComparator sorts your items when added, and triggers a complete notify. The Adapter + RecyclerView of Android is clever enough to not execute the single notifies after this, because it's not necessary. https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L103. well you trigger it with the sort now. \nno listener though I think. well why not change the layout when the full notify is triggered?\n. well either you sort your list from the beginning and then you just notify. \nif you have to change the comparator, you can somewhere define the type of the items. \nor you do the sorting manually. Well or a better method. you extend the ItemAdapter (as the usecase you have is a bit special, usually you want it to notify the whole list) and override the withComparator method, and simply do not call the notifyAdapterDataSetChanged()\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L107. @guuilp well you could keep the same mechanisms but only notify then manually. yeah. . @guuilp in addition you might just want to disable the animation while doing this? \nYou might also just want to use a field which is accessible from the item from the adapter or so, defining how it should look like. so you handle it when the complete list is re-drawn. @kolorszczak as @FabianTerhorst already pointed out. it's not an adapter issue. the adapter is only providing the data + the view for a single item. the whole drawing is handled by the layoutmanager + rv. @ncapdevi I am not 100% sure what you mean. animations work fine in the sample. anything else which might prevent it in your case?. @ncapdevi can you please report back. close for now. @ncapdevi there will be a huge refactor with v3 of this. \nregarding FastItemAdapter vs ItemAdapter \nFastItemAdapter == ItemAdapter + FastAdapter wrapped in one. @Shakezulla57 in general. as soon as you use multiple sub adapters I would say don'T use a FastItemAdapter. @JuhaniLehtimaeki what was causing the issue. \nIt would be a great help so we can improve the migration guide :) \n(The v3 release was a work over the last few months, so some migration steps might got lost in my head while writing them yesterday). @jp1017 just use multiple ItemAdapter \njava\nItemAdapter header = ..\nItemAdapter items = \nItemAdapter footer = \nFastAdapter fastAdapter = FastAdapter.with(header, items, footer);\nand the you just use the footer one then. (the order on which the adapters are passed to the FastAdapter defines the order of it's items) . @jp1017 your FastAdapter shouldn't use TradeItem if you have a different type somewhere anyways. The FastAdapter should always work with the parent type which is in your case I guess IItem . @jp1017 what's the issue?. @jp1017 oops sorry. it is:\njava\nFastAdapter.with(Arrays.asList(mModelAdapter, mFooterAdapter));. @jp1017 well for getModels() a reverseInterceptor is needed. \nbut as you just need the size in your case. you should simply use getAdapterItemCount(). @fly7632785 as far as I've read this sounds like an issue which I will fix in the next update. \nSorry for the inconvenience. . The next version will fix the issues with the \"clever\"-viewholder and the selection and filtering. @DJafari that's why the reverseInterceptor is there. the thing is the way the ModelAdapter is defined via it's generics. does not require the Item to be a IModelItem. that means theoretically you can have any class of IItem you want to use. \nA result of this is that we do not have access to item.getModel() \nSomething which should make sense though:\njava\npublic List<Model> getModels() {\n    ArrayList<Model> list = new ArrayList<>(mItems.size());\n    for (Item item : mItems) {\n        if (mReverseInterceptor != null) {\n            list.add(mReverseInterceptor.intercept(item));\n        } else if(item instanceOf IModelItem) {\n            list.add(item.getModel());\n        }\n    }\n    return list;\n}\nI still think though that there should be a runtime exception in case none of both is hit (which is detected during development then). @Tarik02 just use a handler and postpone the call to the next frame as mentioned in the trace:\njava\nhandler.post(new Runnable() {\n                        @Override\n                        public void run() {\n                            footerAdapter.clear();\n                            footerAdapter.add(new ProgressItem().withEnabled(false).withIdentifier(Long.MAX_VALUE - 1));\n                        }\n                    });. The type instance registry will only do something if that type is not yet there. Basically it contains exactly 1 entry per item\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/utils/DefaultTypeInstanceCache.java#L19. Closing this as there was no activity for 2 weeks. If there is any follow up needed please let me know. The next version will also support the ModelAdapter. Did you add the ExpandableExtension?\ngradle\nimplementation 'com.mikepenz:fastadapter-extensions-expandable:3.0.0@aar'. @ncapdevi if you exclude those classes from proguard, will it work?\n. @DJafari make your item isEnabled=false to prevent any click action. \nthe listener is set, because the whole event pipeline would otherwise never be hit. \n. Well basically adding a boolean to disable it would work: \nnot executing this:\nhttps://github.com/mikepenz/FastAdapter/blob/b77477ec100e27e31ffba16dade9fa5031e5cb6c/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L641\nit is just important to note that only a complete recreation of the viewholders would attach the listeners then. Any update to this topic?\nThe type for the IAdapter is to have proper typesafety through the whole code and all implementations\nYou can allways fallback to the interface which is the smallest equal thing for all possible items. @AllanWang thank you for the very detailed message. \nThe issue with \njava\npublic static <Item extends IItem> FastAdapter<Item> with(@Nullable Collection<IAdapter> adapters) \nis. that for java it is not acceptable to identify the type for something like\njava\nArrays.asList(headerAdapter, itemAdapter)\nSo you will be needed to work with a Collection<IAdapter> anything else with the specific type won't work.\nRelated to the return type. As of the design of the FastAdapter it is only important that the FastAdapter you use to manage your IAdapter uses a parent type of the IAdapter's you added. It is still totally fine if one of the IAdapter is a specific version just dealing with CheckboxItems. This will give the developer the proper types, and he can just add CheckboxItem's. \nthe FastAdapter with the parent type will just not cast the items returned in the listeners for the developer. but that's ok it will cast to the defined parent type. \n. @AllanWang thank you very much for all the good input. \nYou might also want to start a tiny kotlin extension library for the FastAdapter for people who already have the luck to work in Kotlin ;). @AllanWang if you have adapter's of different types you need to use the parent type for the FastAdapter \nin the click listener you can then simply check for the type instance. \nA different option is to provide EventHookss to the adapter allowing you to define specific click events for a specific view of an item. \nAnother possibility is to implement the IHookable interface in the item and just have the listeners attached from within the item. . If you have a suggestion how to improve this without breaking type safety for Java please let me know. . @frmz it would be amazing if you could do a PR to fix this :). As you already mentioned. The logs do not contain any reference to the FastAdapter as of the trace it also looks very unlikely, and I assume that something in your code is causing this. \nPerhaps also a support library version? \n- Which lib version are you using? \n- Which support lib version?\nWithout complete code it is super hard to trace anything back from this. \nI use the FastAdapter myself very heavily in apps with a few thousand installs, other people use it in apps with 100k installs or more. Without any of these issues. . I would recommend to also use the lastest support libraries, they usually come with many fixes. \n1.) that might be able to cause this issue. do you make sure updates to not happen at the same time? do you make sure they are on the main thread? \n2.) should be fine\n3.) that could theoretically also cause issues, if same id's overlap. You might use a better way to generate a id from a string (credits to @FabianTerhorst)\njava\nprivate static long hashString64Bit(CharSequence str) {\n  long result = 0xcbf29ce484222325L;\n  final int len = str.length();\n  for (int i = 0; i < len; i++) {\n    result ^= str.charAt(i);\n    result *= 0x100000001b3L;\n  }\n  return result;\n}. You would have to overwrite the SimpleSwipeCallback and define that the only swipe direction is either left or right, depending on the item:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/swipe/SimpleSwipeCallback.java#L92. The effort to keep it updated was not worth the time. \nCurrently I no have plans to add it back. If somebody would like to do a PR for it I am more than happy to accept it. You might want to do a realm implementation on your own and open a PR or you are lucky somebody else does one. \nYou might also just stick to v2.x\n(Closing the issue as it is not planned from my side). @marbat87 yes already figured that on my own. I introduced this with the update v3.0.3 \nStick with v3.0.2 until I figured out a proper way to resolve this. @gmgunderground you should not do it like this. \nuse the fastAdapter instance to notify that this item changed, pass a payload and do the update of the view inside the onBind method. . @ipetu please be a bit more specific. What do you need? . @SharonAlexander you talk about the sample app?. @SharonAlexander sorry for the super late answer. \nThe behaviour is as expected. I think for your use case it's best that you either implement your own cab logic (so don't use that helper) or you overwrite the logic (or you add that class to your project and adjust it to your needs) . Well you implement the whole view logic for your items, so you can decide on your own how to handle this. either you go with a state list drawable, or you set it with a notify of the item on click. all up to you. @saeedmozaffari wrap still exists in the StickyHeader see the code on develop:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/StickyHeaderSampleActivity.java#L66. @dezarion which previous version did you have which worked?. which support library version did you have before?. @dezarion any other changes you did? \nIt's hard to guess, especially as the main code related the DiffUtil did not change, just the method signature (different Adapter type) \nPerhaps a change in the support libraries :/. @dezarion any update on this? did you try it with the latest support libs too?. Closing until new report. @AllanWang hmmm I think it might be possible to do a CustomEventHook which is a gesture detector. I think it's fine if that needs to be done by the engineer, as it is a really project bound functionality. And there weren't any issues regarding this yet. It might be re-evaluated in the future. @AllanWang I don't think this needs any adjustments in the FastAdapter as you can just add it to your project or items. . The solution in this case would be disabling the endless scroll during the search case. it is not really possible to have loading more + search. at least not how the built in search functions. you might consider a different approach for filtering + endless scroll.. @AllanWang that's already the case for the core module as you can see here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/package-info.java\neverything is nonnull by default. \nIt might be missing for some extension module. Thank you very much for creating this PR. It was a great base, and using this we came up with: https://github.com/mikepenz/FastAdapter/pull/585. Which I just merged. \nAs discussed on the other PR it has a little bit more details in the ItemList interface than your PR, to keep minimal changes to the public facing API's and still allow great adjustments. It should also allow you with a few modifications to achieve exactly what you needed \nThanks Again!. I think we can close this as it seems to be not very bound to the adapter implementation itself. In any case it should be rather straight forwarded to extend the FastAdapter and add custom logic if required.. @alphater yes sure. a demo activity in the sample app will also help :). @guuilp seems like your adapter is selectable false. @littlezan not related to this library. that's how the RecyclerView handles it if you first delete all items and then add a new set of items (with possibly the same id's too?) \nyou can tell it to scroll to top. The adapter is only providing the items, and notifying the rv about changes. Whatever is displayed and where it is scrolled to is controlled by the RV and it's LayoutManager.\nGlad that approach works for you. @eygraber well if the abstraction of the list will do some kind of sorting async and have some sort of callback after a while this implementation also needs to know about the FastAdapter and the previous item count. (in case there are many adapters) otherwise you can not properly notify the RV.Adapter about changes in the dataset . if there are not enough items, and the end is already in range of loading the next page it will already trigger. \nif you scroll really fast. either you load the next page on a much earlier \"threshold\".. The OnLoadMore listener integrated is a very minimal solution which is ok for most cases. You can easily tweak it or overwrite some logic to adjust it to your needs. You might also want to check out other such listeners, as it is rather independent of the adapter logic itself. \nAnyways if you have ideas how to improve it for others, you might want to open a PR. Please open a PR if you would love to improve this. Closing this ticket for the time being. @ialokim thank you very much :). I'll have a look.. @ialokim I don't see the issue in the sample app. \nIf you go to the Advanced Sample you can expand 2 hierarchies and if you collapse the parent it will also collapse the sub item. Are you able to reproduce the issue in the sample app?. @ialokim thanks a lot. I'll check it :). Please check out: https://github.com/mikepenz/FastAdapter/pull/594 and see if it solves your issue. @DummyCo oh sorry. #594 already is updated for the IItemList which got not released. both changes together will be released in v3.1 . Thank you. I hopefully have some time tomorrow to test it intensively and get it merged ASAP. Looks great too. \nthanks a lot!. @aksinghnet unbind is super important, depending on what you do. I chose to make it abstract to make the developer aware of the existence of this method, and to raise awareness in developing and implementing a good RecyclerView item . @DummyCo this is known. and already reported here: https://github.com/mikepenz/FastAdapter/issues/589\nThere will be an update to fix this as v3.1.0 in the upcoming days. @bernaferrari thanks for answering\n@RussellZornes yes the sticky headers are not part of the fastAdapter.. Not sure but I think you were searching for: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1154. @Dahnark that seems to be not related to the adapter, but to the general behaviour of the RecyclerView . v3 only has the identifier (so the new approach) based state management. \nThe old position based approach was removed as it was quite a lot of overhead of development, and providing none vs just a very tine speed enhancement. and it would make expandable handling very complex (well basically impossible :D because remembering a selection for something which has no position is not doable) . You might want to open a PR for it ;). @MFlisar I like the idea. and the extension can only be provided once. I don't know of a usecase where a extension would possibly be added multiple times. \nReally nice idea ;). I think I use a Set for the extensions If I am not mistaken. I am more than happy to take a PR for that :). Included here :D https://github.com/mikepenz/FastAdapter/pull/607. I don't think it's really related to the FastAdapter. You will most likely have that problem with your own recyclerview adapter too. \nyou might want to load the items async after the fragment is ready. to remove lag. \nyou might also want to check that your items are not too heavy. the recyclerview has to initially create a few instances of the viewholder until it can reuse them, that's taking time. . @DummyCo thank you very much. I assume the IItemList introduced some regression somewhere. The stacktrace is sadly not really helpful. Sample code is a in such a case much more helpful. \nCan you possibly describe a bit more what are you doing?\nDiffUtil? \nHow do you set the items to the list?\nWhen does the crash happen? \nWhich methods are you calling before that?. (can you please try if it happens with v3.1.0 ?). Well some small regression.\nThese cases are super hard to spot. Especially as it does not occur in the\nsample.\nRVs are not your friend in such a case\nOn Sun, Jan 14, 2018, 9:26 PM FelixMittermeier notifications@github.com\nwrote:\n\nInteresting I'm not the only one getting this error \ud83d\ude04\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/602#issuecomment-357539571,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiMU2ymYZ_sj8jMvv73a7LsG37NMeks5tKmLjgaJpZM4RdZp5\n.\n-- \nMike Penz\n\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.io\n. Ok thanks. Good to know :) It eliminates at least one position to look :D\nI'll debug and test this tomorrow. \nAnd I might (not promising anything) improve the selection stuff for sub items. let's see how it goes. That would be great. Hopefully we can somehow get a test case out of that\nto detect such problems more easily\nOn Sun, Jan 14, 2018, 9:59 PM Ellias notifications@github.com wrote:\n\n@mikepenz https://github.com/mikepenz thank you for feedback!\nBasically I'm having a bit complex feed powered with FastAdapter having\nsomething about 6 item types with stable ids, some of that items bound to\nthe same type are paginated and populated to the feed via\nFastAdapterDiffUtil in random sequence according to server responses\nsequences what makes it a bit complicated to debug but I'll try to log all\nthe populations leading to crash and create a simplified sample now.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/602#issuecomment-357541988,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiNMsS9TEdcx6ORr0rOdHQIffr3Jhks5tKmq5gaJpZM4RdZp5\n.\n-- \nMike Penz\n\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.io\n. As you can see:\n- there is a huge amount of libs you can use to read up\n- there is a very feature complete sample app\n- there is a README\n- there is always migration guide\n- the whole lib has javadoc\n- and the source code is available (so you can always read the source code for questions)\n. @DJafari the remove method takes the global position so it is the position of the whole set of items across all items in the adapter. \na ModelAdapter has the getGlobalPosition method which gives you the correct position to delete based on the relative position. \n. For this case. You could use it's own ItemAdapter for this single item, and then you just clear this adapter. Looking at the code, yes it should be. \nEven though you don't need to get the globalPosition with one single adapter, as global position == relative position in this case.. https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions-expandable/src/main/java/com/mikepenz/fastadapter/utils/AdapterUtil.java#L60. The fastadapter offers if the same item list was applied that the items are expanded again, and the selections are reset. it's up to you though to supply the same set of items (including their identifiers). How many items do you have? \nCould it be that you somehow created a endless parent / child recursion?. Well as mentioned keeping the data itself and putting it into a database or so is up to you, The FastAdapter itself already contains some logic to provide a withSavedInstanceState functionality, automatically expanding / collapsing / selecting items when the configuration changes. you can also use the same to store it accross app relaunches. I think this can be closed. as it can be resolved already with the current version. and I think the new utils which will come with v3.2.0 will even further enhance things :). @ItsAnubhav EDIT oh the included code is for moPubs . Looking at this tutorial. It is possible to implement this, similar to the mopubs usecase. \nThis is a very advanced coding topic, and will require some knowledge of the Android system. \nBut this is not related to the FastAdapter and I can sadly not give support for some external libraries. . There is a v3.2.0-SNAPSHOT release for this PR allowing it to be tested. \nIt's available on the maven snapshot repository. \nFeedback\nIt would be awesome to get some pre-release feedback + some testing. Possibly we can introduce some more enhancements and simplifications before this will be launched as v3.2.0\nInclude SNAPSHOT in your project\ngradle\nrepositories {\n        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n}\nThe library is split up into core, commons, and extensions. The core functions are included in the following dependency.\ngradle\nimplementation 'com.mikepenz:fastadapter:3.2.0-SNAPSHO@aar'\nimplementation  'com.android.support:appcompat-v7:${latestSupportLib}'\nimplementation  'com.android.support:recyclerview-v7:${latestSupportLib}'\nThe commons package comes with some useful helpers (which are not needed in all cases) This one for example includes the FastItemAdapter\ngradle\nimplementation 'com.mikepenz:fastadapter-commons:3.2.0-SNAPSHO@aar'\nExpandable support is included and can be added via this\ngradle\nimplementation 'com.mikepenz:fastadapter-extensions-expandable:3.2.0-SNAPSHO@aar'\n//The tiny Materialize library used for its useful helper classes\nimplementation 'com.mikepenz:materialize:${latestVersion}@aar'\nMany helper classes are included in the following dependency. (This functionality also needs the Expandable extension\ngradle\nimplementation 'com.mikepenz:fastadapter-extensions:3.2.0-SNAPSHO@aar'\nimplementation  'com.android.support:design:${versions.supportLib}'\n//The tiny Materialize library used for its useful helper classes\nimplementation 'com.mikepenz:materialize:${latestVersion}@aar'\n. @Bringoff well your items need to have unique identifiers. and one item with the same identifier should never be there twice, as this will lead to bad behaviour. (as just of the way how recyclerView's work) . @Bringoff well there are different options. either your application comes with one, or you generate a (almost definite unique id) via a string (if those strings are unique), or you use the IdDistributor built into the lib. \nthe thing is. A RecyclerView uses those identifiers to optimize animations, and other things so it is super important to have them unique and not duplicated. the default ID distributor will always provide a new unique ID when a new item is created. so it is definitely unique. but it doesn't know or check that one item always gets the same id. \nWell a inspection is adding some overhead. I guess you can implement something like this on your side super easy by just using a HashSet<Long> \nand then you fill it up with the identifiers, and if an identifier is already contained it is duplicated. Well there are currently no plans to implement something like this inside the FastAdapter itself. nothing prevents using a third party library for this purpose (as you can see in the sample app) . I didn't look to closely in the lib you sent above. but most of those sticky implementations somehow use the ItemDecorator. \nActually the best implementation would still be a custom LayoutManager which just listens for an interface. but I am not sure if somebody took the time and effort to come up with something like this. Perhaps some day. :D currently there are no plans to do so :)\nPerhaps you write it some day ;). @DJafari you never can get (for sure) a view for a position. A RecyclerView reuses views, and it has no view for a item which is out of visibility. So that should not be done. \nThe exact same happens for the ViewHolder which is re-used during scrolling. so accessing it will lead to issues. \n. @AllanWang for toggling etc. I highly recommend to simply notify the Adapter about the item being changed, and you provide a payload with this. \nThe payload could be something like toggled this allows you to just update that single view inside this item. \nYou can theoretically also simply put that single item in a list and provide this as new dataset. it should work exactly the same.. https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#notifyItemChanged(int, java.lang.Object)\nhttps://developer.android.com/reference/android/support/v7/util/DiffUtil.Callback.html#getChangePayload(int, int). So basically that's not something special to the FastAdapter but some functionality of the RecyclerView.Adapter :). thank you very much :). Thank you very much for the super detailed answer. \nYou might want to write an FAQ article too to help others :). Oh sorry. Javadoc had an issue and blocked the upload. and I totally missed it. \nReleased it again. will take ~30mins to be available. thanks :)\nit should be available via jCenter already though. @DummyCo do you use AboutLibraries, or MaterialDrawer?\ncan you print out the dependency tree? \nIt seems a older version of the FastAdapter is somewhere present. Do you use the Expandable extension in an older version ?. Well the MaterialDrawer uses a different version, which conflicts. \nUse a resolutionstrategy to force 3.2.0 of the FastAdapter \nSimilar like here (change the version)\nhttps://github.com/mikepenz/MaterialDrawer/blob/develop/app/build.gradle#L83. @johnwatsondev for this usecase I'd recommend to create your own AbstractItem implementation which does this. \nI see why it might be clever, but it would definitely break existing apps which I think is not good to do :D. @johnwatsondev it's the animated background. :/ \nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SimpleItem.java#L118 \nif you disable the animation, (the true at the end) then it will most likely work. What I mean is, the animation on that background will cause it look not selected as the animation will not finish the second time. even though it is. \n. @johnwatsondev so this is basically caused by the android framework's \"slow\" state handling. Not sure if it is exactly the state handling, or the StateListDrawable.\nWhich leads to this visual issue. Checking the selected items via the FastAdapter will return the correct selections . \nSo the SimpleItem uses the state on the view to automatically handle the selection. This is the default behaviour of the FastAdapter an will not trigger a notify on this position on selection change. \nYou can change this behaviour by defining\njava\nmFastAdapter.withSelectWithItemUpdate(true);\nand replace the background setting of the SimpleItem with something like:\njava\nif(item.isSelected()) {\n     view.setBackgroundColor(Color.RED);\n} else {\n    view.setBackgroundColor(Color.WHITE);\n}\nThis will result in instant updates of the item via the notify method. Duplicate: https://github.com/mikepenz/FastAdapter/issues/587. @ssmartitventures sticky headers are not part of this library, they are provided via a external library and just compatiblity is showcased. \nPlease look in that libraries repo for help. @Dahnark you definitely should not change the view within a listener. \nNotify the adapter if the item changed (possibly with a payload) and act accordingly in the bindView method of the item.. well the blinking happens if the item updates. that's controlled by the ItemAnimator of the RecyclerView \nSomething in your code must cause this, as the issue does not exist in the sample, and also not in any of the apps in which I use it. @AllanWang well the method you use here definitely can be null. What if there is no adapter at the given position?. In the following (very specific case) \nWe are selecting all items, including all subitems. and sub sub items:\nhttps://github.com/mikepenz/FastAdapter/blob/843818a499349e28cfb6274ed7f5de46544d57e3/library-core/src/main/java/com/mikepenz/fastadapter/select/SelectExtension.java#L415\nIf the item is a subitem It does not have a position. so the select can not figure out which adapter it is in. (the parent is not directly accessible here) so it is unknown which adapter should be used. Will be enhanced in the next update. well views will have to stay nullable. as the click (select)  can happen on a item which is currently not in the view range of the RV (so it has no view)  and the same if it is a expandable item which is not displayed. but the click can be forwarded via the select method. . That's the great part about Java \ud83d\ude02 you don't have to check if you know\nthat you don't use the feature which would lead to that case\nOn Sun, Jan 28, 2018, 4:36 PM Allan Wang notifications@github.com wrote:\n\nWill the actual click ever occur like that? In that case, shouldn't the\nsample code all be updated to check for nullability before retrieving the\nview context?\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/621#issuecomment-361071725,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiEYOXO1oSGrvw9bti9x1Uca1rIJzks5tPJQOgaJpZM4RsRTe\n.\n\n\n-- \nMike Penz\n\nMike Penz\nAndroid | Backend | Open Source | Web Developer\nmikepenz.com\nlanora.io\n. Should be fine in the next update. @Seidak any other lib which you have? \nThe pom files are correct:\ncore\nxml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.mikepenz</groupId>\n  <artifactId>fastadapter</artifactId>\n  <version>3.2.2</version>\n  <packaging>aar</packaging>\n</project>\ncommons\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n4.0.0\ncom.mikepenz\nfastadapter-commons\n3.2.2\naar\n\nextension-expandablexml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n4.0.0\ncom.mikepenz\nfastadapter-extensions-expandable\n3.2.2\naar\n\n``. seems changes in gradle resulted in it suddenly believing the sub module's name islibrary-core`:\n<dependency>\n<groupId>com.mikepenz</groupId>\n<artifactId>library-core</artifactId>\n<version>3.2.6</version>\n<scope>compile</scope>\n</dependency>\nnice :D ^^ oh gosh.... @Kaz32 sorry no support for kotlin questions. seems to be kotlin specific, and you might want to look up the kotlin documentation on these generic questions.. perhaps @AllanWang or @FabianTerhorst have suggestions as they use kotlin. I can not give Kotlin support sorry. And I think here is not the place for Kotlin questions. This issue sections is for issues with the library itself. If kotlin has issues with java generics it should be fixed on kotlin side :(. perhaps @AllanWang or @FabianTerhorst have suggestions as they use kotlin. @gpulido the FastAdapterDiffUtil uses generics. it does not force any specific model or any specific item. \nand ModelAbstractItem by the way anyways implements IModelItem \nSo I am not sure about the issue?. @ebabenskas theoretically you can also have a generic adapter which will just handle all items type of IItem you simply have to cast then in the listeners for example. @michalbujalski sorry the FastAdapterDiffUtil can not handle expendables. if they are expanded. \nI think you are right that we require a collapse before that again. as I don't think there is a nice solution to maintain the current open state. (other than collapsing, remembering, restoring it. . @Kaz32 nothing like this is inside the library itself you will have to implement it. \nyou might be able to use the new recursive functionality. \nOr you look into the SubItemUtil there is a sample which has some things which might help you. \nExpandable MultiSelect Delete Sample of the sample app ;). @Kaz32 can you reproduce this in the sample?\nI tested something with at least 3 levels :O. @MFlisar does the notify also happen on the background job? This might be the cause of the issue. \nOtherwise. usually the ItemAnimator could alter that behaviour. (but you already disabled it) \nOther than this I don't see a reason why the RecyclerView shouldn't forward it. \nThis is a RecyclerView \"problem\" though, as the FastAdapter itself only forwards the payload to the notify method, and then forwards it in the item. So it actually does not adjust any of this behaviour :) \nPlease let me know if you figure out more. Would be interesting. @MFlisar no all methods of the adapter call the notify methods accordingly. @MFlisar no. The RecyclerView.Adapter does not provide a notify method with payload.. https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#notifyDataSetChanged(). For best support you should use the FastAdapterDiffUtil as it will work properly in a case with multiple child adapters. \nIf you only have 1 adapter managing the items in your FastAdapter dispatchUpdatesTo should be working fine. \n. The FastAdapterDiffUtil will work with a ModelAdapter \nthe default one from the support libs not. . @Dahnark -dontwarn com.mikepenz.fastadapter.** is correct. \nNot sure if I want to include it as default. @Dahnark it adds a -dontwarn for the package which contains the DiffUtils so it should yes.. Thanks @AllanWang for answering.\n@seba123neo the sample as you linked works correctly. \nSee the line it returns the proper selections:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiselectSampleActivity.java#L87\n\nthey are selected and are mSelected == true\n\n\n. @judemanutd I do not really understand the question. \nThe FastAdapter does NOT contain sticky items. \nYou can have a item at the first position. nothing prevents you from putting different items at different positions. You can also for example work with multiple adapters. the first adapter has an item at position 1. \ncheck out the sample. It has a demo which include multiple adapters. \nYou can at any point use different items in the same adapter without issues.. @judemanutd for the above view you might also just consider nested scrolling, where the recyclerview with the items is just a child in a ScrollView for example. \nSo you can use a normal view on top with the viewPager, and a normal RecyclerView on the bottom. \nAs for the crash you see. I am not sure what exactly you are doing. \nBut the MultiselectSample showcases exactly this case. \n1 Header item. \nX Items\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiselectSampleActivity.java#L58. You would have \nxml\n<ScrollView>\n   <LinearLayout>\n      <HeaderView />\n      <RecyclerView>\n          <RVItem/>\n       <RecyclerView/>\n   <LinearLayout>\n<ScrollView/>\nThat will consume the endless scroll events on the RecyclerView? . @bernaferrari you can still use it. I am not removing it before v3. And until then I will slowly migrate in the process. \nAs noted in the deprecation note: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1083\nUse getExtension() and retrieve the SelectExtension which offers exact the same functions as the proxy methods on the FastAdapter. For example like shown here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeModelItemActivity.java\n(take a look at the other sample activities too). @Dahnark yeah makes sense. a notify is not possible while you adjust the list. \nso a selection is not supposed to happen. \nThat's basically a limitation of the RecyclerView's approach. Thank you. You have a conflict with MaterialDrawer v6.0.0 \nPlease either use the latest MaterialDrawer which uses the latest FastAdapter \nOr add all modules of the fastadapter to the resolutionStrategy :). What's the expensive part about this item? Perhaps you can cache the expensive part, and keep it flexible? \n(Sorry can't deep jump in right now). @DJafari should be fine. As the FastAdapter is not handling recycling. It is only providing items, and creating them. \nThe RecyclerView decides if something is recycled, reused, .... One thing. possibly setting the setIsRecycleable(false) in the ctor of this ViewHolder from this item is a more secure way.\nOh I just see.Is this item multiple times in the same RecyclerView? . it just will ensure that this is always set :D and it is not forgotten somewhere. \nok then it is ok. Remember. This item can not and should never be used in any place where it will exist multiple times in on activity, as it will always end up being the same viewholder. @eygraber how did you remove them? \nThe DiffUtil does not allow that the original list is modified. You need an updated list of items which is modified. (the diffUtil will otherwise run into troubles if items are removed on the same list reference). @eygraber were you able to figure something out?. @eygraber I am sorry that I was not able to react faster, currently super flooded with work... \nI'll keep an eye on other reports, as I have never seen this in the sample. If you have demo code to make it crash in the sample that would be great. \nOtherwise I think we can close this for the time being. @eygraber independent of the issue you should use the FastAdapter provided notify methods. (like notifyAdapterItemChanged...) \nIt sounds strange. can it be that the item 0 and 1 are not really visible? \nAs you can see herE: https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/scroll/EndlessRecyclerOnScrollListener.java it is just a default scroll listener which will not prevent default behaviour. only in addition trigger the according listeners when a specific limit is reached. @eygraber do you have a item animator set. that one might also fool the layoutmanager of giving the RV the proper info to rebind. \nDo you have an equals implementation: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java#L323 ? perhaps there is something going on because it is still equal to before?\nDo you items have proper identifiers? . Was this also related to the other issue you had in that hackathon? \nIs this still relevant? Please comment if we need to re-open it.. @mahdighaemi123 what are the identifiers for those 2 item types?. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiselectSampleActivity.java#L62. Please report back. Close until any new details are provided. @dev2961io so instead for a single item you want to do it for all items?\nBy the way you should use the notifyAdapter* methods if you use the fastAdapter. :D\nbut independent of this, the best solution would be to notifyItemRangeChanged and pass over a payload so you only change the visibility of this view and don't update the whole item. If you can't use an actionMode for your case. then don't? \nThis is not really related to this library then. It's simple handling of a Toolbar :P\nBut coming to the main question. you notify that the items chagne diwth a payload (standard android adpater feature) and then you react on this notify with the payload. \nOtherwise you can add some flag to the items which you ahve to set. or you have some global flag which is known. there are many solutions which will lead to your targeted result. @dev2961io the same as for a normal adapter applies. either you have the information in all items, or you have it global (as static variable somewhere) or you extend the adapter, so that one is aware of it and will act accordingly in the bind methods.. The ItemAdapter will call the correct notify methods on the adapter accordingly. \n(A add will notify about new items, remove about removed items, ....). @mori-honest please follow the github issue template.\n(And if your viewHolder does not have a information about the adapter, you can't) \nYou might be interested in this function here: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1380. Please write a proper github issue. Close until all the requested details are filled out. @strangerweather can you please provide more details on how this crash occurs in this sample? I tested it with the current released version on my Pixel 2 XL and I can not reproduce the crash. Which Android version do you use? Which phone? \nNo matter what I try, it won't crash for me in the sample app. Thank you very much! \nAll the best. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiselectSampleActivity.java#L62. @Kaz32 that's not a Adapter specific issue. Scrolling and scroll to position is related to the LayoutManager \nSee here: https://developer.android.com/reference/android/support/v7/widget/LinearLayoutManager.html#scrollToPosition(int). It highly depends on the way how you want to manage everything. \nYou can go with sticky headers which will automatically group (you need a different lib doing the sticky stuff headers :D)\nor you use a itemAdapter per section, (if there are more items than sections). then you can simply have the header at position 0 per section, and the rest items. \nOr you simply keep track on the position of a header and add it as child. \nOr you work with expandable itmes but keep the sections open. \nSee the sample app for more infos :). I think this is solved. Please reopen otherwise. Which modules do you include of the FastAdapter?\n@Cilenco . As the documentation notes. you will also need the Expandable extension if you use the extensions package:\nhttps://github.com/mikepenz/FastAdapter#using-maven. @seba123neo can you please be a bit more precise on what you are doing? \nCode samples?\nIt does not happen like this in the sample.  I assume it is something related to your implementation, resulting in the item being reset after the swipe happened showing the \"standard\" state for a blink moment.. @seba123neo were you able to solve the issue? . Closing for now. please re-open if necessary. You can use the interceptor to get form List<Model> to List<Item> this is basically what the list iteself would have to do:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ModelAdapter.java#L110. @alphater in case you can not use the provided AbstractItem you can always implement the IItem interface. \nMake sure you implement the methods accordingly. For example :). Thanks for the PR. And sorry for the super late response (I was traveling for 3 months, and not really available) \nPlease note that I had to minimal modify the PR as the deselcting is not expected behaviour.. @Scheams and @Gounlaf  thanks for answering. We decided to use a very flexible architecture for the FastAdapter to allow developers to choose whatever architecture and whatever implementation they prefer :) \nNothing is really hardcoded ;) So my suggestion is to go with whatever you feel best, and with whatever your team works best :D. java\n SelectExtension select = getAdapter().getExtension(SelectExtension.class);\n        if (select != null) {\n            select.getSelections()\n        }. ?. Oh sorry. I copied that code over :D basically the extension has the type of your FastAdapter (if it has a type). While filtered use the methods provided by the filter to add items:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemFilter.java#L209\nPlease open a PR to fix the javadoc issue :)\nPlease check out the sample app, this one does only animate the change elements. (A redraw might happen of the whole list depending on what the rv decides to do). @dya-tel there should not much difference using this than the default android classes. \nHave you checked out this sample for example: https://github.com/mikepenz/FastAdapter/blob/6ca81ab1d584b901d1102c3fd096dcf4fb9bb3d9/app/src/main/java/com/mikepenz/fastadapter/app/DiffUtilActivity.java\nAlso you don't necessarily have to use DiffUtil as the filtering will animate accordingly too. \nhttps://github.com/mikepenz/FastAdapter/blob/6ca81ab1d584b901d1102c3fd096dcf4fb9bb3d9/app/src/main/java/com/mikepenz/fastadapter/app/SimpleItemListActivity.java\nPlease report back if you solved it or need additional guidance. Thank you very much :) Really nice to see such work provided :). @anharismail thank you very much. Currently I do not have plans to rebrand, but I really like the design and logo proposal. and that's the reason why I keep the issue around and open so people can see it ;). Closing as I think there was a lot of visibility for it :)\nThank you again for the great work!. Is this reproducible in the sample?\nIf not. Please provide a more precise error description by following the github issue template. Thank you very much please report back with more details ;). The fastadapter does not contain UI. the sample code just showcases how to use it. . https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SimpleItem.java#L113 here you bind the view. and the xml defines how the view looks like. Just checkout the sample\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/RealmActivity.java. I do not understand. if you provide a list with model elements then they will be in items. nothing prevents you to use the same model in a different list. . Perhaps you mean this: https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/MultiTypeModelItemActivity.java. as long as the android x libraries are not in a final version there won't be an update yet. . it will be updated as soon as it is stable. until then you can always create a PR or build it for yourself to make it compatible. Thank you very much. . Closing this for the time being. Please open a new ticket as soon as androidx is final ;) . @or-dvir I have added javadoc. most things you see in the FastAdapterDiffUtil are simply convenient functions to make it easier to use the default DiffUtil provided by the appcompat support libraries. \nPlease see these docs for the different functionalities provided. . @abbasalim that's sadly not supported. . v4 can be tested by using its latest release v4.0.0-beta1. Some migration notes were written up here: \nhttps://github.com/mikepenz/FastAdapter/blob/feature/v4/MIGRATION.md\nPlease report if some migration information is missing or if some parts need further clarification. @eygraber oh sorry. missed to release the version on maven central (so basically after uploading it has to be released manually on their system to ensure integrity) \nDid this now, will take ~15-30 mins. I upload it to both. not sure why jcenter was not getting it yesterday. which sections?!. Please be precise. Show samples. Mention what you want. What is your requirement. \nThrowing in a question without any context or anything will not lead to an answer. \nAlso follow the issue template.. Yes you can do that. See the README or sample app for some samples. @debjitk please follow the issue template. please provider useful information. Memory usage is simple the data size in object. the fastadapter only keeps the reference of your elements so it's not duplicating the data. \nyou can subclass not sure what would prevent that?\n. I am having issues with jcenter. will try to get it up as soon as I was able to resolve the problem with them: http://jcenter.bintray.com/com/mikepenz/fastadapter-commons/\nuse 3.2.6 for now (it's equal beside the pom issue, .. (so use @ aar with it)). Finally resolved the issues :). With which unresolved issue? . @EpiphX sorry to keep it short. What about using a GridLayoutManager and adjusting the amount of columns? \nBasically the adapter (and also the views themself) are not really the component handling this. \nThe RecyclerView in combination of the LayoutManager is handling this, and these components are standard support libraries (and completely independent of this library) \nThank you very much (and I hope my short answer helps). @EpiphX you'd do the exactly the same. if you switch you need to basically match a different item type with the model. see the generic example showing how to match a model with an item. you should be able to use this to change the type and fill up the rv newly. thanks @kalyandechiraju for answering. you don't have to notify. the adapter will handle that for you already.\nalso make sure calls are done on the UI thread. This is sadly not possible as they are not a real part of the main set. \nYou might be able to achieve something like this using the recursive helper methods but it is not included out of the box. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/SortActivity.java#L152. Closing this issue as it was not properly created using the issue template. you have to bring the adapter into the same state as it was before rotating as it is recreated. and it does not know what it needs to do. \nThe changes need to be done in your project and not in this library. \nAlso ensure to correctly remember the saved instance state. It is a sample so not a perfect implementing of what's possible and what\nneeds to be done. There are simply to many edge cases I'm which some things\nhave to be done. And that's not too special about this library that is true\nin general.\nIf you want to improve the sample. We always are happy to see pull requests\nOn Sat, Jul 14, 2018, 2:21 PM Shahood ul Hassan notifications@github.com\nwrote:\n\nThe changes need to be done in your project and not in this library.\nSee I clearly mentioned that my observations are based on the sample app\nhttps://play.google.com/store/apps/details?id=com.mikepenz.fastadapter.app;\nI haven't used this library in any of my projects as yet. Just check your\nsample app and see if u can reproduce what I mentioned above.\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/699#issuecomment-405020359,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABaGiCIRLo76dCESLoJM5K3no8aau06rks5uGeJAgaJpZM4VPa6I\n.\n-- \nMike Penz\n\n\nMike Penz\nAndroid | Backend | Open Source\nmikepenz.com\n. Please feel free to open a PR if you want to improve the sample's behaviour for this case. . What do you mean by 'shadow of item fly up'?. @gmavenis some devices have an issue with the default animation from the StateListDrawable  (can't reproduce on my Pixel 2 XL with 9)\nIf you do: \njava\nViewCompat.setBackground(viewHolder.view, FastAdapterUIUtils.getSelectableBackground(ctx, Color.RED, false)); //see thef alse for animation)\nthen it should work.\nI pushed one commit which might (or might not) improve this too: https://github.com/mikepenz/FastAdapter/commit/56ad394d2c5eeec50b5bbcc7b7f9a34fb50464a2. @MFlisar it should work. I found a tiny bug with auto collapsing with more than 2 sub levels but other than that it works in the sample \"Expandable Sample\". \nAlso tried to expand one by default like you did, and click a different and that collapses things. \nMake sure that your items properly implement the interface. Or extend from AbstractExpandableItem (it's important that the parent is hooked up properly. Please report back :) close for the time being as it works in the sample ;). @or-dvir you definitely should add the picasso \"cancelRequest\" to the unbind of the item. \nIt is basically called when the RV sees that the element goes out of range, and when it reuses it. \nIf you don't do this. picasso will still have the reference to the imageView and might load the previous loading image into it. . @or-dvir I work on applications myself using picasso in a grid layout similar like yours. \nIf I make sure that:\n- identifier is definitely unique\n- the loading request is canceled on unbind (SUPER IMPORTANT)\n- no other async things are not canceled on unbind\n- views are not directly used via some code and do not respect recycling \nthen everything works great.\nYou always need to keep in mind how recyclerView's work and how the views are re-used during scrolling. Well you should never access a view of an item directly as view's are re-used only do everything in the bindView, and then reset in unbindView. that's super important.. Closing this as I am almost 99.9% sure that the glide clear fixes it. @GreaseMonk something seems off though. \nCan you please provide some sample code to help sorting this bug out? . Thanks :). \nAs discussion on hangouts there is a tiny sample bug in which most likely causes the crash in this sample. was not able to reproduce after solving it. So it seems in \n```java\n/**\n * is called in onViewDetachedFromWindow when the view is detached from the window\n *\n * @param viewHolder the viewHolder for the type at this position\n * @param position   the position of this viewHolder\n */\n@Override\npublic void onViewDetachedFromWindow(RecyclerView.ViewHolder viewHolder, int position) {\n    IItem item = FastAdapter.getHolderAdapterItem(viewHolder, position);\n    if (item != null) {\n        item.detachFromWindow(viewHolder);\n        if (viewHolder instanceof FastAdapter.ViewHolder) {\n            ((FastAdapter.ViewHolder) viewHolder).detachFromWindow(item);\n        }\n    }\n}\n\n```\nthe ViewHolder does not match the position (retrieved from getAdapterPosition of the VH) anymore. so the adapter returns a different element for this case (position already has a different element). causing the cast for the viewHolder here: item.detachFromWindow(viewHolder); to fail. @GreaseMonk fixed in v3.3.0-rc02. . in addition did a release v3.2.9 with appcompat libs for you :). @TheMaxCoder that's a unrelated question. \nYou simply need to create a item for these. And then you have the usual ViewHolder for them, which will be displayed in the list. . Hi :) \nSo basically there are different options to do so. \nYou can either decide to manually add the ad inbetween by having an adItem and a more generic FastAdapter / ItemAdapter where the generic type is simply the interface IItem \nSou you would like have 50 items, and inbetween you add the ad item over again. \nThis might not be the best solution though for ads. So the WraperAdapter is basically a adapter which is partial not really a FastAdapter \nIt allows to wrap a FastAdapter which is set to the RV and will then intercept some positions for it's items. \nA long time ago we had a module like this: https://github.com/mikepenz/FastAdapter/blob/feature/admob/library-extensions-admob/src/main/java/com/mikepenz/fastadapter_extensions/admob/AdmobAdapter.java\nWe stopped supporting it, as it is basically unrelated to the FastAdapter, and everybody can write adapters which wrap another adapter, and modify the positions. \nA wrapAdapter is basically used like:\n```java\nRecyclerView rv = ..;\nMyAdapter adapter = new MyAdapter();\nWrapAdapterWithAds wrapAdapterWithAds = new WrapAdapterWithAds();\nwrapAdapterWithAds.wrap(adapter);\nrv.setAdapter(wrapAdapterWithAds);\n```\nThe above is dummy code, but that's how something like this can be achieved. which proguard configuration do you use? any special definition like more optimisation than suggested by the android team? \nI use the adapter in many libs with proguard enabled too but have never faced this issue. No we sadly haven't in the sample app it works perfectly and also in other apps where we use proguard including advanced optimizations it works great. \nyou'd probably need to create and provide us a sample to showcase the issue as it is otherwise hard to assume anything. Please report back :). You can reopen if still relevant. close for now.. @hanhmh1203 that's unrelated to this project. \nBut you will need to listen for text changes and keep them in the model. so that if the item is rebound you can fill the text in.. @bkhezry you will need to write some logic to detect how many items are selected and prevent any further selection. or automatically unselect a previous selection. \nYou'd most likely have to listen for the current selections and hook up s listener when a new selection is made. and in the case there are already 2 selections you would then consume this event and prevent so the new item to get selected. Not the code here. perhaps there is one in the system which I doubt. there is a high chance that it just takes too long for 1000 items resulting in some race condition or so in your project. I am not sure what you mean. sounds like this question is not fully related to the fastadapter itself. perhaps some firebase question?. the best would be that you listen for the click event in the click listener and then notify the adapter with a payload for this specific element, which would result in the bindView() being callled with the payload, allowing you to update the UI of this element. \nhttps://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#notifyItemChanged(int,%20java.lang.Object)\n(remember to use the fastadapter specific notify method :)). @afarber see the method which allows the payload this allows you to just change the specific view without animating. @afarber that's the interface of the RV.Adapter from google. \nOne optimization of this call is, that the adapter might join together multiple calls with a payload, so it can be possible if you call the notify with different payloads multiple times in a short time, that it will only call bindView once with these 2 payloads. \nThis allows to highly efficient update the views. and keep everything buttery smooth :). you get the view via the event hook here: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/listeners/ClickEventHook.java#L14\nyou can set the ViewHolder as tag to that view and then just retrieve it. \nBe careful though accessing it, as during scrolling things can always be reycled and no longer active. As you can see add does not clear: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ModelAdapter.java#L395\nI am pretty sure your flag addData is false and you call:\nmFastItemAdapter.clear(); //not really needed as you already use set new list\nmFastItemAdapter.setNewList(items);. Also in v2.6.3 of the FastAdapter the code did not clear when calling add:\nhttps://github.com/mikepenz/FastAdapter/blob/v2.6.3/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L345\nYou might want to ensure no other part of your code causes a clear. debug through it and see where the items get lost. If you look at the AbstractItem it is implemented correctly:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java#L115\nNot sure where you have a field mIsSelectable but the field in the abstract item is called mSelectable \nEnsure you do not have a field with the same name in your class extending the abstract item. have you figured out anything related to this? \nhave you debugged though it, which field is used, where it comes from and if all correct methods are implemented and set the correct field?. hmmm other than you potentially debugging it further and see where this occurs, I can place guesses. \nTo further investigate this I would also need some demo app, some sample based on the sample app or so to allow me to debug this case. Ok this one is also quite easy to describe. and I should have identified that earlier but it was a bit hard without actually being able to debug. \nSo the default behaviour (and this is the most common case as far as I can think of applications) is that the parent is only selectable if it has no children. Thus means as your items all have subItems that their parents will not be selectable. This is defined in the AbstractExpandableItem and ModelAbstractExpandableItem \nYou can fine the code here: https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions-expandable/src/main/java/com/mikepenz/fastadapter/expandable/items/ModelAbstractExpandableItem.java#L64\nI even state there that this might not be true for all applications, like yours as we figured out :D \nSo overriding the function isSelectable() and returning true is actually the absolute correct behaviour (if you do not need any other behaviour) \nSorry again for the inconvenience. \nAnd I hope this helps you :). so I should remove more docs to help people start looking into source code, which is in my opinion the most important thing a developer should do :). always stay curious always try to understand how things works. \nI can't even tell you how many hours I already spent in the android source code just to figure out how specific things work down on the bottom :P \nthe problem with it. people don't even read the readme either, they are not even looking in the sample code. so it would not make such a big difference. \nbtw. the behaviour is:\n\"Item is not selectable if it has child items\" \nyeah sometimes it's hard to identify things just by a description. :) having code to look through is always the fastest for me :). haha don't worry :D I love discussing these things. it's definitely one of the great things to discuss and see other peoples opinions on things. I mean after all this is open source. and if I did not care about others I would make it closed :D but I really really enjoy getting feedback, having discussions, iterating, making issues, fixing issues, improving and making it awesome! :D \nrelated to your RTFM :D I am the RTFJD (:P javadoc) or RTFC (code :P) \nbut after all there are different personalities there are different approaches to serve for all cases. :)\nrelated to your story. I think for me it's like I grew up trying to understand things, fiddle around, temper around, digging into, trying to understand, and then learn from the basics to know how a specific thing works. so I always fiddle around when I use a component and the public methods are not self describing, to see if there is some code hidden, if I can take it apart or make it behave the way I want ;) \nso about improving the readme, or improving the description. \nPlease feel free to open a PR :) I am really really always happy to get people contribute, as this makes a open source project, open source. :D\nThanks a lot for your continuous usage, and support :) and for taking the time to write these thoughts!. there is a 3rd type though :D people who neither learn by diving in, nor do they read instructions or dig a little bitter, and also google is no option for those :D \nluckily this type isn't too common :D. \ndon't worry :) \nand please. if you have ideas on how to make stuff better. just open a PR ;) . no worries :) and no stress :D. potential duplicate of: https://github.com/mikepenz/FastAdapter/issues/703. @or-dvir I am so sorry. was on vacation in iceland for a week and had no chance to look at anything. \nI am still hoping that I can resolve the other ticket I linked you. just in case could you please create a sample app which showcases the problem or a branch to showcase the problem in the sample app, so I can hopefullly have a quicker look at it on the weekend?. do you use the abstract expandable item for this? \ncould it be that the reference of parent to childs might be not done properly? . other than that I'd definitely need some sample to try to debug this. otherwise it's searching around in the dark :( sorry. . Ok now after seeing the problem, this one is actually rather easy described and solved. \nSo the problem is that you have a FastAdapter<EpisodeAdapterItem>. That would mean it only accepts this type of items. Adding a sub child adapter holding other items might be allowed (due to the fact that generics are not really helpful to prevent such a usage), but it will crash during runtime. \nInstead you need to use a type for the FastAdapter which is valid across all child items you will hold in the adapter. \nIt might be that your implementation has a combined parent type, or it might be ModelAbstractItem, or AbstractItem, but one thing which is always true is the IItem interface. \nSo if you adjust the FastAdapter to be FastAdapter<*> it will allow all kind of items and it will not lead to the crash. \n\nTo be a bit more specific. \nThe FastAdapter is the global managing instance which wraps like an umbrella around all child adapters, thus the FastAdapter must accept all child items you might add. \nIf you have a FastAdapter<*> it does not matter how many different ItemAdapter, ModelAdapter with all sorts of different items you add. \nbut if you have a FastAdapter<FancyItem> it will only be able to handle adapters with this item type (ItemAdapter<FancyItem> or any item which extends FancyItem basically ItemAdapter<T extends FancyItem>)\nHere's your code adjusted to make it work. (this btw. might not be the best thing, there are possibly other variants to have for example FastAdapter<IItem<*, *>> but having FastAdapter<*> worked during testing :D)\n```java\nclass ActivityMain : AppCompatActivity() {\n    private lateinit var mAdapterEpisodes: ModelAdapter\n    private lateinit var mAdapterRv: FastAdapter<>\n    private lateinit var mActionModeHelper: ActionModeHelper<>\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_main)\n\n    rv.apply {\n        addItemDecoration(DividerItemDecoration(this@ActivityMain, DividerItemDecoration.VERTICAL))\n        layoutManager = LinearLayoutManager(this@ActivityMain, RecyclerView.VERTICAL, false)\n        setupAdapter()\n        adapter = mAdapterRv\n    }\n\n    mAdapterEpisodes.add(\n            EpisodeEntity(\"item 1\"),\n            EpisodeEntity(\"item 2\"),\n            EpisodeEntity(\"item 3\"),\n            EpisodeEntity(\"item 4\"),\n            EpisodeEntity(\"item 5\"),\n            EpisodeEntity(\"item 6\"),\n            EpisodeEntity(\"item 7\"),\n            EpisodeEntity(\"item 8\"),\n            EpisodeEntity(\"item 9\"),\n            EpisodeEntity(\"item 10\")\n    )\n}\n\nprivate fun setupAdapter() {\n    mAdapterEpisodes = ModelAdapter { episode ->\n        val subItem = listOf(EpisodeAdapterSubItem(\"${episode.text} sub item\"))\n        val finalItem = EpisodeAdapterItem(episode)\n        finalItem.withSubItems(subItem)\n\n        finalItem\n    }\n\n    mAdapterRv = FastAdapter<IItem<*, *>>().addAdapter(0, mAdapterEpisodes as IAdapter<IItem<*, *>>)\n            .withSelectable(true)\n            .withSelectOnLongClick(true)\n            .withMultiSelect(true)\n            .withOnPreClickListener { v, adapter, item, position ->\n                if (item is EpisodeAdapterItem) {\n                    //if actionMode is active, it means the the users' clicks\n                    //should select another item and NOT expand it\n                    item.autoExpand = !mActionModeHelper.isActive\n                }\n                mActionModeHelper.onClick(item) ?: false\n            }\n            .withOnLongClickListener { v, adapter, item, position ->\n                //this is just so selecting an item will not trigger \"onClick()\"\n                true\n            }\n            .withOnPreLongClickListener { v, adapter, item, position ->\n                //if we have no actionMode we do not consume the event\n                mActionModeHelper.onLongClick(this, position) != null\n            }\n            .withSelectionListener { item, selected ->\n\n                //NOTE:\n                //the \"selected\" parameter is the state of the item AFTER\n                //the selection/de-selection\n\n                val numSelected = mAdapterRv.selected.size\n\n                //when selecting our first item on the list,\n                //collapse all expanded items.\n                //this will make it easier for the user to select more items without having\n                //to scroll past the expanded items (which may be long)\n                if (numSelected == 1)\n                    mAdapterRv.collapseAll()\n\n                //NOTE:\n                //this if-else statement makes it so that\n                //once an item is selected, selecting other items could be done via\n                //a regular click (tap).\n                //once all items are de-selected, re-enable long click\n                //for selecting items\n\n                if (selected)\n                    mAdapterRv.withSelectOnLongClick(false)\n                else if (numSelected == 0)\n                    mAdapterRv.withSelectOnLongClick(true)\n            }\n\n    (mAdapterRv as FastAdapter<IItem<*, *>>?)!!.addExtension(ExpandableExtension<IItem<*, *>>()\n            .withOnlyOneExpandedItem(true))\n\n    mActionModeHelper = ActionModeHelper(mAdapterRv,\n            R.menu.context_menu,\n            object : ActionMode.Callback {\n                override fun onActionItemClicked(mode: ActionMode,\n                                                 item: MenuItem): Boolean {\n                    mode.finish()\n                    return true\n                }\n\n                override fun onCreateActionMode(mode: ActionMode,\n                                                menu: Menu): Boolean {\n                    return true\n                }\n\n                override fun onPrepareActionMode(mode: ActionMode?,\n                                                 menu: Menu?): Boolean {\n                    return false\n                }\n\n                override fun onDestroyActionMode(mode: ActionMode?) {\n                    /*do nothing*/\n                }\n            })\n}\n\n}\n``. 1.) making an item not selectable will only prevent the user not selecting it, you can very easily still select it programatically. the programmatic selecting/deselecting is always valid. \n2.) in the sample you provided it happened for all items\n3.) exactly. so if you have a common type of your items you can use that. in the end theIItemis always the main thing true for all. so I believe (not sure if that's 100% right for kotlin)*would just mean that you can add all elements which implementIItem(as this type is defined in the FastAdapter generic definition. \n4.) the readme does not go up to type safe usage. it uses aFastAdapter` without a type. so it is not needed there. The sample showcases it in the multi type samples :). but as this is open source. I am happy to take a PR to add this into the FAQ section . The provided link does no longer exist. \nalso the extension is meant with the FastAdapter for the RecyclerView. I don't believe that it is very great to have it in another nested scroll view. highly depends on the usecase though. \nand the animation case seems normal to me, it's just how the recyclerview and it's itemanimator handle it. \nThat's unrelated to this library. \nThe Fastadapter only provides the elements, and does not animate or anything. \nyou add items. and the adapter will notify the adapter accordingly with the notify* methods. which will do the default behaviour of the RV depending on the itemAnimator and the ayoutmanager. @denisraison well theoretically you could do something like this by implementing your own ItemList which you use with the FastAdapter. \nIt is important though that the correct updates are always forwarded to the adapter. if an item is moved, removed, ... and this needs to happen on the UI thread. \nSee more here:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/utils/ComparableItemListImpl.java. @mahdighaemi123 I am not sure what you mean. \nthe FastAdapter extends a normalRecyclerView.Adapter` \nplease see the sample app where it is in use without any problems :). please report back. closed for the time being. you need to add the expandable extension. \nSee the README. Sorry this was a really stupid bug. Released a bugfix release just for this very specific thing. Please wait a few minutes until the artifact is available :). The DragDropUtil is not designed to handle sub levels for drag&dropping. \nIn general it is definitely possible. it only requires some additional handling, as sub items are not handled in the main list of items.\nSo it is important to handle the case in which a sub item (which is not in the main item list, but in the current list displayed by the adapter. (as this item only lives as a child in the list of it's parent) \nAs such positions have to be adjusted and handled accordingly. Please report back if you need additional details. @Androidjent well there is no direct API to get those positions. It's a rather advanced and tricky thing you are trying to achieve. and as mentioned there is sadly no native support for this at the time being. \nThere are for example recursive util functions to better work with the hierachy: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1439 \nSomebody wrote a SubItemUtil at some point: https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/utilities/SubItemUtil.java\nPerhaps some of the code is of use for you. Released a pre-alpha release with non final api's as: 4.0.0-alpha1, so that we can start to make the MaterialDrawer compatible with the breaking changes. This can be tested by using its latest release v4.0.0-beta1. The final release of v4 is getting closer and closer :D \nTo everybody interested. Please give it a try and give some final thoughts. \nimplementation 'com.mikepenz:fastadapter:4.0.0-rc01'. @MFlisar if in your case you can generate an identifier based on the item contents, you should definitely overwrite the getIdentifier() method and return the appropriate, unique identifier. so that the same data will have the same id. that's possible in special cases, but be warned that you still have to ensure that the 2 different object instances with the same data are not added, otherwise you would have conflicting id's. \nAnd @FabianTerhorst already mentioned it correctly that the behavior is working as intended :). As mentioned if you have a clear defined logic how you get an identifier from your object then you should overwrite the getIdentifier and supply your own logic (or you just set the identifier based on that logic) \nThat's basically the standard behavior of the RecyclerView itself. The FastAdapter only packs it in a nice simple usable construct per item. instead of per recyclerview which makes it easier to reuse. You don't need\njava\nfastAdapter.notifyAdapterDataSetChanged();\nfastAdapter.notifyDataSetChanged();\nif you use the methods to add items via the ModelAdapter these things are handled automatically for you. \nIndependent of that, I am not sure what the actual problem is? Can you please elaborate a bit more?. I still do not understand the issue. \nIf you want to set a new list of items to the adapter just use the corresponding API methods from the ModelAdapter or ItemAdapter. \nPlease read the javadoc and have a look at the samples. \nThe question seems not really related to the FastAdapter. the adapter offers simple methods like add or set.\nitemAdapter.add(ITEMS);\nJust look at the sample app. it showcases this. . You may consider using StackoverFlow to ask beginners questions. \nGitHub issues on libraries are absolutely the wrong place for that. \nGood luck!. seems like a duplicate. Your items hashcode, and equals method have a proper implementation? \nThe default is by identifier, if you base on the AbstractItem, if you use the interface alone you should implement these.. and the new items definitely have the same identifier?\nit definitely should work without a flicker as it does in the sample, and various apps I use it in.. no I mean the unique identifier per actual element in your list: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java#L43. Well the FastAdapterDiffUtil is just a convenience class to simplify usage directly. \nYou can use the DiffUtil directly too but you will have to take care of more stuff on your own. \nBtw. the identifier should always be unique for elements. by default the IdDistributor will give it a unique id every time a new element is created. which will make the element different than a previous one with the same data, because it simply can't know that. \nSo it is always important if you can get a proper identifier that you also define your logic or set proper identifiers :) . Just one more additional detail. the \"identifier\" is nothing specific to the FastAdapter it is a general definition by the RecyclerView.Adapter and should already be implemented in an according way there too (without any lib). \nThe FastAdapter only offers a more \"easy\" handling for it for most super simple usecases. @sid-dob please make sure your adapter type definition is a super type of all your items. \nIf you have the following\nSuperType\n- ChildTypeA extends SuperType\n- ChildTypeB extends SuperType\nThen the following applies\nFastAdapter is only supposed to have ChildTypeA as content, that is also true for sub types (sadly Java's generics is not powerful enough to limit that) \nFastAdapter is only supposed to have ChildTypeB as content\nFastAdapter you can use both types inside this adapter. What type definition does your adapter have? \nFastAdapter<IItem>\nFastAdapter<ProductDetailExpandableItem>\nFastAdapter<AbstractExpandableItem>\nThe first super type of your items is the AbstractExpandableItem so you can do FastAdapter< AbstractExpandableItem> alternative IItem will work always. you don't have to use\nfastItemAdapter.notifyDataSetChanged()\nfastItemAdapter.notifyAdapterDataSetChanged()\nfastItemAdapter.notifyItemChanged(0);\nthe adapter updates on it's own. \nensure your item has a different unique identifier (if it is equal then the RV will optimize and show the same). And most important ensure it happens on the UI thread. https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java#L43\nthe identifier, which is the identifier the RV uses. by default the IdDistributor will assign a unique ID. Just to ensure that this is also the case for you, or that you provide your own unique id. \n(That's the value returned here for the adapter: https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#getItemId(int) ). Do you have multiple items with the same type id? \nThe type must be unique per item type. . @lbenedetto hmmm perhaps you can provide a sample (or do modifications in the sample app of the library) to showcase the issue?. Oh well you only set the text inside getViewHolder() which is not correct.\nyou need to properly implement the bindView method which is called when the data gets bound to the view.\njava\n    @Override\n    public void bindView(CustomItemViewHolder holder, List<Object> payloads) {\n        super.bindView(holder, payloads);\n        holder.textView.setText(displayValue);\n    }\nThe getViewHolder is only supposed to return the viewholder nothing else. Well you need the ExpandableExtension to do that. \nTheoretically you can do this due to some nice facts :D. \nSo when binding the data to the view, the itemView gets the FastAdapter set as tag:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/listeners/OnBindViewHolderListenerImpl.java#L22-L36\nSo you can do this:\njava\nObject tag = holder.itemView.getTag(com.mikepenz.fastadapter.R.id.fastadapter_item_adapter);\nif (tag instanceof FastAdapter) {\n     ... get the extension from the fastAdapter, do you action\n}. ItemFilter.getSelections()\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ItemFilter.java#L132. Well that is a tricky thing, because you want to make it right. You don't want to reference unnecessary things to not leak anything. \nThe best would to use dependency injection and just inject these things. \nIf you do not have dependency injection. It would be a possibility to give them to your \"item\" during item creation and then access it in bindView. You can also set it to the model, but that most likely is not as nice. . Thank you very much ;). Thank you very much. You could disable the ItemAnimator while setting the filter. Not the filter is animating, the RecyclerView itself automates because the dataset is replaced. \nAlso remember that filtering happens async via the Filter. If filter is called it will do performFiltering and then it publishes the results after done. . Did the answer help you?. This is not really an issue of the FastAdapter but more a general RecyclerView question, specifically related the StaggeredGridLayoutManager \nPlease refer to the official documentation of the LayoutManager to see if it supports what you need. \nFor the GridLayoutManager you'd have to supply the SpanSizeLookup to tell it how many \"columns\" a specific element should occupy:\nhttps://github.com/mikepenz/FastAdapter/blob/2c85956eb755e4ce44c5a5bd64999529afc94866/app/src/main/java/com/mikepenz/fastadapter/app/IconGridActivity.java#L62\n. @eakteam that's impressive. Please let us know if there are things which can be further improved. If there is something which is inconvenient or confused, now is the time to still improve :) \nHappy to hear that so far everything seems working. . Thank you very much, I really appreciate this! \nJust had a look at the application. it contains quite a long list of functionalities.\nIf you have suggestions to improve v4 please let us know.. @eakteam we decided as FastAdapter is now 100% kotlin we should also improve comaptiblity with kotlin and use kotlin interface types for the listeners instead of interfaces to allow lambdas. \nthis allows you to write even shorter code, and simplifies the code in general. \nE.g. you do no longer go the complex route to specify the whole filter. just directly pass in the lambda to the filter predicate. @eakteam yes sure :) \nSo instead of: \nfastadapter.onClickListener = object: OnClickListener<SampleItem> {\n            override fun onClick(v: View?, adapter: IAdapter<SampleItem>, item: SampleItem, position: Int): Boolean {\n}\nyou can now use a lambda and write directly:\nfastadapter.onClickListener = { v, adapter, item, position -> \n     true\n}\nand instead of\nkotlin\nitemAdapter!!.itemFilter.filterPredicate = object: IItemAdapter.Predicate<SampleItem> {\n            override fun filter(item: SampleItem, constraint: CharSequence?): Boolean {\n                return item.emri.toLowerCase().contains(constraint.toString().toLowerCase())\n            }\n        }\nyou can now simply write:\nkotlin\nitemAdapter!!.itemFilter.filterPredicate = { item, constraint ->\n    item.emri.toLowerCase().contains(constraint.toString().toLowerCase())\n}. sadly kotlin does not allow this notation if a interface written in kotlin is used. only for java interfaces. \nkotlin favors kotlin function types which we embrace now :). I am really sorry that we had to put that in, but we felt like this is a super important upgrade to help the code get more simple :) \nnot sure if you use expandables, but there was also a tiny change for the IParentItem interface, which should make the usage of it more convenient. . @Hub2018 if you jump on the v4 branch. we have already migrated the full sample app to kotlin: \nhttps://github.com/mikepenz/FastAdapter/tree/feature/v4\nFor example the main activity: \nhttps://github.com/mikepenz/FastAdapter/blob/feature/v4/app/src/main/java/com/mikepenz/fastadapter/app/SampleActivity.kt\nThe sample app for v4 has the same contents, just everything updated to the new version. If you have any questions, or suggestions for improvements please let us know. . Very interesting. thank you so much for the very detailed report. \nIs it somehow possible to reproduce this issue also in the sample app? \nor just with this very particular data set in your app?. v4.0.0-rc03 will most likely add a few changes to your code (if you use java7 and not java8 lambdas) but it still should play nicely with java :) . @eakteam sadly there's not much I can do about it. maven decides on its own how to order it. (\"-support\" was a version I had to do for one of my internal projects to allow the use of kotlin, but not using androidX, that's why it is only 2 modules)\nit should be fine as soon as the full release is available. should be Chain\n. ?? perhaps you add a sample :D\n. I will wait for the PR :D\n. you mean if you set a new comparator it should automatically sort using this one?\n. I can it add for set() to. Haven't done this as I thought it doesn't make so much sense but yeah\n. OMG this is my issue. shouldn't be public ^^ https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L94\nDoes it really make sense to save the comparator in the savedInstanceState as it does not reflect any state. might would be better to save an int which reflects the current sorting type\n. @rubengees it should be part of the sample as the library-extensions comes with it\n. the onClick should still be available without an AppCompatActivity\n. does this have to be an integer? I think int should be fine\n. Shouldn't this also have a generic type?\n. If an adapter is typed you will just have this specific type in general. You still can have it non-typed which will then result in IItem (that's the same for the adapters)\n. Yes. What would you  need?\n. It's just needed to pass in the FastAdapter instead of FastItemAdapter \n. here too\n. view nullable, viewHolder notNull\n. should not be private. this one should also be public (as you are allowed to provide your own ItemFilter. great :). getTypeInstanceCache is anyways just returning the TypeInstanceCache per FastAdapter so it'S fine. or do I miss something?. ",
    "hendrawd": "Is the fast scroller function working as expected here? Because i downloaded the application from google play, but the fast scroller function is not working. The activity that i choose is SimpleItemList Sample(FastScroller, Filter, Drag&Drop)\n\n. But is it still support fast scrolling? Especially with fast scroller indicator/thumbnail/preview like alphabet section indexer from listview?. Yes i checked it and it's working, thanks a lot!. Yes actually https://github.com/timehop/sticky-headers-recyclerview/pull/106 has fix for gridview, i am trying it now. @ClarkXP To be honest my attempt to fix that failed, and I changed to https://github.com/FutureMind/recycler-fast-scroll and implement https://github.com/FutureMind/recycler-fast-scroll/blob/master/fastscroll/src/main/java/com/futuremind/recyclerviewfastscroll/SectionTitleProvider.java , but the library is not active(last update 2 years ago), you might want to consider that.. ",
    "Rainer-Lang": "Yes, would be pretty helpful. \n. What do you mean with this? \n. not good\n. Items shouldn't be erased only invisible\n. @mikepenz everytime a pleasure :-)\n. I need the items\n. Both are interesting: positions and the selected items\n. But the result should be parcelable to put it in a bundle.\n. Thanks \n. The source of the sample is great! There are more ideas and possibilities to use this lib than in docu could be. ;-) \nI NEVER saw another lib with such a lot of examples - especially with the use of other libs.\n. True :-D\nI had a few discussions with Mike about docu in past....  ;-) \nBut.... to be honest - we other devs could help here too. PRs.... ;-) \n. It's Mike, not Mark ;-)\nActually I tried and used a lot of other RV-libs out there..... Tried the with the usage/in combination of other libs (header, search/filter, actionmode, swipetorefresh,...).\nI'm glad to have this lib now!\nAll is now so - easy... :-D\n. Why closed? \n. Merge?\n. @mikepenz If no one else answers or writes....\nI have to tell you: THANKS - your libs (all of them!) are really great - and you spend so much time for making others devs lifes easier. Your support is indeed superb and exceptional!\nThanks.\n. Could you please make an example of this:\n\"useful FooterAdapter to add a progress bar to the end of the list\"\nAnd thank you for helping Mike. \n. That's really great! \nI like how FastAdapter is growing. \nI'm also waiting for the swipe feature. \n. Maybe you want to add an example? \n. @mattiasbe I would suggest to make better a new example - than merging all together. Could end up a bit confusing. :)\nWould be also better to discuss....PR...\n. Looks awesome.\n. @mattiasbe Such nights are great :-D\n. @jonas-arkulpa I'm sure @mikepenz will do it as fast as he's able to do it. Good development - and even life besides computer - takes time. :)\nYou wrote that you're using FastAdapter, maybe you could write some sentences in this thread? https://github.com/mikepenz/FastAdapter/issues/41\n. @mattiasbe It's great! I just tried the example. :+1: Thank you for your effort.\n. @hmedat2008 Does the sample of @FabianTerhorst helped you?\n. Simply make 2 models with views for each. Put them both in the ItemAdapter.\nIt's really easy - just try it. :) :+1: \n. You only have to use one adapter. \n. Something like that:\n```\nthis.fastAdapter = new FastAdapter();\nGenericItemAdapter itemAdapter = \nnew GenericItemAdapter(o -> {\n    //depending on your logic you can now decide which model maps to which item.\n    if (o instanceof Pic) {\n        return new GenericPic((Pic) o);\n    } else if (o instanceof Text) {\n        return new GenericText((Text) o);\n    } else {\n        throw new IllegalArgumentException(\"The passed model can't be created within this Factory\");\n    }\n});\nthis.list.setAdapter(itemAdapter.wrap(fastAdapter));\nitemAdapter.addModel(new Text(\"TEXT\"));\nitemAdapter.addModel(new Pic(\"PIC\"));\n``\n. @DJafari It's ok - it works. \n. no way - you \"wanted\" this ;-)\n. @FabianTerhorst But this is \"normally\" not possible... Like in my situation.\nBut you're right - it could work for @DJafari\n. @FabianTerhorst @DJafari Please have a look at https://github.com/mikepenz/FastAdapter/issues/41 \nThanks\n. @mikepenz In your way I have to get all items from adapter, sort them and then put them back in the adapter? Is this correct?\n. @mikepenz And for \"only\" re-sorting, which method would you suggest?\n1)set()2)setNewList()`\n. @rubengees Please take a look at the newest version. \n. @rubengees Would you like to provide this project with a little sample to this feature?\n. @rubengees https://github.com/mikepenz/FastAdapter/blob/develop/CONTRIBUTORS.md :+1: \n. Thanks for contributing. \n. Did you look in the examples - there should be 2: One at the starting (with images) and the other one SimpleItemListAcitivity (you already found it).\nPlease have a look into the layout-xml files and in the bindView() of these examples.\nFirst of all I would suggest to use a FrameLayout and in bindView() use this:\njava\nviewHolder.view.setForeground(FastAdapterUIUtils.getSelectablePressedBackground(ctx, FastAdapterUIUtils.adjustAlpha(<the color you want to show for selection>, 100), 50, true));\n. @jlelse Does the sample of @FabianTerhorst helped you?\n. @jlelse Could I ask you how you solved it?\n. @mikepenz and @FabianTerhorst Thanks. :+1: \n. Please look ar the examples. Radio or checkbox\n. Maybe you would like to try a pr? \n. Please let us know if we could help you. \n. @rubengees Thanks for this pr :+1: \n. Try a SwipeRefreshLayout http://developer.android.com/intl/es/training/swipe/add-swipe-interface.html \n. @brittonjg Then you load previous items from a server when user reaches top?\n. @brittonjg Yes this explains it. :)\nSo SwipeToRefresh is no option for you - I see.\n. @FabianTerhorst Maybe you could give a tip?\n. @brittonjg I'm glad you did it :+1: perfect!\n. @EpsilonOrionis Is your question answered? All works fine?\n. This could maybe help...\n``` java\nFastItemAdapter.withOnCreateViewHolderListener(new FastAdapter.OnCreateViewHolderListener() {\n    @Override\n    public RecyclerView.ViewHolder onPreCreateViewHolder(ViewGroup parent, int viewType) {\n        return mFastItemAdapter.getTypeInstance(viewType).getViewHolder(parent);\n    }\n@Override\npublic RecyclerView.ViewHolder onPostCreateViewHolder(final RecyclerView.ViewHolder viewHolder) {\n    if (viewHolder instanceof ListaFotosArtAdapter.ViewHolder) {\n        mClickListenerHelper.listen(viewHolder, ((ListaFotosArtAdapter.ViewHolder) viewHolder).picDescripcion, new ClickListenerHelper.OnClickListener<ListaFotosArtAdapter>() {\n            @Override\n            public void onClick(View v, int position, ListaFotosArtAdapter item) {\n                new MaterialDialog.Builder(ListaFotosArt.this)\n                        .title(\"Descripci\u00f3n\")\n                        .content(item.mDescripcion)\n                        .positiveText(\"OK\")\n                        .show();\n            }\n        });\n\n        mClickListenerHelper.listen(viewHolder, ((ListaFotosArtAdapter.ViewHolder) viewHolder).picFoto, new ClickListenerHelper.OnClickListener<ListaFotosArtAdapter>() {\n            @Override\n            public void onClick(View v, int position, ListaFotosArtAdapter item) {\n                new MaterialDialog.Builder(ListaFotosArt.this)\n                        .title(\"Foto\")\n                        .content(item.mFoto)\n                        .positiveText(\"OK\")\n                        .show();\n            }\n        });\n    }\n\n    return viewHolder;\n}\n\n});\n``\n. @seba123neo I only use this for !ImageView. Sorry. Maybe a bug inClickListenerHelper. @mikepenz there is a github project like \"android proguard snippet\". Your libs could be added there. \n. @mikepenz Only one group could be expanded at the same time?\n. Makes sense - stop \"evaluating\" ;-)\n. @mikepenz Thanks. Now I know where to put it. I will close this issue and prepare a pr.\n. @mikepenz And what will happen if the filter is empty? Will the selections be restored?\n. That's not \"nice\". ;)\n. @R4md4c Please try the newest version of FastAdapter and Extensions.\nhttps://github.com/mikepenz/FastAdapter/releases/tag/v1.4.0\n. @jlelse If you figured it out, maybe you can contribute to this project and provide an extended example? :+1: \n. Set background in bindView. \n. Maybe with this:viewHolder.getAdapterPosition()`\n. So selections are managed by the identifier?\nThe old behavior is by position. Right?\n. Could you please give more information?\n. @dexion Maybe this lib helps: https://github.com/ShamylZakariya/StickyHeaders\nWhen you tried it, please give a short feedback. Thanks.\n. @ncapdevi Did you already search for another - still maintained - lib? btw how do you know if the lib isn't still maintained?\n. @ncapdevi Maybe this lib helps: https://github.com/ShamylZakariya/StickyHeaders\nWhen you tried it, please give a short feedback. Thanks.\n. ...and it is working great.\n. Could you even submit/pr your solution? Maybe as another example? Would be great! \n. Yours is working, so yours. \nDid you try Mike's solution? \n. I think - yes \n. I'm sure it's in the sample app. \n. Use generic where view and model are separated. Model could be parcelable. \n. @MFlisar Please let me know if you need further information.\n. It's not a good style to delete the question... \n. @AhmedDonkl Your question was interesting and I even wanted to know if my solution is the \"best practice\"- or if there is another better one.\n. Thanks. I'm also using the holder context. \n. Could you post your solution? So others could learn. :-)\n. For filter please make a separate issue. It's not related to this issue. \n. Would you like to make a sample with your solution? . @MFlisar thanks . @hsdmiranda Just wanted to ask, if you got it working.\n. @hsdmiranda I'm glad you did it. Could I ask for the solution? \nIt's also nice to have here the solution if someone else is searching for the same. \nThanks.\n. @hsdmiranda Thanks. If you have a bit time, may I ask you to contribute to this great lib and make a sample?\n. @FabianTerhorst Could you add a small description to this PR - about the background of this PR? Thanks.\n. That's up to your usecase. \n. @mikepenz Is there an ETA for FastAdapter v2?\nBTW, I had the same error. :)\n. @mikepenz So and what could I do if I want my ClickListener within my item?\nAnd what's about: https://github.com/mikepenz/FastAdapter/blob/3b5f1af9702762e84cef8e6b9d8abcbf93fd1958/app/src/main/java/com/mikepenz/fastadapter/app/items/SwipeableItem.java#L169\nIs there already something in v2 to look at?\n. @sumitsahu2207 I only could take about myself.... But \"normally\" I use GenericItems (there are samples in this repo here), so I split my View-item and Model-item. My models are AutoValue classes ( https://github.com/google/auto/tree/master/value ) with usage of Auto-Value-Parcel ( https://github.com/rharter/auto-value-parcel ).\nMaybe you could give some code examples what are you doing and where the problem occurs.\n. Maybe this lib could be used: https://github.com/VictorAlbertos/SwipeCoordinator\n. What do you mean with \"addItem\"? \nFirst add your item, then retrieve the position. \n. Did you try v2? \n. In v2 there are really a lot of changes. I don't know exactly which ones.\n. @WonderCsabo OK. Then let's wait for Mike. :)\n. I also migrated and it's fine. \n. Keep calm :) \n. There are examples in the demo app. @mikepenz @FabianTerhorst Suggestion: Make more screenshots of the examples. Devs LOVE images ;). See sample with predicate.filter . @mikepenz Do you remember the starting of FastAdapter and our talk about the \"stars\" of this lib? :)\nYou didn't believe..... Now this lib has 1,240 STARS \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d . In the sample code you should find something. . What do you suggest? . @k3b It would be cool. . But is this the expected behavior... to reset the filter? . Use the animators of Mike Penz. They work really fine.\nhttps://github.com/mikepenz/ItemAnimators . @baadillahnabil Please have a look at the included sample app.. @frmz I think the same was like you. \nSent from my LGE Nexus 5 using FastHub. @FabianTerhorst Will be the examples like EndlessScroll even updated to v3, eg with the new EndlessScrollHelper?. @Pantkowsky Have a look here: https://github.com/mikepenz/FastAdapter/issues/483\nMaybe you want to test a bit and help to get v3 \"faster\" released. ;-)\nv2 is already really AWESOME!. Did you try EventHook? \nhttps://github.com/mikepenz/FastAdapter/blob/78e4608042a8b44c1be5fb0e634ae074ef498a97/README.md#4-click-listeners-for-views-inside-your-item \nand see here:\nhttps://github.com/mikepenz/FastAdapter/blob/edf6154d0183f72e7352cef5c382e3af7dcc5531/app/src/main/java/com/mikepenz/fastadapter/app/ImageListActivity.java#L74\nHope this helps.. Same here. Maybe change in the support libs... . I'm even stuck to 2.6.2. Other way around - does this also happen in v3?. Why not :)\nI will add it later in this PR.\n. @rubengees Then you can use AppBarLayout :)\n. Looks good for me.\n. Why View.VISIBLE and not View.INVISIBLE or View.GONE?\n. ",
    "ankitbatra11": "https://github.com/timehop/sticky-headers-recyclerview is no longer maintained. Are you planning to replace the example with https://github.com/emilsjolander/StickyListHeaders?. I don't know the issue but there is a newer version 5.8.2 of material drawer available. You may want to try with that too.. Did you set an item animator on RecyclerView?. I can't access my Mac right now but it must be recyclerview.addItemAnimator(new DefaultItemAnimator()). ",
    "FabianTerhorst": "You could use the https://github.com/google/iosched/blob/master/third_party/sticky-headers/StickyHeaders/src/main/java/io/doist/recyclerviewext/sticky_headers/StickyHeadersLinearLayoutManager.java its an slim version of the recyclerview extensions from doist.. @mikepenz when im calling mItemAdapter.notifyDataSetChanged(); it doesn\u00b4t crashes too, but when the data comes from a api for example and you get 3 items and before you got 4 items, you couldn\u00b4t know that.\n. @mikepenz thanks, creating a new ArrayList works.\n. @EpsilonOrionis the readme is not updated to version 0.9.0 . Should be @Override\n    public void bindView(ViewHolder holder) { instead of @Override\n    public void bindView(RecyclerView.ViewHolder holder) {\n. - time saver, you don\u00b4t have to create a new Adapter class for every new object that has to be in a recyclerview\n- no need to use getItemViewType anymore, just create a object, the layout and add it to the list\n- easy to migrate and less code, from a project with 20 and more entity objects which had to be in the same recylcerview, could fast migrate the entities to adapter items and after the migration i could remove thousands useless lines of code and classes.\n- very good code documented and self understanding api\n- useful FooterAdapter to add a progress bar to the end of the list\n- better performance, the scroll performance is way better then a normal recyclerview adapter\n- library size, the library is very small and doesn\u00b4t make the app noticeable bigger\n- expendable items are easy to add in a few minutes\n- production ready and safe to use\n. @Rainer-Lang thats a great idea. I will take a look into this tomorrow. I could also add a endless scroll listener.\n. load more is handled by a recylcerview scroll listener. I dont thinks this is handled by a adapter. Take a look at: \n```\npublic abstract class EndlessRecyclerOnScrollListener extends RecyclerView.OnScrollListener {\n    public static String TAG = EndlessRecyclerOnScrollListener.class.getSimpleName();\nprivate int previousTotal = 0; // The total number of items in the dataset after the last load\nprivate boolean loading = true; // True if we are still waiting for the last set of data to load.\nprivate int visibleThreshold = 30; // The minimum amount of items to have below your current scroll position before loading more.\nint firstVisibleItem, visibleItemCount, totalItemCount;\n\nprivate int current_page = 1;\n\nprivate LinearLayoutManager mLinearLayoutManager;\n\npublic EndlessRecyclerOnScrollListener(LinearLayoutManager linearLayoutManager) {\n    this.mLinearLayoutManager = linearLayoutManager;\n}\n\n@Override\npublic void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n    super.onScrolled(recyclerView, dx, dy);\n\n    visibleItemCount = recyclerView.getChildCount();\n    totalItemCount = mLinearLayoutManager.getItemCount();\n    firstVisibleItem = mLinearLayoutManager.findFirstVisibleItemPosition();\n\n    if (loading) {\n        if (totalItemCount > previousTotal) {\n            loading = false;\n            previousTotal = totalItemCount;\n        }\n    }\n    if (!loading && (totalItemCount - visibleItemCount)\n            <= (firstVisibleItem + visibleThreshold)) {\n        // End has been reached\n\n        // Do something\n        current_page++;\n\n        onLoadMore(current_page);\n\n        loading = true;\n    }\n}\n\npublic abstract void onLoadMore(int current_page);\n\n}\n```\nrecyclerView.addOnScrollListener(new EndlessRecyclerOnScrollListener((LinearLayoutManager) recyclerView.getLayoutManager()) {\n            @Override\n            public void onLoadMore(int current_page) {\n               //load items for page current_page\n            }\n        });\n. Have you tried the footeradapter?\n. footerAdapter = new FooterAdapter<ProgressItem>()\nfooteradapter.wrap(itemadapter.wrap(fastadapter))\nIn the footeradapter you add your progressitem. You can use a progress spinner in the progress item layout. and when the items are loaded just clear the footeradpater and add a new item footeradapter.add(footeradapter.getGlobalPosition(lastposition), new ProgressItem())\n. @DJafari you have to define a generic type to the adapter. Your adapter items has to extend this type. For example \nGenericItemAdapter<Model, IItem> itemAdapter = \nnew GenericItemAdapter<Model, IItem>...\nYou have to change the return type from the apply method too.\n. @DJafari your models has to extend from the same object, like the adapter items.\n. @DJafari ok, when your GenericItems cant extend from the same object you just have to ignore the warning.@SuppressWarnings(\"unchecked\")\n. @brittonjg you could create a recyclerview on scroll listener to calculate the current visible item and start the video on this one. Toro is optised for this: https://github.com/eneim/Toro\n. For this i think we have to create another class with opposite logic.\n. The new support lib version adds a new fling listener. Haven\u00b4t looked into it, but maybe its useful for that.\n. @EpsilonOrionis you can add a footer adapter \nfooteradapter.wrap(itemadapter.wrap(fastadapter));\nfooteradapter(new Item());\nfooter items are added at the bottom of the list.\n. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/ExpandableItem.java#L109\n. #89\n. i have to update the fork one moment...\n. Directions from the item touch helper should be configurable. Left and right is needed for a grid with more then one column.\n. @jasonsparc nice catch.\n. #96\n. @R4md4c mTotalItemCount is getting updated on every scroll. When there are not enough items to scroll then it could happen that the count isn\u00b4t updated anymore. Im not sure if there is any listener for the RecyclerView or the adapter when a item got removed or added. The AdapterDataObserver isn\u00b4t the right listener for that.\n. @dsbeckham the visible threshhold is only calculated to let you and the listener know how many items are one page. When you don\u00b4t have a dynamic api thats accept different page counts you can define a specific number inside the constructor.\n. @dsbeckham \n```\nmList.addOnScrollListener(new EndlessRecyclerOnScrollListener() {\n            @Override\n            public void onLoadMore(int currentPage) {\n                resetPageCount();\n        }\n    });\n\n```\nor\n```\nEndlessRecyclerOnScrollListener listener = new EndlessRecyclerOnScrollListener() {\n            @Override\n            public void onLoadMore(int currentPage) {\n        }\n    };\n\nlistener.resetPageCount();\n```\n. Hi @markic22,\ni have updated the EndlessRecyclerOnScrollListener.  https://github.com/mikepenz/FastAdapter/commit/d64c664c4eb5c8ac95f45378c2e1ff98a0c4ae5b\n. @DJafari you can add another recyclerview inside your item, but subitems are below the parent item.\n. @alashow im also using withOnCreateViewHolderListener and don\u00b4t get the exception.\n```\n@Override\n    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        return ((AbstractItem) getTypeInstance(viewType)).getViewHolder(LayoutInflater.from(context).inflate(getLayoutRes((getTypeInstance(viewType)).getLayoutRes()), parent, false));\n    }\nprivate static int getLayoutRes(@LayoutRes int layoutRes) {\n    if (layoutRes == R.layout.item)\n        return R.layout.item..;\n    else if (layoutRes == R.layout.item...)\n        return R.layout.item....;\n    else if (layoutRes == R.layout.item....)\n        return R.layout.item...;\n    return layoutRes;\n}\n\n``\n. @alashow have you tried to usegetTypeInstanceinstead ofitemAdapter.getTypeInstance`?\n. @alashow i have extended the fastadapter to override the onCreateViewHolder method.\n. Have you builded the demo App from source? When I select 2 Items and rotate my device there stay selected. \n. @meNESS you could check the item if it is the item you are searching for.\nExample:\nIItem item = mItemAdapter.getAdapterItem(getFirstVisibleItem());\nif(item instanceof LotteryItem) {\n logForAnalytics(item. lottery);\n}\n. @shehabix have you tried to use the other endless scroll listener constructor thats needs the footeradapter? https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/scroll/EndlessRecyclerOnScrollListener.java#L28\n``` java\n recyclerView.addOnScrollListener(new EndlessRecyclerOnScrollListener(footerAdapter) {\n            @Override\n            public void onLoadMore(final int currentPage) {\n                footerAdapter.clear();\n                footerAdapter.add(new ProgressItem().withEnabled(false));\n                //simulate networking (2 seconds)\n                Handler handler = new Handler();\n                handler.postDelayed(new Runnable() {\n                    @Override\n                    public void run() {\n                        footerAdapter.clear();\n                        for (int i = 1; i < 16; i++) {\n                            fastItemAdapter.add(fastItemAdapter.getAdapterItemCount(), new SampleItem().withName(\"Item \" + i + \" Page \" + currentPage));\n                        }\n                    }\n                }, 2000);\n            }\n        });\n``\n. @shehabic its ignoring the item count from the footeradapter to calculate the current page and the page jump.\n. @jp1017 every adapter notify and item add has to be in the main thread. The app should throw a exception when this isn\u00b4t the case. This behavior is not related to this library.\n. The code isn\u00b4t enough to identify the bug. This is actually a question for stackoverflow.\n. @jp1017 im using RxJava with RxAndroid. And i have changed the subscriber thread to the main thread.\n. what is the name of the current thread?Thread.currentThread().getName()`\n. It's the update from the support Library that changed this. \n. I don't know what's the problem. The old Space was definitely to small. \n. The sub recyclerview should show up with a width of wrap_content.\n. You have to create a recyclerview inside your item layout. You can set the adapter in bindView or in  the viewholder constructor. When you do it in your viewholder constructor you can get a better performance. \n. @rmoreira0 yes like this. When you don\u00b4t need the data from the item itself you can also set the items in the viewholder constructor like you did.\n. Then you have to use bindView method to add items to the fast adapter.\n. make sure to clear the list every time bindview is called.\n. I don\u00b4t recommend you to use a recyclerview in a recyclerview because of this.\n. I migrated the recyclerview into an custom view with a own grid algorithm to decrease the rendertime down to 0.1ms\n. Maybe its because you are using kotlin and you are using MutableList?\n. https://github.com/mikepenz/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/scroll/EndlessRecyclerOnTopScrollListener.java\n. I would like to add it in the readme somewhere, but i don\u00b4t have time right now.\n. Why you removed the chaining after object initialization on some places?\n. You want to add compatibility to all layout managers, like the EndlessScrollListener? \n. It should be possible to use this without using the FastItemAdapter.\n. There is no reason for unbinding butterknife, because the viewholder is reused, even when an item that is using this viewholder got recycled.\n. please add \n```\n-keep public class android.support.v7.widget. { *; }\n-keep public class android.support.v7.internal.widget. { ; }\n-keep public class android.support.v7.internal.view.menu. { ; }\n-keep public class * extends android.support.v4.view.ActionProvider {\n    public (android.content.Context);\n}\n```\nto your proguard file.\n. Should the items that have different layouts be the same recyclerview, or is it a static setting for example, that is affecting all items?\n. An example for an static setting would be to override the adapter and set the correct adapter for the correct setting \n``` java\npublic class FastSmallItemAdapter extends FastItemAdapter {\n@Override\npublic RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n    return ((AbstractItem) getTypeInstance(viewType)).getViewHolder(LayoutInflater.from(context).inflate(getLayoutRes((getTypeInstance(viewType)).getLayoutRes()), parent, false));\n}\n\nprivate static int getLayoutRes(@LayoutRes int layoutRes) {\n    if (layoutRes == R.layout....)\n        return R.layout....;\n    else...\n    return layoutRes;\n}\n\n}\n```\n. The item should have an different id, but when you don\u00b4t override the id this shouldn\u00b4t be a problem for your case. You should also use different types when you use different layouts for the same item.\n. > is this an acceptable way of doing it?\nI had created a superclass with the bind method and x subclasses that are overriding the type and layout.\n. yes, its the same. Just a little bit cleaner. When im talking about the id, im talking about the identifier and with type the typeid.\n. You can use the Function interface to initiate the Item objects yourself as an constructor parameter of the generic adapter.\nhttps://github.com/mikepenz/FastAdapter/blob/b8467b6c9850f1c2e7c0b42810e455ae9f888dcf/library/src/main/java/com/mikepenz/fastadapter/commons/adapters/GenericFastItemAdapter.java#L29\n. You have to fetch the position when you actually need it. . Fetch the position in the callback. You don't need the cast when you use FastAdapter. You can also use non expendable Items with this. . But you have to remove \"& IExpandable\" first. . Ok, next time just create a branch at this repo, so everyone can commit to it. . @MFlisar With contributor permissions you can create new branches.. Can you post your filterRequests implementation?. That looks like a firebase question and thats not related to this library.. Keep in mind that the viewholder is cached for all items with the same type. . Can you post some code snippets what you have tried and explain what doesn\u00b4t work.. @IlyaGulya you can add suggestions to the #294 pr. . You can take a look into the latest commits from the pr. Filter should have the correct behavior now.. @or-dvir the FastItemAdapter is extending the FastAdapter and holding / wrapping the ItemAdapter. https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/commons/adapters/FastItemAdapter.java#L24. The FastItemAdapter contains basically all methods from ItemAdapter and ofc from FastAdapter.. You just need less code.. You can take a look at https://github.com/florent37/FiftyShadesOf. or https://github.com/elye/loaderviewlibrary. @Rainer-Lang facebook has a testing library that is generating screenshots. http://facebook.github.io/screenshot-tests-for-android/. Checkout #443 to see the new changes. The benchmarks will be migrated to the new version after release.. @YuriHeupa could you please show the code where you are wrapping the adapters together?. could you test\n java\nmRecyclerView.setAdapter(adAdapter.wrap(footerAdapter.wrap(headerAdapter.wrap(fastItemAdaper.getItemAdapter()))));\n?. @YuriHeupa could you provide a test case where the item count calculation failes? https://github.com/mikepenz/FastAdapter/blob/develop/library/src/test/java/com/mikepenz/fastadapter/FastAdapterTest.java. you can set the SpanSizeLookup to change the span size for an item.\nhttps://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.SpanSizeLookup.html. Its not related to the library, the default RecyclerView.Adapter would have the exact same result.. holder.itemView.setBackgroundResource(FastAdapterUIUtils.getSelectableBackground(context));. @mikepenz @Rainer-Lang Happy new year. :tada:. Your RecyclerView.Adapter doesn\u00b4t use stable identifiers.. You should try to update your support lib to the latest version.. Could you post the item and adapter creation code?. The FastAdapter is using the default behavior. \nCalled when a view created by this adapter has been recycled.\nA view is recycled when a RecyclerView.LayoutManager decides that it no longer needs to be attached to its parent RecyclerView. This can be because it has fallen out of visibility or a set of cached views represented by views still attached to the parent RecyclerView. If an item view has large or expensive data bound to it such as large bitmaps, this may be a good place to release those resources.\nRecyclerView calls this method right before clearing ViewHolder's internal data and sending it to RecycledViewPool. This way, if ViewHolder was holding valid information before being recycled, you can call getAdapterPosition() to get its adapter position.\nhttps://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#onViewRecycled(VH). @stevesea why you are using an own AtomLong object in your code?. You could use an EventHook. The EventHook is getting the Adapter, the Item and the item position. The view needs an listener interface for this.. @judemanutd your ReceiverChatMessageItem should not extend the GenericChatMessageItem. Otherwise you could not specify a different viewholder. You should use ReceiverChatMessageItem extends  GenericAbstractItem<ChatMessage, ReceiverChatMessageItem, ReceiverChat_ViewHolder>. When you need the same superclass for both create one that is extending GenericAbstractItem without an viewholder requirement.. You could use GenericAbstractItem as a type or you are going to create an own class that is extending GenericAbstractItem.. private GenericItemAdapter adapter;. try Handler handler = new Handler(context.getMainLooper());. this is part of https://github.com/mikepenz/FastAdapter/pull/294. There could be no need for this anymore in a newer version. \nhttps://github.com/mikepenz/FastAdapter/pull/353. Its because Jitpack is providing a jar instead of an aar. You should better wait for the merge.. You have to use the GenericItemAdapter with the Function interface. https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/GenericItemAdapter.java#L32. You could try to call the reset method, because active is checking if the mode is null or not.. It's already part of #294. . It possible with a Layout Manager to Stick Items at the top. For example https://github.com/ShamylZakariya/StickyHeaders/tree/master/stickyheaders/src/main/java/org/zakariya/stickyheaders. You can just simply use the layout manager for this. linearLayoutManager.scrollToPositionWithOffset(itemPosition, 0);. Take a look at the sample to see how the MaterialScrollBaris implemented there.. The error is happening on the layout inflate and should not be related to this library. You'll get this error anywhere you inflate this layout.. https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ViewHolder.html#getAdapterPosition(). @ncapdevi bindViewHolder != onBindViewHolder. bindViewHolder is actually the adapter implementation that is updating the viewholder and is always calling the onBindViewHolder(holder, position, payloads) method.. This is just increasing the complexity of a simple 3 methods class. It should be enough to check the viewholder instance inside the onBind/onBindMany instead of creating a new method just for doing this.. You would also increase the performance when you just avoid the initialization of the anonymous inner class here and use the EventHook object as an replacement.. When you have suggestions about the method names or any other breaking stuff that would improve the usability of the eventhooks you could write them here down and maybe we could add them to #294.. In most cases you don't need the position of the viewholder so you would have to add this manually when needed. You could add a pull request that just renames the methods with an documentation. Everything else is not needed for the default case. . Its not necessary to do this in a specific method because you need to provide an own listener implementation anyway.. The library is using the default recyclerview behavior. . The most recent code change was in #425 .. Could you provide some code and describe the behavior you don\u00b4t like.. Could you replace the logic inside the sample with the new utils method?. The builds are failing because of bintray\u00b4s server issues.. You have to override getViewHolder() and insert your custom view inside the viewholder constructor.. Getviewholder result is already cached. Just create the viewholder every time the method is called. . But there is still need for improvement, because your item has to provide an dummy layout inside getLayout. The viewinflater still tries to inflate the view even when you don't need it. . Maybe we could add an getView() method that normally calls the layout inflater but can be overridden to return an custom view instead. . In the meantime you could also override https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java#L232 and https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java#L250\nbut you have to remember binding the item and using getViewHolder for initialization of the viewholder.. You could use the generic item to reduce some boilerplate of the first code snippet you posted.. The generic item adapter needs to create the different item object.. Feel free to open a pr that removes the setTitle methods inside the FastAdapterBottomSheetDialog. The code of the FastAdapterBottomSheetDialog used the FastAdapterDialog as an base.. wrong base. There is a possibility that you can reuse an layout for multiple items.. Hi,\nwithItemEvent got deprecated in favor of withEventHook. Any breaking changes between versions are documented in the migration notes. https://github.com/mikepenz/FastAdapter/blob/develop/MIGRATION.md. Normally the github pages shouldnt be exactly the same as the readme, that would make it obsolet. Instead it should better describe the project and contain more organized content thats not possible with an readme.. Which android studio version are you using?. I don\u00b4t see a reason why it shouldn\u00b4t work.\n```java\npublic class MyViewHolder extends RecyclerView.ViewHolder {\n    private final ViewDataBinding binding;\npublic MyViewHolder(ViewDataBinding binding) {\n    super(binding.getRoot());\n    this.binding = binding;\n}\n\npublic void bind(Object obj) {\n    binding.setVariable(BR.obj, obj);\n    binding.executePendingBindings();\n}\n\n}\n. You just have to override getViewHolder(ViewGroup parent) and init the viewholder with the binding.java\nLayoutInflater layoutInflater =\n        LayoutInflater.from(parent.getContext());\n    ItemBinding itemBinding = \n        ItemBinding.inflate(layoutInflater, parent, false);\n    return new MyViewHolder(itemBinding);\n```. First, the top and bottom scroll listener must be merged into one.. the top scroll listener is just the bottom one with an small logic change.. The scroll direction and the scroll in general is not handled by the adapter. You have to use an layout manager for that.. Thats already fixed in #585. . The package Info was missing in the adapter package. . But the ParametersAreNonnullByDefault wont give info about non nullable methods. Not sure if there is one for methods are non nullable by default.. Adding an non null annotation on almost every method seems a bit to redundant for me.. Ok seems like there was just one method in the entire project that is abstract and returns an object that is not nullable, so it should be fine to annotate it.. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/res/layout/simple_image_item.xml#L2\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SimpleImageItem.java. The current way the endless scroll listener is implemented does not support nested scrolling. We are always open for an pull request.. getEventHooks() is only called one time for each item type.. Will fix soon.. Fixed in #504. Not sure if we should accept pr\u00b4s for the develop branch anymore. Could you rebase to the v3_new branch.. The typo is present in almost all sample activities. Could you fix them all after rebase?. Can you rebase to the feature/v3_new branch?. You have to target v3_new as well. Not sure if fastItemAdapter should be explicitly supported here as well, since its almost unneeded in the next release and could probably get deleted.. See the generic item sample in the sample app. You should create own data classes that aren\u00b4t items.. Hi,\nFor your first question take a look at the sample in the readme. \nhttps://github.com/mikepenz/FastAdapter#4-click-listeners-for-views-inside-your-item\nYou can add as many event hooks as you need to.\nTo toggle the view color when an item gets selected, just use the isSelected() to check if the item is selected or not inside onBind. When you have click listeners in your item, make sure there don\u00b4t stop intercepting the click event to the itemView. But when you add them with the event hooks it should work fine.. The onBind of the event hook is only there to return the view the click listener should bind to and nothing more.  . like i said use for your normal viewbindings the bind of the item and for click handling the onClick.. You can use v.getParent() and so on, to find the other views inside the item layout. You could just check the view id.. @sosite do you know an way to reproduce #491?. Not inside Robolectric it looks like.. Hi,\nyou have to create an custom event hook and use viewHolder.yourEditText instead of itemView. Then you register inside attachEvent the text change listener. As i said earlier use an custom event hook when you want to set an custom listener.. Not sure if this is in the scope of the library, since it's not an common use case.. There are actual two possible solutions to fix this bug. The first one is this pull request, the second one is to allow an model as an sub item so that the intercept could work properly on the model.\nFor now this fix should be fine till we support getSubModels().. You could simply extend OnBindViewHolderListenerImpl and use your own class in withOnBindViewHolderListener.. Im not sure if the default implementation should be static in this case, but the item does not hold any views so it should be fine.. Firstawall you could change how the inflate works by simply overriding getViewHolder(Viewgroup parent), but thats not the topic in this question because the library already uses the correct way to inflate the item layout in the implementation. Which layout manager are you using?. I don\u00b4t think this is fast adapter related. You would get the same behavior when using just the recyclerview default adapter.. You can take a look at single_line_item for an working example.. @sosite 1. https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#notifyItemChanged(int, java.lang.Object)\n2. The own click listener implementation is there to simplify the adding of an simple listener. The event hook system is an more dynamic system that can adds any kind of listeners to any view(s).\n3. The goal is to keep the core package small and i don\u00b4t think this methods are actually needed.\n4. This would add complexity that is actually not needed. You can add an click listener to the viewholder in one line.. I don\u00b4t see any fastadapter related issue here.. You can try to use https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/commons/utils/FastAdapterDiffUtil.java .. Im also using all extensions libraries with proguard and it works just fine.. You have to add \n-dontwarn javax.annotation.Nullable\n-dontwarn javax.annotation.ParametersAreNonnullByDefault\nto your proguard file. You should always specify an type, java just doesn\u00b4t require it. Im using it in a few kotlin projects as well, you just have to specify the types correctly and build your items and models  object oriented.. You should create an object where your items and models are extending from and specify that inside your adapter type.\nkotlin\nModelAdapter<Dashboard.Card, DashboardCardItem<out Dashboard.Card, out RecyclerView.ViewHolder>>. Are you sure its needed there, because <?> and <? extends Object> are synonymous in most cases. You have an sample where it improves the usability?. I was talking about an sample for the fastadapter usecase.. Not a fan of changing the method signatures. Also take a look how the other default inplementations are implemented and named since v3. Just an abstraction of the same method inplementations should be good with an setter and getter for it. . https://github.com/mikepenz/FastAdapter/pull/585 just as an inspiration for an cleaner IItemList interface. Not talking about the missing methods more about that its an abstract class. Hi,\nwill take a look into it, since it would be an useful feature to make an fast recyclerview. But as always, feel free to suggest an specific implementation or make a pull request for it.\nEdit: Talking about an none glide specific preloader extension that can be used with any image loading library.. The viewholder view gets an click listener setted automatically. You should make sure your adapter view isnt the item root view. You can also disable this automation with fastAdapter.withAttachDefaultListeners(false).. You could use an ModelAdapter and create your own IInterceptor. Inside the interceptor you get back each item you want to add to your adapter. The easiest solution would be to call an setter there to set the reference for the RequestManager.. Can you remove the comments when there are unrelated to the issue.\nEdit: ok. Returns getType of your items an constant?. You could theoretically return any int, not just an resource. Just wanted to be sure it doesnt change on runtime. . You shouldnt use an FastItemAdapter to just return the item adapter from it and assign it to another FastAdapter that will lose the TypeInstanceCache.. We are already thinking about removing FastItemAdapter because its not needed anymore and not worth the minimal reduced code.. Even the support libs are using the @Nullable annotation for methods, for example findViewById, that most likely returning non null objects when there are correctly used. These methods requires an null check in kotlin. Its an single line in kotlin or even less when you need to check for an specific instance anyway.. Its just not worth it creating another class just for using an different annotation.. Does HeaderItemShopkeeperAccount inherit from ItemProducts?. Im also not able to reproduce the crash, can you post the full crash log or an video?. Your OnClickListener type has to match the type of the FastAdapter. You probably need an type that fits for your NotificationItem and when you have several item types, to them as well. When you just need one item type you can use the notification item as an type for the fast adapter as well. Read more here: https://kotlinlang.org/docs/reference/generics.html. Read https://github.com/mikepenz/FastAdapter/issues/654. Its basically the same question.. Because you have to use an type for your adapter that fits all items that you are going to add to it. This type must also be the same as the comparator type.. When you don\u00b4t specify an comparator type, kotlin will most likely use the type of the adapter for the comparator.. You can always cast it down to the generic type, which looks indeed ugly\njava\nfastAdapter.getExtension(ExpandableExtension::class.java as Class<ExpandableExtension<ProductItem>>)\nYou could for example define an helper method like\njava\npublic inline fun <reified T: Any> javaClass(): Class<T> = T::class.java\n. Then you can do it like this:\njava\nfastAdapter.getExtension(javaClass<ExpandableExtension<ProductItem>>()). A good inline function could look like\n```kotlin\npublic inline fun , Item : IItem> FastAdapter.getExtension(): T? =\n        getExtension(T::class.java)\npublic inline fun >> FastAdapter>.getExtension2(): T? =\n        getExtension(T::class.java)\n```\nThe first one is type save and doesn\u00b4t allow AdapterExtension request with the wrong item type, the second one isn\u00b4t type save, but you just have to specify one type on call.\nkotlin\nfastAdapter.getExtension<ExpandableExtension<ProductItem>, ProductItem>()\nfastAdapter.getExtension2<ExpandableExtension<ProductItem>>(). Why not calling it inside addAdapter for the newly added adapter only, instead of running it on all adapters again that are already added?. You can use:\njava\n((ComparableItemListImpl) adapter.getItemList()).withComparator. Please post the build log.. Feel free to answer when your issue isn't resolved.. Take a look at the sample code: \nhttps://github.com/mikepenz/FastAdapter/blob/6ca81ab1d584b901d1102c3fd096dcf4fb9bb3d9/app/src/main/java/com/mikepenz/fastadapter/app/DiffUtilActivity.java\nFeel free to add documentation for it (in the readme for example).. Most important part of the sample:\n1.) It creates new data (background thread)\njava\ncreateData();\n2.) It calculates the difference between the new and old data (background thread)\njava\nFastAdapterDiffUtil.calculateDiff(fastItemAdapter, simpleItems);\n3.) It sets the difference record to the adapter (main thread)\njava\nFastAdapterDiffUtil.set(fastItemAdapter, result);\njava\ndisposables.add(Single.fromCallable(new Callable<List<SimpleItem>>() {\n            @Override\n            public List<SimpleItem> call() throws Exception {\n                return createData();\n            }\n        }).map(new Function<List<SimpleItem>, DiffUtil.DiffResult>() {\n            @Override\n            public DiffUtil.DiffResult apply(List<SimpleItem> simpleItems) throws Exception {\n                return FastAdapterDiffUtil.calculateDiff(fastItemAdapter, simpleItems);\n            }\n        }).subscribeOn(Schedulers.io())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Consumer<DiffUtil.DiffResult>() {\n                    @Override\n                    public void accept(DiffUtil.DiffResult result) throws Exception {\n                        FastAdapterDiffUtil.set(fastItemAdapter, result);\n                    }\n                }));\nSo there are just two important methods, calculate and set.. Its stable enough to generate reliable cocoa frameworks. . There will be a snapshot release first. Full release definitely not before the migration.md is updated and select extension support select all and deselect all with expandable items. . Hi @farfromrefug there won't be any ios platform api until v4 api got stable. Current proof of concept is  https://github.com/FabianTerhorst/FastAdapter-Swift . But the fastadapter v4 api will be based on the android version and hopefully will allow more code sharing.. \ud83d\udc4d . This would require to add the internal used mapPossibleTypes to the interface, but im not seeing an problem here because withFastAdapter is also internal only.. This won't work when the item adapter isn't added to any fastadapter. Not sure if we should ever support adding items to an item adapter without an fast adapter.. Added support for nullable fast adapter, but not sure if we want that.. @bejibx. Hi,\nthats actually not related to the fast adapter because thats handled by the layout manager.\nYou could use the StaggeredGridLayoutManager and toggle between span count 1 and 2 for example.\nhttps://developer.android.com/reference/android/support/v7/widget/StaggeredGridLayoutManager.html#setSpanCount(int). Hi,\nyou see that behavior because the recyclerview is, as the naming guesses, recycling used views. When you are changing the state of the views that got loaded from the layout inflater and you wanna restore the original state you need to do that in unbindView. For example you would set both textviews to visible there, when there are visible in the layout xml as well. This is only required when you change the state programmatically in bindView.. When doing specific notifies for not existing items the recyclerview will ask the adapter for this items, which results in an crash here: https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L928\nSurprisingly it isn't an npe because getItem should return null for not existing items, but it isn't in this specific case. It looks like there is an missing index check there to prevent this error from happening. But not sure which type to return for items that are not existing.. Hi,\nyou can provide your own item list implementation to any model adapter. https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/adapters/ModelAdapter.java#L42. Its basically the interface for the implementation that is managing the items list. You could for example add an own \"add\" implementation and call own calculated adapter callbacks. There is currently no documentation for it, thats true. Your implementation would look similar to the default one but without the default behavior you don't want to have. https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/utils/DefaultItemListImpl.java. There is already an implementation that is sorting the items after adding, moving ect. https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/utils/ComparableItemListImpl.java. And you won't be able to use FastItemAdapter for that, better use the FastAdapter and add the model adapters to it.. java\nFastAdapter<SampleItem> fastadapter = new FastAdapter<>();\nfastAdapter.addAdapter(0, new ModelAdapter<SampleItem>(itemListImpl, interceptor));. you have to store the reference of the ModelAdapter somewhere ofc to add item to it. No modification of the items is required for that.  An sample for the interceptor is https://github.com/mikepenz/FastAdapter/blob/b77477ec100e27e31ffba16dade9fa5031e5cb6c/app/src/main/java/com/mikepenz/fastadapter/app/ModelItemActivity.java#L51 for example, but in your case the interceptor will return the value without any changes. The item list impl is the class i posted before\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/utils/ComparableItemListImpl.java . This isn't stackoverflow.. Hi,\nThere is already an sorting demo in the sample. Take a look at the sorting activity. Feel free to submit an pr to add the sorting API description to the readme. . That's an very special use case. When I would need something like that I would send an payload to the changed item and calculate the new item position and move it to this. . Take a look how payload are working. That's the expected behavior when Viewmodel doesn't change. . The implementation of this isn't part of this library. It's part of the recyclerview. . Im not able to reproduce it on 8.1 and p vanilla android. When you talk about the jumping parent item, thats an default recyclerview animation that can be changed individually.. Hi,\nim using withOnlyOneExpandedItem in some apps and can confirm that it is working. But im only using it with an single depth.. Hi,\nits not an bug in the library because the bind is called correctly otherwise the text would be the same as well.. I would recommend you to save the picasso target inside the imageview tag and cancel it inside the unbind.. Call Picasso.get().cancelRequest(imageView); in unbind. Its the recommended way for picasso.. Btw is your item identifier unique? Otherwise that would explain that behavior.. Canceling is already enough. Otherwise it could happen that bind happens while an other request is already happening. I don't think Picasso supports more then one simultaneous request for each image view. . Does the bug happens as well when you remove all placeholder, error, fit, centerInside options in load?. you could try to update picasso because the version you are using is 3 years old.. Hi,\ndo all 3 of your items have different type ids and different identifiers?. The preload listener only requires an scroll listener and since you can add an unlimited amount of scroll listeners to an recyclerview, the library doesn't change the needed code to implement it.. The fastadapter doesn't control the scroll listeners so it should just work.. Are you using any other library that depends on fast adapter? (./gradlew app:dependencies). You tried to add an item to an adapter that does't has the fast adapter setted.. Can you provide an code snippet that illustrates the problem in a few lines?. You have't added the mFooterAdapter to the fast adapter. You create a new instance of it.. The identifier must be unique inside an adapter. Two items can't have the same identifier even when there type id is different.. Hi,\ntake a look at https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/model/ModelIconItem.java and https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/ModelItemActivity.java to split your item and model object.. You need to insert your list of models not your list of items. . Add also calls the notifies internally, so you don't need to call the notifyDataSetChanged.. Version 3.3.0 and above requires the use of androidx. When you don't use androidx right now stay at 3.2.9 or below. . You probably don't wanna serialize the whole adapter item. Better use the AbstractModelItem and an own model object to serialize. . TODO\n\nadd migration.md\nadd kotlin sample to sample app or just readme. TODO: \n\nmaybe allow adding items to an model adapter without an attached fast adapter and fix item positions on addAdapter, same for registerTypeInstance. TODO:\n\n\nmove select, deselect handling from expandable extension to select extension. Hi,\n\n\ncould you write an test inside https://github.com/mikepenz/FastAdapter/blob/develop/library/src/test/java/com/mikepenz/fastadapter/FastAdapterDiffUtilTest.java that demonstrates the problem?. This works and is the expected behavior. You are talking about that items that are the same content not the same object should have the same identifier which isn't true.\n```java\n@Test\n    public void testDiffUtilDragDrop() {\n        TestItem testItem1 = new TestItem(\"Test1\");\n        TestItem testItem2 = new TestItem(\"Test2\");\n        List originalList = new ArrayList<>();\n        originalList.add(testItem1);\n        originalList.add(testItem2);\n    List<TestItem> updatedList = new ArrayList<>();\n    updatedList.add(testItem2);\n    updatedList.add(testItem1);\n\n    test(originalList, updatedList);\n\n    Assert.assertEquals(updatedList.get(0).getIdentifier(), originalList.get(1).getIdentifier());\n    Assert.assertEquals(updatedList.get(1).getIdentifier(), originalList.get(0).getIdentifier());\n}\n\n```. Items with the identifier -1 will get an new id generated.. The ids are beeing generated on FastAdapterDiffUtil.set or on modelAdapter.set, add ect. for example for every item without an id.. The result of the diffutils are just adapter notifies.. Travis won't be happy, because thats an binary incompatibility with the material drawer.. TODO:\n\nmove select, deselect handling from expandable extension to select extension. androidx is used since fastadapter version 3.3.0. Please follow the issues template. . Hi,\n\nyou are clearing all items and adding them again each time your LiveData changes. https://github.com/afarber/android-questions/blob/master/TopPlayers/app/src/main/java/de/afarber/topplayers/TopFragment.java#L87\nTo fix that you could for example use DiffUtils to only notify changes on items that actually got changes. Take a look at the DiffUtils sample. https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/DiffUtilActivity.java#L137\n(You don't have to use rxjava for it, as long as it runs outside the main thread it will be fine). There is no guarantee that the hashCode of the string is unique. This is not an bug inside this library.. Hi,\nplease record an method trace and upload it here. . I mean this https://developer.android.com/studio/profile/cpu-profiler.html#method_traces. Track the time the onbind needs. It must be faster then 10ms. . Hi, please show how you have implemented the data binding inside an item. . You could try to override https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/items/AbstractItem.java#L291 instead of getViewHolder(View v). There you have more control when doing\njava\nLayoutInflater layoutInflater = LayoutInflater.from(parent.getContext());\nViewDataBinding binding = DataBindingUtil.inflate(\nlayoutInflater, viewType, parent, false);\nreturn new ViewHolder(binding);. Thanks a lot!. Have you tried overriding the identifier in your QueueItem, because the recyclerview is handling it differently when same items also have the same identifier?. Have you tried getting the expandable items selection working in version 4? The version includes a lot of improvements for expandable items.. Yes it plays nicely in java and there is also less migration needed when migration from java v3 to v4 then from kotlin v3 to v4.. why is there no getter for the mComparator inside the ItemAdapter?\n. You can add a AppBarLayout around the Toolbar to make the LinearLayout a child from the AppBarLayout. So that you can remove the RelativeLayout.\n. You should add a sample_sort_list_descr string like in the other examples.\n. In the whole project is no class comment. I don\u00b4t know if this is needed here.\n. The item strings from the other items are all named sample_name_ __list_descr_\n. I think there should have the name name. You can rename them all to the same string prefix when you want. \n. you should use the getter for the layout manager #98\n. Else if is shorter \n. in this Library the formatting is if and { in the same line\n. Is the = null needed?\n. Same\n. } else should be in the same line\n. Is there only a static method for this?\n. Because i reset the views to the default state. Thats the state the view had after the view got inflated from the layout.\n. Find a better name for this.\n. Replace T with item, because it looks better. Replace FastAdapter with FastAdapter generifyed with Item so you don\u00b4t need the cast anymore. . Item item;. Same ^. I mean change t with item and use it on the generic Adapter. . why in caps? Why still the generic FastAdapter?. Why then not just remove the \" & IExpandable\"?. Better assign the iitem to a value. You did the same in the method above. . It makes it more redeable because of the lines later. . \"SparseArrays map integers to Objects. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.\" https://developer.android.com/reference/android/util/SparseArray.html. Long.MIN_VALUE - 1 == Long.MAX_VALUE. @Nullable. @Nullable. not the best solution currently. doc is missing. Missing new line. Doc should start with upper case. there are null by default. remove space. remove space. remove space. Are you sure this is needed? Because when you start moving a second time from another positon the mFrom is wrong?. you could also replace them by int with RecyclerView.NO_POSITION as default. Haven\u00b4t tested, just noticed inside the code.. static generic doesnt work, not sure about an other way without an cast.. static generic doesnt work, not sure about an other way without an cast.. Added space here, since space is there in other modules as well.. Better use the thread pool here: Schedulers.io(). This is very critical and maybe should be removed in favor of fastAdapter.getTypeInstanceCache().clear();\nSince its clearing the cache for all fast adapter instances in the default implementation.. Java does not allow generics in static values so we have an warning here.. List<Object>. Moving it into .fastadapter.utils.DefaultListUpdateCallback would make it a bit cleaner.. DefaultItemListImpl. Interface would be better.. private. Providing the callback in the implementation constructor would give a bit more flexibility.. I dont think we have to emulate the array list here, just create an List constructor and as an default one new ArrayList<Item>();. An default list callback thats never null could be acceptable.. better give the correct reference back even when thats not possible in the sorted list.. space. would better fit into the extensions module.. move out of the class. Not sure if we even want to keep the FastItemAdapter anway. Moving this into the constructor isn\u00b4t possible, but adding this method to the interface is.. move to com.mikepenz.fastadapter. move to com.mikepenz.fastadapter.utils. Not sure if we should keep this one because getAdapterPosition(long identifier) is almost the same.. Best solution would be to give back just mItems, but that would require the IItemList to implement List. The idea is that there is an implementation that is using the ListUpdateCallback, but that doesnt mean every implementation has to use it.. kk. It would break existing code.. Currently its possible to add items to the adapter before attaching it.. final. https://developer.android.com/reference/android/support/v4/util/ArrayMap.html. the other adapters are already added to the fast adapter so there is no need to call the setter multiple times. ",
    "drayan85": "Please refer the stackoverflow post\nhttp://stackoverflow.com/questions/35653439/recycler-view-inconsistency-detected-invalid-view-holder-adapter-positionviewh. ",
    "alashow": "@drayan85 that solution is only changes name of the exception. After catching IOOB exception, another exception Added View has RecyclerView as parent but view is not a real child. Unfiltered index:n starts to throw.  I managed to fix it by wrapping set/add methods with Handler.postDelayed. But I still get Scrapped or attached views may not be recycled. isScrap:false isAttached:true, if I scroll down fast.. Thanks!\n. @FabianTerhorst is there better solution? Because your version looks weird.\n. @FabianTerhorst there is no getTypeInstance by itself. It's FastAdapter's method, isn't it? and itemAdapter is instance of FastAdapter.\n. Got that work:\n``` java\nitemAdapter.withOnCreateViewHolderListener(new FastAdapter.OnCreateViewHolderListener() {\n            @Override\n            public RecyclerView.ViewHolder onPreCreateViewHolder(ViewGroup parent, int viewType) {\n                switch (viewType) {\n                    case R.id.product:\n                        return itemAdapter.getTypeInstance(viewType).getViewHolder(parent);\n                    default:\n                        return new BasketTotal().getViewHolder(parent);\n                }\n            }\n        @Override\n        public RecyclerView.ViewHolder onPostCreateViewHolder(RecyclerView.ViewHolder viewHolder) {\n            if (viewHolder instanceof Product.ViewHolder) {\n                clickListenerHelper.listen(viewHolder, ((Product.ViewHolder) viewHolder).photo, (v, position, item)->{\n                   ...\n                });\n                ...\n            }\n            return viewHolder;\n        }\n    });\n\n```\nBut @mikepenz, is there normal solution?\n. @mikepenz I assume you mean FastItemAdapter by saying FastAdapter. \nSo then, I' changed my FastItemAdapter type to AbstractItem (also tried with IItem, and ?). I casted items to my types (Product, BasketTotal) safely. \nThen, adding items to my FastItemAdapter are not working, add() methods are not resolving. My arrayList was Product, if I change it to AbstractItem my code becomes becomes garbage. Every time I access my list, I'll need to cast it to my type. Also I won't be able to create new arrays (ex. List<AbstractItem> mylist = ArrayList<Product>();, List<AbstractItem> mylist = result.getProducts();).\nI just wanted to add footer, with different type..\nAm I doing it wrong or this is the only way? \nThanks.\n. > What you can do is that you really split up FastItemAdapter to ItemAdapter and FastAdapter you will then have your FastAdapter with the general IItem interface, or your common base class, and your ItemAdapter typed to Product.\nI didn't know that there is ItemAdapter. I did like you said, split up them, wrapped fastAdapter, added some castings for listeners.\nNow everything is works okay & clean code.\nThank you very much!\ud83d\ude03\n. Also, I had extremely annoying bugs with Insistency detected. Invalid view holder adapter positionViewHolder ... and Added View has RecyclerView as parent but view is not a real child. Which I solved by wrapping fastAdapter.add*|set* methods with a delayed Handler.. Yes, I use LinearLayoutManger.\nMy support lib version is 25.1.0. I upgraded support libs version before. It was working with 1.2.5-6.. I was using https://github.com/yasevich/endless-recycler-view for my recyclerView. Turns out, new versions of FastAdapter is not compatible with it. I changed it to normal RecyclerView, and it worked as intended. Anyways I was going to switch FastAdapter's version of infinite/endless loading.\nMy bad.\nThank you for the awesome library!. But I'm sure that the problem was with the custom rv. As soon as I changed it to normal rv, the problem was solved.. @mikepenz kinda unrelated but do you know why every time I add ProgressItem to FooterAdapter, I get this warning exception:\nCannot call this method in a scroll callback. Scroll callbacks might be run during a measure & layout pass where you cannot change the RecyclerView data. Any method call that might change the structure of the RecyclerView or the adapter contents should be postponed to the next frame.\n            java.lang.IllegalStateException: \n            at android.support.v7.widget.RecyclerView.assertNotInLayoutOrScroll(RecyclerView.java:2526)\n            at android.support.v7.widget.RecyclerView$RecyclerViewDataObserver.onItemRangeInserted(RecyclerView.java:4874)\n            at android.support.v7.widget.RecyclerView$AdapterDataObservable.notifyItemRangeInserted(RecyclerView.java:11094)\n            at android.support.v7.widget.RecyclerView$Adapter.notifyItemRangeInserted(RecyclerView.java:6702)\n            at com.mikepenz.fastadapter.FastAdapter.notifyAdapterItemRangeInserted(FastAdapter.java:1546)\n            at com.mikepenz.fastadapter.adapters.ItemAdapter.add(ItemAdapter.java:352)\n            at com.mikepenz.fastadapter.adapters.ItemAdapter.add(ItemAdapter.java:335)\n            at tm.veriloft.sowgat.ui.fragment.product.ProductListFragment.toggleFooterLoading(ProductListFragment.java:521)\n            at tm.veriloft.sowgat.ui.fragment.product.ProductListFragment.access$700(ProductListFragment.java:62)\n            at tm.veriloft.sowgat.ui.fragment.product.ProductListFragment$OnLoadListener.onStart(ProductListFragment.java:543)\n            at tm.veriloft.sowgat.ui.fragment.product.ProductListFragment$5.onStart(ProductListFragment.java:421)\n            at tm.veriloft.sowgat.rest.Summon.<init>(Summon.java:18)\n            at tm.veriloft.sowgat.ui.fragment.product.ProductListFragment$5.<init>(ProductListFragment.java:0)\n            at tm.veriloft.sowgat.ui.fragment.product.ProductListFragment.loadItems(ProductListFragment.java:418)\n            at tm.veriloft.sowgat.ui.fragment.product.ProductListFragment.access$400(ProductListFragment.java:62)\n            at tm.veriloft.sowgat.ui.fragment.product.ProductListFragment$2.onLoadMore(ProductListFragment.java:185)\n            at com.mikepenz.fastadapter_extensions.scroll.EndlessRecyclerOnScrollListener.onScrolled(EndlessRecyclerOnScrollListener.java:116)\n            at android.support.v7.widget.RecyclerView.dispatchOnScrolled(RecyclerView.java:4541)\n            at android.support.v7.widget.RecyclerView.scrollByInternal(RecyclerView.java:1698)\n            at android.support.v7.widget.RecyclerView.onTouchEvent(RecyclerView.java:2827)\n            at android.view.View.dispatchTouchEvent(View.java:10023)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2626)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2307)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n            at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n            at com.android.internal.policy.DecorView.superDispatchTouchEvent(DecorView.java:413)\n            12-26 03:52:06.588 17924-17924/tm.veriloft.sowgat.debug W/RecyclerView:     at com.android.internal.policy.PhoneWindow.superDispatchTouchEvent(PhoneWindow.java:1808)\n            at android.app.Activity.dispatchTouchEvent(Activity.java:3061)\n            at android.support.v7.view.WindowCallbackWrapper.dispatchTouchEvent(WindowCallbackWrapper.java:71)\n            at android.support.v7.view.WindowCallbackWrapper.dispatchTouchEvent(WindowCallbackWrapper.java:71)\n            at com.android.internal.policy.DecorView.dispatchTouchEvent(DecorView.java:375)\n            at android.view.View.dispatchPointerEvent(View.java:10243)\n            at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:4438)\n            at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:4306)\n            at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3853)\n            at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3906)\n            at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3872)\n            at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3999)\n            at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3880)\n            at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:4056)\n            at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3853)\n            at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3906)\n            at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3872)\n            at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3880)\n            at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3853)\n            at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:6246)\n            at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:6220)\n            at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:6181)\n            at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:6349)\n            at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)\n            at android.view.InputEventReceiver.nativeConsumeBatchedInputEvents(Native Method)\n            at android.view.InputEventReceiver.consumeBatchedInputEvents(InputEventReceiver.java:176)\n            at android.view.ViewRootImpl.doConsumeBatchedInput(ViewRootImpl.java:6320)\n            at android.view.ViewRootImpl$ConsumeBatchedInputRunnable.run(ViewRootImpl.java:6372)\n            at android.view.Choreographer$CallbackRecord.run(Choreographer.java:874)\n            at android.view.Choreographer.doCallbacks(Choreographer.java:686)\n            at android.view.Choreographer.doFrame(Choreographer.java:615)\n            at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:860)\n            at android.os.Handler.handleCallback(Handler.java:751)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:154)\n            at android.app.ActivityThread.main(ActivityThread.java:6119)\n            at java.lang.reflect.Method.invoke(Native Method)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776). ",
    "KonradSzewczuk": "I had similiar issue, and also this solution has helped me, after I've added new item to my RV:\nrecyclerView.getRecycledViewPool().clear();\nadapter.notifyDataSetChanged();\n. ",
    "EpsilonOrionis": "I'm using your sample, still that message...\n. It works, thank u :+1: \n. I was removing the item in a LongClickListener, and without any explaination it was reappearing. I was using: fastAdapter.notifyItemRemoved(int position), I solved it using MyItemAdapter.remove(int position)\n. \nMike maybe I'm wrong, but i read in the FastAdapter .md that it supports the footer\n. How can I handle the click?\n. ",
    "mattiasbe": "As per the error message, implement the simple viewholder factory to return an instance of the viewholder, for example as in the example app (lower half of this file):\nhttps://github.com/mikepenz/FastAdapter/blob/master/app/src/main/java/com/mikepenz/fastadapter/app/generic/GenericIconItem.java\n. - Focused library, tries to do one/a few things well.\n- Implements all minor tips/tweaks android devs have stated (creating listeners at creation time -not bind time, checking for no_position, etc etc)\n- High quality in general, nice API.\n- While a single developer, one with a good track record and stability\n- Chaining of other adapters fastscroller (MaterialScrollBar)\n. @mikepenz I understand completely, I initially dismissed the idea of creating the RFE for that exact reason (out of scope), but figured I had to ask anyway since the UndoHelper with the Snackbar undo UI is there in the project. \nI've used that library in a few projects, including one with FastAdapter now. Never combined that particular project with the swipe to dismiss/remove though, just to reveal actions. Maybe it can be done, but as that is not the purpose of that library I prefer not to (ab)use it that way. Rarely ends up well further down the lifetime of the projects (again makes me thankful you have very focused libraries). \nBy the way for anyone wishing to use that swipe library with FastAdapter, please note that to get the swipe and click to work together, don't use the withOnClickListener from FastAdapter, instead set it on the item yourself (at viewholder creation time), and make sure to set the onClickListener on the top surface only.\nI'll see what I can find time for. Thanks for another great library and support.\n. Looked into adding it into the sample app a little bit. Raises a few questions, multiple ways to do it, api design, not adding any support into the FastAdapter or doing so, how customizable, all features, or just parts and if so make it easy to use some of it (only leave behinds, no actions, only actions, only swipe). Ability to combine with drag.\nQuestion 4 below pretty much sums it up about what I'm currently consider implementing for the sample app if anyone would be interested.\n@mikepenz What would your preferred way of discussing for example API alternatives be (even for sample app only stuff)? Nothing major just that I prefer iterating/feedbacking it with someone. \nInitial questions:\n1. I started off adding it into the SimpleItemListActivity but as long as it is just one extra feature it might be OK but if adding multiple alternatives (actions or not etc) it might clutter that example too much. Add another activity now or maybe later. See also question 4.\n2. For the \"leave-behind\" I'm considering an API just specifying a color and icon and/or text. Not a proper layout. At least to start with.\n3. For the revealed actions I think I would eventually regret not making it proper layout. The mentioned swipe library uses a bottom layout in the same framelayout and assuming position 0 and 1 are the layouts in question. While that seems easy enough it clashes a bit with the onClickListener in FastAdapter (would be attached to the FrameLayout and trigger on all clicks). Could perhaps re-assign it as the FastAdapter keeps track of it but maybe have a separate layout. Thoughts? Maybe need some better examples to explain the issue?\n4. Sample app, I'm thinking of somewhere adding at least three steps regarding swipes. A) Adding a basic swipe custom action. B) Adding a swipe action with a material design \"leave-behind\". C) Like B but the item also changes to a UNDO or other custom action(s). Possibly with options of how to timeout (gmail does it on scroll and similar, or on just pure time like the snackbar does). Does that sound ok, even if A) is pretty trivial it could be a nice example for many if they don't know much about ItemTouchHelper etc?\n. @Rainer-Lang I forked and started some work on it. Can see the current state in the fork, I'll do a PR to get feedback at some point(s). From the state of my fork at the moment I'll next:\n- Change the api with the background color and the leave behind drawable in the constructor to withX-style to more easily accommodate support of different swipe directions.\n- Implement the different swipe directions (icon location for leave behind etc)\n- Start using a swipe example specific item layout instead of the SampleItem to have a proper/usable UNDO \"state\". Update the example with undo.\nSee the attached screen cap for the current state of the implementation:\n\n. Thanks for your kind words @mikepenz \nCurrent state:\n\nThere are some api issues that can be tweaked etc, and could benefit from some support in the actual lib, like a Swipeable interface and support for that for easier API and built in features. Instead of having to add such a pattern by yourself (no example of a Swipeable interface given there yet, it's implicit only). The use/setting of swipedActionRunnnable is a bit clunky and could benefit from this.\nBut maybe good enough for a sample now so will do a PR, hopefully tomorrow, and later on it can be improved or even partly added to the core.\n. Excellent :smile: @mikepenz\n. Ouch, sorry about that, teaches you not to do things a 2.30am. I tried the menu i Android Studio named \"Rebase my Github fork\" and didn't pay attention it seems. Unfortunately I did this before the last commit so not trivial to reset it seems according to my git reflog. I'll try and fix it or cherry pick in a new branch as you say.\n. Closing as new clean PR created.  That menu option seems really dangerous, it assumes master it seems to me and doesn't ask about much. Maybe one needs to have created the PR from inside intellij/AS as well etc.\n. Sounds great! \n. @jonas-arkulpa  You can do that specific layout in your image fairly easy with https://github.com/daimajia/AndroidSwipeLayout and fastadapter (that's how I do that in current project where I want buttons instead). Just don't use the FastAdapter withOnClickListener. Set it yourself when creating the viewholder on the top layer.\nTerminology: As I understand it, the \"leave-behinds\" pattern is not about buttons, it's for showing what happens when you swipe.\n. Looks to me like the argument is null in your code @franciscofranco , not something in FastAdapter?\nThat line is just the first to try and use it as a primitive (auto unboxing).\n. Could you clarify what features exactly @DJafari ? Databinding item views works fine with FastAdapter.\n. Yes @DJafari  and @mikepenz . There is nothing special about the adapters for data binding? Just call the DataBindingUtil.bind(view) as usual in the viewholder constructor and define the xml layout files as per databinding as usual. Do the actual binding in bindView, again as usual.\nThat's why I'm curious about if there are any special neat ideas/shortcuts/helpers @DJafari  is thinking about that would be suitable for FastAdapter.\nAn example, extract from an Item I'm using (could use this instead of getModel() if suitable I guess):\n``` java\n    ...\n@Override\npublic void bindView(ViewHolder viewHolder) {\n    super.bindView(viewHolder);\n    viewHolder.binding.setWorkout(getModel());\n    viewHolder.binding.executePendingBindings();\n}\n\n...\n\nprotected static class ViewHolder extends RecyclerView.ViewHolder {\n    private WorkoutBinding binding;\n\n    public ViewHolder(View view) {\n        super(view);\n        binding = DataBindingUtil.bind(view);\n        ...\n\n``\n. Sure, I'm just saying it's exactly like normal data binding for a RecyclerView and view holder.\n. **Suggestion:** Collections.emptyList(); Instead to avoid allocation altogether.\n**Interesting note:** At least in regular java (since java 1.7update 40),ArrayList(andHashMap) where nothing has been added yet doesn't consume \"any\" memory, nothing is preallocated for the storage.\nMeaningnew ArrayList<>()ornew ArrayList<>(0)` doesn't matter for memory usage.\n. Much better solution, thanks.\n. You are picking up an old appcompat in the support library, perhaps transitive from fastadapter. Make sure you are using the latest version of both fastadapter v1.6.1 (that references the latest) but most of all that you yourself reference appcompat v24.1.1,\n. Oh, that's a nice one @mikepenz , that HeaderHelper that is. Usage shown in the SampleActivity (app) for those like me that didn't read/find the commit comment at first.\n. @gpulido See my comment above. Follow mikepenz's last link above and navigate to the SampleActivity in the \"app\" folder.\n. @meNESS not sure what you are trying to do with that setTitle in the Factory. You should just return the FACTORY instance and that's all.  It is a singleton,  only one ever, just telling the lib how to create (reusable) view holders. A View holder will be reused (recycled!)  and connected (bound by \"binding\" )  to different items,  done when bindView is called. Hence it works (correct)  in bindView.\nThe factory is only created once and getting the factory not called too often,  only once really,  the first time, with your first title then. Don't have the title in the factory for short. \n. I haven't started to use it yet, on todo list,  but it was implemented/integrated recently in the ItemAdapter/FastItemAdapter I noted.\nYou can call set(...) directly with the DiffUtil callback as a parameter and it will be handled it seems.\nSee:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L299\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/FastItemAdapter.java#L153\n. ",
    "rmoreira0": "It works! Thank you\n. @mikepenz So there is no way to create this using the library, right?\n@FabianTerhorst i didn't understand, can you explain more?\nThank you!\n. Like this @FabianTerhorst ?\n```\npublic class MonthItemAdapter extends AbstractItem {\n//The unique ID for this type of item\n@Override\npublic int getType() {\n    return R.id.adapter_month_item_id;\n}\n\n//The layout to be used for this type of item\n@Override\npublic int getLayoutRes() {\n    return R.layout.adapter_month_item;\n}\n\n//The logic to bind your data to the view\n@Override\npublic void bindView(final ViewHolder viewHolder) {\n    super.bindView(viewHolder);\n\n}\n\n//The viewHolder used for this item. This viewHolder is always reused by the RecyclerView so scrolling is blazing fast\npublic static class ViewHolder extends RecyclerView.ViewHolder {\n    protected AdapterMonthItemBinding binding;\n    protected FastItemAdapter fastAdapter;\n\n    public ViewHolder(View view) {\n        super(view);\n\n        this.binding = DataBindingUtil.bind(view);\n\n        this.fastAdapter = new FastItemAdapter();\n        this.binding.itemRecyclerView.setLayoutManager(new LinearLayoutManager(App.getsInstance(), LinearLayoutManager.HORIZONTAL, false));\n        this.binding.itemRecyclerView.setAdapter(fastAdapter);\n\n        for (int i = 0; i < 20; i++) {\n            this.fastAdapter.add(new DayItemAdapter());\n        }\n    }\n}\n\n}\n```\n. @FabianTerhorst But if i want to pass dynamic data?\nThe class ViewHolder is static so i can't pass values\n``` java\npublic class MonthItemAdapter extends AbstractItem< MonthItemAdapter, MonthItemAdapter.ViewHolder> {\n//the static ViewHolderFactory which will be used to generate the ViewHolder for this Item\nprivate static final ViewHolderFactory<? extends ViewHolder> FACTORY = new ItemFactory();\n\npublic static DayClickListener listener;\npublic Month monthObject;\npublic List<Day> dayList;\n\n//The unique ID for this type of item\n@Override\npublic int getType() {\n    return R.id.adapter_month_item_id;\n}\n\n//The layout to be used for this type of item\n@Override\npublic int getLayoutRes() {\n    return R.layout.adapter_month_item;\n}\n\npublic MonthItemAdapter withMonth(Month object) {\n    this.monthObject = object;\n    return this;\n}\n\npublic MonthItemAdapter withDays(ArrayList<Day> list) {\n    this.dayList = list;\n    return this;\n}\n\npublic MonthItemAdapter withClickListener(DayClickListener listener) {\n    this.listener = listener;\n    return this;\n}\n\n/**\n * return our ViewHolderFactory implementation here\n *\n * @return\n */\n@Override\npublic ViewHolderFactory<? extends ViewHolder> getFactory() {\n    return FACTORY;\n}\n\n//The logic to bind your data to the view\n@Override\npublic void bindView(final ViewHolder viewHolder) {\n    super.bindView(viewHolder);\n\n    viewHolder.binding.name.setText(monthObject.name);\n\n}\n\n/**\n * our ItemFactory implementation which creates the ViewHolder for our adapter.\n * It is highly recommended to implement a ViewHolderFactory as it is 0-1ms faster for ViewHolder creation,\n * and it is also many many times more efficient if you define custom listeners on views within your item.\n */\nprotected static class ItemFactory implements ViewHolderFactory<ViewHolder> {\n    public ViewHolder create(View v) {\n        return new ViewHolder(v);\n    }\n}\n\n//The viewHolder used for this item. This viewHolder is always reused by the RecyclerView so scrolling is blazing fast\npublic static class ViewHolder extends RecyclerView.ViewHolder {\n    protected AdapterMonthItemBinding binding;\n    protected FastItemAdapter fastAdapter;\n\n    public ViewHolder(View view) {\n        super(view);\n\n        this.fastAdapter = new FastItemAdapter();\n\n        this.binding = DataBindingUtil.bind(view);\n        this.binding.itemRecyclerView.setLayoutManager(new LinearLayoutManager(App.getsInstance(), LinearLayoutManager.HORIZONTAL, false));\n        this.binding.itemRecyclerView.setAdapter(fastAdapter);\n        this.fastAdapter.withOnClickListener(new FastAdapter.OnClickListener<DayItemAdapter>() {\n            @Override\n            public boolean onClick(View v, IAdapter adapter, DayItemAdapter item, int position) {\n                listener.click(item.name, position);\n                return false;\n            }\n        });\n    }\n\n    public void addDay(Day object) {\n            this.fastAdapter.add(new DayItemAdapter().withDay(object));\n    }\n}\n\n}\n```\n. yeah i understand that, is not a good way. i'm going to create a new item like mikepenz said.\nThank you both!\n. ",
    "tasomaniac": "Yeah that's true. Sample app is great. But wouldn't it be also great to see some text when you press F1 and see some info for the classes. \n. That's also true :) I didn't open this for Mark to add it. I just opened it to indicate the need of it. \n. ",
    "seba123neo": "it's probably my mistake, I'm missing something, I need to know what I'm missing.\nnow I upload the code I'm using.\n. This is the code of the example\napp.zip\n. yes, the toast works fine, but the \"click effect\" is show in the other item.\n. Look the video\n20160206_161547.zip\n. now works, thanks for the explanation !!! thanks for your time \nkeep it up \n. I tried that and doesn't work, works for the other controls but not for the ImageView, is weird.\n. now works, i set WithSelectable(false) in the items and android:clickable=\"false\" in the xml of the other controls\n. i mean show the ripple like in a normal row of a recyclerview\n. ok, thanks, you can close the issue.\n. i need to show a toast with the title of the parent, of the item (childs) clicked.\n. yes, that is what i did, thanks.\n. ok, i found the solution.\njava\nfor (int i = 0; i < mFastItemAdapter.getItemCount(); i++) {\n            mFastItemAdapter.expand(i);\n}\n. same here, flash animation when swipe, what is the solution ?. yes, but i need the code to move outside of the adapter, i need to move to the appcompatactivity....\ni need call a function from the activity...\nis possible to move the code of the entire ClickEventHook class to the activity ?. Excellent, it's working now, thanks to both !!!. I mean the \"ripple effect\" when a item is \"pressed\" (in the Checkbox activity from the fastadapter sample)\nNothing happens when i press the item...only when press the checkbox.. Thanks, that's what I wanted !!!. i found mFastItemAdapter.toggleSelection(2);\nthanks !!!. Sorry, thanks for answering, I was a couple of hours until I realized I had the mode.finish() in the function what made me deselect all the items !!!. this is the entire adapter item code, (is only a cardview with a few textview inside)\n```\npublic class EstadosAdapter extends AbstractItem implements ISwipeable {\npublic int idCortesia;\npublic String fecha;\npublic String hora;\npublic String dominio;\npublic String idCuadra;\npublic String idCalle;\npublic String nombreCalle;\npublic String altura;\npublic String cruceCalle;\npublic String nombreCruceCalle;\npublic String bis;\npublic String coordenadaGPS;\npublic String enviada;\npublic String cerrada;\npublic String horaCierre;\npublic String motivo;\n\npublic String status;\npublic String amo;\npublic String zon;\npublic String mod;\npublic String usu;\npublic String veh;\n\npublic String tipo;\n\npublic boolean tieneActa;\npublic String horaActa;\npublic String zonaDescarga;\npublic boolean verificado;\n\npublic int swipedDirection;\nprivate Runnable swipedAction;\npublic boolean swipeable = true;\n\n@Override\npublic int getType() {\n    return R.id.fastadapter_estados_id;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.listaestados;\n}\n\n@Override\npublic boolean isSwipeable() {\n    return swipeable;\n}\n\n@Override\npublic EstadosAdapter withIsSwipeable(boolean swipeable) {\n    this.swipeable = swipeable;\n    return this;\n}\n\npublic void setSwipedDirection(int swipedDirection) {\n    this.swipedDirection = swipedDirection;\n}\n\npublic void setSwipedAction(Runnable action) {\n    this.swipedAction = action;\n}\n\npublic EstadosAdapter() {\n    this.idCortesia = 0;\n    this.fecha = \"\";\n    this.hora = \"\";\n    this.dominio = \"\";\n    this.idCuadra = \"\";\n    this.idCalle = \"\";\n    this.nombreCalle = \"\";\n    this.altura = \"\";\n    this.cruceCalle = \"\";\n    this.nombreCruceCalle = \"\";\n    this.bis = \"\";\n    this.coordenadaGPS = \"\";\n    this.enviada = \"\";\n    this.cerrada = \"\";\n    this.horaCierre = \"\";\n    this.motivo = \"\";\n    this.status = \"\";\n    this.amo = \"\";\n    this.zon = \"\";\n    this.mod = \"\";\n    this.usu = \"\";\n    this.veh = \"\";\n    this.tipo = \"\";\n    this.tieneActa = false;\n    this.horaActa = \"00:00\";\n    this.zonaDescarga = \"\";\n    this.verificado = false;\n}\n\n@Override\npublic void bindView(ViewHolder viewHolder, List<Object> payloads) {\n    super.bindView(viewHolder, payloads);\n\n    Context ctx = viewHolder.itemView.getContext();\n\n    String vHora, vMinExp, vMinExpActa = \"\";\n    String vEstado = status;\n    String vTipo = tipo;\n\n    if (vTipo.equals(\"C\")) {\n\n        if (zonaDescarga.equals(\"S\")) {\n            vHora = Utiles.sumarMinutos(hora, true);\n        } else {\n            vHora = Utiles.sumarMinutos(hora, false);\n        }\n\n        viewHolder.lblMonto.setVisibility(View.GONE);\n    } else {\n        vHora = hora;\n\n        viewHolder.lblMonto.setText(\"$ \" + amo);\n        viewHolder.lblMonto.setVisibility(View.VISIBLE);\n    }\n\n    int color;\n\n    if (vEstado.equals(\"EXP\")) {\n\n        if (cerrada.equals(\"S\")) {\n            color = ContextCompat.getColor(ctx, R.color.md_green_500);\n        } else {\n            color = ContextCompat.getColor(ctx, R.color.md_red_500);\n        }\n\n        if (tieneActa) {\n            color = ContextCompat.getColor(ctx, R.color.md_blue_500);\n            vMinExpActa = \" (\" + Utiles.traeDiferenciaMinutos(horaActa, Utiles.traeHoraActual()) + \" min.)\";\n        } else {\n            vMinExpActa = \" (\" + Utiles.traeDiferenciaMinutos(vHora, Utiles.traeHoraActual()) + \" min.)\";\n        }\n\n        vMinExp = \" (\" + Utiles.traeDiferenciaMinutos(vHora, Utiles.traeHoraActual()) + \" min.)\";\n        viewHolder.lblHora.setText(vHora + vMinExp);\n\n        new BadgeStyle().withTextColor(Color.WHITE).withColor(ContextCompat.getColor(ctx, R.color.md_red_500)).style(viewHolder.lblEstado);\n        viewHolder.lblEstado.setText(vEstado);\n    } else {\n        color = ContextCompat.getColor(ctx, R.color.md_green_500);\n\n        if (!vTipo.equals(\"C\")) {\n            viewHolder.lblHora.setText(Utiles.traeDiferenciaHoras(Utiles.traeHoraActual(), vHora));\n        } else {\n            viewHolder.lblHora.setText(hora + \" (\" + Utiles.traeDiferenciaHoras(Utiles.traeHoraActual(), vHora) + \")\");\n        }\n\n        new BadgeStyle().withTextColor(Color.WHITE).withColor(ContextCompat.getColor(ctx, R.color.md_green_500)).style(viewHolder.lblEstado);\n        viewHolder.lblEstado.setText(vEstado);\n    }\n\n    if (verificado) {\n        viewHolder.lblVerificado.setVisibility(View.VISIBLE);\n        viewHolder.lblVerificado.setText(\"verif\");\n        new BadgeStyle().withTextColor(Color.WHITE).withColor(ContextCompat.getColor(ctx, R.color.md_deep_orange_500)).style(viewHolder.lblVerificado);\n    } else {\n        viewHolder.lblVerificado.setVisibility(View.GONE);\n    }\n\n    if (tieneActa) {\n        viewHolder.picTieneActa.setVisibility(View.VISIBLE);\n    } else {\n        viewHolder.picTieneActa.setVisibility(View.GONE);\n    }\n\n    TextDrawable drawable = TextDrawable.builder().buildRound(vTipo, color);\n    viewHolder.ivTipo.setImageDrawable(drawable);\n\n    viewHolder.lblDominio.setText(dominio);\n    viewHolder.lblDireccion.setText(nombreCalle + \" \" + altura);\n\n    if (Utiles.cStrNull(motivo)) {\n        viewHolder.lblMotivo.setVisibility(View.GONE);\n    } else {\n        viewHolder.lblMotivo.setVisibility(View.VISIBLE);\n\n        if (!tieneActa) {\n            vMinExpActa = \" (\" + Utiles.traeDiferenciaMinutos(horaCierre, Utiles.traeHoraActual()) + \" min.)\";\n        }\n\n        viewHolder.lblMotivo.setText(motivo + vMinExpActa);\n    }\n\n    viewHolder.lblTipoVehiculo.setText(veh.toUpperCase());\n    viewHolder.lblTipoUsuario.setText(usu.toUpperCase());\n    viewHolder.lblFormaPago.setText(mod.equals(\"A\") ? \"ADELANTADO\" : \"DIFERIDO\");\n\n    if (cerrada.equals(\"S\")) {\n        viewHolder.lblEstado.setVisibility(View.GONE);\n    } else {\n        viewHolder.lblEstado.setVisibility(View.VISIBLE);\n    }\n}\n\n@Override\npublic void unbindView(ViewHolder holder) {\n    super.unbindView(holder);\n    holder.lblVerificado.setText(null);\n    holder.lblDominio.setText(null);\n    holder.lblHora.setText(null);\n    holder.lblDireccion.setText(null);\n    holder.lblMonto.setText(null);\n    holder.lblTipoVehiculo.setText(null);\n    holder.lblTipoUsuario.setText(null);\n    holder.lblFormaPago.setText(null);\n    holder.lblMotivo.setText(null);\n}\n\n@Override\npublic ViewHolder getViewHolder(View v) {\n    return new ViewHolder(v);\n}\n\nprotected static class ViewHolder extends RecyclerView.ViewHolder {\n\n    protected View view;\n\n    ImageView ivTipo;\n    TextView lblVerificado;\n    TextView lblDominio;\n    TextView lblHora;\n    TextView lblEstado;\n    TextView lblDireccion;\n    TextView lblMonto;\n    TextView lblTipoVehiculo;\n    TextView lblTipoUsuario;\n    TextView lblFormaPago;\n    TextView lblMotivo;\n    ImageView picTieneActa;\n\n    public ViewHolder(View v) {\n        super(v);\n        this.view = v;\n\n        ivTipo = (ImageView) v.findViewById(R.id.ivTipo);\n        lblVerificado = (TextView) v.findViewById(R.id.lblVerificado);\n        lblDominio = (TextView) v.findViewById(R.id.lblDominio);\n        lblHora = (TextView) v.findViewById(R.id.lblHora);\n        lblEstado = (TextView) v.findViewById(R.id.lblEstado);\n        lblDireccion = (TextView) v.findViewById(R.id.lblDireccion);\n        lblMonto = (TextView) v.findViewById(R.id.lblMonto);\n        lblTipoVehiculo = (TextView) v.findViewById(R.id.lblTipoVehiculo);\n        lblTipoUsuario = (TextView) v.findViewById(R.id.lblTipoUsuario);\n        lblFormaPago = (TextView) v.findViewById(R.id.lblFormaPago);\n        lblMotivo = (TextView) v.findViewById(R.id.lblMotivo);\n        picTieneActa = (ImageView) v.findViewById(R.id.picTieneActa);\n    }\n}\n\n}\n```\n```\npublic class ControlPorCuadra extends AppCompatActivity implements SimpleSwipeCallback.ItemSwipeCallback, ItemTouchCallback {\nprivate FastItemAdapter<EstadosAdapter> fastItemAdapter;\n\nprivate RecyclerView rvEstados;\nprivate List<EstadosAdapter> arrEstados;\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.fconsultaestado);\n\n    Toolbar mToolbar = (Toolbar) findViewById(R.id.toolbar);\n    setSupportActionBar(mToolbar);\n\n    getSupportActionBar().setTitle(\"\");\n    getSupportActionBar().setSubtitle(\"Sin cuadra\");\n    getSupportActionBar().setHomeButtonEnabled(false);\n\n    fastItemAdapter = new FastItemAdapter<>();\n\n    fastItemAdapter.withSelectionListener(new ISelectionListener<EstadosAdapter>() {\n        @Override\n        public void onSelectionChanged(EstadosAdapter item, boolean selected) {\n        }\n    });\n\n    fastItemAdapter.withOnPreClickListener(new OnClickListener<EstadosAdapter>() {\n        @Override\n        public boolean onClick(View v, IAdapter<EstadosAdapter> adapter, EstadosAdapter item, int position) {\n            return false;\n        }\n    });\n\n    fastItemAdapter.withOnPreLongClickListener(new OnLongClickListener<EstadosAdapter>() {\n        @Override\n        public boolean onLongClick(View v, IAdapter<EstadosAdapter> adapter, EstadosAdapter item, int position) {\n            return false;\n        }\n    });\n\n    rvEstados = (RecyclerView) findViewById(R.id.rvEstados);\n    rvEstados.setLayoutManager(new LinearLayoutManager(this));\n    rvEstados.setAdapter(fastItemAdapter);\n\n    ThreadBuscarCuadra task = new ThreadBuscarCuadra(this);\n    task.execute(\"\");\n}\n\nprivate class ThreadBuscarCuadra extends AsyncTask<String, String, String> {\n\n    private Context ctx;\n\n    private MaterialDialog dlgBuscar;\n\n    public ThreadBuscarCuadra(Context ctx) {\n        this.ctx = ctx;\n    }\n\n    protected void onPreExecute() {\n        fastItemAdapter.clear();\n    }\n\n    protected String doInBackground(String... params) {\n        // Fill array with data from web\n        Sync oSync = new Sync();\n        arrEstados = oSync.controlPorCuadra();\n\n        return \"\";\n    }\n\n    protected void onPostExecute(String result) {\n        fastItemAdapter.add(arrEstados);\n\n        SimpleSwipeCallback touchCallback = new SimpleSwipeCallback(ControlPorCuadra.this, null, ItemTouchHelper.RIGHT);\n\n        ItemTouchHelper touchHelper = new ItemTouchHelper(touchCallback);\n        touchHelper.attachToRecyclerView(rvEstados);\n    }\n}\n\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    switch (item.getItemId()) {\n        case android.R.id.home:\n            onBackPressed();\n            return true;\n        default:\n            return super.onOptionsItemSelected(item);\n    }\n}\n\n@Override\npublic boolean itemTouchOnMove(int oldPosition, int newPosition) {\n    Collections.swap(fastItemAdapter.getAdapterItems(), oldPosition, newPosition);\n    fastItemAdapter.notifyItemMoved(oldPosition, newPosition);\n    return false;\n}\n\n@Override\npublic void itemTouchDropped(int oldPosition, int newPosition) {\n}\n\n@Override\npublic void itemSwiped(int position, int direction) {\n\n    final EstadosAdapter item = fastItemAdapter.getItem(position);\n    item.setSwipedDirection(direction);\n\n    final Runnable removeRunnable = new Runnable() {\n        @Override\n        public void run() {\n            item.setSwipedAction(null);\n            int position = fastItemAdapter.getAdapterPosition(item);\n            if (position != RecyclerView.NO_POSITION) {\n                fastItemAdapter.remove(position);\n            }\n        }\n    };\n\n    final View rv = findViewById(R.id.rvEstados);\n    rv.postDelayed(removeRunnable, 0);\n\n    item.setSwipedAction(new Runnable() {\n        @Override\n        public void run() {\n            rvEstados.removeCallbacks(removeRunnable);\n            item.setSwipedDirection(0);\n            int position = fastItemAdapter.getAdapterPosition(item);\n            if (position != RecyclerView.NO_POSITION) {\n                fastItemAdapter.notifyItemChanged(position);\n            }\n        }\n    });\n\n    fastItemAdapter.notifyItemChanged(position);\n}\n\n}`\n```\nthis is te activity, only has a asynctask, only search data from the web and fill the array.... Fixed !!! there was a NULL item in the list !!! \nnow works perfect. I mean there was a NULL string in the list. ",
    "SMontiel": "Thanks @mikepenz. \nThis library is great.\n. ",
    "hsdmiranda": "One thing that I would like to highlight about this library is that you guys work super fast and answer every question. That is for sure the biggest plus. Congratulation for the amazing work.\n. In case someone needs to know when an item has been dropped, this is how I implemented:\nI extended the original interface from fastAdapterExtensions and added one more callback method.\npublic interface ImprovedItemTouchCallback extends ItemTouchCallback {\n    void onDrop(Integer mFrom, Integer mTo);\n}\nAnd this is my callback that remembers the location of the item to send the information on the onDrop. I also added a small snippet that checks if the target is draggable, so my item does not swipe with it (very specific for my user case i guess, it can be removed)\n``` java\npublic class ImprovedDragCallback extends SimpleDragCallback {\nprivate Integer mFrom = null;\nprivate Integer mTo = null;\nprivate ImprovedItemTouchCallback callback;\n\npublic ImprovedDragCallback(ImprovedItemTouchCallback itemTouchCallback) {\n    super(itemTouchCallback);\n    this.callback = itemTouchCallback;\n}\n\n@Override\npublic boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {\n    if (target.itemView.getTag() instanceof IDraggable) {\n        if (((IDraggable) target.itemView.getTag()).isDraggable()) {\n            if (mFrom == null) {\n                mFrom = viewHolder.getAdapterPosition();\n            }\n            mTo = target.getAdapterPosition();\n\n            return super.onMove(recyclerView, viewHolder, target);\n        }\n    }\n\n    return false;\n}\n\n@Override\npublic void clearView(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder) {\n    super.clearView(recyclerView, viewHolder);\n\n    if (mFrom != null && mTo != null) {\n        callback.onDrop(mFrom, mTo);\n    }\n\n    // clear saved positions\n    mFrom = mTo = null;\n}\n\n}\n```\n. I tried to make the project work on my machine and was failing for some weird reasons. So, I gave up on the pull request. I will give another try later, with more appropriated naming.\n. Sorry for the delay, crazy week here. @mikepenz the onMoved its called before the oDrop. The onMove is called every time an item passes over another item.\n. Thanks for the quick reply as always @mikepenz. It worked\n. @ncapdevi did you give a shot for that library? I also need a better sticky header\n. @Rainer-Lang I did, but it wasn't so simple like was described. \n. Sorry for the delay. This is what i did. \nThis class also contains something for drag and drop. I created a callback to notify when the item is actually dropped. \n`\npublic class ImprovedSwipeDragCallback extends SimpleSwipeDragCallback {\n```\nprivate Integer mFrom = null;\nprivate Integer mTo = null;\nprivate ImprovedItemTouchCallback callback;\npublic ImprovedSwipeDragCallback(ImprovedItemTouchCallback itemTouchCallback, SimpleSwipeCallback.ItemSwipeCallback itemSwipeCallback, Drawable leaveBehindDrawable, int swipeDirs, @ColorInt int bgColor) {\n    super(itemTouchCallback, itemSwipeCallback, leaveBehindDrawable, swipeDirs, bgColor);\n    this.callback = itemTouchCallback;\n}\n@Override\npublic boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {\n    if (target.itemView.getTag() instanceof IDraggable) {\n        if (((IDraggable) target.itemView.getTag()).isDraggable()) {\n            if (mFrom == null) {\n                mFrom = viewHolder.getAdapterPosition();\n            }\n            mTo = target.getAdapterPosition();\n        return super.onMove(recyclerView, viewHolder, target);\n    }\n}\n\nreturn false;\n\n}\n@Override\npublic int getSwipeDirs(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder) {\n    if (recyclerView==null || viewHolder == null)\n        return super.getSwipeDirs(recyclerView,viewHolder);\n    if (viewHolder.itemView.getTag() instanceof IDraggable) {\n        if (((IDraggable) viewHolder.itemView.getTag()).isDraggable()) {\n            return super.getSwipeDirs(recyclerView,viewHolder);\n        } else {\n            return 0;\n        }\n    } else {\n        return 0;\n    }\n}\n@Override\npublic void clearView(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder) {\n    super.clearView(recyclerView, viewHolder);\nif (mFrom != null && mTo != null) {\n    callback.onDrop(mFrom, mTo);\n}\n\n// clear saved positions\nmFrom = mTo = null;\n\n}\n```\n}\n`\n. ",
    "timusus": "No, once I realised I could just create a factory which in turn creates the VieeHolder without using reflection, I was able to get it working just fine. \nSorry, I didn't realise this was the recommended approach. \n. ",
    "jonas-arkulpa": "I'm using FastAdapter in one of our Projects and need something similar to this.\n@mikepenz  Do you have a eta of this implementation, or is it worth to rebuild something like this?\nAwesome work guys.\n. @Rainer-Lang I didn't want to hurry, I know that even the best developers need time. ;)\nI was just looking for a proper way to accomplish my given problem and found this thread.\n@mikepenz I already pulled your sample code but I'm not sure if I should implement it this way or wait for the proper implementation.\nAlso my current problem is somewhat different:\nI want to display buttons behind the swiped view item like in the following screenshot.\nI found a lot of information about button leave behinds with only dead ends.\nLike Paul Burke's article on Medium, where he mentions multiple times that he will cover this in part 3, which is't existing jet.\nSo I'll try it with this solution and report back if you want.\n\n. @mattiasbe I discovered AndroidSwipeLayout today, because you also contributed to this project, but I wasn't sure if it is the best combination with FastAdapter.\nSo thanks for your clarification, I will try it this way.\nI know that buttons behind the view do not follow material standards but it's in the design specification for my current project.\n. @mikepenz thanks for the quick reply and fix.\n. ",
    "hmedat": "I agreed with you about above code, \nBut I need to show progress view at end of adapter, if I has more data to load.\nHow I can do it with this library \n. No, Can I find solution of my problem?\n. I will try it, \nBig thanks\n. Can you add  this option in your library,\n. Ok \n. Thank You.\n. Thank you, but i prefer to put it in your deprecated function\n. Ok Thank  you\n. ",
    "DJafari": "tested it, but only shows Text item\nsample :\n``` java\nthis.list = (RecyclerView) findViewById(R.id.list);\n        this.list.setLayoutManager(new LinearLayoutManager(this));\n        this.list.setItemAnimator(new DefaultItemAnimator());\n        this.list.setHasFixedSize(true);\n    this.fastAdapter = new FastAdapter();\n    GenericItemAdapter<Text, GenericText> itemAdapter = new GenericItemAdapter<>(GenericText.class, Text.class);\n    GenericItemAdapter<Pic, GenericPic> itemAdapter2 = new GenericItemAdapter<>(GenericPic.class, Pic.class);\n    this.list.setAdapter(itemAdapter2.wrap(itemAdapter.wrap(fastAdapter)));\n\n    itemAdapter.addModel(new Text(\"Test 1\"));\n    itemAdapter2.addModel(new Pic(\"Test 1\"));\n\n```\n. @Rainer-Lang  tnx for your reply, but if you can, give an example to me\n@mikepenz in your example you have one model (IconModel) with 2 different ItemView ( GenericIconItem and RightGenericIconItem )\ni have 2 model ( Text and Pic ) with own's ItemView ( TextViewItem and PicViewItem )\n. @Rainer-Lang realy tnx !\nand last question, why android studio highlight this section of code ? where is problem ?\n\n. @FabianTerhorst thanks for your reply,\nbut i have multiple type of model, and i can't define a model type to GenericItemAdapter\n. @Rainer-Lang yes it works, but how can remove it ? \n. @Rainer-Lang ok thanks :-)\n@FabianTerhorst my models yes, already extends from object, but my GenericItems is different :\npublic class GenericText extends GenericAbstractItem<Text, GenericText, GenericText.ViewHolder>\npublic class GenericPic extends GenericAbstractItem<Pic, GenericPic, GenericPic.ViewHolder> \n. @FabianTerhorst exactly must be ignored this warning .\nthanks for your reply \n. @mattiasbe see data binding link.\nwith data binding we can set variables value in xml layout, in fastadapter it isn't .\nsample :\nxml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <data>\n       <variable name=\"user\" type=\"com.example.User\"/>\n   </data>\n   <LinearLayout\n       android:orientation=\"vertical\"\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"match_parent\">\n       <TextView android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n           android:text=\"@{user.firstName}\"/>\n       <TextView android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n           android:text=\"@{user.lastName}\"/>\n   </LinearLayout>\n</layout>\n. @mattiasbe your example is helpfull, thanks for your help .\nand thanks again from @mikepenz  for this great library and sure best support.\n. thanks @mikepenz :)\nin maven everything is ok, but when i add in my gradle file not synced, i don't know why\ncan you test it at new sample project ?\n. @mikepenz i waiting 20 minute , sync not completed and no error, but version 1.2.3 synced with 10 second time .\nyes i using v23.2.1 version of support library\n. @mikepenz i tested it with v1.0.5, in the statusbar shows downloading ... so it's not cache and ok\np.s : test again with version 1.2.4 and synced successful ! probably problem is my connection\nthanks\n. @mikepenz if possible, create builder api for adapter creation, see SmartAdapter\njava\nSmartAdapter.items(myObjectList).map(Tweet.class, TweetView.class).into(myListView);\n. @mikepenz  ok thanks\n. thanks\nbut how can get position in GenericAbstractItem ? \n. thanks @Rainer-Lang \n. i want to have a ExpandableItem with cardView, when this item expanded, more items add inside this cardview\n( sorry for my bad english )\n. @mikepenz no , my main question is : how can i add sub items inside the cardview of expandable item ?\nmy subitems not having cardview, just simple, but i want subitems adds inside the cardview, not outer\n. @mikepenz @FabianTerhorst  ok thanks for your helps\n. ok mikenpenz, thanks\ni will tried it, thanks for your answer\n. @mikepenz if you havn't any idea about this, please close this issue. @mikepenz it's mean can not possible handle it with fast adapter ? even in v3 ?. @mikepenz can you tell me how can i achieve to this ?\ni have want add object to adapter and sticky automatically, without define onCreateHeaderViewHolder and onBindHeaderViewHolder for each sticky header type. @mikepenz : this is correct ?\njava\npublic class NewsDividerItem extends ModelAbstractItem<NewsDivider, NewsDividerItem, NewsDividerItem.ViewHolder> {\n    @Override\n    public boolean isEnabled() {\n        return false;\n    }\n}\nif correct, always item is clickable yet\ni checked source, disable item only disable action of onclick, but view.setOnClick is set before. @mikepenz : this trick is work :\njava\n@Override\npublic void bindView(ViewHolder holder, List<Object> payloads) {\n    super.bindView(holder, payloads);\n    holder.itemView.setOnClickListener(null);\n}\nbut it's to better if possible solve this problem without this hardcode. @mikepenz yes you say right, i use it in simple items such headers and ... that there is no click listener. @mikepenz thanks for your help\nif i want use one adapter this is correct ?\njava\nint c = this.itemAdapter.getAdapterItemCount() - 1;\nif(this.itemAdapter.getAdapterItem(c) instanceof LazyLoadingItem) {\n    this.itemAdapter.remove(this.itemAdapter.getGlobalPosition(c));\n}. > Well there are currently no plans to implement something like this inside the FastAdapter itself\nbad news :(\n\nnothing prevents using a third party library for this purpose (as you can see in the sample app)\n\nin your approach you have a header for some items, but i want some of my items be sticky when reached, i think there is no way to implement this in FastAdapter with out of box library. i think better person to support this is you\nplease when you got a free time, add it to your library, it is popular feature and useful in all apps\nthanks. @mikepenz \nok i will tried to implement this\nplease answer my question to help me in this way :\n\n\nhow can get generated and binded view for example at adapterPosition: 10 ?\n\n\nhow can get item viewHolder for example at adapterPosition: 10 ?. i have a long textview (Html.fromHtml) with many http image, sure images cached, but rebind of this caused a lag. @mikepenz ok i found a way\n\n\n```java\nprivate ViewHolder viewHolder;\n@Override\n@NonNull\npublic ViewHolder getViewHolder(@NonNull View v) {\n    if(viewHolder == null) {\n        viewHolder = new ViewHolder(v);\n        viewHolder.setIsRecyclable(false);\n    }\n    return viewHolder;\n}\n```\nIn your opinion it's ok ? not caused another problem ?. @mikepenz good, thanks for your help. @mikepenz can i know what is difference?\nno i use one item with this viewType. ",
    "PDDStudio": "@mikepenz I'm using 1.0.6\n. @mikepenz you can check out the repository from the link I've posted and build the sample app. The application starts without any problems but by switching to another fragment via the navigation drawer and navigating back to 'ARP information' the crash occurs.\n. @mikepenz sure, will do so asap and report back!\n. @mikepenz issue is still present with 1.1.1\n. @mikepenz thanks for pointing out, but unfortunately your workaround isn't working at all, same issue as before. (to mention: I added the Handler into the fragment's onViewCreated() method, is that correct) ?\n. @mikepenz am I adding it at the correct place? Otherwise could you create a pull request please? :smile:\n. ",
    "rubengees": "Yeah sure I know that I can sort myself, but it would be really handy if I won't have to. When I read the description of FastAdapter I thought it was some kind of All-in-one adapter which does all the common things you do with lists without the need for you to write the boilerplate yourself. So I don't think this is out of scope. The lists of other languages like C# offer such functionality out of the box.\nAnd even if it easy, I think it just belongs to the adapter to do such tasks and not into the activity or wherever the adapter is used.\n. Great! Thank you.\n. Nice, thank you for adding me \ud83d\udc4c \n. Do we really need to reset the list here? Isn't there a method like resort() or something?\nnotifyDataSetChanged() did not help.\n. Why doesn't set() work, whereas setNewList() works if there is already a Comparator from a previous instance state?\n. Well at least I would expect that.\n. What is the exact difference between those two? I haven't studied the code much so far...\n. Sure, I copied that from another layout :D\n. What do you mean? It is there.\n. Whoops I forgot about that :D\nThat is the default template I set in Android Studio.\n. Fixed.\n. Ah we can't use an AppBarLayout as the design support lib is not added as a dependency. \nI wouldn't add it for this only though.\n. This is not true as you can see in the diff above:\n.withDescription(R.string.sample_radiobutton_item_descr)\n. Yes you're right. I change it right away.\n. Done. Have a look.\n. Done.\n. ",
    "kentdev92": "Thanks so much for your support @Rainer-Lang @mikepenz  :D Thanks so much again!\n. ",
    "brittonjg": "Unbelievable mistake on my part. I was just missing - fastItemAdapter.toggleExpandable(position);\nI'd just been looking in the wrong place for a couple of hours. Is that the missing bit you were talking about?\n. @mikepenz Awesome! Thanks for your quick reply and work. Much appreciated.\n. @mikepenz Update looks good. Only issue is your arrow starts down in the example and on click doesn't rotate up as per the Google design guidelines. Just a case of swapping the animations I believe.\nApart from that, thanks for the speedy change.\nEdit - Had to check the guidelines as they are reverse as to what I'd expect...\n. You're totally correct! Ignore my inaccuracies :D\nNice update, the endless scroll is another great addition too :+1: \n. @FabianTerhorst thanks for that. I will have a look into it. Seems way more promising that altering the ItemAdapter.\n. @Rainer-Lang I am not sure what you mean, I have specifically removed swipe to refresh for this feature. Once the users reaches the top of the list, I am going to add new items above that once they have been retrieved from the server. This is a non standard UI feature.\n@mikepenz Not an issue ;) I have completed the change in my project, but I haven't dealt with the current page implementation that you have. I'm not sure it makes much sense when scrolling up the list, because they would be negative, unless I always call it 0 and increase the total number.\nI use getAdapterItem which has an ID that I pass to the server to load previous content, but that is totally out of scope of FastAdapter.\n. @Rainer-Lang I load a different set of items.\nIn my case I have a set of game fixtures. The list starts at today's games and scrolls down for future games and up for previous games. So I have the potential to load future games at the bottom of the list and past games when the user reaches the top. Have I explained that better now?\n. @Rainer-Lang I have it working now as per @mikepenz instructions, it's just the page number count and how you want that to work before I create a PR\n. @mikepenz Will do. Maybe something for Monday though :)\n. ",
    "jlelse": "@Rainer-Lang I didn't use it\n. @Rainer-Lang I did it without FastAdapter\n. But here the hole swipe thing isn't defined in the item itself. It is in the activity. How do I define it in the item?\n. In which package is this SwipeDragCallback?\n. I still don't understand how I can add SimpleSwipeCallback to AbstractItem xD\n. It will be hard, but doable I think. Thank you!\n. @Rainer-Lang I gave it up. I'll find another way of implementing what I need.\n. It's working. I just had some mistakes in my code. Sorry for inconvenience.\n. ",
    "franciscofranco": "Makes sense. I eventually changed my code and couldn't reproduce this anymore. I'm using an event bus to pass some stuff from inside the ViewHolder to another class, but I wasn't unregistering the object from the bus if the object was removed, so I was trying to remove a null object from the adapter.\nThanks & sorry for the false alarm, I just posted in case I stumbled into some weird bug that I wouldn't be able to reproduce sometime in the future :)\n. Not yet, haven't had the time yet. I'll contact you on Slack about it\n. ",
    "jidesoft": "@brittonjg did you by any chance finding a solution? I have the same requirement as you. Thanks. \n. @FabianTerhorst I tried but noticed RecyclerView.OnScrollListener#onScrolled was not called when user tries to scroll beyond the top. I probably can workaround it by adding extra items to both beginning of the list and the end of the list so that onScrolled is always triggered in either case. But just want to ask you guys first to find out if there is already a solution. \n. ",
    "BobOtike": "@mattiasbe I just stumbled upon this issue since I also want to use the FastAdapter with databinding. I was using this library before: https://github.com/evant/binding-collection-adapter, but it is lacking some features like custom ViewHolders for example. I was just just wondering about your example, how do you retrieve the correct Workout for any given position in getModel? It would be nice if you could elaborate on that. \nAs far as neat ideas/shortcuts go, the other library I referenced offers the possibility to bind the whole item collection to the RecyclerView and takes care of the proper bindings in detail for every ViewHolder from that, that's exactly why I'm not entirely sure of how to do that^^\n. Nevermind @mattiasbe, I realized I can simply wrap my model inside my AbstractItem implementation and that's about it. Guess it was too early in the morning and I missed the forest for the trees ;) \nBut maybe @mikepenz is interested in the feature I mentioned as a suggestion related to the original purpose of this issue. \n. Sure, I will put something together and let you know once I have finished. \nIn the meantime, to answer your questions:\n- I have also tried with notifyAdapter*,  same result\n- I have both tried set as well as setNewList, no change in behaviour\n- I have multiple lists, some use identifiers provided by me and others the idDistributor, also has no \n   influence\n. Hey @mikepenz, here goes the example:\nhttps://www.dropbox.com/s/jaeak6fheby1r40/SelectedSample.zip?dl=0\n. Thanks @mikepenz for the super-fast responses, as always! \nThis solved my selection issues when swapping the items in the adapter. \nOne minor thing remains though: while the selecting shows the proper change without animation now, when deselecting I get an unclean transition, there is a slight afterglow of the ripple (running Lollipop on my device) to be seen. Do you by any chance have an idea how to get rid of that as well? \nThis is really more an aesthetic issue than a functional one :D\n. @mikepenz I think at some point I did it already and if I remember correctly this creates again this kind of blinking effect,  but I will check it out. \nFastAdapterUIUtils#getSelectableBackground which is part of assigning the background drawable retrieves R.attr.selectableItemBackground which in Lollipops case is a ripple drawable. You can even see it in the sample I've sent you, after deactivating the animation and only when you deselect by clicking the item (weirdly enough only when you have selected it manually before as well), not when using select or set.  In the sample it's not very prominent because of the white background and the lack of contrast but in my apps theme you see it very clearly. \n. I don't want to completely eliminate the ripple, more like getting the best of both worlds i.e. having ripple when clicking/long clicking but remove only the afterglow when deselecting. \nI will try to figure out a way, if I do I'll let you know. \nThanks for your sublime support and keep up the good work, your libs are truly amazing, cheers! \n. @mikepenz Turns out it was rather easy to achieve:\nI have created my own getSelectableBackground based off of FastAdapterUIUtils#getSelectableBackground and only  commented out this line:\nstates.setEnterFadeDuration(duration);\nInstead of removing both animations I only remove the one for entering, result: no bug when setting already selected items, ripple effect when clicking an item and no afterglow since the fadeout animation is still in place. \n. ",
    "R4md4c": "Yeah That is correct, It was fixed by adding the line \n-dontwarn com.mikepenz.fastadapter_extensions.UndoHelper \nto the proguard-rules.pro file.\nAlso I've noticed that ReflectionBasedViewHolderFactory, doesn't work when proguard is enabled, because it tries to find the ViewHolder using reflection and it fails because this ViewHolder might be obfuscated. Don't you think that you should mention in README.md that you have to provide your own ItemFactory when proguard is enabled?\n. Great then, Thank you for your extremely nice library!\n. @Rainer-Lang \nI don't think upgrading to v1.4.0 would solve the issue, according to this, mLoading will be always true when the error happens, and since there is no change in mTotalItemCount, then onLoadMore will never be callled.\n. ",
    "gromiloff": "@mikepenz you commit incorrect code: not mItems.set, but mItems.add\nlist.set - method for update item in position, not insert.\nSo, please reopen task again.\nChecked by 1.2.7 version - throw exeption\n. Sorry it's work fine. Logic was incorrect\nreturn (position != size()) ? 1: a.getSpanCount();\n. @mikepenz the main problem in case when user click to item, so all deselected items are updated, but all selected - not updated. How I can update selected items ?\nPS: my case is applicable for drawer menu list.. getAdapter().withSelectWithItemUpdate(true)\nis wokr for my case, So closing issue.. Thanks a lot!. ",
    "masehitam": "@gromiloff it's old but what is size() ?. ",
    "readbeard": "I think you can solve the problem in this way:\nIn class UndoHelper, in the method\njava\npublic Snackbar remove(View view, String text, String actionText, @Snackbar.Duration int duration, Set<Integer> positions)\nyou can add the following line:\njava\nif(positions.isEmpty()){\n  return Snackbar snackbar = Snackbar.make(view,\"No item selected\",duration);\n}\n. Hi,\ni think your fix won't work. In fact, if you call mode.finish(), the undo operation won't work anymore. I tried it before your reply, and that's the reason why i posted my solution.\nDo you confirm that?\nThanks\n. Here is my solution to the improvement. Let me know if you like it and if it is a correct behaviour for you. \nYou just need to edit the UndoHelper.java file, in particoular this 2 methods (lines with //<--- comment are the interesting ones):\n``` java\npublic Snackbar remove(View view, String text, String actionText, @Snackbar.Duration int duration, Set positions,  ActionMode actionMode) { //<---\n. . . \nprivate void doChange(ActionMode actionMode) {\n        if (mHistory != null) {\n            if (mHistory.action == ACTION_REMOVE) {\n                Integer[] positions = new Integer[mHistory.positions.size()];\n                mHistory.positions.toArray(positions);\n                for (int i = positions.length - 1; i >= 0; i--) {\n                    FastAdapter.RelativeInfo relativeInfo = mHistory.items.get(i);\n                    if (relativeInfo.adapter instanceof IItemAdapter) {\n                        ((IItemAdapter) relativeInfo.adapter).remove(positions[i]);\n                    }\n                }\n            }\n        }\n        actionMode.finish(); // <---\n    }\nprivate void undoChange() {\n    if (mHistory != null) {\n        if (mHistory.action == ACTION_REMOVE) {\n            int count = 0;\n            for (Integer position : mHistory.positions) {\n                FastAdapter.RelativeInfo<Item> relativeInfo = mHistory.items.get(count);\n                if (relativeInfo.adapter instanceof IItemAdapter) {\n                    IItemAdapter<Item> adapter = (IItemAdapter<Item>) relativeInfo.adapter;\n                    adapter.add(position, relativeInfo.item);\n                    if (relativeInfo.item.isSelected()) {\n                        mAdapter.deselect(position); //<---\n                    }\n                }\n                count++;\n            }\n        }\n    }\n    mHistory = null;\n}\n\n``\n. I just used the same code you wrote in the README file. If i remove that snippet, the layout shows correctly. I think it is related to the library, and also the collapsing toolbar used it MaterialDrawer was not useful, because i have the same code of that one.\nDo you have some other idea?\nThanks\n. Hi,\ni found the problem. It was this callMaterializeBuilder().withActivity(this).build();that is from your other libraryMaterialDrawer`. I don't know if opening this problem can be useful for that library but sorry for opening the issue here!\n. yep! sorry again for wrong repo issue.\n. ",
    "jasonsparc": "Nice! :D\n. @FabianTerhorst: May I have a slight suggestion? :)\nI think the following would reduce the lines of code. Perfect for cleanup! :D\n``` java\nprivate boolean mIsOrientationHelperVertical;\nprivate OrientationHelper mOrientationHelper;\n...\nprivate View findOneVisibleChild(int fromIndex, int toIndex, boolean completelyVisible,\n                                       boolean acceptPartiallyVisible) {\n    if (mLayoutManager.canScrollVertically() != mIsOrientationHelperVertical\n            || mOrientationHelper == null) {\n        mIsOrientationHelperVertical = mLayoutManager.canScrollVertically();\n        mOrientationHelper = mIsOrientationHelperVertical\n            ? OrientationHelper.createVerticalHelper(mLayoutManager);\n            : OrientationHelper.createHorizontalHelper(mLayoutManager);\n    }\n    ...\n}\n```\n. Following up with some more javadocs\n. Okay! I'm probably done adding new commits. :)\n. @mikepenz Sorry if I wasn't able to provide a sample. I'll try to push a sample tomorrow :D\nCurrently, I'm using it like this:\n``` java\nprivate void setUpFastAdapter(Bundle savedInstanceState) {\n    final ItemAdapter itemAdapter = new ItemAdapter();\n    itemAdapter.wrap(fastAdapter);\nfinal FooterAdapter loaderFooter = new FooterAdapter();\nloaderFooter.wrap(fastAdapter);\n\n...\n\nList<ProgressItem> loaderFooterItems = Collections.singletonList(new ProgressItem());\nloaderFooter.setNewList(loaderFooterItems);\n\n// TODO optimize loadMoreThreshold parameter according to screen size\nfinal int loadMoreThreshold = 30;\n\n// TODO optimize size parameter according to largest screen size\nfinal int size = 7; // request in small bursts\n\nStaticState state = this.state.get();\n\nRecyclerView recycler = binding.recycler;\n\nnew EndlessScrollHelper<Project>(recycler.getLayoutManager(), loadMoreThreshold)\n        .withOnLoadMoreHandler((out, currentPage) -> {\n            currentPage = currentPage - 1; // Sorry, we use zero-based indexes\n\n            ZipMatch.api().getBookmarkedProjects(currentPage, size)\n                    .subscribeOn(Sched.io())\n                    .observeOn(Sched.computation())\n                    .compose(Op.catchError(state.errors))\n                    .observeOn(Sched.main())\n                    .subscribe(out::deliverNewItems);\n        })\n        .withNewItemsDeliveredTo(itemAdapter, this::toItem, (newData, page) -> {\n            // Extra post-processing callback\n\n            if (newData.isEmpty() || newData.size() < size) {\n                // An empty return or a return with less items than expected indicates we have just finished loading.\n                loaderFooter.setNewList(Collections.emptyList());\n            } else {\n                this.saveState.addAll(newData);\n            }\n        })\n        .addTo(recycler)\n        .onLoadMore(1); // Perform initial loading\n\n}\n```\n. @FabianTerhorst Cool! :) I'll be pushing new commits.\n. ",
    "or-dvir": "@Rainer-Lang i am also interested in an empty view.\nhave you implemented this yet? if so how would i use it?. @mikepenz forgive me but i dont understand how this link implements an empty view...\nin the meantime i have tried using \"registerAdapterDataObserver()\" and overriding \"onChanged()\" like many people suggest on different forums. however, this method is not invoked :(\nany idea why?\nhere is my implementation:\n```\n@Override\n    public void onResume()\n    {\n        super.onResume();\n        mAdapter.registerAdapterDataObserver(mDataObserver);\n    }\n@Override\npublic void onPause()\n{\n    super.onPause();\n    mAdapter.unregisterAdapterDataObserver(mDataObserver);\n}\n\n```\nand in onCreateView (i am using a fragment) i do this:\n```\nmDataObserver = new AdapterDataObserver()\n        {\n            @Override\n            public void onChanged()\n            {\n                Log.i(\"aaaaa\", \"something changed!\");\n                super.onChanged();\n            toggleEmptyView();\n        }\n    };\n\n```. i just came across the same problem and found this thread, but for some reason i couldnt really understand the solution offered and also failed implementing it by trying to copy it.\ni have however found a different, less complicated (at least in my mind) solution.\n@mikepenz please tell me if you think this is a \"bad\" way to solve the issue.\nhere is the declaration of my base (or \"father\") class:\npublic class MyItem<T extends MyItem, VH extends RecyclerView.ViewHolder> extends AbstractItem<T, VH>\nand here is the definition of the inherited (or \"son\") class:\npublic class MyItemAlso extends MyItem<MyItemAlso, MyItemAlso.ViewHolder>\nthats it!\nthe \"father\" class would have to override the methods \"getType\" and \"getLayoutRes\" which in my case don't have any meaning because \"MyItem\" is simply used to hold shared information and only classes extending it are to be displayed in the recyclerView. so in my case these methods can simply call the \"super\" methods.\nhowever if you wish for the \"Father\" class to be displayed as an item in the recyclerView, simply implement these methods as you were with a normal AbstractItem, and the same goes for any inherited (or \"son\") classes\n. @MFlisar hi. what do you mean by \"pass the drag helper to the items\"? where can i do that?\ni fetch my items from a database and i am using LiveData to update the adapter so i don't actually create the items, so i cannot do this:\nMyItem item = new Item();\nitem.withTouchHelper(mTouchHelper);\nhow do i use this interface? can you supply an example?. obviously they are created... but it is done by Room and i dont have access to where this happens.\nso what youre saying is that somehow i need to have those items in the activity which initializes TouchHelper and then set it to all my items?  similar to this:\nMyItem item = new Item();\nitem.withTouchHelper(mTouchHelper);. hi @mikepenz.\n\ni just ran into a similar issue: i wish to add a click listener to one of my items (not the standard clickListener of the recyclerView, but an inner listener for a view my item has) and i was wondering what is the best place to put it in, and i came across this post.\nmy click listener opens a dialog and the problem is that i need to pass this dialog some data which the item holds. but if i put my click listener in the viewHolder constructor how would i access the item data? (these are 2 different classes so i dont have access to the members).\nis it only possible via event hooks or is there some other way i could do that?\nthanks. face palm\nhow did i not see this?! i feel so dumb... sorry, ill give this a try\nedit:\ni have to wonder though, is this really the most efficient way? what if i have multiple views? that would mean i would have to chain multiple if-else statements with the \"instance of\" command which is an expensive one.\nalso, what about other view events which are not clicks? for example: setOnItemSelectedListener for a spinner. @mikepenz im afriad i dont understand how custom event hooks work.\nlets take my example, i have a spinner and i need to use \"setOnItemSelectedListener ()\".\nin the case of click event hook or touch event hook it's very clear what the event is, however by looking at the code, customEventHook doesnt seem to be related to any specific event(e.g. spinner item selected). so... how would i know which event happened? how would i access this event's data (i.e. all the parameters of the standard android listener callback)?\nunfortunately there is no documentation for CustomEventHook, and i couldn't find an example of it in the sample app.\n. @mikepenz thanks for the reply, but what im still confused about is the method \"onEvent\". when is it triggered? what triggers it?\ni think im starting to get it... please correct me if im wrong:\n-onBind (or onBindmany) is where i would return the view(s) to which i want to attach an event to?\n-onEvent will be called whenever the view is created in the viewHolder?\n-if i have used onBindMany, will onEvent be called for each of the views returned in onBindMany?\nlet me use an example:\nlets say i have 2 views, a check box and a spinner. for the spinner i want to attach \"itemSelectedListener\", and for the check box i want to attach both \"checkedChangedListener\" and \"clickListener\" (forget that there is a clickEventHook, i want to make sure i understand the customEventHook).\nwould it look like this? (doesn't look right to me, but maybe it is?)\n```\npublic static class MymEventHook extends CustomEventHook\n    {\n        @Nullable\n        @Override\n        public List onBindMany(@NonNull RecyclerView.ViewHolder viewHolder)\n        {\n            if (viewHolder instanceof MyItem.ViewHolder)\n            {\n                ArrayList list = new ArrayList<>();\n            list.add(((MyItem.ViewHolder) viewHolder).checkBox);\n            list.add(((MyItem.ViewHolder) viewHolder).spinner);\n\n            return list;\n        }\n\n        return null;\n    }\n\n    @Override\n    public void onEvent(View v, RecyclerView.ViewHolder viewHolder, int position, FastAdapter<MyItem> fastAdapter, MyItem item)\n    {\n        if(v instanceof CheckBox)\n        {\n            ((CheckBox)v).setOnClickListener(...);\n            ((CheckBox)v).setOnCheckedChangeListener(...);\n        }\n\n        else if(v instanceof Spinner)\n        {\n            ((Spinner)v).setOnItemSelectedListener(...);\n        }\n    }\n}\n\n```\ni am also confused because on the one there is the method onBindMany, which would allow me to bind an event for multiple views, but on the other hand you say that i need a separate hook for each event.\nif the above code i gave is not the correct way, will you please write a code example for the proper way of doing it?. @mikepenz but i could only reuse the eventHook if i have another layout with the same views in it with the same names.... no?. @mikepenz ok i guess ill play around with it see what works best for me... THANK YOU SO MUCH FOR YOU HELP!\np.s.\nwill you please add a sample use case of this to the sample app? i think that could be very helpful. @mikepenz i have a new problem. i am trying to implement the way you said but if (position != RecyclerView.NO_POSITION) always returns false (meaning position is always -1), so my listeners are not being set.\nhere is my onEvent:\n```\n@Override\n        public void onEvent(View view,\n                            final RecyclerView.ViewHolder viewHolder,\n                            FastAdapter fastAdapter)\n        {\n            //we get the adapterPosition from the viewHolder\n            final int position = fastAdapter.getHolderAdapterPosition(viewHolder);\n        Log.i(\"aaaaa\", \"position \" + position);\n\n        //make sure the click was done on a valid item\n        if (position != RecyclerView.NO_POSITION)\n        {\n            final MyItem item = fastAdapter.getItem(position);\n\n            if (view instanceof CheckBox)\n            {\n                //noinspection RedundantCast\n                ((CheckBox) view).setOnClickListener(new View.OnClickListener()\n                {\n                    @Override\n                    public void onClick(View view)\n                    {\n                        item.setChecked(!item.isChecked);\n\n                        String checked = item.isChecked ? \"checked\" : \"unchecked\";\n\n                        Toast.makeText(viewHolder.itemView.getContext(),\n                                       \"item \" + (position + 1) + checked,\n                                       Toast.LENGTH_SHORT)\n                             .show();\n                    }\n                });\n            }\n        }\n    }\n\n```. @FabianTerhorst well i need it there... when the view is triggering the listener (in this case a checkbox is triggering \"onclick\") i need access to the properties of MyItem (which is on the same line as the checkbox being clicked). @FabianTerhorst thank you it works!\nplease please please add a small code sample in the sample app for this kind of a thing... would have saved me a lot of time. @FabianTerhorst yes i saw that, but i dont understand why. in order to use FastItemAdapter i need to also add \"commons\" to my dependencies.. i wonder if thats really necessary. what \"Extra\" features does FastItemAdapter offer that are not included in FastAdapter?. @mikepenz thank you for your answer.\nis it possible to provide a more details explanation about which features are available in each of the dependencies? is there a guide somewhere that i missed?. @mikepenz thank you. i missed those somehow... will you please add those links to the readme.md?. I FIGURED IT OUT!\nit had nothing to do with any of the code that i posted here.\nthe problem was that my object (CourseSession) had an \"enabled\" field and therefore had a method isEnabled() which i didn't realize was overriding this library's isEnabled().\nin my app logic \"enabled\" simply means that the item has a different background color, however in the library's logic it means whether the item is clickable or not!\nthe thing about only the first item being clickable was that in my app logic only the first item was enabled (which only determines the background color), but actually my own isEnabled() was overriding the library's isEnabled() which made the rest of the items not clickable.\nplease \"mark\" this comment as the solution to help other people with the same issue\n. i just have withOnClickListener() and withSelectOnLongClick(true).\nmy intention is that OnClick would be triggered when a user taps an item, and an item would be selected when a user long-clicks an item. however, if i user selects an item by long-clicking it, i do not want OnClick to be triggered.\ni could very easily go around this issue by implementing an empty long click listener, but it feels unnecessary.. @mikepenz so is this a bug or by design? is it going to be fixed?. alright. thanks. i found a solution.\ni realized that the method \"remove\" in UndoHelper returns the snackbar - so i can use that to style it.\nthis solution however isn't the best in terms of flow (even though it works for me so far), because it means i am styling the snackbar after showing it (\"show()\" is called right before the method returns).\nsuggestion: perhaps you could add a small function \"withSnackBar\"? this would only require a small modification to the current \"remove\" function (if the user provided a snackbar, use it. otherwise, create a default one).\n. alright i will :). when i have time to work on my app again (god knows when that would be). pull request created.\nhttps://github.com/mikepenz/FastAdapter/pull/347\nthis is my first pull request... i hope i did ok (just left everything default). @mikepenz i have been trying to find a way for this (delete item while filtered) to work for several days now  but no success.\nwill you please provide guidelines and/or sample code on how this can be achieved?. @mikepenz as far as i can tell it doesn't fix the issue. @mikepenz can you please tell me which method are you referring to specifically (and from which class)? the link you posted is not for the filter, but for ItemAdapter. @mikepenz  i tried doing this in commitRemove():\n((ItemAdapter.ItemFilter)mAdapter.getItemFilter()).remove(positions.iterator().next());\n*note: only deleting 1 item for testing\nbut this is what i get when closing the search view:\nFATAL EXCEPTION: main\n                                                 Process: or_dvir.hotmail.com.fastadapter_test, PID: 5951\n                                                 java.lang.IndexOutOfBoundsException: Inconsistency detected. Invalid item position 12(offset:50).state:13\n                                                     at android.support.v7.widget.RecyclerView$Recycler.tryGetViewHolderForPositionByDeadline(RecyclerView.java:5504)\n                                                     at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:5440)\n                                                     at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:5436)\n                                                     at android.support.v7.widget.LinearLayoutManager$LayoutState.next(LinearLayoutManager.java:2224)\n                                                     at android.support.v7.widget.LinearLayoutManager.layoutChunk(LinearLayoutManager.java:1551)\n                                                     at android.support.v7.widget.LinearLayoutManager.fill(LinearLayoutManager.java:1511)\n                                                     at android.support.v7.widget.LinearLayoutManager.onLayoutChildren(LinearLayoutManager.java:595)\n                                                     at android.support.v7.widget.RecyclerView.dispatchLayoutStep1(RecyclerView.java:3534)\n                                                     at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:3310)\n                                                     at android.support.v7.widget.RecyclerView.consumePendingUpdateOperations(RecyclerView.java:1648)\n                                                     at android.support.v7.widget.RecyclerView$1.run(RecyclerView.java:343)\n                                                     at android.view.Choreographer$CallbackRecord.run(Choreographer.java:858)\n                                                     at android.view.Choreographer.doCallbacks(Choreographer.java:670)\n                                                     at android.view.Choreographer.doFrame(Choreographer.java:603)\n                                                     at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:844)\n                                                     at android.os.Handler.handleCallback(Handler.java:739)\n                                                     at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                     at android.os.Looper.loop(Looper.java:148)\n                                                     at android.app.ActivityThread.main(ActivityThread.java:5551)\n                                                     at java.lang.reflect.Method.invoke(Native Method)\n                                                     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730)\n                                                     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620). @mikepenz thanks.\ni need more time to come up with a solution for this, so in the meantime i have moved on to other things.. @chanonly123 i just ran into a similar issue but my problem is that my entire app is already built on the basis of AbstractItem and rewriting it would be a major pain the butt...\nis that how you ended up fixing it (using the generic approach) or did you find another way?\nbecause i found that recreating the items on startup also fixes the problem (or so it seems). on the one hand its longer (and perhaps unneccessary) running time, but on the other hand i just had to add a couple of \"for\" loops and that was it. @FabianTerhorst thanks for your reply.\nwhere should i call the reset method? what will it do exactly and how would it fit my needs? why would action mode be null once i click an item on my list? (not on the CAB). edit: previously proposed solution had a major flaw in it and i feel like an idiot... so i removed it.\nwill post solution when i find one. @mikepenz no i am not using supportSubItems (ive seen it mentioned in some places in the source but havent looked into what it even means yet).\nafter further investigation i believe it was happening only with regards to the last item (i have since fixed the issue so i don't remember exactly) and it just had to do with the library's order of calls to the onClick and/or selection process. if i remember correctly, when i de-selected the last item, the library first finished action mode, and only then invoked onClick() - therefore by that time action mode was indeed closed. i dont fully understand the order of calls regarding click events, so i am assuming that the situation i just described makes sense to you and to the library's operation.\nthe way i fixed it was to give up and handle action mode myself and then i had control on whenever to finish it. i would have much preferred to save all that time (and potential future bugs) though by using the library's inner logic but as i said, i couldnt figure out the way click events are handled and forwarded :(. Like I said, it just has to do with the order of event handling in the library.\nI.e. First it closes action mode, then invokes on click. Therefore in my onClick, action mode is not active. @mikepenz it was one of the first calls in the method \"onSelectionChanged()\". but does it really matter at which point inside that method i called \"getSelections()\"? unless you are using multiple threads to handle selection this shouldn't happen. what i believe is happening (did not check) is that the library must be calling this method (\"onSelectionChanged()\") in multiple places (which relate to the checked item being the first/last/in the middle) and somehow the order of the calls is being messed up. what i mean is for example (again, only my opinion without checking source code) if the item is the first one being selected the library is first adding it to the \"Selections\" list, and then calling onSelectionChanged(), but when selecting another item, it first calls onSelectionChanged() and afterwards adding it to the \"selections\" list. @mikepenz neither. im talking about onSelectionChanged(). nevermind i found what i was doing wrong...\ni used setOnActionExpandListener on my search button and there i called withSelectable(false). @mikepenz the BaseItem actually does not have any layout as i am just using it as a shared object all other objects inherit from and it i not meant to be shown to the user, so it doesn't really need a layout. but according to object oriented programming that shouldn't matter because the \"getLayoutRes()\" method of the inherited item should be called (for example the one that returns the layout i posted in my question).\ni also tried separating the viewHolder from BaseItem by making it a separate class and that didn't work either. @mikepenz ill try when i have time (whenever that may be...). @mikepenz my bad... wasn't using the latest version. @mikepenz about the LayoutParams thing: the user have an option to add a checkbox to a list (see pictures from the google play store) and she/she can show or hide the check boxes whenever they wants. therefore similarly to the text size thing, i need to check it when the view is being displayed in \"bindView()\" or else if the user has selected \"show check box\" from the menu, a view without a checkbox might be recycled.\nthe checkbox is aligned to the right of the screen and so are the other views (e.g. spinner). so i must check it every time and change the layoutParams at runtime otherwise they will overlap.\ni could probably wrap all those views in a horizontal linearlayout, however im not sure if it will actually help because i dont know if a linearLayout simply does the same thing behind the scenes...\nabout the settings: i like giving the user a choice. what if the size i choose is too small for the user? he would have to leave the app, go to the phones settings, look for the right one, change it, and then come back to the app. also this will affect all the texts on his phone (only because of the size i chose in my app) - thats why i have it as a local setting.\nwhile i agree that those things do affect performance, all of the those things are also done to every other type of list i have and there are no scrolling problems there - for some reason only the list with the spinner is suffering performance problems (even when i disable these options).\n*i will look into the link you sent me later today\nedit\nok i have look in the link you posted and it refers to nested recycler views, and also raises a bunch of questions:\n\nis it even relevant? i mean does does Spinner use a recycler view? i would assume so, but dont know for sure (and also is it Spinner or SpinnerCompat that uses it?)\nhow and where would i apply the method LinearLayoutManager.setInitialPrefetchItemCount(N)? \ni assume i would have to make a custom Spinner, find in the source code where they apply the LayoutManager and override that method.\nwhat number should i put for N? the link says that i need to know how many items will be visible to the user. but that number depends on the screen size... so if i truly want to use this method, i need to write further code which determines N according to the screen size.\n\nall of this sounds like a lot of work... and it might not even help\n@mikepenz dont get me wrong, i appreciate your help and finding this link for me. im just not sure it is the best solution... any other ideas? \n. @mikepenz after further experimenting the problem is indeed the adapter. i mean not the adapter itself, but what you said about nested lists/recyclerViews. i tried changing the number of items in the spinner to see where the \"break point\" is, but even with just 1 item in the adapter scrolling is slow. only when i completely disabled the adapter (as in empty spinners) scrolling was smooth and fast.\nthank you so much for you help. even though it turns out not to be a FastAdapter issue you helped me find the answer. @baadillahnabil \n1) create a file called \"ids.xml\" and put it in the \"values\" folder. in that file you define your item type id's. \nhere is an example:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <item name=\"fastadapter_id_checkedItem\" type=\"id\"/>\n    <item name=\"fastadapter_id_dateTimeItem\" type=\"id\"/>\n    <item name=\"fastadapter_id_personalNoteItem\" type=\"id\"/>\n    <item name=\"fastadapter_id_spinnerCheckedItem\" type=\"id\"/>\n    <item name=\"fastadapter_id_spinnerItem\" type=\"id\"/>\n    <item name=\"fastadapter_id_mainItem\" type=\"id\"/>\n    <item name=\"fastadapter_id_regularItem\" type=\"id\"/>\n</resources>\nand then:\n@Override\n    public int getType()\n    {\n        return R.id.fastadapter_id_spinnerItem;\n    }\n2) the \"add()\" method has several variations - for simplicity i will refer to this one: public FastItemAdapter<Item> add(List<Item> items).\n\"ITEMS\", as you call it, is a list of objects that you wish to add to the adapter and display to the user.\nfor example lets say i have a class called \"Item\" and it contains 1 variable String itemName; (and the rest of the necessary codefor this library as described in the ReadMe file).\nso here is an example of how i would use it:\n```\nItem item1 = new Item(\"first\");\nItem item2 = new Item(\"second\");\nItem item3 = new Item(\"third\");\nArrayList itemList = new ArrayList();\nitemList.add(item1);\nitemList.add(item2);\nitemList.add(item3);\nFastItemAdapter adapter = new FastItemAdapter<>();\nadapter.add(itemList);\n``\n. @mikepenz if i dont usepost` i get an exception saying something about the recyclerview not being in the correct state (will post the exception when ill be in front of the code)... can you please post a snippet of how you mean im supposed to use the handler?. @mikepenz  this does not work. progress bar remains visible.\n```\nmrvScrollListener = new EndlessRecyclerOnScrollListener(mFooterAdapter)\n        {\n            @Override\n            public void onLoadMore(final int currentPage)\n            {\n                mCurrentPage++;\n            runOnUiThread(new Runnable()\n            {\n                @Override\n                public void run()\n                {\n                    mFooterAdapter.clear();\n                    mFooterAdapter.add(new ProgressItem().withEnabled(false));\n\n                                            //make server call \n                                    }\n            });\n        }\n    };\n\n``. is that whatmFooterAdapter.cleardoes? i just copy-pasted from the sample. yep. all i needed was to callclear()!\ni wasn't thinking too much...\nthanks :). @mikepenz thank you for your quick answer! i guess i have 2 options:\n1) add an item and immidietly remove it (will that work?)\n2) implement a custom view and add it to the footerAdapter when the end of the list is reached.. ill give it some thought... moving on to other aspects of the project for now :). @mikepenz ok thanks a lot.\nso what is \"wrap\" for? when will it be better to use that instead? why when it comes to headers you use wrap and not a \"BaseItem\"?. @mikepenz  thanks for your fast reply.\nso this is only relevant in case i wrap adapters together right? as inrecyclerView.setAdapter(adapter1.wrap(adapter2.wrap(adapter3)));` (syntax could be wrong... this is just an example)\nand in case i only have 1 adapter then global position and relative position are the same?\n. @mikepenz  i could try but im having a little trouble finding which list items in the sample use a cardView... . @mikepenz sorry havnt had time to check it yet :( last week and this week are very busy. hopefully ill have time by the end of the week. @mikepenz ok i have reproduced this on the sample activity.\nin this class: https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/SimpleImageItem.java\nyou need to change the bindView method to this:\n```\n@Override\n    public void bindView(SimpleImageItem.ViewHolder viewHolder, List payloads) {\n        super.bindView(viewHolder, payloads);\n    //get the context\n    Context ctx = viewHolder.itemView.getContext();\n\n    //define our data for the view\n    viewHolder.imageName.setText(mName);\n    viewHolder.imageDescription.setText(mDescription);\n    viewHolder.imageView.setImageBitmap(null);\n\n    //////////////////////////////////////////////////////////////////////////////\n    //lines in between these \"markers\" have been changed\n\n\n    //original code:\n\n//        int color = UIUtils.getThemeColor(ctx, R.attr.colorPrimary);\n//        viewHolder.view.setForeground(FastAdapterUIUtils.getSelectablePressedBackground(ctx, FastAdapterUIUtils.adjustAlpha(color, 100), 50, true));\n    //my code that makes the items invisible:\n    StateListDrawable stateListDrawable =\n            FastAdapterUIUtils.getSelectableBackground(ctx, ctx.getResources().getColor(R.color.primary), true);\n    UIUtils.setBackground(viewHolder.itemView, stateListDrawable);\n    //////////////////////////////////////////////////////////////////////////////\n\n    //load glide\n    Glide.clear(viewHolder.imageView);\n    Glide.with(ctx).load(mImageUrl).animate(R.anim.alpha_on).into(viewHolder.imageView);\n}\n\n```\nas you can see the original code and the code i posted are a little different:\n- original code sets the foreground of the view which is cast into FrameLayout in the viewHolder)\n- my code sets the background of the view without casting.\nif i copy the original code of SimpleImageItem (the one with the foreground and frameLayout) i get the results i originally wanted - so i don't know if this is an actual problem you need (and want) to look into or not (if you do, you can reproduce it now in the sample app).\nthis must be a CardView thing where the standard ways don't work.... @mikepenz the SelectExtension if of type IDrawerItem? or is that suppose to be the type of item i am selecting? (i.e. same type as the adapter). edited my comment while you commented yours... please see updated comment above. thank you!\nplease change the code in the sample app to use this instead of the deprecated method. @FabianTerhorst the sample code doesn't really explain anything.\ni cant write documentation for it because as the questions suggests, i don't really understood how it works and what each method does and what my possibilities are.. @FabianTerhorst thanks for the reply\n\ndoes calculateDiff() automatically run in background or is it because its wrapper inside the apply () method? i am not familiar with rxJava so i don't really understand those methods/callbacks in the sample activity.\nit looks like set() automatically applies all the changes and there is nothing else i need to do. is that correct?\n3, its not very clear what detectMoves does. please tell me if my assumption is correct or not:\nlets say i have an array of 3 items and i switch between the first and last items and then call calculeDiff(). if detectMoves is false, the DiffResult object will return as if nothing has changed? and if detectMoves is true it will return the changes? if this is correct, then what if i want to detect changes AND have a DiffCallback? there is no method that accepts both. does that mean that if i want to have a DiffCallback i dont have a way of detecting moves?\nif Set() is used to apply changes to the adapter, then what is the purpose of displatchUpdateTo()?\nlooking at ListUpdateCallback() i see that onInserted for example only tells me how many items have been inserted into int position... but what if i need to know which items were inserted? my use case is that the user can add an item to a list but that item is being represented only by its id, then i need to get that item from the server using the inserted id - so i need to know which items (which ids) have been inserted. how can i do that?. ok thanks @mikepenz . @FabianTerhorst i am not sure what you mean... can you provide a code sample?. @FabianTerhorst doesnt sound like a good solution... what if the request has already been completed? calling cancel will have no affect. yes. id is unique. it seems to have stopped happening (at least for now). i didnt change anything. dont know what to tell you. ok i added it. but all it says in the docs is \"cancel any existing requests for the specified ImageView\"\naccording to what you guys are saying, it does more than just cancel the request... if you have some source explaining more about it please post a link. @FabianTerhorst @mikepenz calling Picasso.cancel() is not working. still getting duplicates. @FabianTerhorst i havent checked... but i do need to use all these options so even if it does work its not a good solution for me. > you could try to update picasso because the version you are using is 3 years old.\n\n@FabianTerhorst when i first read that i was \"what the f?! i started working on this app a few months ago...\" and i went on picassos' github page and saw that im using only the second latest version so again i thought \"what the hell are you talking about?!\" and then i noticed it *really is 3 years old! hahahah\nin my defense the latest version only came out in march!. anyways... ill update it and report back if it happens again\n\n\nidentifier is definitely unique\nthe loading request is canceled on unbind (SUPER IMPORTANT)\nno other async things are not canceled on unbind\nviews are not directly used via some code and do not respect recycling\n\n\n@mikepenz \n identifiers are unique.\n as i mentioned i added Picasso...cancel() and its still hapennig\n my bind and unbind are posted above. my items only have a couple of text views and an image. so unless FastAdapterUIUtils.getSelectablePressedBackground does some work in background, then i should be good.\n im not sure what you mean by \"views are not directly used via some code\". where?. yes i understand that. what i dont understand is where else i could even do that... i access the views in bind/unbind/viewholder constructor.\nit hasnt happened since updating picasso version... but that doesnt necessarily mean its fixed. this is a typing error (which is now corrected)... sorry.\nthe field is indeed called mSelectable (as seen in the screen shot).\nedit:\ni do not have a field with the same name.\ni may have found a clue though. my subItem does override isSelectable() and always returns false. maybe it has something to do with it? i dont understand though why, i am trying to select the \"base\" item and not the sub item\n. my description of the problem in the original post is as far as i got. is there anything else specific you'd like to know?. @mikepenz please see this small sample app\nnote: a small change is needed because this sample app was made for https://github.com/mikepenz/FastAdapter/issues/719\nchange needed:\nin the class EpisodeAdapterItem, remove (or comment out) the line override fun isSelectable() = true\nonce you do that, items will not be selectable. thank you mike. \nif i may make a suggestion:\nnot all of us dive into the source code. some just read the readme file and take a look into the sample app and start using the library (not just this one, any library). think it would be beneficial if you add a small explanation in the read me file like \"please note that the default behavior for expandable item is to not be selectable\".\nits good that you wrote the comment in the code, but as i said not everyone looks into the source code to that comment is easily missed\nthanks again for taking the time looking into this even though at the end its just the way the library was designed. haha... completly understand and agree with you to some degree, but my opinion is a little different:\nyou dont necessarily need to fully understand how things work in order to use them - you can drive a car without being a mechanic and when you learn how to drive (at least where im from) they dont teach you how to build/fix a car. they teach you how to operate one.\nplease dont misunderstand me. the things im saying here are not criticism, but are simply my point of view on these things.\nof course it helps a lot to fully understand the inner workings of the things you use but i just dont think its absolutely mandatory. and if i go back to the car example for a second, i do expect people to know how to change a tire but i dont expect them to know exactly how an engine works and every little piece of the \"driving system\". and also, just in case they really dont know anything, there is a manual :)\ni believe that if you create something for other people to use (whether its a physical product or a piece of software or a library for other developers) then you should provide as much instructions as possible on how to use it. take for example this library i made - the readme file is fully detailed and the sample app is full of explanations. this way any developer can simply start using it and not have to read and analyse the entire library. just take it and use it (and here is how).\nduring most of my life whenever i was at a new place (school, job, army service, etc) and didnt really know how things worked i was simply told \"figure it out\" and i really hated that. why couldnt they just tell me how im supposed to do these things theyre  asking me to do? this is probably why i see things the way im trying to describe here.\nin conclusion, i am a strong believer in RTFM - Read the F*** Manual :)\ni repeat: this is not criticism, but are simply my point of view.. there are 2 types of people i guess when it comes to this topic (ive seen this a lot throughout the years): those who learn by diving in, and those who learn by reading the instructions and dig a little further when necessary.\ni guess youre the first and im the second.\nno one is saying you dont care about others! you do amazing work! keep it up!. ill try. i have a couple of projects which are due soon so my full attention is on those. doesnt look like it... my problem does not relate to search/filtering and setting item animator to null does not resolve the issue.\nhowever maybe the issue you mentioned in your comment on onViewDetachedFromWindow() method somehow causes both #703 and my issue... any news on this since July 24th (the date of your comment)? are you still working on it?\ncan you please confirm whether my class definitions for parent and sub item are ok?\nboth the parent and sub item have different type ids, but i am only setting identifier for the parent (which is the id of the model), whereas in the sub item class i am not doing anything related to identifier. could this be related to the crash somehow?\nif it helps, the item is not expanded when deselecting it. @mikepenz any news? this is an app breaking bug for me.... no worries. nothing to apologize for. i was just wondering whats going on...\nby all means, go for the linked ticket first. it might be related.\nabout a sample app, i will do my best but i dont think it will be within the next week as i have some other projects i must finish.. my class definitions are as above. as far as i can tell they are fine... correct me if im wrong.\nill try to make a small sample app today. @mikepenz please see this small sample app\nas mention above, the crash occurs when deselecting the last item (not the item in the last index, but the last item to be deselected)\nsteps to reproduce the crash:\n1- select any item\n2- deselect that item\n. thank you mike for this great explanation!\nafter reading it i have a few follow up questions if i may:\n1) in the class SelectExtension, the method public void deselect(Item item, int position, @Nullable Iterator<Integer> entries) is called twice. once for sub item and once for parent item. i assume this is because both of those can be selectable. however, i specifically set my subitem to not be selectable. so why is this method still called? i dont think this method should be called on items which are not selectable as this will trigger the selection listener for items which are not selectable (which in my case caused the crash) and could probably lead to other bugs.\n2) why is this only happening for the last item? i would expect it to be the same logic for every item that is deselected. is this by design? a bug?\n3) simply using FastAdapter<*> doesnt seem right... not very object oriented. i would imagine i should use the \"highest\" object which is shared for both the parent and the child. am i correct? do you have an official recommendation on which type to use?\n3.1. i believe that using FastAdapter<*> would also lead to future problems\n4) please add some explanation of this (FastAdapter need to be of type shared for parent and sub item) in the readme file. 1) ah. i understand.\n2) i dont know how many tests you did, but it only crashes when deselecting the last item. for example if i have items 1, 2 and 3 selected, deselecting items 2 and 3 works perfectly fine but deselecting item 1 causes a crash. so why doesnt it crash when deselecting items 3 and 2?\n4- in the sample app (ExpandableSampleActivity) parent, subItem, subSubitem, and subSubSubItem are all of the same type (SimpleSubExpandableItem) . ## SOLUTION\nthe \"trick\" (as mentioned by mike) is to make the parent and sub items the same type (which in my case is AbstractExpandableItem).\nfor convenience, i defined this wrapper class to save me from typing <*,*,*> all the time\nabstract class MyExpandableItem<VH: RecyclerView.ViewHolder>\n    : AbstractExpandableItem<EpisodeAdapterItem, VH, EpisodeAdapterSubItem>()\n* this wrapper class is not mandatory and may change according to your own project.\nthen i went ahead and changed the definition of my parent and sub items\n//old\nclass EpisodeAdapterItem(episode: EpisodeEntity)\n    : ModelAbstractExpandableItem<EpisodeEntity, EpisodeAdapterItem, EpisodeAdapterItem.ViewHolder, EpisodeAdapterSubItem>(episode)\n//new\nclass EpisodeAdapterItem(private val model: EpisodeEntity)\n    : MyExpandableItem<EpisodeAdapterItem.ViewHolder>()\n//old\nclass EpisodeAdapterSubItem(private val descriptionHtml: String)\n    : AbstractExpandableItem<EpisodeAdapterItem, EpisodeAdapterSubItem.ViewHolder, EpisodeAdapterSubItem>()\n//new\nclass EpisodeAdapterSubItem(private val descriptionHtml: String)\n    : MyExpandableItem<EpisodeAdapterSubItem.ViewHolder>()\nnow in my Activity which holds the adapter i made the following changes:\n```\n//old line\nprivate lateinit var mAdapterEpisodes: ModelAdapter\n//new line\nprivate lateinit var mAdapterEpisodes: ModelAdapter>\n//old line\nprivate lateinit var mAdapterRv: FastAdapter\n//new line\nprivate lateinit var mAdapterRv: FastAdapter>\n``\n* in case you useActionModeHelper`, don't forget to make the same change there.\n* depending on your implementation, this may (and probably will) require some similar changes in other parts of your code\n. ",
    "anton-khansa": "i have some problem too with empty view, is there any sample code that you can share how to make it with fast adapter. hi mikepenz,\nthank you for yours fast adapter, i have some isue when using swipe list sample, i want to call approve function if i swipe to right and call reject function if i swipe to left,iam not clear where to call it. i have try in function itemSwiped but i dont know how to identify left or right. can you help me, thank you iam new on android and java. hi echthard, thank you for your response, i want to call this function :\n1. call function approve() if swipe right\n2. call function reject() if swipe left\nwhere should i call that?iam still dont know how to identify left or right, could u help me?really appreciated for your help.below is the function from SwipeListActivity.java.\n```java\n @Override\n    public void itemSwiped(int position, int direction) {\n    final SwipeableItem item = fastItemAdapter.getItem(position);\n    item.setSwipedDirection(direction);\n\n    final Runnable removeRunnable = new Runnable() {\n        @Override\n        public void run() {\n            item.setSwipedAction(null);\n            int position = fastItemAdapter.getAdapterPosition(item);\n            if (position != RecyclerView.NO_POSITION) {\n                fastItemAdapter.remove(position);\n            }\n        }\n    };\n    final View rv = findViewById(R.id.rv);\n    rv.postDelayed(removeRunnable, 3000);\n\n    item.setSwipedAction(new Runnable() {\n        @Override\n        public void run() {\n            rv.removeCallbacks(removeRunnable);\n            item.setSwipedDirection(0);\n            int position = fastItemAdapter.getAdapterPosition(item);\n            if (position != RecyclerView.NO_POSITION) {\n                fastItemAdapter.notifyItemChanged(position);\n            }\n        }\n    });\n\n    fastItemAdapter.notifyItemChanged(position);\n}\n\n```. ",
    "vinayakmestri": "I have created custom edittext which does not hangs or crash the app.\nSearchTimerEditText. ",
    "beckhamd": "From #108:\n\nFor example, if I add 100 items to the adapter, scroll down a bit, clear the adapter, then add 10 more to the beginning, onLoadMore appears to stop getting called. I have to remove the listener from my RecyclerView and attach it again.\nI haven't really investigated why this is happening, but I guess it might have something to do with mVisibleThreshold not getting updated when items are removed (line 89).\n\nI don't know if my issue is actually related to this one, but perhaps so. I am using v1.4.0, by the way.\n. @FabianTerhorst: Yeah, that was just a guess about mVisibleThreshold.\nWhat about this? I think the problem might just be that mPreviousTotal isn't always being reset. When items are removed from the adapter, and the user can no longer scroll down to the place where mTotalItemCount was set previously, then mTotalItemCount will never exceed mPreviousTotal, and onLoadMore won't be called again.\nMaybe you should add another check somewhere to see if mTotalItemCount  is less than mPreviousTotal at any point, and then reset mPreviousTotal in that case? I don't think you need any additional listeners to accomplish this. Just compare your stored values.\nEdit: Actually, just changing if (mTotalItemCount > mPreviousTotal) to if (mTotalItemCount != mPreviousTotal) fixed it for me. I'll open a pull request for this, I think.\n. Sorry if this is a silly question (perhaps I'm just missing something), but how can we access these methods? EndlessRecyclerOnScrollListener is an abstract class, so we can't instantiate it.\n. Ah, okay,  the second one works for me. I wasn't implementing onLoadMore. Thanks.\n. Alright, thanks for looking into this anyway.\n\nwill break if items are removed\n\nI don't understand how that could be since mTotalItemCount will never be less than mPreviousTotal unless items were removed. (Edit: To clarify, the original code doesn't account for this, and so mLoading will sometimes get stuck on true forever. The most this would do is set mLoading to false and allow onLoadMore to be called again, which wouldn't break anything. Now, mCurrentPage will keep getting incremented regardless, but that seems like a separate and almost cosmetic problem to me.) It has fixed my issue, and I haven't noticed any problems thus far, but you be the judge.\n. ",
    "xxmbaobao": "update your version\n. ",
    "markic22": "Thanks for quick response guys. There seems to be issue with \ncompile 'com.mikepenz:fastadapter-extensions:1.4.2.1@aar'\nError:(118, 13) Failed to resolve: com.mikepenz:fastadapter-extensions:1.4.2.1\n. @mikepenz, it searches there also, but doesn't find it.\n`Error:A problem occurred configuring project ':app'.\n\nCould not resolve all dependencies for configuration ':app:_localhostDebugCompile'.\nCould not find com.mikepenz:fastadapter-extensions:1.4.2.1.\n     Searched in the following locations:\n\nhttps://jcenter.bintray.com/com/mikepenz/fastadapter-extensions/1.4.2.1/fastadapter-extensions-1.4.2.1.pom\n     https://jcenter.bintray.com/com/mikepenz/fastadapter-extensions/1.4.2.1/fastadapter-extensions-1.4.2.1.aar\n     https://jitpack.io/com/mikepenz/fastadapter-extensions/1.4.2.1/fastadapter-extensions-1.4.2.1.pom\n     https://jitpack.io/com/mikepenz/fastadapter-extensions/1.4.2.1/fastadapter-extensions-1.4.2.1.aar\n     https://maven.fabric.io/public/com/mikepenz/fastadapter-extensions/1.4.2.1/fastadapter-extensions-1.4.2.1.pom\n     https://maven.fabric.io/public/com/mikepenz/fastadapter-extensions/1.4.2.1/fastadapter-extensions-1.4.2.1.aar\n. Thanks @mikepenz for reference my issue further.\nDamn @AllanWang, I was hoping for some magic solution, with which I could use FastAdapter without further issue :D. I will take a look at your implementation. Thanks for you time to check out the problem.. ",
    "AndrazP": "Yes. But why did it never occurred during development and testing? It has to be a corner case.\n. Oh, that's it.\nI forgot to implement it in one item (rarely used), I thought it's only for optimization purposes.\nThanks!\n. Hi @meNESS, \nis your improvement of EndlessRecyclerOnScrollListener available anywhere to see?\nThanks!\n. ",
    "artests87": "Thanks a lot!\nYour FastAdapter is the greatest!\n. And saveinstance after minimize and rotate...\n. Sorry for my bad English(\nI'll try explain it step by step.\nWhy we need the view?\nFor example, we want to show a list with items.\nThen, the user select needful items. Some of them internal items (SampleItems in ExpandableItem). Now, when the user select internal items, close the ExpandableItem (parent directory for select SampleItems) and open the ExpandableItem again, he see the SampleItems don't select. He needs select the SampleItems again.\nEventually, when the user rotate (minimaze) phone - all Items deselect and he needs select all again.\n. If I want to select some Items before open and show the adapter, I can't to it with internal SampleItems.\nI can select all except internal items. Internal items didn't select...\n. Hi, Mike!\nThanks a lot.\nBut I didn't can build my project with new feature, because Error:(27,\n13) Failed to resolve:\ncom.mikepenz:fastadapter-extensions:1.5.0-SNAPSHOT\nShow in\nFileShow in\nProject Structure dialog\nHowever, I had realised that feature with List, where I mark selected\nitems, with inner items.\nIf you'll say me how to add new feature in my project, I'll test it,\nwith pleasure.\nBest regardes,\nAndrei\n2016-04-30 23:38 GMT+03:00 Mike Penz notifications@github.com:\n\nClosed #119.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. I got it.\nThanks a lot.\nIn your test app new feature works execellent)\n\n2016-05-01 15:58 GMT+03:00 Mike Penz notifications@github.com:\n\nmaven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/119#issuecomment-216040529\n. Is it  the specific thread? Tap again with no effect When I selected some items, I didn't deselect it.\n. Hi, Mike!\nWhen I use method getPosition(Item item) from Adapter I always get \"-1\".\nMaybe am I doing something wrong?\nThanks.\n. Yes. All my items have ID\nAnd I don't have position subItems before I didn't click on ExpandableItem and SubItems will be show.\n. You don't have a select/deselect all (with subitems) . May will you create such methods?\nAnd an Invert method)\n. I'm trying to realise such methods myself, but all what I have looks like \"\u0431\u0435\u0437 \u043e\u043a\u043e\u043d \u0431\u0435\u0437 \u0434\u0432\u0435\u0440\u0435\u0439 \u043f\u043e\u043b\u043d\u0430 \u0436\u043e\u043f\u0430 \u043e\u0433\u0443\u0440\u0446\u043e\u0432\".\nAnd one more method. It have to looks like \"open expandable item, without click, only programm's command\"\n. > you can expand items already via the fastadapter\ntoggleExpandable?\n\nThanks a lot, Mike)\n. Deselect all, deselect on click are good now)\nBut I don't recognise, how to select all. When I go over the items, I don't have subitems' position before I expand Parent Item. And after that parents' position changed - my \"go over\" - turned into \"game over\".\n. Thank you very much)\nBut now my select() selects all, but don't update Adapter. All changes I see only after \"reopen\" my adapter.\nBecause only withSelected(true) don't help us(\nWe need \"select(position)\" for everything)\n. Don't work.\nCan you give me the code of the sample app?\n. Thanks a lot! Everything fine now.\n. I reconnected my adapter to the RecyclerView (rv.setAdapter(mActivity.getmFastItemAdapter());) before select(). But I didn't found when I lost the tie...\n. Hi, Mike!\nMaybe you'll realise one more feature?\nIf I clicked \"select all\" - all items in my adapter selected, with ExpandableItems.\nIf I clicked \"deselect all\" - all items in my adapter deselected with ExpandableItems.\nBut if I clicked for each subItems (of one ExpandableItem), than deselect all of it, my parent ExpandableItems no deselect auto.\nAnd if I clicked on first subItem - parent ExpandableItems no select auto.\nThanks.\n. Okay, but how can I apply some filters for my Item's inner imageView during\ncreating? I can add image (withImage), but I can't apply some change for\nit...\n10 \u043c\u0430\u044f 2016 \u0433. 5:54 PM \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Mike Penz\" notifications@github.com\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\n@artests87 https://github.com/artests87 you can't. An item must not\nhave a view at all times.\nIf you want to change an item you will have to change it's data and notify\nthe adapter about the changed item. It is nothing the FastAdapter will\nhave to handle. Just add the udpate method for the data to your item. And\nmake sure the bindView method will correctly handle the view and the\ndata. If you call notifyAdapterItemChanged() bindView will get called and\nthe view is then updated\nYou may should watch some talks regarding RecyclerView and how views are\nhandled inside a RV\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/129#issuecomment-218183265\n. I want to change it a later time, but I don't know when and where can I do\na variable(( Because, if I do the variable in the blindView method, I have\nreceived a NullPointerExcept (And it's perfectly problem for me now)\n\n2016-05-10 23:34 GMT+03:00 Mike Penz notifications@github.com:\n\n@artests87 https://github.com/artests87 if you want to apply a filter\non images, you will have to do this in the bindView method. If you want\nto change it at a later time, your item needs to have a variable which you\ncan set, which will define which filter to set, if you change this variable\non this item, and you want the change to be visible, you will have to call\nnotifyAdapterItemChanged()\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/129#issuecomment-218282587\n. ```\ncompile('com.mikepenz:fastadapter:1.5.0.b2-SNAPSHOT@aar') {\n        transitive = true\n}\n\n//extension:\ncompile 'com.mikepenz:fastadapter-extensions:1.5.0.b2-SNAPSHOT@aar'\n```\n. compileSdkVersion 23\n    buildToolsVersion '23.0.2'\nIs it?)\n. Yes... CardView\n    compile 'com.android.support:appcompat-v7:23.2.0'\n    compile 'com.android.support:recyclerview-v7:+'\n    compile 'com.android.support:cardview-v7:23.0.0'\nI was so close)\n. A version doesn't my problem.\nBut you are absolutely right about cardview.\nI'm going to solve the problem.\nThanks a lot!\n. java\n((CardView)viewHolder.view).setForeground(FastAdapterUIUtils.getSelectablePressedBackground(ctx, FastAdapterUIUtils.adjustAlpha(Color.GRAY, 100),\n                    50, true));\nThat's work)\n. Are you sure, In the main activity (imageItem)?\n. But I use the SNAPSHOT version? Will I have the feature that in\nSNAPSHOT(group select, deselect and more) in new version?\n14 \u043c\u0430\u044f 2016 \u0433. 0:18 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Mike Penz\" notifications@github.com\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\nUse the latest app version from here:\nhttps://github.com/mikepenz/FastAdapter/releases/tag/v1.5.1\nIt is no issue, in the previous versions I just had not stored the\nsavedInstanceStateso it is simple why it didn't stay.\nWith this commit this was changed:\n13bbe76\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. I have a new problem(( I have two FastAdapter. And if I try to save both - the program save only the second FastAdapter.\nP.S. Everything all right) I just used the prefix)\n. Can I use the snapshot and everything will work great?\n\n2016-06-03 16:02 GMT+03:00 Rainer-Lang notifications@github.com:\n\n...and it is working great.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/140#issuecomment-223572526,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ANhcYZcVwm-CkxCJ1oMEk4T7FjuhgaVNks5qICXPgaJpZM4Is2SV\n.\n. \n",
    "RR12": "Here is how I init the adapter and attach it to RecyclerView \n```\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n    mRecyclerView.setLayoutManager(getLayoutManager());\n    mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\n        @Override\n        public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n            if (mIsRefreshable) {\n                int topRowVerticalPosition = (recyclerView == null || recyclerView.getChildCount() == 0) ? 0 : recyclerView.getChildAt(0).getTop();\n                mRefreshLayout.setEnabled(topRowVerticalPosition >= 0);\n            } else {\n                mRefreshLayout.setEnabled(false);\n            }\n        }\n    });\n    mAdapter.setHasStableIds(true);\n    mRecyclerView.setAdapter(mAdapter);\n\n    mLoadMoreItem = new LoadMoreListItem(new LoadMoreListItem.LoadMoreListener() {\n        @Override\n        public void onLoadMore() {\n            downloadData();\n        }\n    });\n\n    mAdapter.add(mLoadMoreItem);\n    mAdapter.notifyAdapterDataSetChanged();\n}\n\n``\n. okay, so i don't need to callnotifyAdapterDataSetChanged()anymore? Even forclear(),add()andremove()` ?\n. ",
    "bachhuberdesign": "Perfect, thank you! I didn't notice that method when I was trying to solve my problem.\n. ",
    "suleymanccelik": "Hi Mike, withOnlyOneExpandedItem method works well. But for my ui requirements, when a item is expanded or collapsed, background color of items change. Is there any callback method to give me information about which item is closed or opened? \n. Thanks @mikepenz \n. ",
    "ncapdevi": "@Rainer-Lang I don't think that that library will work, as it doesn't have an interface to implement, and requires you to extend its own adapter. This means that you can't have it be a subclass of AbstractAdapter AND of their SectionAdapter.\n. Absolutely right. Thanks for the quick help.\n. It's actually something that happens per Item, so an example of it would be (and this is within a class that extends from AbstractItem)\n```\n@Override\n    public int getType(){\n        if(mAttributes != null){\n            if(mAttributes.sStyle != null){\n                switch(mAttributes.sStyle){\n                    case STYLE_VOLUME:\n                        return R.id.row_player_controls_volume;\n                    case STYLE_PAUSE_SKIP:\n                        return R.id.row_player_controls_pause_skip;\n                }\n            }\n        }\n        return R.id.row_player_controls;\n    }\n@Override\npublic int getLayoutRes(){\n    if(mAttributes != null){\n        if(mAttributes.sStyle != null){\n            switch(mAttributes.sStyle){\n                case STYLE_VOLUME:\n                    return R.layout.row_player_controls_volume;\n                case STYLE_PAUSE_SKIP:\n                    return R.layout.row_player_controls_pause_skip;\n            }\n        }\n    }\n    return R.layout.row_player_controls;\n}\n\n```\nMy question is 1, is this an acceptable way of doing it, and also is the getType() override necessary/correct.\n. Sorry, I think I'm a little confused by your first sentence. I am providing a different ID  in the getType method, thus those should be recognized as different types, correct?  Those different types should correspond to grabbing the correct layout resource, per the code above.\nFor the second sentence, It looks like I am providing both different types and layouts even though the class is the same.\n. To your second post. That is essentially the same thing that I'm doing here, just in a single class, correct?\n. Okay, just wanted to make sure and get total clarification.  I would agree that it's a bit cleaner, however in my case, I won't know which subclass it's going to be until the parent class is actually created, so I am forced to do it this way (unless I make a structural change.)  Thanks for your feedback and help.\n. Perfect. Thanks!\n. Thought so. Same issue persists if I set it in the ViewHolder constructor or in unbind. If I find a solution I can post it back in this thread. Thanks for the help.. Think I came up with what the problem is, and it actually does have to do with FastAdapter, but more specifically with the itemanimators.  In DefaultAnimator, line 23, the code \nViewCompat.setAlpha(holder.itemView, 1);\nis executed. This means that while I am setting the alpha in my bind method, this method is overwriting it. Then, next time I come to the screen, this animation isn't being ran , and the onBind method hold the setAlpha value that is set.  Any ideas for ways around this?. This also happens if you don't set any Item Adapter and the RecyclerView uses android.support.v7.widget.DefaultItemAnimator . Only way to retain Alpha set in original onBind is to set: recyclerView.setItemAnimator(null);\nIt would be ideal for the alpha animator to return back to a set value, not always return to 1. \nThe other alternative would be to disable it for certain items during creation or onBind. Worst case would be to get a callback to the item after item animation\n. You're right, it goes up the the DefaultItemAnimator. I realized that after further investigation. Thanks for the help.. @Rainer-Lang  The issue, like I said above, is that the ItemAnimators are \"DISCLAIMER: this library does not animate items on scroll, just when added, removed, moved, or changed\"\nThat's not true for the recyclerview-animators library, there are animations for scrolling, which is what I need.. @mikepenz Ah, so the issue is relating to it not using the payload version of bindView okay, that makes sense. Thanks.  What exactly do you mean by \"anyways not a good pattern?\". Agreed, but that's not the only use case and typically the library shouldn't make those design decisions.  RecyclerView is fully replacing the ViewPager with the help of PagerSnapHelper. In situations like this, you 1. Can't fling and 2. Have only one item on the page at a time. (e.g., Official documentation for animating this situation  This is a totally valid design which is standard in a lot of areas. So to say that it's a \"bad pattern\" is really to not consider this design and fully limit the capabilities of the recyclerview. Libraries shouldn't be unnecessarily opinionated such that they prevent implementing designs that they hadn't considered.. Yup, you're absolutely right. Thanks for the help.. @mikepenz  Actually, looking into it a bit more, maybe I could get some clarification.  According to the Official documentation void bindViewHolder (VH holder,  int position) is not deprecated, used all over the place and is a perfectly valid method.  So could you elaborate on why it would be correct to not use it?. I just am not sure where the logic come from it being the one that \"should be used\" or that is the \"proper method\" there's nothing in the android documentation that indicates that. It's just a newer, additional method. It's not legacy.  If you look at the actual support library code, all of the logic resides in the void bindViewHolder(VH holder, int position) method.\n```\n        public void onBindViewHolder(VH holder, int position, List payloads) {\n            onBindViewHolder(holder, position);\n        }\n```\nThis is the entire method in the android support code. It's literally just calling the other function.  So to say that use of that method is not proper or shouldn't be used, seems odd to me. I'm just not sure where you're getting any evidence from that at all, other than that it's a new, additional method.  Either way, this issue is easily solved by using the .withLegacyBindViewMode(true) method being used on the adapter. But again, it's not a legacy function, payload isn't there as a replacement, it's there in addition to it. the method without the payload will ALWAYS be called, where as the one with the payload will only be called if specifically mentioned. It seems like if the goal is to minimize misbehavior, you'd want to use the method that is always called as well.  But like I said, it's easily fixed with a method to allow that method to be performed, so it's a non-issue. I'm just not following the logic.  Don't mean to take up all your time with it.. I'm sorry, but that's not true at all and I have no idea where you're coming up with that.\nhttps://android.googlesource.com/platform/frameworks/support/+/refs/heads/master/v7/recyclerview/src/android/support/v7/widget/RecyclerView.java#5335\nHere's the first example that I could find within the RecyclerView.java code within the main support library. This is an example of it not calling the payload function, or am I wrong?\n. @FabianTerhorst Ah! You are entirely correct. I glossed over the on Thanks for the clarification.. Ah, didn't realize this was a method directly from the adapter.  Fully explained here, sorry for the bother!\nhttps://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#onViewDetachedFromWindow(VH). Yup, stableIDs set, correct identifiers for all the items. Has always worked  (have been using the library for quite some time now) before this previous update and definitely seems to be related to the changes in the previously mentioned commit, although I'm not really sure why that's the case. It seems to re-animate/layout all the items though.. @mikepenz I Believe it would be replicated by calling set() with the same data set. This could be done, say, onResume()? If that doesn't work immediately, I'll trying replicating it by modifying some sample code in the repo.. @mikepenz  Happy to add more info to this one if there's anything I can do to help. I've been sticking to 2.6.2 and accidentally updated to 2.6.3 and immediately noticed that it would happen.. Sounds good, will try to get a version working with 3.0 shortly and let you know. Thanks.. @mikepenz  Was finally able to get around to testing a branch with 3.0.1 and using \n set with  IAdapterNotifier.LEGACY_DEFAULT does seem to work properly. Thanks for the help!. That general rule was roughly was I was looking for, thanks!. Yup, that's included.. Yeah, not sure why it's an issue for me and not you @FabianTerhorst .  Do you have minifyEnabled true  on your gradle file? If I turn that off, it compiles, but if not, I need -dontwarn com.mikepenz.fastadapter_extensions.**  on my proguard. ",
    "dexion": "@mikepenz, I can't make video with explanation, so I made TestApplication.\nPlease, look at function ListShiftTypeActivity.java#L224 with code comments. At ListShiftTypeActivity.java#L213 we notified adapter about movement, but adapter still return wrong item at right position.\nIf I use position for retrieving my Item I can't use list filtering. If I use item.getModel() I can't use drag'n'drop.\n. I tried, this has no effect in my case.\n. I think if I use fastAdapter.notifyAdapterDataSetChanged(); listView should be refreshed automatically - it is a basic logic. Why I should reseting all items in listView by GenericItemAdapter#set?\n\nif you know the position of the changed element\n\nChanged element shown right. New created element doesn't showed. It is always last element in listview.\nIf you want, you may try my app ListShiftType If you will try, you should turn off Instant run in Android Studio due some problems in libraries.\nScripts:\nA \n1. add new entity (just click FAB +), no need other actions\n2. Click back arrow in top left corner toolbar\nAll works fine.\n1. add another new entity (just click FAB +)\n2. Click back arrow in your phone (hard button or system arrow at bottom)\nList view should be refreshed but it doesn't.\nB\n1. Click any item in list view. New activity will be shown.\n2. Change something, like name\n3. Click back arrow in top left corner toolbar\nAll works fine. Item show changed info\n1. Click any item in list view. New activity will be shown.\n2. Change something, like name\n3. Click back arrow in your phone (hard button or system arrow at bottom)\nAll works fine. Item show changed info\n. I create new item: \ncall activity with params from ListActivity\nsave new entity into DB in ShowActivity\nafter that if click back arrow in toolbar - work\nafter that if click back button - doesn't work (I can't figure out difference between back arrow in toolbar methods and back button methods)\ntry reload adapter onResume\nShowActivity didn't have any overriden functions like onBackPressed or onOptionsItemClick\nFill itemAdapter with entities from DB Each call this method return all needed items from DB without any cache.\n. Ok. If click back arrow calls onCreate ListActivity so adapter fully refill. If click back button calls onResume ListActivity so adapter change only already added items. I think this is not quite right, but i understand. In my case I should clear and fully refill adapter onResume, no other choice, isn't it?\n. Thanks for help!\n. ",
    "jp1017": "sorry, I missing this: \ntransitive = true\nthank you !\n. @mikepenz I checked the thread, it's not the main thread, but when I execute this code:\nTradeItem item = new TradeItem();\n        item.time = taxi_00E7.getInserviceTime();\n        mTradeItems.add(0, item);\nin Handler which is created by main thread, but the View didn't update even after adapter.notify.\nso, any advice?\n. @mikepenz \nMy View can update when my Adapter extends RecyclerView.Adapter.\nThis can work between main thread and non-main thread.\nso, is this a bug?\n. @FabianTerhorst \nYes, but it work well without exception when using the origin adapter.\nAnd, it doesn't work when using this lib in main thread when coming across EventBus. \nYours work well when using EventBus 3?\n. @FabianTerhorst \n:+1:  \nI change it to Handler created by main thread, but it doesn't work still. :disappointed: \n. @FabianTerhorst Yes \n. @mikepenz \nmain, but it doesn't work when using your fantasitic lib. \nIt worked when my Adapter extends RecyclerView.Adapter.\n. @mikepenz @FabianTerhorst \nDemo here: https://github.com/jp1017/FastAdapterIssue\n. cool, thank you very very much. :smile: \n. @mikepenz @FabianTerhorst thanks for your answers, but the warnings still exists.\nWarning: com.mikepenz.fastadapter_extensions.dialog.FastAdapterBottomSheetDialog: can't find referenced method 'android.content.Context getContext()' in program class com.mikepenz.fastadapter_extensions.dialog.FastAdapterBottomSheetDialog\nWarning: com.mikepenz.fastadapter_extensions.dialog.FastAdapterBottomSheetDialog: can't find referenced method 'void setContentView(android.view.View)' in program class com.mikepenz.fastadapter_extensions.dialog.FastAdapterBottomSheetDialog\nWarning: com.mikepenz.fastadapter_extensions.dialog.FastAdapterBottomSheetDialog: can't find referenced method 'void setTitle(java.lang.CharSequence)' in program class com.mikepenz.fastadapter_extensions.dialog.FastAdapterBottomSheetDialog\nWarning: com.mikepenz.fastadapter_extensions.dialog.FastAdapterBottomSheetDialog: can't find referenced method 'void setTitle(int)' in program class com.mikepenz.fastadapter_extensions.dialog.FastAdapterBottomSheetDialog\n. Sad to say nothing at all. \nThis error appears when compiling.\n. :cry: For I didn't add design lib.\nadd this: \n\ncompile 'com.android.support:design:23.4.0'\n\nIs this lib essential? @mikepenz . ## gradle\uff1a\nclasspath 'com.android.tools.build:gradle:2.2.1'\nclasspath 'org.greenrobot:greendao-gradle-plugin:3.2.0'\ncompile 'org.greenrobot:greendao:3.2.0'\ncompile('com.mikepenz:fastadapter:1.8.2@aar') {\n    transitive = true\n}\ncompile 'com.mikepenz:fastadapter-extensions:1.8.0@aar'\ncompile 'com.mikepenz:materialize:1.0.0@aar'\nEntity:\n```\n@Entity\npublic class TradeItems extends AbstractItem {\n    @Id\n    private Long id;\n    public int no;          \n    public String beginTime;      // yyMMddHHmm\n@Generated(hash = 44254941)\npublic TradeItems(Long id, int no, String beginTime) {\n    this.id = id;\n    this.no = no;\n    this.beginTime = beginTime;\n}\n\n@Generated(hash = 84211957)\npublic TradeItems() {\n}\n\n@Override\npublic int getType() {\n    return R.id.ll_trade;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_rv_trade;\n}\n\n@Override\n\npublic void bindView(ViewHolder holder, List payloads) {\n        super.bindView(holder, payloads);\n        holder.mTvNo.setText(no + \"\");\n        holder.mTvTime.setText(beginTime);\n    }\npublic String getBeginTime() {\n    return this.beginTime;\n}\n\npublic void setBeginTime(String beginTime) {\n    this.beginTime = beginTime;\n}\n\npublic int getNo() {\n    return this.no;\n}\n\npublic void setNo(int no) {\n    this.no = no;\n}\n\npublic Long getId() {\n    return this.id;\n}\n\npublic void setId(Long id) {\n    this.id = id;\n}\n\n\nprotected static class ViewHolder extends RecyclerView.ViewHolder {\n    protected final View view;\n    @BindView(R.id.tv_item_trade_no)\n    TextView mTvNo;           \n    @BindView(R.id.tv_item_trade_time)\n    TextView mTvTime;\n\n    public ViewHolder(View itemView) {\n        super(itemView);\n        view = itemView;\n        ButterKnife.bind(this, view);\n    }\n}\n\n}\n```\n. Neither MaterialDrawer nor AboutLibraries. May be generics of the List:\n@Override\n    public void bindView(ViewHolder holder, List payloads) {\n        super.bindView(holder, payloads);\n        holder.mTvNo.setText(no + \"\");\n        holder.mTvTime.setText(beginTime);\n    }\n. > You can try List payloads if you want\nI try this, but how to callSuper:\n@Override\n    @CallSuper\n    public void bindView(VH holder, List payloads) {\n        //set the selected state of this item. force this otherwise it may is missed when implementing an item\n        holder.itemView.setSelected(isSelected());\n        //set the tag of this item to this object (can be used when retrieving the view)\n        holder.itemView.setTag(this);\n    }\n. @mikepenz https://github.com/jp1017/FastAdapterIssue/issues/2\n. @mikepenz \nI got it.\nSeperate model and item, it certainly works.\nThanks you.\n. @mikepenz \nBut, how to click the item?\n\nmFastAdapter.withOnClickListener \n\ncan't make it.\n. GenericFastItemAdapter makes it.\nThanks.\n. @Rainer-Lang  Add item first??\nI want to add one item this way: if Adapter doesn't contain this item, then add the item.\n. @mikepenz \nwhat identifier?  filter maybe ??\nI add this method:\nmItemAdapter.withFilterPredicate\nbut don't work. \n. compileSdkVersion must be 24/25? 25 did worked for me. \nBut I need 23 to compile my app...for I used https://github.com/anggrayudi/android-hidden-api ,,,. @mikepenz Thank you.\nThis gradle makes it: \ncompile('com.mikepenz:fastadapter:2.1.6@aar') {\n        exclude group:'com.android.support'\n    }. but multi generics?\njava\n    private FastAdapter<TradeItem> mFastAdapter;\n    private ModelAdapter<TradeEntity, TradeItem> mModelAdapter;\n    private ItemAdapter<ProgressItem> mFooterAdapter;\ninit:\njava\n        mFooterAdapter = ItemAdapter.items();\n        mModelAdapter = new ModelAdapter<>(new IInterceptor<TradeEntity, TradeItem>() {\n            @Override\n            public TradeItem intercept(TradeEntity tradeEntity) {\n                return new TradeItem(tradeEntity);\n            }\n        });\n        mFastAdapter = FastAdapter.with(mModelAdapter, mFooterAdapter);\n. Sorry, the same issue. :cry: . FastAdapter.with(mModelAdapter, mFooterAdapter); can't find the method.. Yes, you make it. but another issue: \nCaused by: java.lang.RuntimeException: please provide a reverseInterceptor\nat com.mikepenz.fastadapter.adapters.ModelAdapter.getModels(ModelAdapter.java:206)\nwhen add the model: \nmModelAdapter.add(mModelAdapter.getModels().size(), new TradeEntity());. Well done. Thank you.! :+1: :smile: . ",
    "gupta11": "Yes you can have native Ads being sent realtime based on position on the infinite list so every 6 items or every 3 items etc. What would you recommend to use for the ListView if this is definitely a requirement. \n. How does CNN and USA today have ads in their apps ? There is no lag in their apps. \n. ",
    "laukaichung": "Do you mean I need to use FastScrollIndicatorAdapter and wrap the footeradapter with it?\n. Thanks mike,just solved it. Also, I should have put footerAdapter.add(new FooterView()); after the the adapters are set.\njava\nFooterAdapter<FooterView> footerAdapter = new FooterAdapter();\nGridLayoutManager gridLayoutManager = new GridLayoutManager(this,2);\nrecyclerView.setLayoutManager(gridLayoutManager);\nrecyclerView.setAdapter(footerAdapter.wrap(adapter.wrap(fastAdapter)));\nadapter.addModel(productItem);\nfooterAdapter.add(new FooterView());\n. Thank you, fixed with your first suggestion. Regarding the second approach OnBindViewHolderListenerImpl, what class should I extend the OnBindViewHolderListenerImpl? \n. Thanks,mike. But I'm still getting problems. My example is a little tricky. I have to get the default selected items' positions first in withOnBindViewHolderListener before executingfastAdapter.select(). \nI tried the following \n@Override\n      public void onBindViewHolder(RecyclerView.ViewHolder viewHolder, int position) {\n               .............               \n               UIUtils.setBackground(thisViewHolder.layout, FastAdapterUIUtils.getSelectableBackground(context, Color.RED, true));\n              if(row.name.contains(\"something\")){\n                   fastadapter.add(position);\n              }\n      }\nBut it gave me java.lang.IllegalStateException: Cannot call this method while RecyclerView is computing a layout or scrolling\nIf I put it outside the listener:\n```\nList selectedPositions = new ArrayList<>();\nfastAdapter.withOnBindViewHolderListener(new FastAdapter.OnBindViewHolderListener(){\n             ......\n             if(row.name.contains(\"something\")){\n                   selectedPositions.add(position);\n              }\n}\nfor(Integer selectedPosition:selectedPositions){\n    fastadapter.select(selectedPosition);\n}\n```\nThe fastadapter.select(position) will run before withOnBindViewHolderListener returns selectedPositions.  \n\nUpdate:\nI also tried the following way using withSetSelected(true), but it isn't working properly:\n@Override\n      public void onBindViewHolder(RecyclerView.ViewHolder viewHolder, int position) {\n               .............     \n               ItemModel thisItemAdapter = itemAdapter.getItem(position);\n               UIUtils.setBackground(thisViewHolder.layout, FastAdapterUIUtils.getSelectableBackground(context, Color.RED, true));\n              if(row.name.contains(\"something\")){\n                   thisItemAdapter.withSetSelected(true);\n                   thisViewHolder.layout.setSelected(true);\n              }\n      }\nIt can turn the default selected items red in the beginning, but I have to click twice to unselect them.\n. @mikepenz, I have moved the code back to bindView. Is fastadapter.select(position) always called before bindView? My problem is that the default selected items are dynamic. I need to get their positions before calling fastadapter.select(position) , that's why I used onBindViewHolder before.\n. Solved!\nYour suggestion leads me to this:\nfor(Model data:collection){\n   boolean defaultSelected = false;\n   if(data.item.contains('default_select')){\n       defaultSelected = true;\n   }\n   itemAdapter.add(new ItemModel(data).withSetSelected(defaultSelected));\n}\nwithSetSelected won't work if it's in bindView. The color won't change accordingly.\n. Thanks, it works.\n. I'm following the example of MultiTypeGenericItemActivity, but it doesn't seem to work. \nUsing your example, Is there any way to pass an extra parameter to RightGenericIconItem, for example:\npublic class RightGenericIconItem extends GenericIconItem {\n    String extra;\n    public RightGenericIconItem(IconModel icon) {\n        super(icon);\n    }\n    public RightGenericIconItem(IconModel icon,String extra) {\n        super(icon);\n        this.extra = extra;\n    }\n}\n. ",
    "duyngn": "Thanks Mike,\nI think I got it working... more of an exercise to mess with your library :)\njava\npublic abstract class SportPlayer&lt;Item extends SportPlayer&lt;?, ?>, VH extends RecyclerView.ViewHolder> extends AbstractItem&lt;Item, VH> {}\njava\npublic class BasketballPlayer extends SportPlayer&lt;BasketballPlayer, BasketballPlayer.ViewHolder> {}\npublic class GolfPlayer extends SportPlayer&lt;GolfPlayer, GolfPlayer.ViewHolder> {}\nThis will enforce the concrete player classes to implement:\npublic int getType()\npublic int getLayoutRes()\nBut it won't enforce the concrete player classes to implement:\npublic void bindView(ViewHolder vh)\nThat's because AbstractItem already has an implementation of this function.\nSo a manual override for bindView() must be done in each concrete player class.\n. ",
    "shehabic": "@mikepenz can you add an example of how it to allow different model types?, even a basic example here?\nI have the following:\njava\npublic abstract class BaseItemWrapper<Item extends BaseItemWrapper<?, ?>, VH extends RecyclerView.ViewHolder> extends AbstractItem<Item, VH> {\n}\njava\npublic class NewsItemWrapper extends BaseItemWrapper<NewsItemWrapper, NewsItemWrapper.ViewHolder> {\n}\njava\npublic class AdItemWrapper extends BaseItemWrapper<AdItemWrapper, AdItemWrapper.ViewHolder> {\n}\nnow how create the GenericItemAdapter out of this?\nthis is not correct:\njava\nGenericItemAdapter<NewsItem, BaseItemWrapper> itemAdapter = new GenericItemAdapter<>(new Function<NewsItem, BaseItemWrapper>() {\n            @Override\n            public BaseItemWrapper apply(NewsItem newsItem) {\n                if (newsItem.type.equals(NewsItem.ItemType.AD)) {\n                    return new NewsItemWrapper(newsItem);\n                } else {\n                    return new AdItemWrapper(newsItem);\n                }\n            }\n        });\nI'm trying to implement Native ads, I know that NativeExpressAds in AdMob are very bad for performance as they are using WebView (I'm already in communication with Google about the performance issue, though I found at least one sample that's not performing bad), but I'd like to create a generic one that accept NativeAdsAdvanced as well as Facebook Native Ads. \n. @FabianTerhorst this seems to be working, thanks\n. ",
    "HammadNasir": "@mikepenz here's the link to StackOverflow question.\nHere I am loading image into ImageView:\nPicasso.with(itemView.getContext())\n                            .load(imageURL.getText().toString())\n                            .into(homelessImage);\nPlease tell me if this is the wrong way or where this piece of code is supposed to be written. Please help me with this. \nThanks.\n. @mikepenz are you going to resolve it, buddy?\n. @FabianTerhorst yes... here it is:\n```\npublic void filterRequests(final Long lng) {\n        if (dialog == null) {\n            AlertDialog.Builder builder = new AlertDialog.Builder(this);\n        LayoutInflater inflater = this.getLayoutInflater();\n        View addVenueDialog = inflater.inflate(R.layout.filter_requests_dialog, null);\n        chkBoxLiveRqsts = (AppCompatCheckBox) addVenueDialog.findViewById(R.id.chkBoxLiveRqsts);\n        chkBoxSFLRqsts = (AppCompatCheckBox) addVenueDialog.findViewById(R.id.chkBoxSFLRqsts);\n\n        builder.setTitle(\"Filter requests based on\");\n        builder.setView(addVenueDialog);\n        builder.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialogInterface, int i) {\n\n                progressDialogAdding.setMessage(\"Filtering...\");\n                progressDialogAdding.setCancelable(false);\n                progressDialogAdding.show();\n\n                if (isNetworkAvailable()) {\n                    if (chkBoxLiveRqsts.isChecked()) {\n                        fastItemAdapter.clear();\n                        geoQuery = geoFireSportRequests.queryAtLocation(new GeoLocation(currentLatDouble, currentLngDouble), 5);\n                        geoQuery.addGeoQueryEventListener(new GeoQueryEventListener() {\n                            @Override\n                            public void onKeyEntered(String key, GeoLocation location) {\n\n                                firebaseDatabase.child(key).addValueEventListener(new ValueEventListener() {\n                                    @Override\n                                    public void onDataChange(DataSnapshot dataSnapshot) {\n                                        if (dataSnapshot.getValue() != null) {\n                                            if (lng <= 900) {\n                                                Map<String, String> newRequest = (Map<String, String>) dataSnapshot.getValue();\n                                                postedBy = newRequest.get(\"pBy\");\n                                                userEmail = newRequest.get(\"uEmail\");\n                                                currentLatitude = newRequest.get(\"cLat\");\n                                                currentLongitude = newRequest.get(\"cLng\");\n                                                utcFormatDateTime = newRequest.get(\"utcFormatDateTime\");\n                                                startDateTimeInEpoch = newRequest.get(\"startDateTimeInEpoch\");\n                                                endDateTimeInEpoch = newRequest.get(\"endDateTimeInEpoch\");\n\n                                                prepareDataOfSR();\n                                                progressDialogAdding.dismiss();\n\n                                                refreshButton.setVisible(false);\n                                                filterButton.setVisible(true);\n                                                if (snackbarNoIC != null) {\n                                                    snackbarNoIC.dismiss();\n                                                }\n                                            } else {\n                                                Snackbar snackbar = Snackbar\n                                                        .make(coordinatorLayout, \"chkBoxLive is null\", Snackbar.LENGTH_LONG);\n                                                snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                                snackbar.show();\n                                            }\n                                            progressDialogAdding.dismiss();\n                                        } else {\n                                            Snackbar snackbar = Snackbar\n                                                    .make(coordinatorLayout, \"database is null\", Snackbar.LENGTH_LONG);\n                                            snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                            snackbar.show();\n                                            progressDialogAdding.dismiss();\n                                        }\n                                    }\n\n                                    @Override\n                                    public void onCancelled(DatabaseError databaseError) {\n                                        Snackbar snackbar = Snackbar\n                                                .make(coordinatorLayout, databaseError.getMessage(), Snackbar.LENGTH_LONG);\n                                        snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                        snackbar.show();\n                                        progressDialogAdding.dismiss();\n                                    }\n                                });\n\n                                firebaseDatabase.child(key).addValueEventListener(new ValueEventListener() {\n                                    @Override\n                                    public void onDataChange(DataSnapshot dataSnapshot) {\n                                        if (dataSnapshot != null) {\n                                            if (lng <= 900) {\n                                                if (snackbar != null) {\n                                                    snackbar.dismiss();\n                                                }\n\n                                                if (fastItemAdapter.getAdapterItemCount() == 0) {\n                                                    emptyRVtext.setVisibility(View.VISIBLE);\n                                                } else {\n                                                    emptyRVtext.setVisibility(View.INVISIBLE);\n                                                }\n                                                progressDialogAdding.dismiss();\n                                            } else {\n                                                Snackbar snackbar = Snackbar\n                                                        .make(coordinatorLayout, \"chkBoxLive is null\", Snackbar.LENGTH_LONG);\n                                                snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                                snackbar.show();\n                                            }\n                                        } else {\n                                            Snackbar snackbar = Snackbar\n                                                    .make(coordinatorLayout, \"database is null\", Snackbar.LENGTH_LONG);\n                                            snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                            snackbar.show();\n                                            progressDialogAdding.dismiss();\n                                        }\n                                    }\n\n                                    @Override\n                                    public void onCancelled(DatabaseError databaseError) {\n                                        Snackbar snackbar = Snackbar\n                                                .make(coordinatorLayout, databaseError.getMessage(), Snackbar.LENGTH_LONG);\n                                        snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                        snackbar.show();\n                                        progressDialogAdding.dismiss();\n                                    }\n                                });\n                            }\n\n                            @Override\n                            public void onKeyExited(String key) {\n\n                            }\n\n                            @Override\n                            public void onKeyMoved(String key, GeoLocation location) {\n\n                            }\n\n                            @Override\n                            public void onGeoQueryReady() {\n\n                            }\n\n                            @Override\n                            public void onGeoQueryError(DatabaseError error) {\n\n                            }\n                        });\n                    } else if (chkBoxSFLRqsts.isChecked()){\n                        fastItemAdapter.clear();\n                        geoQuery = geoFireSportRequests.queryAtLocation(new GeoLocation(currentLatDouble, currentLngDouble), 5);\n                        geoQuery.addGeoQueryEventListener(new GeoQueryEventListener() {\n                            @Override\n                            public void onKeyEntered(String key, GeoLocation location) {\n\n                                firebaseDatabase.child(key).addValueEventListener(new ValueEventListener() {\n                                    @Override\n                                    public void onDataChange(DataSnapshot dataSnapshot) {\n                                        if (dataSnapshot.getValue() != null) {\n                                            if (lng > 900) {\n                                                Map<String, String> newRequest = (Map<String, String>) dataSnapshot.getValue();\n                                                postedBy = newRequest.get(\"pBy\");\n                                                userEmail = newRequest.get(\"uEmail\");\n                                                currentLatitude = newRequest.get(\"cLat\");\n                                                currentLongitude = newRequest.get(\"cLng\");\n                                                utcFormatDateTime = newRequest.get(\"utcFormatDateTime\");\n                                                startDateTimeInEpoch = newRequest.get(\"startDateTimeInEpoch\");\n                                                endDateTimeInEpoch = newRequest.get(\"endDateTimeInEpoch\");\n\n                                                prepareDataOfSR();\n                                                progressDialogAdding.dismiss();\n\n                                                refreshButton.setVisible(false);\n                                                filterButton.setVisible(true);\n                                                if (snackbarNoIC != null) {\n                                                    snackbarNoIC.dismiss();\n                                                }\n                                            } else {\n                                                Snackbar snackbar = Snackbar\n                                                        .make(coordinatorLayout, \"chkBoxSFL is null\", Snackbar.LENGTH_LONG);\n                                                snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                                snackbar.show();\n                                            }\n                                            progressDialogAdding.dismiss();\n                                        } else {\n                                            Snackbar snackbar = Snackbar\n                                                    .make(coordinatorLayout, \"database is null\", Snackbar.LENGTH_LONG);\n                                            snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                            snackbar.show();\n                                            progressDialogAdding.dismiss();\n                                        }\n                                    }\n\n                                    @Override\n                                    public void onCancelled(DatabaseError databaseError) {\n                                        Snackbar snackbar = Snackbar\n                                                .make(coordinatorLayout, databaseError.getMessage(), Snackbar.LENGTH_LONG);\n                                        snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                        snackbar.show();\n                                        progressDialogAdding.dismiss();\n                                    }\n                                });\n\n                                firebaseDatabase.child(key).addValueEventListener(new ValueEventListener() {\n                                    @Override\n                                    public void onDataChange(DataSnapshot dataSnapshot) {\n                                        if (dataSnapshot.getValue() != null) {\n                                            if (lng > 900) {\n                                                if (snackbar != null) {\n                                                    snackbar.dismiss();\n                                                }\n\n                                                if (fastItemAdapter.getAdapterItemCount() == 0) {\n                                                    emptyRVtext.setVisibility(View.VISIBLE);\n                                                } else {\n                                                    emptyRVtext.setVisibility(View.INVISIBLE);\n                                                }\n                                                progressDialogAdding.dismiss();\n                                            } else {\n                                                Snackbar snackbar = Snackbar\n                                                        .make(coordinatorLayout, \"chkBoxSFL is null\", Snackbar.LENGTH_LONG);\n                                                snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                                snackbar.show();\n                                            }\n                                            progressDialogAdding.dismiss();\n                                        } else {\n                                            Snackbar snackbar = Snackbar\n                                                    .make(coordinatorLayout, \"database is null\", Snackbar.LENGTH_LONG);\n                                            snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                            snackbar.show();\n                                            progressDialogAdding.dismiss();\n                                        }\n                                    }\n\n                                    @Override\n                                    public void onCancelled(DatabaseError databaseError) {\n                                        Snackbar snackbar = Snackbar\n                                                .make(coordinatorLayout, databaseError.getMessage(), Snackbar.LENGTH_LONG);\n                                        snackbar.setDuration(Snackbar.LENGTH_SHORT);\n                                        snackbar.show();\n                                        progressDialogAdding.dismiss();\n                                    }\n                                });\n                            }\n\n                            @Override\n                            public void onKeyExited(String key) {\n\n                            }\n\n                            @Override\n                            public void onKeyMoved(String key, GeoLocation location) {\n\n                            }\n\n                            @Override\n                            public void onGeoQueryReady() {\n\n                            }\n\n                            @Override\n                            public void onGeoQueryError(DatabaseError error) {\n\n                            }\n                        });\n                    } else if (!chkBoxLiveRqsts.isChecked() && !chkBoxSFLRqsts.isChecked()) {\n                        fastItemAdapter.clear();\n                        retrieveGR();\n                        progressDialogAdding.dismiss();\n                    } else if (chkBoxLiveRqsts.isChecked() && chkBoxSFLRqsts.isChecked()) {\n                        fastItemAdapter.clear();\n                        retrieveGR();\n                        progressDialogAdding.dismiss();\n                    }\n                } else {\n                    Snackbar snackbar = Snackbar\n                            .make(coordinatorLayout, \"No internet connection\", Snackbar.LENGTH_SHORT);\n                    snackbar.show();\n                    progressDialogAdding.dismiss();\n                }\n            }\n        });\n        dialog = builder.create();\n    }\n    dialog.show();\n}\n\n```. @FabianTerhorst no... there is no issue of firebase here. \nAs I have written in the question: \"The problem is that log1 shows all the values of holder.diff but log2 shows only the last fetched value and do the logic using it only.\" All the values are getting fetched but not all of them are getting assigned when trying to use that long in .filterRequests(long) method.. @FabianTerhorst please explain the above line more clearly and ask @mikepenz also to have a look here.. @mikepenz can you suggest me of ways to filter content based on the time? I'm trying to do the same. I want to filter content based on 'Live' and 'scheduled for later'.. Please help @mikepenz . Okay @mikepenz , I have a long value stored in holder.diffNowsdtelTV textView and it is stored in every item of the fastItemAdapter. So, I tried filtering like this:\nfastItemAdapter.withFilterPredicate(new IItemAdapter.Predicate<GRModelClass>() {\n                                    @Override\n                                    public boolean filter(GRModelClass item, CharSequence constraint) {\n                                        //return true if we should filter it out\n                                        //return false to keep it\n                                        return Long.parseLong(GRModelClass.ViewHolder.diffNowsdtelTV.getText().toString()) <= 900;\n                                    }\n                                });\nbut it didn't worked and showed all the item of the fastitemadapter instead of filtering it. How can I filter the requests based on value stored in holder.diffNowsdtelTV?\nCurrently values stored in holder.diffNowsdtelTV are -868, -26684, -26823 and it all should be showed when trying to filter using above given code. Right?\nPlease help.. @mikepenz please help, dude.. @Rainer-Lang please write an example as per my needs... I'm confused!. @Rainer-Lang @mikepenz please guys.. please help with this!. ",
    "pkozlovskiy": "@mikepenz \n\"You must not change the layout during runtime in one activity\"\nBut how can I change layout of the Item, when I change LayoutManager of RecyclerView(the useful case with List/Grid switcher)?. Thanks, now I understand this. Maybe https://github.com/google/flexbox-layout will help me.... ",
    "davideas": "The technique used doesn't allow it, it is simply impossible, because that it is not a View(!). So you have to change library or the library should change technique adopting a custom implementation or a new custom LayoutManager, which is quite long and complex to do it.\nI gave up this drawing technique, I used the same and then I removed it, now in my library I created a new way to do it, if you are interested you can check it out.\n. @LuizEdgar, you should read [last part of] my answer some time ago at this question: http://stackoverflow.com/questions/33018788/how-can-i-set-a-listener-inside-a-recyclerview-header-decor\n. ",
    "LuizEdgar": "I'm sorry to open this, but I have a solution for you.\nCheck the page of the StickyHeader Library used in FastAdapter.\njava\nStickyRecyclerHeadersTouchListener touchListener =\n    new StickyRecyclerHeadersTouchListener(recyclerView, headersDecor);\ntouchListener.setOnHeaderClickListener(\n    new StickyRecyclerHeadersTouchListener.OnHeaderClickListener() {\n      @Override\n      public void onHeaderClick(View header, int position, long headerId) {\n        Toast.makeText(MainActivity.this, \"Header position: \" + position + \", id: \" + headerId,\n            Toast.LENGTH_SHORT).show();\n      }\n    });\nmRecyclerView.addOnItemTouchListener(touchListener);\n. ",
    "gaspar1423": "Thank you all for the feedback.\nLuizEdgar answer was the temporary solution i needed but i'm going to work on that one because i just want to click on half of the header, but for now it will do the work.\n. Hi,\nI've fixed my issue by importing a fork of the timehop lib you are using and imported the .aar generated by that fork. (https://github.com/djdmbrwsk/sticky-headers-recyclerview)\nThank you for the help and your lib ;). ",
    "yolapop": "@mikepenz OnBindViewHolderListenerImpl is not static class, how can I extend that?. So, this is not valid anymore?\njava\npublic class MyOnBindViewHolderListener extends OnBindViewHolderListenerImpl {\n...\n}\nIn my case, I want to get the item's identifier and position when bindView. Any idea how that could be achieved?. Can't.. because all my items are generic.\nAnyway I've copied & pasted OnBindViewHolderListenerImpl. It works now.\nThank you for the help @mikepenz . ",
    "waninkoko": "@mikepenz Sure, I'm gonna create a quick sample app right away.\n. @mikepenz A sample app that shows the issue: https://www.dropbox.com/s/dvghaanqp1smowa/MoPubRecyclerAdapterFastAdapter.zip?dl=0\n. @mikepenz Forgot to say that MoPubRecyclerAdapter provides a getOriginalPosition method that returns the position in the original adapter.\n. I was able to solve this issue by overriding getRelativeInfo(int position) this way:\njava\n@Override\npublic RelativeInfo<SongItem> getRelativeInfo(int position) {\n    return super.getRelativeInfo(mopubRecyclerAdapter.getOriginalPosition(position));\n}\nEDIT:\nBut the issue still happens in ClickListenerHelper, ouch!\n. @mikepenz Don't worry, thanks!\nI was able to fix the issue with ClickListenerHelper by creating my own and getting the item with getRelativeInfo(int position) instead of getItem(int position)\n. @mikepenz It's a demo id that MoPub provides to test native ads\nEDIT:\nJust updated to 1.5.6  and modified my custom FastItemAdapter as in the sample, but I still need to use my own ClickListenerHelper, ouch!\nEDIT 2:\nJust created a pull request that fixes the issue with ClickListenerHelper. https://github.com/mikepenz/FastAdapter/pull/153\n. @mikepenz Yes, I read the changelog. 1.8.0 is working fine until I replace FastItemAdapter with MoPubFastItemAdapter.\nI didn't have time yet to check this issue deeply, sorry for not being able to give more details.\n. Since FastAdapter 2.6.0, the click listener stops working.\nIf I set the FastItemAdapter as the RecyclerView adapter, instead of the MoPubRecyclerAdapter, it works well, but obviously I don't get any ads.\nI hope I get some free time tomorrow to debug why exactly this happens.. @mikepenz Yes, I actually tried with 2.6.0 and 2.6.2. I think there is an issue with the legacy mode.\nWhen it is enabled, onBindViewHolder(ViewHolder, int) calls onBindViewHolder(ViewHolder, int, List), and this method calls super.onBindViewHolder(ViewHolder, int, List), and this one calls onBindViewHolder(ViewHolder, int) again and we get an infinite loop of calls.\nMaybe onBindViewHolder(ViewHolder, int) should call the OnBindViewHolderListener directly?\n. @mikepenz Tomorrow I'll attach the stack trace when the StackOverflowError occurs.\nForgot to say that this is happening when the FastAdapter is wrapped in an adapter does not override the proper onBindViewHolder (like the adapter from MoPub or recyclerview-animators).\n. Well, I just realized that I remember how the stack trace was. It is something like this:\njava.lang.StackOverflowError\n   at android.support.v7.widget.RecyclerView.Adapter.onBindViewHolder\n   at com.mikepenz.fastadapter.FastAdapter.onBindViewHolder(FastAdapter.java:527)\n   at com.mikepenz.fastadapter.FastAdapter.onBindViewHolder(FastAdapter.java:513)\n   at android.support.v7.widget.RecyclerView.Adapter.onBindViewHolder\n   at com.mikepenz.fastadapter.FastAdapter.onBindViewHolder(FastAdapter.java:527)\n   at com.mikepenz.fastadapter.FastAdapter.onBindViewHolder(FastAdapter.java:513)\n   at library.with.bad.Adapter.onBindViewHoler\n. I have observed the same here.\nThe commit that caused this behavior change is the following: https://github.com/mikepenz/FastAdapter/commit/f70f732582581a026b1b2097e0974e7565316ad6. @mikepenz In my case I call set with a new list that contains new generated items that use the same IDs as the previous items.\nI don't remember but I think I tried to call setNewList with no success.. ",
    "rsd-raul": "Sorry for the late reply Mike, I didn't have time have any time left yesterday :S\nI tried removing the listener as you sugested, but the main problem I have is implementing the expand behaviour.\nI have this:\nviewHolder.expandIcon.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View view) {\n        viewHolder.itemView.performClick();\n    }\n});\nAnd this:\n```\n@Override\npublic FastAdapter.OnClickListener getOnItemClickListener() {\n    return new FastAdapter.OnClickListener() {\n        @Override\n        public boolean onClick(View v, IAdapter adapter, TaskDetailItem item, int pos) {\n        // If the item has sub-items rotate the icon 180\u00ba\n        boolean moreInfo = false;\n        if (item.getSubItems() != null) {\n            int rotation = item.isExpanded() ? 180 : 0;\n\n            ViewCompat.animate(v.findViewById(R.id.expandButton)).rotation(rotation).start();\n\n            moreInfo = true;\n        }\n\n        // And if the item has a custom onClickListener call it\n        return mOnClickListener != null ? mOnClickListener.onClick(v, adapter, item, pos) : moreInfo;\n    }\n};\n\n}\n```\nThat makes the ImageButton capable of expanding, but clicking the item will also expand.\nI\u00b4ve tried doing:\n@Override\npublic FastAdapter.OnClickListener<TaskDetailItem> getOnItemClickListener() {\n    return null;\n}\nBut it still expands.\nI'm going horribly wrong somewhere, right?\nShould I not be using ExpandableItem? \n\nUsing a boolean value I can manage to execute a statement only on the ImageButtonclick, but I dont really know what to modify to block the expansion if the click is coming from the item:\nviewHolder.expandIcon.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View view) {\n        mExpandButton = true;\n        viewHolder.itemView.performClick();\n    }\n});\nboolean mExpandButton = true;`\n```\n@Override\npublic FastAdapter.OnClickListener getOnItemClickListener() {\n    return new FastAdapter.OnClickListener() {\n        @Override\n        public boolean onClick(View v, IAdapter adapter, TaskDetailItemitem, int pos) {\n        // If the detail has more info rotate the icon 180\u00ba\n        boolean moreInfo = false;\n        if (item.getSubItems() != null) {\n            int rotation = item.isExpanded() ? 180 : 0;\n\n            ViewCompat.animate(v.findViewById(R.id.expandButton)).rotation(rotation).start();\n\n            moreInfo = true;\n        }\n\n        if(expandButton) {\n            Toast.makeText(context, \"Testing\", Toast.LENGTH_SHORT).show();\n            expandButton = false;\n        }\n\n        // And if the item has a custom onClickListener call it\n        return mOnClickListener != null ? mOnClickListener.onClick(v, adapter, item, pos) : moreInfo;\n    }\n};\n\n}\n```\nThanks for the help :D\n. I \"fixed\" it by surrounding everything but the ImageButton in another layout, it's not ideal but it works, plus I'm showing only a few elements :S\nThe layout will be something like:\nRelative\n    Linear                         <= customBehaviour();\n        ImageButton\n        TextView\n    /Linear\n    ImageButton                    <= viewHolder.itemView.performClick();\n/Relative\n. Hi Rainer, you mean my solution or Mike's?\n. Hi Mike, thanks for that, I followed the changes and adapted my code to it, but nothing happened, probably I have something different/missing and that\u00b4s why it\u00b4s misbehaving... Not really sure, maybe Rainer can try it and give some feedback.\nOn the other hand, maybe for this particular implementation is a little overkill, I mean, adding a new layout it\u00b4s not ideal but it\u00b4s not end of the world bad, plus, my list is 5/6 items tops, it shouldn't affect performance.\nIf I finally decide to make my main items expandable in the dashboard... Which is bound to happen... I'll make them using the new functionality, but it will help if it was simplified/foolproof (like everything else), maybe an optional:\n.withExpansionItem(R.id.view)\nAnd handling the click as you already handle the itemView clicks will be the ideal solution.\nPs: on the other hand, just noticed you make your fastAdapters with <IItem>, which means I can save a few lines in Dagger... Yey :dancer: \n. \nDidn\u00b4t knew that was a thing xD\nHow cool is that?\n. I tried that and also modified the fragment who handles the adapter to set the ClickListenerHelper as I saw you do in the commit.\nI\u00b4ll probably download the branch when I get to it, I\u00b4m sure it works like a charm and I\u00b4m just missing something really small, but I have limited time this days so I\u00b4m trying to avoid perfection and focus on getting things done.\nPs: I finally removed the extra layout and set listeners to icons and text, behaves the same way, it\u00b4s more modular and I save a findById() and the layout by reusing the elements, so there is that :D\nRegarding the repos, it depends, right now I\u00b4m using mostly SVN so I\u00b4m used to the \"private\" stuff, reason why for big projects and work-in-progress ones I tend to do the same.\n. ",
    "SahajRana": "thanks.. it worked!\n. ",
    "meness": "@FabianTerhorst That is the best solution if it's not good to modify the core.\n. @mikepenz I made a sample app here. If you run that app, you will have following logs.\n\nI/From\u00a0ItemFactory:: Hello World 0\nI/From\u00a0bindView:: Hello World 0\nI/From\u00a0ItemFactory:: Hello World 0\nI/From\u00a0bindView:: Hello World 1\nI/From\u00a0ItemFactory:: Hello World 0\nI/From\u00a0bindView:: Hello World 2\nI/From\u00a0ItemFactory:: Hello World 0\nI/From\u00a0bindView:: Hello World 3\nI/From\u00a0ItemFactory:: Hello World 0\nI/From\u00a0bindView:: Hello World 4\n\nAs you see, accessing the field from ItemFactory has same result!\n. @mikepenz generateView() is probably the method I need to, but I already knew about its existence, the problem with that method is, it will never be called! (I tested with logs and break points) I know it sounds weird but that's true.\n. @mikepenz Can you provide an example please?\n. @Rainer-Lang I was wrong! I was trying to use FastItemAdapter as my base adapter, but FastAdapter supports filtering as well. I'm talking about this line. To enable filtering along with sticky header, use filtering methods for fastAdapter field (in that sample).\n. Setting null as ItemAnimator works fine! thanks Mike\n. @mikepenz Here's my sample:\n``` java\npublic class ChatMessagesFastAdapter extends FastItemAdapter implements FastAdapter.OnLongClickListener {\n    private OnChatMessageSelectionChanged onChatMessageSelectionChanged;\n    private OnMessageClick onMessageClick;\n    private OnChatMessageRemove onChatMessageRemove;\nprivate OnLongClickListener longClickListener = new OnLongClickListener<Item>() {\n    @Override\n    public boolean onLongClick(View v, IAdapter<Item> adapter, Item item, int position) {\n        if (onChatMessageSelectionChanged != null) {\n            onChatMessageSelectionChanged.onChatMessageSelectionChanged(getSelectedItems().size(), getSelectedItems());\n        }\n        return true;\n    }\n};\n\npublic ChatMessagesFastAdapter(OnChatMessageSelectionChanged<Item> OnChatMessageSelectionChangedListener, final OnMessageClick onMessageClickListener, final OnChatMessageRemove chatMessageRemoveListener) {\n    onChatMessageSelectionChanged = OnChatMessageSelectionChangedListener;\n    onMessageClick = onMessageClickListener;\n    onChatMessageRemove = chatMessageRemoveListener;\n\n    // as we provide id's for the items we want the hasStableIds enabled to speed up things\n    setHasStableIds(true);\n\n    withSelectable(true);\n    withMultiSelect(true);\n    withSelectOnLongClick(true);\n    withOnPreLongClickListener(this);\n    withOnLongClickListener(longClickListener);\n    withOnClickListener(new OnClickListener<Item>() {\n        @Override\n        public boolean onClick(View v, IAdapter<Item> adapter, Item item, int position) {\n            if (getSelectedItems().size() == 0) {\n                if (onMessageClick != null) {\n                    onMessageClick.onMessageClick(v, item.mMessage, position);\n                }\n            } /*else {\n                select(position);\n                onLongClick(v, adapter, item, position);\n                longClickListener.onLongClick(v, adapter, item, position);\n            }*/\n            // TODO: 9/17/2016 [Alireza Eskandarpour Shoferi] implement\n            return false;\n        }\n    });\n}\n\n@Override\npublic void notifyAdapterItemRemoved(int position) {\n    super.notifyAdapterItemRemoved(position);\n\n    if (onChatMessageSelectionChanged != null) {\n        onChatMessageSelectionChanged.onChatMessageSelectionChanged(getSelectedItems().size(), getSelectedItems());\n    }\n}\n\n@Override\npublic void deselect() {\n    super.deselect();\n\n    if (onChatMessageSelectionChanged != null) {\n        onChatMessageSelectionChanged.onChatMessageSelectionChanged(getSelectedItems().size(), getSelectedItems());\n    }\n}\n\n@Override\npublic boolean onLongClick(View v, IAdapter<Item> adapter, Item item, int position) {\n    if (!item.isSelected()) {\n        ((FrameLayout) v).setForeground(new ColorDrawable(v.getResources().getColor(R.color.colorChatMessageSelectableItemBg)));\n    } else {\n        ((FrameLayout) v).setForeground(new ColorDrawable(Color.TRANSPARENT));\n    }\n    return false;\n}\n\n}\n```\nI'm trying to implement selecting on single click if already items were selected by LongClick. In other words, default selecting item option is LongClick, but if items where selected already, single click also select items.\n. @mikepenz That's not really what I need. Using your code makes selecting onLongClick disable if already something has selected but I want both at same time but because I wrote changing foreground on the LongClick callback, invoke that from on single click.\n. @mikepenz No, If you use Telegram, you may have seen, you can scroll top to load more previous messages. I want to implement something like that.\n. @mikepenz I wrote a better one but I make a PR later, thanks anyway \ud83d\udc4d \n. Changed to onNothingToLoad(), is it good enough? do you have any suggestions?\n. Done\n. Done\n. ",
    "munsuri": "@mikepenz thanks for pointing that out. I thought I could get away with some tweaks to support API 10 but there are many other things \"breaking\".\nDo you have any suggestion or recommendation for Lists that support API level 10?\n. ",
    "shehabic-work": "@FabianTerhorst does this check if the footer adapter is empty or not before calling? cause that's the work-around I created in my app, while keeping track of the currentPage in another place.\n. ",
    "RedMillLtd": "Thank you very much for the quick response.  It might be nice to have in the future.\n. ",
    "Demuss": "After 2 day research I found  1 line of code is missing from styles-v22 I think so\nxml\n<item name=\"windowActionModeOverlay\">true</item>\nvalues above are from styles-v19, so it works on kitkat, but lollipop not. It's my mistake.\nThank you, your libs are fantastic, I use nearly all of them. you do great things.\n. Oh my bad it dosn't work with android.support.v7.widget.CardView layout \n. Yeah I found. It doesn't work with CardView layout so I added child(LinearLayout) for CardView\nbefore \nint color_int = UIUtils.getThemeColorFromAttrOrRes(ctx, R.attr.material_drawer_selected, R.color.material_drawer_selected);\n        Drawable d = FastAdapterUIUtils.getSelectableBackground(ctx, color_int, true);\n        UIUtils.setBackground(viewHolder.cardView, d);\nafter\nint color_int = UIUtils.getThemeColorFromAttrOrRes(ctx, R.attr.material_drawer_selected, R.color.material_drawer_selected);\n        Drawable d = FastAdapterUIUtils.getSelectableBackground(ctx, color_int, true);\n        UIUtils.setBackground(viewHolder.linearChildLayout, d);\nand now it works fine\n. version 2.1.0 and yeah I use materialDrawer 5.6.0\nWhen change back to 1.8.0 everything works fine.\n. Thank you, didn't notice when viewed guide. I'll try it later\n. ",
    "MFlisar": "All levels should be expandable...\nFlat list with padding is no problem, you're right. But I would like to have an expandable solution, where each level can be expanded and collapsed...\nCan be done by dynamically adding and removing items + custom padding... Still, wanted to know if this works somehow with your library...\n. I tried loading the levels step by step (asynchronously, from top down). Maybe that's why I could not get it working...\nI'll recheck that\n. I already saw it... I may have made another thing wrong in my first try... Have it working already. Thanks\n. I'll check the generic adapter, looks like I can use it for my use case and that it solves the problem.\nAnd I actually meant the AbstractItem, just mixed the IItem with it, because the adapter in my dialog is working with IItems...\n. So this is the preferred method:\nint pos = fastAdapter.getAdapterPosition(item); // new item, same identifier!\nfastAdapter.set(pos, item);\nWill this update the position with the new data?\n. Question answered, thanks\n. I'll make an example for you tomorrow. Thanks for looking into it\n. Here's the example:\nhttps://github.com/MFlisar/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/ExpandableMultiselectSampleActivity.java\nYou can use my repo directly, it can be compiled and I added the new activity to the main activity and you can start it via the drawer\nBug\nExpand the \"Test 1\" row, then select 1 to n sub items of \"Test 1\". Click delete. Until now, everything is fine. Now collapse the \"Test 1\" row again and you will see that \"Test 2\" until \"Test [2+n]\" are gone after collapsing. If you then expand the \"Test 1\" row again, you will see that \"-- Test 1\" until \"-- Test [n]\" are there again and selected...\n. I would write the algorithm to search for the correct item and remove it from it's parent. One question though - is it enough to remove the item from the parent items sub list and then call notifyAdapterItemRemoved on the adapter? Or is there some other special handling of those temporary items necessary? Looks like it is that easy from your description.\nPerformance wise I would do following:\n- sort the selected indizes descending\n- for each selected item search for the parent - if you find it remove ALL selected children (easy, because selectionindizes are sorted). Parent will be searched based on the highest selected index, looking upwards until the parent is found\nI could than make a pull request for it as well, still, where would you like to have this? Maybe in a SubItemUtility class or so?\n. So the utility class needs to take care of following:\n- notifyAdapterSubItemsChanged only works for first level children, correctly?\n- what must happen for sub sub items? notifyAdapterItemRemoved with the total index is fine, isn't it? I won't use sub sub items for now, but I would like to repect them as well\n. So far, it looks quite good already.\nI will allow to notify the parent in the utility class automatically, so that it can update the count (if it is displaying the count of sub items). I experienced, that calling notifyAdapterItemChanged (I call this on the parent only) will collapse it. Is that really necessary?\nI solve that with following:\nexpanded = ((IExpandable)parent).isExpanded();\nadapter.notifyAdapterItemChanged(parentIndex);\n// expand the item again if it was expanded before calling notifyAdapterItemChanged\nif (expanded)\n    adapter.expand(parentIndex);\nThough shouldn't this be the default behaviour?\n. Another problem with multi selection is that if you collapse an item and expand it again, the selection is lost...\nI am handling the expand/collapse action manually anyways, so I just disable collapsing when you are in the selection mode for now. I am not sure, where this thing should be handled if I don't disallow collapsing.\nI had following idea, the utility class could help remembering selected items of collapsed items, but this looks not really beautiful to me. But because you are handling sub items as temporary items, maybe this is the best solution? This will only work if you collapse/expand items manually of course, as you have to handle these events in the utility to add/remove selected sub items ids correctly to a helper class...\nAny other ideas?\n. I have a working example with expandable headers + multi selection. As soon as I activate the id based state management and start my app, instead of showing all items expanded they are shown collapsed. Expanding the first item and collapsing it again removes all other headers...\nI will add an example to demonstrate this feature (multi selection + expandable items + deletion of items). It's working fine so far. And upload it to my fork.\nMaybe you can check what's the problem with the id based state management then? Or do you have an idea straight away?\nPS: additionally I've added a RangeSelectorHelper. It will take care of selecting a range of items via long pressing the first and the last item (QuickPic has this for example). It's a nice feature an can be easily activated with the helper...\n. An example is online, it shows multi selection + expandable items + deletions + range selection via long pressing first/last item of range. All with position based statement manager. It's working so far.\nYou can test it, it's here:\nhttps://github.com/MFlisar/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/ExpandableMultiselectDeleteSampleActivity.java\nAs soon as you enable the id based state management, it breaks. Just uncomment line 60 to test it.\n. There is another problem I'm currently investigating. So wait until I have described this problem here.\n. I disabled notifyParent for now (as the bug has something to to with expanding items and this function will expand headers, so I wanted to make the reproduction example as simple as possible) and added some debugging logs, they show which items my algorithm deleted. And you see, that the algorihm is working fine. Still there is a bug.\nBug description\nIn some cases it happens, that expanding a header shows wrong (double) items.\nBug reproduction - finally I found a simple reproduction\nStart the demo and do following:\n- select all 5 sub items of \"Test1\"\n- delete them\n- collapse item \"Test 3\" => this results in expanding the item and suddenly it has all it's sub items twice\n- collapsing \"Test 3\" again only removes half of the items...\nIgnore the deleteSelectedTEST function... I tried a few other methods to solve the problem but none really worked, I think it's something in the adapter... (especially handling sub items notifications seperately and similar)\nInfo\n- my function calls notifyAdapterSubItemsChanged after EVERY update of a parents sub items (sub items are deleted directly from the parents sub items list before calling this)\n- items without a parent are deleted via the adapter.remove(pos) function\nI think that's correct so far...\n. I shortly tried it in my app, seems to work, thanks. I'll test it a little more though...\nOne thing though, being forced to use adapter.expand() is somehow weird as long as the withIsExpanded(true) is possible. It should be possible to implement the same logic in the setList, setNewList, add functions of the adapter, shouldn't it? I think both cases should behave the same...\n. ID based state management\nYou said, the adapter should remember selections if we use the id based state management, it does not work in the example...\nI've already submitted my changes to my fork...\n. I am. The example shows it. I'll check it though and check why this happens. Could it be that the items themself save the selection? The example shows, that when I select items and deselect them again, that if I debug it and check the state at this position https://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L407, the mSelection is always empty...\nProblem that I found while testing\nIn my own project I have another problem, my items use their database id as identifier, so I thought I make headers, that start at -1 and decrease the count... I now found out, this breaks your internal logic, because -1 is consider as no id... Any reason for this? Identiefier could be a Long instead of long and no id could be null...\nMy solution is to start with -2 now instead, still, not very intuitive I think. but working. Is that ok like that? Or may there be places where you check for i < 0 instead of i == -1?\n. PS: I think I'm right, you save the selection in the items if the id based state management is used:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L818\n. Ok thanks.\nOnly idea I have so far about sub items and selection is, that the parent could remember which of it's children are selected as an alternative (would even work for both state managements)...\nConsidering the id, I'm not sure how save MAX_LONG - headerCount would be, the database may create such ids one day as well (although it's VERY unlikely...)\n. I'm not talking about having max long items, just the unique id may get there because of constant deletions and additions which will create a new unique id... Not sure what the database will do if it reaches max long, it should not start at 1 again, as relations may still point to this old id... But that's not a problem with this library..\nI think it actually should be save to create the ids for the headers as you suggested\n. I think there is something else to consider: you can't handle the indizes for the collapsed items in index based selection functions like the one mentionied by me before:\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L818\nGetting selected items works with a recursive function though...\nso Set<Integer> getSelections() returns only existing indizes, while Set<Item> getSelectedItems() returns collapsed selected items as well? Maybe adding a function like Set<Item> getSelectedItems(boolean includingCollapsed) ? Still this gets very confusing...\n. Problems I see\n- you can't offer a Set<Integer> getSelections() function that returns valid indizes AND contains all selected sub items (as sub items are temporary and collapsed sub items are not in the adapter)\n- functions are deciding what to do based on Set<Integer> getSelections(), like the ActionModeHelper. This means, if you have selected sub items you not want to close the ActionMode for example (but the set of indizes can't contain collapsed selected items)\n- if you delete a selected item, you have to check if it is in the adapter (it may be a collapsed item, so you always have to check the items position against -1 before working with the item on the adapter)\nJust a few thoughts... Maybe there are more things to think of?\n. The recursive function is here if you want to test something, I've already tried it:\n```\npublic Set getSelectedItems(boolean includingCollapsed) {\n    if (!includingCollapsed)\n        return getSelectedItems();\nSet<Item> selections = new HashSet<>();\nint length = getItemCount();\nList<Item> items = new ArrayList<>();\nfor (int i = 0; i < length; i++)\n    items.add(getItem(i));\nupdateSelectedItemsWithCollapsed(selections, items);\nreturn selections;\n\n}\nprivate void updateSelectedItemsWithCollapsed(Set selected, List items) {\n    int length = items.size();\n    for (int i = 0; i < length; i++) {\n        if (items.get(i).isSelected()) {\n            selected.add(items.get(i));\n        }\n        if (items.get(i) instanceof IExpandable && ((IExpandable)items.get(i)).getSubItems() != null)\n            updateSelectedItemsWithCollapsed(selected, ((IExpandable)items.get(i)).getSubItems());\n    }\n}\n``\n. **Further problems**\n- MySubItemUtil` tries to get an items parent with the help of the adapter. This is already slow... But if I don't know, that the parent is in the adapter somewhere above the item, I must search for the parent from upside down, which means I have to search through every top item, check it's children and check the children recursively until I find my item, otherwise I can't find an items parent... Can be optimised, but still it's a little problem...\nAlternatively, disabling collapsing items with selected sub items would be a \"solution\" as well... Although not the perfect one. But all dependent functions will work just as they are...\n. I wanted to suggest the two way linking as well, there is no other way to make the slow search functions in the SubItemsUtil faster. This will make most of them as fast as O(1)...\nSo I would suggest following:\n- SubItemsUtil gets a getSelectedItems(adapter) function, that returns a Set of selected items, including all sub items, independent of recursion depth (there won't be a function to get indizes, the one from the adapter will stay the only one and will return visible indizes only)\n- a new ISubItem interface is added to the core\n- SubItemsUtil will only work with items that implement ISubItem and/or IExpandable\n- I suggest, SubItemsUtil ignores items that do not implement ISubItem and/or IExpandable (if you have to care about such items, the functions get slow again, as you have to search for this items manually again)\nI would suggest following interface:\n```\npublic interface ISubItem>\n{\n    S getParent();\n// I would NOT add this, level can be easily calculated via traversing the parents and counting them\nint getLevel();\n\n}\n```\nIf you don't have any objections, I would make it like that and make the necessary changes...\n. If we change the IExpandable interface, that's a breaking change though... It's fine for me though and has the positive side effect, that I can be sure that sub items are ISubItems which makes everything safer... But people who use IExpandable already must adopt their items to link them with their parent. But I think it's worth it too.\nThen I'll start with the adoptions ;-)\nI will adopt the example afterwards and update my fork and inform you here...\n. I think if you allow to collapse headers with selected sub items, it makes sense (from a user point of view) to show the selection count of sub items on the parent. Therefore I think it makes sense that the core adapter offers a possibility to listen to selection changes via a interface like:\npublic interface ISelectionListener {\n    /**\n     * is called, whenever the provided item is selected or deselected\n     *\n     * @param item the item who's selection state changed\n     * param selected the new selection state of the item\n     */\n    void onSelectionChanged(IItem item, boolean selected);\n}\nWhat do you think about that? This may be useful for other cases as well and is a very small change with no side effects.\nExample usage\nI have made a simple HeaderItem for the demo app that displays it's selected children count and would like to add something simple as following:\nfastItemAdapter.withSelectionListener(new ISelectionListener() {\n    @Override\n    public void onSelectionChanged(IItem item, boolean selected) {\n        if (item instanceof SampleItem) {\n            IItem headerItem = ((SampleItem)item).getParent();\n            boolean expanded = ((IExpandable)headerItem).isExpanded();\n            int pos = fastItemAdapter.getAdapterPosition(headerItem);\n            // notify header, so that it can update the count of it's selected items on the view\n            fastItemAdapter.notifyAdapterItemChanged(pos);\n            if (expanded)\n                fastItemAdapter.expand(pos);\n        }\n    }\n});\n. Ok.\nI tried following to update the parent of an expanded item:\nboolean expanded = ((IExpandable)headerItem).isExpanded();\nint pos = fastItemAdapter.getAdapterPosition(headerItem);\nfastItemAdapter.notifyAdapterItemChanged(pos);\nif (expanded)\n    fastItemAdapter.expand(pos, true);\nThis leads to all sub items losing their selection state on the view. Any (spontanous) idea why? I thought notifying the the sub items via the true in the fastItemAdapter.expand(pos, true); should do the trick...\n. EDIT\nFollowing works as it bypasses the FastAdapter's internal functions:\nfastItemAdapter.withSelectionListener(new ISelectionListener() {\n        @Override\n        public void onSelectionChanged(IItem item, boolean selected) {\n            if (item instanceof SampleItem) {\n                IItem headerItem = ((SampleItem)item).getParent();\n                int pos = fastItemAdapter.getAdapterPosition(headerItem);\n                fastItemAdapter.notifyItemChanged(pos);\n            }\n        }\n    });\nFor this use case, that's actually fine, as I really just want to update the view and am sure, that nothing else should be done...\n. You said, you will look over it and make some improvements in the core anyways, so the state is following:\n- ISelectionListener is called in a handful of places, currently it may be called multiple times => select/deselect functions would need an additional parameter boolean notifyListener for this I would say.\n- The SubItemUtils have one place, where they work with a FastItemAdapter and not with a plain FastAdapter. I have not worked with wrapped adapters yet, so I'm not sure how this should be changed: https://github.com/MFlisar/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/utilities/SubItemUtils.java#L202. This should be adopted... And afterwards the unsafe cast here https://github.com/MFlisar/FastAdapter/blob/develop/library-extensions/src/main/java/com/mikepenz/fastadapter_extensions/ActionModeHelper.java#L190 should be removed\nThat's it so far, I would say, the example is online and working\n. One important thing I just stumbled over in my app is following:\nWhenever you update (in the sense of replace them with a new item) an item in your adapter, you must update parent/children as well. I for example load items in an empty state, display them, then I finish loading them and then I replace the old items with the fully loaded ones.\nThis brings up the question: shouldn't items that implement IIdentifyable overwrite hashCode and equals so that those are handled as equal in all functions? I'm not sure if something in this direction makes sense... \nEdit this does not solve the problem, so nevermind... You have to copy the selected state to the new items/sub items in such a case... Or only update the wrapped data in the item\n. I'll make a PR soon, have to still do a small change...\n. If I do this and combine the code from the library above with yours, how would I correctly give the credit? The custom RecyclerView would be a copy from there.\nI think it could be beautified though so that it is implemented via composition instead of inheritance so that it can be used in any RecyclerView view class...\nI would try it anyway soon.\n. Combining means double the code for selection... Maybe forking the project (it seems like he is not maintaining it anymore) and adjust what needs to be adjusted and throw out what is not needed is good as well?\nThen I could just add a dependnecy to your project and do the rest in my forked project...\n. Here's my solution for this, it can be found here:\nhttps://github.com/MFlisar/DragSelectRecyclerView\nMay be interesting for others as well.... @Rainer-Lang \nIt's quite simple, I'll add an example (probably with FastAdapter) today or tomorrow... I am just finishing the library currently anyways.... @mikepenz\nI just extended the ExpandableMultiselectDeleteSampleActivity, it now uses the swipe selection feature as well... It's part of my pull request...\n@Rainer-Lang\nDemo is part of my pull request https://github.com/mikepenz/FastAdapter/pull/324, all you need to look at is this commit: https://github.com/mikepenz/FastAdapter/pull/324/commits/791d52ab4afedde17601cd2f77db17751173aa5a\nAs you can see, there are only 2 thinks you have to do:\n create the touch listener and attach it to the RecyclerView\n start the drag selection in the OnLongClickListener like in the sample. I have used expandable headers and wrap them manually... So I create a List<IItem> manually, with all headers in it. Currently I disabled expandable for all headers, so all items are shown always... Maybe the above function would even need to be adjusted to traverse all sub items for the collapsed state? Have not tried it yet...\nIn the end I will allow to have nested headers as well, still I only want to show the number of real items in the toolbar...\n. There is another problem. They way you use it, the helper changes selection mode from long click to single click as soon as one item is selected. That's fine. \nI encounter the problem, that afterwards the clicks are not consumed and are propagated to my own click listener. In my case the item click opens the next view which is not what I want.\nTherefore I additionally have to change following:\nmFastAdapter.withOnPreClickListener(new FastAdapter.OnClickListener<IItem>() {\n        @Override\n        public boolean onClick(View v, IAdapter<IItem> adapter, IItem item, int position) {\n            //we handle the default onClick behavior for the actionMode. This will return null if it didn't do anything and you can handle a normal onClick\n            Boolean res = mActionModeHelper.onClick(item);\n            boolean result = res != null ? res : false;\n            return result;\n        }\n    });\nTo following:\nmFastAdapter.withOnPreClickListener(new FastAdapter.OnClickListener<IItem>() {\n    @Override\n    public boolean onClick(View v, IAdapter<IItem> adapter, IItem item, int position) {\n        boolean result = false;\n        {\n            if (mFastAdapter.getSelectedItems().size() > 0)\n            {\n                if (mFastAdapter.isIndexSelectable(position))\n                {\n                    mFastAdapter.toggleSelection(position);\n                    mActionModeHelper.checkActionMode(activity);\n                    result = true;\n                }\n            }\n        }\n        return result;\n    }\n});\n. So all in all I think using the helper in the OnClickListener makes more sense. Because it should consume clicks when the action mode is active...\nPS: additionally, using the action helpers onClick in onPreClick is confusing...\n. PPS: additionally I suggest adding the functionality to show the selection count in the action mode (which additionally results in another feature, a function to get the count of selectable items)\n. I'll make a PR for it, have it already working...\nStill, I need another thing then. If I hook into the onPreClick with the ActionModeHelper, it makes sure to finish the ActionMode, that is fine. But additionally, the ActionModeHelper needs to take care to comsume all clicks as long as those will result in a selection.\nI could not get this working without the change I posted above.\n. No I mean any click listener should not be called if the click does select/deselect an item...\nI have now following solution that works:\n1) check action mode in onClickListener - this works as long as you don't unselect the last item\nmFastAdapter.withOnClickListener(new FastAdapter.OnClickListener<IItem>() {\n        @Override\n        public boolean onClick(View v, IAdapter<IItem> adapter, IItem item, int position) {\n            // if the action mode is active, it will handle the clicks itself!\n            if (mActionModeHelper.getActionMode() == null)\n                onItemClick(v, adapter, item, position);\n            return false;\n        }\n    });\n2) consume the click in onPreClick if you deselect the last item\nmFastAdapter.withOnPreClickListener(new FastAdapter.OnClickListener<IItem>() {\n        @Override\n        public boolean onClick(View v, IAdapter<IItem> adapter, IItem item, int position) {\n            //we handle the default onClick behavior for the actionMode. This will return null if it didn't do anything and you can handle a normal onClick\n            Boolean res = mActionModeHelper.onClick((AppCompatActivity) mController.getActivity(), item);\n            // if the action mode helper will remove the action mode, we consume the click\n            // we don't want the click listener to be fired in this case\n            // res will false in this case\n            if (res != null && !res)\n                return true;\n            return res != null ? res : false;\n        }\n    });\nQuestion\nWhy don't you consume the click in the ActionModeHelper.onClick and return true instead of false? Any reason for that? Or can I change that to return true?\n. I've already made a PR, still some additional needs for my usecase came up.\nQuestion2\nI use view based layouts with a single activity (maybe you know the library conductor) and I therefore have objects that most of the time survive screen rotations adn similar. As the ActionModeHelper will as well. This means, when the view is detached, I want to finish the ActionMode (to avoid leaking the activity) and when it is attached I call checkActionMode (with the new activity). For this szenerio I need to deactivate the automatic deselection in the helper.\nI'm not sure how common this is, but for this I would like to add following:\npublic ActionModeHelper withAutoDeselect(boolean enabled) {\n    this.mAutoDeselect = enabled;\n    return this;\n}\nWould this method be something you accept in your library?\n. In my case it's more a setter and would be used only here:\n@Override\nprotected void onDetach(View view)\n{\n    super.onDetach(view);\n    if (mActionModeHelper.isActive())\n    {\n        mActionModeHelper.withAutoDeselect(false);\n        mActionModeHelper.getActionMode().finish();\n    }\n}\nAnd after rotation I do following to restore the state:\n@Override\nprotected void onAttach(View view)\n{\n    super.onAttach(view);\n    updateViewsLoadedState();\n    mActionModeHelper.checkActionMode((AppCompatActivity) mController.getActivity());\n    mActionModeHelper.withAutoDeselect(true);\n}\nOnly views have been recreated in my case...\n. I make it more clear with a real example:\nI have a class that manages data loading and this class is notified about lifecycle events of the corresponidng view or activity. The class starts loading data asynchronously in constructor and already creates an instance of a FastAdapter and then there are following two bigger possible cases:\n1) the data is ready, then it is set to the FastAdapter instance and then the lifecycle onCreate event occurs, passes the bundle to my class and I pass it on to the FastAdapter - here everything works as expected.\n2) the lifecycle event onCreate occurs and passes the bundle to my class, my class has a instance of the FastAdapter but this adapter does not have items yet (so the bundle is not used), then some time later, the data finished loading and is set to the adapter - the bundle is lost.\nBecause of doing data loading asynchronous, there is no guarantee on when the data is available. I'm sure, I get the same data as I had the last time, so I'm sure I want to restore selection state for example.\nHow would you solve that? I only see the possibility to save the bundle (or at least the adapters saved state in the bundle) and pass it to the adpater after the data is ready.\n. Ok - still I don't understand why the adapter cannot extract the data from the bundle (like selected indizes) and use this data after the first setItems call... (or similar if you see a problem with that)\n. Imho, this way of data loading should be a common use case ;-)\nBut I understand you and it's fine, was just a suggestion...\n. I don't want to create a extra issue for this:\nYou use the names library and library-extensions for your project and the library-extensions references the library project. Could you rename your project to some more unique names? Currently I have to use the same names in my project if don't change the references manually as well - I don't want to touch this code, because then I have to think about it again when pushing it back into the github repo.\nNames like fastadpter-library and fastadapter-library-extensions would be better. I'm just talking about the project names. I don't want to use\ncompile project(':library')\ncompile project(':library-extensions')\nin my projects and this may confilct with a private library project as well ;-). Or some other libraries if all use this namings...\n. I had removed the onClick without the activity because without it, the checkActionMode that will be called from the onClick may not work. In the sample this is no problem, because the long press will start the action mode and the onClick will only end it or change the selection count when the ActionMode is active. If you allow to select items with a single click, you have to pass the activity, otherwise it won't work.\n. @FabianTerhorst \nDone ;-) I personally really dislike this format, but I tried to fulfill it in my changes, just oversaw some places...\n. I had another problem, some buggy optimisation, so that the adapter update was not called if the LayoutManager did not change it's type... That's why I deleted my comments.\nIt's working now, notifyAdapterDataSetChanged is enough. I shortly checked the code and saw it is not directly resetting nor updating the map, but at some place this must happen (maybe when it tries to check the map with the new type id and does not find it, it adds it to the map? Did not search further...). Adapter draws the correct layouts after calling notifyAdapterDataSetChanged like following:\nrv.setAdapter(null);\nrv.setLayoutManager(null);\nrv.setLayoutManager(...);\n// change settings, so that adapter will return new layouts and type ids...\nrv.setAdapter(fastAdapter);\nfastAdapter.notifyDataSetchanged();\n. After adding headers and more item types to my adapter, I see, that I do need to remap everything. I'll add the function for it to my pull request when I'll make one again... There is no function for this currently, correct?\n. See the code here (I added those 3 funtions for easy access), it's a total of 5 lines and explains itself ;-)\nhttps://github.com/MFlisar/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/FastItemAdapter.java#L289\nhttps://github.com/MFlisar/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/adapters/ItemAdapter.java#L405\nhttps://github.com/MFlisar/FastAdapter/blob/develop/library/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L393\n. Because the type changes as well. New type + new layout id will lead to the problem, that the new type is not mapped yet (item returns a new type, but when it was registered, it returned a different (old) type)...\nMy item code looks like following:\n```\n@Override\npublic int getType()\n{\n    // return unique type, depending on currently selected layout by the user\n}\n@Override\npublic int getLayoutRes()\n{\n    int layout = -1;\n    switch (getType())\n    {\n        // correctly map the type to the corresponding layout\n    }\n    return layout;\n}\n```\nNow that you say it, maybe it would be better to use one single type and use another variable to select which layout to use? Remapping helps at least...\n. In the meantime, I understand the handling of sub items, but it would be a good idea to add this to the readme. It's not clear, that sub items are temp. items and that they are not fully supported.\nAdditionally, to get full working sub items and a full working SubItemUtil, it's necessary to use the id based state management (would be good for the readme as well)\nLet me know if you have questions or want some changes...\n. @FabianTerhorst \nthe problem is the full generic AbstractItem interface. If inherited classes don't override functions (like withIdentifier for example), the chaining returns an Item extends AbstractItem<?, ?> instead of the real class which breaks chaining - you can't call functions from the real item anymore...\nEither you cast after such calls or you override the functions and just call super or you break the chain...\nImho, the AbstractItem should not be that generic, it may make sense to improve that...\nFor the example item, the problem can be solved by adding following:\n@Override\npublic SampleItem withIdentifier(long identifier) {\n    return super.withIdentifier(identifier);\n}\nOnly afterwards you can chain the withIdentifier call and it will return a SampleItem instead of an AbstractItem<?, ?>... I just chose the first solution that came to my mind...\n@mikepenz \nI'll do that. I have just tried the normal extensions and app\n. Yes, I am\n. Ok. Then still, a custom onLongClickListener should NOT clear a true flag just because the custom onLongClickListener does not consume the event and return false... This breaks working code (as it will return true without a custom onLongClickListener and false otherwise). If you want I add the example to the pull request that shows you the problem...\n. I need the order of selected items. I can't just sort the set as the data for sorting is missing (the order in which the user selected the items)\n. You're right, the SelectionListener could be used for this as soon as it's working correctly\n. I think about following change:\n```\nprivate Set mSelections;\npublic FastAdapter() {\n    this(false);\n}\npublic FastAdapter(boolean rememberSelectionOrder) {\n    setHasStableIds(true);\n    if (rememberSelectionOrder)\n       mSelections = new LinkedHashSet();\n    else\n       mSelection = new TreeSet();\n}\n```\nWhat does actually speak against this from your point of view? I think managing the selection twice is not optimal...\nChanges\nmSelections is a TreeSet or a LinkedHashSet (currently it's always a TreeSet).\n. Do you think a small reusable helper class for this functions make sense?\nA custom selection listener that is able to save/restore it's state in a bundle and that internally just remembers the selection order?\nOr do you think this is just a rare case and that it should stay a (my) user class?\n. That was my suggestion anyways in the beginning... I now did following:\npublic class RememberSelectionOrderSelectionListener<T extends IItem> implements ISelectionListener<T>\n{\n    private static final String BUNDLE_SELECTIONS = \"bundle_ordered_selections\";\n\n    private LinkedHashSet<Long> mSelectedIds;\n\n    public RememberSelectionOrderSelectionListener()\n    {\n        mSelectedIds = new LinkedHashSet<>();\n    }\n\n    @Override\n    public void onSelectionChanged(T item, boolean selected)\n    {\n        if (selected)\n            mSelectedIds.add(item.getIdentifier());\n        else\n            mSelectedIds.remove(item.getIdentifier());\n    }\n\n    public Set<Long> getSelection()\n    {\n        return mSelectedIds;\n    }\n\n    public Bundle saveInstanceState(Bundle savedInstanceState) {\n        return saveInstanceState(savedInstanceState, \"\");\n    }\n\n    public Bundle saveInstanceState(Bundle savedInstanceState, String prefix) {\n        if (savedInstanceState != null)\n            savedInstanceState.putSerializable(BUNDLE_SELECTIONS + prefix, mSelectedIds);\n        return savedInstanceState;\n    }\n\n    public RememberSelectionOrderSelectionListener<T> withSavedInstanceState(Bundle savedInstanceState) {\n        return withSavedInstanceState(savedInstanceState, \"\");\n    }\n\n    public RememberSelectionOrderSelectionListener<T> withSavedInstanceState(Bundle savedInstanceState, String prefix) {\n        if (savedInstanceState != null && savedInstanceState.containsKey(BUNDLE_SELECTIONS + prefix))\n            mSelectedIds = (LinkedHashSet<Long>)savedInstanceState.getSerializable(BUNDLE_SELECTIONS + prefix);\n        return this;\n    }\n}\n\nAnd just append this listener and use it...\nBut I would still be happy with the ability to decide myself, if I take the cost of having a LinkedHashSet directly in your adapter...\n. The change in my example was made to show, that it is not necessary to always consume the event (and it does not make sense imho).\nIf you remember, my example was handling the header long press as well => this would not work without the change, as your recent changes now make sure, that the long press handler is not called, if the pre long press handler consumes the event (before the recent changes, this was not a problem, because the long press could be handled by both handlers)\n. The name is my problem as well... If I split it up, I don't know a good name anymore... Custom was my idea because of the custom drag initiator...\nBut having the 3 ideas, I would choose one of the two ICustomDraggable or IExtendedDraggable... The other one sounds really weird...\n. Already done ;-)\n. I've not used LiveData yet, I always work with MVI, Rx and DiffUtils. So I can't help you here... But somewhere you must define your items and they must be created as well somewhere.... I'm using both libraries and include the latest released versions there... I'm excluding the FastAdapter (and all other dependencies of your libraries) everywhere though:\n```\ncompile('com.mikepenz:aboutlibraries:5.8.1@aar') {\n    transitive = true\n    exclude group: 'com.mikepenz'\n}\ncompile('com.mikepenz:materialdrawer:5.6.0@aar') {\n    exclude group: 'com.mikepenz'\n    transitive = true\n}\n// here I add the FastAdapter library\ncompile project(':library')\ncompile project(':library-extensions')\n// and others that I need, iconics, itemanimators...\n``\n. The crash happens in a direct usage of theFastAdapter` though not somewhere in a dependency... But this probably is the problem...\nThanks\n. @Rainer-Lang \nYou can always use jitpack.\nLooks like following for the drawer for example:\n```\nallprojects {\n    repositories {\n        maven { url \"https://jitpack.io\" }\n    }\n}\ncompile('com.github.mikepenz:MaterialDrawer:develop-SNAPSHOT') {\n    exclude group: 'com.mikepenz'\n    transitive = true\n}\n``\n. I tried setting the listener once only in the constructor of theViewHolder` ;-)\nI would not have looked for something like the hooks and it's unclear for me, why the manual setter in the ViewHolders constructor is not working (I would still prefer this actually).\nI'll try the TouchEventHook though.\nQuestions\n- Can I safely reuse one TouchEventHook for different item types?\n- I need to reset my views in unbindView and it's not very beautiful if I can add a TouchEventHook but can only reset a view in the Item, I think the hook should be notified about the unbinding as well (so that I can keep the responsibility of my touch logic in one class)\n. I'm doing that already and seems to work fine.\nWhat do you say to my second question about the unbindView? Or does the \"good idea\" belong to this point?\n. @FabianTerhorst \ngenerally I don't know which Item you mean??? I can use com.mikepenz.fastadapter.IItem and then cast whenever I need to. Because then I have to either define two local variables like:\nList<IItem> items;\nIItem item;\nitems = header.getSubItems();\nitem = items.get(i);\n\nor I have to cast again like:\nIItem item;\nitem = (IItem)header.getSubItems().get(i);\n\nAnd the cast was your problem and I just removed it. I would normally do the second thing, but as we are talking about micro optimisations and personal preferences, I just applied your preferences as desired...\nI'll now submit a version with second solution, as it is the better solution and a cast should not be a problem...\n. Sorry, but this seems nitpicky to me. I'm fulfilling the code style and providing my solution, so that everyone can use it. It may not be perfect (but which code is this?), but it's working.\nI'm not here to commit perfect code, but working code (I'm applying the code style, that's ok for me). The functions I've added are not yet existing in the library, so adding it is always an improvement imho. Optimisations can be done by anyone who knows it better, everyone can take my code and improve it and make a pull request afterwards...\nBtw, I still don't know what's your problem with the IExtendable or where I should remove it (I don't see a place where this does not result in extra necessary casts)... Seems like what you want takes 10s but explaining it to me takes 20 times that much.... I will check the changes of course...\n@FabianTerhorst \nI can't create a branch on someone else's repo, can I? I just saw that there is a checkbox on the right \"Allow edits from maintainers. \", this should do it as well for the future, shouldn't it?. This https://github.com/blog/1377-create-and-delete-branches does not work for me in this repository...\nI've enabled \"Allow edits from maintainers. \", this should allow to edit my branch as well.... EDIT\nSeems I was wrong, calling notifyAdapterItemChanged does collapse the header.\nHere's a code example that brings up some questions\nFollowing works, if I want to add a sub item to a header:\nint displayedHeaderIndex = fastAdapter.getAdapterPosition(header);\nheader.addSubItem(relSubItemIndex, itemToAdd);\nif (header.isExpanded())\n{\n    fastAdapter.notifyAdapterSubItemsChanged(displayedHeaderIndex, header.getSubItems().size() - 1);\n    fastAdapter.notifyAdapterItemChanged(displayedHeaderIndex);\n    fastAdapter.expand(displayedHeaderIndex);\n}\nelse\n    fastAdapter.notifyAdapterItemChanged(displayedHeaderIndex);\n\nQuestion\nhttps://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1679 will update mExpanded, but the function I use (https://github.com/mikepenz/FastAdapter/blob/develop/library-core/src/main/java/com/mikepenz/fastadapter/FastAdapter.java#L1706) with my ID based position state management does NOT update. Is this intended?. Thanks for the clarification. Sure, I anyways only touched the utility class...\nAnd the Drag Selection is anyways an external library as it works without your adapter as well of course. It's up to you though if you want to add my demo with it as well...\n. The last 2 commits are only one single change: fastAdapter.deselect() will check, if an item is checked and only unchecks them if they are checked. Problem with the old solution was, that for example the ActionModeHelper may call deselect() if you finish the ActionMode and this will iterate over all items and then notify a selection listener (if there is one) and this may be a lot of unnecessary (and wrong) work. That's probably true for any user initialised event. But many functions that update the adapter do automatically collapse headers for example which must be considered as well.... The easiest and fastest fix would be to extend the expand() function with a parameter like \"force expand\" which will disable the \"is item expanded\" check...\nAlternatively, the builder could be extended with a withResetState() function, which will reset each items state to collapsed (as the adapter will render any item as collapsed after setting it's items, not respecting any items expanded state).\nThe most beautiful solution is more work and if I remember correctly, there are points speaking against it (speed and other side effects, but currently I don't remember): when setting items of the adapter, this should always respect the expanded state of each item automatically.\nAs I'm already used to the \"always expand items manually\" usage, I would be fine with the first two options.\nFor now, I just iterate over all items and set their state to collapsed and then call fastAdapter.expand().... I still think the logic for sub items produces a lot of inconsistencies with a lot of special treatments necessary. They are no big problem at all, but they are nearly impossible to guess and you just avoid problems if you know all the special things you have to do. I know it would be a lot of work, but something like withSupportSubItems and then handling them correctly would be much more intuitive than what is necessary now, its just an idea though.\nAt least, the withResetState would be nice. It may only expand all items or it may do other things as well (maybe some other special things don't work as well if you retain your adapter?). At least this function would indicate to the user that some things must be reverted to a initial state after restoring the adapter...\nAnd I think with all the MVP and similar in android which is quite popular now (I'm using MVI for example) it will be quite common to retain all your data but your views and just attach your data to your new views as well.. Not for me. Solution is following:\n\nsave filter\nreset filter\nupdate list\nreset filter. Then I'll lose the filter. I want that it does not matter if the user starts filtering before the data is loaded or vice versa. Above is working though. That's what I expected, but in this case, I have to manually reset the filter as well, imho this should happen via the setNewList.... I'm not using header adapters, just a simple one with items. But I use the AccountHeader which I recently added, does this one use a HeaderAdapter?\n\nAnd does this explain the issue, even if my code is working in most cases? Got only two crashes of that kind yet and it's working fine on my phone.... Then I have to check how HeaderAdapter works, have skipped this thing until now and used only my own defined headers yet. With my headers I meant groups... Now I see what your headers are, I thought of something else. They are anyway something different. And your explainations made it clear now. Thanks. I think the naming is not very good, but I got it working now. Additionally I wrote following base class for myself, I think this will help others to understand the event hooks a little easier.\nExtended base class\npublic abstract class BaseCustomEventHook<T extends IItem> extends CustomEventHook<T> {\n\n    // -------------------------\n    // Interface\n    // -------------------------\n\n    /*\n     * return true, if the provided viewHolder is interested in this event hook\n     */\n    public abstract boolean shouldEventHookBeUsed(RecyclerView.ViewHolder viewHolder);\n\n    /*\n     * return the view of the viewHolder the event hook corresponds to\n     */\n    public abstract View getEventHookView(@NonNull RecyclerView.ViewHolder viewHolder);\n\n    /*\n     * bind the desired event hook listener to the view\n     * use it like following:\n     * view.setOnClickListener(view -> { onHandleCustomEvent(...); });\n     */\n    public abstract void bindListener(View view, RecyclerView.ViewHolder viewHolder, FastAdapter<T> fastAdapter);\n\n    public abstract void onEvent(View view, int pos, FastAdapter<T> fastAdapter, T item, RecyclerView.ViewHolder viewHolder, Object... params);\n\n    // -------------------------\n    // Helper function\n    // -------------------------\n\n    /*\n     * call this from within {@link bindListener} to tell the hook that the desired event just happened\n     */\n    protected final void onEventOccurred(View view, RecyclerView.ViewHolder viewHolder, FastAdapter<T> fastAdapter, Object... params)\n    {\n        //we get the adapterPosition from the viewHolder\n        int pos = fastAdapter.getHolderAdapterPosition(viewHolder);\n        //make sure the click was done on a valid item\n        if (pos != RecyclerView.NO_POSITION) {\n            //we update our item with the changed property\n            onEvent(view, pos, fastAdapter, fastAdapter.getItem(pos), viewHolder, params);\n        }\n    }\n\n    // -------------------------\n    // Default implementation\n    // -------------------------\n\n    @Override\n    public final void onEvent(View view, RecyclerView.ViewHolder viewHolder, FastAdapter<T> fastAdapter) {\n        bindListener(view, viewHolder, fastAdapter);\n    }\n\n    @Override\n    public final View onBind(@NonNull RecyclerView.ViewHolder viewHolder) {\n        if (shouldEventHookBeUsed(viewHolder))\n            return getEventHookView(viewHolder);\n        return null;\n    }\n\n    @Nullable\n    @Override\n    public List<View> onBindMany(@NonNull RecyclerView.ViewHolder viewHolder) {\n        // TODO...\n        return null;\n    }\n}\n\nUsage\npublic static class EnableSettingsSwitchEvent extends BaseCustomEventHook<IItem>\n{\n    @Override\n    public boolean shouldEventBeUsed(RecyclerView.ViewHolder viewHolder)\n    {\n        // Every ViewHolder should use this\n        return true;\n    }\n\n    @Override\n    public View getEventHookView(@NonNull RecyclerView.ViewHolder viewHolder)\n    {\n        // return the view of the viewHolder the event is based on\n        return ((ViewHolder) viewHolder).binding.swEnable;\n    }\n\n    @Override\n    public void bindListener(View view, RecyclerView.ViewHolder viewHolder, FastAdapter<IItem> fastAdapter)\n    {\n        // forward custom event to {@link BaseCustomEventHook#onEventOccurred}\n        ((SwitchCompatFixed)view).setOnCheckedChangeListener((v, b) -> onEventOccurred(v, viewHolder, fastAdapter, b));\n    }\n\n    @Override\n    public void onEvent(View view, int pos, FastAdapter<IItem> fastAdapter, IItem item, RecyclerView.ViewHolder viewHolder, Object... params)\n    {\n        // handle the event\n        ((SettingsItem)item).onUseCustomChanged((ViewHolder) viewHolder);\n    }\n}\n\nI don't know what the onBindMany is meant for though. But I think the above base class or some variant of it would event fit into the library . Was just an suggestion. For me the onBind does not tell me what it is expecting me to do. I miss the following informations:\n\nI need to decide which item is interested in the event hook\nI need to return a view that is the responsible view of the event\nI need to set the listener for this view\nI need to handle the event\n\nWith that in mind and with the custom event only providing a onBind method I was list. I had to check the code and find out what to do. And my extension is simplifying this, not from a method count view but from a new user view...\nStill just a suggestion nothing more...\n. You're right, a little documentation and you don't need that much methods. But I would suggest following:\n\nrename onEvent to onBindListener because with event I link the event of the hook in the sense of \"hey, the hook event occurred, react to it`\nI would like to have a method that does following for me, because I think this is a default behaviour (every default hook does use it as well)int pos = fastAdapter.getHolderAdapterPosition(viewHolder);\nif (pos != RecyclerView.NO_POSITION) {\n    onHandleEvent(view, pos, fastAdapter, fastAdapter.getItem(pos), viewHolder);\n}\n\n\nrename the onBind methods to something like getEventHookView or similar to more clearly explain what the method is expecting from me\n\n\n\nSuggestion\npublic abstract class CustomEventHook<Item extends IItem> implements EventHook<Item> {\n\n    /*\n     * the hooks event handler, will be called if the corresponding listener has fired an event for the corresponding item\n    */\n    public abstract void onEvent(View view, int pos, FastAdapter<Item> fastAdapter, IItem item, RecyclerView.ViewHolder viewHolder);\n\n    /*\n     * bind the event hook view to a listener\n    */\n    public abstract void onBindListener(View view, RecyclerView.ViewHolder viewHolder, FastAdapter<Item> fastAdapter);\n\n    /*\n     * return the view for this hook that the listener should be bound to\n     *\n     * @return null, if the provided ViewHolder should not be bound to the event hook, the view responsible for the event otherwise \n    */\n    @Nullable\n    @Override\n    public View getEventHookView(@NonNull RecyclerView.ViewHolder viewHolder) {\n        return null;\n    }\n\n    /*\n     * return the views for this hook that the listener should be bound to\n     *\n     * @return null, if the provided ViewHolder should not be bound to the event hook, the view responsible for the event otherwise \n    */\n    @Nullable\n    @Override\n    public List<View> getEventHookManyView(@NonNull RecyclerView.ViewHolder viewHolder) {\n        return null;\n    }\n\n    /*\n     * default implementation\n     */\n    protected void onEventOccurred(View view, RecyclerView.ViewHolder viewHolder, FastAdapter<T> fastAdapter)\n    {\n        //we get the adapterPosition from the viewHolder\n        int pos = fastAdapter.getHolderAdapterPosition(viewHolder);\n        //make sure the click was done on a valid item\n        if (pos != RecyclerView.NO_POSITION) {\n            //we update our item with the changed property\n            onEvent(view, pos, fastAdapter, fastAdapter.getItem(pos), viewHolder);\n        }\n    }\n}\n\nMaybe the onEventOccurred could also be placed in a utility class.... You mean getting the item is not necessary, don't you? Is there a case where it's save not to check the position against RecyclerView.NO_POSITION?. I'm always suprised when using the fast adapter in a new project and only see the problem when testing...\nWhat is unexpecting is that I have to do following:\n.withOnClickListener(new FastAdapter.OnClickListener<Item>()\n            {\n                @Override\n                public boolean onClick(View v, IAdapter<Item> adapter, Item item, int position)\n                {\n                    // THIS LINE is unexpected!\n                    if (mActionModeHelper.isActive())\n                        return true;\n\n                    onItemClick(v, adapter, item, position);\n                    return false;\n                }\n            })\n            .withOnPreClickListener(new FastAdapter.OnClickListener<Item>() {\n                @Override\n                public boolean onClick(View v, IAdapter<Item> adapter, Item item, int position) {\n                    //we handle the default onClick behavior for the actionMode. This will return null if it didn't do anything and you can handle a normal onClick\n                    Boolean res = mActionModeHelper.onClick(item);\n                    return res != null ? res : false;\n                }\n            })\n            .withOnPreLongClickListener(new FastAdapter.OnLongClickListener<Item>() {\n                @Override\n                public boolean onLongClick(View v, IAdapter<Item> adapter, Item item, int position) {\n                    ActionMode actionMode = mActionModeHelper.onLongClick((AppCompatActivity) getActivity(), position);\n                    //if we have no actionMode we do not consume the event\n                    return actionMode != null;\n                }\n            });\n\nWhat I expect is that the onPreItemClick consumes the event if the adapter is in multi selection mode, but it does not currently. \nWhat I would prefer is following:\n* `mActionModeHelper.onClick(item);` should consume the pre click event and change the selection as well internally\n* then I don't need the ` if (mActionModeHelper.isActive())` in the `onClickListener`\n\nAt least I would change the doc of the method, I would add this to my pull request. Just telling you what is confusing for me, maybe you think it should be improved as well.. Actually, I was wrong, the function does not do anything, I miss read it... It does not select items, so null is totally fine (so that's why I changed it ;-) )\nIt may be possible to consume the click and do the selection in the method though.... Updated the examples.\nAdditionally I added a method to the DragDropUtil. There's a bug in the current examples. If you scroll down a list and than start a drag and drop, move your finger to the top of the screen and let the list scroll up and then move the finger down to the list again, the itemTouchOnMove will get the top most position before the scrolling and the top position. This means, you must swap items one for one in the total range this case...\nThe utility method would do this and imho should be used in all examples instead of current swapping of from and to position.. Sure, just wanted to know if that's desired. So if you allow the user to theme your app (think about a launcher and a folder item) and the user can select between a few layouts and all layouts offer mainly the same thing (1 to n images, a label, a background, ...) and the data allows to simply call data.changeLayout(...) how would you handle that?\nCreating different items is imho too much extra work and updating the data of an item means I MUST replace the item with a new item - just because my data underneath an item has changed.\nIn this case what would be the good implementation in your opinion?. You really think this is better than supporting changing ids for items - for one reason only, changing the underlying layout for theming:\n// updating items => we change the display type of a folder item\nBaseFolderItem item = mFastItemAdapter.getAdapterItem(pos);\nitem.getFolder().setType(newType);\nBaseFolderItem newItem = null;\nswitch (newType)\n{\n    case Simple:\n        newItem = new SimpleFolderItem(item.getFolder());\n        break;\n   case Grid:\n        newItem = new GridFolderItem(item.getFolder());\n        break;\n   case Stack:\n        newItem = new StackFolderItem(item.getFolder());\n        break;\n   case Grid:\n        newItem = new GridFolderItem(item.getFolder());\n        break;\n   case Action:\n        newItem = new ActionFolderItem(item.getFolder());\n        break;\n   // and so on, I offer quite a few possible layouts\n}\n mFastItemAdapter.remove(pos);\n mFastItemAdapter.add(pos, newItem);\n\nInstead of simply doing following:\nBaseFolderItem item = mFastItemAdapter.getAdapterItem(pos);\nmFastItemAdapter.getAdapterItem(pos).getFolder().setType(newType);\nmFastItemAdapter.remapMappedTypes();\nmFastItemAdapter.notifyAdapterItemChanged(pos);. Thanks, I'll check that. Using the generic adapter, will I be able to update an item or will I still need to remove + readd a model? This has the drawback of add/remove animations instead of an update animation.... What would you suggest for selective initial expandable states?\n\n\nset items of adapter (adaptersetNewList(items)\nexpand all items (adapter.expand())\n\nexpand items via adapter.collapse(index) selectively with the indizes starting from top to bottom?. I thought about this as well ;-). I understand. For now, if someone else needs it, here's my helper function:\npublic static void setNewList(FastItemAdapter adapter, List items) {\n    Bundle expandedStates = getExpandedIdsBundleAndResetExpanded(items, \"\");\n    adapter.setNewList(items);\n    adapter.withSavedInstanceState(expandedStates);\n}\nprivate static Bundle getExpandedIdsBundleAndResetExpanded(List items, String prefix) {\n    Bundle b = new Bundle();\n    ArrayList ids = getExpandedIdsListAndResetExpanded(items);\n    b.putStringArrayList(\"bundle_expanded\" + prefix, ids);\n    return b;\n}\nprivate static ArrayList getExpandedIdsListAndResetExpanded(List items) {\n    ArrayList ids = new ArrayList<>();\n    for (IItem item : items) {\n        if (item instanceof IExpandable && ((IExpandable)item).isExpanded()) {\n            ids.add(String.valueOf(item.getIdentifier()));\n            ids.addAll(getExpandedIdsListAndResetExpanded(((IExpandable) item).getSubItems()));\n            ((IExpandable) item).withIsExpanded(false);\n        }\n    }\n    return ids;\n}. Actually, it's my second use case for something like this after showing a counter of sub items in the header... but it's a suggestion only though.... @gpulido \nHave you managed to implement this in meantime? If so, would you share your solution please? Thanks. Ok thanks, this answers my question. So this small info should be added to the migration guide for others as well. I this case following is sufficiant:\nExpandableExtension expandableExtension = mFastItemAdapter.getExtension(ExpandableExtension.class);\n\n\nI've not checked it, but in this case adding an extension should throw an exception if one of the same type was added already (as a precaution) if it does not do this yet. notify happens on main thread\nIt looks like FastItemAdapter.set already triggers notifications, because my RecyclerView is updating if I change my filter code to following:\npublic void onFilter(FilterJob.FilterEvent event) {\n    mAdapter.set(event.items);\n    // no notifying here!\n}\n\nNo need for notifying the adapter. Is this the normal behaviour? I thought if I use set instead of setNew I'm responsible to to notify the adapter about changes manually. If I want to replace all items with a new list AND use a payload, is this possible?. I can write one that shows that identifiers change, but the problem is not a data problem but a visual one:\nTestcase would look like following:\n@Test\npublic void testDiffUtilDragDrop() {\n    List<TestItem> originalList = new ArrayList<>();\n    originalList.add(new TestItem(\"Test1\"));\n    originalList.add(new TestItem(\"Test2\"));\n\n    // if we use immutable data, we must create new items, diff util should do the rest to find out which items are the same\n    // we add new but identical items in inverted order to demonstrate a drag & drop action\n    List<TestItem> updatedList = new ArrayList<>();\n    updatedList.add(new TestItem(\"Test2\"));\n    updatedList.add(new TestItem(\"Test1\"));\n\n    // this here works, data is correct\n    test(originalList, updatedList);\n\n    // this fails, but items have just been moved, it would be save if identifiers would have been kept\n    Assert.assertEquals(updatedList.get(0).getIdentifier(), originalList.get(1).getIdentifier());\n    Assert.assertEquals(updatedList.get(1).getIdentifier(), originalList.get(0).getIdentifier());\n}\n\nObserved problem\nIf something like this is done the user sees that all views are redrawn, the data underneath is correct though and even diff result seems fine.\nIdea\nThe problem here is that it seems, that fast adapter uses the identifiers somewhere and therefore rebinds all ViewHolders (not sure what happens, just a guess currently) if new but identical items are used (identical items have different identifiers). As soon as I copy identifiers or use constant identifiers, everything works as expected.. Maybe I did not make it clear. There's no problem in the diff util directly nor in the library. It's just a logical problem because of the automatic id generation which collides with the idea of diff utils imho.\nI would say diff utils are used to find same and equal items (even if objects are different) to decide, which views must be invalidated. Using FastAdapter put's some special behaviour on top of this: equal items must have equal ids, otherwise using diff utils is not save as view invalidations won't work.\nTo make following clear:\n I know diff utils only calculates RecyclerView notify methods and calls them\n I  know new items will get new ids always - normally makes sense\nMy problem is just following:\nIf the identifier changes and diff util says 2 of 10 displayed items changed, still 10 items will be redrawn which is not what I expect.\n@mikepenz \n I have no problem with adding items twice, because your diff util clears the data and adds the new list automatically and finally just executes the diff's notify methods... And I use this as only data source, there are no direct edits of the FastAdapters data source, such a stream of lists that is observed...\n calculating ids would be very difficult currently (would depend on ~50 settings), my only solution to get unique ids would be resepcting this in my database and use a common global id table that I link with every object so I could use the unique id of this table as the identifier\nConclusion\nI always need to make sure that ids of equal items are the same, even if the diff util says items are equal. This is somehow redundant imho... And not clear at the first sight\n. Will now solve this by generating gobal unique ids in my database because that's the easiest solution for me.\nThanks for the feedback.. can and should be an int, correct...\n. i'll add this as well...\n. You will have adapters with multiple item types, but one listener. So I think, IItem should be fine. What would you suggest?\n. Then I have to change AdapterUtil.getAllItems() (because I currently use this in the deselect method) to be typed as well... But sure, I can do that. \n. What do you mean here? The header that should be checked needs to be an IExpandable, why don't force this? Then I have to check the header before retrieving it's children.... You mean com.mikepenz.fastadapter.IItem? Same comment as below applies, this functions hands on the headers (which must implement IExpandable) to the recursive function. So why don't force this?. You just mean the NAMING of T?. As the german comment indicates, this was an accident... I just wanted to check in to my usb stick git repo instead of my github repo (have set this up just a few days ago and am not perfectly used to it yet, having sub repos and many remotes...)\n1) all generics are named T in the SubItemUtil, but I change this one to Item, although I don't like this if only one generic type is used. But I don't care.\n2) I won't change the generic adapter. I could not use this method anymore in my code. My method supports any adapter, with any kind of items, no need to force all items to be IExpandable or anything else... You may have an adapter with IExpandables and normal IItems which results in a FastAdapter<IItem> and this adapter would need to use these functions as well, using a FastAdapter<Item> would restrict all items of the adapter to be IExpandable which is not necessary.. Because the recursive notifyItemsChanged function gets a header items, which must be IExtendable... If I remove it, I would need to cast in this function and this means, the instanceof check must be duplicated, as I would need to check the interface in the recursive function as well. But this can be done if you really want that.... Sure, I do that. done, added some other docs as well. What do you mean? The mFrom == null check? This is necessary because we want to save the very first from position only and don't want to overwrite this value while dragging around the item. ",
    "LukA888": "Wow, thank you for the fast answers! :smile: \nI've changed the version of appcompat to 24.1.1 and FastAdapter's to 1.6.1 but the space remains there.\nWhat can I do? I mean, I think the space is ugly but I don't know if it's a correct design or a bug.\n. Hmmmm, in my opinion it looks a little bit strange.\n. ",
    "gpulido": "Hello @mikepenz \nThank you for the quick answer.\nIf I set \"SectionItem\" to be an extension of GenericAstractItem:\n``` Java\npublic class SectionItem extends GenericAbstractItem {\npublic SectionItem(Competition competition) {\n        super(competition);\n    }\n....\n}\n```\nBut now, when I try to use the GenericItemAdapter, I can't compile the following:\n``` Java\n GenericItemAdapter itemAdapter = new GenericItemAdapter(new Function() {\n        @Override\n        public IItem apply(RealmObject realmObject) {\n            if (realmObject instanceof Contender)\n                return new ContenderItem((Contender)realmObject);\n            else\n                return new SectionItem((Competition)realmObject);\n        }\n    });\n\n```\nAs the compiler doesn't know how to infer the IItem generics parameters (maybe I'm doing something wrong):\nError:(76, 41) error: type argument IItem is not within bounds of type-variable Item\nwhere Item,Model are type-variables:\nItem extends GenericAbstractItem<Model,Item,?> declared in class GenericItemAdapter\nModel extends Object declared in class GenericItemAdapter\nThe idea of use any kind of \"grouping mechanism\" is to allow the user to change the sort and grouping of the data \"on the fly\" without needing to reimplement any posible adapter combination.\nI had take a look to the stickyHeaders but In this specific case I prefer to use inplace headers / sections. The \"wrap\" concept seems to be the perfect fix as that would allow me to just define one base adapter for the whole data (the ContenderItem based adapter) and wrap it on a \"HeaderAdapter\" that just add the right items as sections on the right places based on a sort / group function, but when I tried I didn't know how to tell the wraper where to add the headers.\n. @mikepenz If I use the GenericAbstractItem as common parent instead of IItem :\n``` Java\n  GenericItemAdapter itemAdapter =\n                new GenericItemAdapter(new Function() {\n        @Override\n        public GenericAbstractItem apply(RealmObject realmObject) {\n            if (realmObject instanceof Contender)\n                return new ContenderItem((Contender)realmObject);\n            else\n                return new SectionItem((Competition)realmObject);\n        }\n    });\n\n```\nI have the same problem: The compiler doesn't know how to infer the types (the error message is the same as with IItem, that makes sense as both have the same generic signature).\nThank for the headerAdapter explanation.\nI will take a look to the AbstractWrapAdapter and trying to figure out how to add the headers in the right positions.\n. @mikepenz \nIn your example, it works because RightGenericIconItem is an extension of the GenericIconItem, and both already have defined the same generics (the one that uses the genericIconItem). You are using the same ViewHolder for both iconitems that is why the compiler doesn't complains.\nJava\nRightGenericIconItem extends GenericIconItem\nAnd about the wraper, just as clarification, the \"right aproach\" is to have a GenericItemAdapter as a base adapter and add a \"GroupAdapterWraper\" on top of it that would add headers on specific positions. Am I right?\nAs a first approach, I can just have a constructor with the \"positions\" for the items, and the values on each position.\nFor example if I have the following:\nGenericItemAdapter:\nc0 -> pos 0\nc1 -> pos 1\nc2 -> pos 2\nc3 -> pos 3\nc4 -> pos 4\nAnd I want to add a header before the pos 0, and between pos 2 and 3, Do I have to change the base adapter positions? or it is enough to create a wraperadapter that defines the following:\nh0 -> pos 0 on wrapedAdapter\nc0 -> pos 0 on baseAdapter\nc1 -> pos 1 on baseAdapter\nc2 -> pos 2 on baseAdapter\nh1 -> pos 3 on wrapedAdapter\nc3 -> pos 3 on baseAdapter\nc4 -> pos 4 on baseAdapter\nOr I need to recalculate and asign all positions on both adapters?\nIf I come up with something I will definitively share it of course :)\nI like Realm and I think that it should be easy to mix it with the FastAdapter to become a great solution easy to use.\nI'm concerned about reusing or not some of the logic of the RealmRecyclerViewAdapter that is being used here: https://realm.io/docs/java/latest/#adapters\n. @mikepenz Don't worry about the wrong hints, you are doing and amazing work with your libraries :)\nAfter some work figuring how to fill the shouldInsertItemAtPosition and itemInsertedBeforeCount this is my frist aproach to the wraper:\n``` Java\npublic class GroupedWrapAdapter extends AbstractWrapAdapter {\npublic GroupedWrapAdapter(List<Item> items) {\n    super(items);\n}\n\n@Override\npublic void setItems(List<Item> items) {\n    super.setItems(items);\n    notifyDataSetChanged();\n}\n\n\nList<Integer> mPositions;\npublic GroupedWrapAdapter withSectionPositions(List<Integer> positions)\n{\n    mPositions = positions;\n    mInsertedItems = null;\n    notifyDataSetChanged();\n    return this;\n}\n\n/**\n * Cache of inserted items positions to avoid recalculate them \n */\nSparseIntArray mInsertedItems;\n\n\nprivate void populateInsertedItems()\n{\n    mInsertedItems = new SparseIntArray();\n    int total = getAdapter().getItemCount() +getItems().size();\n    for(int position = 0; position <total; position++)\n    {\n        int j = 0;\n        for(int i = 0; i< mPositions.size(); i++)\n        {\n            if ( position > mPositions.get(i))\n                j++;\n        }\n        mInsertedItems.append(position, j);\n\n    }\n}\n\n@Override\npublic boolean shouldInsertItemAtPosition(int position) {\n    if (getAdapter().getItemCount() > 0 && getItems().size() > 0) {\n        for(int i = 0; i< mPositions.size(); i++)\n        {\n            if (mPositions.get(i) + i == position)\n                return true;\n        }\n    }\n    return false;\n}   \n@Override\npublic int itemInsertedBeforeCount(int position) {\n\n    if (mInsertedItems == null)\n        populateInsertedItems();\n    if (getAdapter().getItemCount() > 0 && getItems().size() > 0)\n    {\n        return mInsertedItems.get(position);\n    }\n    return 0;\n}\n\n}\n```\nTo use it the list of section items has to be provided on the constructor. It is also needed a list with the section positions that is provided withSectionPositions method. This list has to provide an integer with the position on the wraped \"itemcount\" list where the section should be placed.\nSo if you have an GenericItemAdapter with 6 items, and you want to put two sections before the 0 position and before the 6 position, the sectionposition list provided must be \"0;6\". The wrapper automatically transform the positions to the right positions on the wraper adapter.\nI'm not very happy with this implementation, as if I sort the GenericItemAdapter, I have to also sort the GroupedWrapAdapter items and positions.\nI would like to end with an Adapter to which I provide the Map> and it automatically fills the genericItemAdapter. Or event better, an adapter that just receive the grouping function, and the sorting function and it rearranges all.\nRegarding the realmadapter, I still think that a solution that would not imply to modify the RealmObjects is better, as that would decouple the model from the representation.\n. @mikepenz that was very fast!! Amazing.\nWhere is the code that shows the header helper? I can't find it.\nAlso, a silly question, as my project is using your MaterialDrawer, I'm using the FastAdapter that is referenced there, to use other versions is enough to reference it on the gradle?\n. @matitasbe thank you for the path, I didn't see it before.\n@mikepenz  I have tested the Headerhelper with my current implementation and it have problems with some of the castings. It is necesary to use the 1.6.3-SNAPSHOOT to make it work?\nThis is what I came with:\n``` Java\n  //create our FastAdapter which will manage everything\n        fastAdapter = new FastAdapter();\n    GenericItemAdapter<Contender, ContenderItem> itemAdapter = new GenericItemAdapter<>(ContenderItem::new);\n\n    RecyclerView.Adapter adapter = itemAdapter.wrap(fastAdapter);\n\n\n    final HeaderHelper<IItem> headerHelper = new HeaderHelper<IItem>(itemAdapter, new HeaderHelper.GroupingFunction<IItem>() {\n        @Override\n        public IItem group(IItem currentItem, IItem nextItem, int currentPosition) {\n            if (currentItem == null)\n                return new SectionItem(((ContenderItem)nextItem).getModel().getCompetition());\n            else if (nextItem!= null)\n                if (((ContenderItem)currentItem).getModel().getCompetition() != ((ContenderItem)nextItem).getModel().getCompetition()){\n                    return  new SectionItem(((ContenderItem)nextItem).getModel().getCompetition());\n                }\n            return null;\n        }\n    });\n\n    headerHelper.setComparator(new Comparator<IItem>() {\n        public int compare(IItem f1, IItem f2) {\n            if (f1 instanceof ContenderItem && f2 instanceof ContenderItem) {\n                return new ContenderItem.ShotSlotComparatorAscending().compare((ContenderItem)f1, (ContenderItem)f2);\n            } else {\n                return f1.toString().compareTo(f2.toString());\n            }\n        }\n    });\n\nArrayList contenders = //Fill it with dummy data\n        headerHelper.apply(contenders);\n```\nReviewing the HeaderHelper, it uses the generic \"Item\" all over the place that in my case and following the example I set as an \"IItem\", the problem is that the headerHelper.apply when it is used with a genericitemadapter, it expects a list of models instead of itemmodels to convert them but the Generic type \"Item\" has already being set as a \"IItem\" and not as a \"Contender\" (in mi example) and I'm receivng a classcastException as SectionItem cannot be cast to Contender.\n. @mikepenz Thank for the gradle tip.\nFollowing my own example to make it \"work\" I had to change the HeaderHelper and on the apply method use  genericItemAdapter.set(items); instead of setModel\nAnd call apply with a a list of ContenderItems instead of contenders.\nNow I'm facing a grouping problem as it is creating a header for every element, but that is probably a problem in my code :)\n. @mikepenz The problem is not the base class, the problem is that the same generic \"Item\" is being used with two different meanings on the HeaderHelper.\nIf I set it as a \"IItem\" (as I do in my example) then \nJava\npublic void apply(List<Item> items)\nis being transformed by the compiler to\nJava\npublic void apply(List<IItem> items>\nAnd that breaks the last line of the method when the model is being asigned to the genericitemadaptar:\nJava\n genericItemAdapter.setModel(items);\nas the genericItemadapter is expecting model types and is obtains IItem types.\nAnd If I change the entire HeaderHelper to use HeaderHelper,\nthen where it breaks is on the grouping function:\nJava\n public interface GroupingFunction<Item>\n{\n Item group(Item currentItem, Item nextItem, int currentPosition);\n}\nAs the group expects a \"sectionitem\" as output, but it can only receive a Contender (as Item has been cast to Contender)\n. @mikepenz \nYou are right, it doesn't break, but if I use Contender as the Item:\n``` Java\n GenericItemAdapter itemAdapter = new GenericItemAdapter<>(ContenderItem::new);\n    RecyclerView.Adapter adapter = itemAdapter.wrap(fastAdapter);\n\n    final HeaderHelper<Contender> headerHelper2 = new HeaderHelper<Contender>(itemAdapter, new HeaderHelper.GroupingFunction<Contender>() {\n        @Override\n        public Contender group(Contender currentItem, Contender nextItem, int currentPosition) {\n            if (currentItem == null)\n                return nextItem;\n            else if (nextItem!= null)\n                if (currentItem.getCompetition().getUUID().equals(nextItem.getCompetition().getUUID()))\n                    return nextItem;\n            return null;\n        }\n    });\n    headerHelper2.setComparator(new Comparator<Contender>() {\n        @Override\n        public int compare(Contender contender, Contender t1) {\n            return 0;\n        }\n    });\n\n```\nThere is not place where I can tell the adapter how to create SectionItems, and it uses the same ItemModel for the sections.\nWhen the grouping function ask for the \"item\", in this case I have to return a Contender, so I can't tell the helper how to represent the section/header items.\nIf I try to use a common ancestor for the Contender and the Competition (RealmObject) I have the same problem, there is not place where I tell neither the adapter, neither the helper how to represent the sections.\n. Again, you are amazing...\nI've test the new helper this way:\n``` Java\n  GenericItemAdapter itemAdapter = new GenericItemAdapter<>(ContenderItem::new);\n    RecyclerView.Adapter adapter = itemAdapter.wrap(fastAdapter);\n\n    final HeaderHelper<Contender, Competition> headerHelper = new HeaderHelper<Contender, Competition>(itemAdapter, new HeaderHelper.GroupingFunction<Contender, Competition>() {\n        @Override\n        public Competition group(Contender currentItem, Contender nextItem, int currentPosition) {\n            if (currentItem == null)\n                return nextItem.getCompetition();\n            else if (nextItem != null)\n                if (currentItem.getCompetition().getUUID().equals(nextItem.getCompetition().getUUID()))\n                    return nextItem.getCompetition();\n            return null;\n        }\n    });\n    headerHelper.setComparator(new Comparator<Contender>() {\n        @Override\n        public int compare(Contender contender, Contender t1) {\n            return 0;\n        }\n    });\n    headerHelper.apply(Stream.of(getScreen().getObjectsForFragment(getRealm())).collect(Collectors.toList()));\n\n```\nThe problem now, is that although the helper knows how to group by competition, it doesn know what item generate with the competition. \nIf I change the helper to use a common ancestor (RealmObject for example)\n``` Java\n GenericItemAdapter itemAdapter = new GenericItemAdapter<>(ContenderItem::new);\n    RecyclerView.Adapter adapter = itemAdapter.wrap(fastAdapter);\n\n    final HeaderHelper<RealmObject, SectionItem> headerHelper = new HeaderHelper<RealmObject, SectionItem>(itemAdapter, new HeaderHelper.GroupingFunction<RealmObject, SectionItem>() {\n        @Override\n        public SectionItem group(RealmObject currentItem, RealmObject nextItem, int currentPosition) {\n            if (currentItem == null)\n                return new SectionItem(((Contender)nextItem).getCompetition());\n            else if (nextItem != null)\n                if (((Contender)currentItem).getCompetition().getUUID().equals(((Contender)nextItem).getCompetition().getUUID()))\n                    return new SectionItem(((Contender)nextItem).getCompetition());\n            return null;\n        }\n    });\n    headerHelper.setComparator(new Comparator<RealmObject>() {\n                                   @Override\n                                   public int compare(RealmObject realmObject, RealmObject t1) {\n                                       return 0;\n                                   }\n                               });\n\n```\nI receive the error:\nJava\nes.gpulido.archeryannotation.ui.adapter.SectionItem cannot be cast to es.gpulido.annotationmodel.annotation.Contender\n at es.gpulido.archeryannotation.ui.fragment.ClassificationListFragment$$Lambda$1.apply(Unknown Source)\n                                                                                at com.mikepenz.fastadapter.adapters.GenericItemAdapter.toItem(GenericItemAdapter.java:191)\n                                                                                at com.mikepenz.fastadapter.adapters.GenericItemAdapter.toItems(GenericItemAdapter.java:179)\n                                                                                at com.mikepenz.fastadapter.adapters.GenericItemAdapter.setModel(GenericItemAdapter.java:55)\n                                                                                at es.gpulido.archeryannotation.ui.adapter.realmAdapters.HeaderHelper.apply(HeaderHelper.java:82)\nI think we may need to add the header model section, something like:\nHeaderHelper\n. @mikepenz \nI understand, I will play a bit and let you know.\n. @mikepenz \nI have tried to use the new GenericItemAdapter this way:\n``` Java\nGenericItemAdapter> itemAdapter = new GenericItemAdapter<>(new Function>() {\n            @Override\n            public GenericAbstractItem apply(RealmObject o) {\n                if (o instanceof Contender) {\n                    return new ContenderItem((Contender)o);\n                } else {\n                    return new SectionItem((Competition) o);\n                }\n            }\n        });\n    RecyclerView.Adapter adapter = itemAdapter.wrap(fastAdapter);\n\n    final HeaderHelper<RealmObject, SectionItem> headerHelper = new HeaderHelper<RealmObject, SectionItem>(new HeaderHelper.GroupingFunction<RealmObject, SectionItem>() {\n\n        @Override\n        public SectionItem group(RealmObject currentItem, RealmObject nextItem, int currentPosition) {\n\n            if (currentItem == null)\n                return new SectionItem(((Contender)nextItem).getCompetition());\n            else if (nextItem != null)\n                if (!((Contender) currentItem).getCompetition().getUUID().equals(((Contender) nextItem).getCompetition().getUUID())) {\n                    return new SectionItem(((Contender)nextItem).getCompetition());\n                }\n            return null;\n\n        }\n\n    });\n    headerHelper.setComparator(new Comparator<RealmObject>() {\n        @Override\n        public int compare(RealmObject realmObject, RealmObject t1) {\n            return 0;\n        }\n    });\n\n```\nAs a remainder:\n``` Java\npublic class ContenderItem  extends GenericAbstractItem{}\npublic class SectionItem extends GenericAbstractItem {\n```\nBut the group method doesn't compile as it can't cast the ContenderItem to the GenericAbstractItem\nIf I force the cast by:\n``` Java\n  @Override\n            public GenericAbstractItem apply(RealmObject o) {\n                if (o instanceof Contender) {\n                    return ((GenericAbstractItem)new ContenderItem((Contender)o));\n                } else {\n                    return ((GenericAbstractItem)new SectionItem((Competition) o));\n                }\n            }\n```\nIt compiles and executes, but when I load the recyclerview It came up empty :(\n. @mikepenz \nOk I will try to extract the relevant part this weekend\nGabriel\n. @mikepenz \nI'm sorry I din't have time this weekend. But I promise that I will clone your project and try to reproduce the issue.\n. Hello @mikepenz \nSorry for taking too much time to test your code, it was imposible to me to take a look earlier.\nRegarding the code example, I think you have missing to pass the itemAdapter to the HeaderHelper constructor. In your example, the headerhelper is not related or referenced by any other adapter and hence it doesn't apply the grouping.\nTo make it work your example I had to change and add the itemAdapter:\nJava\nfinal HeaderHelper<IconModel, HeaderIconModel> headerHelper = new HeaderHelper<>(itemAdapter, new HeaderHelper.GroupingFunction<IconModel, HeaderIconModel>() {\nAlso I just populate the headeradapter with data and I do not fill the itemAdapter, so instead of your code that is:\n``` Java\n //apply\n        headerHelper.apply(models);\n    //fill with some sample data\n    itemAdapter.setModel(models);\n\n```\nI just \nJava\n //apply\n        headerHelper.apply(models);\nThe rest code if the same as yours (or similar) and it worked :)\nAgain, thank you very much for the effort and the support. You are amazing\nRegards\nGabriel\n. @mikepenz not yet, althought to be honest  I didn't have time to reviewied it properly. I expect to do it soon. Sorry for the delay, I'll keep you informed.. @mikepenz This is the changes that I've made to the apply code, instead of adding elements to the items list I just create a new list that I fill and use it instead. The problem is the last element,\n```Java\n  public void apply(List items) {\n        //If the list is empty avoid sorting and adding headers.\n        List newList = new ArrayList();\n        if (items.size() > 0) {\n            //sort beforehand\n            if (comparator != null) {\n                Collections.sort(items, comparator);\n            }\n            for (int i = 0; i < items.size(); i++) {\n                HeaderItem headerItem;\n                if (i == 0) {\n                    headerItem = groupingFunction.group(null, (Item) items.get(0), -1);\n                } else if (i == items.size() - 1) {\n                    headerItem = groupingFunction.group((Item) items.get(i-1), (Item) items.get(i), i);\n                } else {\n                    headerItem = groupingFunction.group((Item) items.get(i), (Item) items.get(i + 1), i);\n                }\n                if (headerItem != null) {\n                    newList.add(headerItem);\n                }\n                newList.add(items.get(i));\n            }\n        }\n    /**\n     * set the sorted list to the itemAdapter if provided\n     */\n    if (itemAdapter != null) {\n        itemAdapter.set(newList);\n    }\n    if (genericItemAdapter != null) {\n        genericItemAdapter.setModel(newList);\n    }\n}\n\nIn the old code when the last element is used on the groupingFunction, that group doesn't have any way to know that i has to create a new group as it doesn't have information about the previous element. Maybe I'm missing something.\nPlease review it and let me know.\nRegards,\nGabriel\n. I made an error, to know which element are processing on the last item, the group method must be called with the parameters reversed:Java\n for (int i = 0; i < items.size(); i++) {\n                HeaderItem headerItem;\n                if (i == 0) {\n                    headerItem = groupingFunction.group(null, (Item) items.get(0), -1);\n                } else if (i == items.size() - 1) {\n                    headerItem = groupingFunction.group((Item) items.get(i), (Item) items.get(i-1), i);\n                } else {\n                    headerItem = groupingFunction.group((Item) items.get(i), (Item) items.get(i + 1), i);\n                }\n                if (headerItem != null) {\n                    newList.add(headerItem);\n                }\n                newList.add(items.get(i));\n            }\n```\nThe problem is that then the group is not receiving the \"currentItem\" and the \"nextItem\" in that case.\nI'm not very happy with such solution, I will try to improve it.\nUPDATE\nI've found a better and more clean iteration:\n```Java\n for (int i = -1; i < items.size() -1; i++) {\n                HeaderItem headerItem;\n                if (i == -1) {\n                    headerItem = groupingFunction.group(null, (Item) items.get(i+1), -1);\n                }\n                else {\n                    headerItem = groupingFunction.group((Item) items.get(i), (Item) items.get(i + 1), i);\n            }\n            if (headerItem != null) {\n                newList.add(headerItem);\n            }\n            newList.add(items.get(i +1));\n        }\n\nInstead of adding the current index we add the next index with the group head if necesary. @mikepenz It works! \nI have just revert back the changes that I made to the grouping function and it works perfectly.\nIn which version of the adapter will be the changes available?\nThank you again for your amazing work and awesome support.\nGabriel\n. @mikepenz I have reviewed the multiselect example, but I still don't understand which method I need to call to start the \"cab\" mode. It is probably my fault, but what should I write in the onclick?Java\n fastAdapter.withItemEvent(new ClickEventHook() {\n            @Nullable\n            @Override\n            public View onBind(@NonNull RecyclerView.ViewHolder viewHolder) {\n                if (viewHolder instanceof ContenderItem.ViewHolder)\n                    return ((ContenderItem.ViewHolder)viewHolder).avatar;\n                return null;\n            }\n        @Override\n        public void onClick(View v, int position, FastAdapter fastAdapter, IItem item) {\n           ///????\n\n        }\n    });\n\n```\nAlso, I want to change the icon of the selected cab objects alongside with the item background. The item background is changed as the actionmodehelpr sets the \"item\" as selected state so the statedrawable knows that it has to use the selected part. But for the icon that is a imageview as a child of the itemview I don't know how to get the right instance to do the same.. @mikepenz \nOk 1 of 2 done:\nJava\n  @Override\n            public void onClick(View v, int position, FastAdapter fastAdapter, IItem item) {\n                fastAdapter.select(position);\n                actionModeHelper.checkActionMode((AppCompatActivity)getActivity());\n            }\nNow about the listener, probably is a very silly question but the selectionchangedlistener provides me to the item instance, but how I can access the viewholder to change the views?\nJava\n fastAdapter.withSelectionListener(new ISelectionListener<ContenderItem>() {\n            @Override\n            public void onSelectionChanged(ContenderItem item, boolean selected) {\n              //I need to access a ImageVIew inside the ViewHolder for the item\n            }\n        });\n. @mikepenz You are absolute right. I knew that the question was silly, sorry for that.\nI just added a check on the bindholder of the IItem:\nJava\n  @Override\n    public void bindView(ViewHolder holder, List payloads) {\n        super.bindView(holder, payloads);\n        holder.bindModel(getModel());\n        holder.avatar.setActivated(isSelected());\n    }\nand just to finish the whole example:\n```Java\n fastAdapter.withItemEvent(new ClickEventHook() {\n            @Nullable\n            @Override\n            public View onBind(@NonNull RecyclerView.ViewHolder viewHolder) {\n                if (viewHolder instanceof ContenderItem.ViewHolder)\n                    return ((ContenderItem.ViewHolder)viewHolder).avatar;\n                return null;\n            }\n        @Override\n        public void onClick(View v, int position, FastAdapter fastAdapter, IItem item) {\n            if (item.isSelected())\n                fastAdapter.deselect(position);\n            else\n                fastAdapter.select(position);\n            actionModeHelper.checkActionMode((AppCompatActivity)getActivity());\n        }\n    });\n    fastAdapter.withSelectionListener(new ISelectionListener<ContenderItem>() {\n        @Override\n        public void onSelectionChanged(ContenderItem item, boolean selected) {\n\n           fastAdapter.notifyAdapterItemChanged(fastAdapter.getPosition(item));\n        }\n    });\n\n```\nAgain, thank you for the help and the library!. @mikepenz  thank for the suggestion, the main problem is that each item has to know in which order \"inside\" the group he is.\nAs the header helper is external to the collection, and also the group function, the only that really could know the order is the headerhelper when it is creating the items on the apply function, so maybe one idea is that the headerhelper holds a dictionary of  (where typeoforder is begin-center-end) that is filled at the same time the apply function is called.\nThen the headerhelper could expose a method: getTypeOfItem(model) that returns the typeoforder.\nThen the constructor of the item (not the header item) the typeoforder is given so it could be used on the viewholder...\n. Using the previous idea I have modified the headerhelper class so it stores the grouping position of each item:\n```Java\npublic class HeaderHelper {\n    @IntDef({TOP,\n            CENTER,\n            BOTTOM}\n    )\n    @Retention(RetentionPolicy.SOURCE)\n    public @interface Positions{}\n    public static final int TOP = 0;\n    public static final int CENTER = 1;\n    public static final int BOTTOM = 2;\nprivate ItemAdapter itemAdapter;\nprivate GenericItemAdapter genericItemAdapter;\nprivate HeaderHelper.GroupingFunction<Item, HeaderItem> groupingFunction;\nprivate Comparator<Item> comparator;\nprivate Dictionary<Item,  Integer> groupPosition;\n\n/**\n * @param groupingFunction\n */\npublic HeaderHelper(HeaderHelper.GroupingFunction groupingFunction) {\n    this.groupingFunction = groupingFunction;\n}\n\n/**\n * @param itemAdapter\n * @param groupingFunction\n */\npublic HeaderHelper(ItemAdapter itemAdapter, HeaderHelper.GroupingFunction<Item, HeaderItem> groupingFunction) {\n    this.itemAdapter = itemAdapter;\n    this.groupingFunction = groupingFunction;\n}\n\n/**\n * @param genericItemAdapter\n * @param groupingFunction\n */\npublic HeaderHelper(GenericItemAdapter genericItemAdapter, HeaderHelper.GroupingFunction<Item, HeaderItem> groupingFunction) {\n    this.genericItemAdapter = genericItemAdapter;\n    this.groupingFunction = groupingFunction;\n}\n\n/**\n * call this when your list order has changed or was updated, and you have to readd the headres\n *\n * @param items the list which will get the headers added inbetween\n */\npublic void apply(List items) {\n    //If the list is empty avoid sorting and adding headers.\n    int size = items.size();\n    groupPosition = new Hashtable<Item, Integer>();\n    if (size > 0) {\n        //sort beforehand\n        if (comparator != null) {\n            Collections.sort(items, comparator);\n        }\n\n        //we have to get the list size each time, as we will add the headers to it\n        for (int i = -1; i < size; i++) {\n            HeaderItem headerItem;\n            if (i == -1) {\n                headerItem = groupingFunction.group(null, (Item) items.get(i + 1), i);\n                if (headerItem != null)\n                    groupPosition.put((Item) items.get(i + 1), TOP);\n            } else if (i == size - 1) {\n                headerItem = groupingFunction.group((Item) items.get(i), null, i);\n\n            } else {\n                headerItem = groupingFunction.group((Item) items.get(i), (Item) items.get(i + 1), i);\n                if (headerItem != null) {\n                    groupPosition.put((Item) items.get(i), BOTTOM);\n                    groupPosition.put((Item) items.get(i + 1), TOP);\n                }\n            }\n\n            if (headerItem != null) {\n                items.add(i + 1, headerItem);\n                i = i + 1;\n                size = size + 1;\n            }\n            else\n                groupPosition.put((Item) items.get(i), CENTER);\n        }\n    }\n\n    /**\n     * set the sorted list to the itemAdapter if provided\n     */\n    if (itemAdapter != null) {\n        itemAdapter.set(items);\n    }\n    if (genericItemAdapter != null) {\n        genericItemAdapter.setModel(items);\n    }\n}\n\n/**\n * @return the comparator to use before adding the headers\n */\npublic Comparator<Item> getComparator() {\n    return comparator;\n}\n\n/**\n * @param comparator the comparator to use before adding the headers\n */\npublic void setComparator(Comparator<Item> comparator) {\n    this.comparator = comparator;\n}\n\n/**\n * @return the ItemAdapter\n */\npublic ItemAdapter getItemAdapter() {\n    return itemAdapter;\n}\n\n/**\n * @param itemAdapter the ItemAdapter\n */\npublic void setItemAdapter(ItemAdapter itemAdapter) {\n    this.itemAdapter = itemAdapter;\n    this.genericItemAdapter = null;\n}\n\n/**\n * @return the GenericItemAdapter\n */\npublic GenericItemAdapter getGenericItemAdapter() {\n    return genericItemAdapter;\n}\n\n/**\n * @param genericItemAdapter the GenericItemAdapter\n */\npublic void setGenericItemAdapter(GenericItemAdapter genericItemAdapter) {\n    this.genericItemAdapter = genericItemAdapter;\n    this.itemAdapter = null;\n}\n\n/**\n * @return the function used to determine headers\n */\npublic HeaderHelper.GroupingFunction<Item, HeaderItem> getGroupingFunction() {\n    return groupingFunction;\n}\n\n/**\n * @param groupingFunction the function used to determine headers\n */\npublic void setGroupingFunction(HeaderHelper.GroupingFunction<Item, HeaderItem> groupingFunction) {\n    this.groupingFunction = groupingFunction;\n}\n\n\npublic interface GroupingFunction<Item, HeaderItem> {\n    /**\n     * @param currentItem     the current item we check\n     * @param nextItem        the item comming after the current item\n     * @param currentPosition the current position of the currentItem\n     * @return the HeaderItem we want to add after the currentItem\n     */\n    HeaderItem group(Item currentItem, Item nextItem, int currentPosition);\n}\n\n@SuppressWarnings(\"ResourceType\")\npublic @Positions int getGroupPosition(Item item)\n{\n    return groupPosition.get(item);\n}\n\n}\n```\nI'm not very happy with the apply code but it works.\nThen is very easy to use it. For example I just added a new parameter on the constructor of my item:\njava\n GenericItemAdapter<Object, GenericAbstractItem<Object, ?, ?>> itemAdapter = new GenericItemAdapter<>(new Function<Object, GenericAbstractItem<Object, ?, ?>>() {\n            @Override\n            public GenericAbstractItem apply(Object o) {\n                if (o instanceof Competition) {\n                    return new SectionItem((Competition) o);\n                }\n                else\n                    return new ContenderItem((Contender) o, headerHelper.getGroupPosition((Contender) o));\n            }\n        });\nAnd them it can be used inside the item to manipulate the visual logic on the bind holder.\nOr it can be used directly on the apply to create a different item (ContenderItemTop, ContenderItemCenter, contenderItemBottom\n@mikepenz Maybe you can add the changes to the headerhelper (probably with a better style :) )\nLet me know if you like the idea.\nGabriel\n. @mikepenz I know that is very specific, but not unusual, \nFor example it could be useful to implement an image carrousel showcase.\nI was thinking if a \"fastadapter wrapper\" could be created to just generate the effect (no the animation, just the infinite loop).\nSomething like: InfiniteLooperAdapter that would wrap a fastadapter to just add the functionallity.\nSeems that could be done manipulating the getItemCount and getItem methods for an Adapter:\nhttps://stackoverflow.com/questions/31253555/how-do-i-create-a-circular-endless-recyclerview\nDo you think it could be done that way using fastadapter?\n. @mikepenz I've tried to use that trick, for example with a list of just one element. And the adapter creates the viewholder for the element, but then it fills the screen with empty holders. Only when you scroll up a new element is shown.\nSeems like it is no capable of reuse the holder until it disapears from the screen.\nThe test code that I use was just an extension of the GenericItemAdapter on which I override the getItemType and just \"transforms\" all positions:\n```Java\n    @Override\n    public int getItemCount() {\n        return Integer.MAX_VALUE;\n    }\n@Override\npublic void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\n    super.onBindViewHolder(holder,  getAdjustedPosition(position));\n}\n\n@Override\npublic int getItemViewType(int position) {\n    return super.getItemViewType( getAdjustedPosition(position));\n}\n\n\npublic int getAdjustedPosition(int position)\n{\n    return position % super.getItemCount();\n}\n\n```\nThis is what is happening:\n\n. Thank for the tip, I know that at this point is not just \"fasteradapter\". Sorry for the inconvenience.\nI will try to do as you say and add items dinamically on the onScroll event. Probably I will take a look to your EndlessScroll example.\nMy main concern is that the list represents a \"live\" classification on a tournament that is being shown at any time but that is being refreshed (the order of elements) several times. So any time the \"classification\" changes I'm clearing the adapter data and refilling, and I don't know how it would work with the scroll adding.\nBut as you say, this is not just fasteradapter.\nAgain thank you for your help.\nYou can close this issue if you want.\nGabriel\n. Hello again,\nIf it is ok, I'm going to autoanswer me and write down the code that ended working for me. Hopefully this will help others, or maybe it could point some things that could be done better from my part. Don't hesitate on make any comments.\nAs a first step, I want to maintain the selected fasteradapter object list \"state\" on the Fragmentviewmodel. This way it will survive as long as the viewmodel where I also maintain the list of objects to be used by the adapter. So the lifecycle of both list will be the same (from my POW, this is what have more sense)\nThis is the viewModel part:\n```Kotlin\nabstract class RealmObjectListViewModel : RealmViewModel()\n        where TRealmObject : RealmModel,\n              TRealmObject : IHasPrimarykey\n{\n    abstract var title : String\nvar results: LiveData<RealmResults<TRealmObject>>\n//TODO: use livedata for the selectedojectsList\nvar selectedObjects:List<TRealmObject> = ArrayList()\nabstract fun viewModelDao(): RealmObjectDao<TRealmObject>\ninit {\n    results = viewModelDao().loadObjectsAsync()\n}\n\n}\nThe viewmodel is inflated on the onActivityCreated method of the fragment:Kotlin\n override fun onActivityCreated(savedInstanceState: Bundle?) {\n        super.onActivityCreated(savedInstanceState)\n    archerListViewModel = ViewModelProviders.of(this).get(ArcherListViewModel::class.java)\n    binding.let{\n        it.viewModel = archerListViewModel\n        it.setLifecycleOwner(this)\n    }\n\n    binding.recyclerView.let {\n        it.adapter = fastAdapter\n        it.layoutManager = LinearLayoutManager(context)\n    }      \n}\n\nThe configuration of the fastAdapter is done through the following code:Kotlin\n private fun generateFastAdapter(): FastAdapter {\n        val itemAdapter = ModelAdapter(IInterceptor { o -> ArcherItem(o as Archer) })\n        val fastAdapterTemp: FastAdapter = FastAdapter.with(itemAdapter)\n        actionModeHelper = ActionModeHelper(fastAdapter, R.menu.contenders_actionmode, ActionBarCallBack())\n        fastAdapterTemp.withSelectable(true)\n        fastAdapterTemp.withMultiSelect(true)\n        fastAdapterTemp.withSelectOnLongClick(true)\n        fastAdapterTemp.withSelectionListener { item, selected ->\n            archerListViewModel.selectedObjects = fastAdapter.selectedItems.map({it.archer})\n            fastAdapter.notifyAdapterItemChanged(fastAdapter.getPosition(item!!))\n        }     \n    fastAdapterTemp.withOnPreClickListener { v, adapter, item, position ->\n        val res: Boolean? = actionModeHelper.onClick(item)\n        if (res != null) res else false\n    }\n\n    fastAdapterTemp.withOnPreLongClickListener { v, adapter, item, position ->\n        val actionMode = actionModeHelper.onLongClick(activity as AppCompatActivity, position)\n        actionModeHelper.isActive\n    }\n    return fastAdapterTemp\n\n}\n\nThe important line is the subscription to the selection listener that will update the VM. In this case I become a bit lazy and just substitute the entire list. In the future I will just change the itemsKotlin\n archerListViewModel.selectedObjects = fastAdapter.selectedItems.map({it.archer})\n```\nThis ensures the adapter -> VM comunication.\nNow we need to make sure that the adapter is being properly refreshed when the adapter is being reconstructed. The adapter is being filled with data when the VM gets the object list. As it doesn't have any sense to select any object that is not there yet we just link to the same vm observe method, so we are sure that the objects are selected just when we have the data:\nKotlin\n archerListViewModel.results.observe(this, Observer{\n            archersListAdapter.set(it?.toList()!!)\n                      fastAdapter.select(archerListViewModel.selectedObjects.map{fastAdapter.getPosition(UUID.fromString(it.uuid).mostSignificantBits)})\n            actionModeHelper.checkActionMode(activity as AppCompatActivity)\n        })\nWhat is missing, is to transform the SelectedObjects in a live data to be observed instead, this way if an object is deleted (for example) in the db by other user / thread, syn mechanism, the viewmodel could handle it properly and the fragment would update its ui.\nIn order to restore the selection on fastadapter the only way that I found is using the previous code:\nKotlin\nfastAdapter.select(archerListViewModel.selectedObjects.map{fastAdapter.getPosition(UUID.fromString(it.uuid).mostSignificantBits)})\n            actionModeHelper.checkActionMode(activity as AppCompatActivity)\n        })\nMaybe the selectionhelperextension could be \"extended\" to help to do this more \"clearly\".\nAs a side note, what is happening here is that the actionModeHelper/selectionHelper should be backed their own VM, and use composition to just \"plug\" the functionallity.\n. Hello,\nIt is my fault I didn't read right the error of the compiler. My problem is that I'm trying to pass a list of models not items. So the question changes.\nI have the following:\nKotlin\nprivate lateinit var fastAdapter: FastAdapter<IItem<*,*>>\nval itemAdapter = ModelAdapter(IInterceptor<Any, IItem<*,*>> { o ->\n        if (o is String) {\n            HeaderItem(o)\n        } else\n            ArcherItem(o as Archer)\n    })\nwhere ArcherItem is just:\n```Kotlin\nclass ArcherItem(val archer:Archer): ModelAbstractItem(archer)\n{...}\nand HeaderItemKotlin\nopen class HeaderItem(val model2: T):  ModelAbstractItem, HeaderItem.ViewHolder>(model2)\n{}\n```\nAnd I trying to dinamically create header items using the following code:\nKotlin\n archerListViewModel.results.observe(this, Observer {\n            val a = it?.toList()!!.groupBy { it.name }.map{ listOf(it.key).union(it.value)}.flatten()\n            FastAdapterDiffUtil.set(itemAdapter, a)          \n        })\n(where it is is a RealmLiveData>)\nif I just do a \"itemAdapter.set(a)\" it works\n. ",
    "sumitsahu2207": "But if we've price kind of field and we've to filter items based on some price range like $2000-$5000 then how do we do that \n. I checked this activity, I think it's filtering item based on the search right?\n. If possible, could you please given an example of implementing this custom filtering based on price range.\n. Thanks for your reply.\nIs it possible to filter items based on multiple search terms for different fields.\nFor Example:\nif we want to filter based on name and gender then can we use filter method for this case?\nfastItemAdapter.filter();\n. Yes, Thanks Mike :)\nI was checking your filter code in ItemAdapter and now I got, how I've to implement it in filter logic.\nThanks again Mike for your prompt response.\n. I'm just trying to do something like ImageList Sample in which 'Heart' icon gets selected by clicking it. But in that sample all Heart icon's of items can be selected or deselected all together.\nI need to select and highlight one image at a time and deselect others.\n. oh, ok. Let me see If that can fit in there. Thanks\nAlso would you be able to tell me, how should we save state of these selected items once we move to other activities and come back again.\nI'm doing fastAdapterService.saveInstanceState(outState); in onsaveInstancestate but that doesn't restore items selection state.\n. Thanks Mike. Let me check this.. Hi Mike,\nI couldn't fix this issue. Shopping cart icon(kind of radio button) is already working fine. But as expandable item functionality is also linked with the same item, it's interfering in item selections.\nWould you require whole app code or just whole activity and its fragment, layouts and corresponding code will do.\nBest Regards\nSumit. Hi Mike,\n1st Image is when activity starts.\n2nd Image is when one shopping cart icon clicked. It changes to Blue from grey\n3rd Image I've expanded one of item and tried selecting other item. Other item shopping cart icon also changes to blue from grey.\nBasically i'm expecting only one shopping item to be blue at a time.\n\n\n\n. Hi Mike,\nYou must be busy, but did you get a chance to look into this issue.\nThanks.. Thank you for your reply Mike :)\nI'm not using ColorStateList, instead i was trying with below logic in item bindView using isSelected() method.\n    if (isSelected()){\n       viewHolder.mItemBasketSelectedYes.setVisibility(View.VISIBLE);\n        viewHolder.mItemBasketSelectedNo.setVisibility(View.GONE);\n    }else {\n          viewHolder.mItemBasketSelectedYes.setVisibility(View.GONE);\n        viewHolder.mItemBasketSelectedNo.setVisibility(View.VISIBLE);\n    }\n\nAnd Below Shopping Basket View Click Listener is in Fragment:\n    //a custom OnCreateViewHolder listener class which is used to create the viewHolders\n    //we define the listener for the imageLovedContainer here for better performance\n    //you can also define the listener within the items bindView method but performance is better if you do it like this\n    fastAdapterService.withOnCreateViewHolderListener(new FastAdapter.OnCreateViewHolderListener() {\n        @Override\n        public RecyclerView.ViewHolder onPreCreateViewHolder(ViewGroup parent, int viewType) {\n            return fastAdapterService.getTypeInstance(viewType).getViewHolder(parent);\n        }\n\n        @Override\n        public RecyclerView.ViewHolder onPostCreateViewHolder(final RecyclerView.ViewHolder viewHolder) {\n            //we do this for our ServicePackage.ViewHolder\n            if (viewHolder instanceof ServicePackage.ViewHolder) {\n                //if we click on the rl_basket_container (mItemBasketContainer)\n                mClickListenerHelper.listen(viewHolder, ((ServicePackage.ViewHolder) viewHolder).mItemBasketContainer, new ClickListenerHelper.OnClickListener<ServicePackage>() {\n                    @Override\n                    public void onClick(View v, int position, ServicePackage item) {\n\n\n                            Set<Integer> selections = fastAdapterService.getSelections();\n                            if (!selections.isEmpty()) {\n                                int selectedPosition = selections.iterator().next();\n                                fastAdapterService.deselect();\n\n//                                    ServicePackage servicePackage = (ServicePackage) fastAdapterService.getItem(selectedPosition);\n//                                    servicePackage.withPressed(false);\n                                    fastAdapterService.notifyItemChanged(selectedPosition);\n                                }\n                                fastAdapterService.select(position);\n//                                item.withPressed(true);\n//                                fastAdapterService.notifyItemChanged(position);\n                        mListener.onServiceFragmentClick(item,serviceSubCategoryIndex); //Send back clicked Service Package\n\n\n                    }\n                    });\n                }\n\n            return viewHolder;\n        }\n    });\n\nI've below click listener in item (which is for animating when expands/collapses)\n//we define a clickListener in here so we can directly animate\nfinal private FastAdapter.OnClickListener<ServicePackage> onClickListener = new FastAdapter.OnClickListener<ServicePackage>() {\n    @Override\n    public boolean onClick(View v, IAdapter adapter, ServicePackage item, int position) {\n\n//            if(item.mPressed){\n//                item.setItemSelected(true);\n//            }else {\n//                item.setItemSelected(false);\n//            }\n//            return true;\n        if (item.getSubItems() != null) {\n            if (!item.isExpanded()) {\n\n//                    ViewCompat.animate(v.findViewById(R.id.material_drawer_icon)).rotation(180).start();\n                } else {\n//                    ViewCompat.animate(v.findViewById(R.id.material_drawer_icon)).rotation(0).start();\n                }\n                return mOnClickListener != null ? mOnClickListener.onClick(v, adapter, item, position) : true;\n            }\n        return mOnClickListener != null ? mOnClickListener.onClick(v, adapter, item, position) : false;\n\n\n    }\n};\n\nI've tried with many combination (using sepearate mPressed fields also for button press tracking). but it's not working.\nI've noticed that when item expands/collapse view  basket view 'rl_basket_container' listener get called once for 'item' and 'subitem' so when I tried to use 'mPressed' field it throws 'Cannot Cast Subitem to Item' error. As they're of different type.\nIn general, clicking basket icon works until item is not expanded. Since I guess, it selects item which changes whole basket icon color selection logic.\nThanks,\nSumit. Sure Mike, I'll send one working sample to your email id - mikepenz@gmail.com\nthank you so much.\n. Hi Mike,\nI've sent the sample app to you, please check. \nThanks.. Thank you so much Mike, it works now :)\n. sorry mike, I see different logic, actually I wanted to change color of shopping basket only when basket selected not item. when item selects it should just expand. I'll look into that. I got it working finally, thanks. \nYour kind help is much appreciated :). ",
    "AhmedDonkl": "@Rainer-Lang  sorry for that i was mistake in something and i want just to delete issue sorry for distribution. \n. ok @Rainer-Lang  my question was about what is best practice to make click listener on image inside item make it inside item class or callback and the solution i found it depend about what you want to do  the 2 ways is working. \nmy problem was about sending activity object to each item object which was bad but i found you can get context inside your item with this \nContext ctx = holder.itemView.getContext();\n.\n. ",
    "Christophe668": "I understand your point, I will also look for a better solution on my side. \nThanks for your feedback !\n. ",
    "markus2610": "The values mItems and items are always the same. I do not see the previous values, empty and add the new list, but where is the copy of the previous list. Have you tested it?\n. Ok\n. ",
    "ghost": "@mattiasbe @mikepenz I'm trying to add the inflated view to another view before binding, that's what I want to do. Can you help me with that?\n. @mikepenz If that won't be called, so it cannot help me; Is there any option to add inflated view to another inflated view and return that output view to ViewHolder?\nExample: MessageItem inflates R.layout.sub_layout to a View and passes to ViewHolder (that's the normal behavior). I want to add the inflated view to another manually inflated view before passing to ViewHolder and/or bindView()\n. @mikepenz I succeed to have both but the problem is when filtering, it filters successfully but shows wrongs items!\n. I figured out, thanks mike.\n. ",
    "SeyedAliFarjaD": "oh well, first thank for your awesome library.\nsorry i'm a rookie!\ni solve that problem. when i swipe an item, it will take back; because i dont change ...\n. i find another problem now. when i filter list and then insert an item to list, item insert into filter list and when remove filter item will remove too. how can solve this problem.\nThanks Alot ...\n. ok sry\n. ``` java\n//News_adapter is my model\nFastItemAdapter fastAdapter = new FastItemAdapter();\n//how compare\n  fastAdapter.withFilterPredicate(new IItemAdapter.Predicate() {\n            @Override\n            public boolean filter(News_adapter item, CharSequence charSequence) {\n                return !(item.date.contains(charSequence) || item.title.contains(charSequence));\n            }\n        });\n//filter code\n searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n             @Override\n             public boolean onQueryTextSubmit(String query) {\n                 return false;\n             }\n             @Override\n             public boolean onQueryTextChange(String newText) {\n                 fastAdapter.filter(newText);\n                 return false;\n             }\n         });\n//add item by refresherlayout\n    fastAdapter.add(item);\n//delete item by swap\n fastAdapter.remove(position);\n```\n. both romove and add dont work.\ni find this bug in your sample app too\n. i want add item into main list not filtered list\n. Thanks :)\n\ud83d\udc4d \n. there is anyway get items change in activity ?such row 3 had change and i change total number of my title\n. Thank you for your answer but i have 1 checkbox. I want all checked items add in another list.\nand when items from main list get checked or uncheck item change in another list.\n. ok, but when do that ?\nmy items select by button in viewholder\n. Thank you.\n. ",
    "shuufi": "I'm not too sure myself. I've changed to List<Any?>? and removing the override method also didn't resolve this. I guess it's because of Kotlin?\n. I've git a try with implementing the factory but I got the same result, still crashing at this method\njava\nvoid com.mikepenz.fastadapter.IItem.bindView(android.support.v7.widget.RecyclerView$ViewHolder, java.util.List)\nVisitByItem.kt.\nIf the library doesn't work with Kotlin yet, that's fine.\n. ",
    "Marty": "Thanks for your answers. That was indeed the functionality I was looking for!\n. ",
    "sosite": "Maybe an old answer but if you want to disable only item updating animations you can use below code:\njava\n((SimpleItemAnimator) recycler.getItemAnimator()).setSupportsChangeAnimations(false);. May be simillar to https://github.com/mikepenz/FastAdapter/issues/298. Default recycler animations (like position changes)\n. In my project I created something that join adding items with adding adapters. I can also in one place add my initial items (where normal beforeAdapter.add(...) doesn't work until FastAdapter.with().\nSo my final usage version looks like this:\n```java\n@Override\npublic void prepareCustomStructure(StructurePopulator populator) {\n    populator.addItem(new DummyModel(\"header 1\"));\n    populator.addItem(new DummyItem2(new DummyModel(\"header 2\")));\n    beforeAdapter = populator.addItemAdapter();\n    populator.addBaseItemAdapter();\n    afterAdapter = populator.addAdapter(new ItemAdapter<>(), new DummyModel(\"after 1\"), new DummyItem2(new DummyModel(\"after 2\"))));\n    populator.addItem(new DummyItem1(new DummyModel(\"footer\")));\n}\n@Override\nprotected void prepareConverters(ConvertersPopulator populator) {\n    populator.add(DummyModel.class, DummyItem1::new);\n}\n``\nFor now myStructurePopulatorautomagically create an item adapters when I add simpleIItemor use myConverterto convert data model forIItemobject. Maybe some kind of this addition will be nice in your lib?. I also simplify usage ofAbstractItemfor the simplest form as I found. I also prefer to bound views directly inViewHolder`:\n```java\nclass DummyModel implements Identifiable {\n    private final long someId;\nDummyModel(long someId) {\n    this.someId = someId;\n}\n\npublic String getStringValue() {\n    return String.valueOf(someId);\n}\n\n@Override\npublic long getId() {\n    return someId;\n}\n\n}\njava\nclass DummyItem extends ListItem {\n    public DummyItem(DummyModel dummyModel) {\n        super(dummyModel);\n    }\n@Override\npublic ItemHolder<DummyModel> getViewHolder(View view) {\n    return new ViewHolder(view);\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_dummy;\n}\n\nclass ViewHolder extends ItemHolder<DummyModel> {\n    public ViewHolder(View itemView) {\n        super(itemView);\n    }\n\n    @Override\n    protected void bindView(DummyModel dummyModel) {\n        ((TextView) getView()).setText(dummyModel.getStringValue());\n    }\n}\n\n}\n```. @mikepenz In my activity I have many nested lists so if I want to all items works perfectly fine and will be easy to maintenance I prefer then create few adapters for them:\n. @mikepenz HeaderHelper looks nice and it's almost what I need but I love to simplify this kind of stuff - so In place of custom management of additional type of class I just created HeaderAdapter \ud83d\ude09\nbtw - you can simplify this expression in HeaderHelper from:\njava\nif (headerItem != null) {\n    items.add(i + 1, headerItem);\n    i = i + 1;\n    size = size + 1;\n}\nto:\njava\nif (headerItem != null) {\n    items.add(++i, headerItem);\n    size++; // or ++size; or size += 1;\n}. _Management of additional type of class_ - I meant that some Juniors in our team prefer to learn as small type of classes as possible. So I think that it's better to use `HeaderAdapter` (which do the same) but you can forget  then about `HeaderHelper` which is some kind of _wrapper_ and save it to simple `IItemAdapter` field.. When I forgot and return `null` in place of `RecyclerView.ViewHolder` in `AbstractItem.getViewHolder(View)` then I received this error message:\njava.lang.NullPointerException: Attempt to read from field 'android.view.View android.support.v7.widget.RecyclerView$ViewHolder.itemView' on a null object reference\n    at com.mikepenz.fastadapter.FastAdapter.onCreateViewHolder(FastAdapter.java:620)\n```\nIt will be better if we can received there more unambiguous message like\n\nYou forget to return specific ViewHolder in class.getSimpleName(). @mikepenz You are sure about that? AbstractItem.java#L302\n\nAnd I still think that extra message will be nice there ;). Ok - finally I think that the 2nd ViewHolder is more natural way to reusing holders ;) You can closed this issue I think. I change implementation of ListItem to this but unfortunately all items still have binding to the first handler:\n```java\npublic class ListItem extends AbstractItem implements IHookable {\n    private final Handler handler;\n    private final String string;\npublic ListItem(String string, Handler handler) {\n    this.string = string;\n    this.handler = handler;\n}\n\n...\n\npublic ViewHolder getViewHolder(View view) {\n    return new ViewHolder(view, handler);\n}\n\npublic void bindView(ViewHolder holder, List<Object> payloads) {\n    super.bindView(holder, payloads);\n    holder.bindView(string);\n}\n\n@Override\npublic List<EventHook<ListItem>> getEventHooks() {\n    return Collections.singletonList(new ClickEventHook<ListItem>() {\n        @Nullable\n        @Override\n        public View onBind(RecyclerView.ViewHolder viewHolder) {\n            if (viewHolder instanceof ViewHolder) {\n                return ((ViewHolder) viewHolder).textView;\n            } else {\n                return null;\n            }\n        }\n\n        @Override\n        public void onClick(@NonNull View view, int position, @NonNull FastAdapter<ListItem> fastAdapter, @NonNull ListItem item) {\n            handler.onItemClick(); // should be item.handler.onItemClick() - see comment below\n        }\n    });\n}\n\nstatic class ViewHolder extends RecyclerView.ViewHolder {\n    private final TextView textView;\n    private final Handler handler;\n\n    ViewHolder(View view) {\n        super(view);\n        textView = (TextView) view.findViewById(android.R.id.text1);\n    }\n\n    void bindView(String string) {\n        textView.setText(string);\n    }\n}\n\npublic interface Handler {\n    void onItemClick();\n}\n\n}\n. After change `handler.onItemClick()` to `item.handler.onItemClick()` all things start works fine:java\n@Override\npublic void onClick(@NonNull View view, int position, @NonNull FastAdapter fastAdapter, @NonNull ListItem item) {\n    item.handler.onItemClick();\n}\n``. @FabianTerhorst I guess you can't reproduce it by simple create 2 item adapters as I describe in #491 and remove item from the 2nd one?. It looks promising but I need some free time to check it, probably in next week ok? ;). 1. What's the purpose of theList payloads`?\n\n\nI know that you implement click listeners by fastAdapter.withOnClickListener() and fastAdapter.withEventHook() earlier but I think that's against OOP because we have click implementations in different place that we hold our view holders. I think it'll be better to handle it as close to views as possible.\n\n\n\nif FastAdapter.ViewHolder is used, the callbacks on the item are not used\n\n\nSo, if we really can use our OnClickListeners directly on ViewHolder views:\n```java\npublic MyViewHolder(View view) {\n    super(view);\n    view.setOnClickListener(this);\n}\n@Override\npublic void onClick(View view) {\n    // do your stuff here\n}\n```\nit will simplify much things :)\n\n\nI also propose to add more functions to ViewHolder:\n```java\nprivate Item item;\n\n// also used by OnBindViewHolderListenerImpl in addition to bindView(item);\npublic final void bindItem(Item item) {\n    this.item = item;\n}\nprotected final Item getItem() {\n    return this.item;\n}\nprotected final View getView() {\n    return itemView;\n}\nprotected final Context getContext() {\n    return itemView.getContext();\n}\n```\n\n\nAs extras we can have\n```java\npublic static abstract class ClickableViewHolder extends ViewHolder {\nprivate Handler handler;\n\n// also used by OnBindViewHolderListenerImpl in addition to bindItem(item) and bindView(item);\npublic final void bindHandler(Handler handler) {\n    this.handler = handler;\n}\nprotected final Handler getHandler() {\n    return this.handler;\n}\n```\nand in implementation:\n```java\ninterface MyHandler {\n    void doStuff(MyItem item);\n}\npublic static class MyClickableHolder extends ClickableViewHolder {\n    ...\n@Override\npublic void onClick(View view) {\n    getHandler().doStuff(getItem());\n}\n\n}\n```\n\nOR in place of calling bindItem(); bindHandler(); bindView(); we can simply use:\n```java\n// used in place of bindView(item);\npublic final void bindItem(Item item) {\n    this.item = item;\n    bindView(item);\n}\nprotected abstract void bindView(Item item);\n```\nand in ClickableViewHolder\njava\n// used in place of bindItem(item);\npublic final void bindItem(Item item, Handler handler) {\n    this.handler = handler;\n    super.bindItem(item);\n}. ",
    "antoniogoncalves92": "Please i would like to know how can i implement click listener on button outside of my item adapter. ",
    "WonderCsabo": "I will try to create a reproducing sample project next week.\n. @mikepenz i created the sample project, you can check it out here.\n. This is not really a solution for me. \ud83d\ude22  You just changed the type of the returned item from fastItemAdapter.getSelectedItems().iterator().next(), and also the generic type parameter of the adapter, right?\nThis way the crash indeed does not occur, but i will still get the wrong item.\nAre you sure you understood the problem? Maybe it was not clear.\nThe problem is that i indeed should have get one of the top-level items as selected, but fastadapter wrongly returns a subitem as selected.\n. Please try the sample app i provided, i wrote steps to reproduce the problem. You select the top level items in the sample app, and it still returns the subitem as selected, however the subitems were never selected actually, only the top-level ones. I debugged through the code, and i think the problem is that fastadapter selects a wrong item, because of the collapsing the indices are changing.\n. Thank you!\n. Thanks for the fix and also for updating the sample project! I guess nobody\nused this set up before, that is why it remained unnoticed. \u263a\ufe0f\n. Thanks! However there are still lots if places where you should fix this. Most importantly, IItem and its subtypes (i was actually referring to those in the OP).\n. @Rainer-Lang i did, but i do not understand why are you asking this here?\n. Yes, i know, and my comment is valid.\n. Yep, I can implement this.\n. However i can only start on Wednesday, i do not know when do you want to release 2.1.\n. ",
    "kolorszczak": "I added identifiers to all the item and method of which you wrote. Now everything works as it should. Thank you :)\n. ",
    "rakesh1988": "Sorry I did not understand how to implement \"set and switch out the items in your footer\". As per my understanding once I set the footer, the getType() would  return the same layout every time. How can I show different layouts on need basis? Sorry if this question looks dumb.\n. When my RecyclerView is trying to show the FooterAdapter, it gives a casting exception. This is because return fastAdapter.getTypeInstance(viewType).getViewHolder(parent); always returns item of type what ever was bound to fastAdapter object. How can I return the ViewHolder of my FooterAdapter\n. I think I found out what I was looking for...\n@Override\n    public RecyclerView.ViewHolder onPreCreateViewHolder(ViewGroup parent, int viewType) {\n        switch (viewType) {\n            case R.id.footer_type:\n                //return footer view holder\n            default:\n                //return default item type\n        }\n    }\n. @mikepenz as always thanks for your prompt reply.\nI have a button in my activity and i have registered an onClick event on this button using ButterKnife.\nAlso this item has a checkbox whose visibility is hidden. I had registered a click event on this checkbox. \nNow that I have disabled every click even in the activity. Still the onClick event is not fired.\ngist here https://gist.github.com/anonymous/c82484f631d8ac743aff61015feb8ac4 \nI have removed business logic to make it look simpler\n. gist here https://gist.github.com/anonymous/c82484f631d8ac743aff61015feb8ac4\nI have removed business logic to make it look simpler\n. @mikepenz you are totally right.. problem was in my layout XML \ud83d\udc4d I had a image which was clickable\n. so the \nonClick(View view, int position, FastAdapter fastAdapter, IItem item)\nwill react only for those that i return via onBindMany() ?\nHow do i differentiate view inside onClick? because I dont have a viewHolder object to compare with. so, if i have 5 buttons in my IItem, I need to do a  mFastAdapter.withItemEvent 5 times?\nSorry if I am asking dumb questions . Thank you very much..\nwas there any rationale behind deprecating the mClickListenerHelper.listen method?. OMG!!!! this is exactly what I was looking for :)\n. Thank you very much for the quick reply. In continuation to the doubt, I have another problem. I need your help in debugging further. Once I do a adapter.add(new Item(item)); ,  getLayoutRes() method in my Item class never gets called. Only getType() is called. What can be the reason. Due to this, my recyclerview never shows up.. This is how I am initialising and adding data to RV.\nRV is visible and is declared as \n```\n \n            <android.support.v7.widget.RecyclerView\n                android:id=\"@+id/rv_bottom_sheet_store_comments\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                />\n        </android.support.v4.widget.NestedScrollView>\n\n```\n```\n    private void loadLatestCommentsToRecyclerView(String storeId)\n    {\n    mCommentRecyclerView.setHasFixedSize(true);\n\n    mCommentRecyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext(), LinearLayoutManager.VERTICAL, false));\n    mCommentRecyclerView.setItemAnimator(new DefaultItemAnimator());\n    mCommentRecyclerView.setAdapter(mStoreCommentFastAdapter);\n\n    Call<List<StoreComment>> call = new D2hApiHelper().\n            getStoreComments(storeId);\n    call.enqueue(new Callback<List<StoreComment>>()\n    {\n\n        @Override\n        public void onResponse(Call<List<StoreComment>> call, Response<List<StoreComment>> response)\n        {\n            Timber.d(\"I got all comments\");\n            for (StoreComment comment :\n                    response.body())\n            {\n                mStoreCommentFastAdapter.add(new StoreCommentItem(comment));\n            }\n        }\n\n        @Override\n        public void onFailure(Call<List<StoreComment>> call, Throwable t)\n        {\n            if (t instanceof HttpException)\n            {\n\n            }\n            Timber.e(\"unable to get data\");\n            Timber.e(t);\n        }\n    });\n}\n\n```. I have tried without butterknife. it is the same behavior. I'm perplexed.. I got the issue. I created another plain old adapter and it worked perfectly. only difference was i was setting \"setHasFixedSize(true)\" on the RV when using fast adapter. I removed it and it works fine now. But how can setHasFixedSize affect this behavior? I am not understanding . ",
    "veeranath": "http://stackoverflow.com/questions/39832543/fastadapter-postion  sir please check this i had posted the question in stack overflow \nthe button in the adapter sir please see this screenshot https://snag.gy/QkulbZ.jpg\n. Is this right sir? but the difference between them sir\n```\nlikeList_adapter.withItemEvent(new ClickEventHook() {\n            @Override\n            public void onClick(View v, int position, FastAdapter fastAdapter, LikeList_Adapter item) {\n                Toast.makeText(Like_List.this,\"Like Button\", Toast.LENGTH_SHORT).show();\n            }\n        @Nullable\n        @Override\n        public View onBind(@NonNull RecyclerView.ViewHolder viewHolder) {\n            if (viewHolder instanceof LikeList_Adapter.LikeList_ViewHolder){\n                return ((LikeList_Adapter.LikeList_ViewHolder)viewHolder).itemView.findViewById(R.id.likebutton);\n            }\n            return null;\n        }\n    });\n    likeList_adapter.withItemEvent(new ClickEventHook<LikeList_Adapter>() {\n        @Override\n        public void onClick(View v, int position, FastAdapter<LikeList_Adapter> fastAdapter, LikeList_Adapter item) {\n            Toast.makeText(Like_List.this,\"Unlike Button\", Toast.LENGTH_SHORT).show();\n        }\n\n        @Nullable\n        @Override\n        public View onBind(@NonNull RecyclerView.ViewHolder viewHolder) {\n            if (viewHolder instanceof LikeList_Adapter.LikeList_ViewHolder){\n                return ((LikeList_Adapter.LikeList_ViewHolder)viewHolder).itemView.findViewById(R.id.unlikebutton);\n            }\n            return null;\n        }\n    });\n\n```. thank u sir. If i add its repeating in every item sir. I had kept the text view in the Adapter class for header value  sir and i am getting this error sir. Solved It Sir Thank You. ",
    "gotev": "@mikepenz thank you for the quick response. I've already seen that post on stackoverflow, but my problem is that I have complex items inside the fast adapter, and I also have many different kinds of items, so the above method is not suitable in my case, because I need to do different things based on the view on which I click on. Example:\n\nIf you have further suggestions, you're welcome. Also, can you tell me what you intend to do to simplify this for 2.x.x? Maybe I can help with some ideas or implementations\n. ",
    "rafakob": "\nIf you have an endpoint which gives you items for section 2, the best would be that you just remove the item range from section 2 -> section 3 and readd the new list of items at this position. This won't change any other items other than those.\n\nYes, that's what I'm currently doing (remove items from section 2 and add there new ones). The problem is that I have to iterate through the whole adapter and find where section 2 starts and ends (using instanceof). I was just wondering if there's any better solution.  I thought about adding expandable interface to TitleItem and just replace subitems there (TitleItem would be always expanded). What do you think about it?\n\nFor the rest. If you refresh the whole list, and get a new (new is important, don't update the items in the list you set in the beginning of the adapter, as it will not allow the diffutil to work)\n\nLet's take for instance a download manager application. On main screen you have a list of files that you are downloading and you have to automatically refresh it every 5 seconds (to update download percentage value). Should I use adapter.set(List) on every refresh? I want to avoid \"blinking\" effect, on change animation. Also scroll position should be retained on each refresh (don't scroll at the top of the list).\n. Ok, thanks for the tips! \ud83d\udc4d \n. ",
    "kwf2030": "Thanks for all your help, and I found this helpful: https://github.com/daimajia/AndroidSwipeLayout\n. ",
    "alexismanet": "Thank you, I may not understand completely at first, but CheckBoxClickEvent  works fine for me.\n. ",
    "siper": "Ok update libs helps me, thank you.\n. ",
    "MatthieuFereyre": "A big thanks ! It works perfectly !\n. ",
    "eskandarpour": "Sorry, my bad! The problem is I was adding FadeInFadeOut effect to UIL\n. ",
    "franci22": "Thanks! And what about unbindView?\n. \n. This is my code right now:\n```\nimport android.support.v7.widget.RecyclerView;\nimport android.view.View;\nimport android.widget.TextView;\nimport com.franci22.supersecureencryption.R;\nimport com.mikepenz.fastadapter.items.AbstractItem;\nimport java.util.List;\npublic class ListItem extends AbstractItem {\npublic String name;\npublic String description;\n\n//The unique ID for this type of item\n@Override\npublic int getType() {\n    return R.id.list_item_id;\n}\n\n//The layout to be used for this type of item\n@Override\npublic int getLayoutRes() {\n    return R.layout.list_item;\n}\n\n//The logic to bind your data to the view\n@Override\npublic void bindView(ViewHolder viewHolder, List payloads) {\n    //call super so the selection is already handled for you\n    super.bindView(viewHolder, payloads);\n\n    //bind our data\n    //set the text for the name\n    viewHolder.name.setText(name);\n    //set the text for the description or hide\n    viewHolder.description.setText(description);\n}\n\n@Override\npublic void unbindView(ViewHolder holder) {\n\n    super.unbindView(holder);\n    holder.name.setText(null);\n    holder.description.setText(null);\n}\n\n\n//The viewHolder used for this item. This viewHolder is always reused by the RecyclerView so scrolling is blazing fast\nprotected static class ViewHolder extends RecyclerView.ViewHolder {\n    protected TextView name;\n    protected TextView description;\n\n    public ViewHolder(View view) {\n        super(view);\n        this.name = (TextView) view.findViewById(R.id.material_drawer_name);\n        this.description = (TextView) view.findViewById(R.id.material_drawer_description);\n    }\n}\n\n}\n```\n. ",
    "akhilps": "Error:(25, 5) error: method does not override or implement a method from a supertype i have an error woud you pls help.    @Override\n    public Map getparams(){\n        return paramas;\n    }\n}\nthe above is my code\n. i cannot understand plz help me whats\n i have to do. package com.example.akhil.loginregister;\n/*\n * Created by AKHIL on 21-Apr-17.\n /\nimport com.android.volley.Response;\nimport com.android.volley.toolbox.StringRequest;\nimport java.util.HashMap;\nimport java.util.Map;\nclass RegisterRequest extends StringRequest{\nprivate static final String REGISTER_REQUEST_URL=\"\";\nprivate Map<String,String> paramas;\n\npublic RegisterRequest(String name,String username,int age,String password,Response.Listener<String> listener) {\n    super(Method.POST,REGISTER_REQUEST_URL, listener,null);\n    paramas=new HashMap<>();\n    paramas.put(\"name\",name);\n    paramas.put(\"username\",username);\n    paramas.put(\"password\",password);\n    paramas.put(\"age\",age+\"\");\n}\n@Override\npublic Map<String,String>getparams(){\n    return paramas;\n}\n\n}\nthis is my code and i have an error in @override the error \n. ok thanku. ",
    "darsanpatel8311": "\nPlease Solve This Error. ",
    "AliYusuf95": "Hi @mikepenz,\nI face same problem, when I click on item nothing happen.\nThis is my code:\nservicesList.setHasFixedSize(true);\nservicesList.setItemAnimator(new DefaultItemAnimator());\nservicesList.setLayoutManager(new LinearLayoutManager(this));\nfastAdapter.withSelectable(true);\nfastAdapter.withOnClickListener(new FastAdapter.OnClickListener<Service>() {\n    @Override\n    public boolean onClick(View v, IAdapter<Service> adapter, Service item, int position) {\n        Logger.d(position);\n        return true;\n    }\n});\nfastAdapter.clear().add(groupOfServices.getServices());\nservicesList.setAdapter(fastAdapter);\nService model:\n```\npublic static class Service extends AbstractItem {\n    @SerializedName(\"_id\")\n    @Expose\n    private String id;\n    @SerializedName(\"name\")\n    @Expose\n    private String name;\n\n    public Service(String id, String name) {\n        this.id = id;\n        this.name = name;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    @Override\n    public int getType() {\n        return 0;\n    }\n\n    @Override\n    public int getLayoutRes() {\n        return R.layout.row_service;\n    }\n\n    @Override\n    public void bindView(ViewHolder viewHolder, List<Object> payloads) {\n        super.bindView(viewHolder, payloads);\n        viewHolder.name.setText(name);\n    }\n\n    @Override\n    public void unbindView(ViewHolder holder) {\n        super.unbindView(holder);\n        holder.name.setText(null);\n    }\n\n    public static class ViewHolder extends RecyclerView.ViewHolder {\n        protected @BindView(R.id.service_name) TextView name;\n\n        public ViewHolder(View view) {\n            super(view);\n            ButterKnife.bind(this, view);\n        }\n    }\n\n    /**\n     * Override this variable from {@link AbstractItem} to make {@link Gson}\n     * works perfectly.\n     */\n    private transient ViewHolderFactory<? extends ViewHolder> mFactory;\n\n    /**\n     * Override this method to use {@link #mFactory}\n     */\n    @Override\n    public Service withFactory(ViewHolderFactory<? extends ViewHolder> factory) {\n        this.mFactory = factory;\n        return this;\n    }\n\n    /**\n     * Override this method to use {@link #mFactory}\n     */\n    @Override\n    public ViewHolderFactory<? extends ViewHolder> getFactory() {\n        if (mFactory == null) {\n            try {\n                this.mFactory = new ReflectionBasedViewHolderFactory<>(viewHolderType());\n            } catch (Exception e) {\n                throw new RuntimeException(\"please set a ViewHolderFactory\");\n            }\n        }\n        return mFactory;\n    }\n\n}\n\nand this is the XML layout:\n\n<TextView\n    android:id=\"@+id/service_name\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"80dp\"\n    android:textAppearance=\"?android:attr/textAppearanceMedium\"\n    android:text=\"Medium Text\"\n    android:textColor=\"@color/colorPrimary\"\n    android:background=\"@drawable/edittextme2\"\n    android:gravity=\"center\"\n    android:layout_margin=\"20dp\"\n    android:textSize=\"37sp\"\n    />\n\n\n``. @mikepenz  A debug log with position number, even if I put a Toast message nothing shown to me.. I had test the adapter in other app that's implements [SuperRecyclerView ](https://github.com/Malinskiy/SuperRecyclerView), it's work perfectly with same overrides and even without setwithSelectabletotrue`.\nCan you tell me what are the cases that would prevent withOnClickListener from fired so I find the reason from my side.. @mikepenz I found what's wrong with my approach, a just add a default constructor and make mSelectable true.. ",
    "androideen": "I had the same issue. onClick is never trigged. And, how to know if a checkbox is clicked? \nfastItemAdapter.withOnClickListener(new FastAdapter.OnClickListener<CheckBoxFeedItem>() {\n            @Override\n            public boolean onClick(View v, IAdapter<CheckBoxFeedItem> adapter, CheckBoxFeedItem item, int position) {\n                Log.d(\"CHECKBOX\", item.isSelected() + \"\");\n                return false;\n            }\n        });. ",
    "mochadwi": "did you mean fetching the position on the callback inside \"if (view instanceof CheckBox)\"?\n@FabianTerhorst @or-dvir . ",
    "niyasmohaideen": "Thanks Mike for the quick reply. Let me try with specific notify methods.. ",
    "steventxc": "@mikepenz\nhere is my demo project\nI want add code dynamically in the AbstractWrapAdapter, every 10 lines add a sector view, the snippet of MyAbstractWrapAdapter \n```\n@Override\n    public boolean shouldInsertItemAtPosition(int position) {\n        // every 10 rows\n        int flag = (position + 1) % (SPAN);\n    if (flag == 0) {\n        // I want to add item dynamically here, so it will increase with data in the main adapter\n        SectorItem item = new SectorItem(\"Sector \" + mList.size());\n        mList.add((Item) item);\n        return true;\n    }\n\n    return false;\n}\n\n@Override\npublic int itemInsertedBeforeCount(int position) {\n    // TODO: 16/11/25  I'm not sure this is the best way\n\n    for (int i = 0; ; i++) {\n        int span = SPAN * (i + 1) + i;\n        if (position < span) {\n            return i;\n        }\n    }\n\n}\n\nbut clicked event is wrong, and caused `IndexOutOfBoundsException `. @mikepenz Thanks for your help! \nbut there is a bug. I found the last element always be omitted. \nin class `AbstractWrapAdapter`, I think the below method caused the bug. here passed the original adapter's dataset size, but it not always equals to the position of the last item.\n    @Override\n    public int getItemCount() {\n        int itemCount = mAdapter.getItemCount();\n        return itemCount + itemInsertedBeforeCount(itemCount);\n    }\n```\nI also update my demo project, and my solution is below\n`````\n@Override\n    public int getItemCount() {\n        int itemCount = getAdapter().getItemCount();\n    int temp = itemCount / (SPAN - 1);\n    if (itemCount % (SPAN - 1) == 0)\n        temp --;\n\n    return itemCount + temp;\n}\n\n`````. ",
    "nikitamarysoloman": "https://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/ExpandableSampleActivity.java\nwhen iam clicking on the items in the list with subitem it is getting expanded iam not able to stop this. Instead of this I want to expand its subitems on click of the rotating button in your design. Which is not working. So Please suggest how do expanding and collapsing of sub items in expandableitems on click of a button or view inside the item.. Thank you for the reply\n fastItemAdapter.withOnCreateViewHolderListener(new FastAdapter.OnCreateViewHolderListener() {\n            @Override\n            public RecyclerView.ViewHolder onPreCreateViewHolder(ViewGroup parent, int viewType) {\n            return fastItemAdapter.getTypeInstance(viewType).getViewHolder(parent);\n        }\n\n        @Override\n        public RecyclerView.ViewHolder onPostCreateViewHolder(RecyclerView.ViewHolder viewHolder) {\n            viewHolder.itemView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    Log.e(\"removed\",\"expand on item click\");\n                }\n            });\n\n//                viewHolder.itemView.performClick();\n            return viewHolder;\n        }\n    });\n\nI hav stopped the it.\nnow it is not expanding / collapsing on item click.\nbut i want on click of that rotating icon your code.\nhttps://github.com/mikepenz/FastAdapter/blob/develop/app/src/main/java/com/mikepenz/fastadapter/app/items/expandable/SimpleSubExpandableItem.java#L77\nwant to expand  / collapsing on that icon (rotating up and down arrow)click.\nPlease help.\nyour code for expand  / collapsing if iam not wrong is the below one in fast adapter. Can i set a view on click of which this should happen..?\n```\n  holder.itemView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                int pos = getHolderAdapterPosition(holder);\n                if (pos != RecyclerView.NO_POSITION) {\n                    boolean consumed = false;\n                    RelativeInfo relativeInfo = getRelativeInfo(pos);\n                    Item item = relativeInfo.item;\n                    if (item != null && item.isEnabled()) {\n                        //on the very first we call the click listener from the item itself (if defined)\n                        if (item instanceof IClickable && ((IClickable) item).getOnPreItemClickListener() != null) {\n                            consumed = ((IClickable) item).getOnPreItemClickListener().onClick(v, relativeInfo.adapter, item, pos);\n                        }\n                    //first call the onPreClickListener which would allow to prevent executing of any following code, including selection\n                    if (!consumed && mOnPreClickListener != null) {\n                        consumed = mOnPreClickListener.onClick(v, relativeInfo.adapter, item, pos);\n                    }\n\n                    //handle the selection if the event was not yet consumed, and we are allowed to select an item (only occurs when we select with long click only)\n                    //this has to happen before expand or collapse. otherwise the position is wrong which is used to select\n                    if (!consumed && !mSelectOnLongClick && mSelectable) {\n                        handleSelection(v, item, pos);\n                    }\n\n                    //if this is a expandable item :D (this has to happen after we handled the selection as we refer to the position)\n                    if (!consumed && item instanceof IExpandable) {\n                        if (((IExpandable) item).isAutoExpanding() && ((IExpandable) item).getSubItems() != null) {\n                            toggleExpandable(pos);\n                        }\n                    }\n\n                    //if there should be only one expanded item we want to collapse all the others but the current one (this has to happen after we handled the selection as we refer to the position)\n                    if (!consumed && mOnlyOneExpandedItem) {\n                        int[] expandedItems = getExpandedItems();\n                        for (int i = expandedItems.length - 1; i >= 0; i--) {\n                            if (expandedItems[i] != pos) {\n                                collapse(expandedItems[i], true);\n                            }\n                        }\n                    }\n\n                    //before calling the global adapter onClick listener call the item specific onClickListener\n                    if (!consumed && item instanceof IClickable && ((IClickable) item).getOnItemClickListener() != null) {\n                        consumed = ((IClickable<Item>) item).getOnItemClickListener().onClick(v, relativeInfo.adapter, item, pos);\n                    }\n\n                    //call the normal click listener after selection was handlded\n                    if (!consumed && mOnClickListener != null) {\n                        mOnClickListener.onClick(v, relativeInfo.adapter, item, pos);\n                    }\n                }\n            }\n        }\n    });\n\nplease reply\nUntitled Document 1.docx\n. Untitled Document 1.docx\naccording to your reply I have commented those on click codes but still the expand and collapse where working\n . through API call, this issue is fixed by initially using adapterFastItemAdapter.setnewlist(list) and then on scroll adapterFastItemAdapter.add(list);. ",
    "victor5171": "I'm writing a chat app, so i add an item to the header adapter warning the user that the other user is typing a message (similar to the Facebook Messenger), and the crash occurs when the message is received.\nThe arrived message is added on the main thread, a few seconds after the header item was added.. Yes, for the header adapter:\nheaderAdapter.add(writingItem);\nAnd for the FastItemAdapter (the chat messages):\nchatItemAdapter.add(0, chatItem). Hi @mikepenz ! any updates on this?\nThanks!. Mike, i've cloned the library and the following line is throwing the exception:\nItemAdapter::add:382 mItems.addAll(position - getFastAdapter().getPreItemCountByOrder(getOrder()), items);\nWhile i was debugging, and looking, this statement returns -1. But the mItems List just contains only the FastItemAdapter items, not the HeaderAdapter items, so isn't it correct to just remove the getFastAdapter().getPreItemCountByOrder and insert the item in the real position? What is it doing?\nI've changed the line to mItems.addAll(position, items); and issue is solved.. It's easy. You only need to use a composed adapter with a header, a footer and a fastItemAdapter.\nThen you insert an item in the  header adapter and after that you should insert  an item to the fastItemAdapter to the 0 position.\nLike that: fastItemAdapter.add(0, Item)\nThe getPreItem calculation will return 1 because it counts the only existing header item and stops on the fastItemAdapter (order=500)\nPosition=0 - 1.\nHope it will help you.. Ok! Thanks!\nYou will try it.\nI thought  that the adapters use a local index, so 0 meant 1.\nEverywhere i insert an item in a specific index i will change using this safest approach.\nAnyway, thanks.. ",
    "renanferrari": "\nThis decision was made to make sure we have a correct and clear api for all methods, and no jumping.\n\nDo you mind explaining that in more details? I find this API very counterintuitive as it is.. ",
    "IlyaGulya": "@mikepenz I think you can add this to roadmap for next major release, for example. Yeah, i've already seen them. Cool, thank you! . How about to add this issue to roadmap? #285 . ",
    "tilmanginzel": "Here's a blog article, maybe it will help: http://blog.grafixartist.com/recyclerview-adapter-android-made-fast-easy/. ",
    "hamdache202": "try adding \"rv.setLayoutManager(new LinearLayoutManager(this));\" before setting adapter.. thak you.. ",
    "hannta": "Thanks @mikepenz . ",
    "ng5": "I had following use case, just like gmail app.\nLong Press activated - Allow actions like delete. (On the selected items).\nLong Press deactivated - Allow onClick on drill down into single item on the list.\nI ran into this issue today, Following solution works for me. You can define a boolean flag longPressActivated inside your fragment. Pass this fragment to ActionBarCallBack, toggle on \nonCreateActionMode and off on onDestroyActionMode. Then you can easily check this flag in your listeners (For OnClick or OnLongClick).\npublic class ActionBarCallBack implements ActionMode.Callback {\n    protected BaseListFragment handle;\n\n    public ActionBarCallBack(BaseListFragment handle) {\n        this.handle = handle;\n    }\n\n    @Override\n    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n        if (item.getItemId() == R.id.item_delete) {\n            processLongPress(item);\n            mode.finish();\n        } else if (item.getItemId() == R.id.item_save || item.getItemId() == R.id.item_save_all) {\n            processLongPress(item);\n            mode.finish();\n        }\n        return true;\n    }\n\n    @Override\n    public boolean onCreateActionMode(ActionMode mode, Menu menu) {\n        handle.longPressActivated = true;\n        return true;\n    }\n\n    @Override\n    public void onDestroyActionMode(ActionMode mode) {\n        handle.longPressActivated = false;\n    }\n\n    @Override\n    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\n        return false;\n    }\n}.\n",
    "eygraber": "Should a new project using FastAdapter use the snapshots from v3, or is it unstable?. @mikepenz it only uses DiffUtil for filtering. It actually uses SortedList.Callback to do an insertion binary sort, and notify the adapter about insertions, removals, etc... It also has the ability to sort across view types. Because the list is always guaranteed to be sorted, it also provides an optimized way to:\n\nreplace all items\nreplace all items of a certain view type\nupdate and remove an item without knowing its position\n\nwhile keeping track of what to notify the adapter about (notifyDataSetChanged is never used).\nThere is also an UnsortedAdapter that uses DiffUtil but the only really useful feature there is notifying the adapter on replace calls.. @mikepenz I started looking into this, and I think the most correct solution would be for me to create a SortedFastItemAdapter and SortedItemAdapter. The problem is that SortedItemAdapter would have to recreate the whole ItemAdapter class because the list is an implementation detail.\nWould you be open to a PR that abstract the list out of ItemAdapter and puts it behind a ItemList interface? Then it would make it easy to swap out list behavior in ItemAdapter.. @mikepenz what about making ItemAdapter.mItems protected? The issue with a separate IItemAdapter is that SortedItemAdapter would have to re-implement things like filtering, etc... that ItemAdapter already does. . @mikepenz congrats on the v3 release!\nNow that I don't have to worry about large scale breaking changes, would you be open to a PR making the list in ModelAdapter pluggable? It would make things like auto sorting lists easier.\nIn my app I've basically created my own version of FastAdapter and FastItemAdapter to suit my needs, and I use this to store the items:\n```\ninterface ItemListStrategy> {\n  var listCallback: ListUpdateCallback?\nval size: Int\noperator fun get(position: Int): Item\n  fun getAll(): List\nfun add(item: Item)\n  fun add(position: Int, item: Item)\n  fun addAll(items: List)\n  fun addAll(position: Int, items: List)\nfun set(position: Int, item: Item)\n  fun set(items: List)\nfun update(item: Item)\n  fun update(oldItem: Item, newItem: Item)\nfun remove(item: Item): Boolean\n  fun remove(position: Int): Item\n  fun clear()\nfun getAdapterPosition(item: Item): Int\n  fun getAdapterPosition(identifier: Long): Int\n}\n```\nThat allows me to specify a standard implementation:\n```\nclass SimpleItemListStrategy>(\n    initialList: List? = null\n) : ItemListStrategy {\n  private val items = if(initialList == null) ArrayList() else ArrayList(initialList)\noverride var listCallback: ListUpdateCallback? = null\noverride val size get() = items.size\noverride fun get(position: Int) = items[position]\noverride fun getAll() = ArrayList(items)\noverride fun add(item: Item) {\n    val insertionPos = items.size\n    items.add(item)\n    listCallback?.onInserted(insertionPos, 1)\n  }\noverride fun add(position: Int, item: Item) {\n    items.add(position, item)\n    listCallback?.onInserted(position, 1)\n  }\noverride fun addAll(items: List) {\n    val insertionPos = this.items.size\n    if(this.items.addAll(items)) {\n      listCallback?.onInserted(insertionPos, items.size)\n    }\n  }\noverride fun addAll(position: Int, items: List) {\n    if(this.items.addAll(position, items)) {\n      listCallback?.onInserted(position, items.size)\n    }\n  }\noverride fun set(position: Int, item: Item) {\n    items[position] = item\n    listCallback?.onChanged(position, 1, null)\n  }\noverride fun set(items: List) {\n    val newItemsCount = items.size\n    val currentItemsCount = this.items.size\nthis.items.clear()\nthis.items.addAll(items)\n\nlistCallback?.let { listCallback ->\n  when {\n    newItemsCount > currentItemsCount -> {\n      if (currentItemsCount > 0) {\n        listCallback.onChanged(0, currentItemsCount, null)\n      }\n      listCallback.onInserted(currentItemsCount, newItemsCount - currentItemsCount)\n    }\n    newItemsCount == 0 -> listCallback.onRemoved(0, currentItemsCount)\n    newItemsCount < currentItemsCount -> {\n      listCallback.onChanged(0, newItemsCount, null)\n      listCallback.onRemoved(newItemsCount, currentItemsCount - newItemsCount)\n    }\n    else -> listCallback.onChanged(0, newItemsCount, null)\n  }\n}\n\n}\noverride fun update(item: Item) {\n    val pos = getAdapterPosition(item)\n    if(pos >= 0) {\n      items[pos] = item\n      listCallback?.onChanged(pos, 1, null)\n    }\n  }\noverride fun update(oldItem: Item, newItem: Item) {\n    val pos = getAdapterPosition(oldItem)\n    if(pos >= 0) {\n      items[pos] = newItem\n      listCallback?.onChanged(pos, 1, null)\n    }\n  }\noverride fun remove(item: Item): Boolean {\n    val pos = getAdapterPosition(item)\n    return if (pos >= 0) {\n      items.removeAt(pos)\n      listCallback?.onRemoved(pos, 1)\n      true\n    } else {\n      false\n    }\n  }\noverride fun remove(position: Int): Item {\n    return items.removeAt(position).apply {\n      listCallback?.onRemoved(position, 1)\n    }\n  }\noverride fun clear() {\n    val size = items.size\n    items.clear()\n    listCallback?.onRemoved(0, size)\n  }\noverride fun getAdapterPosition(item: Item) = getAdapterPosition(item.identifier)\noverride fun getAdapterPosition(identifier: Long): Int {\n    items.forEachIndexed { index, item ->\n      if(item.identifier == identifier) return index\n    }\nreturn -1\n\n}\n}\n```\nand a sorted one:\n```\nclass SortedItemListStrategy>(\n    initialList: List? = null,\n    clazz: Class,\n    private val callback: Callback\n) : ItemListStrategy {\n  interface Callback> {\n    fun compare(lhs: Item, rhs: Item): Int\nfun isChanged(oldItem: Item, newItem: Item): Boolean\n\nfun areEqual(o1: Item, o2: Item): Boolean\n\n}\nprivate val sortedListCallback = object : SortedList.Callback() {\n    override fun areContentsTheSame(oldItem: Item, newItem: Item) = !callback.isChanged(oldItem, newItem)\noverride fun areItemsTheSame(item1: Item, item2: Item) = callback.areEqual(item1, item2)\n\noverride fun compare(o1: Item, o2: Item) = callback.compare(o1, o2)\n\noverride fun onInserted(position: Int, count: Int) { listCallback?.onInserted(position, count) }\n\noverride fun onChanged(position: Int, count: Int) { listCallback?.onChanged(position, count, null) }\n\noverride fun onChanged(position: Int, count: Int, payload: Any?) { listCallback?.onChanged(position, count, payload) }\n\noverride fun onMoved(fromPosition: Int, toPosition: Int) { listCallback?.onMoved(fromPosition, toPosition) }\n\noverride fun onRemoved(position: Int, count: Int) { listCallback?.onRemoved(position, count) }\n\n}\nprivate val items: SortedList =\n      if(initialList == null) SortedList(clazz, sortedListCallback) else { SortedList(clazz, sortedListCallback, initialList.size) }\noverride var listCallback: ListUpdateCallback? = null\noverride val size get() = items.size()\noverride fun get(position: Int): Item = items[position]\noverride fun getAll() = items.toList()\noverride fun add(item: Item) {\n    items.add(item)\n  }\noverride fun add(position: Int, item: Item) =\n      throw IllegalArgumentException(\"You can't add at a position for a sorted adapter\")\noverride fun addAll(items: List) = this.items.addAll(items)\noverride fun addAll(position: Int, items: List) =\n      throw IllegalArgumentException(\"You can't add at a position for a sorted adapter\")\noverride fun set(position: Int, item: Item) =\n      throw IllegalArgumentException(\"You can't set at a position for a sorted adapter\")\noverride fun set(items: List) = this.items.batchUpdate {\n    clear()\n    addAll(items)\n  }\noverride fun update(item: Item) {\n    items.update(item)\n  }\noverride fun update(oldItem: Item, newItem: Item) {\n    items.update(oldItem, newItem)\n  }\noverride fun remove(item: Item) = items.remove(item)\noverride fun remove(position: Int): Item = items.removeItemAt(position)\noverride fun clear() {\n    items.clear()\n  }\noverride fun getAdapterPosition(item: Item) = items.indexOf(item)\noverride fun getAdapterPosition(identifier: Long): Int {\n    items.toList().forEachIndexed { index, item ->\n      if(item.identifier == identifier) return index\n    }\nreturn -1\n\n}\nprivate fun  SortedList.toList(): List {\n    val size = size()\n    return (0 until size).mapTo(ArrayList(size)) { this[it] }\n  }\nprivate fun  SortedList.batchUpdate(op: SortedList.() -> Unit) {\n    beginBatchedUpdates()\n    try {\n      this.op()\n    }\n    finally {\n      endBatchedUpdates()\n    }\n  }\nprivate fun  SortedList.update(item: T): Int {\n    return indexOf(item).also {\n      if(it != SortedList.INVALID_POSITION) {\n        updateItemAt(it, item)\n      }\n    }\n  }\nprivate fun  SortedList.update(oldItem: T, newItem: T): Int {\n    return indexOf(oldItem).also {\n      if(it != SortedList.INVALID_POSITION) {\n        updateItemAt(it, newItem)\n      }\n    }\n  }\n}\n``. In the case ofSortedItemListStrategy, callingaddwould call through toSortedList.add` which uses a binary search to add the item at the proper index, and returns that index. That way only one notification is needed. \nI can make a PR for this if you want. I just forked the repo yesterday \ud83d\ude01. I barely had to adjust the ModelAdapter because the \"list strategy\" gets a ListUpdateCallback which takes care of notifying the adapter that something changed. \nI did change some stuff related to setting lists, but maybe we could discuss in the PR (which I'll push soon).\nFor Kotlin, are you referring to people using the library, or contributors? Because for the former, the interop is so good they wouldn't know that the library is using Kotlin unless they checked the source. . Yup, I have an example but it's convoluted and hard to simplify right now. But in general upper bounds are good for API flexibility. Yes, that's what's complicated. It's part of a larger overall system, but I guess I can copy paste the relevant parts when I'm back at my computer. . Brainfart on my end \ud83d\ude04 . @mikepenz this provides a basic implementation of a standard list, and a sorted list. Anything more specialized than that can be provided by users.. The reason I didn't include the pre count in the signature is because I don't envision that being the concern of IItemList which is just an abstraction of a list. It shouldn't know that there might be an adapter with other items before it. That's the domain of ModelAdapter. \nThe update functions are there so that the sorted version could take advantage of them. . @mikepenz it is not the original list. I get new data from my data source, and map those to new items. I run the diff util against that list and the adapter.. This was for a hackathon, so I've stopped using the app, and I don't remember if I did anything to fix it. I don't believe I did though. . I do, I was just referring to what FastAdapter calls internally. \nThey're definitely visible on the screen; I stared at them for a good 5 minutes waiting for updates to bind, but they never did. I also verified that the backing items data changed. It just never got bound. . Is Kotlin Native stable enough that it's worth making design decisions based on it?. Have you considered jcenter? I've had a much easier time with them than maven central (and they sync to maven central nightly I believe).. I used an abstract class because the listCallback is an implementation detail, and doesn't belong in the interface. \nA user creating a custom IItemList shouldn't be allowed to specify the ListCallback; that's something that ModelAdapter is in charge of. . And make a protected getter?. See note above for why this shouldn't be in the interface. . This one has the advantage of being O(log n) in the sorted version vs O(n) for checking by identifier. . I've seen this done in a few places throughout the app. Is there a specific reason for allowing the user to access the private list? In general that's a bad idea.. Technically, but there shouldn't be any other ones, so this should be an implementation detail of ModelAdapter.. \ud83d\udc4d. \ud83d\udc4d. See my comment above about exposing internal state. Another idea I had was to throw an exception, because technically the user shouldn't be modifying the IItemList before \"attaching\" it to the adapter. . I don't see it as something that's worth exposing. It's just a replacement for calling the notify methods manually in each ModelAdapter call.\nIf it was exposed, there would need to be good docs explaining that no notify methods are gonna be called if you don't include them in your implementation. . That's fine. The concern here is if someone creates a custom IItemList and adds items to it before passing it to an adapter. . A breaking logical change (vs a binary incompatible change) sounds like a good idea for a minor version bump \ud83d\ude01. ",
    "uiiang": "sorry\n i don't mean change to multiselect , but estimate current  if may been multiselect.  can i get  the adapter multiselect  state is yes or not, before user selected?. thanks\uff0ci' ll try your way. ",
    "YuriHeupa": "Surely, here's the code where I define the adapters:\njava\nHeaderAdapter<HeaderItem> headerAdapter = new HeaderAdapter<>();\nFooterAdapter<ProgressLoaderItem> footerAdapter = new FooterAdapter<>();\nAdmobAdapter adAdapter = new AdmobAdapter();\nFastItemAdapter<SimpleItem> fastItemAdapter = new FastItemAdapter<SimpleItem>() {\n    @Override\n    public int getHolderAdapterPosition(RecyclerView.ViewHolder holder) {\n        int pos = super.getHolderAdapterPosition(holder);\n        return pos - adAdapter.itemInsertedBeforeCount(pos);\n    }\n};\nmRecyclerView.addOnScrollListener(new EndlessRecyclerOnScrollListener(footerAdapter, adAdapter) {\n    @Override\n    public void onLoadMore(final int currentPage) {\n        mRecyclerView.post(() -> {\n            footerAdapter.clear();\n            footerAdapter.add(new ProgressLoaderItem());\n        });\n        ...some long job with currentPage(items) {\n                footerAdapter.clear();\n        fastItemAdapter.add(items);\n        }\n    }\n};\nmRecyclerView.setHasFixedSize(true);\nmRecyclerView.setAdapter(adAdapter.wrap(footerAdapter.wrap(headerAdapter.wrap(fastItemAdapter))));\nAnd for reference, here's my AdMobAdapter:\n```java\npublic class AdmobAdapter extends AbstractWrapAdapter {\n    private static final int SPAN = 10;\npublic AdmobAdapter() {\n    super(Collections.singletonList(new AdItem()));\n}\n\n@Override\npublic boolean shouldInsertItemAtPosition(int position) {\n    return ((position + 1) % SPAN) == 0;\n}\n\n@Override\npublic int itemInsertedBeforeCount(int position) {\n    return position/SPAN;\n}\n\n@Override\npublic AdItem getItem(int position) {\n    if (shouldInsertItemAtPosition(position)) {\n        return getItems().get(0);\n    }\n    return null;\n}\n\n}\n```\nAs you can see, my Ad adapter reuses the first Item through all SPANS, which occur between each 10 items.. @FabianTerhorst same problem.. here's a gif demonstrating what's happening:\n\nNotice that the animation starts to get weird throughout the items loading, due to being notified to wrong offsets... @TheMaxCoder please provide some code of how you are dealing with items on your adapters, maybe you're missing some notify calls to the ads adapter or whatever.. . @TheMaxCoder First of all, it's a bit weird that the filter predicate is being defined inside the onQueryTextChange callback, it's gonna be better if you define it once outer of the callback scope.\nSince AbstractWrapAdapter doesn't implement an ItemAdapter, any others Item Adapters will not keep track of it, so the wrap adapter doesn't get notified about any changes. You need to explicit notify the ads adapter when the list get filtered by calling admobAdapter.notifyDataSetChanged(), you need to do it right after the items get filtered.\nThere's a listener that you can set in the ItemAdapter through withItemFilterListener(ItemFilterListener), this will provide you a itemsFiltered() callback, which you can use to notify the ads adapter. Something like:\njava\nmFastAdapter.getItemAdapter().withItemFilterListener(new ItemAdapter.ItemFilterListener() {\n    @Override\n    public void itemsFiltered() {\n        admobAdapter.notifyDataSetChanged();\n    }\n});\nOr if you don't want to shows ads while searching for the items you could use a solution like this gist, with this you must call setShowAds(boolean show) to hide/show ads when wanted.. But worth pointing that this is an AbstractWrapAdapter issue, when this get fixed we'll not need this workaround.. @mikepenz, I'm already doing this, as I stated on my comment here, the getHolderAdapterPosition is just making sure that the clicked item in the list will reference the correct positions, unfortunately it still doesn't fix the issue with the adapter notifications for item changes, which lead me to issues with wrong item positions being animated. @TheMaxCoder You should notify the AdmobAdapter whenever you make changes to the FastAdapter items, so when you call mFastAdapter.clear() you need also to issue admobAdapter.notifyDataSetChanged()\n@mikepenz Does this issue have any date estimate to be fixed?. @seba123neo there is a method called onBindMany, on the ClickEventHook which allows you to return a list of views which will be reacting to this hook (or the onBind version if that's a single view).\nYou can follow this implementation example https://github.com/mikepenz/FastAdapter/blob/caaa4d435d64173dcfbd7c65aef9caca38091097/app/src/main/java/com/mikepenz/fastadapter/app/items/ImageItem.java#L216-L221.. ",
    "TheMaxCoder": "@YuriHeupa I'm wrapping FastItemAdapter in an ad adapter just like you doing but when implementing the search filter on FastItemAdapter app is crashing with\n java.lang.IndexOutOfBoundsException: Inconsistency detected. Invalid item position 4(offset:0).state:8\nany idea how can I resolve this? without AbstractWrapAdapter filter works just fine!\nThanks. mFastAdapter = new FastItemAdapter<>();\n@Override\npublic boolean onQueryTextChange(String newText) {\n        mFastAdapter.filter(newText);\n        mFastAdapter.withFilterPredicate(new IItemAdapter.Predicate<SimpleItem>() {\n         @Override\n          public boolean filter(SimpleItem item, CharSequence constraint) {\n                        return !item.getName().toLowerCase().contains(constraint);\n                    }\n                });\n                return true;\n            }\nThis works just as expected, Now if I wrap FastItemAdapter with a let's say your AdMobAdapter like this\nmRecyclerView.setAdapter(admobAdapter.wrap(mFastAdapter));\nit throws an above-mentioned exception on searching, I don't know how can I make search filter work, Ads are not important to be visible when a user is searching for the items so I should clear it or something?. Yeah, that makes sense, Thank you so much for the explanation, I was kinda blind there.\nReally appreciated.. @YuriHeupa can you please confirm mFastAdapter.clear() works when wrapped it in AdmobAdapter?\nFor me, it doesn't work, neither the UndoHelper. \nFor the workaround,  I have to setShowAd(false) right before performing these two actions.\nThough I have set the FilterListener as you suggested above and it works with the filter just fine.\n. This is how I achieved this\nSet a filter listener withItemFilterListener and cache the results in a field variable\nNow when you want to remove an item:\nFirst get the item position from results by iterating over it\nthen use itemAdapter.itemFilter.remove(position)\nIt will remove the item from the filtered list as well as the original list.\nI don't know if this solution is perfect but @mikepenz  if we can achieve this in a better way please mention.\nThanks. I had the same problem. withOnClickListener or any other clicklisteners were not getting fired at all.\nBut clickListener inside viewHolder was working fine. Spent hours trying to figure out what's wrong an then I found I had \nandroid:clickable=\"true\"\nandroid:focusable=\"true\"\nandroid:background=\"?attr/selectableItemBackground\"\nset to recycler view item. Removing these solved the issue for me.. Hi Mike!\nI'm sorry if my question seems completely noob but actually I couldn't get my head around it. \nI have a working FastAdapter with ItemAdapter for let's say BlueItem\nNow I want to add let's say an AdItem (Native Ad)\nMy question was, which adapter we can use to add these two different items to the list?\nI tried using AbstractWraperAdapter but it was very confusing so I thought maybe you can show some simpler way to achieve this?\nThanks\nMax. Yeah, it makes sense. I will stop being lazy and will play around WraperAdapter and see.\nThank you so much for the explanations :)\nHave a great day!. ",
    "saeedmozaffariGithub": "in bindView from run first line of code to end is about 10 millisecond , but after finish codes from one bindview and start other it takes about 150 milliseconds. I asked my question in the comments below please check it,. i use multiple item in adapter , my code in abstract class is\n```java\n public void bindView(final VH holder, List payloads) {\n        super.bindView(holder, payloads);\n    mMessage.view = holder.itemView;\n    if (!isSelected() && ((FrameLayout) holder.itemView).getForeground() != null) {\n        ((FrameLayout) holder.itemView).setForeground(null);\n    }\n    if (directionalBased) {\n        if ((mMessage.sendType == MyType.SendType.recvive) || type == ProtoGlobal.Room.Type.CHANNEL) {\n            updateLayoutForReceive(holder);\n        } else if (mMessage.sendType == MyType.SendType.send) {\n            updateLayoutForSend(holder);\n        }\n    }\n\n    if (!mMessage.isTimeOrLogMessage()) {\n        AppUtils.rightMessageStatus((ImageView) holder.itemView.findViewById(R.id.cslr_txt_tic), ProtoGlobal.RoomMessageStatus.valueOf(mMessage.status), mMessage.forwardedFrom != null ? mMessage.forwardedFrom.getMessageType() : mMessage.messageType, mMessage.isSenderMe());\n    }\n    if (holder.itemView.findViewById(R.id.txtEditedIndicator) != null) {\n        if (mMessage.isEdited) {\n            holder.itemView.findViewById(R.id.txtEditedIndicator).setVisibility(View.VISIBLE);\n        } else {\n            holder.itemView.findViewById(R.id.txtEditedIndicator).setVisibility(View.GONE);\n        }\n    }\n    if (type == ProtoGlobal.Room.Type.GROUP) {\n        if (!mMessage.isSenderMe()) {\n            holder.itemView.findViewById(R.id.messageSenderAvatar).setVisibility(View.VISIBLE);\n\n            holder.itemView.findViewById(R.id.messageSenderAvatar).setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    messageClickListener.onSenderAvatarClick(v, mMessage, holder.getAdapterPosition());\n                }\n            });\n\n\n            HelperAvatar.getAvatar(Long.parseLong(mMessage.senderID), HelperAvatar.AvatarType.USER, new OnAvatarGet() {\n                @Override\n                public void onAvatarGet(final String avatarPath, long ownerId) {\n                    G.handler.post(new Runnable() {\n                        @Override\n                        public void run() {\n                            ImageLoader.getInstance().displayImage(AndroidUtils.suitablePath(avatarPath), (ImageView) holder.itemView.findViewById(R.id.messageSenderAvatar));\n                        }\n                    });\n                }\n\n                @Override\n                public void onShowInitials(final String initials, final String color) {\n                    G.handler.post(new Runnable() {\n                        @Override\n                        public void run() {\n                            ((ImageView) holder.itemView.findViewById(R.id.messageSenderAvatar)).setImageBitmap(package.helper.HelperImageBackColor.drawAlphabetOnPicture((int) holder.itemView.getContext().getResources().getDimension(R.dimen.dp60), initials, color));\n                        }\n                    });\n                }\n            });\n\n        } else {\n            holder.itemView.findViewById(R.id.messageSenderAvatar).setVisibility(View.GONE);\n        }\n    } else {\n        if (!mMessage.isTimeOrLogMessage()) {\n            holder.itemView.findViewById(R.id.messageSenderAvatar).setVisibility(View.GONE);\n        }\n    }\n    if (holder.itemView.findViewById(R.id.cslr_txt_time) != null) {\n        ((TextView) holder.itemView.findViewById(R.id.cslr_txt_time)).setText(formatTime());\n    }\n    replyMessageIfNeeded(holder);\n    forwardMessageIfNeeded(holder);\n\n    Realm realm = Realm.getDefaultInstance();\n    RealmRoomMessage roomMessage = realm.where(RealmRoomMessage.class).equalTo(RealmRoomMessageFields.MESSAGE_ID, Long.parseLong(mMessage.messageID)).findFirst();\n    if (roomMessage != null) {\n        prepareAttachmentIfNeeded(holder, roomMessage.getForwardMessage() != null ? roomMessage.getForwardMessage().getAttachment() : roomMessage.getAttachment(), mMessage.forwardedFrom != null ? mMessage.forwardedFrom.getMessageType() : mMessage.messageType);\n    }\n    realm.close();\n    TextView messageText = (TextView) holder.itemView.findViewById(R.id.messageText);\n    if (messageText != null) {\n        if (messageText.getParent() instanceof LinearLayout) {\n            ((LinearLayout.LayoutParams) ((LinearLayout) messageText.getParent()).getLayoutParams()).gravity = AndroidUtils.isTextRtl(mMessage.forwardedFrom != null ? mMessage.forwardedFrom.getMessage() : mMessage.messageText) ? Gravity.RIGHT : Gravity.LEFT;\n        }\n    }\n\n    if ((type == ProtoGlobal.Room.Type.CHANNEL)) {\n        showVote(holder);\n    } else {\n        if (mMessage.forwardedFrom != null) {\n            RealmRoom realmRoom = realm.where(RealmRoom.class).equalTo(RealmRoomFields.ID, mMessage.forwardedFrom.getRoomId()).findFirst();\n            if (realmRoom != null && realmRoom.getType() == ProtoGlobal.Room.Type.CHANNEL) {\n                showVote(holder);\n            } else {\n                hideVote(holder);\n            }\n        } else {\n            hideVote(holder);\n        }\n    }\n}\n\n```\nand for exmaple one of the my items is TextItem\n```java\npublic void bindView(final ViewHolder holder, List payloads) {\n        super.bindView(holder, payloads);\n    String text;\n    if (mMessage.forwardedFrom != null) {\n        text = mMessage.forwardedFrom.getMessage();\n    } else {\n        text = mMessage.messageText;\n    }\n    setTextIfNeeded(holder.messageText, text);\n}\n\n```\nalso i use the following codes for TextItem xml layout\n```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<RelativeLayout\n    android:id=\"@+id/mainContainer\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"horizontal\"\n    tools:ignore=\"UselessParent\">\n\n    <package.module.CircleImageView\n        android:id=\"@+id/messageSenderAvatar\"\n        android:layout_width=\"@dimen/dp52\"\n        android:layout_height=\"@dimen/dp52\"\n        android:layout_marginRight=\"@dimen/dp8\"\n        android:src=\"@mipmap/empty\"/>\n\n    <LinearLayout\n        android:id=\"@+id/middleLayout\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_toEndOf=\"@+id/messageSenderAvatar\"\n        android:layout_toRightOf=\"@+id/messageSenderAvatar\"\n        android:orientation=\"vertical\">\n\n        <android.support.v7.widget.CardView\n            android:id=\"@+id/contentContainer\"\n            style=\"@style/ChatMessages.CardView\"\n            android:minWidth=\"150dp\">\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:minWidth=\"150dp\"\n                android:orientation=\"vertical\">\n\n                <include\n                    android:id=\"@+id/replayLayout\"\n                    layout=\"@layout/chat_sub_layout_reply\"/>\n\n                <include\n                    android:id=\"@+id/cslr_ll_forward\"\n                    layout=\"@layout/chat_sub_layout_forward\"/>\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:orientation=\"vertical\"\n                    >\n\n                    <io.github.meness.emoji.EmojiTextView\n                        android:id=\"@+id/messageText\"\n                        style=\"@style/ChatMessages.EmojiTextView\"\n                        android:text=\"SAMPLE TEXT\"/>\n\n                </LinearLayout>\n\n                <include layout=\"@layout/chat_sub_layout_messages_time\"/>\n            </LinearLayout>\n        </android.support.v7.widget.CardView>\n    </LinearLayout>\n\n    <RelativeLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignLeft=\"@+id/middleLayout\"\n        android:layout_alignStart=\"@+id/middleLayout\"\n        android:layout_below=\"@+id/middleLayout\">\n\n        <include layout=\"@layout/chat_sub_layout_messages_vote\"/>\n\n    </RelativeLayout>\n</RelativeLayout>\n\n\n```\ni have a forward and reply layout that included in TextItem xml layout and setVisibiliy Gone if message is not forwarded or replied and also have a chat_sub_layout_messages_vote that setVisibility Gone in a large number of items like forward and reply layout.\nwhen i scroll items , bind view in abstract class run lower than 10 milliseconds , but for execute other bind view have a delay about 150 milliseconds.\nWhere is my mistake in this Code ?. @FabianTerhorst do you have any idea for write this code better?. is there any way for call bindView before see item?\ni set cacheSize 1000,. how can avoid from calling ViewHolder for each item?\nalso is there any way for calling bind view for items that not showing yet in view and when comming this items to the view do no action?. @mikepenz Thank you for the time you gave me.\ni have a question about fastadapter view holder.\nin a simple code for RecyclerView Adapter i write following code\n```java\npublic class MyAdapter extends RecyclerView.Adapter {\nprivate ArrayList<String> mDataSet;\n\npublic class ViewHolder extends RecyclerView.ViewHolder {\n\n    public TextView txtHeader;\n    public TextView txtFooter;\n    public ImageView img;\n\n\n    public ViewHolder(View v) {\n        super(v);\n        Log.i(\"WWW\", \"ViewHolder\");\n        txtHeader = (TextView) v.findViewById(R.id.firstLine);\n        txtFooter = (TextView) v.findViewById(R.id.secondLine);\n        img = (ImageView) v.findViewById(R.id.icon);\n    }\n}\n\n\npublic MyAdapter(ArrayList<String> myDataSet) {\n    mDataSet = myDataSet;\n}\n\n\n@Override\npublic ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n    Log.i(\"WWW\", \"onCreateViewHolder\");\n    View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_recycler_view, parent, false);\n    ViewHolder vh = new ViewHolder(v);\n    return vh;\n}\n\n@Override\npublic void onBindViewHolder(final ViewHolder holder, final int position) {\n    Log.i(\"WWW\", \"onBindViewHolder\");\n    int imageId = G.context.getResources().getIdentifier(\"image\" + (position + 1), \"drawable\", G.context.getPackageName());\n    holder.img.setImageResource(imageId);\n}\n\n@Override\npublic int getItemCount() {\n    return mDataSet.size();\n}\n\n}\n```\nin this code ViewHolder Call just for items that showing in first view and when another views comming to page just onBindViewHolder called, but when i using fastadapter for showing different item, ViewHolder calling for each item, this is a common occurrence or i have problem in my codes?. i detect why ViewHolder Called in fastadapter sample in my code.\nwhen i using setCacheSize for RecyclerView , ViewHolder called as many set cache size , and when back to see that items don't run any thing , even bindView. \nalso when don't use setCacheSize ViewHolder just called for items that exist in view for first time and for another items just called bindView.. ",
    "Calion54": "Yes, I sure because I have the same image, description. Before I used the base adapter and it worked...\nMy Set class :\n```\npublic class Set extends AbstractItem implements Parcelable {\n    public String theme;\n    public String year;\n    public String idSet;\n    public String name;\n    public String image;\n    public String nbParts;\npublic Set(String name, String year, String idSet, String image, String theme, String nbParts) {\n    this.name = name;\n    this.year = year;\n    this.idSet = idSet;\n    this.theme = theme;\n    this.image = image;\n    this.nbParts = nbParts;\n}\n\nprotected Set(Parcel in) {\n    theme = in.readString();\n    year = in.readString();\n    idSet = in.readString();\n    name = in.readString();\n    image = in.readString();\n    nbParts = in.readString();\n}\n\npublic static final Creator<Set> CREATOR = new Creator<Set>() {\n    @Override\n    public Set createFromParcel(Parcel in) {\n        return new Set(in);\n    }\n\n    @Override\n    public Set[] newArray(int size) {\n        return new Set[size];\n    }\n};\n\n@Override\npublic int describeContents() {\n    return 0;\n}\n\n@Override\npublic void writeToParcel(Parcel dest, int flags) {\n    dest.writeString(theme);\n    dest.writeString(year);\n    dest.writeString(idSet);\n    dest.writeString(name);\n    dest.writeString(image);\n    dest.writeString(nbParts);\n}\n\n@Override\npublic int getType() {\n    return R.id.rv_recycler_view;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.list_set;\n}\n\n@Override\npublic void bindView(ViewHolder viewHolder, List<Object> payloads) {\n    super.bindView(viewHolder, payloads);\n\n    viewHolder.name.setText(idSet + \" : \" + name);\n    viewHolder.year.setText(year);\n    viewHolder.theme.setText(theme);\n    viewHolder.nbParts.setText(nbParts);\n    Ion.with(viewHolder.image)\n            .load(image);\n}\n\n@Override\npublic void unbindView(ViewHolder holder) {\n    super.unbindView(holder);\n    holder.name.setText(null);\n    holder.year.setText(null);\n    holder.theme.setText(null);\n    holder.nbParts.setText(null);\n    holder.image.setImageResource(0);\n}\n\nprotected static class ViewHolder extends RecyclerView.ViewHolder {\n    public ImageView image;\n    public TextView year;\n    public TextView name;\n    public TextView theme;\n    public TextView nbParts;\n\n    public ViewHolder(View itemView) {\n        super(itemView);\n\n        theme = (TextView) itemView.findViewById(R.id.theme_set);\n        year = (TextView) itemView.findViewById(R.id.year_set);\n        name = (TextView) itemView.findViewById(R.id.name_set);\n        nbParts = (TextView) itemView.findViewById(R.id.nb_parts_set);\n        image = (ImageView) itemView.findViewById(R.id.image_set);\n    }\n}\n\n}\n```. ",
    "nimaa77": "I done that like it was in examples : \n```java\n       FooterAdapter footerAdapter;\n        FastItemAdapter fastAdapter;\n  mRecyclerView.setLayoutManager(new LinearLayoutManager(view.getContext()));\n    mRecyclerView.setItemAnimator(new DefaultItemAnimator());\n    mRecyclerView.setHasFixedSize(true);\n\n    mRecyclerView.setItemViewCacheSize(10);\n    mRecyclerView.setDrawingCacheEnabled(true);\n    mRecyclerView.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_HIGH);\n\n    mRecyclerView.setLayerType(View.LAYER_TYPE_HARDWARE, null);\n\n    fastAdapter = new FastItemAdapter<>();\n    mRecyclerView.setAdapter(fastAdapter);\n    footerAdapter = new FooterAdapter<>();\n\n    mRecyclerView.setAdapter(footerAdapter.wrap(fastAdapter));\n\n    mRecyclerView.addOnScrollListener(new EndlessRecyclerOnScrollListener(footerAdapter) {\n        @Override\n        public void onLoadMore(final int currentPage) {\n\n            //check if it's not last page\n            if (total_page >= page) {\n\n                footerAdapter.clear();\n                footerAdapter.add(new ProgressItem().withEnabled(true));\n\n                loadData();\n\n            }\n        }\n    });\n\n```\nSo I just have a few options:\n\nCreate A new Footer Adapter Item With two View Holders (I Wish If U Could Have Some Examples) \nThere Is Some Way To set Two Items to FooterAdapter\nHave only one FooterAdapter With Error View And Progress so the Error View is in GONE Visibility ...\nDo Exactly Like this. \n",
    "shymmq": "@mikepenz Yes, i have eventually figured it out. This behavior was caused by adapter.add() being called from a non-UI thread. It's still kind of weird considering that it appeared after i scrolled. Sorry for the inconvenience.. I'm using LinearLayoutManager\nSent from my Xiaomi Redmi Note 4 using FastHub. I got it to work by changing LinearLayout to RelativeLayout, I wonder why that was the problem.. ",
    "aRusenov": "Thanks, @mikepenz \nI already tried that and it appears I forgot to set withEnabled(true) when adding the footer item:\nfooterAdapter.add(new RetryItem().withEnabled(true))\nI also noticed I could individually chain withOnItemClickListener(...) to my footer items. That helps avoid generifying my FastAdapter.. ",
    "dyckster": "@FabianTerhorst Sure.\nHere, if thats what you need\nprivate FastItemAdapter<IItem> itemsAdapter;\nprivate void setupRecyclerView() {\n        itemsAdapter = new FastItemAdapter<>();\n        leadersRecycler.setLayoutManager(new LinearLayoutManager(getActivity()));\n        leadersRecycler.addItemDecoration(new VerticalSpaceItemDecoration(Utils.dip(getActivity(), 8)));\n        itemsAdapter.add(new AddItem());\nprivate void addItemToAdapter(RideLeader leader) {\n        itemsAdapter.add(0, new LeaderItem(leader));\n        itemsAdapter.notifyDataSetChanged();\n    }\n. @mikepenz Yep, you are right, sorry for my stupidity :). ",
    "echthard": "Hi anton-khansa,\nIn the sample app, in SwipeListActivity.java you will find an override of itemSwiped(). There is a variable called \"direction\". You can use that.\n@Override\npublic void itemSwiped(int position, int direction) {\n}. ```\n @Override\n    public void itemSwiped(int position, int direction) {\n    if (direction == ItemTouchHelper.RIGHT) {\n        approve();\n    } else if (direction == ItemTouchHelper.LEFT) {\n        reject();\n    }\n   ... // rest what you want to do with it.\n}\n\n````. > Do you want to remove an item / modify it in the list?\nYes\n\nOr do you want a click listener on something else than the whole itemView?\n\nNo, I don't have a click event. I have an EditText per row in the list. In other words, I have an EditText per item in the adapter. Let's say it is a shopping list and the EditText holds the quantity. When the quantity is 0, the item should be removed. If the quantity is changed, a different view that also holds the quantity shoud be updated with the new value that comes from the EditText. \nThe EditText becomes visible when I click on an ImageView, when the EditText becomes invisible, then the event of updating the item will take place.\nThis event could be a Timer that fires after 3 seconds, but will ignore and restart if the soft keyboard is visible. The event can be when I scroll, then I will hide the EditText. Or the event can be when I click the DONE button on the soft keyboard.\n. Well it's not really 2 parts, I understand how to update/remove an item in the adapter. I already have ClickEventHooks working, but I now have the other \"event\" handled in the bindView() of the item. There is obviously no adapter there in the item, so I can't update/remove items in the adapter.\nI tried to implement the CustomEventHook, but I still don't understand what to do in the onBind.\nLet my try to rephrase my example. The trigger/event is when a ViewGroup's visibility becomes View.GONE. Is it possible to create a CustomHookEvent on that? \nFYI: The ViewGroup will be hidden when the Timer runs, when I scroll in the Recyclerview or when the DONE button on the soft keyboard will be tapped. So 3 ways to hide the ViewGroup. \nYou said \n\nyou tell it in onBind when he should use the EventHook\n\nBut how can I do that? In your ClickEventHook example it is like:\n@Override\n        public View onBind(@NonNull RecyclerView.ViewHolder viewHolder) {\n            if (viewHolder instanceof CheckBoxSampleItem.ViewHolder) {\n                return ((CheckBoxSampleItem.ViewHolder) viewHolder).checkBox;\n            }\n            return null;\n        }\nBut how would this look like for a CustomHookEvent? If i pass the ViewGroup instead of checkBox, then it's not mentioned that it should only occur when the ViewGroup becomes hidden.\nMaybe it's not possible to hook an event on a view's visibilty change. Then I should probably hook the same event on the 3 ways that initiates that change. . ",
    "fikr4n": "\nI think the normal click listener should be fine already.\n\nIt does't work for expandable items. Did you mean pre-click listener?. Because FastAdapter named \"fast\" so I think about performance \ud83d\ude04 . ",
    "bfayette": "Thx for your time. Adding new items happened in my case on the UI thread. Maybe I missed something. I ll try later with a smaller example.. ",
    "ItsAnubhav": "That worked pal. Thank you.. @judemanutd Hope this helps\nhttps://gist.github.com/ItsAnubhav/9b4fbd4a1fc482e30089cd32985d76e6  . ",
    "judemanutd": "@ItsAnubhav  i am having a little trouble creating an adapter with heterogenous views,could you tell me how exactly you did it please.. @mikepenz  thank you,will take a look at it.. this.setCurrentDate(currentDate);\nIt was an error on the line where i was setting the wrong varaible.\nAnother question,how do i notify the adapter that no more data is left to be loaded so i can hide the progress item?. @mikepenz i wasn't getting this warning in my log cat up until the point where i added endless scrolling for the fast adapter.\nIs there a way i can rectify this?. That did the job,thank you @mikepenz . Is it possible to have two separate viewholder with different views in them?. ReceiverChat_ViewHolder\n public class ReceiverChat_ViewHolder extends RecyclerView.ViewHolder {\nprivate TextView message;\nprivate ImageView imageView;\n\npublic ReceiverChat_ViewHolder(View itemView) {\n    super(itemView);\n    message = (TextView) itemView.findViewById(R.id.message);\n    imageView = (ImageView) itemView.findViewById(R.id.image_receiver);\n}\n\npublic TextView getMessage() {\n    return message;\n}\n\npublic ImageView getImageView() {\n    return imageView;\n}\n\n}`\nChatSender_ViewHolder\n`public class ChatSender_ViewHolder extends RecyclerView.ViewHolder {\nprivate TextView message;\nprivate ImageView imageView;\n\npublic ChatSender_ViewHolder(View itemView) {\n    super(itemView);\n    message = (TextView) itemView.findViewById(R.id.message);\n    imageView = (ImageView) itemView.findViewById(R.id.image_sender);\n}\n\npublic TextView getMessage() {\n    return message;\n}\n\npublic ImageView getImageView() {\n    return imageView;\n}\n\n}`\nGenericChatMessageItem\n`public class GenericChatMessageItem extends GenericAbstractItem<ChatMessage, \nGenericChatMessageItem, ChatSender_ViewHolder> {\n\nprivate static final ViewHolderFactory<? extends ChatSender_ViewHolder> FACTORY = new \nGenericChatMessageItem.ItemFactory();\n\npublic GenericChatMessageItem(ChatMessage chatMessage) {\n    super(chatMessage);\n}\n\n@Override\npublic int getType() {\n    return R.id.fastadapter_generic_senderMessage_item_id;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_sender_message;\n}\n\n@Override\npublic void bindView(ChatSender_ViewHolder holder, List<Object> payloads) {\n    super.bindView(holder, payloads);\n    Log.i(\"bindSender\", \"Here\");\n    ChatMessage chatMessage = getModel();\n\n    holder.getMessage().setText(chatMessage.getMessage());\n        Log.i(\"imagebindSender\", chatMessage.getImage() + \" \" + chatMessage.getId_chat_msg());\n\n\n        if (chatMessage.getImage() != null) {\n            Log.i(\"imagebindSender\", chatMessage.getImage());\n            Glide.with(holder.itemView.getContext())\n                    .load(chatMessage.getImage())\n                    .into(holder.getImageView());\n        }\n}\n\n@Override\npublic void unbindView(ChatSender_ViewHolder holder) {\n    super.unbindView(holder);\n    holder.getMessage().setText(null);\n    holder.getImageView().setImageDrawable(null);\n}\n\n@Override\npublic ViewHolderFactory<? extends ChatSender_ViewHolder> getFactory() {\n    return FACTORY;\n}\n\nprivate static class ItemFactory implements ViewHolderFactory<ChatSender_ViewHolder> {\n    public ChatSender_ViewHolder create(View v) {\n        return new ChatSender_ViewHolder(v);\n    }\n}\n\n}\nReceiverChatMessageItem\n`public class ReceiverChatMessageItem extends GenericChatMessageItem {\n\npublic ReceiverChatMessageItem(ChatMessage chatMessage) {\n    super(chatMessage);\n}\n\n@Override\npublic int getType() {\n    return R.id.fastadapter_generic_receiverMessage_item_id;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_receiver_message;\n}\n\n@Override\npublic void bindView(ChatSender_ViewHolder holder, List<Object> payloads) {\n    super.bindView(holder, payloads);\n    Log.i(\"bindReceiver\", \"Here\");\n\n    ChatMessage chatMessage = getModel();\n        Log.i(\"imagebindReceiver\", chatMessage.getImage() + \" \" + chatMessage.getId_chat_msg());\n\n        holder.getMessage().setText(chatMessage.getMessage());\n\n        if (chatMessage.getImage() != null) {\n            Log.i(\"imagebindReceiver\", chatMessage.getImage());\n            Glide.with(holder.itemView.getContext())\n                    .load(chatMessage.getImage())\n                    .into(holder.getImageView());\n        }\n}\n\n@Override\npublic void unbindView(ChatSender_ViewHolder holder) {\n    super.unbindView(holder);\n    holder.getMessage().setText(null);\n    holder.getImageView().setImageDrawable(null);\n}\n }`\n\nin the activity\n ` itemAdapter = new GenericItemAdapter<>(chatMessage -> {\n\n        if (chatMessage.getUser_type() == 1) {\n            return new GenericChatMessageItem(chatMessage);\n        }\n        return new ReceiverChatMessageItem(chatMessage);\n\n\n    });`\n\nThe layout files each contain an image view and a text view but the ids for the the 2 image views or the 2  text views are not the same.\nSo when i try app crashes notifying me that i need to pass in a non null View.\nA noob question but how exactly would i be creating the 2 items,what would they inherit from?. @PN1019 link does not open. @PN1019  it worked thanks but this seems like the item is a header,i am doing a chat app so i want 1 view for sender and 1 for receiver but no headers in the list.Will this still work?. @FabianTerhorst  i got that part but then what how should i declare my GenericItemAdapter if i want to include two different view holders?I was confused about that part.Any help would be appreciated.\n   ` private GenericItemAdapter<ChatMessage, GenericChatMessageItem> itemAdapter;\n     final RecyclerView recyclerView = (RecyclerView) findViewById(R.id.chats);\n     final LinearLayoutManager linearLayoutManager = new \n     LinearLayoutManager(getApplicationContext());\n     final FastAdapter<GenericChatMessageItem> fastAdapter = new FastAdapter<>();\n\n    linearLayoutManager.setOrientation(LinearLayoutManager.VERTICAL);\n    fastAdapter.withSelectable(true);\n\n\n    itemAdapter = new GenericItemAdapter<>(chatMessage -> {\n\n        if (chatMessage.getUser_type() == 3) {\n            return new ReceiverChatMessageItem(chatMessage);\n        }\n        return new GenericChatMessageItem(chatMessage);\n\n\n    });\n\n    recyclerView.setAdapter(itemAdapter.wrap(fastAdapter));\n    recyclerView.setLayoutManager(linearLayoutManager);`\n\n. @FabianTerhorst  when i try declaring the adapter like so\nprivate GenericItemAdapter<ChatMessage,AbstractItem> adapter;\nlint complains saying that abstract item is not within its bounds and i should implement IGenericItem\n. @FabianTerhorst tried that lint throws the same error.. @ankitbatra11 I have not,i was under the impression that addModel was internally calling notifyiteminserted which would automatically animate the view using the default animator of the recycler view.Do i need to set a default animator ,if so how?. I am using rxjava and this i my current code.\n                                  `Observable.fromIterable(newses)\n                                  .subscribeOn(Schedulers.computation())\n                                 .observeOn(AndroidSchedulers.mainThread())\n                                 .subscribe(news -> UserDataRepository.getUser(news.getPosterId())\n                                 .observeOn(AndroidSchedulers.mainThread())\n                                .doFinally(() -> {\n\n                                    // Updating Ui here\n                                })\n                                .subscribe(User -> {\n                                    count++;\n                                    dataRepository.addUserToNews(news, User);\n\n                                    final List<News> arrayList = itemAdapter.getModels();\n\n                                    if (arrayList.size() > 0) {\n\n                                        for (int arr = 0; arr < arrayList.size(); arr++) {\n                                            if (news.getPostDate() > arrayList.get(arr).getPostDate()) {\n                                                itemAdapter.addModel(arr, news);\n                                                break;\n                                            } else if (arr == arrayList.size() - 1) {\n                                                itemAdapter.addModel(news);\n                                                break;\n                                            }\n                                        }\n                                    } else {\n                                        itemAdapter.addModel(news);\n                                    }\n\n                                }, throwable -> Log.i(\"retrofit\", throwable.getLocalizedMessage())));`\n\nI even manually set the default animator to the recycler view but the item did not animate.\n. @mikepenz I added the following code \nHandler handler = new Handler();\n        handler.post(new Runnable() {\n        @Override\n        public void run() {\n            itemAdapter.addModel(chatMessages.get(position));\n        }\n        });\nbut it didn't make a difference.\nThere was also another part similar to this that was casuing an issue where i am notifying the adapter that an item was changed but it wouldn't reflect the changes.\nHandler handler = new Handler();\n                        handler.post(() -> itemAdapter.setModel(position, chat));\nI am notifying the adapter that a specific item was changed but the changes don't reflect.\n. @FabianTerhorst tried that ,did not work,for now i am using this workaround.\nlinearLayoutManager.smoothScrollToPosition(recyclerView, null, itemAdapter.getItemCount());\n@mikepenz @FabianTerhorst Is there a way to notify the adapter that only a single item in the view is modified rather than updating all items of that specific item.\nFor example if my viewHolder contains 2 text views and only 1 of them needs to be changed while the other kept the same,is there a way to do that?As of now when a notify function is called then the onBind is called which updates all items of the view.\n.  \n    public class ChatDiffUtil extends DiffUtil.Callback {\nprivate List<Chat> mOldList, mNewList;\n\npublic ChatDiffUtil(List<Chat> mOldList, List<Chat> mNewList) {\n    this.mOldList = mOldList;\n    this.mNewList = mNewList;\n}\n\n@Override\npublic int getOldListSize() {\n    return mOldList == null ? 0 : mOldList.size();\n}\n\n@Override\npublic int getNewListSize() {\n    return mNewList == null ? 0 : mNewList.size();\n}\n\n@Override\npublic boolean areItemsTheSame(int oldItemPosition, int newItemPosition) {\n    return mOldList.get(oldItemPosition).getChat_id() == mNewList.get(newItemPosition).getChat_id();\n}\n\n@Override\npublic boolean areContentsTheSame(int oldItemPosition, int newItemPosition) {\n    Chat oldChat = mOldList.get(oldItemPosition);\n    Chat newChat = mNewList.get(newItemPosition);\n\n    return oldChat.getLatest_message_time() == newChat.getLatest_message_time()\n            && oldChat.getPolitico().getLast_updated() == newChat.getPolitico().getLast_updated();\n}\n\n@Nullable\n@Override\npublic Object getChangePayload(int oldItemPosition, int newItemPosition) {\n\n    Chat oldChat = mOldList.get(oldItemPosition);\n    Chat newChat = mNewList.get(newItemPosition);\n\n    if (oldChat.getLatest_message_time() != newChat.getLatest_message_time())\n        return 1;\n\n    if (oldChat.getPolitico().getLast_updated() != newChat.getPolitico().getLast_updated())\n        return 2;\n\n    return super.getChangePayload(oldItemPosition, newItemPosition);\n}\n}. `final DiffUtil.DiffResult result = DiffUtil.calculateDiff(\n            new ChatDiffUtil(oldList, newList), false);\noldList= newList;\nresult.dispatchUpdatesTo(itemAdapter);`. @mikepenz will give it a try , thank you.. @surindersinghbindra Yes that would be quite helpful.\n\n. Thanks much appreciated.. @mikepenz  I did that in the builder of the dialog itself in the following lines\nMaterialDialog overflow = new MaterialDialog.Builder(getContext())\n                .adapter(adapter.wrap(overflowItemFastAdapter), layoutManager)\n                .build();. @mikepenz  found the error the line `adapter.addModel(overflowItems);` needed to come after the adapter was wrapped so putting it after `MaterialDialog overflow = new MaterialDialog.Builder(getContext())\n            .adapter(adapter.wrap(overflowItemFastAdapter), layoutManager)\n            .build();` worked.. The way the code works is that i have a list view who's onclick generates a dialog box.\n\nI am using https://github.com/afollestad/material-dialogs which lets me specify my own adapter for the list in the dialog box.\nThe inner list is where the checkbox lies.I have posted my xml layout,clicking on the text view fires the event but the checkbox does not fire for some reason.\nI have reverted back to the original onCLick code.\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:id=\"@+id/holder\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:layout_margin=\"10dp\"\nandroid:clickable=\"true\">\n\n<ImageView\n    android:id=\"@+id/new_tag\"\n    android:layout_width=\"25dp\"\n    android:layout_height=\"25dp\"\n    android:layout_alignParentLeft=\"true\"\n    android:layout_alignParentStart=\"true\"\n    android:layout_centerVertical=\"true\"\n    android:src=\"@drawable/new_box\"\n    android:visibility=\"gone\" />\n\n<CheckBox\n    android:id=\"@+id/subscribed\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentEnd=\"true\"\n    android:layout_alignParentRight=\"true\"\n    android:layout_centerVertical=\"true\"\n    android:clickable=\"true\" />\n\n<TextView\n    android:id=\"@+id/channel_name\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignWithParentIfMissing=\"true\"\n    android:layout_centerVertical=\"true\"\n    android:layout_marginEnd=\"5dp\"\n    android:layout_marginLeft=\"5dp\"\n    android:layout_marginRight=\"5dp\"\n    android:layout_marginStart=\"5dp\"\n    android:layout_toEndOf=\"@id/new_tag\"\n    android:layout_toLeftOf=\"@id/subscribed\"\n    android:layout_toRightOf=\"@id/new_tag\"\n    android:layout_toStartOf=\"@id/subscribed\"\n    android:ellipsize=\"marquee\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:marqueeRepeatLimit=\"marquee_forever\"\n    android:maxLines=\"1\"\n    android:scrollHorizontally=\"true\"\n    android:singleLine=\"true\"\n    android:textSize=\"18sp\" />\n\n</RelativeLayout>. @mikepenz does it work even if i am using a custom data type adapter ie, a model adapter?\n\n. Thanks.. My current implementation of the recyclers view includes fetching data from a realm list and populating the adapter, which works fine.\nThe list contains views of different types which I have handled using the model adapter.\nNow instead of adding a special view at the first element every time the data set changes, is it possible to fix the first element such that it is always of a particular type and the rest of the elements are populated from he dataset. I hope I was able to make things clearer. . \nBasically  i am trying to replicate a view like this. My default data set does not contain the big size image element type, I do not want to add it everytime the dataset changes, which can be costly since i will have to move every element by 1 to accommodate the new big size element.. @mikepenz This is my code so far, i am using a ModelAbstractItem for NewsAdapterModel since it consists of views of different types.\npublic class NewsAdapterModel extends ModelAbstractItem<News, NewsAdapterModel, \n    NewsItem_VH>\n     {\n...\n    }\nIn my main activity\n` //This is a pageradapter that i want to use for the viewpager`\n   ` PinnedArticlesAdapter picturesAdapter = new PinnedArticlesAdapter();`\n    `final ItemAdapter headerAdapter = new ItemAdapter();`\n    `headerAdapter.add(new HeaderAdapter(picturesAdapter).withIdentifier(1));`\n    `FastAdapter<NewsAdapterModel> fastAdapter = = FastAdapter.with(Arrays.asList(headerAdapter, itemAdapter));`\nThe HeaderAdapter is a class that looks like this\npublic class HeaderAdapter extends AbstractItem<HeaderAdapter, Header_VH> {....}\nThe HeaderAdapter contains the viewpager who's adapter is being passed in the HeaderAdapter constructor.\nFollowing this method i get an error in the logcat at the line headerAdapter.add(new HeaderAdapter(picturesAdapter).withIdentifier(1));\njava.lang.NullPointerException: Attempt to invoke virtual method 'int com.mikepenz.fastadapter.FastAdapter.getPreItemCountByOrder(int)' on a null object reference\nWhat exactly am I doing wrong here?\n. @mikepenz had tried the nested scroll solution but failed since the nested scroll can only have a singe child and that would mean i needed to put the recyclerview and the children in a linear or relative layout because of which i lost the endless scrolling events.\nWill take a look at the multiselect sample.\n. That wasn't really working but managed to get it working with this layout for now.\n   `<android.support.design.widget.CoordinatorLayout \n                 xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n         android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n    <android.support.design.widget.AppBarLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@android:color/transparent\">\n\n        <android.support.design.widget.CollapsingToolbarLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_scrollFlags=\"scroll|exitUntilCollapsed\">\n\n            <android.support.v4.view.ViewPager\n                android:id=\"@+id/viewpager\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"200dp\"\n                android:layout_marginTop=\"?attr/actionBarSize\" />\n\n            <android.support.v7.widget.Toolbar\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                app:contentInsetLeft=\"0dp\"\n                app:contentInsetStart=\"0dp\"\n                app:layout_collapseMode=\"pin\"/>\n\n        </android.support.design.widget.CollapsingToolbarLayout>\n\n    </android.support.design.widget.AppBarLayout>\n\n    <android.support.v4.widget.SwipeRefreshLayout\n        android:id=\"@+id/swipeContainer\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\n\n        <android.support.v7.widget.RecyclerView\n            android:id=\"@+id/newsList\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            tools:listitem=\"@layout/item_news\" />\n\n    </android.support.v4.widget.SwipeRefreshLayout>\n\n</android.support.design.widget.CoordinatorLayout>`.\n",
    "stevesea": "@mikepenz how would you recommend synchronizing access to the FastAdapter? Do I need to only worry about modifications to the FastAdapter's item list, or should applying a filter also be done while holding a lock?\n. I was able to reproduce the problem...  To get things to behave badly, seems like I have to do some filtering, then exit filtering. After that, I sometimes see odd lagginess of my recyclerview when adding new items, and sometimes see the crash.\nAfter playing around with it a bit... I did see that I was doing something probably very weird -- There are times I wanted to retain the filter, but also add more items to the result list (the code would set the FastAdapter's filter to null, add items, then restore the previous filter). Once I changed around my code to prevent the user from causing that to happen, things behaved much better.\n. @mikepenz I'll try tweaking the sample application and see if I can reproduce it there.. Apologies for the delay, I've been on vacation. I haven't been able to reproduce the issue with modifications to the sample app yet. \nI did some changes to my app that may have improved stability. I pushed the release a couple weeks ago, and the crash hasn't appeared in my Crashlytics reports with the latest release.\nI ended up hitting it with a big hammer first... Wrapping all access to my FastAdapters in synchronized blocks changeset\nBut, there was still at least 1 crash event after those changes made it into a release. After experimenting in my app some more, I saw the odd behavior and crash I mentioned in my last comment in this thread. That made me decide to make this changeset \nThe interesting lines there are the changes to AdventuresmithActivity.kt around line 350. \n```\n                              synchronized(resultAdapter) {\n\n\n// disable filter before adding any results\nif (currentFilter != null) {\nresultAdapter.filter(null)\n}\n -\n                                      resultAdapter.add(0, resultItems.filterNotNull().map { ResultItem(it) })                              recycler_results.scrollToPosition(0)\n\n-\n -                                    // re-apply the filter if there is one\n -                                    if (currentFilter != null) {\n -                                        debug(\"Applying filter '$currentFilter'\")\n -                                        resultAdapter.filter(currentFilter)\n -                                    }\n                                  debug(\"Number of items ${resultAdapter.adapterItemCount}\")\n                              }\n```\n. \n\n",
    "tomeroto": "this is my full Activity:\n```\npublic class ChooseUserActivity extends AppCompatActivity {\nprivate FastItemAdapter<UserItem> fastItemAdapter;\nprivate FooterAdapter<ProgressItem> footerAdapter;\nprivate RecyclerView recyclerView;\nprivate EndlessRecyclerOnScrollListener endlessRecyclerOnScrollListener;\nprivate SwipeRefreshLayout swipeRefreshLayout;\n\nprivate String querySearch = \"\";\nprivate String memberType;\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_choose_user);\n\n    String title = getIntent().getStringExtra(\"title\");\n    memberType = getIntent().getStringExtra(\"member_type\");\n\n    // Find the toolbar view inside the activity layout\n    TitleMarqueeToolbar toolbar = (TitleMarqueeToolbar) findViewById(R.id.toolbar);\n    // Sets the Toolbar to act as the ActionBar for this Activity window.\n    // Make sure the toolbar exists in the activity and is not null\n    try {\n        setSupportActionBar(toolbar);\n    } catch (Throwable t) {\n        // WTF SAMSUNG!!!\n    }\n\n    // Display icon in the toolbar\n    // getSupportActionBar().setDisplayShowHomeEnabled(true);\n    // getSupportActionBar().setLogo(R.mipmap.ic_launcher);\n    // getSupportActionBar().setDisplayUseLogoEnabled(true);\n\n    ActionBar actionBar = getSupportActionBar();\n    // Remove default title text (app name)\n    actionBar.setDisplayShowTitleEnabled(false);\n    // show back button\n    actionBar.setDisplayHomeAsUpEnabled(true);\n    // make marquee title bar\n    toolbar.setTitle(title);\n\n    // swipe\n    swipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.swipeRefreshLayout);\n\n    //create our FastAdapter which will manage everything\n    fastItemAdapter = new FastItemAdapter<>();\n    fastItemAdapter.withSelectable(true);\n    fastItemAdapter.withItemEvent(new UserItem.UserClickEvent());\n\n    //create our FooterAdapter which will manage the progress items\n    footerAdapter = new FooterAdapter<>();\n\n    //configure our fastAdapter\n    fastItemAdapter.withOnClickListener(new FastAdapter.OnClickListener<UserItem>() {\n        @Override\n        public boolean onClick(View v, IAdapter<UserItem> adapter, UserItem item, int position) {\n\n            Intent returnIntent = getIntent();\n            returnIntent.putExtra(\"id\", item.getId());\n            returnIntent.putExtra(\"name\", item.getFirstName() + (item.getLastName() == null ? \"\" : \" \" + item.getLastName()));\n            setResult(Activity.RESULT_OK, returnIntent);\n            finish();// finishing activity\n\n            return false;\n        }\n    });\n\n    GridLayoutManager gridLayoutManager = new GridLayoutManager(ChooseUserActivity.this, 3);\n    gridLayoutManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n        @Override\n        public int getSpanSize(int position) {\n            switch (fastItemAdapter.getItemViewType(position)) {\n                case R.id.fastadapter_progress_item_id:\n                    return 3;\n                case R.id.fastadapter_user_item_id:\n                    return 1;\n                default:\n                    return -1;\n            }\n        }\n    });\n    recyclerView = (RecyclerView) findViewById(R.id.recyclerview);\n    recyclerView.setLayoutManager(gridLayoutManager);\n    recyclerView.setItemAnimator(new DefaultItemAnimator());\n    //set our adapters to the RecyclerView\n    //we wrap our FastAdapter inside the ItemAdapter -> This allows us to chain adapters for more complex useCases\n    recyclerView.setAdapter(footerAdapter.wrap(fastItemAdapter));\n\n    endlessRecyclerOnScrollListener = new EndlessRecyclerOnScrollListener(footerAdapter, Api.MAX_RECORD_PER_PAGE) {\n        @Override\n        public void onLoadMore(final int currentPage) {\n            loadData(querySearch, currentPage);\n\n            //simulate networking (2 seconds)\n            /*Handler handler = new Handler();\n            handler.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    loadData(currentPage);\n                }\n            }, 2000);*/\n        }\n    };\n    recyclerView.addOnScrollListener(endlessRecyclerOnScrollListener);\n\n    swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n        @Override\n        public void onRefresh() {\n            // direct hide, because we have footer loading\n            swipeRefreshLayout.setRefreshing(false);\n\n            // 1. First, clear the array of data\n            fastItemAdapter.clear();\n\n            // 2. Notify the adapter of the update\n            fastItemAdapter.notifyDataSetChanged();\n\n            // 3. Reset endless scroll listener when performing a new load\n            endlessRecyclerOnScrollListener.resetPageCount();\n        }\n    });\n\n    /**\n     * Showing Swipe Refresh animation on activity create\n     * As animation won't start on onCreate, post runnable is used\n     */\n    swipeRefreshLayout.post(new Runnable() {\n        @Override\n        public void run() {\n            // show loading\n            // swipeRefreshLayout.setRefreshing(true); // disable loading for first time\n\n            //load first items to ItemAdapter\n            endlessRecyclerOnScrollListener.resetPageCount();\n        }\n    });\n\n    //restore selections (this has to be done after the items were added\n    fastItemAdapter.withSavedInstanceState(savedInstanceState);\n}\n\n@Override\nprotected void onStop() {\n    Ion.getDefault(ChooseUserActivity.this).cancelAll(ChooseUserActivity.this);\n\n    super.onStop();\n}\n\n@Override\nprotected void onSaveInstanceState(Bundle outState) {\n    //add the values which need to be saved from the adapter to the bundel\n    outState = fastItemAdapter.saveInstanceState(outState);\n    super.onSaveInstanceState(outState);\n}\n\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n\n    int id = item.getItemId();\n\n    switch (id) {\n        case R.id.action_search:\n            // Not implemented here\n            return false;\n        case android.R.id.home:\n            this.finish();\n            return true;\n        default:\n            break;\n    }\n\n    return super.onOptionsItemSelected(item);\n}\n\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    // Inflate the menu items for use in the action bar\n    getMenuInflater().inflate(R.menu.general_search, menu);\n\n    if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {\n        final SearchView searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n            @Override\n            public boolean onQueryTextSubmit(String query) {\n\n                // TODO: I DON\"T WHY IS DOUBLE SEARCH\n                if(!querySearch.equals(query)){\n                    querySearch = query;\n\n                    // 1. First, clear the array of data\n                    fastItemAdapter.clear();\n\n                    // 2. Notify the adapter of the update\n                    fastItemAdapter.notifyDataSetChanged();\n                    // fastItemAdapter.notifyAdapterDataSetChanged();\n\n                    // 3. Reset endless scroll listener when performing a new load\n                    endlessRecyclerOnScrollListener.resetPageCount();\n                }\n\n                return true;\n            }\n\n            @Override\n            public boolean onQueryTextChange(String query) {\n\n                if(query.isEmpty()){\n                    if(!querySearch.isEmpty()){\n                        querySearch = query;\n\n                        // 1. First, clear the array of data\n                        fastItemAdapter.clear();\n\n                        // 2. Notify the adapter of the update\n                        fastItemAdapter.notifyDataSetChanged();\n                        // fastItemAdapter.notifyAdapterDataSetChanged();\n\n                        // 3. Reset endless scroll listener when performing a new load\n                        endlessRecyclerOnScrollListener.resetPageCount();\n                    }\n                }\n\n                return true;\n            }\n        });\n    } else {\n        menu.findItem(R.id.action_search).setVisible(false);\n    }\n\n\n    return super.onCreateOptionsMenu(menu);\n}\n\nprivate void loadData(String query, Integer page) {\n\n    // load if online\n    // if (Common.isOnline(getContext())) {\n\n    // show loading footer\n    footerAdapter.clear(); // make sure\n    footerAdapter.add(new ProgressItem().withEnabled(false));\n\n    // make URI GET PARAMS\n    String uri = Uri.parse(Api.GET_USERS)\n            .buildUpon()\n            .appendQueryParameter(\"q\", query)\n            .appendQueryParameter(\"group_name\", getString(R.string.app_name))\n            .appendQueryParameter(\"member_type\", memberType) // TODO: CHANGE TO VARS DON'T HARDCODE\n            .appendQueryParameter(\"p\", page.toString())\n            .build().toString();\n\n    // get information from URL\n    Api.doGET(ChooseUserActivity.this, uri, new FutureCallback<Response<String>>() {\n        @Override\n        public void onCompleted(Exception ex, Response<String> response) {\n\n            // hide loading footer\n            footerAdapter.clear();\n\n            // has error after process\n            if (ex != null) {\n                // break\n                return;\n            }\n\n            // If valid response\n            if (response.getHeaders().code() == 200) {\n\n                try {\n                    JSONObject responseJsonObject = new JSONObject(response.getResult());\n                    Integer statusCode = 0;\n                    String message = \"\";\n                    if (responseJsonObject.has(\"status_code\")) {\n                        statusCode = responseJsonObject.getInt(\"status_code\");\n                    }\n                    if (responseJsonObject.has(\"message\")) {\n                        message = responseJsonObject.getString(\"message\");\n                    }\n\n                    if (statusCode == 200) {\n                        if (responseJsonObject.has(\"data\")) {\n                            JSONArray jsonArray = responseJsonObject.getJSONArray(\"data\");\n\n                            for (int i = 0; i < jsonArray.length(); i++) {\n\n                                JSONObject jsonObject = jsonArray.getJSONObject(i);\n\n                                fastItemAdapter.add(fastItemAdapter.getAdapterItemCount(), new UserItem()\n                                        .withIdentifier(jsonObject.getInt(\"id\"))\n                                        .setId(jsonObject.getInt(\"id\"))\n                                        .setUsername(Common.JsonObjectStringNullReplacer(jsonObject, \"username\"))\n                                        .setFirstName(Common.JsonObjectStringNullReplacer(jsonObject, \"first_name\"))\n                                        .setLastName(Common.JsonObjectStringNullReplacer(jsonObject, \"last_name\"))\n                                        .setGender(Common.JsonObjectStringNullReplacer(jsonObject, \"gender\"))\n                                        .setBirthDate(Common.JsonObjectStringNullReplacer(jsonObject, \"birth_date\"))\n                                        .setPlaceOfBirth(Common.JsonObjectStringNullReplacer(jsonObject, \"place_of_birth\"))\n                                        .setReligion(Common.JsonObjectStringNullReplacer(jsonObject, \"religion\"))\n                                        .setEmail(Common.JsonObjectStringNullReplacer(jsonObject, \"email\"))\n                                        .setPhone(Common.JsonObjectStringNullReplacer(jsonObject, \"phone\"))\n                                        .setAdditionalPhone(Common.JsonObjectStringNullReplacer(jsonObject, \"additional_phone\"))\n                                        .setAddress(Common.JsonObjectStringNullReplacer(jsonObject, \"address\"))\n                                        .setCountryId(jsonObject.getInt(\"country_id\"))\n                                        .setCountry(Common.JsonObjectStringNullReplacer(jsonObject, \"country\"))\n                                        .setProvince(Common.JsonObjectStringNullReplacer(jsonObject, \"province\"))\n                                        .setRegency(Common.JsonObjectStringNullReplacer(jsonObject, \"regency\"))\n                                        .setVillage(Common.JsonObjectStringNullReplacer(jsonObject, \"village\"))\n                                        .setPhotoFilename(Common.JsonObjectStringNullReplacer(jsonObject, \"photo_filename\"))\n                                        .setDistrict(Common.JsonObjectStringNullReplacer(jsonObject, \"district\"))\n                                        .setSumRating(jsonObject.getDouble(\"sum_rating\"))\n                                        .setCountUserRating(jsonObject.getInt(\"count_user_rating\"))\n                                );\n                            }\n                        }\n                    } else {\n                        ColoredSnackbar.alert(Snackbar.make(ChooseUserActivity.this.findViewById(android.R.id.content), message, Snackbar.LENGTH_LONG)).show();\n                    }\n                } catch (JSONException e) {\n                    ColoredSnackbar.warning(Snackbar.make(ChooseUserActivity.this.findViewById(android.R.id.content), getString(R.string.connection_error), Snackbar.LENGTH_LONG)).show();\n                }\n            }\n        }\n    });\n}\n\n}\n```\nI was follow an example from your step by step but still not working :'(. yes, on my activity, it have search query and do update the items after submitting. This part of code from above:\n```java\npublic boolean onQueryTextSubmit(String query) {\n                // TODO: I DON\"T WHY IS DOUBLE SEARCH\n                if(!querySearch.equals(query)){\n                    querySearch = query;\n\n                    // 1. First, clear the array of items\n                    fastItemAdapter.clear();\n\n                    // 2. Notify the adapter of the update (I dont know what the best of call for this)\n                    fastItemAdapter.notifyDataSetChanged();\n                    // fastItemAdapter.notifyAdapterDataSetChanged();\n\n                    // 3. By call this method, then we load new items with or without quer\n                    // it will call method :  private void loadData(String query, Integer page)\n                    endlessRecyclerOnScrollListener.resetPageCount();\n                }\n\n                return true;\n            }\n\n```\nBut after I update the items on fastitemadapter, why it not show update on recycleview. And why after I remove footerAdapter (not using footerAdapter) it run good. I think problem is between endlessscroll and headeradapter/footeradapter. But I don't know how to fix it. I just want to use footeradapter to show loading animation until the data is loaded. :'(\n. Yes I was call the loadData() method on main thread and still not working until I remove the footerAdapter.\nIf the method of loadData have problem, but why is working good when I remove the footerAdapter.\nSo I change adapter from this:\nrecyclerView.setAdapter(footerAdapter.wrap(fastItemAdapter));\nto this:\nrecyclerView.setAdapter(fastItemAdapter);\nAnd it works!\nBtw, do you have an example using fastadapter with footeradapter and load list of data from internet (with query search too)?. confusing...\nI don't know how to fix it.\nSometimes, after I clear and add several items on adapter and call:\nfastItemAdapter.notifyDataSetChanged();\nbut list on recycleview is not update.  :(\nAnd I add log on item class to method bindView, sometimes the method not call.\n. I no have idea.\nAnd I was search all your examples, and I don't see an example using query search with online update data.\nOn your example, you just load all data to adapter and search/filter only from available/loaded data on adapter.\nI just want to do:\n\nInput query, and submit to server via web service\nWhen data return from server, I clear old data on adapter, and insert new data to adapter\nAnd as you say fastadapter will auto show the data on the list (recycleview)\n\nbut sometimes when server return the data, it not update to list (recycleview).\nI will try to solve this as soon as possible.\n. Hi Mike, I just send you an example of source to show you the problem that I found. Any way thank you before. Yes I send to : mikepenz@gmail.com. Not working :(, I was test with two solutions above.\nThis is link of video to show you the problem:\nhttps://drive.google.com/open?id=0B69BM-MOwRDBMVZOVnZ2b3pOcnM\nI hope you understand.. oh okay, good info for me, thank you for your support.. ",
    "LadwaAditya": "Solved it myself \nSometimes you need to look into the source code\nSimpleDragCallback dragCallback = new SimpleDragCallback(SimpleDragCallback.ALL, this);. @mikepenz  @FabianTerhorst  on version 2.6.2 of fastadapter and 2.6.0 of fastadapter-extensions the callback itemTouchDropped isn't called. @mikepenz @FabianTerhorst It worked. I actually hadn't implemented the IDraggable interface. \nAlso the README needs an update. ",
    "adrielcafe": "@LadwaAditya you save my day. Thanks!. ",
    "cbeyls": "You're welcome. By the way, if you want to make the code compatible with older versions of the support library (< 25.1.0), you can keep using HashSet instead of ArraySet.\nAdapterUtil.adjustPosition() is still creating a TreeSet; I didn't change that because it's a public method returning a SortedSet. But technically we don't need the set ordered so it could return a Set<Integer> and internally create an ArraySet<Integer>.. ",
    "PN1019": "@judemanutd  here is link\nAs you have mentioned you have 2 textview views and  imageview...this code actually works almost same way like the code you have written.......hope this helps!!! . @judemanutd  try again now it's working\n. ",
    "k3b": "My cursor adapter implementation does not use the FastAdapter so i assume it will not add any value to your lib. ",
    "Shakezulla57": "@mikepenz Okay, thank you.. Thanks for getting back to me. Ok I just discovered setSpanSizeLookup so that solves one portion of it for me. Since I have two different types of objects in my adapter do I need to use GenericItemAdapter with GenericAbstractItem? . I might have found what I'm looking for in #48 . @mikepenz Thanks, that got me on the right track.. @mikepenz Do you have your own rule for when you'd use a FastAdapter and an ItemAdapter versus when you'd use a single FastItemAdapter?. Thanks for the feedback @FabianTerhorst. The places where I'm injecting a dependency like this are already ModelAdapters with generic items. So I'll just keep doing it that way.. Thanks @mikepenz that fixed it. I really thought I had updated the Material Drawer library, guess not :(. ",
    "RJFares": "+1. ",
    "chanonly123": "Awesome, Thanks. ",
    "AllanWang": "@mikepenz thanks for the response. I came across that answer, but that's a listener for each viewholder, whereas I am looking for a callback once all the views finish animating. The implementation I have now is similar to that, with the only issue being the time between calling add() in the adapter to the time adding the views actually take place.\nI will continue looking for a better solution elsewhere.. I found the solution and am linking it here in case someone stumbles across it while using FastAdapter\nThe solution was to add \njava\nif (oldHolder == newHolder) {\n    // Don't know how to run change animations when the same view holder is re-used.\n    // run a move animation to handle position changes.\n    return animateMove(oldHolder, fromX, fromY, toX, toY);\n}\nin animateChange. Ah oops. Wasn't aware that the internal selection wasn't being set with with selected. Thanks. I see. Thanks. You'll have different adapters for different view types. The adapters for all the view types except for the last one will be HeaderAdapters, and the last one will be an ItemAdapter.\nWhen you wrap it, wrap it in the order that they will appear (so the ItemAdapter will be last).\nWhat happens is that you should be able to add items to each of those adapters the way you normally would, but in the end all the items are added in the last ItemAdapter.\n(This is from my understanding; I'm trying this as well). The source is here so it should be pretty easy to change it for scrolling up.  Have a go at it. Nevermind, it seems like this will be implemented in v3 of FastAdapter.  The source is here\nand the branch reference is here. @mikepenz Nope. I use it for KAU and it basically converts your md files to html files (including the changelog as you can see). Just change your page to build from master and it should all update automatically. It also works for subdirectories if you choose to put read me files in your submodules as well.. After you switch your page to load from master you might need to push a new commit to master for it to build. The solution works fine now with multi select available. However if there are better options that the onClickListener I'd like to hear it.. @mikepenz For the record, I don't think lint warns  you if getViewHolder returns null. Your annotation is for parameter values, and it didn't show for me for return values when I tried it.\nI'm also getting the following error:\njava\njava.lang.NullPointerException: Attempt to invoke interface method 'android.support.v7.widget.RecyclerView$ViewHolder com.mikepenz.fastadapter.IItem.getViewHolder(android.view.ViewGroup)' on a null object reference\n                                         at com.mikepenz.fastadapter.listeners.OnCreateViewHolderListenerImpl.onPreCreateViewHolder\nWhich is similar to one mentioned above after updating FastAdapter. I will post any fix once I find the issue.. @FabianTerhorst that doesn't seem to be merged yet. Is there a version to test it?. Oh I thought you were referring to the onPreCreateViewHolder issue. I see the annotation in the PR. Given that that's a very widely used method, you may consider annotating the return type. I'm not advocating it for every method. Namely the abstract ones like getViewHolder, where the default code import will make it return null. @mikepenz does that work in this case?\nTo make links clickable, we define\njava\nsetMovementMethod(LinkMovementMethod.getInstance());\nWhen we create the textview. We don't really handle the clicks ourselves afterwards.\nDo you have a link to a working sample? I know you use this with AboutLibraries but I don't see clickable links there.\nI will test some other methods\n. Hm. Maybe I wasn't clicking properly. I tried what I did before again (setting the movement method on the viewholder creation) and it worked. Thanks. Yup using position based. Thanks for the info. . I guess what I mean is that if two adapters have separate item types, kotlin can't seem to infer that the fast adapter has a generic type iitem. Part of the reason may be from not using ? extends IItem which represents out. That is correct. Technically, all the adapters should implement out, but a lot of times we can avoid that if we have just one iitem class per adapter. Why not also allow for outer types in the static creator? See this:\n```java\npublic class Test {\npublic static <T extends IItem> FastAdapter<T> with(Collection<IAdapter<? extends T>> adapters) {\n    return FastAdapter.with(adapters);\n}\n\n}\n```\nand the comparison\n```kotlin\nval adapter1: IAdapter = ItemAdapter()\nval adapter2: IAdapter = ItemAdapter()\nval fast1 = FastAdapter.with, IAdapter>>(listOf(adapter1, adapter2))\nval fast2 = Test.with(listOf(adapter1, adapter2))\n```\nAll the static creators should have out bounds when necessary to avoid messing with type inference\nedit:\nI just tried with\nkotlin\nval adapter3: IAdapter<out CardIItem> = ItemAdapter()\nval adapter4: IAdapter<out HeaderIItem> = ItemAdapter()\nand you still need to specify types. To add onto this, why require a specific type for the IAdapter? Collections by default has extensions, so Collections<IAdapter> allows for anything that extends IAdapter. This is what I've noticed. Feel free to correct me where I'm wrong, as the use of generics here is much more extensive than what I usually do.\nFor a lot of the methods, we take in Item extends IItem for the item type and some A extends IAdapter for the adapter type. The goal is that any adapter we have is an IAdapter, and our output wraps around Item. \n\n\nThis isn't type safe, because there is no check between my adapter type and the type I actually want. I can easily assign Item to be of type CheckboxIItem and pass in whatever I want as the content.\n\n\nThe use of A doesn't really solve anything. All we care about is that we are taking in IAdapter. Collections<IAdapter> can already take in anything that extends that when you are adding another collection. In other words:\n\n\nJava\npublic static <Item extends IItem, A extends IAdapter> FastAdapter<Item> with(@Nullable Collection<A> adapters)\nshould not be any different from\nJava\npublic static <Item extends IItem> FastAdapter<Item> with(@Nullable Collection<IAdapter> adapters)\nThis is also why Kotlin has a very hard time inferring types. In reality, things should be\nJava\npublic static <Item extends IItem> FastAdapter<Item> with(@Nullable Collection<IAdapter<? extends Item>> adapters)\nTo ensure that all adapters actually provide the proper items. \nI tried to address this myself, but unfortunately, this would result in too many changes. The issue is that a lot of interactions is under the assumption that all adapters are exactly of type IAdapter<T>. (A FastAdapter<IItem> should not be able to hold a FastAdapter<CheckboxIItem>).\nExample of type erasure:\n\nGenerate a FastAdapter<IItem> and take in IAdapter<CheckboxIItem>. \nReturn the first adapter in the FastAdapter, which would be IAdapter<IItem>.\nWrap that adapter in a FastItemAdapter, leading to FastItemAdapter<IItem>.\nAdd any other adapter you want, because every iitem extends IItem, when in reality, the adapter is backed by CheckboxIItem.\n\nSo from here, I'm not sure how you would like to continue this. You could just change the signature of the static methods since the actual types aren't checked anyways, just so languages like Kotlin can infer it.. I think this can be closed. The only improvement I can think of is perhaps making A extends IAdapter become A extends IAdapter<? extends IItem> (or the first generic specified). Regardless, people can always add an extension method themselves to avoid writing the generics all the time. I already do :)\nhttps://github.com/AllanWang/KAU/tree/dev/adapter\nIt's not purely for FastAdapter though as it contains some extra iitems.\nIf you'd like to have a submodule in this repo, I'd be happy to add only the core methods that will help everyone. (I stand corrected. It seems like you can retrieve the ItemAdapter from FastItemAdapter. I will give that a try for now. I want to avoid checking for type instance. My click event will check the number of selected items, so I feel weird having to get the items themselves and filter out the ones of the wrong type.\nWrapping the other adapter as fast item adapter worked for me. I will also take a look at the hookable. I like that more. I'm going to move conversation for type safety to #558 since that's the topic there.\nThe solutions above already provide a way of addressing this. (Wrapping any IAdapter within a FastItemAdapter is my solution). If you update to FastAdapter to 3.0.+, you should definitely update your support libraries. I had some crashes (unrelated to diffutils) without updated support libraries, so there could be an incompatibility here as well. ```kotlin\nprivate var previewClick: Int = -1\nprivate var previewClickTime: Long = -1L\n\nprivate fun onPreviewClick(view: View, item: TabIItem, position: Int) {\n    if (previewClick != position) {\n        previewClick = position\n    } else if (System.currentTimeMillis() - previewClickTime < 200) {\n        if (previewAdapter.itemCount > 1) {\n            previewAdapter.remove(position)\n            optionsAdapter.add(item.asOption())\n            previewClick = -1\n        } else {\n            view.wobble()\n        }\n    }\n    previewClickTime = System.currentTimeMillis()\n\n}\n```\nThis could be a very short wrapper for the current click listener if this were to be considered.. Reference to those interested (though it is untested as I no longer had a need for it)\n```kotlin\nfun > FastAdapter.withOnRepeatedClickListener(count: Int,\n                                                                       duration: Long,\n                                                                       event: OnClickListener) =\n        withOnClickListener(RepeatedClickListener(count, duration, event))\n/*\n * Registers and skips each click until the designated [count] clicks are triggered,\n * each within [duration] from each other.\n * Only then will the [event] be fired, and everything will be reset.\n /\nprivate class RepeatedClickListener>(\n        @IntRange(from = 1) val count: Int,\n        @IntRange(from = 1) val duration: Long,\n        val event: OnClickListener) : OnClickListener {\ninit {\n    if (count <= 0)\n        throw IllegalArgumentException(\"RepeatedClickListener's count must be > 1\")\n    if (duration <= 0)\n        throw IllegalArgumentException(\"RepeatedClickListener's duration must be > 1L\")\n}\n\nprivate var chain = 0\nprivate var time = -1L\n\noverride fun onClick(v: View, adapter: IAdapter<Item>, item: Item, position: Int): Boolean {\n    val now = System.currentTimeMillis()\n    if (time - now < duration)\n        chain++\n    else\n        chain = 1\n    time = now\n    if (chain == count) {\n        chain = 0\n        event.onClick(v, adapter, item, position)\n        return true\n    }\n    return false\n}\n\n}\n```\nBasically keep track of latest click time & num of clicks and act accordingly. I got things to work so I'll just make a comment here for future users.\nMy implementation didn't involve two recyclerviews as I expected. That implementation would involve drag and drop beyond what FastAdapter contains. To implement something similar to the gif below and to quick tiles in the system ui, you only need on recycler, and optionally have a divider set to span the entire width. That way, one container may have gaps.\nTo properly showcase movements in grids, I needed notifyDataSetChanged. Just specifying the two indices had improper animations, and using a range didn't seem to work either.\n\nFull code is here, to refer to scaling up on drag.\n. Essentially, if the items all had dividers at the bottom, the only thing you want to avoid is the last item having that divider correct?\nIn that case, I don't think it will be too hard for you to override add, remove, and change. In each step, just check if the last item will be modified, and if so, let the originally last item show its divider and let the new last item hide its divider.\nAnother hacky trick that I haven't tried is to shift the footer layout up by 1dp, or whatever the thickness of your divider is. That way it will always hide the divider of  the last item. (Not sure if this will hold true for ViewHolders or if they will just cut off at the start position.. I think a boolean to toggle divider display is as simple as you can get. As mentioned, you can override the adapter to toggle the booleans when necessary. Okay that is great. I recently saw the warning in my lint and was wondering whether it was enforced. Good to know that it is.. I'm closing this for now, but given that this change was made in July and I've used FastAdapter after, that annotation may not have been compatible with the auto import.\n(Pressing ctrl + o will open a list of overridable methods, and Kotlin will set parameters as nullable if it isn't explicitly declared otherwise)\nIf this is still an issue I will reopen it. @FabianTerhorst does this work for you? I tried enabling the flag and importing bindView still results in a null payload.\nRelevant post. java\nFastAdapter<IItem> main = FastAdapter.with(Arrays.asList(headerAdapter.getItemAdapter(), adapter.getItemAdapter()));\nmain.registerTypeInstance(new ColorPickerIItem());\nmain.registerTypeInstance(new ShowcaseDraggableItem(\"\", 0));\nsetAdapter(main);\nThis is my dirty fix, given that the item type is returning null.\nI'm not sure how FastAdapter typically registers type instances, but maybe it is missing it in FastAdapter.with?. Yes. It is enforced that it returns an id res. Sample:\n```java\npublic class ColorPickerIItem extends AbstractItem {\n@Override\npublic ViewHolder getViewHolder(View v) {\n    return new ViewHolder(v);\n}\n\n@Override\npublic int getType() {\n    return R.id.iitem_color_picker;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.iitem_color_picker;\n}\n\nstatic class ViewHolder extends RecyclerView.ViewHolder {\n\n    final AnimatedColorPicker picker;\n\n    ViewHolder(View itemView) {\n        super(itemView);\n        picker = itemView.findViewById(R.id.color_picker);\n        if (itemView.getContext() instanceof AnimatedColorPicker.ColorPickerListener)\n            picker.setColorListener((AnimatedColorPicker.ColorPickerListener) itemView.getContext());\n        else\n            Timber.d(\"ColorPickerIItem has no bound color listener\");\n    }\n}\n\n}\n. @FabianTerhorst I tried it too before with ItemAdapter as well but it didn't work. I'll try again later. I know I've done this before and it worked, and I think I needed fastitemadapter so I could bind listeners. .java\nItemAdapter headerAdapter = new ItemAdapter<>();\nheaderAdapter.add(new ColorPickerIItem());\nItemAdapter tailAdapter = new ItemAdapter<>();\ntailAdapter.add(new IconIItem(GoogleMaterial.Icon.gmd_add, 0x08000000));\nFastAdapter main = FastAdapter.with(Arrays.asList(\n        headerAdapter,\n        adapter,\n        tailAdapter\n));\n```\nAll adapters are ItemAdapters, and setting the adapter to main didn't work. False alarm there. The issue is that I was adding items before binding to a FastAdapter, leading mFastAdapter to be null.\nMaybe it's just me, but I wasn't aware of the constraints for these methods.\nI think it's definitely worthwhile to document the precondition of getFastAdapter().\nAs for helping debugging, it's up to you if you feel throwing a more specific instruction is good when getting the item from cached ids returns null, or if you feel that's too much of an overhead. I guess this should never happen if the developer attaches the FastAdapter properly. I'm going to close this since the issue was resolved. . Couldn't you just split up sticky and nonsticky items as two classes extending the base implementation class? The id will be different, but the layouts and bindings will be the same.. Do you have a reference/link to a code snippet I can look at? Doesn't look like any of the examples uses the payloads. Things like CheckBoxIItem are toggled by selection, and it only seems to notify the change. I believe blinking in many cases is the default behaviour as changing items have their alphas set to 0.\nYou may have a look at Mike's item animator here or my set here in Kotlin. But you've checked that the adapter isn't null before calling the listener? At least in this method, you're passing either fastAdapter or adapter, and both are nonnull from the application above. And I understand that no checks are made for the view, but when exactly would that ever be null? . Okay I see the point in Select Extension. Is annotating this the best measure though? Annotations are enforced, meaning that anything using the view should check that it is non null first before using it, regardless of whether that's possible. I think that in sp\u00e9cial cases like these, it may be best to just document this in the precondition. This has more implications with kotlin, where all of our listeners are now invalid as our types are nonnull by default, and we need to do invalid checks or unsafe casting. . The view is still marked as null. This is probably the more important one, as it is used for almost all the listeners. I feel like this should just be documented, as again, a nullable annotation implies that it should always be handled. We'd either need to do an unsafe casting, or check for null before using the context in every case (with no real means of propagating an error). Will the actual click ever occur like that? In that case, shouldn't the sample code all be updated to check for nullability before retrieving the view context? . I agree with that, but that's why I'm wondering if the annotation is the best design here. In most cases, the nullability won't have to be handled as it isn't possible. Even if you were to use lint with Java, you would end up having a warning for every usage. In kotlin, the whole thing would just be wrong in general, and nothing will compile as you have not specified to consume the nullability nor checked that it is non null.\nIn the end, it's up to you, but I believe that having warnings like this is going to raise a lot of questions of when to and when not to handle it. And anyone looking at the example code, where the view is effectively nonnull, may ignore the annotation either way.\nIt may be better to simply document all the cases where it's nullable and not actually annotate it.\nThis may also be far-fetched for you, but there is likely also a way to check when the view is actually nullable and warn accordingly. This may require writing a plugin, or maybe annotations are powerful enough to support this based on what dependencies you import, but that seems like a less misleading solution. . @mikepenz friendly ping, unless your decision here is final. Perhaps @FabianTerhorst may be able to convince you on why this may not be the best.\nEven in the 3.2.2 sample code, I don't see anything that checks for view nullability. See the expandable item example. I'm going to guess that 95% of all click events implemented result in some ui change, where the context is important. Without a guarantee that the view exists, how are people expected to handle that?\nAnd lastly, and on click listener implies that something was clicked. If even the parent of the expandable were to be passed instead of null, I think that would be a better resolution. If there is another case where no click actually triggers the listener, I would strongly suggest making that a separate listener where the nullability is expected and explicit.\nIf you need a PR for this, and more documentation added to the listener rather than an annotation, please let me know. I'm still unwilling to move onto this from Kotlin as I'm either asserting nonnull, which defeats the purpose of annotations, or checking for nullability and failing as I can't handle the click.. This is different though. Without the use of the extension libraries, the view will never be null. There exists a condition before the view is even nullable. \nIf the mindset is to ignore the annotation where the user is sure it's nonnull, what's the point of having the annotation in the first place? findViewById is an interesting point, as well as getContext being nullable in a fragment, but I find those really weird as well as there doesn't exist a good way to handle anything without lots of boilerplate code if they are indeed null when needed. Final say is naturally up to you guys. I was also wondering if there was a solution of passing a parent view for expandable clicks, given that a click listener implies that something was indeed clicked at some point to trigger it. That way everything would be nonnull in all cases, and you'd also get more information out of the event. Did you update your support libs as well? Don't see how that would cause a build to fail, but it is necessary to get fast adapter working properly. You can so remove mavenCentral() as that's included in jcenter and remove the maven.google.com as that's the old alternative of google() . Have you tried invalidating cache? And is it supposed to be trying to fetch library-core? You could try it through jitpack as a last resort. Similar to #624. If I find anything I will post there. The stack overflow reference explains it pretty well. Java supports cyclic generics whereas kotlin does not.\nThe issue is namely in ISubItem which depends on IExpandable, which depends on ISubItem again.\nOne solution would be to declare a self reference as mentioned in the SO, but that needs to be done in the library (and won't really be pretty).\nFor me personally, I just wrote my own view allowing for expansion, like so. There exists many ways to make a wrapper allowing for expansions, and here is my implementation. From my experience, you typically add multiple ItemAdapters if you have defined sections containing an arbitrary number of items. In your case, you namely hae items of type C, with some special item A and B.\nI recommend you just use a generic ItemAdapter taking the superclass, add items of the type you need at the position you want, and then checking type instance when you need to handle an event. \nNote that the generic level only needs to be as specific as you need it to be. If you don't handle events through fastadapter, you don't need to worry about the generic.. If your items are more related and have the same input, you may consider looking at the ModelIItems. What version are you using for the fastadapter dependencies and for appcompat? Does this work in debug mode without proguard?. The sample has the following line:\njava\nmFastAdapter.withSelectOnLongClick(false);\nDid you change that since you want selection on long click?. Interesting. I didn't consider casting. I will get back to you if I find an elegant inline function for this. Thanks! I ended up using your suggestion\n```kotlin\ninline fun , Item : IItem<, >> FastAdapter.getExtension(): T? =\n        getExtension(T::class.java)\n/*\n * Returns selection size, or -1 if selection is disabled\n /\ninline val > IAdapter.selectionSize: Int\n    get() = fastAdapter.getExtension, Item>()?.selections?.size ?: -1\ninline val > IAdapter.selectedItems: Set\n    get() = fastAdapter.getExtension, Item>()?.selectedItems ?: emptySet()\n```. ",
    "bmarty": "Ok, thank you for your quick feedback. Finally I managed to draw a sticky header manually, by registering a scroll listener on the RecyclerView. It is not fully optimized or reusable, but it works ;-). ",
    "marbat87": "@bmarty Could you please provide a sample code?\nThanks in advance. It works quite fine, thank you.. @mikepenz I was talking about a single level implementation.\nStep to reproduce:\n- Click on a SimpleSubExpandableItem >> the section is expanded\n- Click on  SimpleSubItem >> the previously expanded section is collapsed!\nI think you can replicate  the issue, just adding withOnlyOneExpandedItem(true)  on your adapter in ExpandableSampleActivity.. @mikepenz When will you release a new version with this fix?\nRegards. In order to avoid this issue, actually the solution is to create a new UndoHelper, each time.. @mikepenz  done with #387 \nRegards. ",
    "urob0ros": "i love you.. I finally figured it out. Sorry, it was my mistake. I was calling the above method from a synchronous retrofit web method. So it was running to completion before the web call was finished. And it would only refresh on tap. I just had to get the logic straight for calling sync retrofit calls in an async task, so i can await it to completion and update the recyclerview adapter.. How do I modify the position of the sticky header? Or the position of the ads? Im assuming i have to modify the sticky header adapter . I have this resolved. I can commit the code if you'd like. . ",
    "jelther": "Mike,\nHere is my code. I guess the only difference is that I'm using a Fragment instead of an Activity.\nhttps://github.com/jelther/DiceWareBr/blob/master/app/src/main/java/com/jetolgon/dicewarebr/ListaFragment.java\nAnd my Item:\nhttps://github.com/jelther/DiceWareBr/blob/master/app/src/main/java/com/jetolgon/dicewarebr/DicewareItem.java\nI've debugged your code and I've saw your SimpleItem doesn't lose its size. But my code the size of my adapter goes to 0 after the filtering.\nThanks!. @mikepenz , I'm relieved. I thought it's was a code error since I'm still a beginner on Android Dev. Thanks!\n. @mikepenz , I've downgraded my gradle version to 2.1.7 and it worked.\nYour work is great and thank you for creating this library. There is no need to apologize.\nI'll upgrade to the lastest version as soon as possible. \n. Mike,\nI've upgraded to the 2.5.1 version but now I'm getting the following error when I try to run the app:\n\njava.lang.NoClassDefFoundError: com.mikepenz.materialdrawer.model.AbstractBadgeableDrawerItem$ItemFactory\n\nI've already added the method getViewHolder(View v). \nDo I need to do something extra?\n. My bad. I've read 2.0.0 but now I paid more attention and it's clearly 2.5.0. Thanks!. @mikepenz , doesn't Android block all Http tasks on MainThread? I'm pretty sure I can't. I've tried to make the request synchronous (a.k.a. not creating other thread) and my code raises an Exception. Using other approach like Asynctask would lead me to the same problem, I think.. @mikepenz , I found the solution. My objects returned from Retrofit request were with the identifier set to 0. When I instantiate a new object, the Identifier is set to -1.\nAdding this to the code employee.withIdentifier(-1); solved the issue.. @mikepenz , other detail: the attribute \"mSelected\" is also set to false and mess with onClick event. Maybe that should be in documentation.. @mikepenz , there has been an exception right here, in ItemFilter.java, line 87.\nif (mItemFilterListener != null) {\n                mItemFilterListener.onReset();\n            }\nInside my OnReset implementation, I'm cleaning a simple TextView. Doing that is making the code break.. @mikepenz , I've done a review and my code looked cleaned.\nDecided to clean all cache from Android Studio 2.3 and rebuild Gradle, things got working again.\nMaybe an issue with my computer, Idk. I'll keep an eye on it to see if it happens again and I'll report you!\nThanks!. @mikepenz , I got the \"error\" now:\nI'm trying to update a View (a simple TextView) inside onReset at ItemFilterListener and the error is the folowing:\n\nandroid.view.ViewRootImpl$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views.\n\nDoes this method runs in a separated thread? What's it purpose?\n. @mikepenz , okay.\nI'll try to find other approach to manage the UI. Do you have any tip? . ",
    "dcgavril": "@mikepenz thank you for your answer. I know that this is useful to be able to update the adapter and the list view, but what I'm asking is not a custom case, it should be taken into consideration by anyone who implements this method because even if you don't do network requests but only database updates, you need to be careful about the number of triggers you set off for an item move, like I've said, currently it triggers N calls instead of 1. \nI've tried to use the onLongClick listener with MotionEvent in order to know when the user has released the item, but I haven't managed to get that notification, instead, the event goes very quickly from ACTION_MOVE to ACTION_CANCEL without notifying about a release event.\n. ",
    "engi": "I have done that :\ncompile('com.mikepenz:fastadapter:2.5.1@aar') {\n        transitive = true\n        exclude group: 'com.android.support'\n    }\nbut same problem ...\ndon't worry, app works anyway. It's ok now, thanks a lot :o). MyApplication.zip\n. Well, it is ok when I add this two lines, but is it normal to have all this warnings ?. ",
    "kotasunil79": "Figured it out. I used SimpleSwipeDragCallback and ItemTouchHelper to enable swiping on my list item. Somehow skipped this part of the sample code. \nThanks,. ",
    "engineers-bojan": "Not sure about the actual sample, just copied the relevant code parts in a project i am testing but probably happens there too. (i'll test it later and PR if i manage to get some time). ",
    "filipebezerra": "Solved using <item name=\"windowActionModeOverlay\">true</item>. Also to set statusBar color in ActionMode:\nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n    getActivity().getWindow()\n            .setStatusBarColor(getColor(getContext(), R.color.color_primary_dark));\n}\nThanks @mikepenz . ",
    "avs20": "Thanks @mikepenz for such a fast response. Will there be any effects of using GenericItemAdapter?. @mikepenz I extended my model with a GenericAbstractItem but it's still not rendering. May be I didn't understood it. What's the difference between a model and and Item? Is the model the POJO model and and  Item a FastAdapterItem? \nDo I have to keep two different classes one for the RecyclerView and the other for the map(which will be POJO)?\nThanks for replying to the basic questions. . hi mike, \nI tried different versions but GenericAbstractItem also didn't worked. What worked was that I override the equals and hashCode method in the ItemClass (can be Abstract or GenericAbstract both) and then it started clustering. I went through this route because I wanted to have the same class object for both the map and the recyclerview. \nNow I have one question, by overriding these methods am I messing with some performance for the FastAdapter? I went through the code for the AbstractItem and I saw that you use some mIdentifier to distinguish between the objects.  I have overriden it with my object's unique Id. \nSo If messing with the equals and hashCode degrade the performance or some other benefits provided by FastAdapter. \n. Thanks Mike for the quick responses. \nYou have been very helpful. You can close this issue/Question now. . ",
    "Alex293": "Nice thanks for you quick answer gonna check that tomorrow . ",
    "EladKeyshawn": "The procedure of prelongclick listener and preclicklistener are not handling properly the chain of events or the idea of handling is not explained well at all.. @FabianTerhorst I'd be glad if you could help me with implementing the basic functionality of actionmode with fastadapter, thanks!\n. ",
    "baadillahnabil": "@Rainer-Lang i did, but i'm confused in from where should i start looking because i really new on RecyclerView and i'm still learning it, but i do appreciate your answer. Thanks\n@or-dvir Thank you very much man, i do now understand how it works, i'll try it. \nyour explanation seems good to me, i think tutorial in readme.md should be added more explanation like your answer (just my opinion).. appreciate it man, Thanks \ud83d\udc4d \n. wrap_content\nthis is my layout code : \n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<com.github.nitrico.stickyscrollview.StickyScrollView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    >\n\n    <android.support.constraint.ConstraintLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:descendantFocusability=\"blocksDescendants\"\n        android:focusableInTouchMode=\"true\"\n        >\n\n        <android.support.v7.widget.AppCompatTextView\n            android:id=\"@+id/textView3\"\n            fontPath=\"fonts/Raleway-Bold.ttf\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"@drawable/left_border\"\n            android:text=\"@string/status\"\n            android:textSize=\"18sp\"\n            app:layout_constraintHorizontal_bias=\"0.0\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            tools:ignore=\"MissingPrefix\"\n            />\n\n        <android.support.v7.widget.AppCompatTextView\n            android:id=\"@+id/statusKendali\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginEnd=\"16dp\"\n            android:layout_marginStart=\"32dp\"\n            android:layout_marginTop=\"16dp\"\n            android:text=\"@string/status_kendali_on\"\n            android:textSize=\"15sp\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/textView3\"\n            />\n\n        <android.support.v7.widget.AppCompatTextView\n            android:id=\"@+id/textView7\"\n            fontPath=\"fonts/Raleway-Bold.ttf\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"24dp\"\n            android:background=\"@drawable/left_border\"\n            android:text=\"@string/kendali\"\n            android:textSize=\"18sp\"\n            app:layout_constraintHorizontal_bias=\"0.0\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/statusKendali\"\n            tools:ignore=\"MissingPrefix\"\n            />\n\n        <de.hdodenhof.circleimageview.CircleImageView\n            android:id=\"@+id/btnSwitchKendali\"\n            android:layout_width=\"150dp\"\n            android:layout_height=\"150dp\"\n            android:layout_marginLeft=\"8dp\"\n            android:layout_marginRight=\"8dp\"\n            android:layout_marginTop=\"8dp\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/textView7\"\n            />\n\n        <android.support.v7.widget.AppCompatTextView\n            android:id=\"@+id/textView8\"\n            fontPath=\"fonts/Raleway-Bold.ttf\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"8dp\"\n            android:background=\"@drawable/left_border\"\n            android:tag=\"sticky\"\n            android:text=\"@string/riwayat_kendali\"\n            android:textSize=\"18sp\"\n            app:layout_constraintHorizontal_bias=\"0.0\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/btnSwitchKendali\"\n            tools:ignore=\"MissingPrefix\"\n            />\n\n        <android.support.v7.widget.AppCompatTextView\n            android:id=\"@+id/txtNoRiwayatKendali\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginBottom=\"8dp\"\n            android:layout_marginLeft=\"8dp\"\n            android:layout_marginRight=\"8dp\"\n            android:layout_marginTop=\"8dp\"\n            android:text=\"@string/no_riwayat_kendali\"\n            android:textAlignment=\"center\"\n            android:textColor=\"#64000000\"\n            android:textSize=\"20sp\"\n            android:visibility=\"invisible\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintHorizontal_bias=\"0.0\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"@+id/rvRiwayatKendali\"\n            />\n\n        <android.support.v7.widget.RecyclerView\n            android:id=\"@+id/rvRiwayatKendali\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"0dp\"\n            android:descendantFocusability=\"blocksDescendants\"\n            android:focusableInTouchMode=\"true\"\n            app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n            app:layout_constraintHorizontal_bias=\"1.0\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintTop_toBottomOf=\"@+id/textView8\"\n            />\n\n    </android.support.constraint.ConstraintLayout>\n\n</com.github.nitrico.stickyscrollview.StickyScrollView>\n\n\n```. ",
    "frmz": "Ok, so for reusing a view since i have multiple types i will need to check if View passed to the getViewHolder() method is null or not the type i want and then create it otherwise, right?. Great! Thanks!!. That would be mouch cleaner! Reopening the issue. Just noticed that returning 0 for the layout res will correctly make it crash, i think its a common use case afterall.. My implementation works well, i am just invalidating the filter with a random string when i know it needs to be changed. The only \"annoying\" thing is that if i start with a filtered list then the list first appears with all the items and then animates the filtering, while, in theory, it should never show the filtered items when doing the following:\n\nAdapter.clear()\nAdapter.filter(\"foo\")\nAdapter.add(List)\n\nI have the same problem calling set every time the list changes since it blinks so visually is not the best idea either.. I just tested this a bit more and even disabling animations on the List wont solve this problem. From my point of view this is a bug, i would expect the items to never show up if i add them to a filtered list, not to show up and then be hidden after (from a thread since filtering is done on a thread thus not allowing animations to be disabled). Not sure how complex it is to check the filter when adding items.. I understand \"setting\" a new list will reset the filter and i agree on that, however if clear, set a filter and then, after setting the filter, add an item i would expect that filter is checked against added items and they are not shown at all instead of being shown and then being hidden (without the ability to disable the animator since its called with an handler), or at least it would be useful to have a way to force the filter in a synchronous way so a dev could disable the animations, add items, force filter update and then enable them back\nAnyway, Its just a thought, I found a few ways to do that already, library is really powerful, also, i always forget to thank you for this really awesome work, saves a lot of time, really really well done. Yeah sure, if we agree on the approach i can look into this. Issue is not solved, setNewList will call filter that will create a thread instead of just setting a filtered list, i will try to fork and fixed but current behavior is still the same as before. yes you are right and that pointed me to a way to make it work with current release (and probably also with the one before), that is:\n    mAdapter.clear();\n    // Will set the constraint without creating a thread (list is still empty so it wont filter anything)\n    mAdapter.getItemFilter().performFiltering(\"asd\");\n    // Will set the items with filtering sync\n    mAdapter.getItemFilter().add(items);\n\n. Sorry i was lazy, will do a PR next time. ",
    "rosenpin": "Just to sum up the issue, I set up the code as mentioned above, the issue is that after selecting a certain item in the list, some items that are out of view are also \"marked\" as selected for some reason.\nWould love to know what I did wrong and how to fix it.. I updated the selectionListener like you said \n\nor you tell the FastAdapter that it should call the notifyItemChanged method when a deselection happens\n\nBut still the exact same result.\nI think the issue is that items that are out of view are being selected randomly without any reason.\n``` java\n  fastItemAdapter.withSelectionListener(new ISelectionListener<TestItem>() {\n        @Override\n        public void onSelectionChanged(TestItem item, boolean selected) {\n            if (selected)\n                item.selected = true;\n            fastItemAdapter.notifyItemChanged(item.position);\n        }\n    });\n\n```\nIs there any sample code for simple selection list?\nI just need a list with one selectable item at a time . Current full code:\n``` java\n        final FastItemAdapter fastItemAdapter = new FastItemAdapter<>();\n    for (int i = 0; i < 60; i++) {\n        TestItem testItem = new TestItem();\n        testItem.description = \"asdf\";\n        testItem.name = \" \" + i;\n        testItem.position = i;\n        fastItemAdapter.add(testItem);\n    }\n    RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recyclerview);\n    recyclerView.setHasFixedSize(true);\n    recyclerView.setLayoutManager(new GridLayoutManager(this, 2));\n    recyclerView.setAdapter(fastItemAdapter);\n    fastItemAdapter.withSelectable(true);\n    fastItemAdapter.withSelectWithItemUpdate(false);\n    fastItemAdapter.withMultiSelect(false);\n    fastItemAdapter.withSelectionListener(new ISelectionListener<TestItem>() {\n        @Override\n        public void onSelectionChanged(TestItem item, boolean selected) {\n            if (selected)\n                item.selected = selected;\n            fastItemAdapter.notifyItemChanged(item.position);\n        }\n    });\n\n``. OK, I get what you are saying, kind of a bummer that it's not very flexible.\nThanks.. Maybe I misunderstood your answer.\nI wanted to call theonBindmethod on selection, but for some reason when I did, other out of view items were triggered as well. \nI now use the alternative method you mentioned, using aStateListDrawable`.\nAnyway, thank you for this and your other libraries. Really appreciate you work.. ",
    "danielpassos": "@mikepenz I totally agree with you, but, but, but \ud83d\ude48 I need to run a \"progress\"/\"timer\".\n\n. ",
    "tariqul-islam1": "Thanks. This can help me I think. I request to update Readme so that newbies like me can find this easily.. ",
    "surindersinghbindra": "Hi Mike , Can you please help me out from this issue. this doesn't look like the issue of item decorator. Do you have TeamViewer?\n\n. like  this        recyclerView.setAdapter(stickyHeaderAdapter.wrap(itemAdapter.wrap(headerAdapter.wrap(footerAdapter.wrap(fastItemAdapter)))));\n is my wrapping in right order?. Thanks Mike . @monishkamble should I show you a gist?\n. I will send you in morning. https://github.com/surindersinghbindra/SoSimpli/blob/master/app/src/main/java/com/think360/sosimply/ui/fragments/AvailabilityFragment.java. ",
    "noam2": "here is my progress item class\n```java\npublic class ProgressLoadingBunnyBlue extends AbstractItem {\nprivate AnimationDrawable animationDrawable;\n\n@Override\npublic int getType() {\n    return R.id.loading_bunny_blue;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.bunny_loading_view;\n}\n\n@Override\npublic void bindView(ProgressLoadingBunnyBlue.ViewHolder viewHolderItem, List<Object> payloads) {\n    super.bindView(viewHolderItem, payloads);\n\n    viewHolderItem.loadingBunnyImg.setBackgroundResource(R.drawable.bunny_loading_blue_animation);\n    // Get the background, which has been compiled to an AnimationDrawable object.\n\n    AnimationDrawable animationDrawable = (AnimationDrawable) viewHolderItem.loadingBunnyImg.getBackground();\n    animationDrawable.start();\n}\n\n@Override\npublic void unbindView(ProgressLoadingBunnyBlue.ViewHolder holder) {\n\n}\n\n@Override\npublic ProgressLoadingBunnyBlue.ViewHolder getViewHolder(View v) {\n    return new ProgressLoadingBunnyBlue.ViewHolder(v);\n}\n\nprotected static class ViewHolder extends RecyclerView.ViewHolder {\n\n    ImageView loadingBunnyImg;\n\n    public ViewHolder(View view) {\n        super(view);\n        loadingBunnyImg = (ImageView) view.findViewById(R.id.loadingBunnyImg);\n\n    }\n}\n\n}\n```\nand here's how i add it to footer adapter  :\n```java\n    // initialize adapters for RecyclerView\n        fastItemAdapter = new FastItemAdapter<>();\n        footerAdapter = new FooterAdapter<>();\n    recyclerView.setLayoutManager(new GridLayoutManager(getActivity(), 1));\n    recyclerView.setItemAnimator(new DefaultItemAnimator());\n\n    recyclerView.setAdapter(footerAdapter.wrap(fastItemAdapter));\n\n    footerAdapter.add(new ProgressLoadingBunnyBlue().withEnabled(false));\n\n```. i tried stopping the animation in unBound. \nThe problem is that frame gets stuck, how would you suggest doing this without AnimationDrawable ? i'm trying to run an animation here of 15 frames. no They are not and sometimes it works fine in the rv. Its not related al all to the animation itself cause i use it in many other non- recyclerView places in my app, plus each frame is about 100x200, times 15 . called filter on itemAdapter and it works Fine. @AllanWang - Thank u so much you are the man. ok thanks. and what about the collapsing issue ?. i just used the same sample, defined slide down animator like you did. didn't understand what icongrid is\n. @mikepenz yeah did the same thing. tell me, how to add an expandable item ? couldn't use add or notifydatachange. when i add it just adds it alone without expanadablity . ",
    "monishkamble": "@surindersinghbindra Could you help me out with the approach you used to achieve it.. ",
    "dcalano": "I just ran into issue number 2, where the recycler continuously reloads itself even without scrolling. This only happened inside a nestedscrollview, the behavior stopped when I changed it to a regular ScrollView. My recyclerView's height is just match_parent, how should we be defining its height?. ",
    "nirwannursabda": "Yes its reload again and again even when im not scrolling it down\nIm using recycler view inside nested scroll view\nCan we hack fast adapter to prevent this endless scroll without scrolling? :)\nmy setup\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n\n\n\n<android.support.v4.widget.SwipeRefreshLayout\n    android:id=\"@+id/refresh_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    >\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@android:color/white\"\n        >\n\n        <EditText\n            android:id=\"@+id/inputSearch\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:hint=\"@string/find_customer\"\n            android:inputType=\"text\"\n            android:drawableLeft=\"@android:drawable/ic_menu_search\"\n            android:drawableStart=\"@android:drawable/ic_menu_search\"\n            android:padding=\"16dp\"\n            android:drawablePadding=\"10dp\"\n            android:layout_alignParentTop=\"true\"\n            android:focusable=\"true\"\n            android:focusableInTouchMode=\"true\"\n            android:imeOptions=\"actionSearch\"\n            />\n\n        <android.support.v4.widget.NestedScrollView\n            android:id=\"@+id/container\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_below=\"@+id/inputSearch\"\n            >\n            <RelativeLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:background=\"@android:color/white\"\n                >\n\n                <android.support.v7.widget.RecyclerView\n                    android:id=\"@+id/list_history\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:background=\"@android:color/white\"\n                    />\n\n                <ScrollView\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:fillViewport=\"true\"\n                    android:id=\"@+id/empty\"\n                    android:visibility=\"gone\"\n                    >\n\n                    <RelativeLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"10dp\">\n\n                        <LinearLayout\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_centerVertical=\"true\"\n                            android:id=\"@+id/mainLayout\"\n                            android:orientation=\"vertical\">\n\n                            <TextView\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\"match_parent\"\n                                android:text=\"@string/no_data\"\n                                android:textColor=\"@color/common_text_color\"\n                                android:textSize=\"14sp\"\n                                android:gravity=\"center\"\n                                />\n\n                        </LinearLayout>\n                    </RelativeLayout>\n\n                </ScrollView>\n\n            </RelativeLayout>\n        </android.support.v4.widget.NestedScrollView>\n    </RelativeLayout>\n</android.support.v4.widget.SwipeRefreshLayout>\n\n. ",
    "naseemali925": "Has anyone got any solution for this? @dcalano @nirwannursabda @baadillahnabil . ",
    "CodyEngel": "@mikepenz, thank you! Let me know if I can help out at all.. ",
    "ClarkXP": "@hendrawd I'm having the same issue, what was your workaround for this?. @hendrawd I did successfully implement stickyheader with fastadapter, My workaround was fill the grid with empty items after section's end.. ",
    "Abdurrahmanjun": "Thanks for the response mike! okay am i doing it wrong? i try to still using the provided one\nsearchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\n                @Override\n                public boolean onQueryTextSubmit(String s) {\n                    fastItemAdapter.filter(\"mStringShortname:s;mStringFullname:s;mStringMothername:s\");\n                    return true;\n                }\n                @Override\n                public boolean onQueryTextChange(String s) {\n                    fastItemAdapter.filter(\"mStringShortname:s;mStringFullname:s;mStringMothername:s\");\n                    return true;\n                }\n            });\nwhere the filter procedure still, \nfastItemAdapter.withFilterPredicate(new IItemAdapter.Predicate<User>() {\n            @Override\n            public boolean filter(User item, CharSequence constraint) {\n                return !item.mStringShortname.toLowerCase().contains(constraint.toString().toLowerCase());\n            }\n        });\nbut it still not working.. haha ok then atleast i should findout how to using that CharSequence, thanks mike :D. ",
    "rakshithsj30": "thanks :). ",
    "AlexTip": "@mikepenz Thanks for your answer.\nWHY do you need to do this: I create own adapter \"OwnAdapterType1\" witch extends ItemAdapter and ovverides onBindViewHolder methods\nI have aditional logics in this adapter, each item is getting address by lat&lng, and after I'we got address I want to update item.\nAnd by the way what is the common logics of adapters wrapping sequence?. So there is no designed way to append any logics while item binding?. @mikepenz Thank you, and the last thing, is there a common way to access adapter from item or should I implement some kind of listeners?. ",
    "ssppgit": "Hi @mikepenz thanks for your answer.\nI've tried to set my gridview not clickable with android:clickable=\"false\" but it doesn't work. I remove click listener for GridView but the adapter item not get the click when i click in the gridview. Thanks @mikepenz !\nAt the end i got the solution. I've override dispatchTouchEvent in a custom gridview and return always false. Adapter item get item click now.\nThanks a lot for your time and your great library :). ",
    "TimVelo": "I named the file incorrectly, but only closed it once. Sorry, I'm kinda new to the contribution side, but wanted to learn and contribute to your awesome library.. Will do. I think my branch is out of date, I have to sync my fork... I think.\nYou are quite welcome, thanks for all the awesome libraries. Hopefully I can contribute more here shortly.. Should I add it to the app structure with the other examples and implement into the app?. Sorry Mike, having major computer problems, lost my profile and still\nhaving problems. Trying to avoid rebuilding it all... :( I'll hopefully be\nback in the swing of things this weekend.\nThank you,\nTim Velo\nIT Manager\nCraig Bachman Imports, Inc.\nMobile: 708.277.4146\nOffice: 815.464.3910\nFax: 815.464.2540\nOn Sat, Jul 15, 2017 at 10:09 AM, Mike Penz notifications@github.com\nwrote:\n\n@TimVelo https://github.com/timvelo did you have time to check it out?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/pull/472#issuecomment-315540500,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANBGryYQGqJHNSxvVzu9QjvJM4s10NIAks5sONY_gaJpZM4ORzQh\n.\n. \n",
    "narun2001": "You're welcome Mike!. ",
    "andreluizreis": "Android Studio 2.3.3 . ",
    "Schinizer": "Support library 25.4.0 causes ConstraintLayout to fail rendering. I'm using 25.3.1 to render the preview. ",
    "zaihuishou": "@mikepenz  Me too ,but restart two times ,it is ok. ",
    "bernaferrari": "Yeah, but if you look at:\nactivity.runOnUiThread{ fastAdapter.add(colorsList) }\nThis is precisely what I am doing, right? I tried changing to set but still got the same problem. The code is just unable to run without this:\n// colorsList is empty\ncolorsList.add(AdapterCulto(title, id, views))\nfastAdapter.add(colorsList)\ncolorsList.clear()\nWith this, it is running fine, even without the activity.runOnUiThread. I just don't understand what is happening to make these 3 lines absolutely necessary... I rewritten everything 3 times, the bug was showing even at AsyncTasks, but it has suddenly gone!\nThanks for your fast help!!. BTW, thanks for the last advice, I will update my apps with this great practice!. Found solution: replacing fastAdapter.ViewHolder in abstractItem with RecyclerView.ViewHolder and fixing it in other classes; casting VH1 and VH2 in bindview.. I am using it in my release apps and it is working fine... I have a question, since you are here. While I love Fast Adapter, it doesn't works PERFECTLY with viewpager or anything that needs to swipe it horizontally (even in your example, swiping right/left is hard, compared to the standard android and to other libraries). Is there a way for me to change this or an api for customizing?. Weird... Me too.. With ViewPager it captures the touch and tries to scroll down 80% of the time. With the swipe to delete in demo, I thought it was all, but found the BRVAH as good/standard as could be (but I still prefer fast adapter for the other 99% usages \ud83d\ude1b ) https://github.com/CymChad/BaseRecyclerViewAdapterHelper. Ok.. but each row shall have 3 items that will need listener: an EditText, a Spinner, and an ImageView. I thought using ItemView was smart, since using viewholder.yourEditText will forbid the others, won't it?\n. Thanks! All your ideas have made my constructor way better. However, the same issue persists. The 'onClick' method is never called when I tap the EditText at the first time, without anything else.\n@FabianTerhorst  mentioned about 'attachEvent' but I'm not sure I understand this part.. Ok, I was dumb.. I now put the listener inside the onBind instead of onClick.. everything works now... thanks for all the help\b!!!. I agree with you.. My question was really, is there an easy way to convert from sticky to non sticky header? . As far as I know, this is limited to sticky-header's library, not Fast Adapter. But.. you may check Google I/O app, which has buttons in the sticky headers, in their implementation:\nhttps://github.com/google/iosched. Wow, it was exactly this. I was searching for remove/set.. thanks!!. Oh, thanks! I thought there were some hidden magical method that could help me. Thanks for the answer!!. It took me a while to remember/figure out I should use SelectExtension .class. Sorry/Thanks for clarifying!\n. Fixed by using a public variable that gets the current ViewHolder on binding, not sure if this is a leak or anything bad, but hey.. it works.. ",
    "sir-gawain": "Will it be possible to use Android Databinding with the FastAdapter items?\nI tried it with the current 2.6.x branch but did not get it working, but i cannot remember, why exactly not.. Thanks for your hint, i will try that. I remember i tried to override some method, but some parameters were missing. I followed some tutorial but cannot find it again :(. I'm currently porting my app to v3_new and have some issues, where i'm not sure, if its my fault or not.\nI have 2 ModelAdapters: AAdapter and BAdapter. I chain them together by FastAdapter.with(). Later i add some Headers with two HeaderHelpers. That works that far. Now i want to add swipe. AItem can be swiped left/right, BItem can only be swiped left. So i add a SimpleSwipeDragCallback with a ItemTouchHelper to the recyclerview. \nAs first step, only AItem was swipeable and implemented ISwipeable, BItem did not. Nevertheless, BItem was swipeable, because SimpleSwipeCallback handles items as swipeable if they do not implement ISwipeable (getSwipeDirs()). Is that on purpose? It surprised me.\nNow the directions: SimpleSwipeDragCallback has a method getSwipeDirs(RV, RV.ViewHolder), but the VH is never asked, which directions it allows to be swiped. It always returns the default directions. \nIs that on purpose? Unfortunately SimpleSwipeDragCallback also hardcodes the use of SimpleSwipeCallback so i cannot override this behaviour without overriding two classes...\nWhat are your proposed solutions to these problems? Thx!\nForget to mention: Your demo swipe code has a problem after swipeing: The background (with \"archived\" and \"undo\") can be swiped again, and the new one again... until it gets removed by the Runnable).. I never got so far with 2.x branch, so i cannot say, if these issues were also in v2.. ",
    "sagrawal2002": "my suggestion can't in this adapter we can add option to show data in slide (flip). so it will add more flexibility on this adapter. and can be used in news blog type apps also. right now this adapter has only top down scroll view to show data.. Hi Mike,\nThanks for reopening this query again  and being so helpful. Sorry for asking too much but I am stuck on this from last 15-20 days and I don't have solution for this,so can you please help me on this. I am new in android. below is issue.\nIn  Sampleactivity.java we have added below code to fetch data from parse  (we have setup parse open source on AWS server):\n```java\nnew Handler().postDelayed(new Runnable() {\n        @Override\n        public void run() {\n            //add some dummy data\n            final List list = new ArrayList();\n        ParseQuery<ParseObject> query = ParseQuery.getQuery(\"Photo\");\n        query.findInBackground(new FindCallback<ParseObject>() {\n            @Override\n            public void done(List<ParseObject> lists, ParseException e) {\n                if (lists!= null && lists.size() > 0) {\n                    for (int i = 0; i < lists.size(); i++) {\n                        String url = lists.get(i).getParseFile(\"image\").getUrl();\n                        SimpleImageItem sii = new SimpleImageItem().withIdentifier(1L).withName(\"Yang Zhuo Yong Cuo, Tibet China\").withDescription(\"#100063\").withImage(url);\n                        list.add(sii);\n                    }\n                }\n                mItemAdapter.add(list);\n            }\n        });\n        //mItemAdapter.add(ImageDummyData.getSimpleImageItems());\n        //restore selections (this has to be done after the items were added\n        mFastAdapter.withSavedInstanceState(savedInstanceState);\n    }\n}, 50);\n\n}\n```\nBut the data we are fetching is in recycler vertical view using your adapter in sample activity. Can we view the same data in horizontal slide view so that we can view only one data(post) in one screen and change the data on slide, or in other way I want to ask can we use recyclerview in horizontal slide view not horizontal scroll view. From the below code we are getting scroll horizontal recyclerview but not horizontal slide view.\n```java\npublic class PostQueryAdapterHorizontal extends RecyclerView.Adapter {\n    private final String TAG = \"PostQueryAdapterHorizontal\";\n    private List mPostPaths;\n    private OnSetupViewListener mOnSetupViewListener;\npublic PostQueryAdapterHorizontal(List<String> paths, OnSetupViewListener onSetupViewListener) {\n    if (paths == null || paths.isEmpty()) {\n        mPostPaths = new ArrayList<>();\n    } else {\n        mPostPaths = paths;\n    }\n\n    mOnSetupViewListener = onSetupViewListener;\n}\n\n@Override\npublic PostViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n    // create a new view\n    View v = LayoutInflater.from(parent.getContext())\n            .inflate(R.layout.post_item_horizontal, parent, false);\n    return new PostViewHolder(v);\n}\n\n```\nBelow is the screen short to show what we want.\n\none more query we want to save all data from parse server to local DB and from locale db we want to show the data. can you please help us how to save data locally using your adapter on relem DB.\n . ",
    "royhenengel": "@mikepenz \n\n\nJust for general knowledge and out curiosity, is there any gain or specific reason you chose to make this work only with AS3?\n\n\nCan you refer me to any good source that explains how to configure everything to be compatible with the old toolings? (Of course, I'll look it up also by myself, not looking for any shortcuts, just thought I would also ask someone who's much more experienced than me, meaning you)\n\n\nI'm a relatively new dev, and I have a great desire you learn and code to the best of my abilities. \nIf you don't mind me asking, do you have any pointers/suggestions how you got to the level you are at? \nyour input is very much appreciated.\nAgain thank you.. @mikepenz Thank you for taking the time to help and advise.\nHave a good one! . \n\n",
    "sparkitny": "Hi,\nno, it didn't work before. I tried it you first introduce it, but I thought it may be a bug or my fault. Here you see my code, where I try to to use it. I deleted unnecessary code\n```java\nclass x {\nprivate static final String TAG = \"RoutineDetail\";\n    @BindView(R.id.routine_detail_view_routine_name_value)\n    protected EditTextView routineName;\n    @BindView(R.id.exercise_list)\n    protected RecyclerView exerciseList;\n    private FastItemAdapter adapter;\n    private ItemTouchHelper touchHelper;\n    private SimpleDragCallback dragCallback;\n    private boolean dirty = false;\n@Override\npublic View onCreateView(LayoutInflater inflater, ViewGroup container,\n                         Bundle savedInstanceState) {\n\n    View view = inflater.inflate(R.layout.fragment_routine_detail, container, false);\n\n    ButterKnife.bind(this, view);\n\n    routine = FitNavDrawer.db.getRoutineById(routineId);\n\n    adapter = new FastItemAdapter<>();\n\n    exerciseList.setAdapter(adapter);\n    exerciseList.setLayoutManager(new LinearLayoutManager(getActivity()));\n    exerciseList.setItemAnimator(new ScaleUpAnimator());\n\n    dragCallback = new SimpleDragCallback(this);\n    dragCallback.setIsDragEnabled(true);\n\n    touchHelper = new ItemTouchHelper(dragCallback);\n    touchHelper.attachToRecyclerView(exerciseList);\n\n    adapter.withEventHook(getMoveHook());\n\n    return view;\n}\n\n\nprivate TouchEventHook<ExerciseItem> getMoveHook() {\n    return new TouchEventHook<ExerciseItem>() {\n\n        public boolean onTouch(View v, MotionEvent event, int position, FastAdapter<ExerciseItem> fastAdapter, ExerciseItem item) {\n\n           ExerciseItem.ViewHolder viewHolder = item.getCurrentViewHolder();\n\n\n            touchHelper.startDrag(viewHolder);\n            return true;\n        }\n\n        public View onBind(RecyclerView.ViewHolder viewHolder) {\n            if (viewHolder instanceof ExerciseItem.ViewHolder) {\n\n                return ((ExerciseItem.ViewHolder) viewHolder).moveButton;\n            }\n            return null;\n        }\n    };\n}\npublic boolean itemTouchOnMove(int oldPosition, int newPosition) {\n\n    Collections.swap(adapter.getAdapterItems(), oldPosition, newPosition);\n\n    adapter.notifyAdapterItemMoved(oldPosition, newPosition);\n\n    dirty = true;\n\n    return true;\n}\n\npublic void itemTouchDropped(int oldPosition, int newPosition) {\n\n    Log.d(TAG, String.format(\"Stored routine %s\", routine.getName()));\n    Log.d(TAG, String.format(\"Old: %s New: %s\", oldPosition, newPosition));\n\n    storeRoutine();\n}\n\n}\n```. Hi Mike,\nI figured out my fault. I forgot to implement the interface IDraggable<,>. Now, it works smoothly.\nThanks anyway\nSebastian. ",
    "DarrylDJohnson": "This is my attempt btw. Around line 24, I included a comment. Being able to refer to the current object would help immensely. If you have another Idea, let me know\n```\npublic class EventItem extends AbstractItem\n        implements ItemInterface {\nItemPresenter presenter;\n\npublic ImageView picture;\npublic String name;\npublic String title;\n\n@Override\npublic int getType() {\n    return R.id.item_event;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_event;\n}\n\n@Override\npublic void bindView(ViewHolder viewHolder, List<Object> payloads) {\n    super.bindView(viewHolder, payloads);\n\n    Event event = (Event) payloads.getCurrentPayload(); //Some method like this might work\n\n    presenter.getProfile(event.getHost(), viewHolder);\n\n    viewHolder.title.setText(title);\n}\n\n@Override\npublic ViewHolder getViewHolder(View v) {\n\n    presenter = new ItemPresenter(this);\n    return new ViewHolder(v);\n}\n\n@Override\npublic void getUserData(ViewHolder holder, Profile profile) {\n\n    GlideUtil.loadLongImage(profile.getPictureUrl(), holder.picture);\n    holder.name.setText(profile.getName());\n}\n\npublic static class ViewHolder extends RecyclerView.ViewHolder {\n    public ImageView picture;\n    public TextView name;\n    public TextView title;\n\n    public ViewHolder(View view) {\n        super(view);\n\n        this.title = view.findViewById(R.id.info_bar_subheader);\n    }\n}\n\n}\n```. Here is what I got to work, in case others have the same question\n```\npublic class EventFragment extends Fragment implements EventInterface {\nEventPresenter eventPresenter;\nRecyclerView recyclerView;\nFastAdapter fastAdapter;\n\nGenericItemAdapter<Event, EventItem> eventItemAdapter;\nList<Event> events = new ArrayList<>();\n\nBundle bundle;\nprivate static final String SAVED_INSTANCE_STATE_KEY = \"saved instance state\";\n\npublic EventFragment() {\n}\n\npublic static EventFragment newInstance() {\n\n    return new EventFragment();\n}\n//----------------------------------------------------------------------------------------------\n\n@Override\npublic void onResume() {\n    super.onResume();\n\n    eventPresenter.getEvents(bundle.getBundle(SAVED_INSTANCE_STATE_KEY));\n}\n\n@Override\npublic void onCreate(@Nullable Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    bundle = new Bundle();\n    bundle.putBundle(SAVED_INSTANT_STATE_KEY, savedInstanceState);\n\n    eventPresenter = new EventPresenter(this);\n    eventPresenter.getEvents(savedInstanceState); \n}\n\n@Override\npublic View onCreateView(LayoutInflater inflater, ViewGroup container,\n                         Bundle savedInstanceState) {\n\n    View view = inflater.inflate(R.layout.fragment_event, container, false);\n\n    init(view);\n\n    return view;\n}\n\nprivate void init(View view) {\n    fastAdapter = new FastAdapter();\n    fastAdapter.withSelectable(true);\n\n    recyclerView = view.findViewById(R.id.fragment_event_recycler_view);\n\n    eventItemAdapter = new GenericItemAdapter<>(new Function<Event, EventItem>() {\n        @Nullable\n        @Override\n        public EventItem apply(Event event) {\n            return new EventItem(event);\n        }\n    });\n\n    recyclerView.setAdapter(eventItemAdapter.wrap(fastAdapter));\n    recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n}\n\n@Override\npublic void updateEventListData(Bundle bundle, List<Event> events) {\n\n    this.events = events;\n\n    eventItemAdapter.addModel(events);\n\n    fastAdapter.withSavedInstanceState(bundle);\n}\n\n@Override\npublic void onSaveInstanceState(Bundle outState) {\n    outState = fastAdapter.saveInstanceState(outState);\n    super.onSaveInstanceState(outState);\n}\n\n```\nHere is the EventItem class\n```\npublic class EventItem extends GenericAbstractItem\n    implements ItemInterface{\nItemPresenter presenter;\n\npublic EventItem(Event event) {\n    super(event);\n    presenter = new ItemPresenter(this);\n}\n\n@Override\npublic int getType() {\n    return R.id.item_event;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_event;\n}\n\n@Override\npublic void bindView(ViewHolder holder, List<Object> payloads) {\n    super.bindView(holder, payloads);\n\n    holder.title.setText(getModel().getTitle());\n\n    presenter.getProfile(getModel().getHostProfile(), holder);\n}\n\n@Override\npublic void unbindView(ViewHolder holder) {\n    super.unbindView(holder);\n    holder.title.setText(null);\n    holder.name.setText(null);\n    holder.picture.setImageDrawable(null);\n}\n\n@Override\npublic EventItem.ViewHolder getViewHolder(View v) {\n    return new ViewHolder(v);\n}\n\npublic static class ViewHolder extends RecyclerView.ViewHolder {\n\n    public TextView title;\n    public TextView name;\n    public ImageView picture;\n\n    public ViewHolder(View view) {\n        super(view);\n\n        title = view.findViewById(R.id.item_event_title);\n        name = view.findViewById(R.item_event_name);\n        picture = view.findViewById(R.id.item_event_picture);\n    }\n}\n\n//----------------------------------------------------------------------------------------------\n\n@Override\npublic void getUserData(ViewHolder holder, Profile profile) {\n\n    holder.name.setText(profile.getName());\n    GlideUtil.loadImage(profile.getPictureUrl(), holder.picture);\n}\n\n}\n```. @mikepenz  I'm getting an issue with my onResume function. When I start a new Activity, the list of items in the recyclerview doubles. However, when I switch tabs to go to a different fragment, and switch back, the list is fine. There is definitely something I am doing wrong, but do you have any insights?. ",
    "a-najar": "@mikepenz       fastItemAdapter.add(new SingleLineItem().withName(\"Country (Kuwait)\"));\niam ading this item and i dont want to add avatar image or icon but it show the space of the avatar image is there any way to hide this space \n\n. ",
    "AleksanderMielczarek": "Done.. ",
    "manid2": "Hi,\nThank you for the quick reply.\nHere is the code snippet, i tried as per your answer:\n```java\nmFastAdapter.withEventHook(new ClickEventHook() {\n    private CardView cardView;\n    private TextView textView;\n@Nullable\n@Override\npublic View onBind(@NonNull RecyclerView.ViewHolder viewHolder) {\n    //return the views on which you want to bind this event\n    if (viewHolder instanceof VccMaterialItem.ViewHolder) {\n        cardView = ((VccMaterialItem.ViewHolder) viewHolder).mCardView;\n        textView = ((VccMaterialItem.ViewHolder) viewHolder).mTextView;\n\n        if (cardView.isSelected()) {\n            cardView.setCardBackgroundColor(getActivity().getResources().getColor(R.color.app_green_dark));\n            textView.setTextColor(getActivity().getResources().getColor(R.color.app_white));\n        } else {\n            cardView.setCardBackgroundColor(getActivity().getResources().getColor(R.color.app_light_blue_50));\n            textView.setTextColor(getActivity().getResources().getColor(R.color.primary_text));\n        }\n        return cardView;\n    } else {\n        return null;\n    }\n}\n\n@Override\npublic void onClick(View v, int position, FastAdapter<VccMaterialItem> fastAdapter, VccMaterialItem item) {\n    //react on the click event\n    Logger.i(\"Clicked [%s]\", item.getText());\n}\n\n});\n```\nI m getting the logger output when clicked on the cardview, but i m not able to toggle the color inside the onBind() method.\n. I am sorry, I do not understand how it is implemented in code. \nKindly show me a code snippet to toggle the view color on select/unselect.. Now I have moved the view color toggling to onClick() method,\njava\n@Override\npublic void onClick(View v, int position, FastAdapter<VccMaterialItem> fastAdapter, VccMaterialItem item) {\n    //react on the click event\n    Logger.i(\"Clicked [%s]\", item.getText());\n    if (cardView.isSelected()) {\n        cardView.setCardBackgroundColor(getActivity().getResources().getColor(R.color.app_green_dark));\n        textView.setTextColor(getActivity().getResources().getColor(R.color.app_white));\n    } else {\n        cardView.setCardBackgroundColor(getActivity().getResources().getColor(R.color.app_light_blue_50));\n        textView.setTextColor(getActivity().getResources().getColor(R.color.primary_text));\n    }\n}\nStill no luck. Please help, I need to make a great app.\nThank you,\nMani. Accessing any view inside onClick affects another view in the list since the views are recycled. I found out that this line is responsible for setting the background to RED color in the FastAdapter sample.\njava\n//set the background for the item\nUIUtils.setBackground(viewHolder.view, FastAdapterUIUtils.getSelectableBackground(ctx, Color.RED, true));\nSimilarly I tried in my app, \njava\nUIUtils.setBackground(viewHolder.mCardView, FastAdapterUIUtils.getSelectableBackground(ctx, Color.GREEN, true));\nIt will set the background for the card view to GREEN in selected state with the ripple effect which is the desired result, in unselected state the view is invisible. \nIt would be very grateful if you can explain why it is invisible in unselected state? Is it something do with the LinearLayout within which the card view is placed?\nThank you,. @mikepenz Thank you for pointing me to post #495. I will try this method to see if it works in my app.\nThank you for the good support. :relaxed:. Hi @mikepenz , I tried the method in #495, it works in my app. I used FrameLayout and set its foreground as it is implemented in the sample app.\njava\nviewHolder.view.setForeground(FastAdapterUIUtils.getSelectablePressedBackground(ctx, FastAdapterUIUtils.adjustAlpha(color, 100), 50, true));\nThank you for the answers, I am happy \ud83d\ude03.. Hi @mikepenz \nYes I am using ActionModeHelper. I understood the issue clearly, I have changed the above code as follows:\njava\npublic boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n    boolean consumed = false;  // true - Indicates the event is consumed.\n    switch (item.getItemId()) {\n        case R.id.menu_item_select_all:\n            // TODO: Select all items.\n            mFastAdapter.select();\n            consumed = true;\n            Logger.d(\"Menu item select all clicked!, mMaterialItemCount = %d\", mMaterialItemCount);\n    }\n    mode.finish(); // Action picked, so close the CAB\n    return consumed;\n}\nAll items are selected as expected on clicking select all, but due to mode.finish() it closes the CAB and hence deselects all the items.\nIf I omit mode.finish() then on clicking select all, it erases the fragment contents or the adapter contents. I m unable to tell why it is erasing the contents of the adapter itself or the fragment' contents.\nDo you know anything about this?  I just want to implement select all feature in the CAB. Any approach would be fine.\nThank you,\nMani. @mikepenz Note: To avoid any confusion, the code I posted above onActionItemClicked() belongs to my custom class that handles the select all click and few other buttons on CAB.\nThe following lines from ActionModeHelper's ActionBarCallBack class, calls my method onActionItemClicked in which I have implemented select all.\njava\nif (mCallback != null) {\n     consumed = mCallback.onActionItemClicked(mode, item);\n}\nI hope I made the issue clear. If you need any information please let me know.\nThank you,\nMani. ",
    "guuilp": "getChildren, instead, verifying if the instanceof is ProgressBar or ImageView?. I'll give it a try. Thanks for the help, @FabianTerhorst !. @mikepenz do you have any doc about the payload to send me? I got what you said, but I don't know how to implement this payload. Like: \nplayersInFastAdapter.notifyItemChanged(position, payload);\nI know payload is a list of objects, but how do I identify this inside my FastAdapterItem and then update the view visibility?. Thanks for the answer.\nI tried but it didn't work.\nIn my fragment:\n```\n        playersInFastAdapter.withEventHook(object : ClickEventHook() {\n            override fun onBind(viewHolder: RecyclerView.ViewHolder): View? {\n                return (viewHolder as? MatchPlayersIn.ViewHolder)?.paidSwitch\n            }\n        override fun onClick(v: View?, position: Int, fastAdapter: FastAdapter<MatchPlayersIn>?, item: MatchPlayersIn) {\n            playersInFastAdapter.notifyAdapterItemChanged(position, listOf(\"test\"))\n            changePlayerPaymentStatus(item.player.userId, v)\n        }\n    })\n\n```\nIn my fast adapter item:\n```\n    @Override\n    public void bindView(final ViewHolder holder, List payloads) {\n        super.bindView(holder, payloads);\n    ...\n\n    if(payloads.size() > 0){\n        Toast.makeText(context, \"Tested\", Toast.LENGTH_SHORT).show();\n    }\n}\n\n```\nBut the toast didn't get called.. I've found the problem: https://stackoverflow.com/a/33451317/3394588\nI'm using your library to include animations into my RecyclerView.\nDo you have any sugestions in this specific case?. var fastAdapter = FastItemAdapter<IItem>()\nError:\n2 type arguments expected for interface lItem : Ildentifyable defined in com.mikepenz.fastadapter in file lItem.class. var fastAdapter = FastItemAdapter<IItem<*, *>>()\nThis way worked, but I don't know if it is right. Thanks @mikepenz !. Relase notes from 2.6.0:\n\nadjust CustomEventHook class and rename method.\nno longer pass FastAdapter in as this can change at any point if the ViewHolder is re-used in a different RecyclerView\n\nQuestion: how should I get the FastAdapterItem and position inside a CustomEventHook?. Answer: fastAdapter.getAdapterItem(viewHolder.adapterPosition)\nWith this I have the position of the adapter and the item.\nPlease, close the question.. Is there any way to know when this complete notify is triggered?. This is a necessity of my scenario... That's because, first I need to change the order of items on recycler view and after that, change the layout of my items.. You mean after I change the order, using the withComparator? If there's any way of knowing, inside my FastAdapterItem, when the notify came from a withComparator, it may solve my problem.. Explaining a little better my scenario:\nI have four buttons on the screen. When the user clicks in one them, it changes the order of the list and should change (just a textview value, actually) the items layout.\nNow I'm sorting when the user clicks in one of the four buttons, as I showed in the first code block of this issue. The sorting with Fast Adapter has a smooth animation that I'd like to keep.\nIf I sort the list from the begining, I should have four lists actually, already sorted, and then change them in the fast adapter (maybe a clear and then addAll). This would cause a blink effect, and not a reordering, talking about animation.\nIf sorting manually is the only option, could you give me some advice of how could I achieve that, please?. Wouldn't this be the same as sorting manually? Like:\n```\nCollections.sort(playersInFastAdapter.adapterItems, compareBy{ it.player.overallScorePosition })\nfor(i in 0 .. playersInFastAdapter.adapterItemCount){\n     playersInFastAdapter.notifyAdapterItemChanged(i, App.PAYLOAD_RANKING_RATING_LIST)\n}\n```. @mikepenz I thanks a lot your effort to help me, but I think my case it's too specific and no options seems to work. I don't blame you, it's my awkward usecase. I'm going to follow with fast adapter.clear and fastAdapter.add on the already sorted list... Unfortunately is not the most beautiful animation, but works. Anyway, thanks again for your library, it's awesome!. That's it. Thanks for the help.. I've read #654 but I couldn't understand how it is basically the same question. Sorry.. What about this?\nplayersInFastAdapter.itemAdapter.withComparator(compareBy{ (it as? MatchPlayersIn)?.player?.fullName }). ",
    "fly7632785": "I saw GenericItemActivity in the sample.\nBut the two subItems have same Model(super relationship ) and same ViewHolder,\nBut how to deal with that I have two different subItems with different ViewHolders in same ExpanableGroupItem? \nAnd  I found the GenericAbstractExpandableItem, so is there any sample of it ?\nThank you.. and I debug, figure it out \n```\n  @Override\n    public FilterResults performFiltering(CharSequence constraint) {\n        FilterResults results = new FilterResults();\n    //return nothing\n    if (mOriginalItems == null && (constraint == null || constraint.length() == 0)) {\n        return results;\n    }\n\n    //we can not filter on expanded or selected items, because the remembered positions will change\n    if (mItemAdapter.getFastAdapter().isPositionBasedStateManagement()) {\n        mItemAdapter.getFastAdapter().deselect();\n    }\n    mItemAdapter.getFastAdapter().collapse(false);\n\n```\nso we can't filter selected items? right?. is there any way to user them at same time ?\nI just want to filter all items, not the selected items. I don't think it's reliable to manage a set of position,\nSo in my own custom Recycler's adapter, I just manage a set of the model's id or something which is different from others. And achieve it.. Never mind ,and thank you very much. ",
    "Pantkowsky": "@Rainer-Lang I did, but didn't find any info in regards to timeline. I realize that v2 is amazing, I just wanted to estimate whether or not it makes more sense to wait for v3 (if the release is right around the corner) or go ahead and start implementing v2 for my project. \nI don't mind testing. I'm considering going with the snapshot version and refactor if needed later on. If I stumble upon anything in the process I will most definitely let you guys know about that!. ",
    "carmas123": "Yes this can work, but it cannot solve my problem.\nIf withOnClickListener is not fired it means that I cannot use functionality like AutoExpand and auto collapse all other item.\n. However this event is not fired. The problem could be because I use AsyncListUtil to load my items into my adapter...I investigate.\n. Solved.\nThe problem is when use a custom FastAdapter.OnBindViewHolderListener.\nWhen you use this method you need to specify the tag used by FastAdapter to identify the item, you need to add a think like this:\noverride fun onBindViewHolder(viewHolder: RecyclerView.ViewHolder, position: Int, payloads: MutableList<Any>?) {\n            val item = listAdapter?.getItem(position)\n            if (item != null) {\n                //set the R.id.fastadapter_item tag of this item to the item object (can be used when retrieving the view)\n                viewHolder.itemView.setTag(R.id.fastadapter_item, item)\n            }\n            this@MyFragment.listItemBindView(viewHolder, position)\n        }\nRegards, and thank you to all.\n. Yes this is true but when I try to inherit it I got this error:\n\nUnresolved reference: OnBindViewHolderListenerImpl. ",
    "kalyandechiraju": "\nI had the same problem. withOnClickListener or any other clicklisteners were not getting fired at all.\nBut clickListener inside viewHolder was working fine. Spent hours trying to figure out what's wrong an then I found I had\nandroid:clickable=\"true\"\nandroid:focusable=\"true\"\nandroid:background=\"?attr/selectableItemBackground\"\nset to recycler view item. Removing these solved the issue for me.\n\nandroid:clickable=\"true\"\nandroid:focusable=\"true\"\nare the culprits. FastItemAdapter comes with a SelectExtension.\nTry setting these on your adapter.\nfastItemAdapter.withAllowDeselection(false)\nfastItemAdapter.withMultiSelect(true)\nfastItemAdapter.withSelectable(true). ",
    "markuspaschi": "Got it working with this piece of Code:\nval itemAdapter = GenericItemAdapter(Function<Any, IGenericItem<*, *, *>> { o ->\n        if (o is Cantonment) {\n            GenericCantonmentList(o)\n        } else if (o is HeaderModel) {\n            HeaderItem(o)\n        } else {\n            throw IllegalArgumentException(\"The passed model can't be created within this Factory\")\n        }\n    })\nSetting items to itemAdapter is now only possible through:\nitemAdapter.addModel(HeaderModel(\"test\"))\nitemAdapter.add(my_list) which is a MutableList of HeaderItems is not working anymore.\nFeels kinda like a bad workaround. ",
    "JuhaniLehtimaeki": "Ah. Nevermind. Sorry. My mistake in migrating to 3.0.. Thanks, Mike, yeah, I know. It's unlikely to be your code. It's just feels increasingly difficult to track these crashes that never happen on my own devices. It's kind of grasping last straws to see if someone might have seen something similar.\nI'm no support lib 27.0.0.\nI wonder if something I do is a no-no:\n1) I use itemAdapter.set(items) very heavily. The data is coming from firebase and it's triggered fairly frequently.\n2) My adapter is a simple:\nprivate val itemAdapter = ItemAdapter<AbstractItem<*, *>>()\nas I have multiple types of items in the list.\n3) To make sure that item changes are animated correctly I use .hashCode().toLong() to generate (hopefully) unique IDs from firebase generated Strings:\noverride fun getIdentifier(): Long {\n        return friend.userId!!.hashCode().toLong()\n    }\nDoes any of the above sound like they could mess up the intended approach to FastAdapter / RecyclerView?\n. Good tips!\nThank you for taking the time to write this response (on top of writing the lib ;)\nI've try to remedy all the points. Deploying and hoping to see end of these crashes :-). ",
    "soonsam123": "Thanks! It works perfectly \ud83d\udc4d . ",
    "1110101": "Unfortunately FastAdapterDiffUtil does not work with ModelAdapter. . Thanks for your effort mike.\nI've copied FastAdapterDiffUtil and tried it out.\nUnfortunately it's not working yet (well, at least in my usecase). \nI still need to set the new model somehow and \nmModelAdapter.set(newlist, false, (fastAdapter, newItemsCount, previousItemsCount, itemsBeforeThisAdapter) -> false); still does nothing and mModelAdapter.set(newlist) does trigger a full refresh.\nAs a workaround I reverted back to a classic AbstractItem & ItemAdapter implementation.. ",
    "bolovanos": "Just saying that you r not alone with this problem  @ncapdevi\n-dontwarn com.mikepenz.fastadapter.** - does the trick, but...\nminifyEnabled false & shrinkResources false works, but resulting APK is 12% bigger.\nUsing 5.9.7 works, but I would like to target API 27.. ",
    "r748": "That would be great, thanks!. Ok, thanks. I will see, if I can come up with something.... ",
    "gmgunderground": "Thanks, It's working fine now. Hi, thank you, your reasoning have sense, now all is clear and app it's working fine.. ",
    "ipetu": "\nprivate FastAdapter mIItemFastAdapter; FastAdapter is IItem but,ClickEventHook is extends IItem class. how to use withEventHook Method to different ViewHolders?. ",
    "SharonAlexander": "Yes  the sample app.\nWhat I'm observing is even when the action mode is enabled, it is returning value actionModeHelper.onClick() is returning null and normal on click listener is fired.\nIn my app also i don't want to fire the normal click listener when the actionmode is enabled.. ",
    "saeedmozaffari": "I update my StickyHeaderAdapter class with your project, it works fine, Thanks!\n. ",
    "dezarion": "@mikepenz 2.6.3. @mikepenz 26.0.2. @mikepenz updating of GenericItemAdapter to ModelAdapter is only change I did. I decreased back to 2.6.3  version for a while. ",
    "DummyCo": "Hey, @AllanWang \nThank you for your response.\nWell, that approach will work as last resort I think but it would be so nice to come up with solution consolidating separate smart item type or DividerItemDecoration-like approach with flexible settings cause imagine that you can reuse that item layout/wrapper in places where no divider is needed and it will just cause more and more logic to maintain. Or talking for instance about cases with high/wide divider overlapping/item shifting in some cases where you will need to control whole item height or apply containers height wrap what is not acceptable sometimes.. Resolved with AdapterDataObserver and RecyclerView.ItemDecoration, thanks!. Trying to test as a submodule but getting strange runtime exception :)\nDo we have some kind of nightly library snapshots on cloud repositories?\n\njava.lang.NoSuchMethodError: No virtual method getItemList()Lcom/mikepenz/fastadapter/IItemList; in class Lcom/mikepenz/fastadapter/adapters/ModelAdapter; or its super classes (declaration of 'com.mikepenz.fastadapter.adapters.ModelAdapter' appears in /data/app/TMMPsDvosJFW04P_f-1Lpg==/split_lib_dependencies_apk.apk)\n\nWill try to create separate libraries. @mikepenz oh I see. Looking forward to it, thanks!. @mikepenz thank you for feedback!\nBasically I'm having a bit complex feed powered with FastAdapter having something about 6 item types with stable ids, some of that items bound to the same type are paginated and populated to the feed via FastAdapterDiffUtil in random sequence according to server responses sequences what makes it a bit complicated to debug but I'll try to log all the populations leading to crash and create a simplified sample now.. So here is the sequence.\nI'm trying to recreate the same set of data with lightweight layouts and sequential populating via Handlers or step-by-step with no space for any related code to execute on looper but it's firing just ok.\nAs far as I can imagine it's related to high main thread load and all these coincidences with internal RecyclerView events batching & pending processing etc.\nI've also attached OnBindViewHolderListener and left timing in logs.\nLast onBindViewHolder event before crash looks suspicious.\n01-15 00:49:41.088 13845-13845: Second adapter batch item type: 2131230883 id: 442\n01-15 00:49:41.088 13845-13845: Second adapter batch item type: 2131230881 id: 426\n01-15 00:49:41.089 13845-13845: Second adapter batch item type: 2131230883 id: 424\n01-15 00:49:41.090 13845-13845: Second adapter batch item type: 2131230880 id: 422\n01-15 00:49:41.091 13845-13845: Second adapter batch item type: 2131230883 id: 420\n01-15 00:49:41.091 13845-13845: Second adapter batch item type: 2131230883 id: 414\n01-15 00:49:41.092 13845-13845: Second adapter batch item type: 2131230881 id: 412\n01-15 00:49:41.093 13845-13845: Second adapter batch item type: 2131230883 id: 410\n01-15 00:49:41.094 13845-13845: Second adapter batch item type: 2131230883 id: 408\n                                Second adapter batch item type: 2131230882 id: 406\n01-15 00:49:41.095 13845-13845: Second adapter batch item type: 2131230907 id: 15\n01-15 00:49:41.096 13845-13845: Second adapter batch item type: 2131230907 id: 5\n01-15 00:49:41.096 13845-13845: Second adapter batch item type: 2131230907 id: 7\n01-15 00:49:41.099 13845-13845: Second adapter FastAdapterDiffUtil fired\n01-15 00:49:41.100 13845-13845: First adapter FastAdapterDiffUtil fired\n01-15 00:49:41.129 13845-13845: Second adapter batch item type: 2131230883 id: 442\n01-15 00:49:41.130 13845-13845: Second adapter batch item type: 2131230881 id: 426\n                                Second adapter batch item type: 2131230883 id: 424\n01-15 00:49:41.131 13845-13845: Second adapter batch item type: 2131230880 id: 422\n01-15 00:49:41.132 13845-13845: Second adapter batch item type: 2131230883 id: 420\n                                Second adapter batch item type: 2131230883 id: 414\n01-15 00:49:41.133 13845-13845: Second adapter batch item type: 2131230881 id: 412\n                                Second adapter batch item type: 2131230883 id: 410\n01-15 00:49:41.134 13845-13845: Second adapter batch item type: 2131230883 id: 408\n                                Second adapter batch item type: 2131230882 id: 406\n01-15 00:49:41.135 13845-13845: Second adapter batch item type: 2131230907 id: 15\n                                Second adapter batch item type: 2131230907 id: 5\n01-15 00:49:41.136 13845-13845: Second adapter batch item type: 2131230907 id: 7\n01-15 00:49:41.138 13845-13845: Second adapter FastAdapterDiffUtil fired\n01-15 00:49:41.158 13845-13845: Second adapter batch item type: 2131230883 id: 442\n01-15 00:49:41.159 13845-13845: Second adapter batch item type: 2131230881 id: 426\n                                Second adapter batch item type: 2131230883 id: 424\n01-15 00:49:41.160 13845-13845: Second adapter batch item type: 2131230880 id: 422\n                                Second adapter batch item type: 2131230883 id: 420\n01-15 00:49:41.161 13845-13845: Second adapter batch item type: 2131230883 id: 414\n01-15 00:49:41.162 13845-13845: Second adapter batch item type: 2131230881 id: 412\n                                Second adapter batch item type: 2131230883 id: 410\n                                Second adapter batch item type: 2131230883 id: 408\n01-15 00:49:41.163 13845-13845: Second adapter batch item type: 2131230882 id: 406\n01-15 00:49:41.164 13845-13845: Second adapter batch item type: 2131230907 id: 15\n                                Second adapter batch item type: 2131230907 id: 5\n01-15 00:49:41.165 13845-13845: Second adapter batch item type: 2131230907 id: 7\n01-15 00:49:41.167 13845-13845: Second adapter FastAdapterDiffUtil fired\n01-15 00:49:41.732 13845-13845: onBindViewHolder() called with: viewHolder = [ViewHolder{2921d41 position=0 id=442, oldPos=-1, pLpos:-1 no parent}], position = [0], payloads = [[]]\n01-15 00:49:41.840 13845-13845: onBindViewHolder() called with: viewHolder = [ViewHolder{c456ea5 position=1 id=426, oldPos=-1, pLpos:-1 no parent}], position = [1], payloads = [[]]\n01-15 00:49:42.345 13845-13845: First adapter FastAdapterDiffUtil fired\n01-15 00:49:42.369 13845-13845: Second adapter batch item type: 2131230883 id: 442\n01-15 00:49:42.370 13845-13845: Second adapter batch item type: 2131230881 id: 426\n                                Second adapter batch item type: 2131230883 id: 424\n01-15 00:49:42.371 13845-13845: Second adapter batch item type: 2131230880 id: 422\n                                Second adapter batch item type: 2131230883 id: 420\n                                Second adapter batch item type: 2131230883 id: 414\n01-15 00:49:42.373 13845-13845: Second adapter batch item type: 2131230881 id: 412\n                                Second adapter batch item type: 2131230883 id: 410\n01-15 00:49:42.374 13845-13845: Second adapter batch item type: 2131230883 id: 408\n                                Second adapter batch item type: 2131230882 id: 406\n                                Second adapter batch item type: 2131230907 id: 15\n01-15 00:49:42.375 13845-13845: Second adapter batch item type: 2131230907 id: 5\n                                Second adapter batch item type: 2131230907 id: 7\n01-15 00:49:42.377 13845-13845: Second adapter FastAdapterDiffUtil fired\n01-15 00:49:42.440 13845-13845: Second adapter batch item type: 2131230883 id: 442\n                                Second adapter batch item type: 2131230881 id: 426\n                                Second adapter batch item type: 2131230883 id: 424\n01-15 00:49:42.441 13845-13845: Second adapter batch item type: 2131230880 id: 422\n                                Second adapter batch item type: 2131230883 id: 420\n01-15 00:49:42.442 13845-13845: Second adapter batch item type: 2131230883 id: 414\n                                Second adapter batch item type: 2131230881 id: 412\n01-15 00:49:42.443 13845-13845: Second adapter batch item type: 2131230883 id: 410\n                                Second adapter batch item type: 2131230883 id: 408\n01-15 00:49:42.444 13845-13845: Second adapter batch item type: 2131230882 id: 406\n                                Second adapter batch item type: 2131230907 id: 15\n01-15 00:49:42.445 13845-13845: Second adapter batch item type: 2131230907 id: 5\n                                Second adapter batch item type: 2131230907 id: 7\n01-15 00:49:42.447 13845-13845: Second adapter FastAdapterDiffUtil fired\n01-15 00:49:42.586 13845-13845: onBindViewHolder() called with: viewHolder = [ViewHolder{d6359a0 position=2 id=424, oldPos=-1, pLpos:-1 no parent}], position = [2], payloads = [[]]\n01-15 00:49:42.636 13845-13845: onBindViewHolder() called with: viewHolder = [ViewHolder{2921d41 position=0 id=442, oldPos=-1, pLpos:-1 scrap [attachedScrap] tmpDetached no parent}], position = [0], payloads = [[]]\nAdded \"FastAdapterDiffUtil fired\" logs on last edit. @mikepenz yep, MaterialDrawer & Iconics.\nSo there are related libraries:\n+--- com.mikepenz:iconics-core:3.0.2\n+--- com.mikepenz:google-material-typeface:3.0.1.2.original\n+--- com.mikepenz:materialdrawer:6.0.2\n|    +--- com.mikepenz:materialize:1.1.2\n|    +--- com.mikepenz:iconics-core:3.0.0 -> 3.0.2\n|    +--- com.mikepenz:fastadapter:3.0.4 -> 3.2.0\n|    \\--- com.mikepenz:fastadapter-extensions-expandable:3.0.3\n+--- com.mikepenz:fastadapter:3.2.0\n+--- com.mikepenz:fastadapter-commons:3.2.0\n+--- com.mikepenz:fastadapter-extensions:3.2.0\nSeems like that's related to materialdrawer. Should we try to exclude groups or is it related to internally used dependency scope?. ",
    "TooLazyy": "same bug. ",
    "Debjyotinath": "@nikitamarysoloman :Earlier when search was performed on a list and then removed, It would not call the onScroll method for a lazy loaded list. That was the issue. If that was possible then your solution was viable.  You might have tried this after the fix in  dbd8c54. ",
    "alphater": "@FabianTerhorst Thank you very much for your reply. But I have not found a specific program, will find the first time to assist pull.\nthank you very much. @mikepenz\nI'm sorry, some time ago, more busy, did not reply in time.\nThank you very much for your reply.\nYou mentioned the extension FastAdapter is a good suggestion, but I try to fail, perhaps I did not extend successfully, can I give a RecyclerViewPreloader related demo? This should be a lot of people need, thank you very much.. @mikepenz   Do you mean to pass this way?  RealmSampleUserItem.java. Thank you, I will try your suggestion!. `\nmFastAdapter = new FastAdapter<>();\nmFastAdapter.setHasStableIds(true);\nmFastAdapter.withSelectable(false);\nmHeaderAdapter = items();\nmItemAdapter = items();\nmFooterAdapter = items();\nmFastAdapter = FastAdapter.with(Arrays.asList(mHeaderAdapter, mItemAdapter, mFooterAdapter));\nmHeaderAdapter.add(new HeaderItem().withTitle(getString(R.string.unsplash_str)).withDescription(getString(R.string.title_by_photos)).withSearchHint(\"Search photos\").withEnabled(false));\n`. Ok, thanks for the reply, thank you.. ",
    "littlezan": "Yes, I had to manual RecyclerView scroll to top, after modelAdapter.clear(); like this:\nmodelAdapter.clear();\nlayoutManager.scrollToPosition(0);\nmodelAdapter.add(createDataList());\nand it's perform good.. as use\nmodelAdapter.clear();\nlayoutManager.scrollToPosition(0);\nmodelAdapter.add(createDataList());\nI found a method can complete solve my problem, it's to use modelAdapter.setNewList();\n. ",
    "edi233": "works perfect. Thank you!. ",
    "Morteza-Rastgoo": "But this is not something that makes sense in production.\nThink about a list which is empty and no item is inserted and even if the first request is not made to get first items from server, the second page is triggered to be called and request for the second page data :D. Sorry for my hurry in posting the issue with the empty body and thanks for your response.. ",
    "ialokim": "I've added an example in the app's ExpandableSampleActivity. If you checkout the first commit, you should see the bug, if you checkout the latest, you should see it working again.. Thanks for merging :). ",
    "JavierSegoviaCordoba": "Well, the problem is caused by wrap_content, it is not working, if I use a specific measure in DPs it is working.... The problem was the nested scroll view. I changed it to a linear layout and the problem is solved.. I am trying to change it, do you have an example of it?\nIs there any way to avoid the item blinking when I notify the item is changing?\nEDIT: I am having the same problem and now the item is blinking too :/. Well, the problem of the \"paired items\" was solved, it is not related to this library. Blinking is caused, I think, when Android animates changes automatically.. I have the latest version of all fastadapter dependencies and appcompat.\n-dontwarn com.mikepenz.fastadapter.**\nThis fixes the problem in release mode, debug mode is working perfectly. @mikepenz the last update fixes the problem?. I \"solved\" it moving this fastAdapter.withOnClickListener... to the onPostExecute method.. ",
    "FelixMittermeier": "Interesting I'm not the only one getting this error \ud83d\ude04 . When using v3.1.0 it's crashing too:\njava.lang.IndexOutOfBoundsException: Inconsistency detected. Invalid item position 16(offset:17).state:17 android.support.v7.widget.RecyclerView{15d62da VFED.VC.. ......ID 0,0-608,1280 #7f080168 app:id/material_drawer_recycler_view}, adapter:com.mikepenz.fastadapter.FastAdapter@77db30b, layout:android.support.v7.widget.LinearLayoutManager@294c5e8, context:de.mittermeier.felix.storyban.MainActivity@9078bc1\n                                                                                   at android.support.v7.widget.RecyclerView$Recycler.tryGetViewHolderForPositionByDeadline(RecyclerView.java:5628)\n                                                                                   at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:5563)\n                                                                                   at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:5559)\n                                                                                   at android.support.v7.widget.LinearLayoutManager$LayoutState.next(LinearLayoutManager.java:2229)\n                                                                                   at android.support.v7.widget.LinearLayoutManager.layoutChunk(LinearLayoutManager.java:1556)\n                                                                                   at android.support.v7.widget.LinearLayoutManager.fill(LinearLayoutManager.java:1516)\n                                                                                   at android.support.v7.widget.LinearLayoutManager.onLayoutChildren(LinearLayoutManager.java:608)\n                                                                                   at android.support.v7.widget.RecyclerView.dispatchLayoutStep1(RecyclerView.java:3644)\n                                                                                   at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:3408)\n                                                                                   at android.support.v7.widget.RecyclerView.onLayout(RecyclerView.java:3962)\n                                                                                   at android.view.View.layout(View.java:17661)\n                                                                                   at android.view.ViewGroup.layout(ViewGroup.java:5575)\n                                                                                   at android.widget.RelativeLayout.onLayout(RelativeLayout.java:1079)\n                                                                                   at android.view.View.layout(View.java:17661)\n                                                                                   at android.view.ViewGroup.layout(ViewGroup.java:5575)\n                                                                                   at android.support.v4.widget.DrawerLayout.onLayout(DrawerLayout.java:1196)\n                                                                                   at android.view.View.layout(View.java:17661)\n                                                                                   at android.view.ViewGroup.layout(ViewGroup.java:5575)\n                                                                                   at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)\n                                                                                   at android.widget.FrameLayout.onLayout(FrameLayout.java:261)\n                                                                                   at android.view.View.layout(View.java:17661)\n                                                                                   at android.view.ViewGroup.layout(ViewGroup.java:5575)\n                                                                                   at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1741)\n                                                                                   at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1585)\n                                                                                   at android.widget.LinearLayout.onLayout(LinearLayout.java:1494)\n                                                                                   at android.view.View.layout(View.java:17661)\n                                                                                   at android.view.ViewGroup.layout(ViewGroup.java:5575)\n                                                                                   at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)\n                                                                                   at android.widget.FrameLayout.onLayout(FrameLayout.java:261)\n                                                                                   at android.view.View.layout(View.java:17661)\n                                                                                   at android.view.ViewGroup.layout(ViewGroup.java:5575)\n                                                                                   at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1741)\n                                                                                   at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1585)\n                                                                                   at android.widget.LinearLayout.onLayout(LinearLayout.java:1494)\n                                                                                   at android.view.View.layout(View.java:17661)\n                                                                                   at android.view.ViewGroup.layout(ViewGroup.java:5575)\n                                                                                   at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)\n                                                                                   at android.widget.FrameLayout.onLayout(FrameLayout.java:261)\n                                                                                   at com.android.internal.policy.DecorView.onLayout(DecorView.java:731)\n                                                                                   at android.view.View.layout(View.java:17661)\n                                                                                   at android.view.ViewGroup.layout(ViewGroup.java:5575)\n                                                                                   at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:2346)\n                                                                                   at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2068)\n                                                                                   at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1254)\n                                                                                   at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6344)\n                                                                                   at android.view.Choreographer$CallbackRecord.run(Choreographer.java:874)\n                                                                                   at android.view.Choreographer.doCallbacks(Choreographer.java:686)\n                                                                                   at android.view.Choreographer.doFrame(Choreographer.java:621)\n                                                                                   at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:860)\n                                                                                   at android.os.Handler.handleCallback(Handler.java:751)\n                                                                                   at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                                   at android.os.Looper.loop(Looper.java:154)\n                                                                                   at android.app.ActivityThread.main(ActivityThread.java:6236)\n01-14 21:32:02.278 25483-25483/de.mittermeier.felix.storyban E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Native Method)\n                                                                                   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:891)\n                                                                                   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:781). ",
    "maloz": "Oh thank you, didn't saw the method. \nBut, when trying to save the list (by example parse it) when it contains some sub-items, I always get some StackOverflowError because  it's to big. Wich way would you propose to save everything ?\nFor now, I have another class for my items that contain only the datas, their UUID + a UUID for the parent. So with that, I'm able to reconstruct the list with the sub items, but it's not really straightforward. If you have another method to propose, it would be helpfull :). I start with no item but let the user add as much item as he need. And he can add item at the root of the list or make it child as any item.\nWith that, I allow multilevel sub items. \nIn a way yes because a parent have a child, the child have a parent and this parent have again the child, and so on.. So this is maybe why I can't parse it or save it directly\nI can send code or app screenshot if needed! . ",
    "Bringoff": "Any suggestions how to make a unique id? :) Because models used for that list have the same id. Default id distributor helps with this, but list begins to blink on updates (obviously).. Yes, I understand why id should be unique. Default id distributor didn't work well. But ok, I invented a cludge for my case. I add indentation to model id. Looks like it works.\nActually, the lib might have an optional inspection of duplicated ids in one adapter. What do you think about it?. ",
    "eakteam": "haha , It's ok we'r waiting \ud83d\udc4d . I have just checked , and now is working :) :) ... Thank you !. Hello , thanks for replying , but crashlytics doesn't give me what is causing this , only that detail above.\nAnd my project is really big, i don't know what line throw this fatal exception. Anyway i will try to make some tests with hope to find it :). 2 minutes ago i just updated my app to production with unresolved issueeeee :D :D :D :D ....\nThere are about 200K users that using your library in my app, i can't upload another update in short time :D :D :D :D , thanks anyway. In fact no issue :) , but without v. 3.2.7 of fast-adapter-commons. No problem bro, just when you reply here that you resolved the artifact for 3.2.7 , 2 minutes before i published an update without new atrifact :) , it's ok, i don't see any new crash on my Crashlytics ....\nHave a nice day. I think that this is happening when i add items in recyclerview, and after some conditions, delete, add new or move they to another position.\nWhen remove i call : fastadapter.notifyItemRemoved(position);\nWhen move : \nfastadapter.move(finalI, finalA);\nfastadapter.notifyItemMoved(finalI, finalA);. ohh i see, but why there are those methods public ? \nYes all the calls are maded to UI thread, but i'm going crazy with that bug , maybe it is on my side, but it report crashes to this library not in my java code. Understand thank you !. @FabianTerhorst , any documentation for that or how to use in more detail ? Thank you\nFor example we have a AbstractItem with three data : Title, Signal, Capacity ect ....\nJust need when make changes to adapter to have the ability to automatic sort by : signal for example or anything else.\nHow can we do that ? . @FabianTerhorst , I understand that and really thanks for your explanation. Can you help a little to understand it better if you can...\nSo i have implemented : \n1) FastItemAdapter<SampleItem> fastadapter;\n2) class SampleItem extends AbstractItem<SampleItem, SampleItem.ViewHolder>\nin the SampleItem class there are some variables like : \nName, Signal, Width , etc....\nHow to make some modification to this to be able to make the adapter to sort the items inside it by Signal e.x ? So when new items added, deleted or moved, the adapter to be able to resort they automatcally ?\nIt would be really great help if someone provide help for this, because i have writed my self hundred of lines to manually make this but sometime it not working or produce bugs like : https://github.com/mikepenz/FastAdapter/issues/694. @FabianTerhorst , I see, so this is how i use it : \nThis is the item class : \n```\nprivate class SampleItem extends AbstractItem {\n    String capabilities;\n    String signal;\n    String security;\n\n    public SampleItem() {\n    }\n\n    SampleItem(String ssid, String kanali, String frekuenca, String gjeresia_e_kanalit, String bssid, String capabilities, String signal, String security) {\n        this.capabilities = capabilities;\n        this.signal = signal;\n        this.security = security;\n    }\n\n    //The unique ID for this type of item\n    @Override\n    public synchronized int getType() {\n        return 0;\n    }\n\n    //The layout to be used for this type of item\n    @Override\n    public synchronized int getLayoutRes() {\n        return R.layout.wifi_scanner_view_list;\n    }\n\n    //The logic to bind your data to the view\n    @Override\n    public synchronized void bindView(@NonNull ViewHolder viewHolder, @NonNull List<Object> payloads) {\n        //call super so the selection is already handled for you\n        super.bindView(viewHolder, payloads);\n        //viewHolder.setIsRecyclable(false);\n        //bind our data\n        //set the text for the name\n        viewHolder.capabilities.setText(capabilities);\n        viewHolder.signal.setText(signal);\n    viewHolder.security.setText(security);\n        }\n\n    }\n\n    //reset the view here (this is an optional method, but recommended)\n    @Override\n    public synchronized void unbindView(@NonNull ViewHolder holder) {\n        super.unbindView(holder);\n        holder.capabilities.setText(null);\n        holder.signal.setText(null);\n    }\n\n    //Init the viewHolder for this Item\n    @NonNull\n    @Override\n    public synchronized ViewHolder getViewHolder(@NonNull View v) {\n        return new ViewHolder(v);\n    }\n\n    //The viewHolder used for this item. This viewHolder is always reused by the RecyclerView so scrolling is blazing fast\n    class ViewHolder extends RecyclerView.ViewHolder {\n        TextView capabilities;\n        TextView signal;\n        TextView security;\n\n        ViewHolder(View view) {\n            super(view);\n            capabilities = view.findViewById(R.id.wifi_capabilities);\n            signal = view.findViewById(R.id.signal_text);\n            security = view.findViewById(R.id.wifi_security);\n        }\n    }\n}\n\n```\nFastAdapter : \nprivate FastItemAdapter<SampleItem> fastadapter;\nand for adding item i use :\nfastadapter.add(new SampleItem(\"TKIP\",\"-45\",\"WPA\");\nfor deleting : \nfastadapter.remove(position);\nfor moving : \nfastadapter.move(position1, position2);\ncan you help how to modify the class to automatic sort by signal please, sorry my low English, Best regards.\n. @FabianTerhorst , Without making any modification in the SampleItem class ? Just to call this method ?\nAnd how we build itemListImpl or interceptor because no documentation for that i'm sorry .... @FabianTerhorst , hahaha i have 3 days working for that and my head now is totally stucked :D :D , please if you can rewrite my implementation in the comment above that i have writted my class and implementation how i add or delete items :D :D :D , you don't have other choice hahahaha, thanks, because the items are added in real time, not all at one time. @FabianTerhorst , I just make a joke, i know that no need for clarification, i just need when add item, delete or move in real time (not added to array first) to make the adapter automatically sort those damn items , i am really sad with that.. After many test finally worked example no need to create more classes or implements ModelAdapter or IInterceptor : \n```\nprivate FastAdapter fastadapter;\nprivate ItemAdapter itemAdapter;\nprivate ComparableItemListImpl itemimpl;\n```\nSampleItem class : \n```\nprivate class SampleItem extends AbstractItem {\n        String capabilities;\n        String signal;\n        String security;\n        public SampleItem() {\n        }\n    SampleItem(String capabilities, String signal, String security) {\n        this.capabilities = capabilities;\n        this.signal = signal;\n        this.security = security;\n    }\n\n    //The unique ID for this type of item\n    @Override\n    public synchronized int getType() {\n        return 0;\n    }\n\n    //The layout to be used for this type of item\n    @Override\n    public synchronized int getLayoutRes() {\n        return R.layout.wifi_scanner_view_list;\n    }\n\n    //The logic to bind your data to the view\n    @Override\n    public synchronized void bindView(@NonNull ViewHolder viewHolder, @NonNull List<Object> payloads) {\n        //call super so the selection is already handled for you\n        super.bindView(viewHolder, payloads);\n        //viewHolder.setIsRecyclable(false);\n        //bind our data\n        //set the text for the name\n        viewHolder.capabilities.setText(capabilities);\n        viewHolder.signal.setText(signal);\n    viewHolder.security.setText(security);\n        }\n\n    }\n\n    //reset the view here (this is an optional method, but recommended)\n    @Override\n    public synchronized void unbindView(@NonNull ViewHolder holder) {\n        super.unbindView(holder);\n        holder.capabilities.setText(null);\n        holder.signal.setText(null);\n    }\n\n    //Init the viewHolder for this Item\n    @NonNull\n    @Override\n    public synchronized ViewHolder getViewHolder(@NonNull View v) {\n        return new ViewHolder(v);\n    }\n\n    //The viewHolder used for this item. This viewHolder is always reused by the RecyclerView so scrolling is blazing fast\n    class ViewHolder extends RecyclerView.ViewHolder {\n        TextView capabilities;\n        TextView signal;\n        TextView security;\n\n        ViewHolder(View view) {\n            super(view);\n            capabilities = view.findViewById(R.id.wifi_capabilities);\n            signal = view.findViewById(R.id.signal_text);\n            security = view.findViewById(R.id.wifi_security);\n        }\n    }\n\n}\n```\nSort Methods : \nprivate Comparator<SampleItem> getComparator() {\n        return new SortSignalAscending();\n}\nprivate class SortSignalAscending implements Comparator<SampleItem>, Serializable {\n        @Override\n        public int compare(SampleItem item1, SampleItem item2) {\n            return item1.signal.compareTo(item2.signal);\n        }\n}\nInitialization : \nitemimpl = new ComparableItemListImpl<>(getComparator());\nitemAdapter = new ItemAdapter<>(itemimpl);\nfastadapter = FastAdapter.with(itemAdapter);\nfastadapter.withSelectable(true);\nmRecyclerView.setAdapter(fastadapter);\nAfter that when adding, removing or moving the items it will handle the sort automatically based on sort method class : \npublic int compare(SampleItem item1, SampleItem item2) {\n            return item1.signal.compareTo(item2.signal);\n}\n@mikepenz , @FabianTerhorst i think should write documentation for that or maybe a sample activity in the app to add items dynamically for example after every 3 seconds with random data to make the sort more clear and how can it be implemented...\n. @FabianTerhorst i understand, the only problem is that in some special cases i'm modifying the item data after getting it view with : \nfinal View view1 = mRecyclerView.getChildAt(a);\nfinal int position = mRecyclerView.getChildAdapterPosition(view1);\ntextview_signal = view1.findViewById(R.id.signal_text);\nand i see that the adapter doesn't sort item after making change to signal... I have tried with : \nfastadapter.notifyItemChanged(position); , but after this the item data make change for 1 second and revert back to first value when in other side it works well without calling notify but doesn't sort... Do you have any solution for this ?\nA workaround is to remove the item from its position and to add again with new values, but i think this is heavy to CPU if there are many items. @FabianTerhorst  Can it be solved through this library ? In fact when we call fastadapter.notifyItemChanged(position); it revert back value of the item to the first added value ignoring new one, maybe this is a bug ? . @FabianTerhorst ok thanks, i will try, but if you can please provide a reference, or maybe a short workaround how to do that.. @FabianTerhorst solved the issue that value revert back to original, i am facing the same other issue with fastadapter, it is not sorting items anymore after value change, it is there any method to call the comparator again ?. To thank you for your great free work. Here you have 10 Promo codes to get my Pro app for free and to show respect for this library. \nFast Adapter has made my job really easy and elegant. I think there are many minor things to improve especially for new programmers that are still learning Kotlin. Anyway i think is more easy than older version to implement and it should be faster and more stable.\nJust for reference here you have my Free and Pro version of my app which mainly is using Fast Adapter.\nFREE VERSION : \nhttps://play.google.com/store/apps/details?id=com.eakteam.networkmanager\nPRO VERSION :\nhttps://play.google.com/store/apps/details?id=com.eakteam.networkmanager.pro\nI am saying again, this is not for adverstiment purposes. I just wanted to say that this library is awesome for the moment.\nPROMO CODES FOR PAID VERSION : \n0) ~SR6UR92L60J3P3SHUZ3ZT7R~\n1) EN77WB1KEAM6UM2YCKFSMA6\n2) BGCMUNB7AZC9TP6NMWKZWF5\n3) DSUAF9RURYME477JCGM0FKD\n4) GR8XKLPNXXPX99NYLMNT6YJ\n5) 7QGL2CDM45SFZHSC26ZB4U9\n6) BA82ZHAQXTBSSKN2Z0SME2U\n7) PG450P9VF1YSTYDC2Z99FU1\n8) NQN4XUYPWSC6H0Q6F2M83E6\n9) S0C9ZF2L0YZ4C97D711LY0S\nBest Regards !\n . @mikepenz in the latest release 4.0.0-rc03 i was using in Kotlin this : \nfastadapter.onClickListener = object: OnClickListener<SampleItem> {\n            override fun onClick(v: View?, adapter: IAdapter<SampleItem>, item: SampleItem, position: Int): Boolean {\n}\nand \nitemAdapter!!.itemFilter.filterPredicate = object: IItemAdapter.Predicate<SampleItem> {\n            override fun filter(item: SampleItem, constraint: CharSequence?): Boolean {\n                return item.emri.toLowerCase().contains(constraint.toString().toLowerCase())\n            }\n        }\nBut listener classes doesn't exist any more and IItemAdapter.Predicate too\nI was using 4.0.0-rc02. @mikepenz  Can you please show a short example for how to implement ClickListener & Predicate too ? Because I'm using this library in 60% of my app and in Production and now need to change too many classes for new version. Just a short best practice if you can, like my examples in above message\nThanks. @mikepenz Ohhhh my god, i have maybe 15 hours coding something special in my app and when you release the latest version i going crazy how to use this only because of missing \"=\" before {\n:D :D :D \nBest Regards. @mikepenz i think everything is Ok right now, i have started new implementation. The upgrade is really great, more understandable and more better. But because of many hours here with my laptop maybe you know how it feels, things are getting crazy :D :D :D.\nBest Regards. @rasheedk \n\nPlease post comments / issues on this awesome library .\nWe do respect mikepenz and his open source works a lot . Please don't use his works as a promotion to your app.\n\nI removed, sorry\n. ",
    "johnwatsondev": "Yep. I got your point. Thanks again. \ud83d\udc4d . @mikepenz It's not just the animated effect. The background of item 3 should be the color of red because I selected it finally in the gif. But It showed the normal background. You can test it by yourself. :). Well. I have disabled the animation. It still didn't work.. ",
    "kusyjan": "I have got the same issue \ud83d\ude0f \ud83d\ude1e . ",
    "Seidak": "@mikepenz @AllanWang thanks for reply, today I tried new version I got the same error still except now it's showing \nError:Failed to resolve: com.mikepenz:library-core:3.2.2\nError:Failed to resolve: com.mikepenz:library:unspecified\nbefore that it was always 3.1.1. I have newest support library.. ",
    "amorenew": "I added @aar and it works\n  implementation 'com.mikepenz:fastadapter-extensions:3.2.5@aar'\n. ",
    "ramanadv": "Same issue , works when I add @aar to the dependency line in gradle.. ",
    "Kaz32": "Thanks @mikepenz. @AllanWang , read your reply on #624 -- thanks. To use it in Kotlin\n```\nval items = ArrayList>()\nitems.add(SimpleSubItem>()\n.withName(\"Test \" + i)\n.withIdentifier(identifier.getAndIncrement().toLong()))\n```. Thanks @mikepenz , I will try your suggestion. @mikepenz yes I add 1 level based on your sample (ExpandableSampleActivity). @mikepenz thanks for the reply, \nFor getting header position -> I should loop the list items and get first occur of header text on item?   . ",
    "ebabenskas": "@AllanWang Thanks for answer. The views are different so I think the best option would be to use different adapters. . ",
    "atulgoswami21": "Same Issue here.. ",
    "cristian1703": "@mikepenz the issue is not checking the item's checkbox when the item is selected in multiselect. The issue is that by default the checkbox is hidden, but I do not know how to go about making all the checkboxes visible when the multiselect mode starts (onlongclick) and after the last item has been unselected to hide all the checkboxes. I mean how can I send a flag in in the viewholder to check if multiselect mode is on? or what should i do?. Also instead of firing actionmode when multiselect mode starts how can I listen for the event so I can show icons in my current options menu? (I want to do this because my current toolbar has a drawable as background and I cannot achieve this in actionmode). Thank you for your time!. Ok but in case of the flag on items when entering multiselect mode I will have to loop through all the items and change the flag. My question is in the case of a global flag where should I put it and how to change its value. Because in this case I cannot access an adapter on which to set variables, I only have the item model. Plus in order to hide all of the checkboxes when the multiselect mode is on I need to know when multiselect event ends. Is there any way of finding that out?. ",
    "rraikarnvi": "This happens when I try to override bindview or unbindview in class item which extends AbstractExpandableItem.  As soon as I override bindview/unbindview this pops up\nError:(41, 5) error: method does not override or implement a method from a supertype. Guys if anyone got this issue override the method that is bindview or unbind view and comment the @Override statement. but the bindview and unbind views are not being called now. any help @mikepenz ??. I have found a way to reproduce it. change the view holder class from static to normal. Thats what gives. the issue. idk y but this gives error @mikepenz . ",
    "huseyinzorlu": "I dont how but now i am fixed.\nNormally i  was add : \n    implementation 'com.mikepenz:fastadapter:3.2.4@aar'\n    implementation 'com.mikepenz:fastadapter-commons:3.2.4@aar'\n    implementation 'com.mikepenz:materialize:1.1.2@aar'\nBut when i change to:\n    implementation 'com.mikepenz:fastadapter:3.2.4@aar'\n    implementation 'com.mikepenz:fastadapter-extensions-expandable:3.2.4@aar'\n    implementation 'com.mikepenz:fastadapter-commons:3.2.4@aar'\n    implementation 'com.mikepenz:materialize:1.1.2@aar'\nError is gone. \nUpps maybe should be check somewhere.\nThanks for your FastAdapter. it powerfull \ud83d\udc4d \n. ",
    "strangerweather": "Hi, basically I can long click, lift and move the item. However, other items don't move to make space for it and the crash occurs at that point, when I hover the item over another item, before dropping it.. Sure, here is the log:\nFATAL EXCEPTION: main\n                                                                            Process: com.strangerweather.nat.test, PID: 2720\n                                                                            java.lang.IndexOutOfBoundsException: Index: 2, Size: 0\n                                                                                at java.util.ArrayList.get(ArrayList.java:411)\n                                                                                at com.mikepenz.fastadapter.utils.DefaultItemListImpl.move(DefaultItemListImpl.java:68)\n                                                                                at com.mikepenz.fastadapter.adapters.ModelAdapter.move(ModelAdapter.java:471)\n                                                                                at com.mikepenz.fastadapter_extensions.utilities.DragDropUtil.onMove(DragDropUtil.java:55)\n                                                                                at com.strangerweather.nat.test.SimpleItemListActivity.itemTouchOnMove(SimpleItemListActivity.java:201)\n                                                                                at com.mikepenz.fastadapter_extensions.drag.SimpleDragCallback.onMove(SimpleDragCallback.java:95)\n                                                                                at android.support.v7.widget.helper.ItemTouchHelper.moveIfNecessary(ItemTouchHelper.java:858)\n                                                                                at android.support.v7.widget.helper.ItemTouchHelper$2.onTouchEvent(ItemTouchHelper.java:373)\n                                                                                at android.support.v7.widget.RecyclerView.dispatchOnItemTouch(RecyclerView.java:2836)\n                                                                                at android.support.v7.widget.RecyclerView.onTouchEvent(RecyclerView.java:2979)\n                                                                                at android.view.View.dispatchTouchEvent(View.java:10023)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2626)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2307)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n                                                                                at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2632)\n                                                                                at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2321)\n                                                                                at com.android.internal.policy.DecorView.superDispatchTouchEvent(DecorView.java:413)\n                                                                                at com.android.internal.policy.PhoneWindow.superDispatchTouchEvent(PhoneWindow.java:1808)\n                                                                                at android.app.Activity.dispatchTouchEvent(Activity.java:3061)\n                                                                                at android.support.v7.view.WindowCallbackWrapper.dispatchTouchEvent(WindowCallbackWrapper.java:68)\n                                                                                at com.android.internal.policy.DecorView.dispatchTouchEvent(DecorView.java:375)\n                                                                                at android.view.View.dispatchPointerEvent(View.java:10243)\n                                                                                at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:4438)\n                                                                                at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:4306)\n                                                                                at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3853)\n                                                                                at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3906)\n                                                                                at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3872)\n                                                                                at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:3999)\n                                                                                at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3880)\n                                                                                at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:4056)\n                                                                                at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3853)\n                                                                                at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:3906)\n                                                                                at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:3872)\n                                                                                at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:3880)\n                                                                                at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:3853)\n                                                                                at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:6246)\n                                                                                at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:6220)\n03-10 11:53:05.205 2720-2720/com.strangerweather.nat.test E/AndroidRuntime:     at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:6181)\n                                                                                at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:6349)\n                                                                                at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)\n                                                                                at android.view.InputEventReceiver.nativeConsumeBatchedInputEvents(Native Method)\n                                                                                at android.view.InputEventReceiver.consumeBatchedInputEvents(InputEventReceiver.java:176)\n                                                                                at android.view.ViewRootImpl.doConsumeBatchedInput(ViewRootImpl.java:6320)\n                                                                                at android.view.ViewRootImpl$ConsumeBatchedInputRunnable.run(ViewRootImpl.java:6372)\n                                                                                at android.view.Choreographer$CallbackRecord.run(Choreographer.java:874)\n                                                                                at android.view.Choreographer.doCallbacks(Choreographer.java:686)\n                                                                                at android.view.Choreographer.doFrame(Choreographer.java:615)\n                                                                                at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:860)\n                                                                                at android.os.Handler.handleCallback(Handler.java:751)\n                                                                                at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                                at android.os.Looper.loop(Looper.java:154)\n                                                                                at android.app.ActivityThread.main(ActivityThread.java:6119)\n                                                                                at java.lang.reflect.Method.invoke(Native Method)\n                                                                                at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\n                                                                                at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\nLine 201 I have : DragDropUtil.onMove(itemAdapter, oldPosition, newPosition);. I've tried on my android emulator phones as well as on my Huawei P9 Lite and my Samsung Galaxy Tab 2.\nDon't worry too much because I have moved on (I have set up drag and drop and swipe to dismiss on a regular recyclerview, using no libraries). You're welcome to close the issue. But in any case thanks for the libraries and for trying to help!. ",
    "suryaadiputra": "same problem with this #644 . ",
    "Chrylo": "I think this has something to do with initilaizing the FastAdapter.\nIt should probably be something with NotificationItem as generic type.\nFastAdapter.with<IItem<*, *>, IAdapter<out IItem<*, *>>>(itemAdapter). Thanks for the fast reply, you helped me get on the right track. My helper class looks like this now and fixes the problem:\n```\nclass FastAdapterExtension\n{\n    companion object\n    {\n        fun > createDefaultItemAdapter() = ItemAdapter()\n    @JvmOverloads\n    fun <Item : IItem<*, *>> createDefaultAdapter(itemAdapter: IAdapter<out Item> = createDefaultItemAdapter()) =\n            FastAdapter.with<Item, IAdapter<out Item>>(itemAdapter)!!\n\n    fun <Item : IItem<*, *>> createAdapter(vararg adapter: IAdapter<out Item>) =\n            FastAdapter.with<Item, IAdapter<out Item>>(adapter.toList())\n}\n\n}\n```. ",
    "Cilenco": "I use the core as well as the extensions library.\nimplementation 'com.mikepenz:fastadapter:3.2.4@aar'\nimplementation 'com.mikepenz:fastadapter-extensions:3.2.4@aar'. Sorry that I missed that one.\nWorks great now, thanks!. ",
    "Gounlaf": "I think you mixed up with mikepenz/MaterialDrawer.\n. ",
    "Scheams": "@Zulqurnain The arrow is implemented as ImageView in the item layout. You just have to remove it and its dependencies:\nIn \"expandable_item.xml\": remove the ImageView with ID \"@+id/material_drawer_icon\"\nIn \"SimpleSubExpandableItem.java\": remove all the code which uses this view.\nBelow all code snippets with out commented lines.\nxml\n    <!--<ImageView-->\n        <!--android:id=\"@+id/material_drawer_icon\"-->\n        <!--android:layout_width=\"16dp\"-->\n        <!--android:layout_height=\"16dp\"-->\n        <!--android:layout_marginTop=\"@dimen/material_drawer_vertical_padding\"-->\n        <!--app:ico_color=\"@color/md_black_1000\"-->\n        <!--app:ico_icon=\"gmd-keyboard-arrow-up\"-->\n        <!--app:ico_size=\"16dp\" />-->\nand\njava\n    //we define a clickListener in here so we can directly animate\n    final private OnClickListener<SimpleSubExpandableItem<Parent, SubItem>> onClickListener = new OnClickListener<SimpleSubExpandableItem<Parent, SubItem>>() {\n        @Override\n        public boolean onClick(View v, IAdapter adapter, @NonNull SimpleSubExpandableItem item, int position) {\n            if (item.getSubItems() != null) {\n//                if (!item.isExpanded()) {\n//                    ViewCompat.animate(v.findViewById(R.id.material_drawer_icon)).rotation(180).start();\n//                } else {\n//                    ViewCompat.animate(v.findViewById(R.id.material_drawer_icon)).rotation(0).start();\n//                }\n                return mOnClickListener == null || mOnClickListener.onClick(v, adapter, item, position);\n            }\n            return mOnClickListener != null && mOnClickListener.onClick(v, adapter, item, position);\n        }\n    };\nand\n``` java\n    @Override\n    public void bindView(ViewHolder viewHolder, List payloads) {\n        super.bindView(viewHolder, payloads);\n    //get the context\n    Context ctx = viewHolder.itemView.getContext();\n\n    //set the background for the item\n    UIUtils.setBackground(viewHolder.view, FastAdapterUIUtils.getSelectableBackground(ctx, Color.RED, true));\n    //set the text for the name\n    StringHolder.applyTo(name, viewHolder.name);\n    //set the text for the description or hide\n    StringHolder.applyToOrHide(description, viewHolder.description);\n\n//        if (getSubItems() == null || getSubItems().size() == 0) {\n//            viewHolder.icon.setVisibility(View.GONE);\n//        } else {\n//            viewHolder.icon.setVisibility(View.VISIBLE);\n//        }\n//\n//        if (isExpanded()) {\n//            ViewCompat.setRotation(viewHolder.icon, 0);\n//        } else {\n//            ViewCompat.setRotation(viewHolder.icon, 180);\n//        }\n    }\n@Override\npublic void unbindView(ViewHolder holder) {\n    super.unbindView(holder);\n    holder.name.setText(null);\n    holder.description.setText(null);\n    //make sure all animations are stopped\n\n//        holder.icon.clearAnimation();\n    }\n@Override\npublic ViewHolder getViewHolder(View v) {\n    return new ViewHolder(v);\n}\n\n/**\n * our ViewHolder\n */\nprotected static class ViewHolder extends RecyclerView.ViewHolder {\n    public final View view;\n    @BindView(R.id.material_drawer_name)\n    public\n    TextView name;\n    @BindView(R.id.material_drawer_description)\n    public\n    TextView description;\n\n//        @BindView(R.id.material_drawer_icon)\n//        ImageView icon;\n    public ViewHolder(View view) {\n        super(view);\n        ButterKnife.bind(this, view);\n        this.view = view;\n    }\n}\n\n```\n. ",
    "dya-tel": "Sorry for troubling you, but it seems I'm having a problem with finding an easy/proper way to make filtering and FastAdapterDiffUtil work together.\nWhat I want to do is while having a filtered adapter, calculate the diff between visible items and new data and then apply it.. ",
    "Mkurbanov": "Hi . It  will be good . Wich ideas are you have?\n2018-04-24 10:48 GMT+03:00 Anhar Ismail notifications@github.com:\n\nHello Sir. I'm a UI/UX and Graphics Designer. I want provide a logo for\nyou. Would you mind if I propose a new logo design for your application as\nmy Open Source Contribution?\nThanks before.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/668, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AkxbV02ZBmAb99Ywzrlts-L77CoYMB2Tks5trtjkgaJpZM4ThKqN\n.\n. Hi :)\n\n5 \u041c\u0430\u0439 2018 \u0433. 14:49 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Anhar Ismail\" notifications@github.com\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\nThanks. Will you use it? What size you need for your application?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/668#issuecomment-386793757,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AkxbVy47ls352eQyzvgkmpUBBSPKtGFTks5tvXWugaJpZM4ThKqN\n.\n. Hi :)\n\n\u0432\u0441, 20 \u041c\u0430\u0439 2018 \u0433., 12:15 Anhar Ismail notifications@github.com:\n\nHi @Mkurbanov https://github.com/Mkurbanov, are there any progress\nabout my logo proposal? :)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/668#issuecomment-390462734,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AkxbV0hXurZKZ1e88zC6tW8yxX7wh_z0ks5t0RgcgaJpZM4ThKqN\n.\n. Oww cool\n\n\u0441\u0431, 14 \u0418\u044e\u043b 2018 \u0433., 16:00 Mike Penz notifications@github.com:\n\n@EpiphX https://github.com/EpiphX you'd do the exactly the same. if you\nswitch you need to basically match a different item type with the model.\nsee the generic example showing how to match a model with an item. you\nshould be able to use this to change the type and fill up the rv newly\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/691#issuecomment-405015806,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AkxbV50N34p3SJkFmBDAcS1lrbxrexa-ks5uGc9jgaJpZM4U2hqL\n.\n. \n",
    "anharismail": "Hello, Sir @Mkurbanov. These are my logo proposal for your application.\nI'm very welcome if you have any comments, opinions, or revisions. Please just tell me.\nI'll provide all file types and sizes you needed.\nHope you like it.\n### Version 1.\n\n### Version 2.\n\n. Thanks so much @mikepenz. Will you use it? What size you need for your application? . Hi @mkurbanov. How about the logo proposal? What sizes I should provide? . Hi @Mkurbanov @mikepenz , are there any progress about my logo proposal? :). ",
    "bejibx": "@FabianTerhorst sorry, I don't understand your idea. Can you please describe it more detailed?. @mikepenz @FabianTerhorst can someone please help me with this pr? I don't quite understand what should I do?. Looking great! Can't tell if support adding items without FastAdapter will cause unexpected side-effects. Anyway this should not affect normal usage cases.. ",
    "piersky": "Ok, but where exactly in the sample code? In your app I see always the same fonts.\nCheers. Great, I fixed it! Thanks a lot.. ",
    "anajar": "@mikepenz :( that disappoint me  . @mikepenz thanks a lot your library help me a lot most of my developers asking me about my secret of the the adapter i always say it's @mikepenz \ud83d\udc4d \ud83e\udd47 . @FabianTerhorst i already create one and i add it wit the adapter with addAdapter(1,itemAdapter)\nbut still crashing when i try to add items . ",
    "dilroop": "When is release date ? #728 . ",
    "farfromrefug": "@FabianTerhorst very interesting. what a with the iOS version thing? you plan on writer get an iOS counterpart? would be interested to help on that as I think I might base a nativescript module on Fastadapter. @FabianTerhorst awesome, really awesome. Can't wait. And will try to help! Thanks. ",
    "debjitk": "By sections I meant header items.. Let me rephrase the question again. I have a adapter with a few items and section headers. Instead of adding all items to the ItemAdapter at once and the HeaderItem at once can we keep on adding items to the ItemAdapter and the Header ItemAdapter dynamically ?. @mikepenz \"Memory usage is simple the data size in object\" - Right now I am passing a list of long integers to the recyclerview adapter. Switching to FastAdapter i have to pass in an AbstractItem. What I am asking is there would be a memory pressure when the items are in thousands. Its a photo gallery app.. ",
    "InformatykPL": "Sorry, i didn't updated. Sorry! . ",
    "EpiphX": "Hi guys, thanks for getting back to me so quickly!\nFirst, I apologize if I didn't communicate my question correctly. \nWe are already utilizing StaggeredGridLayoutManager. My problem is that the xml is unique if you are in list mode vs grid mode. It is not a matter of just span size.\nPreviously I utilized viewtype to handle this, swapping out a different viewholder if the user switches to grid mode, but I'm not sure how to handle this with FastAdapter.\nThanks again. . ",
    "gmavenis": "I using your sample, pls try \"Expandable MultiSelect Delete Sample\". \nAt Edit mode, please tap many times on any item. @mikepenz : Do you have any idea?. Tks so much. ",
    "ShahoodulHassan": "\nThe changes need to be done in your project and not in this library.\n\nSee I clearly mentioned that my observations are based on the sample app; I haven't used this library in any of my projects as yet. Just check your sample app and see if u can reproduce what I mentioned above.. ",
    "GreaseMonk": "GetIdentifier in each of the classes is the PrimaryKey for realm and all items are loaded from realm. It would certainly crash in realm if that were the case.. I think i did it a bit too quickly, please see the updated project. I copied the class getType() id's over and forgot to update them per object. \ndownload the updated project\nsearch for \"test\" to get the exception.. ",
    "InvertedX": "in there example they implemented it in adapter. but i am using FastItemAdapter. so how can i tackle with this . ok thank you. btw FastAdapter is amazing . excellent work . ",
    "tentenponce": "Hi sir, here's my proguard main project config:\n```\n-keep class com.shockwave.** #pdf\n-keep class com.itsgmobility.hrbenefits.BuildConfig { *; }\n-keep public class android.support.v7.widget. { *; }\n-keep public class android.support.v7.internal.widget. { ; }\n-keep public class android.support.v7.internal.view.menu. { ; }\n-keep public class * extends android.support.v4.view.ActionProvider {\n    public (android.content.Context);\n}\n-keepclassmembers enum * {\n    public static [] values();\n    public static  valueOf(java.lang.String);\n}\n-dontwarn java.lang.invoke.** #can't find referenced class java.lang.invoke.LambdaMetafactory\ndynamically reference classes\n-dontnote com.bumptech.glide.GeneratedAppGlideModuleImpl #com.bumptech.glide.Glide\n-dontnote sun.misc.Unsafe #com.google.gson.internal.UnsafeAllocator\n-dontnote android.os.SystemProperties #com.scottyab.rootbeer.utils.Utils\n-dontnote com.android.org.conscrypt.SSLParametersImpl #okhttp3.internal.AndroidPlatform\n-dontnote org.apache.harmony.xnet.provider.jsse.SSLParametersImpl #okhttp3.internal.AndroidPlatform\n-dontnote sun.security.ssl.SSLContextImpl #okhttp3.internal.Platform\n-dontnote org.robovm.apple.foundation.NSObject #retrofit2.Platform\n-dontnote org.robovm.apple.foundation.NSOperationQueue #retrofit2.Platform$IOS$MainThreadExecutor\nduplicate library classes\n-dontnote com.google.auto.value.AutoAnnotation\n-dontnote com.google.auto.value.AutoValue$Builder\n-dontnote com.google.auto.value.AutoValue\n-dontnote org.apache.http.params.HttpConnectionParams\n-dontnote org.apache.http.params.HttpParams\n-dontnote org.apache.http.params.CoreConnectionPNames\n-dontnote org.apache.http.conn.ConnectTimeoutException\n-dontnote org.apache.http.conn.scheme.HostNameResolver\n-dontnote org.apache.http.conn.scheme.SocketFactory\n-dontnote org.apache.http.conn.scheme.LayeredSocketFactory\n-dontnote android.net.http.SslCertificate$DName\n-dontnote android.net.http.SslCertificate\n-dontnote android.net.http.HttpResponseCache\n-dontnote android.net.http.SslError\n-dontnote okhttp3.logging.HttpLoggingInterceptor$Level\n-dontnote okhttp3.logging.HttpLoggingInterceptor$Logger$1\n-dontnote okhttp3.logging.HttpLoggingInterceptor$Logger\n-dontnote okhttp3.logging.HttpLoggingInterceptor\ndisable shifting mode in BottomNavigationView\n-keepclassmembers class android.support.design.internal.BottomNavigationMenuView {\n    boolean mShiftingMode;\n}\n```\nAnd here's my build.gradle release config:\nrelease {\n            shrinkResources true\n            minifyEnabled true\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')\n            proguardFiles fileTree('proguard').asList().toArray()\n}\nI do have many proguard files, but I guess the proguard for the main project is what you're looking for, the other proguard config are from their corresponding libraries.\n. Hi sir @FabianTerhorst, I did run that command, I've checked the response and there's no library that depends on fast adapter. I also can't remember that I include a library that depends on fast adapter. By the way, here's the summary of my libraries:\nhttps://github.com/pwittchen/ReactiveNetwork v0.11.0\nhttps://github.com/f2prateek/rx-preferences v2.0.0\nhttps://github.com/scottyab/secure-preferences v0.1.4\nrxjava v2.1.10\nrxandroid v2.0.2\nrxbinding v2.1.1\nglide v4.0.0\nhttps://github.com/hdodenhof/CircleImageView v2.2.0\ngson v2.8.2\nautovalue v1.3\nhttps://github.com/code-troopers/android-betterpickers v3.1\nfirebase\nFrom this list, I don' think they depend on fastadapter.. Hi sirs, have you successfully recreated the issue? Do you need any additional info other than this to recreate it?. ",
    "simonestaffa": "How was this issue solved? I'm having the same crash problem.\n```\nprivate FastItemAdapter mFastItemAdapter;\nprivate ItemAdapter mFooterAdapter;\npublic void onCreate(..){\n          mFastItemAdapter = new FastItemAdapter<>();\n          mFastItemAdapter.withSelectable(true);\n          mFooterAdapter = items();\n          mFastItemAdapter.addAdapter(1,mFooterAdapter);\n          mFastItemAdapter.setHasStableIds(true);\n          mFooterAdapter = new ItemAdapter<>();\n          mRecyclerView.setAdapter(mFastItemAdapter);\n          ...\n        mEndlessRecyclerListener = new EndlessRecyclerOnScrollListener(mFooterAdapter) {\n            /*\n             * implement endless scroll\n             * @param currentPage\n             /\n            @Override\n            public void onLoadMore(final int currentPage) {\n                mRecyclerView.post(new Runnable() {\n                    @Override\n                    public void run() {\n                        mFooterAdapter.clear();\n                        mFooterAdapter.add(new ProgressItem().withEnabled(false));\n                        Handler handler = new Handler();\n                        handler.postDelayed(new Runnable() {\n                            @Override\n                            public void run() {\n                                mFooterAdapter.clear();\n                        }\n                    }, 1000);\n                }\n            });\n\n}\n```\nThen i'm getting\nAttempt to invoke virtual method 'int com.mikepenz.fastadapter.FastAdapter.getPreItemCountByOrder(int)' on a null object reference\nwhen calling mFooterAdapter.clear(). Thank you! It was only a really stupid error... Unfortunately I've to say that I've tried also with this:\n   `List items = new ArrayList();\n    for (JobOffer offer : jobOfferList)\n        items.add(new JobItemAdapter().withIdentifier(offer.getJobId()).withItem(offer));\n\n\n        mFastItemAdapter.add(items);\n\n    mFastItemAdapter.notifyDataSetChanged();`\n\nI'm sure that the same code, in other activities/fragments, when using the add function, it appends to the previous list. While here when i'm adding new elements, if I call mFastItemAdapter.getAdapterItems() it seems is not saving the previous added one.. Ok, thanks.\nBut it is only a redundant call and it doesn't solve the problem.\nWhat I'm trying to understand is if I have to save the instance (or something similar) of my FastItemAdapter, cause in the other activities if I have 3 or 4 more group of items to add, in each function the FastItemAdapter.getAdapterItems() is updated with the group of items appended. While here it seems everytime I call add, getAdapterItems() is clear. So the items are added, and not appended..  I just found the line of code that what causing a clear().\nFinally I solved the problem.\nSo It was only a line of code which i forgot to comment, that was calling clear() before each time I was adding data to my FastItemAdapter.\nReally thanks for the help!. ",
    "bkhezry": "@mikepenz thanks for your response. I used LinkedList to hold selected items position and check size of it before select new item. add in the Last(new select) and remove(deselect) from the First of LinkedList is the answer :+1: . ",
    "afarber": "I have tried adding a boolean field details to the model and then using it in the bindView method -\n```\nmFastAdapter.withSelectable(true);\nmFastAdapter.withOnClickListener(new OnClickListener() {\n    @Override\n    public boolean onClick(View v, @NonNull IAdapter adapter, @NonNull FinishedGameItem item, int position) {\n        item.details = !item.details;\n    // THE METHOD IS CALLED IN DEBUGGER, BUT THE VIEWS ARE NOT UPDATED\n\n    return true;\n}\n\n});\n```\nHere the updated model with the added boolean field:\n```\npublic class FinishedGameItem extends AbstractItem {\n    private final static String WON = \"won\";\n    private final static String LOST = \"lost\";\npublic boolean details; // TRIED TO ADD THIS FIELD\npublic long stamp;\npublic int gid;\npublic int score1;\npublic int score2;\npublic int elo1;\npublic int elo2;\npublic String state1;\npublic String finished;\npublic String given1;\npublic String given2;\npublic String photo1;\npublic String photo2;\n\n@Override\npublic int getType() {\n    return R.id.finished_game_item_id;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_finished_game;\n}\n\n@NonNull\n@Override\npublic ViewHolder getViewHolder(@NonNull View v) {\n    return new ViewHolder(v);\n}\n\nprotected static class ViewHolder extends FastAdapter.ViewHolder<FinishedGameItem> {\n    private ImageView mDetails;\n    private TextView mGid;\n    private TextView mFinished;\n    private TextView mScore1;\n    private TextView mScore2;\n    private TextView mGiven1;\n    private TextView mGiven2;\n    private TextView mElo1;\n    private TextView mElo2;\n    private ImageView mPhoto1;\n    private ImageView mPhoto2;\n    private ImageView mBoard;\n\n    public ViewHolder(View view) {\n        super(view);\n        mDetails = view.findViewById(R.id.details);\n        mGid = view.findViewById(R.id.gid);\n        mFinished = view.findViewById(R.id.finished);\n        mScore1 = view.findViewById(R.id.score1);\n        mScore2 = view.findViewById(R.id.score2);\n        mGiven1 = view.findViewById(R.id.given1);\n        mGiven2 = view.findViewById(R.id.given2);\n        mElo1 = view.findViewById(R.id.elo1);\n        mElo2 = view.findViewById(R.id.elo2);\n        mPhoto1 = view.findViewById(R.id.photo1);\n        mPhoto2 = view.findViewById(R.id.photo2);\n        mBoard = view.findViewById(R.id.board);\n    }\n\n    @Override\n    public void bindView(@NonNull FinishedGameItem item, @NonNull List<Object> payloads) {\n        Context ctx = mDetails.getContext();\n        Resources res = mDetails.getResources();\n\n        String result = (WON.equals(item.state1) ? \"Victory\" : (LOST.equals(item.state1) ? \"Loss\" : \"Draw\"));\n\n        // USE item.details TO SHOW OR HIDE mBoard AND CHANGE mDetails +/-\n\n        mBoard.setVisibility(item.details ? View.VISIBLE : View.GONE);\n        mDetails.setImageResource(item.details ? R.drawable.minus_circle_gray : R.drawable.plus_circle_gray);\n\n        mGid.setText(res.getString(R.string.str_game, item.gid));\n        mFinished.setText(result + \" / \" + item.finished);\n        mScore1.setText(res.getString(R.string.str_score, item.score1));\n        mScore2.setText(res.getString(R.string.str_score, item.score2));\n        mGiven1.setText(item.given1);\n        mGiven2.setText(item.given2);\n        mElo1.setText(String.valueOf(item.elo1));\n        mElo2.setText(String.valueOf(item.elo2));\n\n        if (URLUtil.isHttpsUrl(item.photo1)) {\n            Picasso.with(ctx)\n                    .load(item.photo1)\n                    .placeholder(R.drawable.account_gray)\n                    .into(mPhoto1);\n        }\n\n        if (URLUtil.isHttpsUrl(item.photo2)) {\n            Picasso.with(ctx)\n                    .load(item.photo2)\n                    .placeholder(R.drawable.account_gray)\n                    .into(mPhoto2);\n        }\n\n        if (item.details) {\n            Picasso.with(ctx)\n                    .load(\"http://slova.de/words/board2.php?gid=\" + item.gid)\n                    .placeholder(R.drawable.checkerboard_gray)\n                    .into(mBoard);\n        }\n    }\n\n    @Override\n    public void unbindView(@NonNull FinishedGameItem item) {\n        Context ctx = mDetails.getContext();\n        Picasso.with(ctx).cancelRequest(mPhoto1);\n        Picasso.with(ctx).cancelRequest(mPhoto2);\n        Picasso.with(ctx).cancelRequest(mBoard);\n\n        mDetails.setImageDrawable(null);\n        mGid.setText(null);\n        mFinished.setText(null);\n        mScore1.setText(null);\n        mScore2.setText(null);\n        mGiven1.setText(null);\n        mGiven2.setText(null);\n        mElo1.setText(null);\n        mElo2.setText(null);\n        mPhoto1.setImageDrawable(null);\n        mPhoto2.setImageDrawable(null);\n        mBoard.setImageDrawable(null);\n    }\n}\n\n}\n```\nbut the app works erratically, does not show the mBoard right away after the click happens and also does it for wrong items.\n\n. Thank you, I have called notifyAdapterItemChanged and now my code works (showing/hiding mBoard when clicking anywhere in the item):\nmFastAdapter.withSelectable(true);\n        mFastAdapter.withOnClickListener(new OnClickListener<GameItem>() {\n            @Override\n            public boolean onClick(View v, @NonNull IAdapter<GameItem> adapter, @NonNull GameItem item, int position) {\n                item.details = !item.details;\n                adapter.getFastAdapter().notifyAdapterItemChanged(position);\n                return true;\n            }\n        });\nI am not sure if this is the best method (there is some flickering).... @mikepenz could you please write few more details, what do you mean?\nI have changed my method to\nmFastAdapter.withOnClickListener(new OnClickListener<GameItem>() {\n            @Override\n            public boolean onClick(View v, @NonNull IAdapter<GameItem> adapter, @NonNull GameItem item, int position) {\n                item.details = !item.details;\n                adapter.getFastAdapter().notifyAdapterItemChanged(position, null);\n                return true;\n            }\n        });\nAnd here is my model:\n```\npublic class GameItem extends AbstractItem {\n    private final static String WON = \"won\";\n    private final static String LOST = \"lost\";\npublic boolean details;\npublic long stamp;\npublic int length;\npublic int gid;\npublic int score1;\npublic int score2;\npublic int elo1;\npublic int elo2;\npublic String state1;\npublic String finished;\npublic String word;\npublic String given1;\npublic String given2;\npublic String photo1;\npublic String photo2;\n\n@Override\npublic int getType() {\n    return R.id.finished_game_item_id;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_game;\n}\n\n@NonNull\n@Override\npublic ViewHolder getViewHolder(@NonNull View v) {\n    return new ViewHolder(v);\n}\n\nprotected static class ViewHolder extends FastAdapter.ViewHolder<GameItem> {\n    private ImageView mDetails;\n    private TextView mGid;\n    private TextView mInfo;\n    private TextView mScore1;\n    private TextView mScore2;\n    private TextView mGiven1;\n    private TextView mGiven2;\n    private TextView mElo1;\n    private TextView mElo2;\n    private ImageView mPhoto1;\n    private ImageView mPhoto2;\n    private ImageView mBoard;\n\n    public ViewHolder(View view) {\n        super(view);\n        mDetails = view.findViewById(R.id.details);\n        mGid = view.findViewById(R.id.gid);\n        mInfo = view.findViewById(R.id.info);\n        mScore1 = view.findViewById(R.id.score1);\n        mScore2 = view.findViewById(R.id.score2);\n        mGiven1 = view.findViewById(R.id.given1);\n        mGiven2 = view.findViewById(R.id.given2);\n        mElo1 = view.findViewById(R.id.elo1);\n        mElo2 = view.findViewById(R.id.elo2);\n        mPhoto1 = view.findViewById(R.id.photo1);\n        mPhoto2 = view.findViewById(R.id.photo2);\n        mBoard = view.findViewById(R.id.board);\n    }\n\n    @Override\n    public void bindView(@NonNull GameItem item, @NonNull List<Object> payloads) {\n        Context ctx = mDetails.getContext();\n        Resources res = mDetails.getResources();\n\n        mDetails.setImageResource(item.details ? R.drawable.minus_circle_gray : R.drawable.plus_circle_gray);\n        mBoard.setVisibility(item.details ? View.VISIBLE : View.GONE);\n\n        // the item is used to display either finished games or the longest words\n\n        if (TextUtils.isEmpty(item.word)) {\n            int result = (\n                    WON.equals(item.state1) ?\n                            R.string.won :\n                            (\n                                    LOST.equals(item.state1) ?\n                                            R.string.lost :\n                                            R.string.draw\n                            )\n            );\n            mInfo.setTypeface(Typeface.DEFAULT);\n            mInfo.setText(ctx.getString(result, item.finished));\n        } else {\n            mInfo.setTypeface(Typeface.DEFAULT_BOLD);\n            mInfo.setText(item.word);\n        }\n\n        mGid.setText(res.getString(R.string.str_game, item.gid));\n        mScore1.setText(res.getString(R.string.str_score, item.score1));\n        mScore2.setText(res.getString(R.string.str_score, item.score2));\n        mGiven1.setText(item.given1);\n        mGiven2.setText(item.given2);\n        mElo1.setText(String.valueOf(item.elo1));\n        mElo2.setText(String.valueOf(item.elo2));\n\n        if (ctx.getApplicationContext() instanceof SlovaApplication) {\n            SlovaApplication app = (SlovaApplication) ctx.getApplicationContext();\n\n            if (URLUtil.isHttpsUrl(item.photo1)) {\n                app.getPicasso()\n                        .load(item.photo1)\n                        .placeholder(R.drawable.account_gray)\n                        .into(mPhoto1);\n            }\n\n            if (URLUtil.isHttpsUrl(item.photo2)) {\n                app.getPicasso()\n                        .load(item.photo2)\n                        .placeholder(R.drawable.account_gray)\n                        .into(mPhoto2);\n            }\n\n            if (item.details) {\n                app.getPicasso()\n                        .load(\"http://slova.de/words/board2.php?gid=\" + item.gid)\n                        .placeholder(R.drawable.checkerboard_gray)\n                        .into(mBoard);\n            }\n        }\n    }\n\n    @Override\n    public void unbindView(@NonNull GameItem item) {\n        Context ctx = mDetails.getContext();\n        if (ctx.getApplicationContext() instanceof SlovaApplication) {\n            SlovaApplication app = (SlovaApplication) ctx.getApplicationContext();\n            app.getPicasso().cancelRequest(mPhoto1);\n            app.getPicasso().cancelRequest(mPhoto2);\n            app.getPicasso().cancelRequest(mBoard);\n        }\n\n        mDetails.setImageDrawable(null);\n        mGid.setText(null);\n        mInfo.setText(null);\n        mScore1.setText(null);\n        mScore2.setText(null);\n        mGiven1.setText(null);\n        mGiven2.setText(null);\n        mElo1.setText(null);\n        mElo2.setText(null);\n        mPhoto1.setImageDrawable(null);\n        mPhoto2.setImageDrawable(null);\n        mBoard.setImageDrawable(null);\n    }\n}\n\n}\n```\nBut there is flickering when click (I just would like to hide/show the mBoard image view):\n\n. I am confused because the model expects a list of payload objects:\npublic void bindView(@NonNull GameItem item, @NonNull List<Object> payloads) {\nbut in the the click listener I call the method with a single object:\npublic void notifyAdapterItemChanged(int position, @Nullable Object payload) {. Thank you for your hints, I got rid of the flickering by using your advice + looking in debugger. Fabian, thanks for your hint, but could you add few general words on how to use DiffUtils?\nJust few words on what they produce and where to put their output then?\nEspecially  unclear to me - where would I get the old data, while in the onChanged method of the LiveData?. Nevermind DiffUtils is google's class, I need to read up on the docs. Thanks. Good evening again! I am confused, how to use DiffUtil with FastAdapter -\nI have added a callback class:\n```\npublic class DiffCallback extends DiffUtil.Callback {\n    private final List mOldList;\n    private final List mNewList;\npublic DiffCallback(List<TopItem> oldStudentList, List<TopItem> newStudentList) {\n    this.mOldList = oldStudentList;\n    this.mNewList = newStudentList;\n}\n\n@Override\npublic int getOldListSize() {\n    return mOldList.size();\n}\n\n@Override\npublic int getNewListSize() {\n    return mNewList.size();\n}\n\n@Override\npublic boolean areItemsTheSame(int oldItemPosition, int newItemPosition) {\n    TopItem oldItem = mOldList.get(oldItemPosition);\n    TopItem newItem = mNewList.get(newItemPosition);\n\n    return oldItem.uid == newItem.uid;\n}\n\n@Override\npublic boolean areContentsTheSame(int oldItemPosition, int newItemPosition) {\n    TopItem oldItem = mOldList.get(oldItemPosition);\n    TopItem newItem = mNewList.get(newItemPosition);\n\n    return oldItem.elo == newItem.elo &&\n            oldItem.given.equals(newItem.given) &&\n            //oldItem.photo != null && oldItem.photo.equals(newItem.photo) &&\n            oldItem.avg_time != null && oldItem.avg_time.equals(newItem.avg_time) &&\n            oldItem.avg_score == newItem.avg_score;\n}\n\n@Nullable\n@Override\npublic Object getChangePayload(int oldItemPosition, int newItemPosition) {\n    return super.getChangePayload(oldItemPosition, newItemPosition);\n}\n\n}\n```\nAnd then I am trying to use it in the onChanged method instead of just calling mItemAdapter.clear() but the RecyclerView stays empty even though the tops has elements:\n```\n    mViewModel = ViewModelProviders.of(this).get(TopViewModel.class);\n    mViewModel.getTops().observe(this, tops -> {\n        List oldList = mItemAdapter.getAdapterItems();\n        List newList = new ArrayList<>();\n        for (TopEntity top: tops) {\n            TopItem item = new TopItem(top);\n            newList.add(item);\n        }\n    DiffCallback diffCallback = new DiffCallback(oldList, newList);\n    DiffUtil.DiffResult diffResult = DiffUtil.calculateDiff(diffCallback);\n\n    mItemAdapter.getAdapterItems().clear();\n    mItemAdapter.getAdapterItems().addAll(newList);\n    diffResult.dispatchUpdatesTo(mFastAdapter);\n});\n\n```\nPlease give me some hints. \nAlso, I don't want to use FastAdapterDiffUtil, because I don't have any expandable items.\n. Still, I have tried using FastAdapterDiffUtil too -\n```\n        mViewModel = ViewModelProviders.of(this).get(TopViewModel.class);\n        mViewModel.getTops().observe(this, tops -> {\n            List newList = new ArrayList<>();\n            for (TopEntity top: tops) {\n                TopItem item = new TopItem(top);\n                newList.add(item);\n            }\n        DiffUtil.DiffResult diffResult = FastAdapterDiffUtil.calculateDiff(mItemAdapter, newList);\n        FastAdapterDiffUtil.set(mItemAdapter, diffResult);\n    });\n\n```\nand then the RecyclerView is updated correctly, but the flickering is still there.\n. Hello Mike, thanks for your reply! I have added the 2 methods to my TopItem class (representing player objects with unique integer uid):\n```\n    @Override\n    public boolean equals(Object other) {\n        if (other instanceof TopItem) {\n            return this.uid == ((TopItem) other).uid;\n        }\n    return false;\n}\n\n@Override\npublic int hashCode() {\n    return uid;\n}\n\n```\nBut unfortunately the one-time flickering is still there when I try to use FastAdapterDiffUtil in my TopFragment:\n```\n            List newList = new ArrayList<>();\n            for (TopEntity top: tops) {\n                TopItem item = new TopItem(top);\n                newList.add(item);\n            }\n        DiffUtil.DiffResult diffResult = FastAdapterDiffUtil.calculateDiff(mItemAdapter, newList);\n        FastAdapterDiffUtil.set(mItemAdapter, diffResult);\n\n```\nI have also posted my question on Stackoverflow and few people suggest, that FastAdapter might have issues with DiffUtil or FastAdapterDiffUtil, but I think it is maybe just an issue with missing documentation...\nBest regards\nAlex. Mike, yes - if you look at my TopItem - it uses:\n@Override\n    public int getType() {\n        return R.id.top_item_id;\n    }\nThere are no other items in my simple test case. Or do you mean something else, maybe I misunderstand you?. I have added\n@Override\n    public long getIdentifier() {\n        return uid;\n    }\nbecause each player uid is unique in my case (and have removed equals and hashCode methods again) - and now there is no flickering now, thank you!\nSo FastAdapterDiffUtil is like DiffUtil, but does not need a callback (however needs a unique id)?\nCan Google's DiffUtil be used with FastAdapter too?. Thanks for replying Fabian, do you mean a logcat.txt ?\n. Here it goes, thank you (I have renamed it to .txt, please rename back to .trace):\ncpu-art-20190113T123224.trace\n\n. I have removed all picasso calls and just use\nmPhoto1.setImageResource(R.drawable.account_gray);\nmPhoto2.setImageResource(R.drawable.account_gray);\nin the GameItem.java and still the same amount of frames is being skipped when slowly scrolling the list of 4 items up and down:\n01-13 14:45:20.763 4833-4833/de.slova I/Choreographer: Skipped 165 frames!  The application may be doing too much work on its main thread.\n01-13 14:45:28.866 4833-4833/de.slova I/Choreographer: Skipped 248 frames!  The application may be doing too much work on its main thread.\n01-13 14:45:30.442 4833-4833/de.slova I/Choreographer: Skipped 92 frames!  The application may be doing too much work on its main thread.\n01-13 14:45:36.117 4833-4833/de.slova I/Choreographer: Skipped 250 frames!  The application may be doing too much work on its main thread.\nHere the screenshot without any Picasso:\n\n. I keep looking and haven't be able to find the reason for the scrolling issue yet.\nI have prepared a simple test case at Github and have also asked my question on Stackoverflow.\nThe warnings when scrolling (not too fast, not too slow) are:\n01-17 15:16:27.279 13947-13947/de.afarber.fasi I/Choreographer: Skipped 173 frames!  The application may be doing too much work on its main thread.\n01-17 15:38:17.700 13947-13947/de.afarber.fasi I/Choreographer: Skipped 35 frames!  The application may be doing too much work on its main thread.\n01-17 15:38:21.237 13947-13947/de.afarber.fasi I/Choreographer: Skipped 211 frames!  The application may be doing too much work on its main thread.\n01-17 15:38:34.569 13947-13947/de.afarber.fasi I/Choreographer: Skipped 106 frames!  The application may be doing too much work on its main thread.\n01-17 15:38:38.696 13947-13947/de.afarber.fasi I/Choreographer: Skipped 107 frames!  The application may be doing too much work on its main thread.\n. I have switched to LinearLayout and the issue has been solved.\nIt seems to be the problem of my ConstraintLayout, sorry.. ",
    "KeesNijenhuis": "Thanks @FabianTerhorst !\nI got it working but right now this happens: \n\nAnd  I am not sure how to fix this.\n. Never mind the last post. I have figured it out. It is all working now.\nThanks for the help!. Yeah that is what i figured out :). ",
    "YovanggaAnandhika": "Thank Very Much for help. u saving my time. ",
    "Grouen": "Thank you for a quick response and fix.\n. ",
    "Androidjent": "Hi Mike,\nsorry for responding so late, I was busy. I tinkered with the old issue again after reading your reply. If I get right, you mean something like this (in pseudo code):\n@Override\n    public boolean itemTouchOnMove(int oldPosition, int newPosition) {\n        fastItemAdapter.getListofOldPosition(oldPosition).move;\nfastItemAdapter.getListofCurrentPosition(newPosition).Insert;\n        return true;\n    }\nCan you please tell me what methods to use? I am outside of my expertise and hope I am not embarrassing myself on Java basics, but I don't get how to access current lists or certain child lists.\nThanks for all your work!. Hi Mike,\nI think I will try if I can make it with an extension of List that handles about five sublevels via position. This class could be inserted in the itemadapter, like the usual list of items.\nU think this could work?\n. Hi Mike,\nthank you very much for a fast response - now my fragment is neat and clean, and everything is handled in the item :-) I'll break it down in case someone needs more details. \nThe ExpandableItem needs a global variable:\nprivate static ExpandableExtension<IItem> expandableExtension;\nwhich is set in the bindview method:\nObject tag = viewHolder.itemView.getTag(R.id.fastadapter_item_adapter);\n        if (tag instanceof FastAdapter) {\n            FastAdapter fastAdapter = ((FastAdapter) tag);\n            if (fastAdapter.getExtension(ExpandableExtension.class) != null)\n            expandableExtension = (ExpandableExtension<IItem>) fastAdapter.getExtension(ExpandableExtension.class);\n        }\nAn Eventhook is added to the item:\n```\npublic static class MyExpandableEvent extends ClickEventHook {\n        @Override\n        public View onBind(@NonNull RecyclerView.ViewHolder viewHolder) {\n            if (viewHolder instanceof SimpleSubExpandableItem.ViewHolder) {\n                return ((ViewHolder) viewHolder).icon;\n            }\n            return null;\n        }\n    @Override\n    public void onClick(View v, int position, FastAdapter<SimpleSubExpandableItem> fastAdapter, SimpleSubExpandableItem item) {\n\n        if (item.getSubItems() != null) {\n            if (!item.isExpanded()) {\n                ViewCompat.animate(v.findViewById(R.id.material_drawer_icon)).rotation(180).start();\n                expandableExtension.expand(position);\n            } else {\n                ViewCompat.animate(v.findViewById(R.id.material_drawer_icon)).rotation(0).start();\n                expandableExtension.collapse(position);\n            }\n            //return mOnClickListener == null || mOnClickListener.onClick(v, fastAdapter, item, position);\n        }\n        //return mOnClickListener != null && mOnClickListener.onClick(v, fastAdapter, item, position);\n        Toast.makeText(v.getContext(), \"supi = \"+position, Toast.LENGTH_LONG).show();\n    }\n}\n\n```\nThe only line left in the fragment/activity is:\nfastItemAdapter.withEventHook(new SimpleSubExpandableItem.MyExpandableEvent());. ",
    "jDilshodbek": "Thanks a lot Mr. Fabian. My problem is to compare data from Sqlite and from Server in adapter. They have the same id,count fields.I send both database list from Sqlite and Api to the adapter via constructor. When I enter this activity both databases are loaded and count variable is compared from databases. But I may start another activity from this activity. And the started activity also contains both server and sqlite database. Here I may change count variable and update the sqlite database.Finally I go back to previous activity that mentioned before, by clicking BackButton. But when I back here  I need to get updated Sqlite datalist and sent it to adapter directly again like this in order to compare server data list with updated sqlite database list\n. In the shown tutorial , We can create custom method in the adapter and call it where it is required. But I can't reach this and call it in the FastAdapter . I am sorry. Can you show me to call this refreshSqliteDB method in the\nactivity:\npublic class DataItem extends\nModelAbstractItem {\nList productDataList;\nDatabaseHelper databaseHelper;\nprivate OnItemCount itemCount;\npublic DataItem(Data data, OnItemCount listener,List\nproductDataList) {\n    super(data);\n    this.itemCount=listener;\n    this.productDataList=productDataList;\n}\npublic void refreshSqliteDB(List productDataList){\nproductDataList.clear();\nproductDataList.addAll(productDataList);\n\n}\nOn Tue, Oct 30, 2018 at 6:16 PM Mike Penz notifications@github.com wrote:\n\nI still do not understand the issue.\nIf you want to set a new list of items to the adapter just use the\ncorresponding API methods from the ModelAdapter or ItemAdapter.\nPlease read the javadoc and have a look at the samples.\nThe question seems not really related to the FastAdapter\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/732#issuecomment-434294836,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ASVToU-dawDknYpOxazPO1fAxG4yiXDEks5uqFEQgaJpZM4Xy6pS\n.\n. Thank you for your quick response and efforts. I think you understand my\nproblem now.\n I am just a junior developer, so I might explained unclearly. Sorry for\nthat.I think you may better close this issue now\n\nOn Tue, Oct 30, 2018 at 7:05 PM Mike Penz notifications@github.com wrote:\n\nthe adapter offers simple methods like add or set.\nitemAdapter.add(ITEMS);\nJust look at the sample app. it showcases this.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mikepenz/FastAdapter/issues/732#issuecomment-434313892,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ASVTodT6944RxBuqxvYaQ-HUkd9JdIcMks5uqFyegaJpZM4Xy6pS\n.\n. \n",
    "knife-s": "Oops, it was an error with my onLoadMore listener. closed\n. ",
    "sid-dob": "Here , do you mean -> \nChildTypeA = ExpandableParent\nChildTypeB = Expandablee ( i.e. the item that shows up after expansion )\nIs this complex ? or am I missing on something ?\nHere are the definitions : \n@Suppress(\"FINITE_BOUNDS_VIOLATION_IN_JAVA\")\nclass ProductDetailExpandableItem<Parent, SubItem>(\n        val productDetailState: ProductDetailExpandableItemState\n) : AbstractExpandableItem<ProductDetailExpandableItem<Parent, SubItem>,\n        ProductDetailExpandableItemViewHolder, SubItem>()\n        where Parent : IItem<*, *>,\n              Parent : IExpandable<*, *>,\n              SubItem : IItem<*, *>,\n              SubItem : ISubItem<*, *>\nExpandee\n@Suppress(\"FINITE_BOUNDS_VIOLATION_IN_JAVA\")\nclass ProductDetailExpandableDetailsItem<Parent>(\n        val data: String?, val viewType: Int\n) : AbstractExpandableItem<Parent, FastAdapter.ViewHolder<*>, ProductDetailExpandableDetailsItem<Parent>>()\n        where Parent : IItem<*, *>,\n              Parent : IExpandable<*, *>,\n              Parent : IClickable<*>,\n              Parent : ISubItem<*, *> \n. I am using this : \nval fastItemAdapter = FastItemAdapter<ProductDetailExpandableItem<*, *>>() \nHowever I think I understand the problem, this should solve it.\nval fastItemAdapter = FastItemAdapter<IItem<*, *>>()\nfor others after that you we will have to instance check and cast in onClick\nfastItemAdapter.withOnClickListener { v, adapter, item, position ->\n            // check instance of here and cast and perform actions\n}\nYes , this setup is working.. ",
    "lbenedetto": "Referring to getType() in the custom Item definition?. With this code, the item does not update\n```\n    @Override\n    public long getIdentifier(){\n        return voucher.hashCode();\n    }\n@Override\npublic int getType() {\n    return R.id.voucher_list_item_id;\n}\n\n```\nWith this code, the item does update\n@Override\n    public int getType() {\n        return voucher.hashCode();\n    }. No. Each item type has its own unique id. I'm using android resources to assign a unique id\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <item name=\"voucher_list_item_id\" type=\"id\" />\n</resources>\nAlso, this recycler view only displays one type of item.. Sure. I actually discovered an even simpler case to reproduce.\n```\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    RecyclerView recyclerView = findViewById(R.id.recyclerView);\n    recyclerView.setLayoutManager(new LinearLayoutManager(this));\n\n    ItemAdapter<CustomItem> itemAdapter = new ItemAdapter<>();\n    FastAdapter fastAdapter = FastAdapter.with(itemAdapter);\n    recyclerView.setAdapter(fastAdapter);\n\n    itemAdapter.add(new CustomItem(String.valueOf(System.currentTimeMillis())));\n    itemAdapter.add(new CustomItem(String.valueOf(System.currentTimeMillis() + 99999)));\n\n    //False: itemAdapter.getAdapterItem(0).getIdentifier() == itemAdapter.getAdapterItem(1).getIdentifier()\n    // Yet the first item is repeated in the recycler twice\n}\n\n```\nHere is a simple Android Studio project you can use to reproduce it.\nFastAdapterBug.zip\n. Yes, hash collisions are possible. But this reproduces 100% of the time.. Ah, I see. Sorry about that.\nThanks for your help.. ",
    "suriyadi15": "selectExt.selections -> this one also can't. ",
    "smarques84": "Hello @mikepenz yes it did I realized it was not FastAdapter fault. I had to set setItemAnimator(null) while fetching the data and add it back half second after itemsFiltered was called with recyclerView set to visible to achieve the desired effect. \nNot sure why but using setSupportsChangeAnimations to false and true back didn\u00b4t worked.\nThank you for your support :). Another possible solution for us was to use the Swipe Action in our Expandable Item but we need 3 actions for that to work, Add SubItem, Edit Expandable Item (Like Text), and Delete Expandable Item. We checked out the swipe example but it only seems to handle two actions and not more. \nMaybe create an alternative like Facebook Messenger where we can swipe to left and have 3 buttons to select from?. Hello @FabianTerhorst, not we didn\u00b4t tried version 4 yet, i can see that the rc2 was released 3 days ago. Our project is an old project made mostly in Java so I have to ask if the new kotlin version of FastAdapter will play nice with Java?. ",
    "ishdemon": "With DataBinding, see how onclick shows wrong, and items are changing when i scroll back top with random  item scaling.\nhttps://drive.google.com/open?id=1bXL0n5ugbajEAWgxSUSBEqsktVZpJXwZ. > \n\nHi, please show how you have implemented the data binding inside an item.\n\nbelow is the snippet:\n@Override\npublic int getType() {\n    return R.id.parentConstraint;\n}\n\n@Override\npublic int getLayoutRes() {\n    return R.layout.item_image_grid;\n}\n\n@Override\npublic ViewHolder getViewHolder(View v) {\n    ItemImageGridBinding itemImageGridBinding = DataBindingUtil.inflate(LayoutInflater.from(v.getContext()), R.layout.item_image_grid,\n            (ViewGroup) v.getRootView(), false);\n    return new ViewHolder(itemImageGridBinding);\n}\n\nprotected static class ViewHolder extends FastAdapter.ViewHolder<Photo> {\n    private ItemImageGridBinding mItemImageGridBinding;\n    private ConstraintSet set = new ConstraintSet();\n\n\n    public ViewHolder(ItemImageGridBinding itemImageGridBinding) {\n        super(itemImageGridBinding.getRoot());\n        this.mItemImageGridBinding = itemImageGridBinding;\n    }\n\n    @Override\n    public void bindView(Photo item, List<Object> payloads) {\n        if (mItemImageGridBinding.getItemViewModel() == null) {\n            mItemImageGridBinding.setItemViewModel(new ItemFeaturedViewModel(item, itemView.getContext()));\n        } else\n            mItemImageGridBinding.getItemViewModel().setPhoto(item);\n        String ratio = String.format(\"%d:%d\", item.width, item.height);\n        set.clone(mItemImageGridBinding.parentConstraint);                                                    //For setting aspect ratio of item grid\n        set.setDimensionRatio(mItemImageGridBinding.itemFeatured.getId(),ratio);\n        set.applyTo(mItemImageGridBinding.parentConstraint);\n    }. Still the same :/.\n",
    "rasheedk": "\n@mikepenz , after hours of refactoring i can confirm that for the purposes that i use this library everything is working perfectly.\nBecause of this great lib, just to say, i have choose to put it in the \"Special Thanks\" menu of my app.\nThis will be done in the next Public release. After this i will contact you again to give your(team or one person who is working with this) 50 more Promotional Codes for everyone who use this library too in their App/Apps to get for Free my Paid app. I want to do this because i didn't find any donation link and this lib was the reason that makes me go forward in Android programming some years ago. So i feel in dept with you.\nP.s : I don't want to do this to promote my app sincerely, this is just my wish to respect this work, because some years before i really didn't know nothing how to write Java code(i was C# programmer) and you helped me a lot.\nIf you want you can delete this comment if it is not suitable and i will contact you after next Public release.\nThank you and sorry for my low English, hope to understand me well :) :) ...\n\nPlease post comments / issues on this awesome library .\nWe do respect mikepenz and his open source works a lot  . Please don't use his works as a promotion to your app.\n. ",
    "IIIuminator": "setting a proper identifier fixed the issue, thanks!. ",
    "Hub2018": "Great, thank you! I will have a look!. ",
    "StuStirling": "As a workaround, I found this answer.\nIt involved turning off the supportsPredictiveItemAnimations and I did this by extending the LayoutManager and returning false for that method like so:\nprivate class NpaLinearLayoutManager @JvmOverloads constructor(\n            context: Context,\n            orientation: Int = RecyclerView.VERTICAL,\n            reverseLayout: Boolean = false) : LinearLayoutManager(context,orientation,reverseLayout) {\n        override fun supportsPredictiveItemAnimations(): Boolean {\n                return false\n            }\n    }. I'm not sure if it would be reproducable. I think it would be but I wouldn't be able to say what exact combination caused it. . ",
    "zhangle1": "I found the answer here to thank you.\n https://github.com/mikepenz/FastAdapter/tree/feature/v3_new. "
}