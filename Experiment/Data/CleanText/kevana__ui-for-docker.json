{
    "zimbatm": "It's a quick hack, let me know if you want any changes.\n. This doesn't fix #2 but allowed me to run dockerui on my host OS without having to add a symlink from the dockerui git repo to /app.\n. Ok I understand. I've just reworked the branch to accept an optional asset path as argument with a default to /app\n. Sweet, didn't know about entrypoint.\nRegarding docker0 I think it's likely that it's always using the same address but we can't really guarantee that in other environments than Vagrant. It would be nice if docker could expose the port just to this single VM that we trust.\n. ",
    "crosbymichael": "Ahh, actually the dockerui app was initially added as a helper for running the site within a container.  If you want to really host the site I suggest using a proper server like nginx to serve the files.  \nHowever, this makes since and is a quick way to host the site without having to install additional software on your host.  I'm all for fast friction free installs. \nCould you change it to use \"/app\" by default ( to support the app running in a container ) but have the last arg on the cmd line as the path to the app instead of a flag? i.e.\n./dockerui -e=\"http://192.168.1.9:4243\" -v /var/www/dockerui\nI'm up for keeping \"/app\" hard coded for the default because the binary can be removed from the site content.  Thanks for your help.\n. Thanks!\n. Actually we just merged one of my changes so that you can omit the /dockerui (cmd binary) when running a container.  It's called entrypoint and it will not be overwritten when passing args on the cmd line.  http://docs.docker.io/en/latest/use/builder/#entrypoint\ndocker run -d crosbymichael/dockerui -e=\"http://192.168.1.9:4243\"\nI have not updated the dockerfile for the ui to support the entrypoint because this change is only in master and has not been included in a docker release.\nAnyways, this PR looks good but I'll have to look into setting the default to docker0.  I'll run some tests and if docker0 does work you can update this PR with the default (if that is fine with you) before I merge the change.\nThanks for your help!\n. This is not needed anymore with WORKDIR and ENTRYPOINT\n. @mongrelion @randywallace \nI don't think that this adds anything and apache is a little too much for what I want to accomplish here.  Thanks for the PR and maybe if you want to improve the server look in dockerui.go.\n. @randywallace Yes this is much better.  Could you use the official go release located:\nhttps://code.google.com/p/go/downloads/detail?name=go1.1.2.linux-amd64.tar.gz&can=2&q=\nI don't trust the versions in apt on ubuntu.\nYou can just untar the pkg into /usr/local/bin and all is good.\n. @randywallace How about a one liner\ncurl -s https://go.googlecode.com/files/go1.1.2.linux-amd64.tar.gz | tar -v -C /usr/local -xz\nOf course we will have to use apt to install curl in the container but I am fine with that.\n. thanks @randywallace \n. @jpellerin Thanks!\n. @mcarr67 I don't think this will work because PortMappings on NetworkSettings will be null if the container is not running. \n. LGTM\n. LGTM\n. LGTM\n. thanks\n. @42wim what about IE? \n. just joking,  LGTM thanks.  Feel free to keep improving dockerui, I am pretty busy with docker so I can use all the help I can get ;)\n. LGTM\nthanks\n. thx\n. LGTM\nThanks\n. Thanks!\n. LGTM\n. Thanks, i'll review this weekend\n. LGTM\n. sure, sorry for the delay \n. LGTM\nThanks for doing this. hope you contribute more\n. This is cool but the UI is a little weird for it.  Maybe it should only display when you click on one image and only be for that image?\n. Are there any css files to import to make this pretty? \n. Im getting this error in the chrome console:\nbash\nFailed to load resource: the server responded with a status of 500 (Internal Server Error) http://192.168.56.102:9000/dockerapi/containers/fefa1fd22a4c2e2720246e7c434\u20266d5bb1400e0320929d158c421e72cca7a/attach?logs=true&stderr=true&stdout=true\n. Maybe have something like term.js in a modal? \n. Yes, we could add this and then use it later for the attach websocket endpoint to attach to a bash session or something else.\n. Thanks!\n. we can still keep the master branch going\n. @kevana code LGTM, i didn't run it but everything looks sound\n. Thanks, @kevana do you think we should create an org on the hub for the official build?\n. Yes, we all can be part of the org and have access to update the official image\n. LGTM\nMichael Crosby\n\nOn Jan 31, 2015, at 12:45 PM, Kevan Ahlquist notifications@github.com wrote:\nPlanning to merge this weekend unless there's objections. Planning to build as 0.6.0-beta on the registry to do a final round of testing, then tag as 0.6.0 and point latest at it.\n\u2014\nReply to this email directly or view it on GitHub.\n. i'll review soon\n. LGTM\n. LGTM\n. Can you rebase this PR on master and remove the ../ from the imports? I just merged another PR fixing imports of scripts.  Thanks!\n. \n",
    "songgao": "I think default of assets could be simply pointed to a path inside $GOPATH since it's cloned along with Go source files.\ngo list can provide path to a package, and from that, you can infer path to assets: https://github.com/songgao/gallery/blob/master/utils.go#L12\nPlease let me know if you think this is a reasonable change and I'll make a pull request.\n. ",
    "mongrelion": "I don't intend to create controversy, this is just a humble question: why Apache and not Nginx? Why not include no web server? The idea is to make it as agnostic as possible, right?\n. ",
    "randywallace": "Yup, no problemo, I was being lazy and using the repo's go worked fine for building that quick webserver.  Will advise when the branch is updated so you can review again.\n. Well, that does mitigate the current 'docker doesn't cache the ADD command thing' so works for me ;)\nWill update PR\n. ",
    "jamtur01": "LGTM\n. ",
    "thierrystiegler": "+1\n. ",
    "qiutiaoming": "@crosbymichael  , alreay rebased ,but I am not familiar with git ,and the rebase action,so maybe this comment has some error, please let me know.\nThx.\n. ",
    "nazar-pc": "This is very simple pull request, can you look at it?\n. ",
    "bettse": "Excellent idea, The previous graph was certainly overly-verbose, and wasn't even helping to answer the question I had hoped to use this visualization to answer (\"Is my image built off the lineage of images I expect?\").  \nI'd like to make this more efficient by only asking the docker API for the images related to the image I'm interested in, but I haven't found a way to do so that still retains the parentId data that is needed.\n\n. Is their anything I can do to help this to be merge-able?\n. I was trying to emulate the style of the docker --viz, but I'm open to suggestions.  The elements are SVG, so styling is straightforward with CSS, I just don't have any creative ideas for how to make it look.\n. Also did some jshint suggested cleanup cause it was creating too much noise in my editor.\n. I've found that it doesn't handle the unix socket style connection to docker well, but it should handle the tcp based one.  I'll continue to work on finding a solution for the unix socket.\n. I found the problem and adding hijacking support to the unix handler.  I have even less experience with Go than I do with Angular, and you've seen the mess I made there, so I'm very open to suggestions for refinement.\n. I realize I may have forgotten to push my go changes until now.  I've also improve the semantics of the logging to support stdout/err.\n\n. I hadn't even thought about ansi, but that's a great idea.  I originally started with the idea of putting it all in a , but ran into problems due to my limited familiarity with angular.  I can give it another shot though.\n. Its much more colorful now.  I also dropped the red for stderr; I still think its worth having a visual differentiator, but not a problem for today.\n\n. I also have been working on a PR for logs, https://github.com/crosbymichael/dockerui/pull/41, but mine doesn't handle reloading of logs, which I like that yours does.  Feel free to grab anything of use from my PR.\n. ",
    "aus": "You will likely have a problem with any console output that contains any sort of ANSI colors. It might be nice to pipe the log output through a ANSI to HTML library. Maybe something like this:\nhttps://github.com/drudru/ansi_up\nAlso, I always prefer console output to be in a fixed width font. You might also darken the well background. I don't think all ANSI colors will contrast enough on that light gray. \n. term.js is awesome. I've used it before in a few of my projects. It might be a little be heavy for displaying log output, but it's dead simple to use. Send the raw terminal output to term.js and it does the rest.\n. ",
    "kevana": "Converted your work to the new module structure in #66, thanks for contributing!\n. Implemented logs view in #66. \n. Not mergeable after refactoring and functionality has been implemented elsewhere, thanks.\n. Could you set up a trusted build for this? I'm reluctant to recommend an image without being able to see what's in it.\n. We ended up switching to a scratch image with a statically linked binary in #85 and got the image size down to 5.4MB. Thanks for contributing.\n. Just noticed the simpleui branch, looks most of this would get clobbered by that.\n. c9009db addresses #46 and #23, losing port bindings on container stop/start. This has not been added to the /containers view.\n. 86ca961 resolves #44\n. @j0hnb Have time for a code review sometime this week? \n. I think this is almost ready, just needs some TLC with CSS.\n. @crosbymichael, @j0hnb, ready for review.\n. Bump\n. Maybe, would that let people other than yourself update the info?\n. Sounds good to me, my username on the hub is kevan.\n. I think the easiest way would be to default to 2000 and expose the tail option on the logs page to let people change it.\n. Fixes #62\n. @crosbymichael @davivcgarcia Have time for a review?\n. Almost at full coverage for  /containers/create options. I'm skipping the Attach* options until we build the rest of that feature, looks like I missed ExtraHosts.\n. Planning to merge this weekend unless there's objections. Planning to build as 0.6.0-beta on the registry to do a final round of testing, then tag as 0.6.0 and point latest at it. \n. I'm looking into pulling images from the registry and adding missing info to container and image pages. Past that nothing's prioritized for me yet. I just put an unordered missing features page on the wiki, if you have any requests let me know. \n. I'm not opposed to adding different themes but it probably won't be a focus of mine until we get closer to implementing everything exposed by the remote API. I added it to the wiki.\n. Thanks for contributing, I think it's a good start. Here's some things I'd like to see before we merge this (with reasons so it hopefully doesn't sound too arbitrary):\n- The same behavior for stderr logs, those could get as unwieldy as stdout. I think a single setting shared between both is reasonable.\n- A button to submit changes, the rest of the app is button-driven and without a button or other affordance it may not be clear to users how to submit changes.\n- Switch the inline styles to bootstrap classes and markup. The formatting looks a bit crushed in Chrome.\n- Switch the tailLines input to a number type.\n- Remove the length limit on the input.\n- Remove the console log, looks like it was left over from debugging.\nBonus: Could you add the ViewSpinner around the ContainerLogs.get calls to show users that something is happening and the UI hasn't frozen? It looks like I forgot that when I originally wrote this module.\nAgain, thanks for your help, I hope this isn't too picky.\n. Great, thanks.\n. LGTM, thanks for the fix.\n. This should be good to go.\n. The Remote API docs indicate that it doesn't, but it wouldn't surprise me if it did, I'll do more testing tonight.\n. I just double-checked, containers do maintain their HostConfig when restarted.\n. I'm a big fan of reducing the image size, but I'm not sure if we can use this while keeping the automated build  (maybe if we commit the dockerui binary to the repo?). I think keeping the build automated is important for trust because DockerUI is usually run as a privileged container, but we should definitely reduce the image size for the next release.\n@crosbymichael thoughts?\n. We could throw the binary into dist/ on master. The Makefile target would look something like this:\nbuild-release:\n    grunt build\n    docker run --rm -v $(pwd):/src centurylink/golang-builder\n    mv dockerui dist/\nMy biggest concern with binaries in the repo is that users can't trivially verify how they were generated (similar security concern as non-automated image builds for the hub), but for a 5MB image that tradeoff is probably worth it.\n. I pulled the dist folder out of master (fixes #93), and added this while I was there. Now releases will be tagged from commits in the dist branch and directions for building a release are on the wiki. Thanks for letting us know about this, the golang-builder is pretty awesome.\n. Tested, LGTM\n. LGTM\n. Hoping to test & merge this week, thanks for contributing.\n. LGTM\n. Right now it grabs everything from the last 24 hours, might be nice to change the time range, filter by event-type, link to image/container ID.\n. Current implementation isn't very testable, may look into extracting oboe to a service in the future.\n. - Added view for events endpoint\n- Cleaned up storage driver status display\n- Upgraded to Angular 1.3.15\n- Fixed date filter test failure\nReady for review\n. Will test this week\n. My understanding of the zombie-reaping issue is that it's only applicable if the container has multiple processes. DockerUI runs as a single process that never spawns any children, I don't think this is necessary.\n. LGTM\n. Looks good, thanks!\n. Will review this week, thanks\n. Thanks, will review this week\n. An option for a more robust solution that doesn't rely on a query param in the URL is to get the RepoTags from the images list. It's an extra ajax call, but it will always work. In its current state if a user clicks on a parent image link the repo won't be shown. Also, we might want to only display repo on the page.\n\nGood catch on the tag updating, I opened #113 for it.\n. Correct, links to an image can come from a container page, image list, or other image pages, we should try to find a solution that works for all of those. \n. Fixed by #155\n. :shipit: LGTM\n. Looks good, merged.\n. There's other broken links in comments on lines 59, 75, 83, and 92, as long as you're there could you update them?\n. Latest remote API is v1.18, not sure if there's a url that always points to the latest version.\n. Don't worry about ui_version, I bump that before releases. I meant the links are pointing to an old version of the docs, 12, not 18.\nhttps://docs.docker.com/reference/api/docker_remote_api_v1.12\n. Fixed by abccb31\n. Looks good, thanks for contributing. :+1: \n. Awesome! I'll try to get it merged this weekend.\n. Looks good, thanks\n. Thanks!\n. TODO: ~~Move dangling image removal after docker run to cut a little more time off the refresh, finish release building, update docs.~~\n. Fixes #139\n. How does this change the behavior of the events view? For image creation we added a response transformer that converted the series of JSON objects to a single object so Oboe could handle it, I'm not sure what the best approach is.\n. Related to #166\n. Fixes #150\n. Thanks! \n. :star: \n. Looks good, thanks for contributing.\n. Published on the Docker hub, 0.9.0-beta tag.\n. Thanks for contributing! This and #190 are in newest 0.10.0-beta build on the hub.\n. Really clean solution, thanks!\n. Released on the hub, 1.10-beta\n. The dist branch is intentionally separate to keep diffs into master clean and avoid committing the dist/ folder until a release happens\n. Published on the hub: 0.11.0-beta\n. \nLooks like there's at least one spot with a seconds/milliseconds issue with the dates.\n. Looks like everywhere that used the getdate filter\n. Fixed in https://github.com/kevana/ui-for-docker/commit/0da72fc225c539b18945e00e5a25d6d3befa1c73\n. I think an internal Docker volume would be fine for most uses but giving users the option is nice\n. LGTM \ud83d\udc4d \n. It's just fixing up the existing ones\n. \ud83d\udc4d LGTM\n. \u2b50 Thanks for this, it's long overdue. What are your thoughts on changing the flags to line up with the rest of the Docker ecosystem? I think the following changes would be necessary:\n- Endpoint format would change from http(s)://mydockerhost.com to tcp://mydockerhost.com\n- TLS would be enabled with the tlsverify flag\n- Add tlscacert, tlscert, and tlskey flags to allow users to specify filenames\n- Major version bump\nWith that we'd provide a familiar API to anyone that's already in the docker ecosystem\n. To match the Docker daemon the endpoint flag would change to allow -H or --host but the value would still use the unix:// or tcp:// prefix, the rest looks good\n. \ud83d\udc4d \n. Looks good to me \ud83d\udc4d \n. \ud83c\udf86 \n. Built on the hub as 0.11.0-beta, will start drafting a major release soon.\n. LGTM\n. LGTM :shipit: \n. LGTM\n. Fixes #73\n. TOOD: Start errors are ignored here.\n. Missing an 'r' here?\n. Should this be Messages.error(...)?\n. This can be removed. It was officially deprecated in 1.10.x and >=1.4.x recommends sending HostConfig during container creation instead of starting.\n. Same as L168\n. You can add more commits to your repo while the pull request is open\n. > changed parameter \"repo\" to \"tag\" in commit method, otherwise it was failing if repo has semicolon in name.\nI think this breaks the commit button, the service should allow setting both repo and tag and consumers of the service should choose which they want to provide.\n. Ran and checked it out, looks good on 1.6+, this is the only problem I found, if you don't have any port bindings then you can't add one.\n\n. Ah, got it. Looks good then. How common are images that don't explicitly expose ports?\n. Nit: can we use ui-for-docker on all of the naming?\n. Image name\n. ",
    "e2tox": "Yes. This is a trusted build initially until I found a docker hub issue (docker/docker#8518) that double the image size. I am looking for some gracefully workarounds. I will let you know if any progress.\n. ",
    "davivcgarcia": "AUTOMATED BUILD UPDATED: https://registry.hub.docker.com/u/davivcgarcia/dockerui/ \n. @kevana Unfortunately I'm still a rookie on JS. Anyway, I will check it out and give you an update in case I have any comments.\n. ",
    "jonny64": "I've been running container for about two months, logs are huge, logs page loads too slow.\nLet's say, I want just last 2000 lines\nHow it is possible to limit log output? docker 1.3 includes --tail=count_lines_to_show\nI can and willing to contribute, how log output limit should work? A settingm maybe?\nI suggest default log limit to last 2000 lines\n. https://github.com/crosbymichael/dockerui/pull/77\n. done\n. ",
    "dorman": "So what's the plan as far as the next set of features to develop? Just wondering the plan. \n. Yeah I saw that. Nice job on creating that list. I was wondering if we had a features page. Actually, what if we add more themes to the project? I know we just have the default bootstrap min, but maybe a few new ones could work...\nOther than adding new themes and creating containers within the app then I can't think of anything else right now.\n. Thanks for adding it to the wiki. \n. ",
    "hendrikhofstadt": "Does the restart method require the hostconfig ?  In that case we would have to add \"|| action === Container.restart\"  to the check implemented in #79  so the hostconfig wouldn't be removed on restart.\n. ",
    "tehbilly": "It's a shame that it can't be easily turned into an automated build, a size reduction of nearly 99% is significant.\nOne option would be to have another branch that includes just the compiled-down binary (essentially the contents of the image) and a simple Dockerfile like in this pull request. Automated builds can target branches other than master.\nWould only need to rebuild and push the updated binary when the backend changes. And it would be fairly trivial to have it be able to update the site assets on command or on a schedule, so that you wouldn't need to frequently do it for ongoing frontend changes. I'd be happy to help with that aspect, as well.\n. I should have elaborated more, I suppose. I was thinking more of having the other branch create a different tagged image, like :dist or what have you.\nHaving the other image available would be a convenience method. Users interested in ensuring integrity can generate the image from source easily without anything more than docker and git installed on their machine.\nDunno, I just think it's a good option to provide users. It's easy on any connection to download an image that's a few megabytes to try it out.\n. ",
    "HackToday": "This not fix the dockerui known issue, for tag, only have one field, to add tag.\nBut in docker API. \nhttps://docs.docker.com/reference/api/docker_remote_api_v1.18/\nTag an image into a repository\nPOST /images/(name)/tag\nTag the image name into a repository\nExample request:\nPOST /images/test/tag?repo=myrepo&force=0&tag=v42 HTTP/1.1\nExample response:\nHTTP/1.1 201 OK\nQuery Parameters:\nrepo \u2013 The repository to tag in\nforce \u2013 1/True/true or 0/False/false, default false\ntag - The new tag name\nIt need repo and tag field. But we only update repo and force, dockerui not support update tag name now. It is a new issue, So need other patch to fix that.  I think\n. @kevana \n1. seems the parent image repo can not be get from docker API /images/{id}/json\n2. And you suggest, in container page, if we click image link, we fetch the repo from /images docker API ?\n. ",
    "BrockFredin": "I updated the comments for each of the page numbers.  Thanks!\n. Changed app.js to reflect v1.18.  Is there a standardized 'ui_version'.  Because that would also need to be changed.\n. ",
    "deviantony": "This PR won't change anything to the Events view.\nI'm not even sure that Oboe is actually required, I did not found any possibility to stream events anywhere in the UI.\nIf there's no need for streaming capability, and thus we only need to poll events (current behaviour), then there's no need for Oboe. We could just create an EventFactory and use the response transformer used in the ImageFactory to have the exact same behaviour.\n. Thanks for the PR but I'm closing this as it's outdated and not required.\n. @linquize the question is: which problem?\n. Yeah seems that there is no issue at the moment by using Oboe.\n. @giabar Care to update the Swarm example too? So we do not reference two different compose versions :)\n. @kevana are you waiting for approval to merge this one? I'm not really skilled in UT so I will not be able to help you here.\nMaybe @juanflorez can help?\n. :+1: \n. I totally agree! I'll update the PR to match the following constraints:\n- ideally, -e option should be specified without any scheme and we should automatically prefix it with tcp:// (e.g. -e 1.2.3.4:2375 or -e mydockerhost.com) but this will create a conflict with the current way to choose to use the socket. Maybe if the option start with / (e.g. -e /path/to/socket) then decide to use the socket?\n- enable TLS support when the -tlsverify flag is used (default to false)\n-  -tlscacert option for the path to the CA (default to /certs/ca.pem)\n-  -tlscert option for the path to the client certificate (default to /certs/cert.pem)\n-  -tlskey option for the path to the client public key (default to /certs/key.pem)\nUsing these default values, and assuming the files ca.pem, cert.pem and key.pem are available in the folder /etc/ssl/uifd on the host, it would allow to start a UIFD container like this:\n$ docker run -d -p 9000:9000 -v /etc/ssl/uifd:/certs uifd/ui-for-docker -e mydockerhost.domain:2376 -tlsverify\nIf using custom filenames (but using the same path on the host):\n$ docker run -d -p 9000:9000 -v /etc/ssl/uifd:/certs uifd/ui-for-docker -e mydockerhost.domain:2376 -tlsverify -tlscacert /certs/mycacert.pem -tlscert /certs/mycert.pem -tlskey /certs/mykey.pem\nWhat do you think about it? Anything else to suggest?\n. Ok, so in addition:\n- switch from -e to -H (I don't think that golang flag library support long flag format prefixed with --)\n. @kevana here it is :)\n. Yeaye, I'll let you take care of the release ;)\n. :+1: \n. Thanks for the PR !\nCould you describe what it brings? Also could you remove the ui-for-docker-checksum.txt file from the PR?\n. I like the new layout. @kevana what do you think about it?\n. that's a fail indeed :p\n. ",
    "linquize": "Btw is this problem gone? \n. Event:  2 json objects together without wrapped by a array. \n. ",
    "blbradley": "@ramzes642 Thank you so much for doing this! Solid contribution with lots of value.. ",
    "Saboteur777": "Removed the file, as you requested, and attached an image about the layout. Not such a radical change, just a little bit cleaner. \nOn the long run I plan to implement a new layout and design. \n\n. ",
    "hmichopoulos": "Fixed :)\nAlso, note that I had to hide the modal and show it again in case of error. Otherwise, the modal remains above the spinner\n. ",
    "ramzes642": "yes, error. how to fix this?\n. You mean unexisting exposed ports? I've tied this ui with ports, that been exposed. So you can add multiple bindings only to ports which are exposed.\n. Very rare. However in many images you can manually add plugin inside container which opens unexposed port.\n. "
}