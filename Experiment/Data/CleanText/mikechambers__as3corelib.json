{
    "darronschall": "Updated by darron.schall on 2007-01-15T15:54:53\nAdded in revision 17\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2007-01-15T15:54:53\nAdded in revision 17\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2007-01-10T04:51:23\nHere is the RFC:\nhttp://www.ietf.org/rfc/rfc4627.txt?number=4627\nI cant find any mention of dates.\nHere is a page from mozilla's thoughts on EcmaScript 4 and JSON:\nhttp://developer.mozilla.org/es4/proposals/json_encoding_and_decoding.html\nSpecifically, it mentions:\n\n*\n  Date.prototype.toJSONString()\nReturns a String containing the representation of a date. A Date object is serialized\nas an ISO date string in double quotes.\nSo, I think it is very important that we follow whatever the \"standard\" is. There are\nalready alternate implementations, which could result in incompatible versions of JSON.\nI will ping Douglas Crockford, and see if they have any definitive thoughts on date\nserialization in JSON.\n. Updated by mikechambers on 2007-01-10T05:07:34\nThe latest JSON.js file (from December 6, 2006), has support for Dates:\nhttp://www.json.org/json.js\nIt uses ISO 8601\nhttp://www.iso.org/iso/en/prods-services/popstds/datesandtime.html\nWe have some Data format functions in DateUtils\nhttp://as3corelib.googlecode.com/svn/trunk/src/com/adobe/utils/DateUtil.as\nbut unfortunately, dont have ISO 8601\n. Updated by wmdmark on 2007-05-01T03:38:49\nAre there any work arounds for this? I'm needing to parse dates from a JSON feed in \na project I'm working on. The date value comes in from the server as \"new Date(-\n59011459200000)\"\n. Updated by wmdmark on 2007-05-01T03:39:45\nBTW, I'd be happy to help :)\n. Updated by kenlarkin on 2008-06-04T10:32:25\nuntil you resolve this you add this to JSONEncoder.as when checking the object o.\nelse if (o is Date)\n{\n    s = \"new Date(\" + o.time.toString() + \")\";\n    return s;\n}\nelse // o is a class instance\n. Updated by alan.dur...@citi.com on 2008-06-05T12:58:12\nIt seems that a lot of implementations of JSON are using proprietary date formats to \nget around this issue. This kind of defeats the interoperability aim of JSON. I \nwould suggest that providing a default serializer/deserializer for dates with the \nability to insert or use a different one would be useful. In other words, provide an \ninterface like\nSerializeDate(param:Date):String\nIsDate(param:String):bool\nDeserializeDate(param:String):Date\nwhere the interface could be changed if the server side technology uses a different \nformat. \nLike wndmark, I'd be happy to help too.\n. Updated by mchiareli on 2009-02-18T23:22:39\nare there news about it?\n. Updated by noplace on 2009-06-15T03:46:36\nDear all,\nI was in need to decode JSON coming from a .NET web service and as3corelib was the \nonly solution I found, and after finding out that it does not decode the date I took \nthe JSON source files and put them in my own lib and modified the code to check for \nthe date string MS sends as json \"\\/Date(...)\\/\" and returns a proper date object.\nif anyone is intrested in this let me know.\nthanks\n. Updated by darron.schall on 2009-08-03T00:59:21\nIssue 94 has been merged into this issue.\n. Updated by gmariani405 on 2009-09-21T19:02:12\nIs any progress being made to this? It's been an issue for going on 3 years.\n. Updated by darron.schall on 2006-12-29T21:02:55\nChanged issue title (accidentally left it as default when I entered it).\nTitle changed from 'JSON does not encode XML instances into anything useful' to 'JSON does not encode XML instances into anything useful'\n. Updated by mikechambers on 2007-01-10T04:41:34\nI believe Firefox 2 has support for e4x. Might be useful to see how they handle it.\n. Originally issue from http://code.google.com/p/as3corelib/issues/detail?id=5\n. Originally issue from http://code.google.com/p/as3corelib/issues/detail?id=6 did not import correctly.  Closing.\n. Duplicate of #10, closing.\n. Updated by darron.schall on 2007-01-10T13:29:15\nDuplicate of #7\nOriginal ticket set status to Duplicate (we converted to closed)\n. Originally from http://code.google.com/p/as3corelib/issues/detail?id=9 and marked as WontFix.  Closing.\n. Originally from http://code.google.com/p/as3corelib/issues/detail?id=10 and marked as WontFix\n. Updated by darron.schall on 2007-01-14T00:57:35\nThis has already been fixed in the latest from SVN.  If you can still reproduce,\nplease let me know what your JSON string looks like.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by darron.schall on 2007-05-27T22:53:06\nA test for this was posted on the mailing list -- \nhttp://groups.google.com/group/as3corelib/browse_thread/thread/55ad5b8aad551b6a/e68944f72f3db151?lnk=gst&q=%5Cr&rnum=1#e68944f72f3db151\nThe character code CR(0x0D, '\\r') should be considered as white space as well.\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2007-05-27T23:13:17\nThis was fixed in revision 38 ('\\r' was added as a whitespace char).\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-08-03T00:36:49\nIssue 95 has been merged into this issue.\n. Updated by darron.schall on 2007-01-15T21:51:36\nFixed in revision 20\nOriginal ticket set status to Fixed (we converted to closed)\n. Original issue from http://code.google.com/p/as3corelib/issues/detail?id=13 did not import correctly.  Closing.\n. Updated by mikechambers on 2007-02-07T07:04:09\nAssigning to Christian.\nOriginal ticket set owner to qantrell\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by qantrell on 2007-02-14T01:41:15\nThis actually isn't a bug.  The date format in the example above has two problems:\n1. It isn't a RFC822 date.  It's a W3CDTF date.\n2. The date is specified as 243 which won't ever parse.\nI added test cases for parsing date with 0 padding, and they all pass.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by philoQE on 2007-03-01T22:36:08\nSorry I must have mistyped step #1.  I can't figure out how to edit this bug but this\nis what it should be DateUtil.parseRFC822(Wed, 2 Jan 2007 04:00:00 PST).  If you look\nat the attached application there are all the examples for you to see.\n. Updated by philoQE on 2007-04-12T18:52:52\nSorry - the case described here where the day doesn't make sense for the date is not\nthe core issue, we're concerned about it.  It's the issue of whether value is in a\nvalid range of acceptable values.  Such as 2 digits for a day or month.  Or a valid\nday of the week.  Examples:\nThe following bad dates do not give an error:\nATOM\nbadYear - digits != 4\nbadMonth - digits != 2\nbadDate - digits != 2\nbadHour - digits !=2\nbadMin - digits != 2\nbadSec - digits != 2\nbadSecFrac - digits not >= 1 (just a .)\nbadTimeOffset - not 2digits:2digits\nrss 2.0\nbadYear - digits != 4\nbadMonth - not one of Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec\nbadDate - digits != 2\nbadDay - not one of Mon, Tue, Wed, Thurs, Fri, Sat, Sun\nbadHour - digits !=2\nbadMin - digits != 2\nbadSec - digits != 2\nbadZone letter\nbadZone offset\nrss 1.0\nbadYear - digits != 4\nbadMonth - digits != 2\nbadDate - digits != 2\nbadHour - digits !=2\nbadMin - digits != 2\nbadSec - digits != 2\nbadSecFrac - digits not >= 1 (just a .)\nbadTimeOffset - not 2digits:2digits\n. Original import of issue http://code.google.com/p/as3corelib/issues/detail?id=15 did not complete successfully.  Closing.\n. Updated by mikechambers on 2007-03-03T21:08:09\nThis may have been fixed by\nhttp://code.google.com/p/as3corelib/issues/detail?id=2&can=1&q=\nwhich is going into the .9 build.\nDinny, can you pull the source and see if that fixes the issue?\n. Updated by darron.schall on 2007-03-20T23:02:57\nThis isn't a bug -- the original JSON string that you're trying to use -\n[{BookTitle:\"JSON\", Name:\"Mat\"}] - is not correctly formatted JSON code.\nFrom json.org, an Object consists of pairs, where each pair is string:value.  The\nidentifier on the left of the pair then, being a string, needs to be enclosed in quotes.\nWhatever library your using to generate the JSON string is not producing\nJSON-compliant output.  Make sure that the name part of the name/value pairs inside\nof an object is getting correctly wrapped in quotes.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:27:06\nRemoved label Priority-Medium\nAdded label Priority-Low\n. Updated by mikechambers on 2009-09-22T08:14:33\nWe can leave this to as3crypto:\nhttp://code.google.com/p/as3crypto/\nOriginal ticket set status to WontFix (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:27:17\nRemoved label Priority-Medium\nAdded label Priority-Low\n. Updated by arcangel.nebula on 2008-08-14T07:36:18\nHello!\nI have programmed the classes for SHA-512 encryption in Action Script 3.0. I want to\nsend to you the source code to consider if it\u00b4s possible to integrate with corelib\u00b4s\nclasses.\nAlso, i have programming SHA-384 encryption for Action Script 3.0 which I will could\nto sent you shortly.\nIf you are interested, let me know and i\u00b4ll send you the source code.\nE-mail:\njuanmanuel[at]flashexperience[dot]net\nBest regards!\nJuanma\n. Updated by arunkv on 2008-11-09T14:55:44\nJuanma, can you please attach your SHA-512 code here and attach your SHA-384 code\nunder issue http://code.google.com/p/as3corelib/issues/detail?id=17\n. Updated by mikechambers on 2009-09-22T08:14:52\nWe can leave this to as3crypto:\nhttp://code.google.com/p/as3crypto/\nOriginal ticket set status to WontFix (we converted to closed)\n. Updated by darron.schall on 2007-04-05T22:31:30\nGood catch, and I agree with your proposed fix as well.  I'll wrap this up in a test\ncase and get the fix in the trunk in the next few days.  I don't believe \"\" is valid\nJSON either.\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2007-04-30T13:45:13\nThis was fixed in revision 37.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2007-04-30T13:47:06\nThis error happens because the name of your MXML file is \"JSON\", which conflicts with\nthe name of the library class \"JSON\".  Try renaming JSON.mxml to JSONExample.mxml, or\nusing a fully qualified path to com.adobe.serialization.json.JSON.decode();.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by darron.schall on 2007-04-30T13:47:22\nDuplicate of #20\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by brent.dearth on 2007-05-30T19:24:31\nHere's a snippet of code that could hopefully help in this effort. It does recursive\nobject graph traversal, calling ObjectTranslator.objectToInstance() as necessary.\nSeems to be working fine for JSON deserialization within a project I'm working on.\n. Updated by mikechambers on 2008-07-02T16:54:06\nWe should use the same syntax that flex uses now, which is an instance method called\nencode()\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:55:26\nOriginal ticket set owner to thibault.imbert\nRemoved label Priority-Medium\nAdded label Priority-High\n. Updated by koenweyn on 2008-12-17T14:05:08\nThe attachment includes a fix for issues 24 and 25.\nThe suggested fix above would not work, because it would use the local date (not the\nUTC date)\n. Updated by biggyspender on 2007-08-13T21:36:04\nIndependently verified. Wasted a lot of time tracking down this bug.\n. Updated by koenweyn on 2008-12-17T14:05:50\nThe attached file contains a fix for issues 24 and 25.\n. Updated by rick.terrill on 2007-12-18T21:02:47\nI second this one.  In a recent project we had a JSON file that we handed off to the\nclient for them to make small changes.  They made said changes on a Windows machine\nwhich saved with DOS-style line endings (CRLF) which broke the  deserializer.  I'm\ncurrently getting around this by stripping out carriage returns manually (loop the\nloaded file and do jsonString.replace(\"\\r\", \"\") where jsonString is the data of the\nloaded file) before sending it to the deserializer.\n. Updated by Griffin3Glenn on 2008-03-29T02:47:32\nAll in favor say aye ...\n. Updated by evan.kaufman on 2008-03-31T19:15:10\nAye. This also causes problems on Macs, since they (for some god awful reason) use a\nsingle CR line delimiter (as opposed to windows CRLF and linux LF).\n. Updated by mikechambers on 2008-07-02T16:21:51\nThis is fixed in the source code. Just link the source until we build a new SWC.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2008-10-23T02:16:34\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2008-11-07T19:29:52\nOriginal ticket set owner to darron.schall\n. Updated by mikechambers on 2008-07-02T17:51:50\nOriginal ticket set owner to christian.cantrell\n. Updated by cucumbrrr on 2008-04-30T00:44:25\nI am also experiencing this same issue.\nError: Unable to parse the string [2007-07-31] into a date. The internal error was: Error: This date does not \nconform to W3CDTF.\n. Updated by mikechambers on 2008-07-02T17:52:07\nOriginal ticket set owner to christian.cantrell\n. Updated by ingalls.jon on 2007-08-04T05:23:27\nFurther investigation make me think this isn't a defect.  It seems that the flex error\nreturns \ncom.adobe.serialization.json.JSONParseError$ (@4fc80b51)\nThis is difficult to use in a switch statement.  In any regard JSONParseError isn't\nbeing raised.\n. Updated by mikechambers on 2008-07-02T17:05:17\nThis has been fixed in the source.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:30:29\nThis is not a bug.\nInfinity is not supported by JSON.\nSee section 2.4 of the RFC\nhttp://tools.ietf.org/html/rfc4627\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by joe.nash.74 on 2008-07-02T20:03:53\nI don't see any reason why the JSON package couldn't support Infinity though. I had\nto add Infinity and -Infinity for a project which was sending me data over a\nwebservice in JSON format. I had to build it in - so why can it not be built in by\ndefault? My JSON Class is now more fully featured as a result.\n. Updated by mikechambers on 2008-07-02T16:56:52\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by fo...@jan-viehweger.de on 2008-07-03T08:36:22\nYes Mike,\nplease integrate this usefull peace of code!\nRegards\nJan Viehweger\n. Updated by mikechambers on 2008-07-02T16:32:38\nRemoved label Priority-Medium\nAdded label Priority-High\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T01:31:49\nI think this should be rolled into a \"strict\" mode.  In strict mode we should adhere\ndirectly to the specification, but when not in strict mode we should gracefully skip\nover commas at the last item of an array / object\n. Updated by darron.schall on 2008-10-23T01:32:14\nAdded label JSON\nAdded label strict\n. Updated by darron.schall on 2008-10-23T02:15:47\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2008-11-07T19:28:56\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-12-23T15:14:19\nFixed in r83\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:40:54\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T02:15:29\nThis is a strict mode / non-strict mode change.  When strict mode is turned off we\nshould allow for decoding of non-quoted object identifier strings.\nIt is not valid JSON to have object identifiers not have quotes.  However, a lot of\nother JSON lirabries seem to output these invalid strings by default.\nSo, when strict mode is ON, a parse error should be generated as is the current behavior.\nWhen strict mode is OFF, we should process the identifier like it was a string even\nif it isn't enclosed in quotes\nRemoved label Type-Defect\nAdded label Type-Enhancement\nAdded label strict\nTitle changed from 'Allow for decoding of non-quoted object identifier strings in a non-strict decode mode' to 'Allow for decoding of non-quoted object identifier strings in a non-strict decode mode'\n. Updated by mikechambers on 2008-11-07T19:28:43\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-12-10T16:46:17\nIssue 83 has been merged into this issue.\n. Updated by davidsarah.hopwood on 2009-06-04T22:16:23\nI'm interested in which JSON libraries you know of that emit unquoted property \nnames. The es5-discuss mailing list is currently discussing whether the standard ES5 \nJSON parser will need to accept them.\n. Updated by evan_m...@sympatico.ca on 2009-07-12T01:07:34\nHas this issue been resolved yet?  Been expecting it to be resolved since last Winter\nbreak...tried the latest version but to no avail\n. Updated by darron.schall on 2009-07-13T02:55:58\n@evan - No, this has not been resolved yet.  However, as long as you're using properly formatted JSON you \nshouldn't run into trouble.\nI'm still debating if this is really worth implementing because it goes against JSON syntax (per es5 discussions).\nIf a library claims to output JSON strings, then the library should be using quoted object keys.\n. Updated by evan_m...@sympatico.ca on 2009-07-13T14:21:08\n@darron - Oh ok, thank you very much for your prompt reply.  See we are working with\nMoodle and the MySql database doesn't allow for quoted values to be stored.  From\nwhat I understand, that is one of the reasons why there is a demand and use case for\nparsing non-quoted JSON strings.\nAny chance we may re-consider?  What options do you there are?\n. Updated by mikechambers on 2008-07-02T16:44:48\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T01:48:44\nIt's not valid JSON for numbers to be in hex format (note the \"Number\" section on\nhttp://www.json.org/).  However, this is a good candidate as something to allow in a\n\"non-strict\" mode for decoding.\nSo, in strict mode, this is a parse error.  In non-strict mode, we should convert hex\nformat into numbers.\nAdded label JSON\nAdded label strict\n. Updated by darron.schall on 2008-10-23T01:58:33\nIn revision 63 - http://code.google.com/p/as3corelib/source/detail?r=63 - Added code\nto recognize hex digit numbers.  Commented out for now until \"strict\" mode flag is\nadded (since this is a feature that is not part of the official spec).\nOnce we create a \"strict\" flag we can finish this up (and add the flag to the test as\nwell as to the conditional in the tokenizer)\n. Updated by darron.schall on 2008-10-23T02:16:05\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2008-11-07T19:28:26\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-12-23T15:14:34\nFixed in r83\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T17:52:21\nOriginal ticket set owner to christian.cantrell\n. Updated by mikechambers on 2008-07-02T16:22:33\nThis is fixed in the source code. Just link the source until we build a new SWC.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:42:22\nCan you give a code snippet? I cannot reproduce.\n. Updated by mikechambers on 2008-07-02T16:44:05\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by mikechambers on 2008-11-07T19:27:46\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:46:25\nAdded label HasAPatch\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2008-07-02T22:30:53\n\nChange createBlocks to use array reference instead of s.getCharCodeAt()\n\nCan you explain this change?\nAlso, have you done any performance test on hashing strings between the existing\nimplementation, and yours?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by marklynch on 2008-07-04T14:37:26\nHi Mike,\n\nChange createBlocks to use array reference instead of s.getCharCodeAt()\nAs the createBlocks now takes a byteArray instead of a string, I'm using direct array\nnotation to get the values instead of using the original s.getCharCodeAt();\n\nWas:\nblocks[ i >> 5 ] |= ( s.charCodeAt( i / 8 ) & mask ) << ( i % 32 );\nNow this:\nblocks[ i >> 5 ] |= ( s[ i / 8 ] & mask ) << ( i % 32 );\nRe benchmarking - I hadn't done any, but I have now.\nInitially it was slower than the original version by approx 13%.\nI optimised it a bit and now it runs ever so slightly faster than the original one\n(about 4% faster)\nThis is the optimisation change, removed this code (in function hash):\n  for(var i:int = 0; i\n. Updated by marklynch on 2008-07-04T14:43:59\nMike,\nIn case you wish to reproduced the benchmarks, here is the code I used is below.\nI set up two projects with the corelibs  placed in the src folder and ran this with\nmodified and original versions.\nTimings I got were on 3 runs were:\nOriginal: 3865,3722,3809, AVG 3799\nPatched 1: 4413,4314,4140 AVG 4289\nPatched 2: 3625,3561,3797 AVG 3661\nCode snippet:\npackage {\n    import com.adobe.crypto.MD5;\n    import flash.display.Sprite;\n    import flash.utils.getTimer;\npublic class md5benchOrig extends Sprite\n{\n    public function md5benchOrig()\n    {\n        var string:String = \"asda asd  da da da dasd a dasd asdasdadadad a dasda asd  da\nda da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda\nasd  da da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad\na dasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd\nasdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da\ndasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd \nda da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a\ndasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd\nasdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da\ndasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd \nda da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a\ndasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd\nasdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da\ndasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dv\";\n            var hashed:String = \"\";\n            var startTime:uint = getTimer(); \n            for(var i:int; i < 1000; i++){\n            hashed = MD5.hash(string);\n            }\n            var elapsedTime:uint = getTimer() - startTime;\n            trace(hashed);\n            trace('Time taken: ' + elapsedTime);\n        }\n    }\n}\n. Updated by mikechambers on 2008-07-06T20:30:23\nI have checked in the changes (revision 49).\nCould someone post a simple test case / cases for hashBinary? ill add them to the\ntest suite.\n. Updated by mikechambers on 2008-07-06T20:30:38\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2008-11-07T19:28:07\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by liangzhongmin on 2008-01-30T10:17:07\nThanks for help me!\n. Updated by mikechambers on 2008-07-02T16:46:57\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2008-07-02T16:47:38\nAre you using Flex?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by K2xL.com on 2008-07-02T17:23:16\nNo, an AS3 project using Flex Builder 3.\n. Updated by mikechambers on 2008-11-07T19:27:03\nCan you try this with the latest corelib SWC?\nAlso, what is the compile error you are getting? Can you post it here.\n. Updated by mikechambers on 2008-07-02T17:51:34\nOriginal ticket set owner to christian.cantrell\n. Updated by mikechambers on 2008-07-02T16:52:21\nRemoved label Priority-Medium\nAdded label Priority-Low\n. Updated by mikechambers on 2009-09-22T08:17:26\nOriginal ticket set owner to thibault.imbert\nRemoved label Priority-Low\nAdded label Priority-High\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by kopchickm on 2010-03-03T16:48:02\nI was working with high resolution images at one point, and Actionscript kept timing\nout on the encode() method.  As a result, I created an asynchronous version of\nencode, which takes a callback function after the encoding is done.  It doesn't do\nanything to speed it up, but it prevents Flash from crashing when encoding a hi-res\nimage.  There are probably better ways to do this than a timer, but it worked:\npublic function encodeAsync(image:BitmapData, fn:Function,\nprogressFn:Function=null):void {\n            var img:BitmapData = image.clone();\n            img.applyFilter(img, img.rect, orgn, fltrRGB2YUV);\n            var height:int = img.height;\n            var width:int = img.width;\n```\n        // Initialize bit writer\n        byteout = new ByteArray();\n        bytenew=0;\n        bytepos=7;\n    // Add JPEG headers\n    writeWord(0xFFD8); // SOI\n    writeAPP0();\n    writeDQT();\n    writeSOF0(width,height);\n    writeDHT();\n    writeSOS();\n\n    // Encode 8x8 macroblocks\n    var DCY:int=0;\n    var DCU:int=0;\n    var DCV:int=0;\n\n    var t:Timer = new Timer(10, 0);\n\n    var ypos:int = 0;\n    var xpos:int = 0;\n\n    t.addEventListener(TimerEvent.TIMER, function(e:TimerEvent):void\n        {\n            for (var xpos:int=0; xpos= height)\n            {\n                img.dispose();\n                if ( bytepos >= 0 ) {\n                    writeBits(new BitString((1<<(bytepos+1))-1, bytepos+1));\n                }\n\n                writeWord(0xFFD9);\n                t.stop();\n                fn(byteout);\n            }\n            if (progressFn) progressFn(Math.min(ypos/height, 1));\n\n        });\n    t.start();\n}\n\n```\n. Updated by yasukawa on 2008-03-24T12:44:24\n42\n. Updated by mikechambers on 2008-07-02T17:52:34\nOriginal ticket set owner to christian.cantrell\n. Updated by ricick on 2009-03-24T04:45:38\nThis appears to be a problem for dates without a timezone code for example\nDateUtil.parseRFC822('Tue, 17 Mar 2009 14:44:46'); will throw an error. \nThis occurs on line 376 \"if (timezone.search(/\\d/) == -1)\" as timezone is null (from\nvar timezone:String = dateParts.shift(); on line 373)\nMaybe this should default to UTC if no timezone is specified. (if(!timezone)timezone\n= \"UTC\")\n. Updated by johntimothybailey on 2009-05-05T19:28:17\nI'm receiving an error when I run \nimport com.adobe.utils.DateUtil;\nvar pubDate:String = \"Mon, 20 Apr 2009 16:12:01 CDT\";\nDateUtil.parseRFC822(pubDate);\nNotice that I am using a timezone code (ie CDT)\nError Thrown as follows:\nError: Unable to parse the string [Mon, 20 Apr 2009 16:12:01 CDT] into a date. The\ninternal error was: TypeError: Error #1009: Cannot access a property or method of a\nnull object reference.\n    at com.adobe.utils::DateUtil$/parseRFC822()\n    at Untitled_fla::MainTimeline/frame1()\n. Updated by mikechambers on 2008-07-02T16:51:18\nPer the RFC:\nhttp://tools.ietf.org/html/rfc4627\n\nAn object is an unordered collection of zero or more name/value\n   pairs, where a name is a string and a value is a string, number,\nboolean, null, object, or array.\nObject values are unordered.\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2008-07-02T16:51:55\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T02:07:24\nJSONTest::testDecodeScientificNegativeExponent demonstrates that \"6.02e-23\" is\ncorrectly parsed as a number.  Also, if you look in JSONTokenizer at line 392 (as of\nrevision 63) you'll see the code to check for scientific notation in numbers.\nRejecting as invalid - make sure you're using the latest from SVN.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by walkerford on 2008-05-30T05:28:10\nI do not know how to delete issues, but this issue should now be deleted.  I reported it before looking at the \nsource code to see what was going on.  My JSON was improperly formed for this library and looked like this: \n\"{$name: \"jon\", $gender: \"male\"}\".  There were no quotes around the parameter names.  This style of JSON works \nfine in Javascript, where the whole thing is evaled, but with this library, all strings, even parameter names, need \nto be enclosed in quotes.  My JSON string properly formatted looks like this: \"{\"$name\": \"jon\", \"$gender\": \n\"male\"}\".  That properly formatted JSON will decode just fine.\n. Updated by ionel.mc on 2008-06-25T15:17:00\nit's still a valid problem imho\n. Updated by mikechambers on 2008-07-02T16:36:14\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T02:10:10\nMarking this issue as invalid (since the original poster discovered that the JSON\nstring they were trying to decode was not valid JSON).\nHowever, as a followup, I'll create a new ticket to allow for decoding of non-quoted\nobject identifier strings in non-strict mode.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by darron.schall on 2008-10-23T02:12:56\nActually, scratch that last comment.  There already is an issue present for the\nnon-quoted feature in a non-strict decoding mode - issue #35.  Marking this as a\nduplicate instead since the core issue is the same.\nAdded label strict\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by mikechambers on 2008-07-02T17:52:45\nOriginal ticket set owner to christian.cantrell\n. Updated by mikechambers on 2008-07-02T15:48:33\nCan you post a test file that the decoder fails on?\n. Updated by mikechambers on 2008-07-02T16:22:10\nThis is fixed in the source code. Just link the source until we build a new SWC.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:16:54\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2009-09-21T05:09:08\nWe either need to remove the reliance on the flex classes, or move them into their own package so it is clear \nthey rely on Flex (similar to what we do with the AIR classes).\n. Updated by mikechambers on 2008-07-02T21:58:32\nactually, on further review, this is wrong.\nIf the search string is not found, a new string, with the same contents as the passed\nin string is returned.\nThere is a note in the code, asking whether this new string should be returned, or\nthe string passed in.\nI think i will keep it as is, so in all cases a new string is returned.\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2008-07-03T16:30:28\nAnyone interested in contributing this?\nRemoved label Type-Defect\nAdded label Type-Enhancement\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by trimediapro on 2008-07-05T15:03:26\nI sent you an email Mike.\n. Updated by trimediapro on 2008-07-07T01:52:11\nHere's what I put together. \nI have add in 3 static functions to NumberFormatter\naddSeparator(p_num:Number, p_separator:String):String\nformatDecimal(p_num:Number, p_decimal:String=\".\", p_decimalPlaces:Number=0):String\nformat(p_num:Number, p_separator:String, p_decimalPlaces:Number=0, \np_decimal:String=\".\"):String\nHere are some examples and a basic explanation of all 3.\nThe \"addSeparator\" function is for adding a \"thousands separator\" into a number.\nThis function will return the same number (as a String) but with the new thousands \nseparator that was specified.\n// Sample Calls\nNumberFormatter.addSeparator(-12198.12345, \",\"); // output -- -12,198.12345\nNumberFormatter.addSeparator(1000000.00, \" \");   // output -- 1 000 000.00\nThe \"formatDecimal\" function is for doing just that. \nThis function will return the same number (as a String) but with the new decimal \ncharacter that was specified.\n// Sample Calls\nNumberFormatter.formatDecimal(0.1983567, \",\");  // output -- 0,1983567 \nNumberFormatter.formatDecimal(198.3567, \",\");   // output -- 198,3567 \nThe \"format\" function of the NumberFormatter is much more versatile. You can get the \nsame results as addSeparator and formatDecimal as well as rounding to n number of \ndecimal places all in a single call.\nNumberFormatter.format(p_num:Number, p_separator:String, p_decimalPlaces:Number=0, \np_decimal:String=\".\"):String\n@param p_num is the number to work on\n@param p_separator is the character to use as the thousands separator\n@param p_decimalPlaces is the number of decimal places to round the number to\n@param p_decimal is the character to use as the decimal\n// Sample Calls\nNumberFormatter.format(0.123456789, \" \", 5, \",\");   // output -- 0,12346\nNumberFormatter.format(-123456789, \",\", 5, \"_\");    // output -- -\n123,456,789_00000\nNumberFormatter.format(123456789, \"-\", 0, \",\");     // output -- 123-456-789\nNumberFormatter.format(123456789, \"-\");     // output -- 123-456-789\nIf just the thousands separator needs to be added\nNumberFormatter.format(-123456789, \",\");        // output -- -123,456,789\nIf just the decimal needs to change\nWhen p_decimalPlaces is set to -1 (negative one) the result is the same as calling \nthe formatDecimal function. The same number is returned with no rounding and just \nthe decimal character has been modified.\nNumberFormatter.format(0.123456789, \"\", -1, \",\");   // output -- 0,123456789\nIf the decimal needs to change and the number is rounded to n decimal places\nNumberFormatter.format(0.123456789, \"\", 5, \",\");    // output -- 0,12346\nNumberFormatter.format(-123456789, \"\", 2, \",\");     // output -- -123456789,00\nIf the thousands separator needs to be added and the decimal needs to change \nNumberFormatter.format(12345.6789, \" \", -1, \",\");   // output -- 12 345,68\nIf the thousands separator needs to be added and the decimal needs to change and the \nnumber must be rounded to n decimal places\nNumberFormatter.format(123456789, \" \", 2, \",\");     // output -- 123 456 789,00\nNumberFormatter.format(12345.6789, \" \", 2, \",\");    // output -- 12 345,68\nAll of the functions should work with positive and negative numbers.\nI think that about covers it.\nI'm fairly certain that parts of the format function could be optimized. I was just \ntoo lazy to figure out the RegExp calls. If anyone else would like to do some \noptimizing that would be great.\nI have attached the updated NumberFormatter.as file for submission into corelib.\n...Neil Madsen\n. Updated by trimediapro on 2008-07-08T05:37:40\nI found a bug in the previous file when rounding a number smaller than 0.1\nie. 0.01 or 0.001 or 0.0001 or 0.0052367 etc.\nI've made some changes to fix the bug.\nHere's the newer version of the NumberFormatter.as file.\n...Neil\n. Updated by mikechambers on 2008-07-08T15:57:04\nI put together a test case to check some edge cases for the addSeperator API, and the\nclass is failing some of them:\n```\n    public function testAddSeperator():void\n    {\n        assertTrue('NumberFormatter.addSeparator(1000, \",\") == \"1,000\"',\n                NumberFormatter.addSeparator(1000, \",\") == \"1,000\");\n    assertTrue('NumberFormatter.addSeparator(90, \",\") == \"90\"',\n            NumberFormatter.addSeparator(90, \",\") == \"90\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(90.00, \",\") == \"90.00\"',\n            NumberFormatter.addSeparator(90.00, \",\") == \"90.00\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(90.0, \",\") == \"90.0\"',\n            NumberFormatter.addSeparator(90.0, \",\") == \"90.0\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(1000.00, \",\") == \"1,000.00\"',\n            NumberFormatter.addSeparator(1000.00, \",\") == \"1,000.00\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(1000.0, \",\") == \"1,000.0\"',\n            NumberFormatter.addSeparator(1000.0, \",\") == \"1,000.0\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(1000, \".\") == \"1.000\"',\n            NumberFormatter.addSeparator(1000, \".\") == \"1.000\");\n\n    assertTrue('NumberFormatter.addSeparator(123456789, \",\") == \"123,456,789\"',\n            NumberFormatter.addSeparator(123456789, \",\") == \"123,456,789\");\n\n    assertTrue('NumberFormatter.addSeparator(123456789, \"XXX\") == \"123XXX456XXX789\"',\n            NumberFormatter.addSeparator(123456789, \"XXX\") == \"123XXX456XXX789\");\n\n    //fail : causes infinite loop       \n    assertTrue('NumberFormatter.addSeparator(123456789, \"1\") == \"12314561789\"',\n            NumberFormatter.addSeparator(123456789, \"1\") == \"12314561789\");\n}\n\n```\n. Updated by trimediapro on 2008-07-09T03:28:52\nHi Mike...\nThanks for running the tests.\nHere's a new version with the fixes. \n...Neil\n. Updated by mikechambers on 2008-11-07T19:25:49\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-11-19T09:13:29\nThe Number conversion is done by the Flash Player top-level Number() conversion\nfunction.  When the parser reads numerical values in JSON, it builds a string\nrepresenting that number which the Flash Player converts then converts into an actual\nnumber value.  Since Flash Player is limited to just double, int, and uint, there\nreally aren't a lot of options here for handling \"really large\" numbers.\nIf you want to parse the number as a string and leave it as a string, enclose it in\nquotes:\n{\"myId\":\"123456789123456789\"}\nAdded label JSON\nOriginal ticket set status to WontFix (we converted to closed)\n. Updated by Denis.Amselem on 2009-01-10T01:13:19\nAnyone knows of an alternative json library that could handle that case in a more \ngraceful way then? When the xml data is coming from third party web services, we \ncan't control the format, and don't really want go mock with the returned data to arbitrarily stringify big numbers....\n. Updated by darron.schall on 2008-10-23T01:24:33\nThis isn't a bug per json.org.  When you encode a string in JSON, the resulting\noutput is a value enclosed in double-quotes.\n\"myString\" is valid JSON\nmyString is not\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by johncblandii on 2008-10-23T05:23:30\nWell if you're encoding json then calling getString() I expect an actual string not a\nstring with quotes around it because that that point if I send it to the server as a\nstring the server has extra quotes so saving the json now includes extra quotes.\nSee what I mean? I 100% get your point but sending to the server can be a pain, as\nwell as a few other things.\n. Updated by mikechambers on 2008-11-06T21:46:25\nThe zip code is out of date. Code from the source has been updated with the correct license information.\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2008-11-06T21:03:30\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2008-11-06T21:45:25\nWhich class is this in?\n. Updated by mikechambers on 2008-11-07T04:22:26\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by mikechambers on 2008-11-07T19:32:10\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-11-19T09:00:22\nFixed in r82 - http://code.google.com/p/as3corelib/source/detail?r=82\nAdded label JSON\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2008-11-06T20:20:54\nThanks for the bug report.  This was added as of revision 64.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-06T21:02:43\nThis has been fixed in revision 67.\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2008-11-06T20:13:55\nAdded label JSON\nAdded label strict\n. Updated by mikechambers on 2008-11-07T19:25:02\nOriginal ticket set owner to daniel.dura\n. Updated by darron.schall on 2008-11-20T16:53:39\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-12-23T15:14:47\nFixed in r83\n. Updated by darron.schall on 2008-12-23T15:15:07\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-06T21:01:00\nOriginal ticket set status to NotABug (we converted to open)\n. Closing NotABug status\n. Updated by mikechambers on 2008-11-06T21:00:47\nI am open to this if someone wants to volunteer to do the work.\n. Updated by arunkv on 2008-11-09T04:04:09\nHere's what is required: Run this command:\nmvn deploy:deploy-file \\\n    -Dfile=as3corelib.swc \\\n    -Durl=file:///path/to/some/repo \\\n    -DgroupId=com.adobe \\\n    -DartifactId=as3corelib \\\n    -Dversion=0.92 \\\n    -Dpackaging=swc\nWhat this does is to deploy the as3corelib.swc file to /path/to/some/repo (using the\ngroupId, artifactId, version). After this if /path/to/some/repo is exposed on the\nweb, users will be able to refer to that web URL (by defining a repository in their\nMaven project) and use as3corelib as a dependency in their Maven projects.\nTemporary work around is for users to install the file into their local Maven repository:\nmvn install:install-file \\\n    -Dfile=as3corelib.swc \\\n    -DgroupId=com.adobe \\\n    -DartifactId=as3corelib \\\n    -Dversion=0.92 \\\n    -Dpackaging=swc \\\n    -DgeneratePom=true \\\n    -DcreateChecksum=true\n. Updated by arunkv on 2008-11-09T04:07:22\nSome Google Code projects use a portion of the SVN tree itself for the Maven\nrepository since it's already accessible on the web. For example:\n  http://flex-mojos.googlecode.com/svn/trunk/repository/\nis a Maven repository.\n. Updated by mohammedsaleem on 2008-11-09T12:01:11\nthere are two choices here = one is to use the flex-mojos project to use maven to \nbuild the project or as arun here says, which I feel is a much better option, is to \ndeploy the final artifacts into the repository.  \nit is imperative for you guys to come up with the group id and artifact ids, for the \nproject.\n. Updated by arunkv on 2008-11-09T13:54:13\nBTW I noticed that this project is using Ant for the build. There are some Maven Ant\ntasks available:\n  http://maven.apache.org/ant-tasks/index.html\nSpecifically the deploy task can be used in this project's build.xml:\n  http://maven.apache.org/ant-tasks/reference.html#install\n. Updated by darron.schall on 2008-10-23T02:19:48\nRemoved label Type-Defect\nAdded label Type-Patch\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T02:20:03\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-10-23T02:30:21\nFixed in revision 64 - http://code.google.com/p/as3corelib/source/detail?r=64\nThanks for submitting the patch!\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2008-11-06T20:22:51\nAdded label JSON\n. Updated by mikechambers on 2008-11-07T19:25:15\nOriginal ticket set owner to darron.schall\n. Updated by gurufaction on 2008-10-24T14:11:52\nThe patch I uploaded has duplicate code. I will upload a new patch.\n. Updated by gurufaction on 2008-10-24T14:16:09\nHere is the updated patch.\n. Updated by mikechambers on 2008-11-06T20:59:00\nOriginal ticket set owner to gurufaction\nRemoved label Type-Defect\nAdded label Type-Enhancement\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2008-11-06T23:47:35\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-06T20:59:36\nOriginal ticket set owner to mikechambers\nAdded label Type-Defect\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2008-11-12T07:56:16\nCan you try Flex SDK 3.2 nightly?\nIt was compiled with 3.2, which might be causing the problem. (If that is the problem, ill look at recompiling.\nYou can grab a 3.2 nightly from here:\nhttp://opensource.adobe.com/wiki/display/flexsdk/Download+Flex+3\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by wuppertare on 2008-11-13T16:11:28\nSomeone else reported the same problem in flexforum.de, it definitely is an issue\nwith the SWC being compiled in 3.2 as this uses some of the \"Marshall Plan\" features\nthat aren't in 3.1 and below.\nCould you recompile the SWC with 3.1 so users who don't want to (or cannot) use 3.2\nyet have a chance to still use corelib?\nThanks!\n. Updated by henrynnguyen on 2008-11-13T17:24:17\nThanks Mike, your suggestion fixed the issue.\n. Updated by mikechambers on 2008-11-15T17:39:23\nFixed in the .92.1 build.\nCompiled using Flex 3 (was using Flex 3.2 before).\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-12T07:57:07\nWhat version of Flex Builder are you using?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by steven.j.henderson on 2008-11-12T08:22:24\nHi Mike,\nFlex Builder 3-Professional Edition - Educational\nThanks!\nSteve\n. Updated by steven.j.henderson on 2008-11-12T08:23:58\nSorry that's build 3.0.1.205647 (ed version)\n. Updated by basil.whitehouse on 2008-11-12T19:22:21\nI'm having similar problems when using flex-mojos (2.0M7) which I uses the OEM\ncomplier, version 3.1.0.2710 I think.\n. Updated by charlie.hubbard on 2008-11-13T13:41:49\nI too am seeing this problem as well.  I'm using FlexBuilder3 build (3.0.194161). \nI'm thinking about just extracting the source code I need and using it that way.\n. Updated by wuppertare on 2008-11-13T16:12:31\nthe issue is that the SWC was compiled with the nightly build of Flex SDK 3.2 which\nis incompatible with older versions.\nSee this Issue:\nhttp://code.google.com/p/as3corelib/issues/detail?id=78\n. Updated by charlie.hubbard on 2008-11-13T16:34:10\nWhen will there be a build compatible with pre 3.2 versions of the Flex SDK?\n. Updated by mikechambers on 2008-11-15T17:10:23\nIf you compile against the source, does everything work?\n. Updated by mikechambers on 2008-11-15T17:39:00\nFixed in the .92.1 build.\nCompiled using Flex 3 (was using Flex 3.2 before).\n. Updated by mikechambers on 2008-11-15T17:39:08\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-15T17:09:54\nWhat version of the SDK are you using? If you compile against the source does it work?\n. Updated by mikechambers on 2008-11-15T17:38:39\nFixed in the .92.1 build.\nCompiled using Flex 3 (was using Flex 3.2 before).\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by chriswestin42 on 2008-11-19T16:05:07\nNote that above I was trying to use Vista's native explorer to extract.  I tried to \nuse gunzip (from a cygwin shell) and got a similar error.  I downloaded winzip and I \ncan extract fine with that, so I'm guessing the latest version of winzip is doing \nsomething to funny knock out their free competition.\n. Updated by chriswestin42 on 2008-11-19T16:09:51\nOne more note:  if I wget the .zip on a unix box, and use standard unix unzip (not \ngnu gunzip), I can extract.  So its Vista Explorer and gunzip that have problems, \nbut winzip 12 and unix unzip work fine.\n. Updated by mikechambers on 2008-11-25T22:47:48\nWhat folders are replicated?\nIs vista maintaining directories when it uncompresses it?\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by darron.schall on 2008-12-10T16:46:17\nThe JSON string you're trying to decode does not conform to the syntax specified at\njson.org.  Specifically, { success:true } should have been encoded as {\n\"success\":true } per the spec.\nOriginal ticket set owner to darron.schall\nAdded label Type-Defect\nAdded label JSON\nAdded label strict\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by guzhigang on 2008-12-25T07:19:56\nThanks for your time! I know it.\n. Updated by rajhgis on 2010-01-21T10:02:13\nhi can u please find the error in this Json result i could not able to trace out.\n{ \"SrchResults\":[ {\"FeatCount\":\"1\"},{\n\"DESCRIPTION\":\"\",\"PHOTOURL\":\"\",\"HYPERLINK\":\"\",\"ADDRESSTYPE\":\"\",\"ADDRESSBLOCKHOUSENUMBER\":\"6\",\"ADDRESSSTREETNAME\":\"Palm\nRoad\",\"ADDRESSFLOORNUMBER\":\"\",\"ADDRESSUNITNUMBER\":\"\",\"ADDRESSBUILDINGNAME\":\"\",\"ADDRESSPOSTALCODE\":\"456441\",\"LANDXADDRESSPOINT\":\"\",\"LANDYADDRESSPOINT\":\"\",\"NAME\":\"Siglap\nSouth Community Centre\nHall\",\"XY\":\"38836.53569571,32865.17891036\",\"ICON_NAME\":\"auditorium.png\"}]}\n. Updated by bungeye on 2009-09-26T13:36:09\nYou can just remove the top level if statement, that begins with if ( classInfo.@name.toString() == \"Object\" );\nProperties gathered by the for(var prop:String in object) loop are not exposed in the class definition xml. so you \ndon't get a double up.\nThere is also a \"IsDynamic\" flag on the class definition xml if you really want to look into it.\n. Updated by mikechambers on 2009-09-21T05:07:44\nNote : need to make sure this doesnt break the unit tests.\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:35:32\nFixed. Committed revision 109.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:53:14\nAdded label Priority-Low\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:52:06\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:51:39\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2009-07-08T19:08:33\nHi Marko,\nThis is definitely something to consider.  Other people have requested this type of functionality.  See this \nquestion on stack overflow: http://stackoverflow.com/questions/869780/streaming-parsers-json-xml-for-\nas3-flex-adobe-air-application\nI'm not sure of the best approach right now, but I'll take a look at this patch as well as the answer to the \nquestion on stack overflow and see if this warrants building support directly into the API, or if it just needs an \nexample added on the wiki about how to use this library when trying to read potentially incomplete data.\nAdded label Type-Patch\n. Updated by marko.kocic on 2009-07-09T10:28:56\nHi,\nI'm attaching the slightly improved version of the patch that was used in my\napplication. I know it is not ideal, since my goal was to modify as little as\npossible upstream code.\nI think that some support for streaming will be useful, especialy since it can be\nlocalized to separate class without affecting existing code.\n. Updated by darron.schall on 2009-08-03T00:59:21\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by darron.schall on 2009-08-03T00:35:29\nThis has been fixed since r38.  Trying using build .92.1 from the downloads page, or pull the latest code from \nthe trunk.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-08-03T00:36:49\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:50:48\nWhat doesnt work? The zip file?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by d...@onepica.com on 2010-03-01T19:00:22\nIt is nearly impossible to unzip/\"extract\" the ZIP file on Windows Vista because of\nall the Mac OS extension-less empty files (there is one for every folder, include\nsubfolders). I was only able to get everything out creating my own folders and then\ncopy/pasting files into them.\nI recommend: http://www.apple.com/downloads/macosx/automator/createcleanarchive.html\n. Updated by darron.schall on 2009-08-04T00:57:41\nI've tried to apply the optimizations outlined in that article, but they actually turn out to be slower than the \ncurrent implementation.  I've attached a patch to illustrate the changes I was using.\nFor 10k rows, the patched version is 20-50ms slower on my machine.\nIf I remove the error checking, then this version is indeed faster, but then the parser is no longer correct.\nSince the overall goal of this library is to be correct, I do not feel comfortable sacrificing correctness for speed \nin this case.\nI also tried using regular expressions to break some things apart, but that ends up being MUCH slower, \nespecially on larger strings.  The regular expression engine doesn't seem to perform well in my testing of \nlarge strings.\n. Updated by darron.schall on 2009-08-04T00:57:59\nOriginal ticket set status to WontFix (we converted to closed)\n. Updated by darron.schall on 2009-08-04T01:09:07\nIn testing again, it looks like the patched version actually is faster by 100ms or so on my 10k records test.  My \nmistake.  I also made a slight mistake in the patch that was causing the unit tests to fail, but have corrected that \nbefore check-in.\nThese changes have been made in r95.  All of the unit tests continue to pass.  However, if anyone runs into \nerrors, please file additional issues with reproducible test cases so I can expand the test cases.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by james.gallagher on 2009-08-28T11:19:48\nyes i have found the same problem,\nthis file is no longer available within the library, it has been removed.\nit is within the source files via the html viewing but once downloaded, the src file\nis no longer there and the .swf file does not contain it either.\nI am working with AJAX through HTML so I cannot simply add the source to my\napplication and then use it as far as I am aware, it must be in swf format, is this\ncorrect?\nThe above person who is using flex could be able to recreate all src file i think and\nthen use it as he wrote it himself without the .swf but i could be wrong?\nwhere can I find a working EncryptionKeyGenerater.swf??\n. Updated by handi.tan on 2009-11-09T17:37:05\nI hope that EncryptionKeyGenerator class just got accidentally removed instead of \npermantently removed.\n. Updated by chan.matthew on 2009-11-13T15:49:24\nYou can always download the source code and build the library yourself. There is a\nscript provided to do that.\n. Updated by darron.schall on 2009-08-03T00:47:05\nI'm not able to reproduce this.  Can you paste the JSON string that you're trying to decode?  Thanks!\nAdded label Type-Defect\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by jon_le_k...@hotmail.com on 2009-03-17T10:44:07\nPS : I'm using as3corelib-.92.1 with Flex Builder 3\n. Updated by NielsBjerg on 2009-03-31T11:12:39\nHave you tried using  var Test:Array = ArrayUtil.toArray(obj);\nThat would be my suggested solution...\n. Updated by jon_le_k...@hotmail.com on 2009-04-07T08:26:46\nThank you NielsBjerg, I've tried it and your solution works.\nI think it may be better than using the object immediatly like I'm doing now, thats\nwhy I will change it next time ;)\nThank you again for your solution ;)\n. Updated by darron.schall on 2009-07-08T19:02:50\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:49:44\nCan you post an example so we can reproduce the issue?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by kopchickm on 2010-03-03T16:50:25\n\u00ff\u00d8\u00ff\u00e0 is what is what you see when you trace out the encoded data, essentially the\ntoString().  if you trace out the length, you should see that the whole byte array is\nthere.\n. Updated by darron.schall on 2009-07-08T19:02:13\nMarking as not a bug because I believe this is working as expected.  Consider the following test:\n```\npublic function testDecodeStringWithEscapedBackslashAndNewLines():void\n{\n    // Contains escaped and unescaped LF\n    var innerString:String= \"line1\\nline2\\nmore line2\";\n    // Decode an object that has the inner string inside of it\n    var o:* = JSON.decode( JSON.encode( innerString ) );\nassertEquals( innerString, o );\n\n}\n```\nThis test case passes.  The innerString value is exactly the same after going through an encode/decode \nprocess.\nIn your example, the reason you're seeing \"strange\" behavior is because the string is escaped before it has a \nchance to be decoded by the JSON library.  The string you're actually passing into JSON.decode looks like this:\n\"line1{newline character}line2{backslash character}nline3\"\nWhen the JSON decoder runs, it finds the backslash character immediately followed by an \"n\" and it converts \nthat to a {newline character}.  So, after the decode, the result ends up being: \n\"line1{newline}line2{newline}line3\".  That explains why the result differs from the original string you specified.\nRemember that a string must be properly encoded in order for it to be decoded correctly.\nAdded label json\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by paleozogt on 2009-07-08T19:11:00\nSo what you're saying is that JSON.decode will accept malformed JSON?  Is that how it should work?  I \nthink its important that the decoder reject bad JSON.\nWe had a process that was emitting bad JSON (just like described in the bug).  JSON.decode would happily \naccept it.  It wasn't until we hooked up a java json decoder (which rejected the bad json) that we even \nrealized that there was a problem.\n. Updated by darron.schall on 2009-07-08T19:22:36\nI understand what you're saying now.  The JSON string \"line1{newline character}line2\" is technically malformed \nbecause the {newline character} is not escaped to \"\\n\".  The JSON decoder is not throwing an error when \nprocessing this malformed string.\nI'll update the tokenizer to throw a parse error in strict mode when unescaped control characters (\\u0000 \nthrough \\u001F) are found in strings.  \nIn non-strict mode, I won't change the behavior because the idea of the non-strict mode is to parse the JSON \nthe best that we can even if the string is malformed.\nAdded label Type-Defect\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2009-07-08T19:46:46\nFixed in r91.  Modified readString in the tokenizer to look for control characters.  \nCommit message: In JSON strict mode, when a string contains an unescaped control\ncharacter (0x00-0x1F) a parse error is now thrown because the spec indicates\nthat strings cannot contain unescaped control characters.\nIn non-strict mode, the error is ignored and the control character is \"passed\nthrough\" to the decoded string value.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-21T04:46:18\nOriginal ticket set owner to mikechambers\n. Updated by grayson.lang on 2009-06-18T20:10:17\nAdded label Performance\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-07-08T15:08:55\nAdded label Type-Defect\nAdded label json\n. Updated by darron.schall on 2009-07-08T20:38:29\nFixed in r92 - [Transient] metadata is now respected by the encoder.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-08-15T16:50:11\nIssue 116 has been merged into this issue.\n. Updated by pierre.chambon on 2010-02-27T21:25:52\nIs this really fixed?\nI just downloaded the latest version, added [Transient] to a property which holds a \nSprite and serializing eats up tons of memory and CPU before crashing.\nIf I comment out the property holding the Sprite, all the other properties being \nStrings or Number, the serialization works fine.\nThanks a lot\n. Updated by darron.schall on 2009-07-08T15:08:07\nCan you describe what you're interested in extending?  I'm hesitant to just generically move everything from \nprivate to protected.  \nIf I understood better what your end goals are, then I can determine which methods can be safely marked as \nprotected while still keeping the integrity of the library.\nAdded label json\n. Updated by wolever on 2009-07-08T19:28:44\nI want to extend the encoder/decoder and teach it how to serialize my custom classes (for example, so it will \nencode dates in a particular format).\nI'm curious, though, what you mean by \"keeping the integrity of the library\". What do you think would happen if \nmethods were protected instead of private?\n. Updated by darron.schall on 2009-07-08T20:16:09\nI think, in this case, it would be better to add hooks that you can extend for these particular areas.\nFor example, in JSONEncoder the convertToString() private method is a good one to mark as protected.  You \ncan extend this with code like:\nif ( value is Date )\n{\n    return customDateEncoder( value );\n}\nelse\n{\n   return super. convertToString( value );\n}\nHowever, a more complicated method such as objectToString shouldn't necessarily be easily extendable \nbecause there are no places to really change the behavior with a subclass.  JSON objects have to be encoded \nin a certain way, and trying to override this method would be difficult.  You would essentially have to just \"roll \nyou own\" anyway.  \nMaking convertToString() protected would enable this approach since you can decide in there whether or not \nyou want default functionality.\nThat's what I mean when I say \"keeping the integrity of the library\".  I think it's better to expose custom object \nserialize/deserialize hooks rather than generically make the guts of the library protected.  The library is \ndesigned around JSON syntax, so the extension points are really minimal here.\nUnforunately, the way the class is designed, it's hard to \"swap out\" which encoder/decoder you want to use \nbecause these are not parameterized in the static methods.  In the process of updating the library to support \nthis, it probably makes sense to add a parameter for encoderClass to JSON.encode that defaults to the current \nJSONEncoder so you can more easily swap out your own implementation should you want custom \nserialization.. something like:\npublic static function encode( o:Object, encoderClass:IJSONEncoder = null ):String\nLet me think about this some more.  It warrants some discussion, and would probably be better discussed on \nthe mailing list.\nAdded label Type-Enhancement\n. Updated by wolever on 2009-07-09T14:38:56\nAgreed \u2013 convertToString would be a good place to allow overriding.\nI think I understand what you mean by \"keeping the integrity of the library\"... And although I would argue that \nit's still not strictly necessary (that is, it's better to warn the programmer that it's a bad idea to poke around \nhere, but still give them the option), I can also see some benefit to the added restriction. So I'll pipe down \nabout that :)\nAnd, yea \u2013 when I did my implementation, I ran into the same problem with the static methods. To get around \nit, I subclassed the JSON class... But that's not a great general \u2013 passing it as an argument does seem better.\nAnyway, thanks for your work on this library\u00a0\u2013 it's much appreciated.\n. Updated by mikechambers on 2009-09-21T05:09:38\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:48:04\nThis issue was closed by revision r112.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:48:30\nFixed. Committed revision 112.\nThanks for the report and patch.\n. Updated by alec...@googlemail.com on 2009-07-24T07:41:56\nproposed patch for trivial change\n. Updated by mikechambers on 2009-09-21T04:45:53\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:45:27\nThis issue was closed by revision r111.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:45:48\nFixed. Committed revision 111.\nThanks for the report and patch.\n. Updated by darron.schall on 2009-08-02T20:10:32\nI don't think this is a bug in the JSON parser in strict mode.  According to the RFC, whitespace is defined as:\nws = *(\n                %x20 /              ; Space\n                %x09 /              ; Horizontal tab\n                %x0A /              ; Line feed or New line\n                %x0D                ; Carriage return\n            )\nCharacter 160 is a non-breaking space, and not valid JSON whitespace.\nHowever, if the parser is used in non-strict mode then I can deal with this better by including the non-\nbreaking space as whitespace.\nAdded label strict\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2009-08-03T00:18:47\nFixed in r93\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-21T05:39:00\nOriginal ticket set owner to christian.cantrell\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:43:24\nThis issue was closed by revision r110.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:43:51\nFix. Committed revision 110.\nThanks for the report and patch.\n. Updated by darron.schall on 2009-08-15T16:50:11\nWhat version were you using?  This should've been fixed as of r92.\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by darron.schall on 2009-08-15T17:06:16\nThe [Transient] part was already working, but there was an exception being thrown for illegal read on write-only \nproperties when encoding custom classes.  That has been fixed in r96.\nThanks for helping to make the library better.  :-)\n. Updated by vmliu1 on 2010-01-12T20:48:21\nPlease provide separate distribution for Flex and AIR.\n. Updated by darron.schall on 2009-08-24T13:20:40\nFixed in r97, thanks.  I actually had a test for this, but the test was incorrect (didn't escape the \"\\\" before the u, \nwhich meant it the escape sequence wasn't actually an escape sequence by the time it was decoded... doh!).  \nFixing the test highlighted the problem, and your patch worked great to make the test pass.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-09-03T14:11:25\nPlease attach the JSON string you are trying to decode so we can identify the potential issue.  You might also \nwant to try making sure the JSON string is valid by running it through the online validator at: \nhttp://www.jsonlint.com/\n. Updated by darron.schall on 2009-09-03T14:11:35\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by mopics25 on 2009-11-20T12:53:09\nhere's some code that gives this Error :\n. Updated by scitronpousty on 2010-01-07T21:56:45\nI checked my JSON on jsonlint and it validates and I also get the unexpected o issue.\nI searched for a word beginning with o that was not escaped properly and cannot find it.\n. Updated by scitronpousty on 2010-01-07T22:02:31\nParsing works though if I use this construct instead:\nvar decoder:JSONDecoder = new JSONDecoder(resultString);\nvar resultObject:Object = (decoder.getValue() as Object);\nvar features:Array = new Array(resultObject[\"features\"]);\n. Updated by rahul.schaudhary on 2010-02-09T11:59:20\nI have also fallen into same situation. The only difference is that I am getting-\nUnexpected j error.\nI also have validated my JSON string using the tool provided.\nDo we have some solution to it?\n. Updated by ugommirikwe on 2010-04-13T12:34:51\nI had the same issue too, but I discovered the problem was that I didn't indicate in \nthe \"resultFormat\" property of the HTTPService object as \"text\". I change this \nproperty to text and that error went away. Infact you don't have to use the method \nsuggested by scitronpousty; just write your code the normal way: JSON.decode\n(e.result.toString())..\nHope this helps someone.\n. Updated by Benjamin.Lowenstein on 2010-07-09T22:01:36\nThe workaround in #5 worked well for me for this exact error.\nimport com.adobe.serialization.json.JSONDecoder;\nvar decoder:JSONDecoder = new JSONDecoder(myJSONstring);\nvar myJSONobj:Object = (decoder.getValue() as Object);\n. Updated by retrogamer4ever on 2009-09-21T05:11:19\nI say it's a good idea only if it really brings improvements and maybe perhaps keep a\nlegacy branch that has the flash player 9 support?\n. Updated by lukebayes on 2009-09-21T05:18:37\nHey Mike,\nPlease fork or branch so that the legacy code is left accessible and maintainable.... We're still doing the \noccasional AS2 project, and I imagine there will be people stuck with FP9 requirements for years to come.\n. Updated by oizys0 on 2009-09-21T05:20:06\nIf you notice some major improvements within a specific class, consider branching it\non a per-class basis..  if a single class only gets a minor improvement but another\ngets a major improvement, maintaining the branch for the minor improvement one isn't\nworth it.\n. Updated by katopz on 2009-09-21T05:21:17\nfor me...i think better separate as fp9 and fp10 in trunk\nwe did it in away3d, and also jiglib (i just add fp10 today for jiglib)\nthb, we love Vector typed but client still love fp9 via IE6 ! ;p\nanother pros for separate fp9/fp10 is we can use them for speed comparison too ... :)\n. Updated by mitsuru.takeuchi on 2009-09-21T06:27:47\nI agree with katopz opinion, that separate as fp9 and fp10.\nSome developers may have some trouble, but I think it is nonsense not to create fp10 version of corelib for fp9.\nWe will be easier to induce to fp10 if clients have many benefits by using fp10. So I think corelib should be \nseparate as fp9 and fp10.\n. Updated by mikechambers on 2009-09-21T07:05:41\nOne thing to keep in mind, is that whatever we do, it has to be easy to maintain (as we have few people working \non the project).\nSo, I dont want to maintain two branches / versions and releases.\n. Updated by dittgen on 2009-09-21T07:12:57\nThis leads to the question: Is it possible to test for the FP version and offer\ndifferent implementations just in one version? In Javascript you can check if method\ndo exist and react otherwise in another way. Would this be possible with AS3 or would\ncode that's only supported by FP10 break up when compiling for FP9?\n. Updated by neuropro...@gmail.com on 2009-09-21T07:24:57\nIf you can't support 2 versions, leave the FP9 version as it is and go for FP10. We\nneed the speed (and good excuses to convince clients to go for FP10)\n. Updated by mdw1980 on 2009-09-21T13:48:15\nDefinitely branch it.\n. Updated by troy.gilbert on 2009-09-21T13:55:46\nMy clients are still requiring FP9 for a lot of stuff, so definitely keep a branch around for bug fixes.\n. Updated by mitsuru.takeuchi on 2009-09-23T07:08:45\nIf you don't want to maintain 2 branches, I want you to maintain FP10 version and leave FP9 version as previous \nversion.\nThe reason is:\n1. Maybe FP9 (this means, \"previous Flash Player version\") version of as3corelib will be added new features.\n2. I want to know the merit of new features.\n3. Because as3corelib is under new BSD license, other developers can develop previous version of Flash Player if \nneeded.\n. Updated by mikechambers on 2009-09-22T07:49:11\nOriginal ticket set owner to thibault.imbert\n. Updated by mikechambers on 2009-09-22T08:13:15\nNote, one thing to consider when thinking about whether we have a static encode method, or require the use the \ncreate an instance of the encoding class, is whether we plan to eventually support an asynchronous encode \nmethod / api.\nRIght now, I think this would be useful as encoding can be pretty CPU intensive, although some of the \nperformance improvements we are considering might not make this as important.\nAnyways, we should consider this when designing the interface / api.\n. Updated by mikechambers on 2009-09-22T07:22:32\nFixed in revision 108.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by flashtronaut on 2009-09-23T23:06:33\nI updated my update :)\nI added a method called \"callbackRetrieve\" that works exactly the same as the normal \n\"retrieve\" except that it takes a callback function as an extra argument and it calls \nthat callback function with the loaded file as an argument once the file is ready.\nSince each callbackRetrieve method creates a unique loader instance, it may be used \nto simultaneously retrieve multiple files without having to think about which file is \nready once the ResourceCache dispatched an ITEM_READY event.\nAlso added functionality to clean up and remove each loader instance once it's no \nlonger needed.\n. Updated by flashtronaut on 2009-09-24T14:38:58\nI added some description of the changes I made on my blog:\nhttp://blog.flashtronaut.com/2009/09/24/contribution-to-the-as3corelib-resourcecache-\nclass/\n. Updated by tjconsult on 2010-01-19T07:11:05\nI was about to include _as3_corelib in an ActionScript-only project of ours, but that's not an option because of \nthis and other flex dependencies (see also \nhttp://code.google.com/p/as3corelib/source/browse/trunk/src/com/adobe/air/logging/FileTarget.as). Because \nof the naming of this library, I presumed one of the rationales behind this project was independence of Flex. Flex \nalso has its own PNG encoder implementation and probably other overlapping functionality.\nIn the context of a single commit in the last 4 months, does it make sense to provide patches with the hope of \ninclusion?\n. Updated by mikechambers on 2009-11-19T15:20:07\nFixed in commit 113\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2010-01-06T14:42:51\nWould you be willing to submit a patch that contains the unit test to demonstrate the behavior, as well as the \ncorrection to the line of code you indicated about?\nThe new unit test should show that scenario 1b is currently failing, and then after making the change to the \ntokenizer the test (and all other pre-existing tests) should pass.\n. Updated by morten.barklund on 2010-01-11T15:52:36\nYou actually already have a test for it:\nhttp://code.google.com/p/as3corelib/source/browse/trunk/tests/src/com/adobe/serialization/json/JSONTest.as#115\nThis test should fail currently. I do not have Flex Builder nor FlexUnit, so I cannot\nverify with the proper setup. But if I write:\nJSON.decode( \"\\\"\\u0061\\\"\" )\nIt throws a runtime-error at me, so that test should definitely fail in any setup.\nCould you please execute this test in your local setup? Maybe there is a problem with\nthe test-case not catching the error properly, and thus it seems like the whole\ntest-case works as it never asserts some false.\nBut in fact the function testDecodeStringWithInvalidUnicodeEscape throws an error.\n. Updated by Touvan on 2010-02-17T21:54:32\noh, or maybe JSONTokenizer.as\n. Updated by Touvan on 2010-03-03T19:35:51\nI did this in JSONTokenizer, though I'm sure a property with the line number and a way to append it in the \nparseError (where the rest of the message is constructed) call would be more appropriate. This worked for my \nneeds though.\npublic function parseError( message:String ):void {\n    throw new JSONParseError(\n        message + \" (line \" + jsonString.substring(0, loc).split(\"\\n\").length +\")\",\n            loc, jsonString\n    );\n}\n. This was fixed in commit 064139a0ce1e0422bb6e23a03614157bc8d00edb\n. Updated by gae.local.test on 2010-07-12T05:41:54\nI made copy and paste errors.  The only thing that is wrong with the string it prints out is the missing colon after the drive letter.  I can't edit my post to fix it.\n. Related to #63\n. Fixed in commit 064139a0ce1e0422bb6e23a03614157bc8d00edb\n. This isn't a bug in the JSON decoder.  The behavior you are seeing stems from the use of a \"for..in\" loop to iterate over properties of an object.  Objects in AS3 are not \"ordered\".\nThe better way to encode this information would be to use an array [] instead of an object {}:\n. Does FlashDevelop provide a way to define compile-time constants used with MXMLC?  In FlashBuilder you can specify additional compiler arguments in the library propject properties in order to build.\nA few others have mentioned this as well.  It's a nice optimization but makes it hard for people to use the library as source because of the extra setup steps.\nI think the best solution is probably just to revert the change, and I'll create my own fork to include these optimizations.\n. I reverted the compile-time define change out.  The latest source can build without any additional setup required.  Change 24c6c16aecbf0d8fcc043ae671e689b0d4b4c559.\n. Hi Francis,\nFor those who want to leverage ActionJSON, they can simply head to the ActionJSON project itself.  It does not make sense to combine the projects at this point.\nThe as3corelib parser offers more flexibility which people have requested.  There are also ways to make it faster, specifically by removing a slow regular expression to test for correctness (note: the ActionJSON library does not pass all of the unit tests that as3corelib does - you can either choose robustness or speed).\nSee my notes about speed differences here: http://sites.google.com/a/darronschall.com/thoughts/home/2010-11-08-actionscript-3-json-libraries-and-as3corelib-json-updates\n. Updated by darron.schall on 2007-01-15T15:54:53\nAdded in revision 17\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2007-01-15T15:54:53\nAdded in revision 17\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2007-01-10T04:51:23\nHere is the RFC:\nhttp://www.ietf.org/rfc/rfc4627.txt?number=4627\nI cant find any mention of dates.\nHere is a page from mozilla's thoughts on EcmaScript 4 and JSON:\nhttp://developer.mozilla.org/es4/proposals/json_encoding_and_decoding.html\nSpecifically, it mentions:\n\n*\n  Date.prototype.toJSONString()\nReturns a String containing the representation of a date. A Date object is serialized\nas an ISO date string in double quotes.\nSo, I think it is very important that we follow whatever the \"standard\" is. There are\nalready alternate implementations, which could result in incompatible versions of JSON.\nI will ping Douglas Crockford, and see if they have any definitive thoughts on date\nserialization in JSON.\n. Updated by mikechambers on 2007-01-10T05:07:34\nThe latest JSON.js file (from December 6, 2006), has support for Dates:\nhttp://www.json.org/json.js\nIt uses ISO 8601\nhttp://www.iso.org/iso/en/prods-services/popstds/datesandtime.html\nWe have some Data format functions in DateUtils\nhttp://as3corelib.googlecode.com/svn/trunk/src/com/adobe/utils/DateUtil.as\nbut unfortunately, dont have ISO 8601\n. Updated by wmdmark on 2007-05-01T03:38:49\nAre there any work arounds for this? I'm needing to parse dates from a JSON feed in \na project I'm working on. The date value comes in from the server as \"new Date(-\n59011459200000)\"\n. Updated by wmdmark on 2007-05-01T03:39:45\nBTW, I'd be happy to help :)\n. Updated by kenlarkin on 2008-06-04T10:32:25\nuntil you resolve this you add this to JSONEncoder.as when checking the object o.\nelse if (o is Date)\n{\n    s = \"new Date(\" + o.time.toString() + \")\";\n    return s;\n}\nelse // o is a class instance\n. Updated by alan.dur...@citi.com on 2008-06-05T12:58:12\nIt seems that a lot of implementations of JSON are using proprietary date formats to \nget around this issue. This kind of defeats the interoperability aim of JSON. I \nwould suggest that providing a default serializer/deserializer for dates with the \nability to insert or use a different one would be useful. In other words, provide an \ninterface like\nSerializeDate(param:Date):String\nIsDate(param:String):bool\nDeserializeDate(param:String):Date\nwhere the interface could be changed if the server side technology uses a different \nformat. \nLike wndmark, I'd be happy to help too.\n. Updated by mchiareli on 2009-02-18T23:22:39\nare there news about it?\n. Updated by noplace on 2009-06-15T03:46:36\nDear all,\nI was in need to decode JSON coming from a .NET web service and as3corelib was the \nonly solution I found, and after finding out that it does not decode the date I took \nthe JSON source files and put them in my own lib and modified the code to check for \nthe date string MS sends as json \"\\/Date(...)\\/\" and returns a proper date object.\nif anyone is intrested in this let me know.\nthanks\n. Updated by darron.schall on 2009-08-03T00:59:21\nIssue 94 has been merged into this issue.\n. Updated by gmariani405 on 2009-09-21T19:02:12\nIs any progress being made to this? It's been an issue for going on 3 years.\n. Updated by darron.schall on 2006-12-29T21:02:55\nChanged issue title (accidentally left it as default when I entered it).\nTitle changed from 'JSON does not encode XML instances into anything useful' to 'JSON does not encode XML instances into anything useful'\n. Updated by mikechambers on 2007-01-10T04:41:34\nI believe Firefox 2 has support for e4x. Might be useful to see how they handle it.\n. Originally issue from http://code.google.com/p/as3corelib/issues/detail?id=5\n. Originally issue from http://code.google.com/p/as3corelib/issues/detail?id=6 did not import correctly.  Closing.\n. Duplicate of #10, closing.\n. Updated by darron.schall on 2007-01-10T13:29:15\nDuplicate of #7\nOriginal ticket set status to Duplicate (we converted to closed)\n. Originally from http://code.google.com/p/as3corelib/issues/detail?id=9 and marked as WontFix.  Closing.\n. Originally from http://code.google.com/p/as3corelib/issues/detail?id=10 and marked as WontFix\n. Updated by darron.schall on 2007-01-14T00:57:35\nThis has already been fixed in the latest from SVN.  If you can still reproduce,\nplease let me know what your JSON string looks like.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by darron.schall on 2007-05-27T22:53:06\nA test for this was posted on the mailing list -- \nhttp://groups.google.com/group/as3corelib/browse_thread/thread/55ad5b8aad551b6a/e68944f72f3db151?lnk=gst&q=%5Cr&rnum=1#e68944f72f3db151\nThe character code CR(0x0D, '\\r') should be considered as white space as well.\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2007-05-27T23:13:17\nThis was fixed in revision 38 ('\\r' was added as a whitespace char).\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-08-03T00:36:49\nIssue 95 has been merged into this issue.\n. Updated by darron.schall on 2007-01-15T21:51:36\nFixed in revision 20\nOriginal ticket set status to Fixed (we converted to closed)\n. Original issue from http://code.google.com/p/as3corelib/issues/detail?id=13 did not import correctly.  Closing.\n. Updated by mikechambers on 2007-02-07T07:04:09\nAssigning to Christian.\nOriginal ticket set owner to qantrell\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by qantrell on 2007-02-14T01:41:15\nThis actually isn't a bug.  The date format in the example above has two problems:\n1. It isn't a RFC822 date.  It's a W3CDTF date.\n2. The date is specified as 243 which won't ever parse.\nI added test cases for parsing date with 0 padding, and they all pass.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by philoQE on 2007-03-01T22:36:08\nSorry I must have mistyped step #1.  I can't figure out how to edit this bug but this\nis what it should be DateUtil.parseRFC822(Wed, 2 Jan 2007 04:00:00 PST).  If you look\nat the attached application there are all the examples for you to see.\n. Updated by philoQE on 2007-04-12T18:52:52\nSorry - the case described here where the day doesn't make sense for the date is not\nthe core issue, we're concerned about it.  It's the issue of whether value is in a\nvalid range of acceptable values.  Such as 2 digits for a day or month.  Or a valid\nday of the week.  Examples:\nThe following bad dates do not give an error:\nATOM\nbadYear - digits != 4\nbadMonth - digits != 2\nbadDate - digits != 2\nbadHour - digits !=2\nbadMin - digits != 2\nbadSec - digits != 2\nbadSecFrac - digits not >= 1 (just a .)\nbadTimeOffset - not 2digits:2digits\nrss 2.0\nbadYear - digits != 4\nbadMonth - not one of Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec\nbadDate - digits != 2\nbadDay - not one of Mon, Tue, Wed, Thurs, Fri, Sat, Sun\nbadHour - digits !=2\nbadMin - digits != 2\nbadSec - digits != 2\nbadZone letter\nbadZone offset\nrss 1.0\nbadYear - digits != 4\nbadMonth - digits != 2\nbadDate - digits != 2\nbadHour - digits !=2\nbadMin - digits != 2\nbadSec - digits != 2\nbadSecFrac - digits not >= 1 (just a .)\nbadTimeOffset - not 2digits:2digits\n. Original import of issue http://code.google.com/p/as3corelib/issues/detail?id=15 did not complete successfully.  Closing.\n. Updated by mikechambers on 2007-03-03T21:08:09\nThis may have been fixed by\nhttp://code.google.com/p/as3corelib/issues/detail?id=2&can=1&q=\nwhich is going into the .9 build.\nDinny, can you pull the source and see if that fixes the issue?\n. Updated by darron.schall on 2007-03-20T23:02:57\nThis isn't a bug -- the original JSON string that you're trying to use -\n[{BookTitle:\"JSON\", Name:\"Mat\"}] - is not correctly formatted JSON code.\nFrom json.org, an Object consists of pairs, where each pair is string:value.  The\nidentifier on the left of the pair then, being a string, needs to be enclosed in quotes.\nWhatever library your using to generate the JSON string is not producing\nJSON-compliant output.  Make sure that the name part of the name/value pairs inside\nof an object is getting correctly wrapped in quotes.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:27:06\nRemoved label Priority-Medium\nAdded label Priority-Low\n. Updated by mikechambers on 2009-09-22T08:14:33\nWe can leave this to as3crypto:\nhttp://code.google.com/p/as3crypto/\nOriginal ticket set status to WontFix (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:27:17\nRemoved label Priority-Medium\nAdded label Priority-Low\n. Updated by arcangel.nebula on 2008-08-14T07:36:18\nHello!\nI have programmed the classes for SHA-512 encryption in Action Script 3.0. I want to\nsend to you the source code to consider if it\u00b4s possible to integrate with corelib\u00b4s\nclasses.\nAlso, i have programming SHA-384 encryption for Action Script 3.0 which I will could\nto sent you shortly.\nIf you are interested, let me know and i\u00b4ll send you the source code.\nE-mail:\njuanmanuel[at]flashexperience[dot]net\nBest regards!\nJuanma\n. Updated by arunkv on 2008-11-09T14:55:44\nJuanma, can you please attach your SHA-512 code here and attach your SHA-384 code\nunder issue http://code.google.com/p/as3corelib/issues/detail?id=17\n. Updated by mikechambers on 2009-09-22T08:14:52\nWe can leave this to as3crypto:\nhttp://code.google.com/p/as3crypto/\nOriginal ticket set status to WontFix (we converted to closed)\n. Updated by darron.schall on 2007-04-05T22:31:30\nGood catch, and I agree with your proposed fix as well.  I'll wrap this up in a test\ncase and get the fix in the trunk in the next few days.  I don't believe \"\" is valid\nJSON either.\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2007-04-30T13:45:13\nThis was fixed in revision 37.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2007-04-30T13:47:06\nThis error happens because the name of your MXML file is \"JSON\", which conflicts with\nthe name of the library class \"JSON\".  Try renaming JSON.mxml to JSONExample.mxml, or\nusing a fully qualified path to com.adobe.serialization.json.JSON.decode();.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by darron.schall on 2007-04-30T13:47:22\nDuplicate of #20\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by brent.dearth on 2007-05-30T19:24:31\nHere's a snippet of code that could hopefully help in this effort. It does recursive\nobject graph traversal, calling ObjectTranslator.objectToInstance() as necessary.\nSeems to be working fine for JSON deserialization within a project I'm working on.\n. Updated by mikechambers on 2008-07-02T16:54:06\nWe should use the same syntax that flex uses now, which is an instance method called\nencode()\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:55:26\nOriginal ticket set owner to thibault.imbert\nRemoved label Priority-Medium\nAdded label Priority-High\n. Updated by koenweyn on 2008-12-17T14:05:08\nThe attachment includes a fix for issues 24 and 25.\nThe suggested fix above would not work, because it would use the local date (not the\nUTC date)\n. Updated by biggyspender on 2007-08-13T21:36:04\nIndependently verified. Wasted a lot of time tracking down this bug.\n. Updated by koenweyn on 2008-12-17T14:05:50\nThe attached file contains a fix for issues 24 and 25.\n. Updated by rick.terrill on 2007-12-18T21:02:47\nI second this one.  In a recent project we had a JSON file that we handed off to the\nclient for them to make small changes.  They made said changes on a Windows machine\nwhich saved with DOS-style line endings (CRLF) which broke the  deserializer.  I'm\ncurrently getting around this by stripping out carriage returns manually (loop the\nloaded file and do jsonString.replace(\"\\r\", \"\") where jsonString is the data of the\nloaded file) before sending it to the deserializer.\n. Updated by Griffin3Glenn on 2008-03-29T02:47:32\nAll in favor say aye ...\n. Updated by evan.kaufman on 2008-03-31T19:15:10\nAye. This also causes problems on Macs, since they (for some god awful reason) use a\nsingle CR line delimiter (as opposed to windows CRLF and linux LF).\n. Updated by mikechambers on 2008-07-02T16:21:51\nThis is fixed in the source code. Just link the source until we build a new SWC.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2008-10-23T02:16:34\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2008-11-07T19:29:52\nOriginal ticket set owner to darron.schall\n. Updated by mikechambers on 2008-07-02T17:51:50\nOriginal ticket set owner to christian.cantrell\n. Updated by cucumbrrr on 2008-04-30T00:44:25\nI am also experiencing this same issue.\nError: Unable to parse the string [2007-07-31] into a date. The internal error was: Error: This date does not \nconform to W3CDTF.\n. Updated by mikechambers on 2008-07-02T17:52:07\nOriginal ticket set owner to christian.cantrell\n. Updated by ingalls.jon on 2007-08-04T05:23:27\nFurther investigation make me think this isn't a defect.  It seems that the flex error\nreturns \ncom.adobe.serialization.json.JSONParseError$ (@4fc80b51)\nThis is difficult to use in a switch statement.  In any regard JSONParseError isn't\nbeing raised.\n. Updated by mikechambers on 2008-07-02T17:05:17\nThis has been fixed in the source.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:30:29\nThis is not a bug.\nInfinity is not supported by JSON.\nSee section 2.4 of the RFC\nhttp://tools.ietf.org/html/rfc4627\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by joe.nash.74 on 2008-07-02T20:03:53\nI don't see any reason why the JSON package couldn't support Infinity though. I had\nto add Infinity and -Infinity for a project which was sending me data over a\nwebservice in JSON format. I had to build it in - so why can it not be built in by\ndefault? My JSON Class is now more fully featured as a result.\n. Updated by mikechambers on 2008-07-02T16:56:52\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by fo...@jan-viehweger.de on 2008-07-03T08:36:22\nYes Mike,\nplease integrate this usefull peace of code!\nRegards\nJan Viehweger\n. Updated by mikechambers on 2008-07-02T16:32:38\nRemoved label Priority-Medium\nAdded label Priority-High\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T01:31:49\nI think this should be rolled into a \"strict\" mode.  In strict mode we should adhere\ndirectly to the specification, but when not in strict mode we should gracefully skip\nover commas at the last item of an array / object\n. Updated by darron.schall on 2008-10-23T01:32:14\nAdded label JSON\nAdded label strict\n. Updated by darron.schall on 2008-10-23T02:15:47\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2008-11-07T19:28:56\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-12-23T15:14:19\nFixed in r83\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:40:54\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T02:15:29\nThis is a strict mode / non-strict mode change.  When strict mode is turned off we\nshould allow for decoding of non-quoted object identifier strings.\nIt is not valid JSON to have object identifiers not have quotes.  However, a lot of\nother JSON lirabries seem to output these invalid strings by default.\nSo, when strict mode is ON, a parse error should be generated as is the current behavior.\nWhen strict mode is OFF, we should process the identifier like it was a string even\nif it isn't enclosed in quotes\nRemoved label Type-Defect\nAdded label Type-Enhancement\nAdded label strict\nTitle changed from 'Allow for decoding of non-quoted object identifier strings in a non-strict decode mode' to 'Allow for decoding of non-quoted object identifier strings in a non-strict decode mode'\n. Updated by mikechambers on 2008-11-07T19:28:43\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-12-10T16:46:17\nIssue 83 has been merged into this issue.\n. Updated by davidsarah.hopwood on 2009-06-04T22:16:23\nI'm interested in which JSON libraries you know of that emit unquoted property \nnames. The es5-discuss mailing list is currently discussing whether the standard ES5 \nJSON parser will need to accept them.\n. Updated by evan_m...@sympatico.ca on 2009-07-12T01:07:34\nHas this issue been resolved yet?  Been expecting it to be resolved since last Winter\nbreak...tried the latest version but to no avail\n. Updated by darron.schall on 2009-07-13T02:55:58\n@evan - No, this has not been resolved yet.  However, as long as you're using properly formatted JSON you \nshouldn't run into trouble.\nI'm still debating if this is really worth implementing because it goes against JSON syntax (per es5 discussions).\nIf a library claims to output JSON strings, then the library should be using quoted object keys.\n. Updated by evan_m...@sympatico.ca on 2009-07-13T14:21:08\n@darron - Oh ok, thank you very much for your prompt reply.  See we are working with\nMoodle and the MySql database doesn't allow for quoted values to be stored.  From\nwhat I understand, that is one of the reasons why there is a demand and use case for\nparsing non-quoted JSON strings.\nAny chance we may re-consider?  What options do you there are?\n. Updated by mikechambers on 2008-07-02T16:44:48\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T01:48:44\nIt's not valid JSON for numbers to be in hex format (note the \"Number\" section on\nhttp://www.json.org/).  However, this is a good candidate as something to allow in a\n\"non-strict\" mode for decoding.\nSo, in strict mode, this is a parse error.  In non-strict mode, we should convert hex\nformat into numbers.\nAdded label JSON\nAdded label strict\n. Updated by darron.schall on 2008-10-23T01:58:33\nIn revision 63 - http://code.google.com/p/as3corelib/source/detail?r=63 - Added code\nto recognize hex digit numbers.  Commented out for now until \"strict\" mode flag is\nadded (since this is a feature that is not part of the official spec).\nOnce we create a \"strict\" flag we can finish this up (and add the flag to the test as\nwell as to the conditional in the tokenizer)\n. Updated by darron.schall on 2008-10-23T02:16:05\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2008-11-07T19:28:26\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-12-23T15:14:34\nFixed in r83\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T17:52:21\nOriginal ticket set owner to christian.cantrell\n. Updated by mikechambers on 2008-07-02T16:22:33\nThis is fixed in the source code. Just link the source until we build a new SWC.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:42:22\nCan you give a code snippet? I cannot reproduce.\n. Updated by mikechambers on 2008-07-02T16:44:05\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by mikechambers on 2008-11-07T19:27:46\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:46:25\nAdded label HasAPatch\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2008-07-02T22:30:53\n\nChange createBlocks to use array reference instead of s.getCharCodeAt()\n\nCan you explain this change?\nAlso, have you done any performance test on hashing strings between the existing\nimplementation, and yours?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by marklynch on 2008-07-04T14:37:26\nHi Mike,\n\nChange createBlocks to use array reference instead of s.getCharCodeAt()\nAs the createBlocks now takes a byteArray instead of a string, I'm using direct array\nnotation to get the values instead of using the original s.getCharCodeAt();\n\nWas:\nblocks[ i >> 5 ] |= ( s.charCodeAt( i / 8 ) & mask ) << ( i % 32 );\nNow this:\nblocks[ i >> 5 ] |= ( s[ i / 8 ] & mask ) << ( i % 32 );\nRe benchmarking - I hadn't done any, but I have now.\nInitially it was slower than the original version by approx 13%.\nI optimised it a bit and now it runs ever so slightly faster than the original one\n(about 4% faster)\nThis is the optimisation change, removed this code (in function hash):\n  for(var i:int = 0; i\n. Updated by marklynch on 2008-07-04T14:43:59\nMike,\nIn case you wish to reproduced the benchmarks, here is the code I used is below.\nI set up two projects with the corelibs  placed in the src folder and ran this with\nmodified and original versions.\nTimings I got were on 3 runs were:\nOriginal: 3865,3722,3809, AVG 3799\nPatched 1: 4413,4314,4140 AVG 4289\nPatched 2: 3625,3561,3797 AVG 3661\nCode snippet:\npackage {\n    import com.adobe.crypto.MD5;\n    import flash.display.Sprite;\n    import flash.utils.getTimer;\npublic class md5benchOrig extends Sprite\n{\n    public function md5benchOrig()\n    {\n        var string:String = \"asda asd  da da da dasd a dasd asdasdadadad a dasda asd  da\nda da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda\nasd  da da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad\na dasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd\nasdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da\ndasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd \nda da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a\ndasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd\nasdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da\ndasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd \nda da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a\ndasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd\nasdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dasda asd  da da da\ndasd a dasd asdasdadadad a dasda asd  da da da dasd a dasd asdasdadadad a dv\";\n            var hashed:String = \"\";\n            var startTime:uint = getTimer(); \n            for(var i:int; i < 1000; i++){\n            hashed = MD5.hash(string);\n            }\n            var elapsedTime:uint = getTimer() - startTime;\n            trace(hashed);\n            trace('Time taken: ' + elapsedTime);\n        }\n    }\n}\n. Updated by mikechambers on 2008-07-06T20:30:23\nI have checked in the changes (revision 49).\nCould someone post a simple test case / cases for hashBinary? ill add them to the\ntest suite.\n. Updated by mikechambers on 2008-07-06T20:30:38\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2008-11-07T19:28:07\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by liangzhongmin on 2008-01-30T10:17:07\nThanks for help me!\n. Updated by mikechambers on 2008-07-02T16:46:57\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2008-07-02T16:47:38\nAre you using Flex?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by K2xL.com on 2008-07-02T17:23:16\nNo, an AS3 project using Flex Builder 3.\n. Updated by mikechambers on 2008-11-07T19:27:03\nCan you try this with the latest corelib SWC?\nAlso, what is the compile error you are getting? Can you post it here.\n. Updated by mikechambers on 2008-07-02T17:51:34\nOriginal ticket set owner to christian.cantrell\n. Updated by mikechambers on 2008-07-02T16:52:21\nRemoved label Priority-Medium\nAdded label Priority-Low\n. Updated by mikechambers on 2009-09-22T08:17:26\nOriginal ticket set owner to thibault.imbert\nRemoved label Priority-Low\nAdded label Priority-High\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by kopchickm on 2010-03-03T16:48:02\nI was working with high resolution images at one point, and Actionscript kept timing\nout on the encode() method.  As a result, I created an asynchronous version of\nencode, which takes a callback function after the encoding is done.  It doesn't do\nanything to speed it up, but it prevents Flash from crashing when encoding a hi-res\nimage.  There are probably better ways to do this than a timer, but it worked:\npublic function encodeAsync(image:BitmapData, fn:Function,\nprogressFn:Function=null):void {\n            var img:BitmapData = image.clone();\n            img.applyFilter(img, img.rect, orgn, fltrRGB2YUV);\n            var height:int = img.height;\n            var width:int = img.width;\n```\n        // Initialize bit writer\n        byteout = new ByteArray();\n        bytenew=0;\n        bytepos=7;\n    // Add JPEG headers\n    writeWord(0xFFD8); // SOI\n    writeAPP0();\n    writeDQT();\n    writeSOF0(width,height);\n    writeDHT();\n    writeSOS();\n\n    // Encode 8x8 macroblocks\n    var DCY:int=0;\n    var DCU:int=0;\n    var DCV:int=0;\n\n    var t:Timer = new Timer(10, 0);\n\n    var ypos:int = 0;\n    var xpos:int = 0;\n\n    t.addEventListener(TimerEvent.TIMER, function(e:TimerEvent):void\n        {\n            for (var xpos:int=0; xpos= height)\n            {\n                img.dispose();\n                if ( bytepos >= 0 ) {\n                    writeBits(new BitString((1<<(bytepos+1))-1, bytepos+1));\n                }\n\n                writeWord(0xFFD9);\n                t.stop();\n                fn(byteout);\n            }\n            if (progressFn) progressFn(Math.min(ypos/height, 1));\n\n        });\n    t.start();\n}\n\n```\n. Updated by yasukawa on 2008-03-24T12:44:24\n42\n. Updated by mikechambers on 2008-07-02T17:52:34\nOriginal ticket set owner to christian.cantrell\n. Updated by ricick on 2009-03-24T04:45:38\nThis appears to be a problem for dates without a timezone code for example\nDateUtil.parseRFC822('Tue, 17 Mar 2009 14:44:46'); will throw an error. \nThis occurs on line 376 \"if (timezone.search(/\\d/) == -1)\" as timezone is null (from\nvar timezone:String = dateParts.shift(); on line 373)\nMaybe this should default to UTC if no timezone is specified. (if(!timezone)timezone\n= \"UTC\")\n. Updated by johntimothybailey on 2009-05-05T19:28:17\nI'm receiving an error when I run \nimport com.adobe.utils.DateUtil;\nvar pubDate:String = \"Mon, 20 Apr 2009 16:12:01 CDT\";\nDateUtil.parseRFC822(pubDate);\nNotice that I am using a timezone code (ie CDT)\nError Thrown as follows:\nError: Unable to parse the string [Mon, 20 Apr 2009 16:12:01 CDT] into a date. The\ninternal error was: TypeError: Error #1009: Cannot access a property or method of a\nnull object reference.\n    at com.adobe.utils::DateUtil$/parseRFC822()\n    at Untitled_fla::MainTimeline/frame1()\n. Updated by mikechambers on 2008-07-02T16:51:18\nPer the RFC:\nhttp://tools.ietf.org/html/rfc4627\n\nAn object is an unordered collection of zero or more name/value\n   pairs, where a name is a string and a value is a string, number,\nboolean, null, object, or array.\nObject values are unordered.\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2008-07-02T16:51:55\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T02:07:24\nJSONTest::testDecodeScientificNegativeExponent demonstrates that \"6.02e-23\" is\ncorrectly parsed as a number.  Also, if you look in JSONTokenizer at line 392 (as of\nrevision 63) you'll see the code to check for scientific notation in numbers.\nRejecting as invalid - make sure you're using the latest from SVN.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by walkerford on 2008-05-30T05:28:10\nI do not know how to delete issues, but this issue should now be deleted.  I reported it before looking at the \nsource code to see what was going on.  My JSON was improperly formed for this library and looked like this: \n\"{$name: \"jon\", $gender: \"male\"}\".  There were no quotes around the parameter names.  This style of JSON works \nfine in Javascript, where the whole thing is evaled, but with this library, all strings, even parameter names, need \nto be enclosed in quotes.  My JSON string properly formatted looks like this: \"{\"$name\": \"jon\", \"$gender\": \n\"male\"}\".  That properly formatted JSON will decode just fine.\n. Updated by ionel.mc on 2008-06-25T15:17:00\nit's still a valid problem imho\n. Updated by mikechambers on 2008-07-02T16:36:14\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T02:10:10\nMarking this issue as invalid (since the original poster discovered that the JSON\nstring they were trying to decode was not valid JSON).\nHowever, as a followup, I'll create a new ticket to allow for decoding of non-quoted\nobject identifier strings in non-strict mode.\nOriginal ticket set status to Invalid (we converted to closed)\n. Updated by darron.schall on 2008-10-23T02:12:56\nActually, scratch that last comment.  There already is an issue present for the\nnon-quoted feature in a non-strict decoding mode - issue #35.  Marking this as a\nduplicate instead since the core issue is the same.\nAdded label strict\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by mikechambers on 2008-07-02T17:52:45\nOriginal ticket set owner to christian.cantrell\n. Updated by mikechambers on 2008-07-02T15:48:33\nCan you post a test file that the decoder fails on?\n. Updated by mikechambers on 2008-07-02T16:22:10\nThis is fixed in the source code. Just link the source until we build a new SWC.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-07-02T16:16:54\nRemoved label Type-Defect\nAdded label Type-Enhancement\n. Updated by mikechambers on 2009-09-21T05:09:08\nWe either need to remove the reliance on the flex classes, or move them into their own package so it is clear \nthey rely on Flex (similar to what we do with the AIR classes).\n. Updated by mikechambers on 2008-07-02T21:58:32\nactually, on further review, this is wrong.\nIf the search string is not found, a new string, with the same contents as the passed\nin string is returned.\nThere is a note in the code, asking whether this new string should be returned, or\nthe string passed in.\nI think i will keep it as is, so in all cases a new string is returned.\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2008-07-03T16:30:28\nAnyone interested in contributing this?\nRemoved label Type-Defect\nAdded label Type-Enhancement\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by trimediapro on 2008-07-05T15:03:26\nI sent you an email Mike.\n. Updated by trimediapro on 2008-07-07T01:52:11\nHere's what I put together. \nI have add in 3 static functions to NumberFormatter\naddSeparator(p_num:Number, p_separator:String):String\nformatDecimal(p_num:Number, p_decimal:String=\".\", p_decimalPlaces:Number=0):String\nformat(p_num:Number, p_separator:String, p_decimalPlaces:Number=0, \np_decimal:String=\".\"):String\nHere are some examples and a basic explanation of all 3.\nThe \"addSeparator\" function is for adding a \"thousands separator\" into a number.\nThis function will return the same number (as a String) but with the new thousands \nseparator that was specified.\n// Sample Calls\nNumberFormatter.addSeparator(-12198.12345, \",\"); // output -- -12,198.12345\nNumberFormatter.addSeparator(1000000.00, \" \");   // output -- 1 000 000.00\nThe \"formatDecimal\" function is for doing just that. \nThis function will return the same number (as a String) but with the new decimal \ncharacter that was specified.\n// Sample Calls\nNumberFormatter.formatDecimal(0.1983567, \",\");  // output -- 0,1983567 \nNumberFormatter.formatDecimal(198.3567, \",\");   // output -- 198,3567 \nThe \"format\" function of the NumberFormatter is much more versatile. You can get the \nsame results as addSeparator and formatDecimal as well as rounding to n number of \ndecimal places all in a single call.\nNumberFormatter.format(p_num:Number, p_separator:String, p_decimalPlaces:Number=0, \np_decimal:String=\".\"):String\n@param p_num is the number to work on\n@param p_separator is the character to use as the thousands separator\n@param p_decimalPlaces is the number of decimal places to round the number to\n@param p_decimal is the character to use as the decimal\n// Sample Calls\nNumberFormatter.format(0.123456789, \" \", 5, \",\");   // output -- 0,12346\nNumberFormatter.format(-123456789, \",\", 5, \"_\");    // output -- -\n123,456,789_00000\nNumberFormatter.format(123456789, \"-\", 0, \",\");     // output -- 123-456-789\nNumberFormatter.format(123456789, \"-\");     // output -- 123-456-789\nIf just the thousands separator needs to be added\nNumberFormatter.format(-123456789, \",\");        // output -- -123,456,789\nIf just the decimal needs to change\nWhen p_decimalPlaces is set to -1 (negative one) the result is the same as calling \nthe formatDecimal function. The same number is returned with no rounding and just \nthe decimal character has been modified.\nNumberFormatter.format(0.123456789, \"\", -1, \",\");   // output -- 0,123456789\nIf the decimal needs to change and the number is rounded to n decimal places\nNumberFormatter.format(0.123456789, \"\", 5, \",\");    // output -- 0,12346\nNumberFormatter.format(-123456789, \"\", 2, \",\");     // output -- -123456789,00\nIf the thousands separator needs to be added and the decimal needs to change \nNumberFormatter.format(12345.6789, \" \", -1, \",\");   // output -- 12 345,68\nIf the thousands separator needs to be added and the decimal needs to change and the \nnumber must be rounded to n decimal places\nNumberFormatter.format(123456789, \" \", 2, \",\");     // output -- 123 456 789,00\nNumberFormatter.format(12345.6789, \" \", 2, \",\");    // output -- 12 345,68\nAll of the functions should work with positive and negative numbers.\nI think that about covers it.\nI'm fairly certain that parts of the format function could be optimized. I was just \ntoo lazy to figure out the RegExp calls. If anyone else would like to do some \noptimizing that would be great.\nI have attached the updated NumberFormatter.as file for submission into corelib.\n...Neil Madsen\n. Updated by trimediapro on 2008-07-08T05:37:40\nI found a bug in the previous file when rounding a number smaller than 0.1\nie. 0.01 or 0.001 or 0.0001 or 0.0052367 etc.\nI've made some changes to fix the bug.\nHere's the newer version of the NumberFormatter.as file.\n...Neil\n. Updated by mikechambers on 2008-07-08T15:57:04\nI put together a test case to check some edge cases for the addSeperator API, and the\nclass is failing some of them:\n```\n    public function testAddSeperator():void\n    {\n        assertTrue('NumberFormatter.addSeparator(1000, \",\") == \"1,000\"',\n                NumberFormatter.addSeparator(1000, \",\") == \"1,000\");\n    assertTrue('NumberFormatter.addSeparator(90, \",\") == \"90\"',\n            NumberFormatter.addSeparator(90, \",\") == \"90\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(90.00, \",\") == \"90.00\"',\n            NumberFormatter.addSeparator(90.00, \",\") == \"90.00\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(90.0, \",\") == \"90.0\"',\n            NumberFormatter.addSeparator(90.0, \",\") == \"90.0\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(1000.00, \",\") == \"1,000.00\"',\n            NumberFormatter.addSeparator(1000.00, \",\") == \"1,000.00\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(1000.0, \",\") == \"1,000.0\"',\n            NumberFormatter.addSeparator(1000.0, \",\") == \"1,000.0\");\n\n    //fail\n    assertTrue('NumberFormatter.addSeparator(1000, \".\") == \"1.000\"',\n            NumberFormatter.addSeparator(1000, \".\") == \"1.000\");\n\n    assertTrue('NumberFormatter.addSeparator(123456789, \",\") == \"123,456,789\"',\n            NumberFormatter.addSeparator(123456789, \",\") == \"123,456,789\");\n\n    assertTrue('NumberFormatter.addSeparator(123456789, \"XXX\") == \"123XXX456XXX789\"',\n            NumberFormatter.addSeparator(123456789, \"XXX\") == \"123XXX456XXX789\");\n\n    //fail : causes infinite loop       \n    assertTrue('NumberFormatter.addSeparator(123456789, \"1\") == \"12314561789\"',\n            NumberFormatter.addSeparator(123456789, \"1\") == \"12314561789\");\n}\n\n```\n. Updated by trimediapro on 2008-07-09T03:28:52\nHi Mike...\nThanks for running the tests.\nHere's a new version with the fixes. \n...Neil\n. Updated by mikechambers on 2008-11-07T19:25:49\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-11-19T09:13:29\nThe Number conversion is done by the Flash Player top-level Number() conversion\nfunction.  When the parser reads numerical values in JSON, it builds a string\nrepresenting that number which the Flash Player converts then converts into an actual\nnumber value.  Since Flash Player is limited to just double, int, and uint, there\nreally aren't a lot of options here for handling \"really large\" numbers.\nIf you want to parse the number as a string and leave it as a string, enclose it in\nquotes:\n{\"myId\":\"123456789123456789\"}\nAdded label JSON\nOriginal ticket set status to WontFix (we converted to closed)\n. Updated by Denis.Amselem on 2009-01-10T01:13:19\nAnyone knows of an alternative json library that could handle that case in a more \ngraceful way then? When the xml data is coming from third party web services, we \ncan't control the format, and don't really want go mock with the returned data to arbitrarily stringify big numbers....\n. Updated by darron.schall on 2008-10-23T01:24:33\nThis isn't a bug per json.org.  When you encode a string in JSON, the resulting\noutput is a value enclosed in double-quotes.\n\"myString\" is valid JSON\nmyString is not\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by johncblandii on 2008-10-23T05:23:30\nWell if you're encoding json then calling getString() I expect an actual string not a\nstring with quotes around it because that that point if I send it to the server as a\nstring the server has extra quotes so saving the json now includes extra quotes.\nSee what I mean? I 100% get your point but sending to the server can be a pain, as\nwell as a few other things.\n. Updated by mikechambers on 2008-11-06T21:46:25\nThe zip code is out of date. Code from the source has been updated with the correct license information.\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2008-11-06T21:03:30\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2008-11-06T21:45:25\nWhich class is this in?\n. Updated by mikechambers on 2008-11-07T04:22:26\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by mikechambers on 2008-11-07T19:32:10\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-11-19T09:00:22\nFixed in r82 - http://code.google.com/p/as3corelib/source/detail?r=82\nAdded label JSON\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2008-11-06T20:20:54\nThanks for the bug report.  This was added as of revision 64.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-06T21:02:43\nThis has been fixed in revision 67.\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2008-11-06T20:13:55\nAdded label JSON\nAdded label strict\n. Updated by mikechambers on 2008-11-07T19:25:02\nOriginal ticket set owner to daniel.dura\n. Updated by darron.schall on 2008-11-20T16:53:39\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-12-23T15:14:47\nFixed in r83\n. Updated by darron.schall on 2008-12-23T15:15:07\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-06T21:01:00\nOriginal ticket set status to NotABug (we converted to open)\n. Closing NotABug status\n. Updated by mikechambers on 2008-11-06T21:00:47\nI am open to this if someone wants to volunteer to do the work.\n. Updated by arunkv on 2008-11-09T04:04:09\nHere's what is required: Run this command:\nmvn deploy:deploy-file \\\n    -Dfile=as3corelib.swc \\\n    -Durl=file:///path/to/some/repo \\\n    -DgroupId=com.adobe \\\n    -DartifactId=as3corelib \\\n    -Dversion=0.92 \\\n    -Dpackaging=swc\nWhat this does is to deploy the as3corelib.swc file to /path/to/some/repo (using the\ngroupId, artifactId, version). After this if /path/to/some/repo is exposed on the\nweb, users will be able to refer to that web URL (by defining a repository in their\nMaven project) and use as3corelib as a dependency in their Maven projects.\nTemporary work around is for users to install the file into their local Maven repository:\nmvn install:install-file \\\n    -Dfile=as3corelib.swc \\\n    -DgroupId=com.adobe \\\n    -DartifactId=as3corelib \\\n    -Dversion=0.92 \\\n    -Dpackaging=swc \\\n    -DgeneratePom=true \\\n    -DcreateChecksum=true\n. Updated by arunkv on 2008-11-09T04:07:22\nSome Google Code projects use a portion of the SVN tree itself for the Maven\nrepository since it's already accessible on the web. For example:\n  http://flex-mojos.googlecode.com/svn/trunk/repository/\nis a Maven repository.\n. Updated by mohammedsaleem on 2008-11-09T12:01:11\nthere are two choices here = one is to use the flex-mojos project to use maven to \nbuild the project or as arun here says, which I feel is a much better option, is to \ndeploy the final artifacts into the repository.  \nit is imperative for you guys to come up with the group id and artifact ids, for the \nproject.\n. Updated by arunkv on 2008-11-09T13:54:13\nBTW I noticed that this project is using Ant for the build. There are some Maven Ant\ntasks available:\n  http://maven.apache.org/ant-tasks/index.html\nSpecifically the deploy task can be used in this project's build.xml:\n  http://maven.apache.org/ant-tasks/reference.html#install\n. Updated by darron.schall on 2008-10-23T02:19:48\nRemoved label Type-Defect\nAdded label Type-Patch\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2008-10-23T02:20:03\nOriginal ticket set owner to darron.schall\n. Updated by darron.schall on 2008-10-23T02:30:21\nFixed in revision 64 - http://code.google.com/p/as3corelib/source/detail?r=64\nThanks for submitting the patch!\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2008-11-06T20:22:51\nAdded label JSON\n. Updated by mikechambers on 2008-11-07T19:25:15\nOriginal ticket set owner to darron.schall\n. Updated by gurufaction on 2008-10-24T14:11:52\nThe patch I uploaded has duplicate code. I will upload a new patch.\n. Updated by gurufaction on 2008-10-24T14:16:09\nHere is the updated patch.\n. Updated by mikechambers on 2008-11-06T20:59:00\nOriginal ticket set owner to gurufaction\nRemoved label Type-Defect\nAdded label Type-Enhancement\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2008-11-06T23:47:35\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-06T20:59:36\nOriginal ticket set owner to mikechambers\nAdded label Type-Defect\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2008-11-12T07:56:16\nCan you try Flex SDK 3.2 nightly?\nIt was compiled with 3.2, which might be causing the problem. (If that is the problem, ill look at recompiling.\nYou can grab a 3.2 nightly from here:\nhttp://opensource.adobe.com/wiki/display/flexsdk/Download+Flex+3\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by wuppertare on 2008-11-13T16:11:28\nSomeone else reported the same problem in flexforum.de, it definitely is an issue\nwith the SWC being compiled in 3.2 as this uses some of the \"Marshall Plan\" features\nthat aren't in 3.1 and below.\nCould you recompile the SWC with 3.1 so users who don't want to (or cannot) use 3.2\nyet have a chance to still use corelib?\nThanks!\n. Updated by henrynnguyen on 2008-11-13T17:24:17\nThanks Mike, your suggestion fixed the issue.\n. Updated by mikechambers on 2008-11-15T17:39:23\nFixed in the .92.1 build.\nCompiled using Flex 3 (was using Flex 3.2 before).\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-12T07:57:07\nWhat version of Flex Builder are you using?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by steven.j.henderson on 2008-11-12T08:22:24\nHi Mike,\nFlex Builder 3-Professional Edition - Educational\nThanks!\nSteve\n. Updated by steven.j.henderson on 2008-11-12T08:23:58\nSorry that's build 3.0.1.205647 (ed version)\n. Updated by basil.whitehouse on 2008-11-12T19:22:21\nI'm having similar problems when using flex-mojos (2.0M7) which I uses the OEM\ncomplier, version 3.1.0.2710 I think.\n. Updated by charlie.hubbard on 2008-11-13T13:41:49\nI too am seeing this problem as well.  I'm using FlexBuilder3 build (3.0.194161). \nI'm thinking about just extracting the source code I need and using it that way.\n. Updated by wuppertare on 2008-11-13T16:12:31\nthe issue is that the SWC was compiled with the nightly build of Flex SDK 3.2 which\nis incompatible with older versions.\nSee this Issue:\nhttp://code.google.com/p/as3corelib/issues/detail?id=78\n. Updated by charlie.hubbard on 2008-11-13T16:34:10\nWhen will there be a build compatible with pre 3.2 versions of the Flex SDK?\n. Updated by mikechambers on 2008-11-15T17:10:23\nIf you compile against the source, does everything work?\n. Updated by mikechambers on 2008-11-15T17:39:00\nFixed in the .92.1 build.\nCompiled using Flex 3 (was using Flex 3.2 before).\n. Updated by mikechambers on 2008-11-15T17:39:08\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2008-11-15T17:09:54\nWhat version of the SDK are you using? If you compile against the source does it work?\n. Updated by mikechambers on 2008-11-15T17:38:39\nFixed in the .92.1 build.\nCompiled using Flex 3 (was using Flex 3.2 before).\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by chriswestin42 on 2008-11-19T16:05:07\nNote that above I was trying to use Vista's native explorer to extract.  I tried to \nuse gunzip (from a cygwin shell) and got a similar error.  I downloaded winzip and I \ncan extract fine with that, so I'm guessing the latest version of winzip is doing \nsomething to funny knock out their free competition.\n. Updated by chriswestin42 on 2008-11-19T16:09:51\nOne more note:  if I wget the .zip on a unix box, and use standard unix unzip (not \ngnu gunzip), I can extract.  So its Vista Explorer and gunzip that have problems, \nbut winzip 12 and unix unzip work fine.\n. Updated by mikechambers on 2008-11-25T22:47:48\nWhat folders are replicated?\nIs vista maintaining directories when it uncompresses it?\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by darron.schall on 2008-12-10T16:46:17\nThe JSON string you're trying to decode does not conform to the syntax specified at\njson.org.  Specifically, { success:true } should have been encoded as {\n\"success\":true } per the spec.\nOriginal ticket set owner to darron.schall\nAdded label Type-Defect\nAdded label JSON\nAdded label strict\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by guzhigang on 2008-12-25T07:19:56\nThanks for your time! I know it.\n. Updated by rajhgis on 2010-01-21T10:02:13\nhi can u please find the error in this Json result i could not able to trace out.\n{ \"SrchResults\":[ {\"FeatCount\":\"1\"},{\n\"DESCRIPTION\":\"\",\"PHOTOURL\":\"\",\"HYPERLINK\":\"\",\"ADDRESSTYPE\":\"\",\"ADDRESSBLOCKHOUSENUMBER\":\"6\",\"ADDRESSSTREETNAME\":\"Palm\nRoad\",\"ADDRESSFLOORNUMBER\":\"\",\"ADDRESSUNITNUMBER\":\"\",\"ADDRESSBUILDINGNAME\":\"\",\"ADDRESSPOSTALCODE\":\"456441\",\"LANDXADDRESSPOINT\":\"\",\"LANDYADDRESSPOINT\":\"\",\"NAME\":\"Siglap\nSouth Community Centre\nHall\",\"XY\":\"38836.53569571,32865.17891036\",\"ICON_NAME\":\"auditorium.png\"}]}\n. Updated by bungeye on 2009-09-26T13:36:09\nYou can just remove the top level if statement, that begins with if ( classInfo.@name.toString() == \"Object\" );\nProperties gathered by the for(var prop:String in object) loop are not exposed in the class definition xml. so you \ndon't get a double up.\nThere is also a \"IsDynamic\" flag on the class definition xml if you really want to look into it.\n. Updated by mikechambers on 2009-09-21T05:07:44\nNote : need to make sure this doesnt break the unit tests.\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:35:32\nFixed. Committed revision 109.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:53:14\nAdded label Priority-Low\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:52:06\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:51:39\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2009-07-08T19:08:33\nHi Marko,\nThis is definitely something to consider.  Other people have requested this type of functionality.  See this \nquestion on stack overflow: http://stackoverflow.com/questions/869780/streaming-parsers-json-xml-for-\nas3-flex-adobe-air-application\nI'm not sure of the best approach right now, but I'll take a look at this patch as well as the answer to the \nquestion on stack overflow and see if this warrants building support directly into the API, or if it just needs an \nexample added on the wiki about how to use this library when trying to read potentially incomplete data.\nAdded label Type-Patch\n. Updated by marko.kocic on 2009-07-09T10:28:56\nHi,\nI'm attaching the slightly improved version of the patch that was used in my\napplication. I know it is not ideal, since my goal was to modify as little as\npossible upstream code.\nI think that some support for streaming will be useful, especialy since it can be\nlocalized to separate class without affecting existing code.\n. Updated by darron.schall on 2009-08-03T00:59:21\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by darron.schall on 2009-08-03T00:35:29\nThis has been fixed since r38.  Trying using build .92.1 from the downloads page, or pull the latest code from \nthe trunk.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-08-03T00:36:49\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:50:48\nWhat doesnt work? The zip file?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by d...@onepica.com on 2010-03-01T19:00:22\nIt is nearly impossible to unzip/\"extract\" the ZIP file on Windows Vista because of\nall the Mac OS extension-less empty files (there is one for every folder, include\nsubfolders). I was only able to get everything out creating my own folders and then\ncopy/pasting files into them.\nI recommend: http://www.apple.com/downloads/macosx/automator/createcleanarchive.html\n. Updated by darron.schall on 2009-08-04T00:57:41\nI've tried to apply the optimizations outlined in that article, but they actually turn out to be slower than the \ncurrent implementation.  I've attached a patch to illustrate the changes I was using.\nFor 10k rows, the patched version is 20-50ms slower on my machine.\nIf I remove the error checking, then this version is indeed faster, but then the parser is no longer correct.\nSince the overall goal of this library is to be correct, I do not feel comfortable sacrificing correctness for speed \nin this case.\nI also tried using regular expressions to break some things apart, but that ends up being MUCH slower, \nespecially on larger strings.  The regular expression engine doesn't seem to perform well in my testing of \nlarge strings.\n. Updated by darron.schall on 2009-08-04T00:57:59\nOriginal ticket set status to WontFix (we converted to closed)\n. Updated by darron.schall on 2009-08-04T01:09:07\nIn testing again, it looks like the patched version actually is faster by 100ms or so on my 10k records test.  My \nmistake.  I also made a slight mistake in the patch that was causing the unit tests to fail, but have corrected that \nbefore check-in.\nThese changes have been made in r95.  All of the unit tests continue to pass.  However, if anyone runs into \nerrors, please file additional issues with reproducible test cases so I can expand the test cases.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by james.gallagher on 2009-08-28T11:19:48\nyes i have found the same problem,\nthis file is no longer available within the library, it has been removed.\nit is within the source files via the html viewing but once downloaded, the src file\nis no longer there and the .swf file does not contain it either.\nI am working with AJAX through HTML so I cannot simply add the source to my\napplication and then use it as far as I am aware, it must be in swf format, is this\ncorrect?\nThe above person who is using flex could be able to recreate all src file i think and\nthen use it as he wrote it himself without the .swf but i could be wrong?\nwhere can I find a working EncryptionKeyGenerater.swf??\n. Updated by handi.tan on 2009-11-09T17:37:05\nI hope that EncryptionKeyGenerator class just got accidentally removed instead of \npermantently removed.\n. Updated by chan.matthew on 2009-11-13T15:49:24\nYou can always download the source code and build the library yourself. There is a\nscript provided to do that.\n. Updated by darron.schall on 2009-08-03T00:47:05\nI'm not able to reproduce this.  Can you paste the JSON string that you're trying to decode?  Thanks!\nAdded label Type-Defect\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by jon_le_k...@hotmail.com on 2009-03-17T10:44:07\nPS : I'm using as3corelib-.92.1 with Flex Builder 3\n. Updated by NielsBjerg on 2009-03-31T11:12:39\nHave you tried using  var Test:Array = ArrayUtil.toArray(obj);\nThat would be my suggested solution...\n. Updated by jon_le_k...@hotmail.com on 2009-04-07T08:26:46\nThank you NielsBjerg, I've tried it and your solution works.\nI think it may be better than using the object immediatly like I'm doing now, thats\nwhy I will change it next time ;)\nThank you again for your solution ;)\n. Updated by darron.schall on 2009-07-08T19:02:50\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:49:44\nCan you post an example so we can reproduce the issue?\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by kopchickm on 2010-03-03T16:50:25\n\u00ff\u00d8\u00ff\u00e0 is what is what you see when you trace out the encoded data, essentially the\ntoString().  if you trace out the length, you should see that the whole byte array is\nthere.\n. Updated by darron.schall on 2009-07-08T19:02:13\nMarking as not a bug because I believe this is working as expected.  Consider the following test:\n```\npublic function testDecodeStringWithEscapedBackslashAndNewLines():void\n{\n    // Contains escaped and unescaped LF\n    var innerString:String= \"line1\\nline2\\nmore line2\";\n    // Decode an object that has the inner string inside of it\n    var o:* = JSON.decode( JSON.encode( innerString ) );\nassertEquals( innerString, o );\n\n}\n```\nThis test case passes.  The innerString value is exactly the same after going through an encode/decode \nprocess.\nIn your example, the reason you're seeing \"strange\" behavior is because the string is escaped before it has a \nchance to be decoded by the JSON library.  The string you're actually passing into JSON.decode looks like this:\n\"line1{newline character}line2{backslash character}nline3\"\nWhen the JSON decoder runs, it finds the backslash character immediately followed by an \"n\" and it converts \nthat to a {newline character}.  So, after the decode, the result ends up being: \n\"line1{newline}line2{newline}line3\".  That explains why the result differs from the original string you specified.\nRemember that a string must be properly encoded in order for it to be decoded correctly.\nAdded label json\nOriginal ticket set status to NotABug (we converted to open)\n. Updated by paleozogt on 2009-07-08T19:11:00\nSo what you're saying is that JSON.decode will accept malformed JSON?  Is that how it should work?  I \nthink its important that the decoder reject bad JSON.\nWe had a process that was emitting bad JSON (just like described in the bug).  JSON.decode would happily \naccept it.  It wasn't until we hooked up a java json decoder (which rejected the bad json) that we even \nrealized that there was a problem.\n. Updated by darron.schall on 2009-07-08T19:22:36\nI understand what you're saying now.  The JSON string \"line1{newline character}line2\" is technically malformed \nbecause the {newline character} is not escaped to \"\\n\".  The JSON decoder is not throwing an error when \nprocessing this malformed string.\nI'll update the tokenizer to throw a parse error in strict mode when unescaped control characters (\\u0000 \nthrough \\u001F) are found in strings.  \nIn non-strict mode, I won't change the behavior because the idea of the non-strict mode is to parse the JSON \nthe best that we can even if the string is malformed.\nAdded label Type-Defect\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2009-07-08T19:46:46\nFixed in r91.  Modified readString in the tokenizer to look for control characters.  \nCommit message: In JSON strict mode, when a string contains an unescaped control\ncharacter (0x00-0x1F) a parse error is now thrown because the spec indicates\nthat strings cannot contain unescaped control characters.\nIn non-strict mode, the error is ignored and the control character is \"passed\nthrough\" to the decoded string value.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-21T04:46:18\nOriginal ticket set owner to mikechambers\n. Updated by grayson.lang on 2009-06-18T20:10:17\nAdded label Performance\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-07-08T15:08:55\nAdded label Type-Defect\nAdded label json\n. Updated by darron.schall on 2009-07-08T20:38:29\nFixed in r92 - [Transient] metadata is now respected by the encoder.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-08-15T16:50:11\nIssue 116 has been merged into this issue.\n. Updated by pierre.chambon on 2010-02-27T21:25:52\nIs this really fixed?\nI just downloaded the latest version, added [Transient] to a property which holds a \nSprite and serializing eats up tons of memory and CPU before crashing.\nIf I comment out the property holding the Sprite, all the other properties being \nStrings or Number, the serialization works fine.\nThanks a lot\n. Updated by darron.schall on 2009-07-08T15:08:07\nCan you describe what you're interested in extending?  I'm hesitant to just generically move everything from \nprivate to protected.  \nIf I understood better what your end goals are, then I can determine which methods can be safely marked as \nprotected while still keeping the integrity of the library.\nAdded label json\n. Updated by wolever on 2009-07-08T19:28:44\nI want to extend the encoder/decoder and teach it how to serialize my custom classes (for example, so it will \nencode dates in a particular format).\nI'm curious, though, what you mean by \"keeping the integrity of the library\". What do you think would happen if \nmethods were protected instead of private?\n. Updated by darron.schall on 2009-07-08T20:16:09\nI think, in this case, it would be better to add hooks that you can extend for these particular areas.\nFor example, in JSONEncoder the convertToString() private method is a good one to mark as protected.  You \ncan extend this with code like:\nif ( value is Date )\n{\n    return customDateEncoder( value );\n}\nelse\n{\n   return super. convertToString( value );\n}\nHowever, a more complicated method such as objectToString shouldn't necessarily be easily extendable \nbecause there are no places to really change the behavior with a subclass.  JSON objects have to be encoded \nin a certain way, and trying to override this method would be difficult.  You would essentially have to just \"roll \nyou own\" anyway.  \nMaking convertToString() protected would enable this approach since you can decide in there whether or not \nyou want default functionality.\nThat's what I mean when I say \"keeping the integrity of the library\".  I think it's better to expose custom object \nserialize/deserialize hooks rather than generically make the guts of the library protected.  The library is \ndesigned around JSON syntax, so the extension points are really minimal here.\nUnforunately, the way the class is designed, it's hard to \"swap out\" which encoder/decoder you want to use \nbecause these are not parameterized in the static methods.  In the process of updating the library to support \nthis, it probably makes sense to add a parameter for encoderClass to JSON.encode that defaults to the current \nJSONEncoder so you can more easily swap out your own implementation should you want custom \nserialization.. something like:\npublic static function encode( o:Object, encoderClass:IJSONEncoder = null ):String\nLet me think about this some more.  It warrants some discussion, and would probably be better discussed on \nthe mailing list.\nAdded label Type-Enhancement\n. Updated by wolever on 2009-07-09T14:38:56\nAgreed \u2013 convertToString would be a good place to allow overriding.\nI think I understand what you mean by \"keeping the integrity of the library\"... And although I would argue that \nit's still not strictly necessary (that is, it's better to warn the programmer that it's a bad idea to poke around \nhere, but still give them the option), I can also see some benefit to the added restriction. So I'll pipe down \nabout that :)\nAnd, yea \u2013 when I did my implementation, I ran into the same problem with the static methods. To get around \nit, I subclassed the JSON class... But that's not a great general \u2013 passing it as an argument does seem better.\nAnyway, thanks for your work on this library\u00a0\u2013 it's much appreciated.\n. Updated by mikechambers on 2009-09-21T05:09:38\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:48:04\nThis issue was closed by revision r112.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:48:30\nFixed. Committed revision 112.\nThanks for the report and patch.\n. Updated by alec...@googlemail.com on 2009-07-24T07:41:56\nproposed patch for trivial change\n. Updated by mikechambers on 2009-09-21T04:45:53\nOriginal ticket set owner to mikechambers\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:45:27\nThis issue was closed by revision r111.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:45:48\nFixed. Committed revision 111.\nThanks for the report and patch.\n. Updated by darron.schall on 2009-08-02T20:10:32\nI don't think this is a bug in the JSON parser in strict mode.  According to the RFC, whitespace is defined as:\nws = *(\n                %x20 /              ; Space\n                %x09 /              ; Horizontal tab\n                %x0A /              ; Line feed or New line\n                %x0D                ; Carriage return\n            )\nCharacter 160 is a non-breaking space, and not valid JSON whitespace.\nHowever, if the parser is used in non-strict mode then I can deal with this better by including the non-\nbreaking space as whitespace.\nAdded label strict\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by darron.schall on 2009-08-03T00:18:47\nFixed in r93\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-21T05:39:00\nOriginal ticket set owner to christian.cantrell\nOriginal ticket set status to Accepted (we converted to open)\n. Updated by mikechambers on 2009-09-22T07:43:24\nThis issue was closed by revision r110.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by mikechambers on 2009-09-22T07:43:51\nFix. Committed revision 110.\nThanks for the report and patch.\n. Updated by darron.schall on 2009-08-15T16:50:11\nWhat version were you using?  This should've been fixed as of r92.\nOriginal ticket set status to Duplicate (we converted to closed)\n. Updated by darron.schall on 2009-08-15T17:06:16\nThe [Transient] part was already working, but there was an exception being thrown for illegal read on write-only \nproperties when encoding custom classes.  That has been fixed in r96.\nThanks for helping to make the library better.  :-)\n. Updated by vmliu1 on 2010-01-12T20:48:21\nPlease provide separate distribution for Flex and AIR.\n. Updated by darron.schall on 2009-08-24T13:20:40\nFixed in r97, thanks.  I actually had a test for this, but the test was incorrect (didn't escape the \"\\\" before the u, \nwhich meant it the escape sequence wasn't actually an escape sequence by the time it was decoded... doh!).  \nFixing the test highlighted the problem, and your patch worked great to make the test pass.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2009-09-03T14:11:25\nPlease attach the JSON string you are trying to decode so we can identify the potential issue.  You might also \nwant to try making sure the JSON string is valid by running it through the online validator at: \nhttp://www.jsonlint.com/\n. Updated by darron.schall on 2009-09-03T14:11:35\nOriginal ticket set status to NeedMoreInfo (we converted to open)\n. Updated by mopics25 on 2009-11-20T12:53:09\nhere's some code that gives this Error :\n. Updated by scitronpousty on 2010-01-07T21:56:45\nI checked my JSON on jsonlint and it validates and I also get the unexpected o issue.\nI searched for a word beginning with o that was not escaped properly and cannot find it.\n. Updated by scitronpousty on 2010-01-07T22:02:31\nParsing works though if I use this construct instead:\nvar decoder:JSONDecoder = new JSONDecoder(resultString);\nvar resultObject:Object = (decoder.getValue() as Object);\nvar features:Array = new Array(resultObject[\"features\"]);\n. Updated by rahul.schaudhary on 2010-02-09T11:59:20\nI have also fallen into same situation. The only difference is that I am getting-\nUnexpected j error.\nI also have validated my JSON string using the tool provided.\nDo we have some solution to it?\n. Updated by ugommirikwe on 2010-04-13T12:34:51\nI had the same issue too, but I discovered the problem was that I didn't indicate in \nthe \"resultFormat\" property of the HTTPService object as \"text\". I change this \nproperty to text and that error went away. Infact you don't have to use the method \nsuggested by scitronpousty; just write your code the normal way: JSON.decode\n(e.result.toString())..\nHope this helps someone.\n. Updated by Benjamin.Lowenstein on 2010-07-09T22:01:36\nThe workaround in #5 worked well for me for this exact error.\nimport com.adobe.serialization.json.JSONDecoder;\nvar decoder:JSONDecoder = new JSONDecoder(myJSONstring);\nvar myJSONobj:Object = (decoder.getValue() as Object);\n. Updated by retrogamer4ever on 2009-09-21T05:11:19\nI say it's a good idea only if it really brings improvements and maybe perhaps keep a\nlegacy branch that has the flash player 9 support?\n. Updated by lukebayes on 2009-09-21T05:18:37\nHey Mike,\nPlease fork or branch so that the legacy code is left accessible and maintainable.... We're still doing the \noccasional AS2 project, and I imagine there will be people stuck with FP9 requirements for years to come.\n. Updated by oizys0 on 2009-09-21T05:20:06\nIf you notice some major improvements within a specific class, consider branching it\non a per-class basis..  if a single class only gets a minor improvement but another\ngets a major improvement, maintaining the branch for the minor improvement one isn't\nworth it.\n. Updated by katopz on 2009-09-21T05:21:17\nfor me...i think better separate as fp9 and fp10 in trunk\nwe did it in away3d, and also jiglib (i just add fp10 today for jiglib)\nthb, we love Vector typed but client still love fp9 via IE6 ! ;p\nanother pros for separate fp9/fp10 is we can use them for speed comparison too ... :)\n. Updated by mitsuru.takeuchi on 2009-09-21T06:27:47\nI agree with katopz opinion, that separate as fp9 and fp10.\nSome developers may have some trouble, but I think it is nonsense not to create fp10 version of corelib for fp9.\nWe will be easier to induce to fp10 if clients have many benefits by using fp10. So I think corelib should be \nseparate as fp9 and fp10.\n. Updated by mikechambers on 2009-09-21T07:05:41\nOne thing to keep in mind, is that whatever we do, it has to be easy to maintain (as we have few people working \non the project).\nSo, I dont want to maintain two branches / versions and releases.\n. Updated by dittgen on 2009-09-21T07:12:57\nThis leads to the question: Is it possible to test for the FP version and offer\ndifferent implementations just in one version? In Javascript you can check if method\ndo exist and react otherwise in another way. Would this be possible with AS3 or would\ncode that's only supported by FP10 break up when compiling for FP9?\n. Updated by neuropro...@gmail.com on 2009-09-21T07:24:57\nIf you can't support 2 versions, leave the FP9 version as it is and go for FP10. We\nneed the speed (and good excuses to convince clients to go for FP10)\n. Updated by mdw1980 on 2009-09-21T13:48:15\nDefinitely branch it.\n. Updated by troy.gilbert on 2009-09-21T13:55:46\nMy clients are still requiring FP9 for a lot of stuff, so definitely keep a branch around for bug fixes.\n. Updated by mitsuru.takeuchi on 2009-09-23T07:08:45\nIf you don't want to maintain 2 branches, I want you to maintain FP10 version and leave FP9 version as previous \nversion.\nThe reason is:\n1. Maybe FP9 (this means, \"previous Flash Player version\") version of as3corelib will be added new features.\n2. I want to know the merit of new features.\n3. Because as3corelib is under new BSD license, other developers can develop previous version of Flash Player if \nneeded.\n. Updated by mikechambers on 2009-09-22T07:49:11\nOriginal ticket set owner to thibault.imbert\n. Updated by mikechambers on 2009-09-22T08:13:15\nNote, one thing to consider when thinking about whether we have a static encode method, or require the use the \ncreate an instance of the encoding class, is whether we plan to eventually support an asynchronous encode \nmethod / api.\nRIght now, I think this would be useful as encoding can be pretty CPU intensive, although some of the \nperformance improvements we are considering might not make this as important.\nAnyways, we should consider this when designing the interface / api.\n. Updated by mikechambers on 2009-09-22T07:22:32\nFixed in revision 108.\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by flashtronaut on 2009-09-23T23:06:33\nI updated my update :)\nI added a method called \"callbackRetrieve\" that works exactly the same as the normal \n\"retrieve\" except that it takes a callback function as an extra argument and it calls \nthat callback function with the loaded file as an argument once the file is ready.\nSince each callbackRetrieve method creates a unique loader instance, it may be used \nto simultaneously retrieve multiple files without having to think about which file is \nready once the ResourceCache dispatched an ITEM_READY event.\nAlso added functionality to clean up and remove each loader instance once it's no \nlonger needed.\n. Updated by flashtronaut on 2009-09-24T14:38:58\nI added some description of the changes I made on my blog:\nhttp://blog.flashtronaut.com/2009/09/24/contribution-to-the-as3corelib-resourcecache-\nclass/\n. Updated by tjconsult on 2010-01-19T07:11:05\nI was about to include _as3_corelib in an ActionScript-only project of ours, but that's not an option because of \nthis and other flex dependencies (see also \nhttp://code.google.com/p/as3corelib/source/browse/trunk/src/com/adobe/air/logging/FileTarget.as). Because \nof the naming of this library, I presumed one of the rationales behind this project was independence of Flex. Flex \nalso has its own PNG encoder implementation and probably other overlapping functionality.\nIn the context of a single commit in the last 4 months, does it make sense to provide patches with the hope of \ninclusion?\n. Updated by mikechambers on 2009-11-19T15:20:07\nFixed in commit 113\nOriginal ticket set status to Fixed (we converted to closed)\n. Updated by darron.schall on 2010-01-06T14:42:51\nWould you be willing to submit a patch that contains the unit test to demonstrate the behavior, as well as the \ncorrection to the line of code you indicated about?\nThe new unit test should show that scenario 1b is currently failing, and then after making the change to the \ntokenizer the test (and all other pre-existing tests) should pass.\n. Updated by morten.barklund on 2010-01-11T15:52:36\nYou actually already have a test for it:\nhttp://code.google.com/p/as3corelib/source/browse/trunk/tests/src/com/adobe/serialization/json/JSONTest.as#115\nThis test should fail currently. I do not have Flex Builder nor FlexUnit, so I cannot\nverify with the proper setup. But if I write:\nJSON.decode( \"\\\"\\u0061\\\"\" )\nIt throws a runtime-error at me, so that test should definitely fail in any setup.\nCould you please execute this test in your local setup? Maybe there is a problem with\nthe test-case not catching the error properly, and thus it seems like the whole\ntest-case works as it never asserts some false.\nBut in fact the function testDecodeStringWithInvalidUnicodeEscape throws an error.\n. Updated by Touvan on 2010-02-17T21:54:32\noh, or maybe JSONTokenizer.as\n. Updated by Touvan on 2010-03-03T19:35:51\nI did this in JSONTokenizer, though I'm sure a property with the line number and a way to append it in the \nparseError (where the rest of the message is constructed) call would be more appropriate. This worked for my \nneeds though.\npublic function parseError( message:String ):void {\n    throw new JSONParseError(\n        message + \" (line \" + jsonString.substring(0, loc).split(\"\\n\").length +\")\",\n            loc, jsonString\n    );\n}\n. This was fixed in commit 064139a0ce1e0422bb6e23a03614157bc8d00edb\n. Updated by gae.local.test on 2010-07-12T05:41:54\nI made copy and paste errors.  The only thing that is wrong with the string it prints out is the missing colon after the drive letter.  I can't edit my post to fix it.\n. Related to #63\n. Fixed in commit 064139a0ce1e0422bb6e23a03614157bc8d00edb\n. This isn't a bug in the JSON decoder.  The behavior you are seeing stems from the use of a \"for..in\" loop to iterate over properties of an object.  Objects in AS3 are not \"ordered\".\nThe better way to encode this information would be to use an array [] instead of an object {}:\n. Does FlashDevelop provide a way to define compile-time constants used with MXMLC?  In FlashBuilder you can specify additional compiler arguments in the library propject properties in order to build.\nA few others have mentioned this as well.  It's a nice optimization but makes it hard for people to use the library as source because of the extra setup steps.\nI think the best solution is probably just to revert the change, and I'll create my own fork to include these optimizations.\n. I reverted the compile-time define change out.  The latest source can build without any additional setup required.  Change 24c6c16aecbf0d8fcc043ae671e689b0d4b4c559.\n. Hi Francis,\nFor those who want to leverage ActionJSON, they can simply head to the ActionJSON project itself.  It does not make sense to combine the projects at this point.\nThe as3corelib parser offers more flexibility which people have requested.  There are also ways to make it faster, specifically by removing a slow regular expression to test for correctness (note: the ActionJSON library does not pass all of the unit tests that as3corelib does - you can either choose robustness or speed).\nSee my notes about speed differences here: http://sites.google.com/a/darronschall.com/thoughts/home/2010-11-08-actionscript-3-json-libraries-and-as3corelib-json-updates\n. ",
    "seangenung": "Darron,\nI could really use that .net implementation you worked up, could you post some code on how you handled it. Is anyone working on adding this to as3corelib?\n. Darron,\nI could really use that .net implementation you worked up, could you post some code on how you handled it. Is anyone working on adding this to as3corelib?\n. ",
    "demauk": "For me, converting XML to JSON has three major issues to be resolved: a) what do to about the XML root element name? b) how to encode attributes? c) how to encode text nodes when the parent element has attributes or other element children? \nTo that end, I added an xmlToString() function to JSONEncoder and a JSONEncoderXMLOptions class as an optional parameter to the JSONEncoder constructor. Let's say you have this XML:\nxml\n<root>\n  <category>Sci-Fi</category>\n  <books>\n    <book id=\"1\">Text for Book 1</book>\n    <book id=\"2\">Text for Book 2</book>\n  </books>\n</root>\nOption omitRootElement:Boolean;\nSometimes you want the JSON version to simply be { \"books\" : [ etc. ] }. And sometimes you want everything: { \"root\" : { \"books\" : [ etc. ] } }.\nOption useAttributeAtSymbol:Boolean\nDefaults to true. Determines whether or not attributes should be encoded with an @ sign at the beginning, like \"@id\" : \"1\" I think this should be standard, but I've set it as an option because I've seen implementations where they don't use @. IMO, if you can't differentiate attributes, you can't turn the JSON back into XML.\nOption defaultSimpleContentLabel:String\nDefaults to #text. A simple element like <category> can have its text node as its only value, like \"category\" : \"Sci-Fi\". But the text node of <book> needs its own property name, which in this case would look like: \"book\" : { \"@id\" : \"1\", \"#text\" : \"Text for Book 1\" }.\nOther implementations use \"label\" but that's already a common property name for many actionscript objects.\nI'll see if I can offer a patch, at least as a reference.\n. I've pushed my changes to my fork: https://github.com/demauk/as3corelib/tree/master/src/com/adobe/serialization/json\nThere are kind of a lot of changes in that one commit. Sorry about that.\n. JSONEncoder.xmlToString() in this commit ignores XML attributes. There's no standard way to stringify them.\n<item id=\"1\">\n    <data>datastring</data>\n</item>\nCould be implemented as:\nitem : { \n  'id' : '1',\n  'data' : 'datastring'\n}\nOr:\nitem : { \n    '@id' : '1',\n    'data' : 'datastring'\n}\nAnother sticky point is an XML node with simple content and attributes. In the previous example the simple content was the sole text child of the <data> element. But consider this:\n<item id=\"1\">\n  datastring\n</item>\nAgain, there is no standard. I've seen this:\nitem : {\n  '@id' : '1',\n  'label' : 'datastring'\n}\nAnd this:\nitem : {\n  '@id' : '1',\n  '#text' : 'datastring'\n}\nSo, there should probably be an options object that can be passed to JSON.encode(), or directly to JSONEncoder() constructor, perhaps with this default content:\nxmlEncodingOptions = {\n  omitXmlRoot = true,\n  useAttributeAtSymbol = true,\n  defaultSimpleContentLabel = \"label\"\n}\nI'll see about these changes and issue another pull request with my example implementation.\n. For me, converting XML to JSON has three major issues to be resolved: a) what do to about the XML root element name? b) how to encode attributes? c) how to encode text nodes when the parent element has attributes or other element children? \nTo that end, I added an xmlToString() function to JSONEncoder and a JSONEncoderXMLOptions class as an optional parameter to the JSONEncoder constructor. Let's say you have this XML:\nxml\n<root>\n  <category>Sci-Fi</category>\n  <books>\n    <book id=\"1\">Text for Book 1</book>\n    <book id=\"2\">Text for Book 2</book>\n  </books>\n</root>\nOption omitRootElement:Boolean;\nSometimes you want the JSON version to simply be { \"books\" : [ etc. ] }. And sometimes you want everything: { \"root\" : { \"books\" : [ etc. ] } }.\nOption useAttributeAtSymbol:Boolean\nDefaults to true. Determines whether or not attributes should be encoded with an @ sign at the beginning, like \"@id\" : \"1\" I think this should be standard, but I've set it as an option because I've seen implementations where they don't use @. IMO, if you can't differentiate attributes, you can't turn the JSON back into XML.\nOption defaultSimpleContentLabel:String\nDefaults to #text. A simple element like <category> can have its text node as its only value, like \"category\" : \"Sci-Fi\". But the text node of <book> needs its own property name, which in this case would look like: \"book\" : { \"@id\" : \"1\", \"#text\" : \"Text for Book 1\" }.\nOther implementations use \"label\" but that's already a common property name for many actionscript objects.\nI'll see if I can offer a patch, at least as a reference.\n. I've pushed my changes to my fork: https://github.com/demauk/as3corelib/tree/master/src/com/adobe/serialization/json\nThere are kind of a lot of changes in that one commit. Sorry about that.\n. JSONEncoder.xmlToString() in this commit ignores XML attributes. There's no standard way to stringify them.\n<item id=\"1\">\n    <data>datastring</data>\n</item>\nCould be implemented as:\nitem : { \n  'id' : '1',\n  'data' : 'datastring'\n}\nOr:\nitem : { \n    '@id' : '1',\n    'data' : 'datastring'\n}\nAnother sticky point is an XML node with simple content and attributes. In the previous example the simple content was the sole text child of the <data> element. But consider this:\n<item id=\"1\">\n  datastring\n</item>\nAgain, there is no standard. I've seen this:\nitem : {\n  '@id' : '1',\n  'label' : 'datastring'\n}\nAnd this:\nitem : {\n  '@id' : '1',\n  '#text' : 'datastring'\n}\nSo, there should probably be an options object that can be passed to JSON.encode(), or directly to JSONEncoder() constructor, perhaps with this default content:\nxmlEncodingOptions = {\n  omitXmlRoot = true,\n  useAttributeAtSymbol = true,\n  defaultSimpleContentLabel = \"label\"\n}\nI'll see about these changes and issue another pull request with my example implementation.\n. ",
    "yerboogieman": "I am working on modifying the com.adobe.serialization.json.JSON* classes to resolve this issue.  Would you like the code?\n. I am working on modifying the com.adobe.serialization.json.JSON* classes to resolve this issue.  Would you like the code?\n. ",
    "deniszgonjanin": "A maven repo for this would be great. Using the old as3corelib svn repo on googlecode would work well.\n. A maven repo for this would be great. Using the old as3corelib svn repo on googlecode would work well.\n. ",
    "mikechambers": "Can someone confirm whether this is fixed with the new release? .93?\n. Yeah, submit the pull request and I will check it out.\nmike\n. Yeah. The SWC hasnt been tested with 4.5. I would suggest that you try\nto link the source, instead of the SWC.\nHope that helps...\nmike\nOn Tue, Jul 19, 2011 at 8:43 PM, riahut-dot-com\nreply@reply.github.com\nwrote:\n\nAfter using as3corelib in my project getting the following message when trying to edit UI in Design Mode:\nD:..Projects\\Client\\libs\\as3corelib.swc- DesignAssetLoader.CompleteTimeoutSWC file failed to load. Any component dependent on this SWC file will not be displayed in the Design Mode.The SWC may have failed to load because of:\n- \u00a0Incompatible definitions caused by usage of a different SDK version\n- \u00a0Missing referred class definitions\nFlash builder 4.5.1, Flex SDK 4.5.1\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mikechambers/as3corelib/issues/171\n. Can someone confirm whether this is fixed with the new release? .93?\n. Yeah, submit the pull request and I will check it out.\n\nmike\n. Yeah. The SWC hasnt been tested with 4.5. I would suggest that you try\nto link the source, instead of the SWC.\nHope that helps...\nmike\nOn Tue, Jul 19, 2011 at 8:43 PM, riahut-dot-com\nreply@reply.github.com\nwrote:\n\nAfter using as3corelib in my project getting the following message when trying to edit UI in Design Mode:\nD:..Projects\\Client\\libs\\as3corelib.swc- DesignAssetLoader.CompleteTimeoutSWC file failed to load. Any component dependent on this SWC file will not be displayed in the Design Mode.The SWC may have failed to load because of:\n- \u00a0Incompatible definitions caused by usage of a different SDK version\n- \u00a0Missing referred class definitions\nFlash builder 4.5.1, Flex SDK 4.5.1\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mikechambers/as3corelib/issues/171\n. \n",
    "gutomaia": "I found this great. I've some experience with this. I will try to close this issue and do a pull request :D\n. I found this great. I've some experience with this. I will try to close this issue and do a pull request :D\n. ",
    "jayarjo": "+1\nIt keeps timing out on hi-res images. Nearly useless there :(\n. +1\nIt keeps timing out on hi-res images. Nearly useless there :(\n. ",
    "LexLythius": "Please note that \n  file://c:/path/to/toexample.txt\nis actually a broken URI. It should encode to \n  file:///c:/path/to/toexample.txt\nwhich equates to\n  file://localhost/c:/path/to/toexample.txt\n. Please note that \n  file://c:/path/to/toexample.txt\nis actually a broken URI. It should encode to \n  file:///c:/path/to/toexample.txt\nwhich equates to\n  file://localhost/c:/path/to/toexample.txt\n. ",
    "shrimpwagon": "Anything?\n. Sweet, that will work. Thank you so much.\n. Anything?\n. Sweet, that will work. Thank you so much.\n. ",
    "ghost": "Of course, I could do some extra setup steps to use library, but not everybody can. Sometimes sources could be compiled by non-coders at all (some clients or designers) and there could be a challenge for them to configure IDE and add compile-time constant.\n. Thank you for fast response and fix.\nIt's all good now.\n. I think most of you might have already figured out the solution for this by now. I am writing this to help out new comers to FB.\nThe \"Cannot resolve a multiname reference unambiguously json\" problem occurs since the new sdk has an AIR service defined with the same name. The easiest work around for this is to change the JSON from all uppercase to all lowercase letters and you are good to go. \nex:\nchange this - com.adobe.serialization.json.JSON\nto this - com.adobe.serialization.json.json (Rename the 'JSON.as' to 'json.as' and change it in the class name)\nHope this helps to those who are looking fro this. :+1:\n. Of course, I could do some extra setup steps to use library, but not everybody can. Sometimes sources could be compiled by non-coders at all (some clients or designers) and there could be a challenge for them to configure IDE and add compile-time constant.\n. Thank you for fast response and fix.\nIt's all good now.\n. I think most of you might have already figured out the solution for this by now. I am writing this to help out new comers to FB.\nThe \"Cannot resolve a multiname reference unambiguously json\" problem occurs since the new sdk has an AIR service defined with the same name. The easiest work around for this is to change the JSON from all uppercase to all lowercase letters and you are good to go. \nex:\nchange this - com.adobe.serialization.json.JSON\nto this - com.adobe.serialization.json.json (Rename the 'JSON.as' to 'json.as' and change it in the class name)\nHope this helps to those who are looking fro this. :+1:\n. ",
    "elsassph": "Same with Flex 4.5, very annoying.\n. I found the relevant ASDoc bug:\nhttp://bugs.adobe.com/jira/browse/ASC-4145\nSolution was to remove all the @see #someMethod entries and this part passed.\nBut there's another problem: URI.as has a few errors - one missing [/P] and some '&' characters not written as '& amp;'. ASDoc error log somewhat indicate where they are located.\nI won't fork the project just for that so I hope the authors fix the mess themselves...\n. Same with Flex 4.5, very annoying.\n. I found the relevant ASDoc bug:\nhttp://bugs.adobe.com/jira/browse/ASC-4145\nSolution was to remove all the @see #someMethod entries and this part passed.\nBut there's another problem: URI.as has a few errors - one missing [/P] and some '&' characters not written as '& amp;'. ASDoc error log somewhat indicate where they are located.\nI won't fork the project just for that so I hope the authors fix the mess themselves...\n. ",
    "kachurovskiy": "Mike,\nPlease check this out and decide whether we need this in as3corelib and if yes - what class names / packages should I use in pull request:\nDemo - http://kachurovskiy.com/f/ria/11/date/DateDurationApp.html\nSource - http://kachurovskiy.com/f/ria/11/date/srcview/index.html\n. Mike,\nPlease check this out and decide whether we need this in as3corelib and if yes - what class names / packages should I use in pull request:\nDemo - http://kachurovskiy.com/f/ria/11/date/DateDurationApp.html\nSource - http://kachurovskiy.com/f/ria/11/date/srcview/index.html\n. ",
    "matthew-dean": "Does anyone have the Adobe Air libraries already compiled? Not sure the easiest way to build, but the FlexSDK doesn't seem to do the trick.\n. Does anyone have the Adobe Air libraries already compiled? Not sure the easiest way to build, but the FlexSDK doesn't seem to do the trick.\n. ",
    "astronaute77": "I think the problem is in DateUtil.getShortMonthIndex, it is locale dependent so it fails if non english locale is set.\nMaybe it shouldn't be local dependent as it is intended for loading RSS feeds where the date is always in english ?\nI created a fork where the locale is ignored (always english) for DateUtil.getShortMonthIndex if that can help someone:\nhttps://github.com/astronaute/as3corelib\n. I think the problem is in DateUtil.getShortMonthIndex, it is locale dependent so it fails if non english locale is set.\nMaybe it shouldn't be local dependent as it is intended for loading RSS feeds where the date is always in english ?\nI created a fork where the locale is ignored (always english) for DateUtil.getShortMonthIndex if that can help someone:\nhttps://github.com/astronaute/as3corelib\n. ",
    "peterver": "Shuffling something isn't really a prime feature ... it's not necessary for wide usage. As such i think it'd be not a good idea to add as it would increase the swc size ( without needing it most of the time ). If you need a shuffling function then i suggest taking the source and extending it :) ( it's not that hard to write one ) \n. Shuffling something isn't really a prime feature ... it's not necessary for wide usage. As such i think it'd be not a good idea to add as it would increase the swc size ( without needing it most of the time ). If you need a shuffling function then i suggest taking the source and extending it :) ( it's not that hard to write one ) \n. ",
    "npvathi": "I created a new flex library for as3corelib and added the src to my flex desktop project (FlashBuilder sdk: 4.5.1, win) and it says it has a problem for recognizing JSON. I am trying out the example Json as specified in the examples folder. \nDescription Resource    Path    Location    Type\n1120: Access of undefined property JSON.\nCan not resolve a multiname reference unambiguously. JSON (from C:...\\Adobe Flash Builder 4.5\\sdks\\4.5.1\\frameworks\\libs\\air\\airglobal.swc(JSON, Walker)) and com.adobe.serialization.json:JSON (from C:\\Users\\xxx\\Downloads\\Json\\as3corelib-.93\\lib\\as3corelib.swc(com.adobe.serialization.json:JSON)) are available. \n. I created a new flex library for as3corelib and added the src to my flex desktop project (FlashBuilder sdk: 4.5.1, win) and it says it has a problem for recognizing JSON. I am trying out the example Json as specified in the examples folder. \nDescription Resource    Path    Location    Type\n1120: Access of undefined property JSON.\nCan not resolve a multiname reference unambiguously. JSON (from C:...\\Adobe Flash Builder 4.5\\sdks\\4.5.1\\frameworks\\libs\\air\\airglobal.swc(JSON, Walker)) and com.adobe.serialization.json:JSON (from C:\\Users\\xxx\\Downloads\\Json\\as3corelib-.93\\lib\\as3corelib.swc(com.adobe.serialization.json:JSON)) are available. \n. ",
    "DjTriple7": "Did you ever find a resolution to this? I am having the same issue with Flash Builder 4.5.1 w/AIR 3 on OS X (using the source, not SWC).\nThanks!\n. Did you ever find a resolution to this? I am having the same issue with Flash Builder 4.5.1 w/AIR 3 on OS X (using the source, not SWC).\nThanks!\n. ",
    "jwb": "If you're using AIR, you probably want the JSON class that's included in 4.5.1. Use the standard JSON.stringify and JSON.parse instead of the as3corelib implementation which doesn't implement the ECMA standard. I'm gonna post a pull request with a version that deprecates the ad hoc API and implements a compatible subset of the ECMA spec.\n. If you're using AIR, you probably want the JSON class that's included in 4.5.1. Use the standard JSON.stringify and JSON.parse instead of the as3corelib implementation which doesn't implement the ECMA standard. I'm gonna post a pull request with a version that deprecates the ad hoc API and implements a compatible subset of the ECMA spec.\n. ",
    "muni2explore": "i had found the following when i importing as3 api files into flex 4.6 development environment the following error\nAccess of undefined property JSON.\nAccess of undefined property JSON.\nCannot resolve a multiname reference unambiguously json\nfind the solution for the above error in the following URL\nhttp://www.smarttutorials.net/cannot-resolve-a-multiname-reference-unambiguously-json-in-flash-builder-4-6-with-smartfox-server/\n. i had found the following when i importing as3 api files into flex 4.6 development environment the following error\nAccess of undefined property JSON.\nAccess of undefined property JSON.\nCannot resolve a multiname reference unambiguously json\nfind the solution for the above error in the following URL\nhttp://www.smarttutorials.net/cannot-resolve-a-multiname-reference-unambiguously-json-in-flash-builder-4-6-with-smartfox-server/\n. ",
    "WORMSS": "I am afraid to say you have not accounted for all types of vectors.\nIf you do some tests you will finds that not all vectors extend Vector.<*>.\nYes, I know, I know.. Its evil.\nUse \nelse if ( value is Array || value is Vector.<*> || value is Vector.<Number> || value is Vector.<uint> || value is Vector.<int> )\n. @IQAndreas Thank you. I think the end of your message got cut off. (Atleast on my screen)\n@brianreavis Not a giant IF, only 4 (5 including Array). There are only 4 types of Vectors, Number, uint, int and *(wildcard). Numbers are treated differently for performance considerations.\n. I removed the limit of arrayToString having to accept a Array and had it accept *.\nSince behide the scenes Array and Vector pretty much work in identical ways from a flash proxy point of view, I just used the same function for both.\nAnother solution would be to just make a vectorToArray, which is super easy to do, and then send the array via arrayToString.\nNo duplication of code for both types of list that way.\n. I am afraid to say you have not accounted for all types of vectors.\nIf you do some tests you will finds that not all vectors extend Vector.<*>.\nYes, I know, I know.. Its evil.\nUse \nelse if ( value is Array || value is Vector.<*> || value is Vector.<Number> || value is Vector.<uint> || value is Vector.<int> )\n. @IQAndreas Thank you. I think the end of your message got cut off. (Atleast on my screen)\n@brianreavis Not a giant IF, only 4 (5 including Array). There are only 4 types of Vectors, Number, uint, int and *(wildcard). Numbers are treated differently for performance considerations.\n. I removed the limit of arrayToString having to accept a Array and had it accept *.\nSince behide the scenes Array and Vector pretty much work in identical ways from a flash proxy point of view, I just used the same function for both.\nAnother solution would be to just make a vectorToArray, which is super easy to do, and then send the array via arrayToString.\nNo duplication of code for both types of list that way.\n. ",
    "brianreavis": "@WORMSS That's not the best approach, considering a vector can contain any type of object. Chaining together a giant if statement to handle vectors of ints, uints, Numbers, etc is going to get out of control really fast... and you'll always be missing user-defined types. A better way would be to use describeType() in flash.utils:\nif (describeType(value).@name.toString().indexOf('__AS3__.vec::Vector.') == 0) {\n   // ...   \n}\n. @IQAndreas @WORMSS There are more than four types of vectors. Try it:\nvar test:Vector.<FileReference>;\ntrace((test is Vector.<*>) ? \"true\" : \"false\");\ntrace((test instanceof Vector.<*>) ? \"true\" : \"false\");\n// both yield \"false\"\n. Snap, you're right! Der, my bad.\n. @WORMSS That's not the best approach, considering a vector can contain any type of object. Chaining together a giant if statement to handle vectors of ints, uints, Numbers, etc is going to get out of control really fast... and you'll always be missing user-defined types. A better way would be to use describeType() in flash.utils:\nif (describeType(value).@name.toString().indexOf('__AS3__.vec::Vector.') == 0) {\n   // ...   \n}\n. @IQAndreas @WORMSS There are more than four types of vectors. Try it:\nvar test:Vector.<FileReference>;\ntrace((test is Vector.<*>) ? \"true\" : \"false\");\ntrace((test instanceof Vector.<*>) ? \"true\" : \"false\");\n// both yield \"false\"\n. Snap, you're right! Der, my bad.\n. ",
    "IQAndreas": "@brianreavis Actually, Wormss is correct. \nNumber, uint, and int Vectors are registered as completely different classes and optimized in some fashion to be as fast as possible. Every other Vector class extends Vector.<*>.\nThe method proposed by Wormss would also be much faster than using describeType.\n. @WORMSS I hit the submit button to early, but went back and edited the message. You were simply too quick to the keyboard. ;)\nI noticed another problem with the proposed changes, you can't convert a Vector to an Array like this:\nvector as Array\nYou simply get a null value (at least in my tests)\nI modified the JSONEncoder class further to completely support Vectors now. I haven't actually tested it, but it should work in theory:\nhttps://github.com/IQAndreas/as3corelib/commit/27b43ea2b51f8bf57e2337292c7837d48f98835a\nDoes anyone want to test it in a project and see if it works properly?\nAlso, what is the standard in case a \"non-vector\" is passed to the function vectorToString()? Should it return \"\" or \"[]\", or perhaps throw an error? It doesn't actually matter at the moment since the function is private, but still, it doesn't hurt to be proper. :-/\n. @brianreavis That's because the test variable is null.\nYou need to set it to a non-null value for the code to work properly:\n```\nvar test:Vector. = null;\n// all yield \"false\"\ntrace(test is Vector.<>);\ntrace(test instanceof Vector.<>);\ntrace(test is Vector.);\ntest = new Vector.();\n// all yield \"true\"\ntrace(test is Vector.<>);\ntrace(test instanceof Vector.<>);\ntrace(test is Vector.);\n```\n. @brianreavis Actually, Wormss is correct. \nNumber, uint, and int Vectors are registered as completely different classes and optimized in some fashion to be as fast as possible. Every other Vector class extends Vector.<*>.\nThe method proposed by Wormss would also be much faster than using describeType.\n. @WORMSS I hit the submit button to early, but went back and edited the message. You were simply too quick to the keyboard. ;)\nI noticed another problem with the proposed changes, you can't convert a Vector to an Array like this:\nvector as Array\nYou simply get a null value (at least in my tests)\nI modified the JSONEncoder class further to completely support Vectors now. I haven't actually tested it, but it should work in theory:\nhttps://github.com/IQAndreas/as3corelib/commit/27b43ea2b51f8bf57e2337292c7837d48f98835a\nDoes anyone want to test it in a project and see if it works properly?\nAlso, what is the standard in case a \"non-vector\" is passed to the function vectorToString()? Should it return \"\" or \"[]\", or perhaps throw an error? It doesn't actually matter at the moment since the function is private, but still, it doesn't hurt to be proper. :-/\n. @brianreavis That's because the test variable is null.\nYou need to set it to a non-null value for the code to work properly:\n```\nvar test:Vector. = null;\n// all yield \"false\"\ntrace(test is Vector.<>);\ntrace(test instanceof Vector.<>);\ntrace(test is Vector.);\ntest = new Vector.();\n// all yield \"true\"\ntrace(test is Vector.<>);\ntrace(test instanceof Vector.<>);\ntrace(test is Vector.);\n```\n. ",
    "armetiz": "I agree with @alecmce, any news ?\n. I agree with @alecmce, any news ?\n. ",
    "reado83": "Clearly this project is dead! No commits in 2 years!\n. Clearly this project is dead! No commits in 2 years!\n. ",
    "Zeragamba": "For those who happen upon here in 2 years time, the SWCs are available at https://github.com/mikechambers/as3corelib/downloads\n. For those who happen upon here in 2 years time, the SWCs are available at https://github.com/mikechambers/as3corelib/downloads\n. ",
    "brian428": "I think they'll need to either create a separate Flash 11 version of the swc, or rename/remove the JSON class in the next version (with an appropriate note about the change/removal). \n. I think they'll need to either create a separate Flash 11 version of the swc, or rename/remove the JSON class in the next version (with an appropriate note about the change/removal). \n. ",
    "haysclark": "+1.  The main issue that I'm running into is that the UnitTest don't run.  I think the simple resolution is hardcoding the com.adobe.serialization.json.JSON to the tests so Flash is not confused by the built in JSON class.\nThis library is still helpful today for people that still need to support Flash 9 players.\n. +1.  The main issue that I'm running into is that the UnitTest don't run.  I think the simple resolution is hardcoding the com.adobe.serialization.json.JSON to the tests so Flash is not confused by the built in JSON class.\nThis library is still helpful today for people that still need to support Flash 9 players.\n. ",
    "ChazUK": "I'm sorry but I'm going to bump this because I can't figure out how to fix this. And it kinda makes this class impossible to use!\nHas anyone else got this problem? And does anyone have a solution?\n. I'm sorry but I'm going to bump this because I can't figure out how to fix this. And it kinda makes this class impossible to use!\nHas anyone else got this problem? And does anyone have a solution?\n. ",
    "zechdc": "Solution\n\nGo to File > Publish Settings...\nChange Target from Flash Player 11 to Flash Player 10.3 or lower\n\nIf you need to publish in Flash Player 11 or greater then use the native flash JSON class. Look into the native JSON class and the static parse() and stringify() methods.\nSource:\nhttp://forums.adobe.com/message/4561200\n. # Solution\n1. Go to File > Publish Settings...\n2. Change Target from Flash Player 11 to Flash Player 10.3 or lower\nIf you need to publish in Flash Player 11 or greater then use the native flash JSON class. Look into the native JSON class and the static parse() and stringify() methods.\nSource:\nhttp://forums.adobe.com/message/4561200\n. ",
    "jhey": "thanks for the tip @ChazUK !\n. thanks for the tip @ChazUK !\n. ",
    "thyselius": "I resolved this by changing the name on the JSON class to AdobeJSON and then use AdobeJSON.decode() and .decode()\nQuick solution!\n. I resolved this by changing the name on the JSON class to AdobeJSON and then use AdobeJSON.decode() and .decode()\nQuick solution!\n. "
}