{
    "TooTallNate": "You need to call send(String) on an individual WebSocket instance to send an individual message. These are retrieved as the first parameter from any of the onOpen, onClose or onMessage callbacks, or via the connections property on the WebSocketServer instance.\nPerhaps it would be helpful to add a convenience function to the WebSocketServer class: send(WebSocket, String)?\nI urge you to look at the precompiled JavaDoc files inside the doc folder inside the repo for any more API questions.\n. Thanks for the fix. I suggest that you \"fork\" the repository, which will make a copy of this one under your profile, which you have write access to. From there you can push your fix to GitHub yourself, which I can review and pull.\n. Ok, I pulled your patch. Looks good! Thanks for spotting!\n. Fixed glitch with WebSocketClient where CPU usage would spike at 100%. Closed by 18ddfcf874c98cb70af0070c6b76c737650bf845.\n. In case you were wondering, it wasn't that the socket is able to write, and so it would return immediately, but rather that the selector was also listening for CONNECT, which happens always when the socket is connected. So the key was to be only selecting for READ operations.\nLet me know if you run into any problems!\n. Well that was easy :P\nThanks! Committed in bd9dbfda7166b945d2aac9a0bcfc57325a08a5c5.\n. Make WebSocketClient#close actually end the underlying Thread and socket connection. Closed by e5e21941b8a3402108bd79f28b82b5c571ee3bf4.\n. Only prepend a \"/\" onto the path when there isn't already one there. Closed by 4b2afeb0ae6218c5f2e43bc544145399a5745756.\n. You're trying to use Socket.IO with my WebSocket client? Awesome! I'm currently find most of my time being active in the Node.js community, so I definitely want to help you get this working.\nIn 2f819b410f9687896151dc13fb871beab905eff4, I changed the default draft for the WebSocketClient to DRAFT76. It actually doesn't make any sense for the client to ahere to AUTO, so thanks for pointing that out.\nIn c33f20cb2dbe380309e78685d41bfef1bd27d996 I moved the WebSocketListener.Draft class into it's own source file. Hopefully that should take care of the conversion errors Scala exhibits, and allow you to create WebSocketClient instances and specify the Draft it should comply to.\nLet me know if this fixes it for you!\n. There's currently no onError method, though there should be. Perhaps you could prepare a patch :P\nI'll get around sometime soon hopefully. In the meantime, I suggest placing some log statements throughout the handshake logic and recompiling, to maybe see where something is going wrong. Or using a wire sniffer (Wireshark) to get a view of what's going on that way. Sorry I can't be more help right now!\n. @anismiles It would be helpful if you forked and commited the changes as something merge-able\n. Closing since I got confirmation from @dokipen that this lib does in fact connect successfully to Socket.IO servers, there just needs to be an additional layer on top of this lib that strips away the Socket.IO messaging protocol (i.e. parses JSON, reads heartbeats, session ID, etc.).\n. Thanks! Makes me realize I really need unit tests for this lib...\n. Hey @swax, I want to merge this optimization, but the current patch is way too messy. Would you mind opening a new pull request that:\n- Doesn't change the package name\n- Is based upon the lastest commit of the master branch of this repo\n- Doesn't change the encoding\nI.e. just stick to the task at hand: \"Read buffer in larger chunks to avoid hanging android\". Thanks!\n. Well why 12? and + 2?\n. Ok, so just to clarify, you're saying to change this line from + 1 to + 2?\n. @jgautier, perhaps you could take a look at this one? 1e7d86aaff7567d82e104db5250111efddcd2879 is the commit that added this draft 76 stuff. I'm just not sure of the semantics of the generateKey() method...\n. Wow! Looking good! Do you know if there's any (beta) builds of any web browser that can work with this?\n. And one more thing, I consider the Server accepting an optional DRAFT a feature. If/when a new version comes out, and a user of this lib doesn't want to accept version 7 clients anymore (for security reasons or whatever), that's when it would be needed. So if you could add an \"if\" check around your new version 7 server logic, it would be appreciated! Thanks for this!\n. it should happen if auto was passed or if version 7 was explicitly passed:\nSent from my iPhone\nOn May 7, 2011, at 11:41, alecgorgereply@reply.github.com wrote:\n\nEarly Firefox builds have it: http://www.ducksong.com/misc/websockets-builds/ws-07/5.0.a2.03/\nYeah, no problem, I am just a bit confused about what you want me to do. Do you want me to have an if(this.draft != WebSocketDraft.AUTO) block around the version 7 block?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/pull/12#issuecomment-1116107\n. Hhmmmm.... so I can't seem to get this work with the ChatClient (using the new VERSION_07) and the ChatServer (using, well, any draft version). The onOpen event never fires...\n. Cool thanks, I'm excited to get this merged!\n\nOn Tue, May 10, 2011 at 9:18 AM, alecgorge \nreply@reply.github.comwrote:\n\nHmm. I'll look at it this evening. I don't know why it isn't working now.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/pull/12#issuecomment-1131904\n. I don't think you're updating the ChatClient example to use the new draft version. Try after doing this:\n\ndiff\ndiff --git a/example/ChatClient.java b/example/ChatClient.java\nindex d72613e..f03294f 100644\n--- a/example/ChatClient.java\n+++ b/example/ChatClient.java\n@@ -117,7 +117,7 @@ public class ChatClient extends WebSocketClient {\n                 connect.setEnabled(false);\n                 uriField.setEditable(false);\n                 try {\n-                    cc = new ChatClient(new URI(uriField.getText()), area, WebSocketDraft.DRAFT76);\n+                    cc = new ChatClient(new URI(uriField.getText()), area, WebSocketDraft.VERSION_07);\n                     cc.connect();\n                 } catch (URISyntaxException ex) {\n                     area.append(uriField.getText() + \" is not a valid WebSocket URI\\n\");\nFWIW, before applying the above patch things are still working properly, since the ChatClient is attempting to connect to the server with DRAFT76, so it appears as though something isn't quite right with the new code.\n. I can try to help diagnose, but do you know of an article anywhere or something that breaks down the differences from this new draft version from the previous one? Or if the differences are few, just list them off for me? I'm kind of clueless as to what this new version includes/fixes and whatnot. Thanks!\n. So I just tried the Nightly firefox build that you linked to above. It doesn't seem to be connecting with the new draft, it still seems like draft 76 to me. Here's a dump of the Firefox build linked above, with a WebSocket connection attempt:\n```\nGET / HTTP/1.1\nConnection: Upgrade\nOrigin: file://\nSec-WebSocket-Key2: 1$  8\"9 *i  95  T   6314\\0\nHost: localhost:5555\nUpgrade: WebSocket\nSec-WebSocket-Key1: 19 4\"84     7 4   080\n?c??6\u0188\n```\nSo it seems as though I can't test your code with that Firefox build. Does connecting to the server work properly from the iOS lib you linked to in the OP?\n. Ended up merging #40 instead.\n. Oh wow, I wish GitHub would notify me of updates on Issues after the initial opening of the Issue. In any case, did you get this figured out? I don't think it's a Java-WebSocket issue, since I've had reports of people using this lib with Socket.IO in the past.\n. Closing since this isn't an issue with Java-WekSocket itself, but rather your (lack of a) Socket.IO compatibility layer...\n. What kind of error are you experiencing? The correction you suggest is incorrect, as the WebSocket protocol specifies that UTF8 encoding must be used. Also, I had people say that this lib works on Android already, so I'm really just curious as to what you are seeing...\n. Hhhmm, String.getBytes() does accept a Charset, though for some reason I can't find a reference to it in the JavaDocs. I mean, it compiles and runs fine for me, though I guess there may be cases where an older/incomplete JVM might require a String there... hmmm...\nI see you corrected the original post to have the correct encoding. So when you change it to a \"UTF8\" String, then everything works ok? I've set up a temporary string-charset branch that has the changes we're talking about. Let me know if it works for you: https://github.com/TooTallNate/Java-WebSocket/compare/master...string-charset\n. Merged in 7ddf0c72ab4477eb0539c6495d22f84319b7425b. Thanks!\n. This has been merged in 60233d385a37e4ada6bb80071ba8a64d8f1935d5. Thanks a lot Julian!\n. Hey there. Would you mind setting up a pull request with you fix? And\npossible even add a test case showing the behavior? It would be very\nappreciated. Thanks in advance!\nOn Mon, Jun 27, 2011 at 5:17 PM, sippykup \nreply@reply.github.comwrote:\n\nInstead, it keeps running, and if I deploy my app several times, I end up\nwith several threads all trying to accept traffic on the same socket.  I\nadded a \"running\" boolean to the server, set it to true in the start()\nmethod, and false in the stop() method, and changed the run() method to\ncheck \"while(running)\" instead of \"while(true)\" and it seems to work fine.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/issues/18\n. There's currently no onError callback method... though it's on the TODO list...\n. This lib has gone a long way with pull requests from other contributors, and unfortunately I don't have a lot of time to work on it. So I'm sorta hoping for another pull request to float this way adding this as well ;)\n\nWhat kind of errors specifically are you trying to act on? Let's start a list...\n- Connection errors (can't connect to remote server)\n- Parse errors (malformed web socket data received)\n- Quality errors (connection uncleanly closed/dropped)\n- What else?\n. Thanks to @xpepermint we have an onIOError method that needs to be implemented by Client and Server subclasses. Closing...\n. Hey @xpepermint, this is a good start! Thanks! Before I merge, could you fix a few things:\n- Drop the android imports, for compatibility with the regular JVM.\n- Rather than implementing default onIOError methods in both the Server and Client classes, I would like to have it be a required method in WebSocketListener interface. That way users must implement it in their subclasses.\nLet me know if you have any more questions...\n. Cool I merged! Thanks a lot! Social coding FTW! You missed a few final touches, but it was a quick fix so I just went ahead and did it. I'm glad you were able to modify the lib to your needs. I'm sure others will be interested in handling errors as well.\n. Hmmm... I'd really rather only make the properties that a developer can safely use be protected. What's your use case out of curiosity? I'm not opposed to making some props protected, given there's a viable use-case, but I'd rather not make them all that way.\n. Well conn and uri are sort of implementation details.\nYou shouldn't be able to set the URI after it has been initially set, therefore there's a getURI() method to simply retrieve the URL that was used in the constructor.\nWhat do you need direct access to the conn for? The client class should wrap up any functionality that that class exposes so I'd rather add a public method performing whatever action you're desiring on the conn instance...\n. The Class hierarchy looks something like:\n- WebSocket - Base class, has abstract methods with \"conn\" as first argument\n- ^ WebSocketClient - Client class, has abstract methods without conn as the first argument, since the conn will always be the single internal conn instance that the Client is using.\n- ^ MyClientSubclass - User's subclass, implements Client's abstract methods (without 'conn' as argument).\nSo I still don't see the need for conn to be visible to the user's subclass\n. @xpepermint, I like that idea and I agree. I'll accept a pull request... We can remove the throws IOException from the method signature in that case as well!\n. Essentially, everywhere there's a try/catch or an ex.printStackTrace() then the onError method should be called. This lets the user do what they want with the exception, rather than printing it to stderr with printStackTrace(), which might not be desirable in some cases.\n. See #25.\n. Sweet! This is a big one, it'll probably take me a little bit to review. Hopefully tonight.\nAlso, I don't care that much, but for future reference (in git in general) try to keep stylistic changes out of commits (or if you must change the code style, put it in it's own commit). i.e. Moving starting brackets to their own line. It's all good though.\n. What you're trying to achieve can be done at the Java level, and doesn't need to be Android-specific. You're looking for EventQueue.invokeLater(Runnable r) which will execute the given Runnable on the UI thread. You can safely call this from the WebSocketClient's thread.\n. Like see here: http://www.coderanch.com/t/346186/GUI/java/Why-InvokeLater\nTry putting something like:\njava\njava.awt.EventQueue.invokeLater(new Runnable() {\n  public void run() {\n    // interact with the GUI\n    alert.show(ex.toString());\n  }\n});\nInside the onError method...\n. How about Activity.runOnUiThread(Runnable action)? Google is your friend!\n. Well what do you mean not working? I would think that should work. Is there\na stack trace to see or something?\nOn Thu, Jun 30, 2011 at 11:39 AM, xpepermint \nreply@reply.github.comwrote:\n\nNope... not working... as you can see I'm working on this for a few days\nnow and I found the solution but as explained. OK... thx any way...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/issues/26#issuecomment-1476963\n.  Cool cool. Glad to hear it!\n. This is already possible, though unfortunately you would have to re-parse the raw request String into a Properties object or something. To do this, override the server's onHandshakeRecieved method. It gets passed the raw String request and you get a chance to inspect the headers (Cookie) there.\n\nThis unfortunately is a pretty ugly workaround, especially since the request String gets parsed into a Properties object in the real onHandshakeRecieved implementation, so you're doing double processing. A more elegant solution would be to call a user-overridable method towards the end of onHandshakeRecieved, with the formatted objects, to give the user one last chance to approve or disapprove the connection. This would be a rather small patch, I'll try to get around to it when I get some time but that's not often. A pull request would get the ball rolling faster. Cheers!\n. I do agree, that would be ideal. I wouldn't be surprised if there was already a small lib out there to do fancy header parsing into an Object. Pull requests welcome!\n. @Davidiusdadi After your refactor, where would be the best place to add a hook for inspecting cookies from the HTTP headers?\n. This page gives a nice diff view of all the draft versions: https://github.com/miksago/thewebsocketprotocol/commits/master/\n. Implemented in #40.\n. Unfortunately this library does not currently support WSS. I looked into this a while back and found that it was difficult if not impossible at the time to get a SSL-secured Java nio socket.\nIf somebody could find a simple way to accomplish that then we can get wss support in here.\n. Ugghh, that article is super long. Is there a small \"hello world\" kind of SSL server example somewhere?\n. This is fixed, thanks for the report!\n. Thanks for the compliments! No I do not believe ant has a clean target built in, but I was also thinking the same thing just a minute ago. I'm sure it would be a small addition to the build.xml file. Pull requests welcome ;)\n. Closing as duplicate of #30.\n. I use vim personally (currently at least), but I think this library was originally written with NetBeans. That said, just try to keep any patches manageable :p\nThough this project has gone through so many patches by various people that the formatting isn't very consistent anyways, so overall I'm not too worried about it...\n. Hey guys. @Davidiusdadi, very glad to hear that you're working on a Draft 10 implementation. We can chat on IRC someplace if you'd like to talk further about it (though it's been so long since I've touched the code that I don't know how helpful I will be :p)\nThat said, I'm sure that there's lots of optimizations that could be done.\n. I'm assuming @Davidiusdadi's Draft 10 implementation/rewrite takes care of this (#40)... Re-open if not.\n. Hey, excellent! Thanks a lot, this all looks really nice. I'll try and do some testing tonight.\n. Sorry, this kind of fell off my radar.\nI just did some testing: Things are mostly looking good. There's a new bug being introduced that should be fixed before merging:\nIn the chat.html example file, you can connect and send/receive messages fine, but if you try to send an empty message (no content) then the event is never received on the server. Worse yet, is that sending a blank message leaves the server in an inconsistent state where any additional messages sent after the blank one will also not be received.\nSo other than that things look good. Thanks again!\n. Ended up merging #40 instead.\n. Works for me.\n. Hey @Davidiusdadi! This looks nice. I would like to do some testing and then I will merge. Thanks!\n. Hey thanks again. Merged!\n. Thanks for this! Couple fixes: Not a huge deal, but it would be nice if the Drafts in the dropdown list on the ChatClient were in reverse order, such that Draft 10 is the default one selected. Also, attempting to connect to the test ChatServer using the CharClient and Draft 75 disconnects immediately. Might not be too important since there's no browsers using that draft anymore, but maybe you could look quickly before I merge. Thanks again!\n. @Davidiusdadi Thanks! Merged!\n. Hey, thanks for the report. I'll accept a pull request that does the correct behavior.\n. Closing. Reopen if this is still an issue...\n. /cc @Davidiusdadi\n. Thanks David!\n. We don't yet support draft 17.\n. @Vianvian, try pulling from the repo. @Davidiusdadi added support for Draft 17 in #47.\n. Hmm, we need Sec-WebSocket-Version: 13 draft support now too I suppose :D\n. Reopening...\n. @Davidiusdadi are you taking care of this one?\n. Ok cool, no rush. School comes first ;)\n. Sorry @beykery you're gonna have to try English...\n. Interesting. The sun.* packages aren't meant for public use, so we should fix that.\nBut could you give me a little info on your setup? Operating system, version of Java, etc.\n. @rememberkarl I just pushed a fix (hopefully). Could you pull the latest master and try again please?\n. I haven't personally run this lib on Android but I've gotten reports in the past that it works.\nI have not seen the error you are posing, but ExceptionInInitializerError is thrown when a static block throws an Error in Java. I just pushed (hopefully) a fix in 8d7f01328a13b1d71932611b2960c130be42face. Please let me know if that fixes it for you.\n. I remember seeing this before actually. I don't remember the operating\nsystem exactly, but I am definitely interested in finding out which JVMs\ndon't support the charset argument for getBytes(). Or at least using a more\nportable version of the same function.\nOn Thu, Dec 8, 2011 at 4:42 PM, David Rohmer <\nreply@reply.github.com\n\nwrote:\nutf-8 is essential for the decoding and encoding.\nrememberkarl's solution only works as long UTF-8 is the default system\ncharset.\nIt would be inserting to know what the names of the available charsets are.\nCould you post the output generated by\nfor(String c: Charset.availableCharsets().keySet() ){\n        System.out.println(c);\n}\nThe complete stacktrace of the ExceptionInInitializerError would really\nhelp to fix the problem!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/issues/48#issuecomment-3073495\n. There should only be 1 onError callback in my opinion. The onIOError seems redundant in my opinion and should be removed...\n. Creating a new WebSocket Client/Server instance it the way to go IMO, but I'm not totally sold on that.\n. Thanks for the report @donpdonp. The biggest requirement is the java.nio package (Java 1.6 I believe?). After that, everything else we should be able to iron out by sticking with portable APIs.\n\nAnd I agree, Android 2.2 support would be nice. I would accept a pull request fixing any instances of String.isEmpty(), and any other API calls that would make that happen. Thanks!\n. @donpdonp I've added a note to the README specifying the minimum required JDK.\n. Thanks merged!\n. Perhaps .send() should throw an Exception if the socket is not connected.\n. I'm on the fence really. I'm not so sure that this library should be handling buffering of sent messages while the socket isn't connected (I'm like 90% sure that's what's happening). @Davidiusdadi what do you think?\n. How are you making a connection from an iPad/iPhone? Mobile Safari doesn't currently have any WebSockets support...\nIs this a native app?\n. Eek! We should never be sending \"null\" as the HTTP status message. Let's fix that...\n. These seem ok to me. What you think @Davidiusdadi?\n. This looks really nice David! Let me do some testing on my end.\n. Hey @detro, thanks for looking into this. It's been on our todo list. Also, the doc and dist rebuilds aren't really necessary in my opinion, and they make it a lot harder to read the diff. Mind reverting those?\n@Davidiusdadi does this look good?\n. Hahahaha, I meant revert your commits changing them (i.e. git revert), not deleting them entirely. The diff is just as noisy as-is :p\n. @detro We would recompile the docs and jar afterwards, or you could even do that in a separate pull request afterwards. The point was to have a minimal diff for this pull request.\n. It was just the autogenerated colors from GitHub :\\ Thanks!\n. I think these changes along with the package being renamed to org.java_websocket.* will make up our v1.0.0 release :)\n. Hey David. This all looks really nice. There's some rough edges we need to smooth out before we can merge. Just trying to run the ChatServer example with Chrome 17.0.963.56 (I'm assuming using Draft 17 or compatible) gets me this exception (on the server) when \"Connect\" is pressed:\nbash\n\u262e ~/Java-WebSocket (remotes/david/master) \u26a1 java -cp build/examples:dist/WebSocket.jar ChatServer\nChatServer started on port: 8887\nException in thread \"Thread-1\" java.lang.NullPointerException\n    at org.java_websocket.WebSocket.handleRead(WebSocket.java:147)\n    at org.java_websocket.WebSocketServer.run(WebSocketServer.java:195)\n    at java.lang.Thread.run(Thread.java:680)\nThe same thing happens when trying to connect with the ChatClient example.\n. Build errors with the latest commits:\n```\nBuildfile: /Users/nrajlich/Java-WebSocket/build.xml\ncompile:\n    [javac] Compiling 4 source files to /Users/nrajlich/Java-WebSocket/build/examples\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnClientTest.java:6: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: package org.java_websocket\n    [javac] import org.java_websocket.Draft;\n    [javac]                          ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnClientTest.java:7: cannot find symbol\n    [javac] symbol  : class ServerHandshake\n    [javac] location: package org.java_websocket\n    [javac] import org.java_websocket.ServerHandshake;\n    [javac]                          ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnClientTest.java:14: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: class AutobahnClientTest\n    [javac]     public AutobahnClientTest( Draft d , URI uri ) {\n    [javac]                                ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnClientTest.java:153: cannot find symbol\n    [javac] symbol  : class ServerHandshake\n    [javac] location: class AutobahnClientTest\n    [javac]     public void onOpen( ServerHandshake handshake ) {\n    [javac]                         ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnServerTest.java:4: cannot find symbol\n    [javac] symbol  : class ClientHandshake\n    [javac] location: package org.java_websocket\n    [javac] import org.java_websocket.ClientHandshake;\n    [javac]                          ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnServerTest.java:5: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: package org.java_websocket\n    [javac] import org.java_websocket.Draft;\n    [javac]                          ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnServerTest.java:13: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: class AutobahnServerTest\n    [javac]     public AutobahnServerTest( int port, Draft d ) throws UnknownHostException {\n    [javac]                                          ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnServerTest.java:17: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: class AutobahnServerTest\n    [javac]     public AutobahnServerTest( InetSocketAddress address, Draft d ) {\n    [javac]                                                           ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnServerTest.java:22: cannot find symbol\n    [javac] symbol  : class ClientHandshake\n    [javac] location: class AutobahnServerTest\n    [javac]     public void onOpen( WebSocket conn, ClientHandshake handshake ) {\n    [javac]                                         ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/ChatClient.java:16: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: package org.java_websocket\n    [javac] import org.java_websocket.Draft;\n    [javac]                          ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/ChatClient.java:17: cannot find symbol\n    [javac] symbol  : class ServerHandshake\n    [javac] location: package org.java_websocket\n    [javac] import org.java_websocket.ServerHandshake;\n    [javac]                          ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/ChatServer.java:8: cannot find symbol\n    [javac] symbol  : class ClientHandshake\n    [javac] location: package org.java_websocket\n    [javac] import org.java_websocket.ClientHandshake;\n    [javac]                          ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/ChatServer.java:26: cannot find symbol\n    [javac] symbol  : class ClientHandshake\n    [javac] location: class ChatServer\n    [javac]     public void onOpen( WebSocket conn, ClientHandshake handshake ) {\n    [javac]                                         ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnClientTest.java:34: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: class AutobahnClientTest\n    [javac]             Draft d = new Draft_17();\n    [javac]             ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/AutobahnClientTest.java:88: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: class AutobahnClientTest\n    [javac]                             d = (Draft) Class.forName( \"Draft_\" + spl[ 1 ] ).getConstructor().newInstance();\n    [javac]                                  ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/ChatClient.java:44: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: class ChatClient\n    [javac]         Draft[] drafts = { new Draft_10(), new Draft_17(), new Draft_76(), new Draft_75() };\n    [javac]         ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/ChatClient.java:105: cannot find symbol\n    [javac] symbol  : class Draft\n    [javac] location: class ChatClient\n    [javac]                 cc = new WebSocketClient( new URI( uriField.getText() ), (Draft) draft.getSelectedItem() ) {\n    [javac]                                                                           ^\n    [javac] /Users/nrajlich/Java-WebSocket/example/ChatClient.java:114: cannot find symbol\n    [javac] symbol: class ServerHandshake\n    [javac]                     public void onOpen( ServerHandshake handshake ) {\n    [javac]                                         ^\n    [javac] 18 errors\nBUILD FAILED\n/Users/nrajlich/Java-WebSocket/build.xml:7: Compile failed; see the compiler error output for details.\nTotal time: 0 seconds\n```\n. Ok @Davidiusdadi beautiful :) merged\n. I think @detro means http://dev.w3.org/html5/websockets/#dom-websocket-bufferedamount\nAnd so :+1: from me.\n. Can you give us some more information? Like the server code you are testing with, and the stress test command you are using to simulate load. Thanks!\n. This looks good to me. Bonus points for filling out the JavaDoc information. Thanks!\n. Ya, Windows uses semicolons to separate the class path, and Unix uses colons. We should add a note to the README underneath those commands saying to use a semicolon instead of a colon (or just use the Windows syntax. I'm not sure which is easier for most users).\n. @Davidiusdadi @egslava I just added a note to the README in 9da19ef70caa940e857f52770cd3bad1303c2266. Cheers!\n. When I originally wrote this lib, I started off with the regular Socket class. I quickly bumped into walls when it came to trying to read and write data at the same time. At least when I implemented draft 75, non-blocking IO was a requirement because you have to both read and write data at the same time, and using two threads for that would be bad.\nAnyways, I'm not speaking for David here, but I doubt this lib will ever have a version that doesn't use non-blocking IO.\n. @sippykup You can create code blocks with:\n```\ncode goes here\n```\nSee http://github.github.com/github-flavored-markdown/\n. Sadly, I don't really have time to maintain this project anymore, and don't really do Java these days so I'm kind of out-of-the-loop as well.\nIf any of you would like to be added as a contributor to this repo, then that would be awesome!\n. Ok, added @BrushfireDigitalServices as a collaborator on this repo. Thanks in advance for any help you can put towards it!\n. The more the merrier! Added @ThreaT as a collaborator.\n. I don't have access to Maven either. I have no idea who is (was) maintaining that.. Thanks for reaching out. This was my very first open-source project and I was doing a lot of Java coding in those days. For that reason this project will always be special to me.\nHowever, I don't have much interest in maintaining this project myself. There are a couple collaborators with commit access to the repo but it appears that they've been busy lately as well.\nI would be happy to give collaborator access to anybody that would like to step up to the plate, in the spirit of open-source! Short of that feel free to fork of course. Consider this an official call for maintainers.. Hey @marci4, sorry I didn't see this initially. I've added you as a collaborator. Thank you in advance for any work that you end up putting into this project \u2764\ufe0f . Hey @haruntuncay, just sent you an invite to be a collaborator on the project. Thank you in advance for any work your put in. \ud83c\udf7b on me if you ever give SF a visit!. Why did you change all of these?\n. WebSocketDraft.VERSION_7 -> WebSocketDraft.VERSION_07\n. This could probably be cached for speed (as a private static final I suppose).\n. Go ahead and fix, I'll wait.\n. Like here, we have to update these package names too!\n. ",
    "hynese": "Hey,\nThanks for your reply. Yes, I get a WebSocket object every time onClientOpen(conn) gets called.  I then copy this object and can send to an individual browser. It's all working now. Sorry for the schoolboy error. I'm just back to Java after many years of programming in C.\nGood project. So much cleaner and more straightforward than jWebSocket which has a crazy website. You provide one jar for the WebSocket server and one jar for the javadocs. Perfect.\n. ",
    "sippykup": "Sorry, never used GitHub before.  How the hell do I submit a patch?  Just paste it into a comment?  Guess that's what I'll do.  Sorry if I'm missing something.\n. diff -r ./net/tootallnate/websocket/WebSocketClient.java ../../../TooTallNate-Java-WebSocket-bdf470d/src/net/tootallnate/websocket/WebSocketClient.java\n14a15\n\nimport java.util.concurrent.LinkedBlockingQueue;\n122c123\n<       this.conn = new WebSocket(client, this);\nthis.conn = new WebSocket(client, new LinkedBlockingQueue<ByteBuffer>(), this);\ndiff -r ./net/tootallnate/websocket/WebSocket.java ../../../TooTallNate-Java-WebSocket-bdf470d/src/net/tootallnate/websocket/WebSocket.java\n5a6,7\nimport java.nio.channels.SelectionKey;\nimport java.nio.channels.Selector;\n8a11\nimport java.util.concurrent.BlockingQueue;\n78a82,90\n  /\n- Queue of buffers that need to be sent to the client.\n  /\n  private BlockingQueue bufferQueue;\n  /\n- Lock object to ensure that data is sent from the bufferQueue in\n- the proper order\n  /\n  private Object bufferQueueMutex = new Object();\n  86a99,100\n- @param bufferQueue The Queue that we should use to buffer data that\n-                     hasn't been sent to the client yet.\n  90c104,106\n  <   WebSocket(SocketChannel socketChannel, WebSocketListener listener) {\n\nWebSocket(SocketChannel socketChannel, BlockingQueue bufferQueue,\n          WebSocketListener listener)\n  {\n  91a108\n    this.bufferQueue = bufferQueue;\n  136c153,157\n  <   public void send(String text) throws IOException {\n\n/**\n- @return True if all of the text was sent to the client by this thread.\n- False if some of the text had to be buffered to be sent later.\n*/\n  public boolean send(String text) throws IOException {\n  145a167\n    b.rewind();\n  147,149c169,184\n  <     // Write the ByteBuffer to the socket\n  <     b.rewind();\n## <     this.socketChannel.write(b);\n// See if we have any backlog that needs to be sent first\nif (handleWrite()) {\n    // Write the ByteBuffer to the socket\n    this.socketChannel.write(b);\n}\n\n// If we didn't get it all sent, add it to the buffer of buffers\nif (b.remaining() > 0) {\n    if (!this.bufferQueue.offer(b)) {\n        throw new IOException(\"Buffers are full, message could not be sent to\" +\n                this.socketChannel.socket().getRemoteSocketAddress());\n    }\n    return false;\n}\n\nreturn true;\n\n151a187,210\n  boolean hasBufferedData() {\n      return !this.bufferQueue.isEmpty();\n  }\n/*\n- @return True if all data has been sent to the client, false if there\n-      is still some buffered.\n  /\n  boolean handleWrite() throws IOException {\n      synchronized (this.bufferQueueMutex) {\n          ByteBuffer buffer = this.bufferQueue.peek();\n          while (buffer != null) {\n              this.socketChannel.write(buffer);\n              if (buffer.remaining() > 0) {\n                  return false;   // Didn't finish this buffer.  There's more to send.\n              } else {\n                  this.bufferQueue.poll();    // Buffer finished.  Remove it.\n                  buffer = this.bufferQueue.peek();\n              }\n          }\n          return true;\n      }\n  }\n257a317\ndiff -r ./net/tootallnate/websocket/WebSocketServer.java ../../../TooTallNate-Java-WebSocket-bdf470d/src/net/tootallnate/websocket/WebSocketServer.java\n13a14\nimport java.util.concurrent.BlockingQueue;\n14a16\nimport java.util.concurrent.LinkedBlockingQueue;\n169a172,183\n  /*\n- @return A BlockingQueue that should be used by a WebSocket\n-      to hold data that is waiting to be sent to the client.\n-      The default implementation returns an unbounded\n-      LinkedBlockingQueue, but you may choose to override\n-      this to return a bounded queue to protect against\n-      running out of memory.\n  /\n  protected BlockingQueue newBufferQueue() {\n      return new LinkedBlockingQueue();\n  }\n182,208c196,250\n<         selector.select();\n<         Set keys = selector.selectedKeys();\n<         Iterator i = keys.iterator();\n< \n<         while(i.hasNext()) {\n<           SelectionKey key = i.next();\n< \n<           // Remove the current key\n<           i.remove();\n< \n<           // if isAccetable == true\n<           // then a client required a connection\n<           if (key.isAcceptable()) {\n<             SocketChannel client = server.accept();\n<             client.configureBlocking(false);\n<             WebSocket c = new WebSocket(client, this);\n<             client.register(selector, SelectionKey.OP_READ, c);\n<           }\n< \n<           // if isReadable == true\n<           // then the server is ready to read\n<           if (key.isReadable()) {\n<             WebSocket conn = (WebSocket)key.attachment();\n<             conn.handleRead();\n<           }\n<         }\n<       }\n```\n          try {\n      selector.select(100L);\n      Set keys = selector.selectedKeys();\n      Iterator i = keys.iterator();\n  while(i.hasNext()) {\n    SelectionKey key = i.next();\n\n    // Remove the current key\n    i.remove();\n\n    // if isAcceptable == true\n    // then a client required a connection\n    if (key.isAcceptable()) {\n      SocketChannel client = server.accept();\n      client.configureBlocking(false);\n      WebSocket c = new WebSocket(client, newBufferQueue(), this);\n      client.register(selector, SelectionKey.OP_READ, c);\n    }\n\n    // if isReadable == true\n    // then the server is ready to read\n    if (key.isReadable()) {\n      WebSocket conn = (WebSocket)key.attachment();\n      conn.handleRead();\n    }\n\n              // if isWritable == true\n              // then we need to send the rest of the data to the client\n              if (key.isWritable()) {\n                  WebSocket conn = (WebSocket)key.attachment();\n                  if (conn.handleWrite()) {\n                      conn.socketChannel().register(selector,\n                              SelectionKey.OP_READ, conn);\n                  }\n              }\n  }\n\n          for (WebSocket conn : this.connections) {\n              // We have to do this check here, and not in the thread that\n              // adds the buffered data to the WebSocket, because the\n              // Selector is not thread-safe, and can only be accessed\n              // by this thread.\n              if (conn.hasBufferedData()) {\n                  conn.socketChannel().register(selector,\n                          SelectionKey.OP_READ | SelectionKey.OP_WRITE, conn);\n              }\n          }\n\n} catch (IOException e) {\n          e.printStackTrace();\n      } catch (RuntimeException e) {\n          e.printStackTrace();\n      }\n  }\n\n```\n. I've narrowed it down some more.  The socket receives some bytes from the client, and the server invokes the WebSocket's handleRead() method, to read the bytes from the buffer.  There are 9 bytes in the buffer:\n\n04 01 00 50 4A 7D 47 63 00\nisFlashEdgeCase() returns HandshakeState.MATCHING, causing the handleRead() method to return, without reading any bytes from the buffer:\n} else if( isflashedgecase == HandshakeState.MATCHING ) {\n        return;\n      }\nThen, the next time select() is called, it immediately calls handleRead() again, creating the infinite loop.  The server seems to be waiting for the client to send some more bytes that just aren't coming.  I admittedly haven't read the Websocket specs to understand the underlying protocol, so I don't know what 04 01 00 50 4A 7D 47 63 00 is or why the client is sending it.  But I do know that it shouldn't be possible for the server to enter an infinite loop when it receives only these bytes. :)  I think that the handleRead() method needs to make sure that it always read all of the bytes out of the buffer in order to avoid this loop.\n. Here is a really easy way to reproduce the problem (websocket server listening on port 8000):\n$ telnet myserver 8000\nTrying myserver...\nConnected to myserver.\nEscape character is '^]'.\na\na\n^]\ntelnet> quit\n(CPU is now at 100%, websocket server is stuck in infinite loop.)\n. I had been using the v1.0.0-alpha1 tag, but I just tried with the current head, and the bug is still there.\n. Current head doesn't seem to even work; at least not with Firefox 12.0.\norg.java_websocket.exeptions.InvalidFrameException: bad rsv 4\n    at org.java_websocket.drafts.Draft_10.translateSingleFrame(Draft_10.java:309)\n    at org.java_websocket.drafts.Draft_10.translateFrame(Draft_10.java:286)\n    at org.java_websocket.WebSocket.handleRead(WebSocket.java:300)\n    at org.java_websocket.WebSocket.handleRead(WebSocket.java:227)\n    at org.java_websocket.WebSocketServer$WebsocketReadTask.call(WebSocketServer.java:345)\n    at org.java_websocket.WebSocketServer$WebsocketReadTask.call(WebSocketServer.java:334)\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:662)\n. Since I couldn't get the code on head to work, I went back to 1.0.0 and patched it.  Here's the patch.  The last line of the patch is a fix to a different bug, where it's not possible to stop and restart the same WebsocketServer.\n``` diff\ndiff -r TooTallNate-Java-WebSocket-ce3ede1/src/org/java_websocket/WebSocket.java /home/tmccune/src/3p/TooTallNate-Java-WebSocket-ce3ede1/src/org/java_websocket/WebSocket.java\n104a105,106\n\nprivate int flashPolicyIndex = 0;\n490c492\n<       if( request.limit() > Draft.FLASH_POLICY_REQUEST.length )\n\n\n\n  if( request.limit() > Draft.FLASH_POLICY_REQUEST.length ) {\n\n492,493d493\n<       else if( request.limit() < Draft.FLASH_POLICY_REQUEST.length ) {\n<           return HandshakeState.MATCHING;\n496,497c496,497\n<           for( int flash_policy_index = 0 ; request.hasRemaining() ; flash_policy_index++ ) {\n<               if( Draft.FLASH_POLICY_REQUEST[ flash_policy_index ] != request.get() ) {\n\n\n\n      while (request.hasRemaining()) {\n          if( Draft.FLASH_POLICY_REQUEST[ flashPolicyIndex++ ] != request.get() ) {\n\n502,503c502\n<           return HandshakeState.MATCHED;\n<           // return request.remaining() >= Draft.FLASH_POLICY_REQUEST.length ? HandshakeState.MATCHED : HandshakeState.MATCHING;\n\n\n\n      return (request.limit() < Draft.FLASH_POLICY_REQUEST.length) ? HandshakeState.MATCHING : HandshakeState.MATCHED;\n\ndiff -r TooTallNate-Java-WebSocket-ce3ede1/src/org/java_websocket/WebSocketServer.java /home/tmccune/src/3p/TooTallNate-Java-WebSocket-ce3ede1/src/org/java_websocket/WebSocketServer.java\n117d116\n< \n231a231\n      thread = null;\n```\n. Awesome Markdown markup on my comment.  Don't know how to fix that, or how to attach a file to this issue.\n. Thanks.\n. By the way, a RuntimeException like this really shouldn't bring down the whole server.  It would be a good idea for the server to catch RuntimeExceptions with individual connections, and just log the errors, and keep on chugging.\n. Here's a patch for this:\n\n```\ndiff -r /home/tmccune/src/3p/orig/TooTallNate-Java-WebSocket-ce3ede1/src/org/java_websocket/drafts/Draft_75.java src/org/java_websocket/drafts/Draft_75.java\n145c145,147\n<       curframe.setPayload( currentFrame.array() );\n\n\n  if (currentFrame != null) {\n    curframe.setPayload( currentFrame.array() );\n  }\n\n```\n. I tested briefly yesterday with the following:\n\nFirefox 3-12 on Windows\nFirefox 12 on Linux\nIE 8-10\nAndroid Browser on Android 4\nSafari 3-5 on OSX\nChrome 6-18 on Windows\nand didn't experience any problems.  This bug was exposed only after we put this code into production, so this wasn't a controlled environment and I don't know what client triggered it.\n. > \"Id like to know on which revision you use to work on\"\nWell that's why I started my report with \"Using 1.0.0-alpha1 release.\" :)  I'll take a look at head and see if the problem is still there.\n. Looking through what's in the head, it seems like the number of operations that can block that are being called from the main server thread has actually gotten quite a bit worse. :)  Unfortunately I don't have the time to do a deep analysis right now of ever place that you're calling them, to ensure whether or not they're safe, but why would you expose your code to this risk at all?  With your design of calling these blocking operations on the main server thread, if you encounter a bug, the server can easily grind to a halt.  Why not at least give yourself an out to let the operations timeout and keep things going, just in case?  You could even make the timeout configurable, and default it to block indefinitely, but let users that actually need to rely on the server to keep running in a real production environment to configure those operations to time out, and keep things moving, in case a bug is encountered.\nBy the same philosophy, the way that you're currently handling a RuntimeException in the main server loop is to shut down the whole server!  So, for example, if a bug in your code causes a simple NullPointerException occurs in some corner case while handling a single client connection, rather than simply letting that bug cause a problem for that client, you're going to let it shut the whole server down.\nIf you want this library to be adopted by real-world users, you really need to change the mindset that you're using when handling exceptions and doing risky things like calling blocking operations on the main server thread.  You need to start with the assumption that THERE WILL BE BUGS in your code, and that problems will occur.  Now, given that, how can you design your server to be fault-tolerant, such that when these bugs are encountered on a running production server, the impact is minimal.  It should log the failure, do its best to recover for that particular client, and then keep on moving.  The server CANNOT just stop. :)\n. I mean that I've now supplied you with 3 separate patches to 1.0.0-alpha1, so the version that I'm using here has all of those patches applied to it.  Why is there little you can do to isolate/fix problems?  I'm using the most recent tag.  That's risky enough.  You certainly shouldn't expect production users to report problems from the latest version in the head. :)\nOf course it's the goal that every time you check code in, you will make your product more functional and/or less buggy.  But that doesn't mean that you can just discard bug reports from people who are using something other than what's in the head, especially if it's the LATEST tagged/released version! :)\n. Did some more digging through our logs and determined that the connection was coming from IE9 (Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0) which is using the latest version of this Flash Websocket library to connect:\nhttps://github.com/gimite/web-socket-js\nHope that helps you narrow down the problem.\n. Maybe related?\nhttp://stackoverflow.com/questions/7575339/problem-sending-data-in-hybi-10-websockets-server\n. I don't want to upgrade our production server to the latest code in your repository, but once you're ready to tag/release a new version, I will try it out.\n. This has brought us down twice more since I filed this.  Can you please let me know if you are close, or if we should attempt a patch ourselves?\n. ",
    "morganwu": "hi Nathan, unfortunately I still have this problem, could you please help to have a look? following segment is where the issue caused:\njava\nwhile ( channel.isOpen() ) {\n                SelectionKey key = null;\n                selector.select();\n                Set<SelectionKey> keys = selector.selectedKeys();\nespecially this line:\njava\nselector.select();\nI'm using this project in an Android project, and found this issue by checking the thread cpu usages, the select() method was using quite a lot cpu time.\nOne point might be a indirect reason, I was using GPRS network, it's very unstable , so the connections must be interrupted very frequently.\nthanks.\n. hi David,\nI add one line to output some after the select method, and found it's because this method is called too frequently, here is the log statement and the result:\njava\n                long start = System.currentTimeMillis();\n                selector.select();\n                System.out.println(channel.toString() + \", \" + (System.currentTimeMillis() - start));\n``` log\n11-29 15:02:53.797: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 1\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 1\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 1\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 1\n11-29 15:02:53.807: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 1\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 1\n11-29 15:02:53.817: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:53.827: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n```\n. hi David,\nAccording to your suggestion, I added two extra lines to print logs, and opened websocket debug, here they are:\n``` java\nif( key.isReadable() && SocketChannelIOHelper.read( buff, this.conn, wrappedchannel ) ) {\n    System.out.println(\"Reading...\");\n    conn.decode( buff );\n}\nif( key.isWritable() ) {\n    if( SocketChannelIOHelper.batch( conn, wrappedchannel ) ) {\n        System.out.println(\"Flushed...\");\n        if( key.isValid() )\n            key.interestOps( SelectionKey.OP_READ );\n    } else {\n        System.out.println(\"Not empty...\");\n        key.interestOps( SelectionKey.OP_READ | SelectionKey.OP_WRITE );\n    }\n}\n```\nthen I got some meaningful logs:\nlog\n11-30 13:48:16.698: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.708: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.708: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.708: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.708: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 0\n11-30 13:48:16.708: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.718: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.718: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.718: I/System.out(7271): java.nio.SocketChannelImpl@40ff13b8, 25010\n11-30 13:48:16.718: I/System.out(7271): Reading...\n11-30 13:48:16.718: I/System.out(7271): process(5): {\ufffd2::}\n11-30 13:48:16.718: I/System.out(7271): matched frame: Framedata{ optcode:TEXT, fin:true, payloadlength:3, payload:[50, 58, 58]}\n11-30 13:48:16.718: I/io.socket(7271): < 2::\n11-30 13:48:16.718: I/io.socket(7271): > 2::\n11-30 13:48:16.718: I/System.out(7271): send frame: Framedata{ optcode:TEXT, fin:true, payloadlength:3, payload:[50, 58, 58]}\n11-30 13:48:16.718: I/System.out(7271): write(9): {\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03b8}\n11-30 13:48:16.718: I/System.out(7271): java.nio.SocketChannelImpl@40ff13b8, 0\n11-30 13:48:16.728: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 0\n11-30 13:48:16.728: I/System.out(7271): Flushed...\n11-30 13:48:16.728: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.728: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.728: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 0\n11-30 13:48:16.728: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:16.738: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\nMy understanding is it was just keeping 'select()', but not sending data, is that right? \n. About the draft, I'm using \"Draft_10\", no wss.\nAnd in the above logs, you may find there are two channels actually, one is serving data transformation, but the another one is running for nothing.\n. hi David,\nI was always using my android phone to test with, never tried to run it in emulators, and I have these problems in both my HTC t328t and Galaxy Nexus.\nBased on your latest reply, I added some more logging statements at the beginning of loop:\njava\nSystem.out.println(\"Selection key : \" + key.toString());\ni.remove();\nif( !key.isValid() ) {\n    System.out.println(\"Selection key is not valid.\");\n    conn.eot();\n    continue;\n}\nthen I got some logs like these:\nlog\n12-03 10:21:22.574: I/System.out(10106): java.nio.SocketChannelImpl@40e88d28, 0\n12-03 10:21:22.574: I/System.out(10106): Selection key : java.nio.SelectionKeyImpl@40eacfc0\n12-03 10:21:22.574: I/System.out(10106): java.nio.SocketChannelImpl@40e88d28, 0\n12-03 10:21:22.574: I/System.out(10106): Selection key : java.nio.SelectionKeyImpl@40eacfc0\n12-03 10:21:22.574: I/System.out(10106): java.nio.SocketChannelImpl@40e88d28, 0\n12-03 10:21:22.574: I/System.out(10106): Selection key : java.nio.SelectionKeyImpl@40eacfc0\n12-03 10:21:22.574: I/System.out(10106): java.nio.SocketChannelImpl@40e88d28, 0\nThat means the selection key is valid, but no reading result, no writing, then I tried to debug, and found something strange. When the app runs into infinite loop, the value of 'key.isReadable()' is always true, but reading never succeeds. The following statement always returns false:\njava\nSocketChannelIOHelper.read( buff, this.conn, wrappedchannel )\nI looked into this method and found that means the channel has reached end of stream, here I have no idea it's normal or not, how do you think about that?\nAnd later I checked the draft again, I'm using socket.io as the server, right now it implemented version 7, 8, 13, and 76, so I tried to use 'Draft_17'( it is corresponding to draft 16 in socket.io) instead of 'Draft_10', it's still the same. And then I tried 76, it's seems work well so far. So do you think it is possible that this project and the socket.io have different implementation on the draft, and that cause some of the data can not be read?\nMany thanks.\n. Oops.. it's the same with draft 76. seems it has nothing to do with the protocol.\n. No, I've never seen that. And I've applied your latest commit, this issue didn't happen any more. You've fixed it, right?\n. hi David,\nI'm not sure what the exactly reason is, right now I'm focus on the function development, so just fixed it but didn't  look into it. I'm using another project socket.io-java-client based on yours, so there is also possibility that this project misusing something, the fact is there is no more updates ever since later last year, so there might be some inconsistances. I'll look into it when I get some time, try to figure it out.\n. ",
    "Davidiusdadi": "\nThis method performs a blocking selection operation. It returns only after at least one channel is selected, this selector's wakeup method is invoked\n\nDoes your websocket client's select method use so much cpu while blocking or because it is called so frequently?\n. well select blocks until there is \"somthing to do\". \nSo as soon as bytes are ready to be read from a channel it will return.\nThe second case select() will return is when a websocket is about to write data.\nIf no data is about to be written via the websocket connection then it is important that the selector is unregistered for \"write ready\"-interest ops. If this step doesn't happen you will get 100% cpu usage.\nTo be sure if the bug has to do with the \"write ready\"-interestop-registration being not reset i suggest that you put debug prints into these blocks:\njava\nif( key.isReadable() && SocketChannelIOHelper.read( buff, this.conn, wrappedchannel ) ) {\n    conn.decode( buff );\n}\njava\nif( key.isWritable() ) {\n    if( SocketChannelIOHelper.batch( conn, wrappedchannel ) ) {\n        if( key.isValid() )\n            key.interestOps( SelectionKey.OP_READ );\n    } else {\n        key.interestOps( SelectionKey.OP_READ | SelectionKey.OP_WRITE );\n    }\n}\nIf you wander what all the wrapped channel stuff is for: its basically ssl special handling and you can ignore it if you don't use wss. I assume you don't...\nIf the isWritable block is entered repeatedly without you sending data that that would indicate that there is a bug.\nPlease also turn on WebSocket.DEBUG = true; It helps understanding whats going on.\nSo beside the result of the debug output i would like to know what draft you use and if you use wss.\n. > My understanding is it was just keeping 'select()', but not sending data, is that right?\nThat is what i guessed. But if that would have been true the log should have looked something like this:\nlog\n11-30 13:48:xx:xxx: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 0\n11-30 13:48:xx:xxx: I/System.out(7271): Flushed...\n11-30 13:48:xx:xxx: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 1\n11-30 13:48:xx:xxx: I/System.out(7271): Flushed...\n11-30 13:48:xx:xxx: I/System.out(7271): java.nio.SocketChannelImpl@40db9460, 0\n11-30 13:48:xx:xxx: I/System.out(7271): Flushed...\nI thought it would try to flush data all the time also the is nothing to write which would have been a bug.\nInstead we get multiple of such lines after another:\nlog\n11-29 15:02:xx:xxx: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:xx:xxx: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\n11-29 15:02:xx:xxx: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 1\n11-29 15:02:xx:xxx: I/System.out(8521): java.nio.SocketChannelImpl@40dc2400, 0\nSince your logging above prints out something every time a selectionkey is either readable OR writeable these repeating log messages mean that select returns without any results!\nAccording to the java doc that is possible: \n@returns The number of keys, possibly zero, whose ready-operation sets were updated\nIt happens usually in \"exceptional situations\" like an other thread is calling selector.wakeup...\nBut on a usual vm it should never return immediately by default( that's selectNow's job).\nSince i never encountered this problem (and nobody else complained about this serious problem ) i think it could be an emulator problem (like #129). \nIf the problem occurs on an actual device or remains reproducible on other emulators (or even a nonandroid vm) then we have to talk again.\nTo further understand the problem you could verify that the selector is really selecting no keys with a debugger.\n. i just wanted to know the draft and wss in order to contain what causes the bug. But if the problem is indeed the emulator it does not matter what draft you use or whether you use wss or not.\n. Could you check if you get the same logcat output like described here:\nhttps://github.com/TooTallNate/Java-WebSocket/issues/140#issuecomment-11410668\n. Yes i can considered to be fixed.\n. Do you mind if i close this issue?\n. By now server and client should stop without hesitation using stop/close.\nYou should not close the server via a thread interrupt! That would not close the network connections.\n. A better way to deal with cookies would be great!\nHandshakedata is a map of fields of the http message.\nHandshakeBuilder is used to create new http headers.\nI'd add\nCustomCookieRepresentationType getCookies() to the Handshakedata.\nThe HandshakeBuilder could be touched for a method like setCookies( CustomCookieRepresentationType )\nThe class FramedataImpl1 could than implement these methods.\nFramedataImpl1 does not need to store a CustomCookieRepresentationType as a member because setCookies would call a HandshakeBuilder::put to store the raw value of CustomCookieRepresentationType\nand getCookies would create a new instance of a CustomCookieRepresentationType getting the raw cookie via Handshakedata::getFieldValue(\"Cookie\")\n. You can inherit from WebSocketImpl by now...\nparsing the cookie yourself should be very easy: using the regex from http://stackoverflow.com/questions/5574530/how-to-parse-a-cookie-string\n. If somebody wants/needs to implement wss he might need this:\nhttp://onjava.com/pub/a/onjava/2004/11/03/ssl-nio.html\n. So be it. But except wss we do support all recent drafts...\n. Well the  performance problem is not only buffer allocation.\nThe real problem is also the recurring call to recieveHandshake and recieveFrame!!!\ne7f4478 does not fix this performance issue!\nOn a message like:\nGET / HTTP/1.1\nUpgrade: websocket\nConnection: Upgrade\nHost: 192.168.0.100:1234\nSec-WebSocket-Origin: http://192.168.0.10\nSec-WebSocket-Key: hrUFV/yPkWQGPJmHGtdZGw==\nSec-WebSocket-Version: 8\nthe evaluation will look like this\nallocate and evaluate G\nallocate and evaluate GE\nallocate and evaluate GET\nallocate and evaluate GET \nallocate and evaluate GET /\nallocate and evaluate GET / H\nallocate and evaluate ...\nThis means you read the same data over and over and over again.\nThe performance decreases exponential according to the received data size!\nIm currently implementing the Draft 10 and i am not sure how to deal with this recurring calls because they seem so not necessary...\nI would really like to Skype with TooTallNate... just to understand some of the design choices and so on.\nI also would like to know what you think about backwards compatibility to the Drafts 75 and 76.\n. -added much stronger validation to ALL drafts \n-made all drafts working as client and server\n-generalized handshake\n-minor requested changes\nTested all clients with ws://echo.websocket.org and local with the chat example.\ni could not test draft75 and draft76 servers with foreign client implementations.\n@TooTallNate the requested fixes/changes are included\n. Your server seems to only understand the \"latest\" websocket protocol\nbecause:\nHixie 75 doses not specify a Sec-WebSocket-Key\nHixie 76 does specify Sec-WebSocket-Key1 and Sec-WebSocket-Key2\nonly Hybi 10 does specify Sec-WebSocket-Key\nYou seem to send an old handshake. \nTry to use draft10!\nsrc/net/tootallnate/websocket/drafts/Draft_10.java \npublic HandshakeBuilder postProcessHandshakeRequestAsClient( HandshakeBuilder request ) \nsends Sec-WebSocket-Key\n. thanks for finding that bug!!\n\"foff\" has to be added to both \"maskskeystart\" and \"maskskeystart\"\n. The spec http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76#page-32 says:\n\nAfter the fields, the server sends the aforementioned MD5 sum, a 16\n   byte (128 bit) value, shown here as if interpreted as ASCII:\nfQJ,fN/4F4!~K~MH\nThis value depends on what the client sends, as described above.  If\n   it doesn't match what the client is expecting, the client would\n   disconnect.\nHaving part of the handshake appear after the fields ensures that\n   both the server and the client verify that the connection is not\n   being interrupted by an HTTP intermediary such as a man-in-the-middle\n   cache or proxy.\n\nIm not sure what \"after the fields\" means. Shall the last 16 bytes (the content) be sent separate or can they be send in one package/frame with the header.\nws://echo.websocket.org always sends the response in 2 parts.\nSo i think @xiaoxie's fix is ok but it might be better to do something like this:\npublic List createHandshake( Handshakedata handshakedata , Role ownrole ){\n    List l = createHandshake( handshakedata , ownrole , false );\n    l.add( handshakedata.getContent() );\n    return l;\n}\nEDIT: looking at http://docs.oracle.com/javase/6/docs/api/java/nio/channels/SocketChannel.html#write(java.nio.ByteBuffer) im am not sure it it really makes a difference, but what do you think.\nEDIT2: since we can not make any guesses in how many pieces an handshake might come, i think @xiaoxie's fix is the smarter one.\nThat in mind the translateHandshake methods had to be rewritten because they can not yet handle incomplete handshakes...\nLucky this should happen VERY VERY rarely.\n. The Sec-WebSocket-Version of draft17 is 13.\nThey also seem to have skipped number 11 and 12..\nPoorly is seems that the origin is not considered in any way by the drafts 10 and 17.\nLuckily this will be a 20 minutes fix...\n@TooTallNate i'd reopen this issue ... if i only could\n. yes i will during this week.\nI just have to do very much for school.\n. Sorry that such a basic thing took so long.\nhybi 17( RFC 6455 ) should work now.\nI hope you acknowledge. \n. http://translate.google.com/\n\u662f\u6e90\u4ee3\u78bc\u7684\u5de5\u4f5c\u55ce\uff1f\n. utf-8 is essential for the decoding and encoding.\nrememberkarl's solution only works as long UTF-8 is the default system charset.\nIt would be inserting to know what the names of the available charsets are. \nCould you post the output generated by\nfor(String c: Charset.availableCharsets().keySet() ){\n         System.out.println(c);\n}\nThe complete stacktrace of the ExceptionInInitializerError would really also help to fix the problem.\n. My tests on chrome 15 with long messages went fine...\nYou get the error during receiving on the chrome side, don't you?\nDo you use the native chrome websocket implementation or do you use a specific js implementation?\nIt should not be to important but on which sting does the error occur?\nHave you tried to reproduce the problem using:\nhttp://websocket.org/echo.html as client for your websocket server\nor ws://echo.websocket.org as a server for your websocket client.\nWithout being able to reproduce the problem there is less i can do...\n. There is indeed a problem with big messages. I'm going to fix this during this week.\n. it should work now.\n. Thank you very much for your report.\nDoes the error occur in the following code?\nhttps://github.com/TooTallNate/Java-WebSocket/blob/master/src/net/tootallnate/websocket/WebSocketClient.java\n``` java\npublic void run() {\n    running = tryToConnect(new InetSocketAddress(uri.getHost(), getPort()));\nwhile (this.running) {\n  SelectionKey key = null;\n  try {\n    selector.select();\n    Set<SelectionKey> keys = selector.selectedKeys();\n    Iterator<SelectionKey> i = keys.iterator();\n\n    while (i.hasNext()) {\n      key = i.next();\n      i.remove();\n\n      if (key.isConnectable()) {\n        finishConnect();\n      }\n\n      if (key.isReadable()) {\n        conn.handleRead();\n      }\n    }\n  } catch (IOException ex) {\n      if( key != null )\n          key.cancel();\n      onIOError(conn, ex);\n  } catch (Exception ex) {\n    onError( ex );\n  }\n}\n\n//System.err.println(\"WebSocketClient thread ended!\");\n\n}\n```\nIn this case the onError( ex ) should already handle the error.\nIs any stack trace available?\nAnyway:\nDuring my refactoring i obviously messed up the WebSocketListener interface...\nThere should be a method onError( Websocket e, Throwable t) instead of onError( Throwable t).\nAnd the onIOError which initially was part of the WebSocketListener should have been remove already.\n@TooTallNate Do you think that onIOError should be part of WebSocketListener parallel to onError or is it better to do the whole error feedback via the new onError?\n. I already committed in my fork 847aa1300538397e13bc1c2192cc442676bed78b\nI'll merge as soon as im done with my other changes.\n(I never used the cherry picking feature and one of my subsequent commits contains errors)\n. releaseAndReinitialize\n\nReinitializes and prepares the class to be used for reconnect.\n\nsince 8d3909fae896444f565f486c0a68e174201f1124 \nbut in 507e5ec9b3d8e0095576867c5e48ad920ad2df21 the type of draft changed...\nTo be able to reconnect properly the draft needs to be reset or recreated.\nCurrently there is no reset method in the class Draft.\nA new setter would made the class more difficult to use but we could create a second close method which takes the same arguments like the constructor. That would ensure the object to never be in an invalid state.\nAnd if we need releaseAndReinitialize any further it have to be protected or private.\nCurrently the usetage of releaseAndReinitialize is risky because it does not take care of anything. What e.g.  if the socket is still connected?\n. I also can't think of a real benefit of creating a reusable socket.\n. The problem has been fixed an other way by now.\n. Beside my aim to make this websocket implementation to pass the autobahn test suit i'm about to do some changes to the ( channel ) write mechanism.\nCurrently the frame which is about to be send will be either be send immediately form the current/user thread or be queued and send later form selector thread. This also means that the operation may fail in different threads randomly.\nI am about to change this behavior roughly to something like this: \n- The current/user thread would only queue frames for the selector threadand return immediately with no risk of an IOException.\n- The selector thread would  perform all read and write operations.\n- In the case of a full queue the current/user thread would block ( and therefore might throw an InterruptedException ).\n- The current/user thread would wakeup the selector thread if there were data to write.\n- We could also gain (much) performance on the sever side by splitting the Websocket.handleRead into a \"read\" and an \"process\" method. This would allow to perform the processing multithreaded for example using an http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html.\nUsing this approach sending messages would be simplified and the error handling would be centralized.\nI am just getting in touch with java nio so im orient myself on http://rox-xmlrpc.sourceforge.net/niotut/.\n@donpdonp Any write operations on a closed websocket will/should result in a NotConnectedException ( currently NotYetConnectedException ) but you can easily catch that in your own implementation and write out your previously catched&cached data in onOpen.\nI myself want to use this implementation as soon as possible for my own needs but currently i consider this project to be in alpha stage. But this might change rapidly during the next weeks.\n. By now the \"announced\" changes to the IO handling are committed.\nThe problem with the messages received in the same \"package\" as the handshake is also fixed.\nI did not especially tested the case a user sends messages before a connection was established but is should be send as soon as the connection is established. \nCurrently the send method will  block if the internal buffer queue is full.\n. 32260ae4bd499e395db6f45a74ace06e2a72caae might additional address the problem\n. Thanks. \nBefore merging it has to be sure that all callers of channelWrite do prepare their buffers for write.\nI will check that as soon as possible.\n. Thanks you very much for finding that bug!\nDraft_75 is old and most (all?) current browsers do not support it (any more).\n. The drafts are named after http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17.\nSucceeding drafts are often \"binary compatible\" so the our implemented drafts should cover the most important features of all specified drafts. Currently there are a lot of small gaps like the handling of damaged UTF8 text messages and some ping and pong edge cases. Also not yet supported are wss and protocol extension capabilities.\nBut Draft10 and 17 should have full framing support.\nBTW: If you do not specify any draft in the constructor of the server it will auto detect the clients draft.\n@lassic Could you take a look at #60?\n. It should have been net.tootallnate.websocket.exeptions.LimitExceededException;\nBut if it is never thrown... .\nWhy don't you push the changes and send a pull request?\n. You seem to know what to do quite well.\nYou simply fork by clicking the fork button in the upper right.\nForking is cloning and forked repositories will appear in your repository list.\nAnd if you pushed to that fork form your clone at home you will see send pull requst button.\nThe most complicated part will be to setup the authentication.\nYou might need http://dbanck.de/2009/10/08/github-windows-and-tortoisegit-part-1-installing-pulling/ or http://help.github.com/win-set-up-git/\nOn windows id suggest using tortoise git.\n. In the current situation reaching the buffers limit may cause a deadlock situation which is probably why you came up with this change. \nThanks for calling attention on that!\nOn the other hand this fix is not a long term solution because it makes it kind of easy to reach OutOfMemory states.\nJust image a situation where you constantly send messages and the underlaying socket is not able to transport the data in time.\nA better way would be to not increase the limit of the LinkedBlockingQueue to much but actively schedule the data transfer if the buffer is full. That would keep the buffer from constantly growing and would eliminate deadlock possibility.\nIf possible IO operations would be processed asynchronous but if not the IO operations would be performed by the thread calling the send.\n@TooTallNate \nWe could also solve the problem AND gain performance by making the handling of all the SelectionKeys asynchronous which should not be such a huge thing.\n. Ok, there should no longer be problems with the internal queue.\n. The sec-websocket-key is one of the fields in the handshake that slightly changed during some protocol versions.\nSo it is probably a version conflict and not a bug. I don't know if you can specify the protocol version on the node.js side. \nBut you can on the java-websocket side.\nThe header field sec-websocket-key is used in Draft10 and Draft17. In Draft Draft76 its called Sec-WebSocket-Key1. And Draft75 does not use any field in the header containing such a key.\nI'd consider Draft75 and Draft76 as deprecated but some servers and browsers might still use it.\nTry specifying a draft ( using the overloaded WebSocketClient constructor ).\nMyWebsocketClient( URL url ){\nsuper( url, new Draft17() )\n}\n. For compatibly tests I use \nhttp://www.tavendo.de/autobahn/testsuite.html\nand\nhttp://websocket.org/echo.html\nThe server ws://echo.websocket.org does accept all kinds of protocol versions.\n. should be fixed with 40573633ca959fa67a4b6a1364ec51a86d1bd8ad and 35ddeec065cba2d46c05c902ca0a6a6f085ac9f8.\n. i agree that request.rewind() has to be rewinded before writing. \nThat bug should have been introduced in 2a59cf7db6a3c31c5a7880b3cc11e624feb47e98.\nBut why would you want to close the connection after the opening handshake?\n. Which side fails the connection?\nThe console debug output would really help to understand the problem.\nWebSocket.DEBUG = true;\nI am currently improving the error feedback and the overall closing behavior( 72dbce92f5ca3a072639df7042490a95680edff9 ).\n. try to insert a\nresponse.setHttpStatusMessage( \"WebSocket Protocol Handshake\" );\ninto Draft76.java line 143\n. fixed in 1a5a91e\nsee #68\n. yep some changes seem quite important to me...\n. 1. Does #66 help?\n2. Are you using the latest version including the changes of #68?\nSome more details would be nice...\n. hope that helps\nif there still problems please post some debug console output as suggested in #66.\n. Thanks for pointing out that bug!\n. @detro thank you very much for your efforts and goodwill!\nUnfortunately this pull request is unmergable... viewing the diff causes my browser to hang!!\nImagine how this deletes would let the repository size explode, if we put the updated files in place afterwards...\nWhile figuring out how to deal with all those contradictions i could have committed them by myself.\nFor the future i suggest that you leave the maintenances to repo owner.\nHowever a clear improvements or new features like #29 are obviously more than welcome.\nFurthermore i hope that you keep your opinion about this project so that we can benefit from your relevant source code modifications.\nFeel free to visit the irc channel linked in the readme for further discussion or clarification.\nEDIT: Please consider that source code beautifications which are not conform with the style of CodeFormatterProfile.xml ( generated by eclipse ) are likely to be undone.\n. Looking at the commits i see either minor beautifications or arguably deletions.\nIt should not be a problem to delete latter just in your working copy. Further discussions about that should take place in a separate issue.\n\nDiscussing about \"maintenance for the repo owner\" when the project is so young and small seems a bit \"excessive\" to me.\n\nSince i am not a native english speaker i hope that you excuse my \"excessive\" manner of expression.\n\"specific code guideline\" for such a project might be overkill...i agree with that but\non the other hand what else that \"hiccups\" did you fix?\n\nI must admit, I feel a bit \"pushed back\" here: this is a small project and you guys seem to be making a big deal out of this.\n\nThe big deal about this small project is absolute W3C compatibility, good usability and performance.\nAnd we will only achieve that by putting a lot of effort into it.\nWe got quite far yet but we are not done. \nThere is a lot to document, there is ssl support to come, there is room for performance improvements... .\n\nAnd all I'm doing at the moment is try to help making it as conforming as possible to the W3C specs (yet, maintaining a java-ish style).\n\nIf you find any issues regarding W3C conformance let us know, or fix them yourself.\nThat would be a reason to join forces.\nAlso i wont merge this pull request i will probably take over the send* methods you added/overwrote after taking a closer look at tham.\nI wish you good luck for your work and am looking forward to join forces in the future.\n. puh That took some doing so far.\nI for myself never had to use fetching and cherry picking in the past (guess why).\nBut i wanted to take a closer look at that anyway.\ni will borrow @Subito's git book :)\nCertainly i wont have time to do anything before next Friday though.\n@detro You could comply with this pull request by mastering the black art of cherry picking and  whatever else is needed yourself. \nNo pressure :)\n. oops, the pull request i just merged (1a36700 ) was #72 not 74\n. a0a5f92 should fix the NullPointerException\ncc859aa also fixes an error with the draft75 handshake\nBut we should not merge just yet.\n. xd my eclipse was out of sync with the file system\n. Ok i think this pull request can be merged now. \nI briefly tested all drafts locally and did a full client and server autobahn test.\nThe current other issues are separate from this pull request.\n. The fact that the server makes use of a queue at all is an implementation detail that might change over time.\nIt the future there may be multiple queues for several executors threads or data may be written directly in the send methods if necessary even though thats unlikely to happen.\nHowever you can be sure that the data you send out will be send out via the socket as soon as possible.\nI'd like know in which way you depend on this information.\n. There are a lot of specs could you link it?\n. At witch revision is you latest version?\nI'd really like to see/use your test code!\n. ok ok i will write my own stresstest\n. I tested and i could reproduce the problem with the hang.\nI only worked localhost but i had no problems with cpu usage so far.\nIronically stress tests produce the same problem as #61.\nSince this is a very fatal show stopper it will be the next thing i focus on after #74 is \"pulled\".\n. 1. as long as your server test code creates one thread per connection its obvious that you get a performance problem when connecting 5000 clients.\n2. spamming std out will additionally slow down the system\n3. The method connections does the job your list variable does\n4. An error does not indicate a loss of the connection(i hope its documented)\nConclusion: That is not the way i would write a stresstest. The hang you encounter needs to be fixed in the websocket sourcecode. The code of #61 might help you to fix the problem for the moment. \nI will take a closer look at that and the general stress testing next weekend. Maybe we can resolve the problems a bit more direct via IRC then.\nps: a bit more explanation on what the images shall show or prove would be good ( next time ). \n. i am available in the IRC every evening. The link is in the README.\n\nas long as your server test code creates one thread per connection its obvious that you get a performance problem when connecting 5000 clients.\n. Lets do more discussion and stuff  on #79\n. The fact that the implementation makes use of a queue at all is an implementation detail that might change over time.\n\nIt the future there may be multiple queues for several executors threads or data may be written directly in the send methods if necessary even though thats unlikely to happen.\nHowever you can be sure that the data you send out will be send out via the socket as soon as possible.\nI'd like know in which way you depend on this information.\n. Ok for those who want to do sophisticated bandwidth regulation those changes are indeed helpful.\nThe access to bufferQueueTotalAmount must be synchronized though.\n. thanks.\nI think you should synchronize on bufferQueueTotalAmount though.\nEven if you have to make bufferQueueTotalAmount an Integer.\nThere is no need to block the entire object during those operations.\n. I think we can merge now, even tough i don't really see the need.\n. Thanks for the inspiration\n. @detro I really respect your endurance. Hopefully we can work together on a feature we both endorse in the future.\n. You want to  be able to track the time certain operations take to complete?\nWhich period do you what to measure exactly? Form when the data was submitted to when your return handler was called?\n\nHow long it took to connect to the WS Server?\n\nOverwrite connect and onOpen in your own Implemenation.\n\nHow long did it took to send the Handshake?\n\nYou could add a blocking variant of the startHandshake/connect method for that..\n\nHow long did it took to receive stuff back?\n\nI'd simply measure sendMessage to endMessage ... \nIf you want to measure the time read and write itself takes you will probably need to touch the Server or Client guts...\nSo i rather hope not that are about to do that. Not for this purpose.\n. I think there will be much do discuss. So please pull as soon as possible. Even if its work in progress.\n. > \"timings\": {\n\n \"blocked\": 0,\n \"dns\": -1,\n \"connect\": 15,\n \"send\": 20,\n \"wait\": 38,\n \"receive\": 12,\n \"ssl\": -1,\n \"comment\": \"\"\n\n}\n\nSo what do you want to measure exactly? \n. > I'm still evaluating what can be done to make sure the API allow to reconstruct the timings of the connection and transmission over the socket.\n\nThis was to see if you have thought about it and, if so, what do you think.\n\nLets discuss that in the evening via IRC.\n. ok\n. i think we can close this issue now after 5 month...\n. I will be on the  #java-websocket IRC in about 2-3 hours to solve the problem with your help!\n. > we use an websocket server writtened by C# running on a Windows 2003, It only takes about 5% of CPU with about 5,0000 users.\nKeeping the connection alive is cheap in java as in c# especially when using asynchronous io :)\nYour cpu usage will scale with traffic not with connections.\n. Have you made sure that the server does not run out of memory by using the -xMx VM Option?\n. > the latest version does not release,and it take more and more memory unless i stop it.\nWhat about traffic, rough framesizes, client counts, your profiling instruments, used drafts, and theads.\nI don't want to have to worm the details out of you.\nps: The vm wont release physical memory just because your program freed it. You should use a proper profiling tool like JVisualVM which is part of the jdk on windows.\n. @zzzhr @komimima \nare you sure that you don't simply run out of memory?\n. ok there are some thinks i can do in order to improve the poor performance \nof this draft significantly...\n. The old drafts work faster now( git@github.com:Davidiusdadi/Java-WebSocket.git 31dcbc117f3fcb02dcaa0937647741319729ef16 ).\nIt is not optimal but i wont implement a legacy draft a second time.\nTip: Sub classing draft75/76 allows you to adjust the buffer sizes to your special needs using createBuffer and increaseBuffer. Setting the global variable INITIAL_FAMESIZE serves the same purpose.\n. Beside using the multi threaded server i suggest to adjust Websocket.BUFFERSIZE on startup to your needs.\nThe message size( in bytes) should be big enough that it exceeds the received message size as seldom as possible.\nThat could help to decrease the ram usage when dealing with multiple thousands of connections.\n. Websocket.BUFFERSIZE has been renamed to WebSocket.RCVBUF...\n. Everything is faster and less ram intensive by now. :)\nI'd really like to know how things are going for you with the new server...\n. Thanks for the detailed description of the problem.\nIt helped me a lot to reproduce the problem! \nI will push a fix this evening.\n. ok the problem should be fixed now( 575b29eeadf1246fdbb63e8894a800151ecfbdf9 ).\n. that looks great!\nthank you very much.\n. Thanks for the report \nI don't see the difference in your post yet.\nProbably because i am not to much into ant myself.\n. @TooTallNate Do you add a note for that in the readme? \n. #79\nwell i just discovered that this pull request still has a performance issue.\nI am going to fix that during the next few days...\n. How 95a615e works: \n- The selector thread selects the websocktes that are ready for io operations (using the selection keys) and puts them into the blocking queue.\n- The worker threads then takes the websockets form that queue and performs the message encoding and its delivery via the handlers.\nThe queue will block until its there is space free which happens when the selector puts new websockets into it.\nThe queue will also block a worker thread if there is currently nothing in the queue until the selector puts something into it.\nThat way none of the threads will ever be idling. They are all either blocking or doing something.\nCurrently messages will be sent in a blocking way unless the messages are sent form inside a message handler.\nIn the latter case sending the messages out over the wire will be performed directly after the messages delivery.\nThe websockets handleRead method must only be called once at the same time. During one select operation of the selector thread a websocket can only be put onto the queue once. But because a worker thread could still process a message of a previous selection i declared it synchronized. I also thought of using an an atomic boolean to abroad handleRead if there is still an handle read in progress but if that message would be the last message of a sequence of multiple ones there would be no way to detect that the channel of that websocket is ready to perform a read operation on.\nSince i am not 100% sure when keys are put onto the selected key set i thought that would be the safer way.\nConclusion: The probability of 2 or more worker threads wanting to enter handleRead at the same time is unlikely an becomes ever more unlikely as more websocket connections there are.\n. Since the current head of this project is not working properly for more than a week now because i made a stupid mistake during merging stuff that should have belonged to this pull request i will now merge this pull request to be able focus on one branch instead of too.\n@Sippykup Thanks for revealing those problems!\n. thank you very much\ni am going to merge soon\n. i agree that we should not put unnecessary stuff into the jar but i don't think that we should split the source itself in half or something like that.\nId rather create extra ant scripts/targets for that purpose.\nIt might be harder in the future to separate the server, the client and the common base. For example #83 the multi threated server could be easy used as base for an (additional) multi threaded  client implementation. I know that this is not useful for mobile devices but for everyone who wants to use websockets simply as a protocol that provides basic framing.\n. @DanielYWoo I am going to create such a server package\n. Sorry that it took me so long.\n. What does not work?\nEDIT: Please post the full log.\n. well the NullPointerException is a bug.\n. well the commit obviously prevents the NullPointerException but since the exception was thrown during closing you might still want to know for what reason the connection is closed.\nThe close code might give information on that. \nThe meanings of the different codes are described in the class CloseFrame.\nI also did not understand what you mean by QUAD but as long as the text messages you send are valid utf8 you will be fine. So there should be no need to worry because of \\0.\n. @TooTallNate Dammit, i got confused with my local branches and accidentally pushed some commits belonging to #83.\nI am afraid that i would completely mess up my local repo so i wont try to undo the latest push but rather hurry to merge #83 completely.\n. please send me the stack trace of the exception given to onError and (example) payload if any send by JavaScript.\nEDIT: \njava\nstringUtf8( utf8Bytes( \"\\0\" ) );\nstringAscii( asciiBytes( \"\\0\" ) );\nThis test code does not throw, so it seems that \\0 alone is not the problem...\n. @TooTallNate it appears that \\0 marks the start of a frame in draft 76. I will take a look at the detailed framing of that draft but i am not sure what the result will be...  \nProbably the legacy draft 76 has been implemented in an sloppy way so that the characters with the codes 0 or -1 may not occur in the payload.\nI will give you an update as soon as i know more.\n. Looking at\nhttp://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76#section-1.2\nhttp://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76#section-4.2\ni could neither find a statement that would explicitly disallow those characters nor how to deal with them if they are in the data that is about to be processed yet. Can anybody else?\n@egslava  Bringing up that example was unnecessary. It just proves the obvious fact that \\0 is a valid utf8 character...\n. When you talk about the socket interface do you mean the server or the client side?\n. i never needed to authenticate to a proxy when using websockts and also did not considered it during development even though it is covered by the protocol specification http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17#page-17\nSo sooner or later i will take care of it.\nRegarding this blogpost: Someone discovered that nonblocking io consumes more memory than blocking one...by use of his smart mind and fancy inspection tools. He  probability also thinks of  wappers as an antipattern because of performance loss duo avoidable function calls. \nIn case of my humble english could not stop you from despising nio you will probbably want your non nio websocket :) \nProbably someone will have to implement such a non nio client then. It would be great if that someone would be you.\nBut currently there is not so much you can do because the IO related stuff is not yet 100% separated from the rest.\nBut because we want wss we need that separation anyway.\nAfter pull 83 is through i will make sure that one can build his server or client as he likes.\nEDIT: I highly likely can not lock horns with the author of that post in such topics also its fun to act as if :)\nSomeday....\n. We don't have proxies yet but there is progress :)\nIt can be easily implemented the same way ssl has been implemented:\nYou derive a new class from WrappedByteChannel ( just like SSLSocketChannel2 does) which performs the proxy stuff.\nI have not yet looked at how to \"talk\" to a proxy but it seems to be simple:\n\nCONNECT example.com:80 HTTP/1.1\n              Host: example.com\n              Proxy-authorization: Basic ZWRuYW1vZGU6bm9jYXBlcyE=\n\nI think i will have implemented it within the next month.\n. Until now there has been no proxy support. But i just introduced basic proxy support in 76d1206.\nThe default proxy-\"handshake\" uses this scheme:\n\nCONNECT example.com:80 HTTP/1.1\nHost: example.com\n\nI just copied the scheme it from http://tools.ietf.org/html/rfc6455#section-4.1 and did not even tried out if the code works since i currently do not have a proxy at hand.\nIn order to get better proxy support i would like you to take a look at src/main/example/ProxyClientExample.java and implement what is still missing. \nLets stay in contact to get proxy support working as soon as possible.\n. ops, seems i forgot to commit that file. i will push it after work around 8 pm GMT+1\n. @sippykup Thank you very much for isolating that problem!!!\nYou updated to the current head didn't you?\n. During the last weeks i could not do as much as i'd like to do but i think that by the end of this week we should be through with this issue, #83 and #86.\n. Now with e256ec587287903aa1b7d54f50448525b13fcf58 those problems during the handshake will be history.\nThe infinite loop problem has also been fixed.\n. i think we can close this issue now...\n. This issue should be fixed with #90.\n. i think we can close this issue now...\n. Thanks for pointing out all those problems!\nProbably this problem has just been solved by the pull request #83\nMay i ask which client you use to connect?\n. thanks\n. Id like to know on which revision you use to work on because a lot changed form 8f17f248f3246ef5e3ec24f8091d150f6a2893a6 to fe10a641a21f88735314370e87047f006ce7a0c4\nThere are several situations where we perform blocking operations without timeout. But if that operation could block infinitely by design that would of course be a bug( there were such bugs in 8f17f248f3246ef5e3ec24f8091d150f6a2893a6 ). \nThe current server is still work in progress. \nHowever in the current head fe10a641a21f88735314370e87047f006ce7a0c4 those timing and synchronization bugs should be fixed. I tested against google crome, safari, IE9, firefox10 and opera12 and the autobahn testsuite.\n90 should also be fixed.\nThe reason why i respond that slowly is because i don't like to tell things i am not 100% sure about.\nI need a couple more days to be sure that everything is working properly now.\nBut if you have the opportunity to TEST the current version and give feedback, that would be more than appreciated.\nPossibly we could cooperate more efficient by using Skype. My skypename is equal to my git one.\n. There happen 2 kinds of blocking operations in the server:\n1. The operations on the queue containing websockts which is filled up by the selector thread and gets emptied by the worker/decoder threads.\n2. The queue which contains buffers which are used to carry data read from the socket channels.\nIt is absolutely essential that the same amount of buffers taken from that queue will finally be put back into the queue! And therefore there are a bunch of finally block that ensure that.\nThe worker threads take websockets from the \"ready to decode\" queue in an infinite loop until they are interrupted because the server terminates. Because the queue blocks there won't be any idle burden.\nThe queue kind of works as conditional lock in both cases. With regard to 1. and 2. there is really NO reason whatsoever to do anything until this condition gets complied or the server goes down. Whatever kind of timeout triggered operation would just add avoidable idle burden and the only thing that could be done is to restart the operation.\nPlease excuse my humble English and thank you for creating the opportunity to to clarify how the \"new\" server works.\nI am desperate to put this code into actual production and i will follow the \"THERE WILL BE BUGS\" attitude as you say.\nAnd thank you very very much for your efforts.\n. Its not theLinkedBlockingQueue.put() that blocks but the LinkedBlockingQueue.take().\nAnd the number of buffers( WebsocketServer.buffers ) is a limited resource and won't just grow because there is more data available to read. \nThat means that there are 2 cases in which the selector thread will rest\n1. If there is nothing to read or write\n2. If all available buffers are currently in use\nAt first i thought i would be best if every worker thread had his own queue but then selector thread would as soon one of the workers queues is full.\nSo yes this issue was took care of month ago.\n. well hopefully no one has :)\nBut yeah ... you found a bug. One of those \"sometimes it does not work\" ones...\nProbably you get some kind of error on the js side.\nI am going to fix that in the within the next hours!! xd\n. The same bug also causes #91.\n. Well i just tested\nChrome 20\nFirefox 12\nOpera 11\nSafari 5.1\nIE 10 via flash fallback on port 843\nwith socket RCVBUF set to 1 just to cover all obscure cases.\nThat took some time :D\n. yes there is going to be wss support!\nThe effort i will have to put into this is about 4-7 days full time.\nI can only work on the project after hours so I think wss support will be implemented within the next 3 month.\nI have been working on it the last time a few moth ago: https://github.com/Davidiusdadi/Java-WebSocket/tree/wss.\nThe code in the wss branch does not work properly and the approach was only experimental to get known to the api. So don't blame me for how it looks!\n. i think we can close this issue in favor of  #111.\n. Please excuse me but i never get what version you are talking about. What do you mean by \"patched\"?\nIf you don't work on the TooTallNates master branches head there is little i can do to isolate/fix problems.\nAnd every other version than that is definitely either less functional or more buggy :P\n. This issue appears to to be the same as #91. And i fixed that. And as long as you do not apply those fixes by using to the current head you will run into strange problems. \nI saw that your patches cover the same problems but not in the same way i actually fixed them, and possibly you did not covered everything.\nThe current head is the most stable one and I understand the how such words sound to someone how runs a productive system. But thats how it is.\nHowever I do not spam the head with untested code! My untested revisions will reside in my own fork until i tested them properly. Only then i will push them to TooTallNate. And after a major feature is complete there will be a new tag after some weeks.\n. Normally the InvalidFrameException will be thrown if a frame is broken which would be the fault of a client.\nBut the revision c9447016df6f74bd04bbd7589643493ea03f1a7e introduced some bugs that are only fully resolved in the current head. So i think that there is no relation between this issue and that stack overflow answer. \nG8\n. Will you close this issue?\n. kk\n. Thanks for reporting this problem.\nIn the future revisions sendFrameDirect will no longer exist. \nsendFrame is the right method to send messages and will always send the message as soon over the network as possible.\nHowever i think that it is possible in certain conditions that sendMessage will also perform an io operation and therefore would thow a NetworkOnMainThreadException. \nI will fix that within the next 2 days.\n. The clients sendFrame method will currently never perform IO operations directly.\nApart from that i removed the methods which perform IO operations directly, from the class WebSocketImpl, in my own fork.\nTherefore I will close this issue as soon as #99 is through.\n. Thank you very much.\n. I will close this issue as soon as #99 is through.\n. This pull request contains \n- the fixes for #98\n- a bunch of refactoring\n- a first draft of wss support for the server\nI could not yet test the wss support merged from @fomojola because i have not had time setup a proper testing environment but i am going to merge it anyway because it is the way to go. No one will be harmed if it is included because it completely optional and therefore does not effect any already existing functions even though everyone can test and improve it.\nThe current state the server and the client passes the Autobahn testsuit with one minor exception: \nWhen receiving a broken frame the connection will not be immediately closed as demanded.\nAs soon as this issue is fixed i am going to merge.\n. There are 3 cases in which onError() will be called with conn == null\n1. If the server can not bind the ServerSocket on startup // ex == IOException\n2. on uncaught RuntimeExceptions\n3. If an IOException occures on a channel which has not yet been assigned to a websocket\n. @fomojola thank you very much!\nI will approach \"merging\" as soon as i can.\n. @fomojola  how did you make your browsers accept the certificate?\n. WebSocketClient.java and WebSocketServer.java do not care if you use ws or wss. \nThe WebSocketFactory allows to use custom websocket and channel objects and can therefore be used put an ssl channel in place.\nSSLServer.java shows how to do that.\nPlease also consider #111 and https://github.com/TooTallNate/Java-WebSocket#wss-support.\n. Your blackberry is not working? Try: http://www.youtube.com/watch?v=kAG39jKi0lI\nNo seriously, i'd really like to help you but i did not understood your problem yet.\nCan you connect at all and do you receive any messages at all?\nAnd what do you mean by \"sendet device\"?\nFalls du deutschsprachig bist, kannst du es auch gerne auf deusch versuchen...\n. Dein Server sendet also immer mit sendToAll.\nUnd die Clients senden Nachrichten an den Server, der die dann an alle verteilt.\nUnd alle au\u00dfer dem blackberry empfangen die Nachrichten...ist das so richtig?\nVon was erbst den dein Server? Und bist du auf der aktuellen head revision?\nHast du mal \u00fcberpr\u00fcft, ob onError auf dem blackberry nicht aufgerufen wird?\nDu k\u00f6nntest mal Websocket.DEBUG auf true setzen. Dann siehst du wenn Nachrichten reinkommen in der Konsole...\nGenaueres kann ich leider momentan noch nicht sagen. Scheint, als m\u00fcssten wir und weiter rantasten.\n. Es gibt nur die server und die clientseitige Websocketimplementation gibt, und keinen Code der z.B speziell f\u00fcr eine Plattform w\u00e4re.\nAber auch wenn wir jetzt schon auf deutsch schreiben verstehe ich noch absolut nicht was eigentlich nicht geht.\n\nnur eben keine antwort auf meine anfrage via websocket\n\nWer sendet was Daten an wenn und wer empf\u00e4ngt was nicht?\n. Ah ok also ich habe zwar gesagt, dass alle Ger\u00e4te die selbe Implementation benutzen, allerdings k\u00f6nnen die verschieden Clients verschiedene Protokollversionen benutzen. Und die ganzen mobilen Plattformen sprechen sehr beschr\u00e4nkte und veraltete Dialekte/Drafts des Protokolls. \nEs w\u00e4re f\u00fcr mich sehr interessant, ob das blackberry Draft_75 oder Draft_76 spricht. Dann k\u00f6nnte ich den Fehler besser finden und fixen. Wenn du Websocket.DEBUG einschaltest wird beim verbinden eine entsprechende Meldung auf dem Server und auf dem Client ausgegeben.\nIch werde auf jeden Fall nochmal untersuchen, ob Leerstings bei einer der alten Draftimplementationen \u00fcbergangen werden.\n. I am not sure if i understand your question correctly but\nthe onOpen method should give you all the information you need.\neg. ClientHandshake::getResourceDescriptor to optain the \"path\"\n. @rydre thank you very much indeed and please excuse me for being as quite as a mouse.\nAs non native speaker you never know when you ** up the idioms :D\n. that should fix it\n. thank you very much. i will apply your fix.\n. Generally i would orientate on examples in the example folder.\nI myself used the screen tool to launch my custom websocket server jar...but i have not used the library in combination with any build management tool or integrated it into a framework such as \"Play\" also that is possible.\nI am not sure if that answers your question.\nIf not, please give a bit more informations about what you want to do.\n. i assume you mean node.js.\nUnfortunately i have never used node.js\nBut @TooTallNate is a node.js expert.\n. I just use java with Java-Websocket as library.\nI derive my custom server from WebSocketServer.java as the example does. I fill in my custom behavior by overriding the abstract functions.\nAfter compiling i start my custom server just as i start every other java program.\nOn my server i use the unix screen command to start the program.\nIn my case the websocket part is always standalone and separated from the http service provided by an apache. That simplifies the setup but also forces me to use an other port than 80.\n. > at server side,can i use tomcat?\nUnfortunately i have no experience with Tomcat but far as i know tomcat comes with its own websocket implementation. \nPossibly you can bend Java-Websockets signatures to match tomcats requirements( interface wise) but i am not the one to answer that question.\nBut if you find a solution with or without tomcat please let me know.\nIt would be great to have a tutorial on how to integrate Java-Websockets into other libraries and frameworks. \n\nif i use iOS socket.io as clite side ,also can use your server?\n\nThe websocket client and the server side ( no matter which implementation ) are 100% independent and will be able to successful communicate as long as their protocol versions match. So consider which protocol draft/version you want to pick on the Java-Websocket client side. https://github.com/TooTallNate/Java-WebSocket/wiki/Drafts\nThe Java-Websocket Server is able to detect the clients protocol version and is able to communicate with every kind of ws client. Most other implementations ( such as the Tomcat one ) do only implement one specific version.\nTomcats and most current mobile browsers probably wont match, yet.\nXD this version jungle is quite a mess. Java-Websocket is meant \"normalize\" that mess.\nOn the other hand it does not help you with setup and integration very much...\n. i made a commit( afa1498797b73d7d8f9c41f79e616188d210f181 ) regarding that in my own repo 2 days ago but i have not yet pushed it to TooTallNate. It should prevent CancelledKeyExceptions on the client side at all. \n. thank you. i will merge soon.\n. Because of 0b98aead8541b26062840301f86a92c37ecbc61b i only merged the part of  #108.\nThanks again for uncovering all those flaws and bugs.\n. thank you very much for your help. \nMaking those variables volatile is probably the most efficient way to solve this problem. \n. lol it seems github closed the issue as soon as it read \"fix #110\"\nThe github network view looks funny now but the commit has been merged :)\nEDIT: oh and sorry for the shitty commit message xd\n. thank you\n. i deleted my comment because i misread something...\ni will check if there is a racing condition or something like that.\n. Does it help if you change \njava\nif( key != null ) {\n            key.attach( null );\n            key.cancel();\n        }\nto\njava\nif( key != null ) {\n            synchronized ( key ) {\n                key.cancel();\n            }\n            key.attach( null );\n        }\nin WebSocketImpl line 430\n. I consider occurring RuntimeExceptions as programming errors whenever possible. \nBut since programming errors are not intended onError's main purpose is to inform about protocol and io errors not about bugs in the lib also latter will also be forwarded to that method so one can recognize and fix them so that they will never occur again :)\n. You are right that there the other operations on the key also have to be syncronized. But that would add a lot of locking throughout the whole time a connection exist also the racing condition only occurs when the connection gets closed. \nSo i will see what can be done to get around that locking.\nApart from that the VM should actually clean up the attached websocket object with its key. \nTherefore you can just remove key.attach(null) and everything should be fine.\nI dont exactly remember why i added the attach null line though. It might had something to do with \nhttp://jfarcand.wordpress.com/2006/07/06/tricks-and-tips-with-nio-part-ii-why-selectionkey-attach-is-evil/\n:D\nI will reread the article and decide then what to do about the problem.\nIf you have any suggestions please let me know.\n. http://docs.oracle.com/javase/1.4.2/docs/api/java/nio/channels/Selector.html\nsays during selection: \n\nEach key in the cancelled-key set is removed from each key set of which it is a member, and its channel is deregistered. This step leaves the cancelled-key set empty.\n\nSo there should not be a need to unregister channels/keys manually as long as we chancel them ( which we do in WebsocketImpl.closeConnection ). \n. Besides:\nAs far as i understand http://jfarcand.wordpress.com/2006/07/06/tricks-and-tips-with-nio-part-ii-why-selectionkey-attach-is-evil/ is not concerned about a classical memory leak but that assigning buffers to selection keys which belong to connections that are more or less inactive for long periods of time is a waste of memory which can get fatal if you have thousands of them.\nIt exhorts to think about the limits caused by design decisions like how to organize the buffers. E.g. one per thread or one per connection?\nJava-Websocktes buffer strategy is a mix. There is a fixed bufferpool which is shared between all connections and more or less temporary allocated buffers per connection. Former are used to read from the channels and encode form and latter are used to store incomplete or continuous frames.\nSo the memory footprint depends more on the scenario and the configuration than on the number of connections itself.\nPlease excuse my humble English.\n. i will close the issue as soon as everything has been merged to TooTallNate\n. To be honest: I never used that term before. I googled it but did not found a sharp definition...\nCould you explain what this \"cross domain access\" is and what it enables one to?\n. In onOpen you can check the ip address of the client and deny the conenction if it does not match a certain address.\nThe unpleasant thing is that onOpen well be called after the handshake is complete not as soon as a tcp/ip connection gets opened.\nI will add a new callback onConnect for that.\n. The problem is not in this library but in the websocket protocol specification you use.\nWhen your protocol version is Draft10 or Draft17 you can send whatever you want over the connection\nIf you use older drafts you should consider\nhttps://github.com/TooTallNate/Java-WebSocket/issues/87\nAbout Drafts: https://github.com/TooTallNate/Java-WebSocket/wiki/Drafts\n2012/9/6 Vikas Kannurpatti Jayaram notifications@github.com\n\nWhilst I am trying to send base64 string(image), that is represented in a\nJSON format for example\n{imagename: 'test', imagedata: 'base64 equivalent of the image'}, the\nwebsocket connection fails. Is there a limit on the number of characters\nthat the\nWebSocketClient.send(String text) function take?\nIf so how can I overcome this issue .\nAny thoughts or ideas regarding this is very much appreciated.\nCheers.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/117.\n. 1. You do not send the first message in onOpen which means that you could receive a NotYetConnectedException when calling ws.send\n2. org.java_websocket.framing.CloseFrame tells you what the closecodes mean.( I should better document that ).\n   Your code means\n1005 is a reserved value and MUST NOT be set as a status code in a Close control frame by an endpoint. It is designated for use in applications expecting a status code to indicate that no status code was actually present.\n\nThe onClose method should give you one more parameter wich tells you who closed the connection first. I assume that sever closed the connection. \nPossibly because its an http server which does not support ws at all. Or maby because the server has a maximal famesize. Also if the framesize was the problem a fully compliant ws server would send close code 1009.\nBefore i make more assumptions i would like to know what kind of server you are connecting to and on which revision you are working on.\n. @sansoy, @theturtle32 FYI\n@vikasjayaram Have you worked with the Java-Websocket Server?\n. no currently not. \nI never used maven. \nDoes maven only require one additional xml or is there more to do?\n. If anyone makes a pull request that makes this project work with maven i will merge.\nI myself am interested in working with maven but it will take me a few month before i make these changes myself.\n\nI probably overestimated the (initial) effort to get into a build automation tool like maven. Probably because i always thought about build automation in c++ via makefiles...\nTherefore i must admit that in the past i avoided projects using fancy build automation.\nOne reason that i got into this library was that the initial complexity to master JWebsockets seemed disproportional great... :D \nSo in order to not scare beginners and not to interfere developers who use other build automation tools or don't want to use maven for other reasons, we should not require anyone to use maven, which seems to be, unlike my initial impression, not a problem at all.\n. i will close this issue as soon as the readme is up to date...\n. i order to make java-websockets available via maven i just crated \nhttps://issues.sonatype.org/browse/OSSRH-4745\n. I have to go through these steps:\nhttps://docs.sonatype.org/display/repository/sonatype+oss+maven+repository+usage+guide\nI hope be ready for staging a release within the next week.\n. Please excuse my late response:\nI will continue with this issue as soon the current pull request and other urgent problems are solved and hope to have maven working in roughly a month.\n. @timmolter i would be glad if you could help me with the remaining steps to get maven working. Could you send me a Mail or add Davidiusdadi on Skype.\n. I think it worked .... :relieved: - we finally got a release: \nhttps://oss.sonatype.org/index.html#nexus-search;quick~org.java-websocket\nIf you manage to setup Java-Websocket as a dependency it would be nice if you could post the pom.xml related code so that i can update the readme file.\n@samskivert Thank you for your help! Without your help there would be no release today!\n. just updated the readme\n. hm as far as can tell the client does neither use WebSocketImpl.this.channel nor WebSocketImpl.this.key.\nSo you should get a NullPointerException when you call closeConnection witch your changes applied...\nI would like to know:\n- was the problem reproducible?\n- did your websocket use wss?\n- do you send messages form outside the callback handles like onMessage?\n- can you tell if there where any stacktraces printed to the console before/during the hang?\n. Its a pity that no one noticed this bug before. \nIt seems like the client thread never got terminated properly unless the server terminates the connection.\n@stiletto Thank you very much for reporting this bug!\nThose commits fix the problem. Just pull the latest version of my repo.\nI am going to merge those commits within the next few days to tootallnate.\n. Usually i would say:\njava\n@Override\npublic ServerHandshakeBuilder onWebsocketHandshakeReceivedAsServer( WebSocket conn, Draft draft, ClientHandshake request ) throws InvalidDataException {\n    Set<WebSocket> con = this.connections();\n    synchronized ( con ) {\n        if( con.isEmpty() )\n            return super.onWebsocketHandshakeReceivedAsServer( conn, draft, request );\n    }\n    throw new InvalidDataException( CloseFrame.POLICY_VALIDATION, \"maximum number of clients excedeed\" );\n}\nThis approach establishes the tcp connection and lets you decide if you want accept a connection based on the handshake data. E.g. someone could require a certain cookie to be set...\nBut since that is not exactly what you want to do i just made a new commit. Therefore you should pull before you try this approach: \njava\n@Override\nprotected boolean onConnect( SelectionKey key ) {\n    Set<WebSocket> con = connections();\n    synchronized ( con ) {\n        if( con.isEmpty() )\n            return true;\n    }\n    return false;\n}\nThis way the new connection will be refused as soon as even possible!\nUnfortunately connections(); returns only fully connected websocket connections. Therefore the server will accept multiple connections if they connect simultaneously. :(\nTo work around this racing condition i would additionally use:\njava\n@Override\npublic void onOpen( WebSocket conn, ClientHandshake handshake ) {\n    Set<WebSocket> con = this.connections();\n    synchronized ( con ) {\n        if( con.size() > 1 )\n            conn.close( CloseFrame.POLICY_VALIDATION );\n    }\n}\nIf its no problem for you that you refuse connections only after the opening handshake has been performed you could just stick to the last snippet and ignore the other ones.\nWhen you refuse connections via snippet 1 and 2 the remote host will never know why you refused in order to transfer close code and reason the connection would have to be established first. So if you think that a connecting client should be informed why you refuse the connection you should also stick to the last approach.\n. the only cases where interrupts are used are:\n1. when the server stops via server.stop() \n2. when the server stops because of a fatal internal error( RuntimeException )\nSo unless you call server.stop() i don't think its possible that the lib interrupts any of you threads.\nBeside that i would be interested if you encounter any RuntimeExceptions via onError\nand which methods your websocket server overwrites.\nps: i just read http://stackoverflow.com/questions/5336299/how-to-check-thread-is-sleeping and must say that interrupting a thread because is state  TIMED_WAITING is very error prone...\n. Beside the 2 cases there are no interrupts in the library at all.  I just double checked it.\nThat alone is explanation enough.\nThat is also the reason why i expect websocket server to continue working fine after the exception occurred.\n. Hey i just encountered a similar problem using the client.\nI could find the place where the interrupt happens by setting a breakpoint at Thread.interrupt.\nApart from that i would like to close this issue soon...\n. @mortan Your problem is different form the one of @flashmandv.\nDirect before this exception occured  onError had to be called with some kind of special RuntimeException which could be a OutOfMemoryError. Depending on what kind of exception was actually forwarded to onError this could be a Bug in the library...\nSince this Exception that was forwarded to onError was a RunTimeException the server began to shutdown. In order to do that it unfortunately interrupted itself which is where the above callstack comes from. Latter is a bug which i will fix very soon.\nBut in order to fix your problem we must know the exception that was forwarded to onError.\nYour onError should like something like this:\njava\n@Override\npublic void onError( Exception e ) {\n    e.printStackTrace();\n}\n;)\n. onError had to be called twice!\nYour callstack contains:\n\nat org.java_websocket.server.WebSocketServer.handleFatal(WebSocketServer.java:431)\n\nThis function will call onError in line 429 and than continue with \n\nat org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:219)\n\nwhich then threw the InterruptedException.\nThere has to be one more exception before the one you posted in the log.\n. Well, throwing exceptions in callback handlers should not cause the library to shutdown. Thats the first think i have to fix.\nThe second thing is the InterruptedException which should not have occurred - neither as a aftereffect.\nGood evening.\n. Interesting, does your VM crash or do you get some sort of Error/Exception?\n. You should use the VM Xmx option to prevent this error.\nThe problem is not the toString method but the fact that your frames barely fit into memory.\nYou probably already know about Xmx but here is a link to that topic:\nhttp://www.jafaloo.com/2011/10/30/java-xmx-memory-settings/\n. An other way is not to use so much memory... :trollface: \nOne think i wanted to do anyway is to allow to receive fragemented frames properly. Currently fragmented frames will be stored until all fragments of a frame are received and then delivered as one big frame. But receiving frames directly via an onFragment method would allow you to shrink the framebuffers size.\nWould that help?\n. I'd suggest that you disable the debug prints...\n. sorry that i didn't merge yet. :sweat_smile: \nI will take time out within the next few days to review the changes and getting started with maven.\n. i used java-websockets here: https://github.com/Davidiusdadi/ubar-org/blob/master/pom.xml\ndoes that help?\n. To be honest i never got such an error myself. \nLooking at\nhttp://stackoverflow.com/a/11432195/1534894\nhttp://stackoverflow.com/a/12028248/1534894\ni think its likely that there is something is mixed up with the java versions on your machine. \nIt looks like you compile with a higher java version than you execute your program with.\n. Your link points out 3 types of incompatibilities:\n1. Binary Compatibility\n   Can not be the case because all the classes and jars and what not have been created by the same compiler(java7).\n2. Source Compatibility\n   This would mean that you get errors during compile time, which is not the case.\n3. Behavioral Compatibility\n   UnsupportedClassVersionError has nothing to do with behavior.\nThese three cases are exceptions to the overall guarantee of backward compatibility.\nHowever, java does not grant forward compatibility.\nBut since \"Unsupported major.minor version 51.0\" sounds like \"Unsupported java 7 class\" to me i think that your problem has to do with the not given forward compatibility. \nSo i suggest that you tipple check which compiler and runtime version you are on & make sure that there NO websocket jar in the classpath.\nOtherwise i would like to know which operating system you are on. Possibly we can Skype to figure out the problem and fix \"the bug\" wherever it's coming form. My github name is also my skype name. \nIf anyone else has this problem please leave a comment.\n. hm interesting.\nAre only some words/characters displayed wrong or is nothing displayed at all?\n. could you fix the problem?\n. np\n. thank you i will fix this and #127 in the library \n. hi \nits a feature called nonblocking..\nThat means that all your operations such as send, connect and close are performed asynchronously. \nThat implies that in oder to send a message you have to wait for onOpen to be called and in order to reconnect you have to wait for onClose to be called.\nIf you not wait for the callback you will encounter racing conditions like the port being still in use.\nSince this problem happens so often i will add a blocking complement to connect and close...\n. Currently the websocket client and the server objects can both not be reused. It's because reusing objects introduces a lot of problems if you work in an multithreaded environment which theoretically all had to be synchronized.\nTo prevent the user from reusing the object we simply throw an RuntimeException. \nTo be honest, the servers errors message (which is \"Already started\") is quite misleading. \nSo probably your port is fine you just have to use an other object.\n. I could not reproduce the problem that the port is not unbound on stop (on windows), but i fixed some other things about that method...\nThe socketchannel is obviously closed in that method...\nYour example code looks like you reuse the same object, which obviously can not work.\n. Until now i managed to setup a test case in my emulator(android api 16).\nUnfortunately i could not reproduce the problem - everything works absolutely fine\nI am quite sure that the core problem is not  the result of a racing condition but of some other circumstance.\nSince the close mechanism relies on threads interrupts it would be fatal if any component (like android nio implementation) would \"swallow\" InterruptedExceptions.\nTherefore i am going to experiment a little in a new branch for this issue this weekend: \nE.g avoiding interrupts at all (at performance cost) or sending multiple interrupts in row...\nIf someone has the same problem please leave a comment!\n. As far as i know the problem could not be reproduced after switching android emulator...\n. Since java7 http://docs.oracle.com/javase/7/docs/api/java/net/StandardSocketOptions.html#SO_REUSEADDR can probably help to solve the problem. If somebody confirms that this approach works i will create a java7 branch to commit these changes in...\n. This library uses java's build in mechanisms validate certificates.\nhttp://stackoverflow.com/a/11145349/1534894 \nThis link gives a basic description how that works and links the official oracle Java Secure Socket Extension Reference Guide.\nThe examples also show how to specify your own truststore.\nTo use the java defaults i always initialize my sslcontext this way:\njava\nsslContext.init( null, null, null );\nEdit: Your paper looks very interesting. I will take a closer on the JSSE related stuff very soon.\n. Closing connections is one thing i am currently improving on. For example you should receive an appropriate exception (via onError) when you send data after you closed the connection(soon). \nThe problem is that term \"closed\" is ambiguous. Closing the socket is a process which is made up of a few steps:\n1. Peer1 queues the asynchronous job to send the close handshake. After this it is not allowed to send more frames. (The output is logically closed)\n2. The asynchronous job to send the close handshake executed and sends the close frame over the wire( which failed in your case ) after it completed other asynchronous operations like sending remaining frames( this will be guaranteed very soon ).\n3. Peer2 continues to send more frames until it receives the close handshake. Then it echoes the close handshake.\n4. Peer1 receives the frames( the data frames & the close frame ) sent by Peer2  and closes the socket completely.\nWhen using the current head revision receiving any IOExceptions or CancelledKeyException would be a bug.\nOne of the next steps will be to allow the user to control the shutdown of a connection properly...\nFor example there should be 2 close callbacks: onIsClosing which is called when you initiate the close handshake and onClose which would only be called after the connection is done with closing.\nCurrently onClose is more like an onIsClosing...\n. #136 splits the close handshake up into multiple steps. \n. :astonished: that hurts\ni will apply your fix today\nThank you very much\n. i hope i got everything now...\n. By default the websocket server does nothing except connecting. You will have to call send to send a message back.\nBe sure to check out Drafts. It is quite important to know which draft you are working on, since most servers only support one draft.\nPS: I will add some output to make the example more intuitive.\n. i just merged the changes to tootallnate so you can simply pull/download them.\n. A connection is identified by the websocket object itself.\nIf you have to store different kinds of informations in conjunction with a connection i suggest to use make use of a own websocket class derived form org.java_websocket.WebsocketImpl. This way you can attach whatever you want to your connection.\nIn order to make the server use your custom websocket class you have to call server.setWebSocketFactory with your own WebSocketServerFactory. I just pushed the class org.java_websocket.server.DefaultWebSocketServerFactory which shows you how to implement a org.java_websocket.server.WebSocketServer.WebSocketServerFactory.\n. Just in case you might prefer a different kind of collection to hold the current connection:\nThe latest commit allows to specify a collection in the constructor that then will be used for that purpose.\nI will merge these  changes with pull #136\n. Yes we are relying Objects hashCode and equals. The hashcode is as expressive as when using random unique id's for every websocket and comparing them.\nAs the id would the hashcode only tell if the websockets are the same. Therefore you can safely keep in containers and manage them in any way you want. \nThe factory approach is only a way to allow users to attach user data to the websocket which is extremely useful if users for example want to answer incoming messages right in the callback(onMessage).\nI would like to know in which way exactly you would like to distinguish websockts. \n. If you receive a message via onMessage the websocket is passed as first parameter. Therefor there is no need to iterate to find the websocket!\nAnd since the server is multithreaded you should take your time within onMessage and process the response right there if possible! Doing that is MOST likely (explanation below) the most performant, scalable and elegant way to serve multiple clients at the same time!\nIf you however want to send a response indefinitely later then i encourage you to store the websocket object directly since you need it to respond. One do not separate what belongs together :D\nIf the protocol you implement ontop of websockets is not stateless then i encourage you to make use of the factory in order to store your state together with the webscoket connection object itself.\nThe only real purpose to call connections() is to send broadcast to all connected clients and to send messages that CAN NOT be sent from onOpen or onMessage because they MUST be sent at a unforeseeable time over an unforeseeable connection.\n\nI say \"most likely\" because websockts are alway assigned to 1 worker thread and depending on the situation it is  possible that the distribution of the websockets on the worker threads, which is on consistently random, is not optimal which means that it is possible that you have 2 only connections, which are served by the same worker thread even though you have idle workers at the same time. But this circumstance  carries less and less weight as you get more and more simultaneous connections. \nOne last disadvantage of the connection being assigned to a worker thread permanently is that if one onMessage would block forever/very long all websockets scheduled on this  worker thread would not be scheduled in that time.\nThe fairness of the distribution should therefor only bother you when you know that that onMessage processing time may differ greatly. \nMaking the distribution (optionally) fair will be one of my goals in the future. The reason why i not already did this is because it forces more thread synchronization which kills performance and scalability itself.\n. Hey i guess you are working on the latest revision of TooTallNate/Java-WebSocket.\nI will examine this problem and give you feedback tomorrow.\nWhat i like to know is which server are you connecting to and what draft is used?\nSince the close handshake is a 2 way handshake the server has to \"echo\" the close handshake. Therefore the problem could be on the server side but we will find out.\nhttps://github.com/TooTallNate/Java-WebSocket/wiki/Drafts\nYou can optain the draft by websocket.getDraft() \n. Do you work on android?\n. Hm then this issue is probably the same as this one: #140\nI am not yet sure what is the cause but the android nio framework appears to behave somewhat different and i will fix that as soon as possible.\n. You can apply the fix for issue 140. I will check if there are more problems after close is called.\n. On the android platform (at least the android emulator) java.nio behaves really strange in some cases like #140.\nThis was one of the reasons why i made the client use as less nio as possible in pull request #146. \nI must admit the i was never able to reproduce this particular problem but since the implementation was changed (and simplified ) quite drastically i claim that this has been fixed by using blocking instead of nonblocking channels.\nBecause all the problems on android seem to come from poor SelectionProvider implementation i was uncertain if this explanation would last which is why i did not close this issue. \nBut since i see no way i could find out the real cause of your problem i will close the issue now and if any problems remain which i doubt we can reopen this issue.\n. If http://stackoverflow.com/a/7453555/1534894 helps you please leave a comment.\n. In my case the issue occurs every time i try to connect to an address that is not reachable.\nFirst the native method call Posix.poll called form selector.select blocks REALLY log and then returns. \nSubsequently the selector always returns immediately without ever invalidating the selctironkey/the channel which causes very high cpu usage.\nI have not fully checked if things do work better when channels in blocking mode would be used but it seems like the connect fails there too without any feedback.\nBecause of all this i am quite sure that the problem is not the code itself. When checking LogCat i encountered:\n12-15 20:26:45.743: A/NetworkStats(89): problem reading network stats\n12-15 20:26:45.743: A/NetworkStats(89): java.lang.IllegalStateException: problem parsing idx 1\n12-15 20:26:45.743: A/NetworkStats(89):     at com.android.internal.net.NetworkStatsFactory.readNetworkStatsDetail(NetworkStatsFactory.java:300)\n...\nFor this problem if found:\nhttp://stackoverflow.com/questions/8241068/weird-exceptions-under-android-4-0-with-eclipse\nI would like to know if anyone else gets the same errors or other suspicious LogCat output.\n. Then please apply the fix. \nEdit: Just pull from my repository\n. Please repeat gathering logs with Websocket.DEBUG=true;\n. In order do get things sort out as fast as possible i suggest you add me on Skype and we take a look at what strange things are going on here. I will be online in 3-4 hours. My skype name is Davidiusdadi.\nPS: I never expected that the android platform would be such a problem...\n. @unit51 This issue i wanted to fix has been fixed. If your problem remains please contact me via mail.\n. I would be interested to see as much of the stacktrace as possible.\n. I guess that harmony is the default ssl provider on android and you did not modify anything...\nYou can pass the provider directly  when calling SSLContext.getInstance. I suggest that you look into ssl providers a little bit. If you find android specific documentation i would prefer that.\nYour stacktrace looks somewhat strange: Could you update it and include the name of the exception?\n. https://github.com/TooTallNate/Java-WebSocket#wss-support shows what to consider and how to get additional information. I also read that some people have problems because android has a different root certificate list that you might expect...\nI hope  -Djavax.net.debug=all works on andorid too.\n. Hmmmm :D\n. Does weberknecht create the SSLContext for you?\n. The non nio way is always simpler, since java does everything for you. In the case of the websocket client the non nio way is most likely also more appropriate, since clients don't need more than one thread and android seems to have problems with some nio features (#140).\nI don't think that your problem comes form a bug in the Java-Websocket implementation but\nin order to simplify the usage i will also write a Websocket-Client that does not use nio.\nIt should be ready before next year.\nIf you don't preempt me i will try to reproduce and figure out the problem within the next few days.\n. @leggetter I never cared about host name verification since i thought that the sslengine would take care of that itself. Do you know anything about that? \n. @unit51 so you don't use Java-Websocket now do you?\n@leggetter Since last time we talked in #130 i trusted in the jsse defaults. But this security flaw you mentioned made me worry.\nYour fancy paper says:\n\nFor example, JSSE (Java Secure Socket Extension)\nhas multiple interfaces for managing SSL connections. The \u201cadvanced\u201d\nSSLSocketFactory API silently skips hostname verification\nif the algorithm field in the SSL client is NULL or an empty\nstring rather than HTTPS. This is mentioned in passing in the JSSE\nreference guide, yet many Java implementations of SSL-based protocols\nuse SSLSocketFactory without performing their own hostname\nverification.\n\nhttp://docs.oracle.com/javase/6/docs/technotes/guides/security/jsse/JSSERefGuide.html#HostnameVerifier describes how to override the default behavior. I am quite sure that you don't override the verifier to gain security but to do other things like contacting a specific dns server or increase timeouts.\nTherefore i think that Java-Websockets wss is secure.\n. @unit51 :smiley: \n@leggetter Thank you, i will add that link to the readme\n. @z4ce there are no external dependencies beside the standard library. i am however not sure which standard provider is included in you android.\nAs it seems in #187 stuff does not alway have to be complicated.\n. I said that i am about to write a second client which does not use the java\nnio library(which helps to get around some android specific problems). I\nwould include it as WebsocketClientNoNIO or something into Java-Websockets.\nThis version probably does not take long to implement, but i said it would\ntake till new year because i am not sure how much extra effort has to be\nput in wss.\nIf you only want a subset of the features in your final jar, for example if\nyou don't need the server, then we could build that into the existing maven\nor ant scripts.\nHave you experienced problems on android with Java-Websockets? Can you tell\nme a little about your own experience with pusher. Is it fast & easy...?\n2012/12/19 Phil Leggetter notifications@github.com\n\nOver the past few days I thought I saw a suggestion to create a new repo\nthat contained just the code required for a Java WebSocket client? Are\nthere plans for this?\nI'm very keen to use Java-WebSocket, hence my monitoring of the repo, in\nthe Pusher Java library (with an initial focus on Android). I'd like to do\nthis by including the client as a sub module in the our repo. In order to\ndo this right now we'd need to include the whole project, including the\nserver component.\nI understand that this may not align with other people's priorities. Just\ninterested to see if there were any plans for this? Could I/we help?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/142.\n. Haha i did not realize you where the developer of pusher when answering my mail - I thought pusher would be a an other websocket library written in java.\n\nI wish you good luck with pusher and am keen to support everyone using Java-Websockets in an productive environment! I consider the Java-Websocket server capable of serving a large number of clients simultaneously.\nIf you should choose to use the server we should set together and talk about some tweaks to gain maximum performance. Feel free to contact me directly via mail.\n. The client usually does not need to be setup with certificates.\nSetting up you sslcontext like this:\nsslContext.init( null, null, null );\nwill use the java defaults which are almost alway sufficient.\nThe only cases where you have to manually configure the client is if you deal with self signed certificates.\nAdditional android seems to require special setup on the client side which is unfortunate:\nhttp://blog.antoine.li/2010/10/22/android-trusting-ssl-certificates/\n. please try the vm option -Djavax.net.debug=all to find out about problems with certificates. Which address are you connecting to?\n. Which server are you connecting to? Do you also use the Java-Websocket server?\nI am just asking because it is also possible that the server does not properly reject the protocol versions it does not support? \nEdit: How do you notice that there is a problem with large payloads?\n. How does it fail? Do you get an OutOfMemoryException?\nEdit: I assume it does not fail silently..\n. 16384 comes from that your machine reads maximal this number of bytes at once.\nThe Draft 75 76 frames do not contain a header which tells how many bytes do belong to a frame.\nTo prevent attacks which would abuse the protocol and send an infinite large frame i decided to deliver incomplete frames by breaking them down into continuous frames. Therefore your missing data should be delivered via onWebsocketMessageFragment\nSince this behavior is not intuitive and decoding is not possible in most situations i will change that behavior to something more useful. There will be an extra call back allowing the user to control the maximum framesize and frames sent as one will only be received as one as you originally expected.\n. 1. Do you work on Android?\n2. Does the stack trace belong to the client or to the server?\n3. Who sends the message which does not get delivered properly?\n. I checked how this it can happen that data will not be sent immediately and will push a fix within the next 2 days.\nIts a racing condition which exists since 48cc2d30f0d309ad5a8eb257858894ddaa02b5b1...\nThis IOException you get is really strange - i personaly would not expect an nonblocking channel to thow an IOException because of a timeout since it kind of implies waiting for something, but since it is thown form SUCH a deep place within nio i guess that is just a somewhat confusing way of you nio implementation to tell you that  the socket connection got closed.\nI suggest to ignore all IOExceptions - currently they get forwarded very inconsequently, in a few revisions they won't get forwarded any more at all (which is a good thing). The onClose's closecode indicates the reason why a connection was closed though.\n. Every improvement is much appreciated - so thank you very much for creating this pull request! \nUnfortunately i am really not sold on the IWebsocket thing. For one part its because i don't know anything about guice. The other thing is that if these changes are necessary for being able to use guice there will still be only very few who use it and the rest is wandering about a confusing base interface name and its purpose...\nI will add the other improvements to the code base as soon as possible!!!!\n. LOL best misunderstanding ever. Please wait 5min.\n. With this interface enterprise development thing you really hurt my pride... :cry:\nIs putting \"I\"'s in front of Interfaces also a Java-Enterprise-Developer-Thing ; cause i rather consider such prefix stuff a C++ developer habit...\n. closed because WebSocket is an interface by now\n. Since a the number of worker threads is limited it is not necessary that every websocket connection allocates its own buffers. Instead the server keeps a pool of buffers is a queue which is shared among all connections. Controlling the overall amount of circulating buffers is a great to regulate memory footprint...\nI don't know what the current configuration/strategy is but the should be a few more buffers than worker threads.\nOf course everything that gets taken out out it has to be put back under all circumstances.\nIf that does not happen it will block forever which is a bug which has to be fixed. \nI would just like to know if you make use of wss?\nFor investigating the problem one will have to monitor the number of buffers in the queue during runtime and check the code for conditions where buffers are not returned to the queue they were taken from. To do that i would set the number of workers threads and the number of circulating buffers to one. First can be done via the constructor and second has to be done in the server buffer related functions - i would look in the constructor and the function that have the name buffer in them. \nThat the queue will block for a moment is not a bug; only when it never returns. Thats because when all buffers are in use that usually means that all worker threads are temporary busy with decoding.\nI will look into this problem further in a few hours though.\n. What you encountered is not a bug!!!\nMy explenation above referes to \u00b4WebSocketServer.buffers\u00b4 and i just verified that everything is fine.\nPlease don't get confused with WebSocketServer.iqueue \u00b4WebSocketServer.iqueue\u00b4 and\u00b4WebSocketServer.WebSocketWorker.iqueue\u00b4 if you studie the code.\nThe first wone is only needed when during wss communication. The second belongs to the Worker thread and is supposed to block most of the time. The reason is that the blocking state is the state when the worker thread is idling. If you are curious to it return than make sure that make sure that every worker has work to do. You can do that by making more connection that there are worker threads.\nThe next time please tell me if you have a problem or are just curious to understand  the code cause i was really terrifying that there would be a fatal show-stopping bug :)\n. sorry for my late response:\nThis is a bug. \nsocket.getLocalSocketAddress returns null after the socket connection got disconnected. In my opinion the javadoc for getLocalSocketAddress  is ambigious...\nYou probably get the nullpointerexception because the socket was closed be before even enough bytes of the handshake were transfered to preclude that the client performs a flash handshake.\nThe second exception is just a consequence of the first because the server is going down because of the uncaught exception.\nI can not imagine how this should happen frequently..\nHowever i will push a fix very soon.\n. If the problem you experience is indeed what i thing this should fix it.\n. well if a socket connection gets broken for whatever reason the websocket connection will also be closed.\nThose exceptions are therefore not the problem of the library; they just indicate that you have network problems - therefore you can just ignore IOExceptions and handle the closed event as good as possible just as you would have to do when establishing a connection using a browser or any other websocket client.\n. Well i can not reproduce that problem. Please give me some more details.\nIs the problem reproducible?\nYou can write \u00b4WebSocketImpl.debug = true\u00b4 to get additional output to the console.\nAnd i also would like to see the full stacktrace in this case.\n. As i just tested my browsers behave differently:\nIn Chrome everything is working fine and when the browser gets closed there won't be a close handshake.\nFirefox performs an appropriate close handshake in every case - GOING_AWAY is the flag when closing the browser.\nIn Opera one only needs to call websocket.close to reproduce the problem but when i close the browser there wont be any close handshake.\nInvalidFrameException will only get thrown when someone violates the protocol - and in my test case it was opera.\nBut since the browsers appear to do fine i guess that you cause the errors yourself as you close (multible) websocktes in your code:\nTherefore you probbably call Websocket.close in the wrong way - maybe by passing a 0 instead of something appropriate like CloseFrame.NORMAL ( http://tools.ietf.org/html/rfc6455#section-11.7 )\nSince you say that it crashes the server i guess the InvalidFrameException causes an infinitely recursion.\n. i did not hear of any problem related to this issue the last 6 month\n. thanks i will change that\n. @Alain-Bearez It does not matter but i am curious what android version you are (still) using?\n. thank you very much for finding and fixing this problem - i will merge SSLSocketChannel2 today.\n. hm i overcomplicated things by pulling everythin and then rebasing. \n@2fours You will possibly have to force a pull...\n. Do you mean that your code is working fine but there is a problem with what i merged?\nIf there is a general probelm i would like to know the exact exeption or build error message and the android version you are working on. \nThe solution suggested in #141 might solve the problem.\n. I am not an expert in javax.net but i don't see anything problematic so far:\nThe debug output pretty much gives information about every step in the handshake process which you can find out more about here: http://docs.oracle.com/javase/6/docs/technotes/guides/security/jsse/JSSERefGuide.html#HowSSLWorks\nAnd\n```\nwrite(183): {GET /jSkatServer/server HTTP/1.1\n host: diy-tobag.rhcloud.com:8443\n upgrade: websocket\n connection: Upgrade\n sec-websocket-version: 13\n sec-websocket-key: whhH59I8Ld2aLhl33YotSA==\n} \n```\nis an output made by Java-Websockets which suggests that the handshake was sent successfully( http://tools.ietf.org/html/rfc6455#section-1.3 )\nMy questing is now: Are you just confused by the log outputs or do experience actual connecting problems?\nps: I will mere #153 today which fixes a situation in which an ssl handshake never completes sometimes - and if this is the whole log output than i guess that you encountered that condition.\n. Do you connect from an android device?\n. I don't see anything wrong with the log output except that it is to short. I suggest that you update to the latest revision(9d9407e7c619690d3443a9927d8740bb1af5382f).\nIn order to find out if there is a general problem with the Java-Websocket Client i would like you to test whether you can connect to wss://echo.websocket.org.\nIn order to connect using the java default keystrore  \njava\nsslContext.init( null, null, null )\nshould be sufficient.\n. You did it all right - i can reproduce the problem and it is a bug.\nSorry for the inconvenience - i will fix this within the next days.\nThe bug should occur very frequently on all websocket clients after db8a47fbb7e0e2987bf38f9bdcffb2f177873806. \nSo just for testing you could use that revision until the issue is fixed.\n. hm strange, i am going to fix the bug this weekend.\n. this works fine for me but i have to do some more tests and documentation before closing this issue.\n. i am done for today.\nThis exception is funny because the sslengine should simply return SSLEngineResult.Status.BUFFER_OVERFLOW instead of throwing something like it around.\nSince i can not reproduce it i would like to get more logout put, using the latest revision. Also i don't understand how this exception could be raised in detail it is possible that the issue will not occur any more because i fixed a situation in which processHandshake is called in vain...\n. I want to finish testing and documenting and merge today. I am nor sure if understand you right? You want me to merge or do you think there is still something wrong with the fix?\n. It does not look like ssl would be the problem to me. I would rather like to see output with WebSocketImpl.DEBUG = true;.\nMaybe you can put the output in a gist instead of posing it here directly.\n. https://gist.github.com/ can sometimes be useful for uploading text and code snippets...\nI wander if you don't make any output when the connection gets disconnected? Does the connection get disconnected after this log output?\nIt looks like the server side rejects the connection as soon as the websocket handshake starts. I would be interested in what is happening on the server side.\nAnd instead of further guessing around i would like to talk to you on Skype and figure out what exactly happens. I would really wander if the java version would cause the problem and would like to see the bug happening in a debugger at least once. My Skype name is Davidiusdadi. \ng8\n. Since this library heavily depends on the use of channels there is currently no way around the SSLEngine.\nThe only workaround would be to change the certificate in a way that the error does not occur as suggested in https://code.google.com/p/android/issues/detail?id=12955#c17\nIf someone indeed experiences this problem i will consider providing an android specific implementation of Java-Websockets which does not use channels.\n. @ fg0711 do you use a self signed certificate? \nhttps://github.com/TooTallNate/Java-WebSocket/issues/141#issuecomment-11441556 might help you.\nBut if https://code.google.com/p/android/issues/detail?id=12955#c12  causes your problem than i am afraid that there is nothing  can do for you...\nCan you post a stacktrace or give further information?\n. @ck1125 thank you very much for your work. \ni am really sorry that i did not merged yet. The reason that i have no experience with travis or gradle.\nIs it possible to briefly talk about this pull before merging via skype or google talk? \nMy github name is also my skype name.\n. The handshake gets transfered correctly in the sendHandshake function. tryToConnect only works on ip level.\nonClose provides you with information on who closed the connection and how.\nIOExceptions forwarded don't get currently  to onError but that is likely to change in the future...\n. Thank you for finding and fixing this.\nIn order prevent the NullPointerException we have to return immediately from interruptableRun when channel is null too.\nchannel can likeconn only be null if an IOException occurred in the constructor, which is  very unlikely yet not impossible because creating and configuring an unbound channel should not throw. The only situation i can currently imagine would be not having a network card. \nTherefore i would be interested to know what caused the IOException which lead to the NullPointerException you encountered?\n. i cleaned things up in the referenced commit.\n. Please take a look at https://github.com/TooTallNate/Java-WebSocket#wss-support.\nIt will :\n- shows how to tweak you browser to make it accept your self signed certificate\n- show how to uncover certificate issues\nIf this does not solve your problem please post the full exception stack trace including the name and the message of the exception.\n. > If I navigate to https://localhost:1234 it says that the browser can't show up any page (this is correct because the certificate was accepted on this way and i haven't any \"normal\" WebServer which is listen for HTML-Sites).\nBefore not showing the page the browser should ask you however to accept the certificate. Which browsers have you tried?\n. sorry that i did not answered for so long - i kinda forgot about since i was busy... :worried: \nThe problem is that your browser has to know the self signed certificate. Otherwise it will refuse it.\nFollow the instructions in https://github.com/TooTallNate/Java-WebSocket#wss-support and checkout http://www.youtube.com/watch?v=F8lBdfAZPkU\nYour code seems to be ok. But do not forget to enable\n\nThe vm option -Djavax.net.debug=all can help to find out if there is a problem with the certificate.\n\nAnd if you get errors i can only help if you give me a proper stacktrace. But please set up you browser properly before posting loads of logs and stacktraces. ;)\nps: don't forget to like my first youtube vid :D\n. Well your problem appears to be\n\nSSLHandshakeException: no cipher suites in common\n\nTherefore i am quite sure that the problem is the configuration.\nI would be interested how you generate your truststore and how you configure your SSLContext?\nCan you post the keytool commands you use and the SSLContext related code?\nThen i could at least try out if you configuration works for me?\n. The only steps i EVER took to create a working keystore were those shown in the ssl examples:\n\nkeytool -genkey -validity 3650 -keystore \"keystore.jks\" -storepass \"storepassword\" -keypass \"keypassword\" -alias \"default\" -dname \"CN=127.0.0.1, OU=MyOrgUnit, O=MyOrg, L=MyCity, S=MyRegion, C=MyCountry\"\n\nUp to now i never needed any export or import stuff...\nMaybe you should try to get the examples working. Since i am a noob when it comes to certificates my suggestions will not get more elaborate than this :P\n. The browser should only refuse the connection when it does not accept the certificate. Just to be sure make sure that you remove the old certificate before introducing the updated one to the browser.\nPlease post the full updated output produced with -Djavax.net.debug=all and WebSocketImpl.DEBUG = true; enabled. \nWenn es dann immer noch nicht l\u00e4uft sollten wir das Problem am besten \u00fcber Skype besprechen. Mein Skypename ist Davidiusdadi.\n. @shortstuffsushi I like how compact your solution is. In terms of  performance there should not be a relevant difference. Maybe the dropped out toLowerCase alone compensates for the \"slower\" lookup when talking about a map of the size ~10. \nAlso i think that barely anyone except @shortstuffsushi will need this \"fix\" i still think that is is a general improvement of compatibility which is why i think that we should merge. \nCan we agree on merging? ( I would add an explain comment afterwards into the code.)\n. i also meant #162 :) \ni will merge it then.\nThank you both for your improving and supporting the library.\n. Thank you for your pull. \nThe groupID must not be be changed: https://issues.sonatype.org/browse/OSSRH-4745\nI also already managed to get a snapshot up: https://oss.sonatype.org/index.html#nexus-search;quick~org.java-websocket\nBut i did not yet managed to get the release done. I am going to run through the guide you linked tomorrow.\n\nmvn release:clean\nmvn --batch-mode -Dtag=xchange-1.3.0 -DreleaseVersion=1.3.0 -DdevelopmentVersion=1.3.1-SNAPSHOT release:prepare\nmvn release:perform -Darguments=-Dgpg.passphrase=PASSPHRASE\n\nI am confused with all these version numbers ? I created (and pushed) a tag 1.3.0 tag already and just want to release it. After setting up gpg which of these parameters should i need?\n. @murksermatt thank you\n. thank you @murksermatt for finding that. This issue exists since adb20a55231e152f6f9064838b8d82334b11a45c.\n. When a connection can not be established the user must be informed. The is done by calling onClose with the closecode CloseFrame.NEVER_CONNECTED.\nThe \njava\nif( (readystate == READYSTATE.CLOSED) || (readystate == READYSTATE.NOT_YET_CONNECTED) )\napproach would cause \njava\nthis.wsl.onWebsocketClose\nnot to be called. Therefore in that case the user would not get the information that the connection was closed.\nThe  \njava\nif( (readystate == READYSTATE.CLOSED)\nservers the purpose to make sure that onWebsocketClose never gets called twice.\n. AUA this is really embarrassing!\n. This issue has been fixed with 787acc853f774d2a357682d1f298a34c26072f1d. I forgot to mention this issue in the commit message because i confused it with #165. Eventually both issues are about the same thing.\n. Unfortunately i have no experience with the bouncy castle provider which for some reason has to be used on android. However an other user of this lib told me that he got his wss server woking this way:\n``` java\npackage javaapplication1;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.security.KeyStore;\nimport java.security.Security;\nimport javax.net.ssl.KeyManagerFactory;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.TrustManagerFactory;\nimport org.bouncycastle.jce.provider.BouncyCastleProvider;\nimport org.java_websocket.WebSocketImpl;\nimport org.java_websocket.server.DefaultSSLWebSocketServerFactory;\npublic class JavaApplication1 {\n/*\n * Keystore with certificate created like so (in JKS format):\n *\n *keytool -genkey -validity 3650 -keystore \"keystore.jks\" -storepass \"storepassword\" -keypass \"keypassword\" -alias \"default\" -dname \"CN=127.0.0.1, OU=MyOrgUnit, O=MyOrg, L=MyCity, S=MyRegion, C=MyCountry\"\n */\npublic static void main(String[] args) throws Exception {\n    WebSocketImpl.DEBUG = false;\n\n    SSLServer_ chatserver = new SSLServer_(8887); // Firefox does allow multible ssl connection only via port 443 //tested on FF16\n\n    /*-- http://www.bouncycastle.org/specifications.html#install  */\n    Security.addProvider(new BouncyCastleProvider());\n    // load up the key store\n    String STORETYPE = \"BKS\";\n    String KEYSTORE = \"d:\\\\mybks.bks\";\n    String STOREPASSWORD = \"xxx\";\n    String KEYPASSWORD = \"xxx\";\n\n    KeyStore ks = KeyStore.getInstance(STORETYPE,\"BC\");\n    File kf = new File(KEYSTORE);\n    ks.load(new FileInputStream(kf), STOREPASSWORD.toCharArray());\n\n    KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n    kmf.init(ks, KEYPASSWORD.toCharArray());\n    TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n    tmf.init(ks);\n\n    SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n    sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n\n    chatserver.setWebSocketFactory(new DefaultSSLWebSocketServerFactory(sslContext));\n\n    chatserver.start();\n\n}\n\n}\n```\nI would like to know how you generated the bks file?\n. Unfortunately i have no explanation for this at hand. The older android versions appear to have buggy ssl implementation: e.g. #155\nI will update this thread as soon as i know more also it will take a while until have time to try out ssl on android myself. \nIf you find an explenation/solution please let us know.\n. This exception is timing dependent and must be expected since different threads may chancel the keys. Therefore its a bug that the exception is not caught and handled.\nI will leave this thread open until i have verified that this is really everything that needs to be done.\n. Please make sure that you use the latest code revision. If the issue remains please post an updated stacktrace.\nMalformedInputException will be thrown if one of the communicating peers violates the websocket protocol by using non utf8 were utf8 is mandatory. But without an up to date callstack its hard to say what went wrong exactly.\n. I don't know what you build but a method org.java_websocket.WebSocketImpl.deliverMessage does not exist in the current repository head. \nIt would be nice to know what when wrong there with the build - is it possible that you did not build from the head of your fork?\n. I am very sorry that i respond so late. \nYour fix looks good - if you created a pull request i would merge immediately.\nI will do something about this issue as soon as i have time.\n@downtownallday Could you either create a pull request, post a patch file or edit your post so that it becomes clear what modification you made to fix the bug.\n@temka1234 it would be nice to know if @downtownallday fix resolves your problem too.\n. @temka1234 In oder to create a pull request you have to\n1. create a fork using the fork button\n2. checkout the code using git\n3. commit the changes you did\n4. push those changes to your fork\n5. then there is a pull request button on the top\nThat sounds complicated but:\n- https://help.github.com/ really helps with those first steps\n- knowing git is cool and really beneficial in the longterm\n- if your don't want to memorize all these commands you can use one of the great graphical git frontends\n  - like http://code.google.com/p/tortoisegit/ on windows\n. > while(true) { } \n:P :P  have you considered that there could be an endless loop in your own code?\n. I can not spot a logical error in this code but a debugger would surely help to understand the problem as it happens. Looking at the bit masks the byte order can not be the problem. \nI suggest that your check each message before you wrap it if it really does not contain FRAME_START or FRAME_END.\nA minimal frame header designed to wrap arbitrary data does just need a FRAME_SIZE and nothing more.\n. If it is generally possible that it should be our aim to support it. We should defensively look into it as soon as we have proper proxy support. \n@netdragonboberb I have not looked on how the different proxy handshakes look like - but i would like to know how how the combination of proxy and ssl alters the ssl or the proxy \"handshake\"... Possibly it is more efficient if we talk about the whole proxy thing once via skype or google talk. \n. closed duo inactivity \n. yeah its true that the timeout is currently not used.\nits because its hard to implement it in a clean and performant way. I will\nhowever so something about it within the next weeks.\n2013/5/3 sfroeth notifications@github.com\n\nHi,\nOne of the constructors of WebSocketClient takes a value for a timeout,\nbut it is actually never used. The default timeout used by\nSocketChannel.connect() seems to be something around two minutes if the\nremote host does not answer. For my use case much shorter timeouts are\nnecessary. I fixed it for me using a thread and calling\nSocketChannel.close():\n// method interruptibleRun():\n```\n    /\n     *  Timeout for the SocketChannel using InterruptibleChannel.close()\n     *  SocketChannel.connect(...) throws AsynchronousCloseException after calling close()\n     /\n    if(timeout != 0) {\n        new Thread(new Runnable() {\n        @Override\n        public void run() {\n            try {\n                Thread.sleep(timeout);\n                if(!channel.isConnected()) {\n                    channel.close();\n                }\n            } catch (Exception e) {\n                // does not matter\n            }\n        }\n    }).start();\n}\n\nchannel.connect( new InetSocketAddress( host, port ) );\n\n```\nRegards\nStefan\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/177\n.\n. This appears to be a but in the library.\nUnfortunately i will not be able to take a look at the problem before 08.05.\nBut i will try to fix it until 12.05.\n\n2013/5/3 aftersss notifications@github.com\n\n21:09:59.607 E [WebSocketWorker-75] n.z.t.t.w.TaxiWebSocketServer:243 ->\nError:\njava.lang.NullPointerException: null\nat\norg.java_websocket.drafts.Draft_75.translateRegularFrame(Draft_75.java:161)\n~[WebSocket-1.3.1.jar:na]\nat org.java_websocket.drafts.Draft_76.translateFrame(Draft_76.java:195)\n~[WebSocket-1.3.1.jar:na]\nat org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:312)\n~[WebSocket-1.3.1.jar:na]\nat org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:157)\n~[WebSocket-1.3.1.jar:na]\nat\norg.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:657)\n~[WebSocket-1.3.1.jar:na]\n21:09:59.647 E [WebsocketSelector93] o.j.SocketChannelIOHelper:64 ->\njava.nio.channels.ClosedByInterruptException: null\nat\njava.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:184)\n~[na:1.6.0_32]\nat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:343)\n~[na:1.6.0_32]\nat\norg.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:61)\n~[WebSocket-1.3.1.jar:na]\nat org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:349)\n[WebSocket-1.3.1.jar:na]\nat java.lang.Thread.run(Thread.java:662) [na:1.6.0_32]\n21:09:59.648 E [WebsocketSelector93] o.j.SocketChannelIOHelper:64 ->\njava.nio.channels.ClosedByInterruptException: null\nat\njava.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:184)\n~[na:1.6.0_32]\nat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:343)\n~[na:1.6.0_32]\nat\norg.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:61)\n~[WebSocket-1.3.1.jar:na]\nat org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:349)\n[WebSocket-1.3.1.jar:na]\nat java.lang.Thread.run(Thread.java:662) [na:1.6.0_32]\n21:09:59.649 E [WebsocketSelector93] o.j.SocketChannelIOHelper:64 ->\njava.nio.channels.ClosedByInterruptException: null\nat\njava.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:184)\n~[na:1.6.0_32]\nat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:343)\n~[na:1.6.0_32]\nat\norg.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:61)\n~[WebSocket-1.3.1.jar:na]\nat org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:349)\n[WebSocket-1.3.1.jar:na]\nat java.lang.Thread.run(Thread.java:662) [na:1.6.0_32]\n21:09:59.650 E [WebsocketSelector93] o.j.SocketChannelIOHelper:64 ->\njava.nio.channels.ClosedByInterruptException: null\nat\njava.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:184)\n~[na:1.6.0_32]\nat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:343)\n~[na:1.6.0_32]\nat\norg.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:61)\n~[WebSocket-1.3.1.jar:na]\nat org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:349)\n[WebSocket-1.3.1.jar:na]\nat java.lang.Thread.run(Thread.java:662) [na:1.6.0_32]\n21:09:59.652 E [WebsocketSelector93] o.j.SocketChannelIOHelper:64 ->\njava.nio.channels.ClosedByInterruptException: null\nat\njava.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:184)\n~[na:1.6.0_32]\nat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:343)\n~[na:1.6.0_32]\nat\norg.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:61)\n~[WebSocket-1.3.1.jar:na]\nat org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:349)\n[WebSocket-1.3.1.jar:na]\nat java.lang.Thread.run(Thread.java:662) [na:1.6.0_32]\n........................................................\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/178\n.\n. Thank you for your efforts into getting proxy working!\n\nBefore merging we just have to sort out the complications with #161\nAn other thing that bothers me is that the code for the proxy authentication is spread over more than one class. There should not be any proxy specific code in WebSocketImpl.java - e.g. what if one proxy has an other response to the CONNECT request...\nFor productivity sake i guess that we better address these issues after merging. :D\n. The websocket protocol is build on top of tcp/ip . And if tcp says the connection is broken than that is an accomplished fact. You are either connected or not and thats all Java-Websockts can know. \nThe websocket protocol is a very minimalistic one - and except playing with some tcp/ip timeouts there is no elegant way to get the network error tolerance you desire without altering client AND server and therefore the protocol itself!\nJust like you already do you can get the desired features by reconnecting which evolves storing your own extra connection/transaction information on a higher logical layer. \nThe only suggestion i have is:\nTreat my beloved websocket objects as the unreliable throwaway objects that they( and all network-resource-handle-like objects ) are and do not store informations in them that you still need if your connection gets interrupted once more. In the design i would clearly distinguish between the lowlevel Java-Websocket connection object and your own high level connection object.\nFinally i would just like to remark that clients can go offline for real without a way of reconnecting and even the coolest business api has to confess that to its user at some point. :D\n. If physically disconnecting the form the network does not close all open connection in the software there is a bug in some immediate layer like the network library. The underlying api (provided by e.g. android) must always be able to tell whether a connection is open or not - that is e.g. what tcp/ip keepalive is for. \nIts not the job of application layer software to verify if a tcp connection is still open. Timeouts are a dirty hack.\n\n@Sikerdebaard i would like to know your approach on implementing timeouts. \nBefore using Channels.newChannel we have to make sure that it does not create new threads but even if it does not i dislike the idea of mixing old and new IO...\nMy way to implement timeouts would be by implementing it directly into the selectorthread - maybe a separate timeout thread would be evolved... BUT only if there are good reasons for a implementing a timeout at all.\n\nOn which platforms do some connections never get closed?\n. You have to make sure that the client is connected!\nYou can do that by calling send in onOpen or using the connectBlocking() method instad of connect().\nIts absolutely ok to call WebSocketServer.run() directly. There are however serveral reasons why a port can not be bound - most likely the port is already in use. You should check the message of the exception - if you like you can post it here.\nThe last thing i would like to know is the android version you are using?\n. Please excuse my late answer.\nYes, you have total control which client will see which messages - you write the server - you have control over all connections. Via onMessage you know which client sent which messages to the server. Based on that information you can decide to which client you \"forward\" it ( by calling WebSocket.send )\nYou can iterate through the connected clients by iterating over WebSocketServer.connections() in synchronized manner. Like this:\njava\nCollection<WebSocket> con = connections();\n    synchronized ( con ) {\n        for( WebSocket c : con ) {\n            // put your special condition here\n               c.send( \"text\" );\n        }\n}\nCurrently its not very comfortable to obtain the resource descriptor ( \"/news\"). One has to make use of a WebSocketFactory and deriving from WebSocketImpl to create a function that returns the resource descriptor...\nSince i think that what you ask for is a rather common case i will add a getResourceDescriptor() method to  the WebSocket class which allows you to easily find out which resource descriptor was used the in websocket handshake.\nFeel free to ask if you have further questions.\n. After pulling you should be able to do something like this:\njava\nCollection<WebSocket> con = connections();\n    synchronized ( con ) {\n        for( WebSocket c : con ) {\n            if( c.getResourceDescriptor().equals(\"/news\") )\n                c.send( \"this is new\" );\n        }\n}\n. This issue could be related/a duplicate of #155 \nI don't know a solution - except providing an implementation that uses SSLSockets instead of SSLEngine.\nAfter proxys work i will see if people still use Gingerbread :P and if necessary provide such an implementation...\nOne could that nio is overkill anyway when one is not dealing with a large number of connections anyway...\nAnd providing an (alternative) implementation should idealistically only affect one file... \n. There currently is no callback for when the data has been flushed out via a WebsocketConnection.\nI would like to know what you are trying to accomplish?\nCould you not just wait until the server returned an answer?\n. i have not forgotten this issue - i hope that i find time to implement a clean way to do this soon.\ni will update this issue accordingly.\n. Make sure that you don't miss events: One should overload onopen, onclose, onerror, onmessage\nAre both client and server on the same machine?\nI would check if the androidapp is allowed to bind sockets?\n. Well something went wrong here... xd \nMaybe this can cheer you up: http://devopsreactions.tumblr.com/\nMay i ask what websocket lib you are using now?\n. sorry for my late response and thank you very much for the info.\nYour code sample will not work on ALL android platforms though so i would like to know which android version you are talking about.\n. hey i am currently very busy but i hope that i can give you some feedback on what the problem could be.\nWhen googeling the error messages it looks like the configuration of you apache could be the problem.\nTo isolate the error, i would try without the apache and just use Java-Websocket client and server.\n. Did you solve the problem?\n. I am a bit stumped about this issue.\nI don't have not time to dig into this specific problem for hours; especially because i think its a configuration problem.\nIn oder to help its important for me to know at which point stuff is not working.\nFor what purpose do you configure you SSLEngine?\nDo you want to connect using a selfsigned certificate or to a properly signed site?\nCan you connect to wss://echo.websocket.org if you configure your sslcontext via\n\nsslContext.init( null, null, null );\n\nlike described in the SSLClientExample.java\nAnd why did you implemented a custom Trustmanager(any link that suggest that practice)?\n. i would like to help you with this but for some reason stackoverflow\nreports \"page not found\".\nGoogle also points to the not existing page...\nmaybe you could post the problem here?\n2013/7/20 JoeCoderGuy notifications@github.com\n\nSorry if this isn't the proper place to post this, but I'm very new to\nJava.\nThis lib is great! However, I have to also use a real pain API.\nWould someone mind helping with this?\nhttp://stackoverflow.com/questions/17764241/how-to-make-java-websockets-chatserver-abstract-or-combine-with-abstract-class\nThank you!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/189\n.\n. Thank you for reporting the problem.\nThis is a bug of the websocket client.\n\nThe bug appears to happen when more network data is received that the sslengine can decode in one chunk.\nBecause of a sloppy(buggy) condition the SSLSocketChannel2 trys to decode the remaining incomplete chunk of encrypted network data over and over again ignoring any further available network data.\nI will push a fix for that very soon.\n. have you pulled from my repo(https://github.com/Davidiusdadi/Java-WebSocket\n)?\n2013/8/2 Erhannis notifications@github.com\n\nGreat; thanks! Except...it doesn't seem to work. It seems like you were\nright about the cause, though; I get the error consistently when I send a\nlarge message.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/190#issuecomment-21974310\n.\n. Your callstack definitely matches the code prior to the fixes. It seems you\npulled form the wrong source. Please make sure that you pull these changes\nform Davidiusdadi and not from TooTallNate.\nI will merge #193 within the next few days though.\n\n2013/8/2 Erhannis notifications@github.com\n\nYep. I tested it merged with the TooTallNate repo, as well as on its own,\nbut either way it still overflowed.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/190#issuecomment-21975906\n.\n. Thank you those infos really help to isolate the problem!\n\nSo for some reason there is an overflow. \njava\nassert ( inData.position() == 0 );\ninData.clear();\nThese lines should make sure that neither the buffers limit nor its position can cause the buffer to have to less bytes remaining.( I'd enable asserts anyway)\nSince those can not be the problem i guess that the capacity must be the problem.\nThat would mean that createBuffer initialized indata with less that required bytes to hold the biggest application data buffer ( see http://docs.oracle.com/javase/1.5.0/docs/api/javax/net/ssl/SSLSession.html#getApplicationBufferSize() )\ncreateBuffer() will be called in the constructor but it has to be called once more after the handshake. If for some reason that call did not happened that would be the bug.\nOne more possibility could be that the bug has to with rehandshaking. I never explicity tested rehandshaking. So it could be that createBuffer() is only buggy in combination with rehandshaking.\nI will try to look at the issue as fast as possible but if you have the capacity to check in which way (position,limit,capaciy) indata is to small and if createBuffer is called appropriatly or if you experience rehandshakes that would really help out. \n. I can reproduce that createBuffer is not called. \n. now the buffers will be created properly\n. processHandshake is synchronized so that the method can not be called simultaneously.\nThe latest changes solve the problem on my machine.\nAssuming that FINISHED  must be returned at least once i see no way how it could be missed. If it would be missed that would mean that the asserts in read and write method would fails.\nDo asserts indeed fail when you start the jvm with -ea?\n. i am pretty sure that the way i fixed it is the clean way.\nIt however relies on nio returning FINISHED once!\nIf any popular nio implementation does indeed just return NOT_HANDSHAKING\nthen i will change the SSLSocketChannel2 implementation accordingly.\n2013/8/9 Erhannis notifications@github.com\n\nYou're right about processHandshake being synchronized, but that's REALLY\nweird because I swear yesterday the logs said that thread A went into the\nNEED_UNWRAP block, went into unwrap(), and then thread B went through\nseveral iterations of processHandshake(), and then thread A returned from\nunwrap() and continued processHandshake().\nAlso, according to my logs, FINISHED is never returned. It just goes to\nNOT_HANDSHAKING, and stays there. I'm working on Android, so I'm not sure\nif I can enable asserts, but I'll look into it; I can also see what happens\nif I run the code in Java on my computer.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/190#issuecomment-22365166\n.\n. I just made the SSLSocketChannel2 implementation to not depend on whether FINISHED is returned by nio wrap/unwrap.\n\nDoes that fix the issue for you?\n@Erhannis With \"popular nio implementation\" i basically mean the supposed buggy default android nio implementation.\n. Let me summarize what happend so far:\nhttp://stackoverflow.com/a/3930854/513038 says: \n\nThere is also a subtlety about the FINISHED status: it is set in the handshake status returned by each SSLEngine method except getHandshakeStatus(): i.e. it is a very transient condition.\n1. I had indeed missed that subtlety but i already fixed that in c17693e 20days ago.\n2. Then we found out that FINISHED  never returned.\n3. So i made the implementation not care if FINISHED gets returned or not in effeb32\n4. Now it seems for some reason the buffers are still to small. \n\n\n@Erhannis do you still get the same hang or how does the problem show up?\nI will now write a few stress tests to test if ssl REALLY works does fine on Windows (on a proper nio impl) and think that i will have results tomorrow.\nIf windows does indeed fine dispite android failing then i will appoach using some workaround.\n. @Erhannis Thank you very much for your efforts! \nMy last activity on the project is now almost a year ago but i now want to pursue the maintenance of the project on a more regular bases.\nRegarding this issue most of details faded from my memory...\nYour fix was however confirmed to work repeatedly( @thughes and here  #260).\nTherefore i am going to merge #260 now even though I don't understand the problem completely.\n. hey, i did not yet find time to look at this issue but i am going to in the next 2 or 3 days.\n. I could not reproduce the problem on localhost but i not use solaris :)\nIf you System fullfills there requirements http://www.oracle.com/technetwork/java/javase/config-417990.html i would be surprised about threading issues. \nYou could also take a look which threading models are supported by your VM. There might be an option to tell the vm to not rely on OS Threads and use green threads. I however never did that myself.\n\nRegarding the code: stop is implemented kind of weak since it gives the user no control how the connection shall be stopped. The protocol compliant way would be to make sure that all open connections were closed with a close handshake.\nThe stop method however just initiates the close handshake asynchronously but does not make sure that the handshake out into the network.\nAfter the selector thread its stopped there is no one left to feed the decoders, thats why those are closed next.\nAnd in the end there is no one left to perform IO operations that why the socketchannel is closed last.\n. Good luck. I'd be glad to merge such an improvement.\n2013/8/2 DeHecht notifications@github.com\n\nI think the system fullfills the requirements, because it is an oracle\nmachine (but you never know).\nI will now investigate in detail so I can see what the issue is. Usually,\nthat kind of issues are not that complex to be solved when knowing what is\ngoing on. I hope I can come up with an \"improved\" version of stopping the\nWebSocketServer.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/191#issuecomment-21993353\n.\n. :clap: :clap: very nice! Thank you @DeHecht I will apply your fix and close the issue afterwards.\n. Thank you @sippykup \n\nYou defacto make the server object reusable after it has been stopped.\nI will merge in a few days after i checked that there are no side effects.\n. I will provide a convenient way and upload an example that shows how to send fragmented messages by the end of this week.\n. ok in the example folder there is now a new example FragmentedFramesExample\n. hang has been fixed\nsee #191\n. Do you work on the latest revision?\nI will try to reproduce the problem within the next few days.\n. Please post the full stack trace.\nI'd also like to know which revision of the library you work on.\n2013/8/7 Bastien L\u00e9onard notifications@github.com\n\nPlatform: Android 4.2\nI get this error every time I try to connect in HTTPS:\nWebsocket error in client: Unexpected message type has been received: 60\nHere is how I do the connection:\nSSLContext sslContext = null;\ntry {\n   sslContext = SSLContext.getInstance( \"TLS\" );\n} catch (NoSuchAlgorithmException e) {\n    throw new RuntimeException(e);\n}\ntry {\n    sslContext.init( null, null, null ); // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\n} catch (KeyManagementException e) {\n    e.printStackTrace();\n}\nsetWebSocketFactory( new DefaultSSLWebSocketClientFactory( sslContext ) );\nDo you have any idea how to fix this? Thanks.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/196\n.\n. your welcome :)\n. The Java-Websockt library a not a replacement for a webserver. It can only take care of the websocket stuff.\n\nI would just run the webserver of you choice and your Java-Websockt-Server parallel on different ports.\n(Some browsers/proxys may have problems if the socket is not on port 80/433)\nThat callback you are asking for does not exist also i would merge such change :). \nIf you want to experiment with it you may want to take a look at Draft.translateHandshakeHttp.\nYou are not the first asking for that feature. I would implement such a feature but currently i have no time also i will give my best to support you if you should be willing to implement it.\nWe could discuss the current situation, how you could make use of Java-Websockts and what would be necessary to accept generic http requests via Skype. \n. It seems you already isolated where it's checked if the http request is an\nupdate request.\nThe main change would be parse all incoming bytes as http into new proper\nhttp-object, check if the upgrade field is present and then either forward\nit to the user or give it to the Draft objects so that they can perform the\nwebsocket handshake.\nAs a result the draft objects need to be able to deal with this new\nhttp-object.\nFor how websockets work please take a look at\nhttp://tools.ietf.org/html/rfc6455#section-5.4\nThe Daft classes are named after\nhttp://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17\nhttp://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-10\nhttp://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76\nhttp://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75\nDraft17 & the rfc  are the same in terms of how bytes are transferred over\nthe network.\nI suggest that we talk on Skype during the weekend. My Github name equals\nmy Skype name.\n2013/8/9 GroG notifications@github.com\n\nThanks for the quick response, I've been looking at the source for just a\nlittle bit, but would be glad to discuss it if/when I can formulate\nsomething more meaningful or concrete.\nI did notice that the client request header was available in file\nWebSocketServer.java line 328 -\nWebsockets are new to me - but the client is expected to ask for them with\nan \"upgrade\" request if they started the conversation with a http request..\nis that correct? This is part of the handshake? So there is a logical fork\nif the client doesn't ask for the upgrade - maybe this location would be a\ngood place to do a call back?\nif( SocketChannelIOHelper.read( buf, conn, (ByteChannel) conn.channel ) ) {\n                            String clientHeader = new String(buf.array());\n                            /*-------------------------- call back begin --------------------------\n                            // determine if request wants an upgrade - if not send the channel & buf to a call back\n                            -------------------------- call back end -------------------------- */\n                            conn.inQueue.put( buf );\n                            queue( conn );\n                            i.remove();\nThanks again for you time.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/197#issuecomment-22363477\n.\n. cool :) feel free to email me directly then\n. I can reproduce the problem. Its really a shame that there is \"such\" a bug in the library.\n. Ok fixed it. I will merge within the next few days. Until then please get the revision form my personal repo.\n. Very strange. Please give me more infos.\n\nDo you use a special port?\nWhat server are you connecting to; the JavaWebsocketServer?\nWas a proxy somehow involved?\n\n1006 is a reserved value and MUST NOT be set as a status code in a\n     Close control frame by an endpoint. It is designated for use in\n     applications expecting a status code to indicate that the\n     connection was closed abnormally, e.g. without sending or\n     receiving a Close control frame.\n\nSo i assume that the NullPointerException caused you client to go down - which definitively is a bug.\nI however wander that \n\nafter a few minutes\n\nthe connection still has not been established but the opening handshake is being performed.\nCan you confirm that you never transferred a single byte over that connection?\nPlease also pull from https://github.com/Davidiusdadi/Java-WebSocket.git from and post an updated stacktrace.\nThat branch has the latest bugfixes applied and will be merged soon.\n. Also you found the problem on your side please help me fix the problem on mine.\nI want to know what caused the nullpointer exception.\nPlease put this line at the start of your application \nWebSocketImpl.DEBUG = true;\n,reproduce the problem once more \nand post the command line output as a comment on this issue.\n. Currently it is not possible. I don't really see a legit reason why somebody would to that.\nAlso i won't implement that feature you can do it yourself by tweaking the WebSocketClient.\nBasically you have to add a constructor that uses your own SocketChannel instance instead creating AND connecting a new one.\nThat new constructor would have to act act like WebSocketClient( URI serverUri , Draft draft , Map<String,String> headers , int connecttimeout )\nwhich the exception that you pass the SocketChannel object to it which is then used to initialize WebSocketClient.channel object.\nThis way is quite simplistic but has the disadvantage that you also need to change your own code in order to obtain/create the channel-object.\nYou should be able to obtain the channel-object this way:\n``` java\nsocketchannel = SelectorProvider.provider().openSocketChannel();\nsocketchannel .connect( new InetSocketAddress( host, port ) );\nsc=socketchannel.getSocket();\nout= new DataOutputStream(sc.getOutputStream());\nout.write(\"Hello\".getBytes());\nWebSocketClient ws = new MyWebSocketClient( draft,socketchannel)\nws.sendMessage(\"Alles gut\");\nws.close()://shall the socket be closed here?\n```\nHopefully this helps you to get started implementing your feature.\n. I do not understand your problem\nWhy do you need Websockets at all?\nWhy do you not just use normal (BSD) sockets?\n. I do not see the problem in the dump.\nBeside \"Thread-2\" & \"main\" all threads appear to be normal VM internal\nbackground Threads.\nThose threads will be there for pretty much every java program you start.\n2013/8/27 sdidrik notifications@github.com\n\nI have a java server running on linux that opens websockets with a local\napache/python server. It is acting as a proxy for web browsers that do not\nhandle websockets. I am getting the following errors though:\nFull thread dump OpenJDK 64-Bit Server VM (23.7-b01 mixed mode):\n\"Thread-2\" prio=10 tid=0x0000000000f1a000 nid=0xad6e runnable\n[0x00007fd0ac3ea000]\njava.lang.Thread.State: RUNNABLE\nat sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\nat sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:228)\nat sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:81)\nat sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87)\n- locked (a sun.nio.ch.Util$2)\n- locked (a java.util.Collections$UnmodifiableSet)\n- locked (a sun.nio.ch.EPollSelectorImpl)\n  at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98)\n  at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102)\n  at\n  org.java_websocket.client.WebSocketClient.interruptableRun(WebSocketClient.java:238)\n  at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:204)\n  at java.lang.Thread.run(Thread.java:724)\n\"Abandoned connection cleanup thread\" daemon prio=10\ntid=0x0000000000e6c000 nid=0xad66 in Object.wait() [0x00007fd0ac6fc000]\njava.lang.Thread.State: WAITING (on object monitor)\nat java.lang.Object.wait(Native Method)\n- waiting on (a java.lang.ref.ReferenceQueue$Lock)\n  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n- locked (a java.lang.ref.ReferenceQueue$Lock)\n  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n  at com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93)\n\"Timer-0\" prio=10 tid=0x00007fd0b8172800 nid=0xad4b in Object.wait()\n[0x00007fd0ac8fe000]\njava.lang.Thread.State: TIMED_WAITING (on object monitor)\nat java.lang.Object.wait(Native Method)\n- waiting on (a java.util.TaskQueue)\n  at java.util.TimerThread.mainLoop(Timer.java:552)\n- locked (a java.util.TaskQueue)\n  at java.util.TimerThread.run(Timer.java:505)\n\"Service Thread\" daemon prio=10 tid=0x00007fd0b8120800 nid=0xad49 runnable\n[0x0000000000000000]\njava.lang.Thread.State: RUNNABLE\n\"C2 CompilerThread1\" daemon prio=10 tid=0x00007fd0b811e000 nid=0xad48\nwaiting on condition [0x0000000000000000]\njava.lang.Thread.State: RUNNABLE\n\"C2 CompilerThread0\" daemon prio=10 tid=0x00007fd0b811b000 nid=0xad47\nwaiting on condition [0x0000000000000000]\njava.lang.Thread.State: RUNNABLE\n\"JDWP Command Reader\" daemon prio=10 tid=0x00007fd094001000 nid=0xad44\nrunnable [0x0000000000000000]\njava.lang.Thread.State: RUNNABLE\n\"JDWP Event Helper Thread\" daemon prio=10 tid=0x00007fd0b8119000\nnid=0xad41 runnable [0x0000000000000000]\njava.lang.Thread.State: RUNNABLE\n\"JDWP Transport Listener: dt_socket\" daemon prio=10 tid=0x00007fd0b8115000\nnid=0xad40 runnable [0x0000000000000000]\njava.lang.Thread.State: RUNNABLE\n\"Signal Dispatcher\" daemon prio=10 tid=0x00007fd0b8107800 nid=0xad3d\nwaiting on condition [0x0000000000000000]\njava.lang.Thread.State: RUNNABLE\n\"Finalizer\" daemon prio=10 tid=0x00007fd0b80af800 nid=0xad3c in\nObject.wait() [0x00007fd0ad881000]\njava.lang.Thread.State: WAITING (on object monitor)\nat java.lang.Object.wait(Native Method)\n- waiting on (a java.lang.ref.ReferenceQueue$Lock)\n  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)\n- locked (a java.lang.ref.ReferenceQueue$Lock)\n  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)\n  at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:189)\n\"Reference Handler\" daemon prio=10 tid=0x00007fd0b80ad000 nid=0xad3b in\nObject.wait() [0x00007fd0ad982000]\njava.lang.Thread.State: WAITING (on object monitor)\nat java.lang.Object.wait(Native Method)\n- waiting on (a java.lang.ref.Reference$Lock)\n  at java.lang.Object.wait(Object.java:503)\n  at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)\n- locked (a java.lang.ref.Reference$Lock)\n\"main\" prio=10 tid=0x00007fd0b800a800 nid=0xad37 runnable\n[0x00007fd0bfbb7000]\njava.lang.Thread.State: RUNNABLE\nat java.net.PlainSocketImpl.socketAccept(Native Method)\nat\njava.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\nat java.net.ServerSocket.implAccept(ServerSocket.java:530)\nat java.net.ServerSocket.accept(ServerSocket.java:498)\nat pollingdaemon.baseline.com.PollingDaemon.main(PollingDaemon.java:222)\n\"VM Thread\" prio=10 tid=0x00007fd0b80a4800 nid=0xad3a runnable\n\"GC task thread#0 (ParallelGC)\" prio=10 tid=0x00007fd0b8018000 nid=0xad38\nrunnable\n\"GC task thread#1 (ParallelGC)\" prio=10 tid=0x00007fd0b801a000 nid=0xad39\nrunnable\n\"VM Periodic Task Thread\" prio=10 tid=0x00007fd0b812b000 nid=0xad4a\nwaiting on condition\nJNI global references: 1318\nHeap\nPSYoungGen total 18432K, used 8795K [0x00000000eb6b0000,\n0x00000000ecb40000, 0x0000000100000000)\neden space 15808K, 55% used\n[0x00000000eb6b0000,0x00000000ebf46d50,0x00000000ec620000)\nfrom space 2624K, 0% used\n[0x00000000ec8b0000,0x00000000ec8b0000,0x00000000ecb40000)\nto space 2624K, 0% used\n[0x00000000ec620000,0x00000000ec620000,0x00000000ec8b0000)\nParOldGen total 42176K, used 0K [0x00000000c2400000, 0x00000000c4d30000,\n0x00000000eb6b0000)\nobject space 42176K, 0% used\n[0x00000000c2400000,0x00000000c2400000,0x00000000c4d30000)\nPSPermGen total 21248K, used 7580K [0x00000000b7e00000,\n0x00000000b92c0000, 0x00000000c2400000)\nobject space 21248K, 35% used\n[0x00000000b7e00000,0x00000000b85673d8,0x00000000b92c0000)\nWe are seeing a lot of threads in a wait_close state that do not go away\nand think the above has some thing to do with it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/203\n.\n. > I don't know why this method is getting invoked when the socket is not yet bound\n\nThe exception was thrown at a place where the server responds to flash-policy requests: So it looks like the remote peer send the request to the server but disconnected before receiving the answer. And when the server then asynchronously build the response to that request the connection was already closed...\nI will commit a fix for that racing-condition very soon.\n. xd i wanted to commit just now but instead i created a big mess during merging.\nI am going the resolve this issue along with #205 during the weekend.\n. xd sorry for not updating this issue - forgot to put the hashtag in the commit message\nIf fixed and merged this issue last sunday aef92290adbd53850337cfc2c651699764988038\nThe issue should be resolved as soon as you pull.\n. handleFatal will only be called if there happened an unrecoverable error like the one you posted.\nIf the method gets called there is a bug in the library!\nEven if the method would not be called there is no way that the server remained operational.\nTherefore calling stop in handleFatal does not really initiate the stop operation - it's rather an attempt to free allocated resources.\nI realize however that the users may want to overload the method...\n. hey check out #205\nThe WebSocketClientFactory will then not be necessary any more.\nIf you want to do wss check out:\nhttps://github.com/Davidiusdadi/Java-WebSocket/commit/9b0a4b8c182bbe3f384d8ee8ede54eb754900bf5#L1L82\n. I will try to reproduce the issue on Saturday.\nIn order to do that please tell me which websocket Draft is used by the iOS\nwebsocket implementation.\nThe information will be printed out to the console if you set\nWebSocketImpl.DEBUG=true;\nThings might get a little tricky if\nDraft75http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75\nor\nDraft76 http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76 are\nused because they don't support fragmented frames by specification.\nThere is no fin bit in these drafts so received frames will always be not\nfragmented.\nIf Draft10http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-10\nor\nDraft17(RFC) http://tools.ietf.org/html/rfc6455 than the spec has that\nfeature and this lib should support it.\nIn latter case i will verify the whether fragmented frames are correctly\nimplemented using the AutoBahn testsuite which i have't done for month xd.\nPlease make also sure that you work on the latest revision of the lib.\nThe onFragment method should return fragments the way they we sent -\nmeaning that you might have to stitch the fragmented frames together\nyourself.\nregards\nDavid Rohmer\n2013/9/27 Rob Gillan notifications@github.com\n\nWe are getting some errors when we are receiving some very large packets\nwith fragmentation (16kB) from our server. We have other WS implementations\non iOS that correctly reassemble the large packets (up to 4MB) and we've\nverified data validity with Wireshark (so we're pretty sure it's not a\nserver side thing). Smaller data packets (70kB) are passed through\ncorrectly to onFragment with isFin set correctly. For much larger packets\n(470kB) we are getting errors when we try and process the reassembled\nmessage (which is JSON).\nWe have looked through the framing code (specifically .append) but are\nunsure whether we're running into a buffer capacity/allocation limit or\nsomething with the Fin detection. Any suggestions/help very much\nappreciated.\nCheers\nRob\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/209\n.\n. Hey, unfortunatly i am  currently kind of \"stunlocked\" by non Java-Websocket-things in a way i did not saw coming :/ .\nI also could not yet verify fragmented frames via autobahn because with a problem with the test suite for which i just created an issue: tavendo/AutobahnPython#159\n\nKnowing the about the following things would help to track down the issue:\n- if the issue is always reproduceable\n- if there is a specific fragment size at which the problem starts to occur\n- if the the connection is failed after the FIN frame by the other peer\n- if the changing WebsocketImpl to something very small like 1 affects how frequent the issue occurs\nYou could also play with set up the autobahntestsuit youself and let it do all the work.\nhttp://autobahn.ws/testsuite/manual\nYou would need the fuzzing server and client of the testsuite and\nAutobahnClientTest and AutobahnServerTest from the /src/test/java/ directory.\n. Well that issue is old and you found it again.\nTherefore I will also fix it again... ;)\n. Thank you for the pull request!\nI must admit that i don't fully understand the images you attached: It would help to know how the 2 views are filtered and when the snapshot was taken during the lifetime of your application.\nThe Thread(this)-construct is not leaky in itself - it creates a circular reference the VM is able to resolve.\nFrom what i understand I think your \"memory leak\" is caused by references you still hold to the WebSocketClient-objects.\nYour pull effectively reduces the memory footprint of the closed WebSocketClient objects!\n. Thank you!\n. That would be better.\nThis code will be excecuted once per handshake.\nI will change that with my next commit, if you dont do it during merging.\n. xd yes\nEDIT: fixed in 01d74a8\n. those changes are not necessary...\n. ...\n. @fomojola I am just testing around with ssl trying to simplify things if possible: 98f4a3c854911aef95a221335e0c339538780378\nAnd i am not sure what the 'handle' is for...? It seems to limit the number of simultaneous connections...\nBut even when i remove the handle as you see in my code my firefox somehow fails to create more that one ssl connection to the example server at a time.\nI am probably missing some basic mechanic...\nDo you have an explanation for that behaviour? \n. the type of the map was carefully chosen in #161 ...\n. this fix would not apply for safaris with version number < 5.1,  would it?\n. ",
    "NathanielMichael": "This issue has been resolved in my fork.\nYou're more than welcome to incorporate the changes and I'll remove the fork.\nGreat work!\n. ",
    "anismiles": "I have adapted this project for Phonegap, and also implemented onError handler. Check here: https://github.com/anismiles/websocket-android-phonegap/  or  https://github.com/anismiles/phonegap-android\n-Animesh\n. I used https://github.com/miksago/node-websocket-server instead of Socket.IO\n-Animesh\n. ",
    "xpepermint": "Socket.IO is still a problem. How did you fixed that? The WebSocketClient class connects to the server but then immediately close the connection. \njava.lang.System.setProperty(\"java.net.preferIPv4Stack\", \"true\");\njava.lang.System.setProperty(\"java.net.preferIPv6Addresses\", \"false\");\nWSClient socket;\ntry {\n  socket = new WSClient(new URI(\"ws://192.168.1.100:8124\"));\n  socket.connect();\n} catch (URISyntaxException e) {\n  e.printStackTrace();\n} \nAt the end I also get this message:\nSntpClient request time failed: java.net.SocketException: Address family not supported by protocol\n. Thanks man... i guess this is the way to go.\n. I have exactly the same problem!\n. True. Use http://static.brandedcode.com/nws-docs/.\n. Well... I experienced the same behaviour (onClose called immediately when trying to connect) when I was using Node.js+Socket.io. I now use websocket server (http://static.brandedcode.com/nws-docs/) with Node.JS (http://nodejs.org).\n. np :)\n. Hey, my IDE (Eclipse) says String.getBytes should be String.\n. BTW... I can't get it to work. Have you test it with Node.js+Socket.IO?\n. Great. This works. Thx.\n. huuuummm.... estimate? thx\n. Yeah... so I need to know when the connection is lost or there is not internet connection or in general there are IO problems. In that case I would reconnect. \nThanks!\n. You know what... I'll make some changes and let you know when the pull is ready.\n. commited...\n. Hey... I'm testing the library and I found out you can not reconnect oned the connection is closed. So in my case where reconnectWithDelay() is I run connect() it starts, I can see the connection has been sent to the server but in WebSocketClient.onHandshakeRecieved at  if (expected[i] != reply[i]) always fails. Can you help me on this part?\n. ok sorry for spamming you :))\ni found a bug... if I reinitialize all variables it works... I'm digging on and will let you know when I'm done and everything is tested,\n. this is it... it connects and reconnects... please merge...\n. The last commit are some useful information for Android programers. I spent hours searching for answers.\n. okey... will do...\n. Hey... I did like you requested. Please check if everything is like it should be. I retested the client part and it works like I want. Please let me know if it works with you.\n. ow :)) sorry for that... thx for merge\n. Yes... well for sure the conn variable should be protected and uri too. Is that ok with you?\n. ok... what about conn variable so you can call this\nonError(WebSocket conn, Exception e)\n. ok... deal.\n. OK... working on it...\n. ow... ok... sorry for styling :) I keep doing it :)\nso... adb8321, b042d0f and 7ed0839 are the same thing...\nlet me know if everything is ok\n. I have a code that works on Android. Thread class (in Android) can not communicate with Activity interface. We have to use Handler or AsyncTask. I found a perfect working solution but we the new class require access to the running private variable. I have to override the connect method where we the running variable is used.\nDo you agree, as par of my solution, I set this variable to protected? We can also create a method that says START/STOP thread or smth. Please send your comment as soon as possible.\n. Hum... can you provide an example? Let say for some Activity class calling showDialog? Thx.\n. java.awt.EventQueue is not available in Android (IDE)\n. Nope... not working... as you can see I'm working on this for a few days now and I found the solution but as explained. OK... thx any way...\n. E ok... I can use Handler with Runnable right?... sorry working...\n. Please take a look at these 2 commits. These are critical fixes.\n. ",
    "dokipen": "No problem.  It was simple to fix and is definitely a corner case.  I was implementing Stomp messaging over web sockets which require a null terminator. hehe\n. ",
    "swax": "Sorry I'm new to github. Those changes were something different.  The changes I wanted to show you had to do with the new larger buffer used when reading from the socket.\n. Sorry about that, I'll give it another shot.\nOn Tue, Jun 14, 2011 at 7:55 PM, TooTallNate \nreply@reply.github.comwrote:\n\nHey @swax, I want to merge this optimization, but the current patch is way\ntoo messy. Would you mind opening a new pull request that:\n- Doesn't change the package name\n- Is based upon the lastest commit of the master branch of this repo\n- Doesn't change the encoding\nI.e. just stick to the task at hand: \"Read buffer in larger chunks to avoid\nhanging android\". Thanks!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/pull/10#issuecomment-1370261\n. 12 is what was there before. \n\n+2 keeps key.length() above 1 so that it doesn't randomly crash.\n. Actually I'm not sure if that's the most appropriate fix.  Here's how to reproduce the crash and you decide. Instead of initing these variables with rand, set them to these values - \nlong spaces = 1;\nint number = 1;\nint numChars = 0;\n. ",
    "alecgorge": "Early Firefox builds have it: http://www.ducksong.com/misc/websockets-builds/ws-07/5.0.a2.03/\nYeah, no problem, I am just a bit confused about what you want me to do. Do you want me to have an if(this.draft != WebSocketDraft.AUTO) block around the version 7 block?\n. Hmm. I'll look at it this evening. I don't know why it isn't working now. \n. I just tried and it worked for me. Maybe start with a clean directory?\n. Ah, I see what you mean now.\nThat is odd. This one looks like it might be tricky to find.\n. I just read the spec ( I think there is a link in the op) and the Wikipedia article on websockets (it has an example).\nSent from my iPhone\nOn May 11, 2011, at 12:03 PM, TooTallNatereply@reply.github.com wrote:\n\nI can try to help diagnose, but do you know of an article anywhere or something that breaks down the differences from this new draft version from the previous one? Or if the differences are few, just list them off for me? I'm kind of clueless as to what this new version includes/fixes and whatnot. Thanks!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/pull/12#issuecomment-1139692\n. \n",
    "ryangraham": "Nightly tries to auto-update itself away from McManus's hybi-07 build and then you get stuck with draft 76 again. I like to go up a few directories on ducksong and install the latest version immediately before testing.\n. ",
    "MrEcho": "Chrome 14 now uses hybi-10\nhttp://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-10\nhttp://blog.chromium.org/2011/08/new-websocket-protocol-secure-and.html\n. What has changed in the protocol?\n. This merged into the main code yet? \n. ",
    "teozkr": "I'm assuming that you based this on my (somewhat partial) socket.io client implementation.\nRemember that you have to override send like I did because socket.io wants to know the length of the message and that socket.io uses heartbeats that you need to return. Just a few pointers.\n. I suppose this should be filed as a bug with Socket.IO then. Or how about testing with the trunk?\n. I also suggest logging all messages received and sent to see if it happens because of something that it expects a reply to.\n. Probably. Do keep in mind though that my client was written with Trial-and-Error for Tornadio.\n. @xpepermint, that just seems to be the server API, not the wire protocol.\n. Oh, right, way for me to not read the title. Sorry.\n. ",
    "philipdesmedt": "Thanks for the suggestion. However, I did override the send method. I don't know what the problem is because I just tested it with another node package (Node WebSocket Server: https://github.com/miksago/node-websocket-server ) and that one is working. That means it is a socket.io problem, but I haven't found anything about this issue in the socket.io documentation. :( \n. What do you mean? There are no messages received client-side (you mean when/if the onMessage() event is called?). Server side is not a big success either. I don't see any output from socket.io. In addition to this, the socket.io is pretty outdated, because I get errors when trying to execute the examples from their README.md file. I can't configure socket.io to print more debug output..\nFollowing the instructions for cloning the git repository (from https://github.com/learnboost/socket.io-node/tree/06) is not working either. I ran the server from the example folder but get the same output. I guess I should report this to socket.io then...\n. Sorry for the late reply, but no, I haven't been able to solve the issue with Socket.IO. Furthermore, I've been using the Node Websocket Server too. It actually suffices, because I'm writing a native Android app that is only able to connect through websockets, so I guess Socket.IO wouldn't give me any advantage over NWS. Anyway, thanks for the help and advice everyone!\n. ",
    "andreacfm": "I think that adding cookies parsing by default could be a great think.\nI mean could be great to ask to any websocket what cookies came with the message.\nThis can improve the ability to add user check and implement more complex messaging operation. Don't you think?\nAndrea \n. Hi,\nI have finally time to look into it but I see that many changes and implementations has been done.\nI am having hard time to get the right point where to parse request for cookies.\nAny suggestion?\n. Thanks.\n. I confirm I get errors from js that says connection cannot be established\n. Thanks I will update my repo. Test and confirm.\n. Works. Thanks!!!\n. ",
    "nightexcessive": "Having cookies in the client would also be great. Seeing as the actual WebSocket is currently private, it's impossible without using reflection.\n. ",
    "windweller": "I think now getting cookie can be done rather easily, however we still don't have the clear way to set up a cookie...\n. https://github.com/TooTallNate/Java-WebSocket/issues/29 Check this one out. They were working on a solution 2 years ago...I think you as long as you get the hs: ClientHandshake object from onOpen() method, you can call if (hs.hasFieldValue(\"Cookie\")) {hs.getFieldValue(\"Cookie\")} and parse the raw string into a cookie from this tutorial: http://stackoverflow.com/questions/5574530/how-to-parse-a-cookie-string. What I can't figure out is how to set cookie...I really hope they didn't stop maintaining this project.\n. ",
    "bernardbjr": "Are there any plans to implement hybi 10?\n. ",
    "ghost": "+1. I also want this feature.\nI think we don't support it right now.\n. I tried the commit from @Davidiusdadi with Chrome 17.0.949.0 but failed to connect.\nChrome 17 sent this handshake :\nConnection:Upgrade\nCookie:session=595c3606c4c03b773c49502fa9eb7fae\nHost:localhost:3129\nOrigin:http://localhost\nSec-WebSocket-Key:1ba6X8gkuyMDQ/xIIqw0Lg==\nSec-WebSocket-Version:13\nUpgrade:websocket\n(Key3):00:00:00:00:00:00:00:00\nand chrome 15 sent :\nConnection:Upgrade\nCookie:session=595c3606c4c03b773c49502fa9eb7fae\nHost:localhost:3129\nSec-WebSocket-Key:IB7IDC3TLjqJLGM1VpalcQ==\nSec-WebSocket-Origin:http://localhost\nSec-WebSocket-Version:8\nUpgrade:websocket\n(Key3):00:00:00:00:00:00:00:00\nMaybe the problem is that [Sec-WebSocket-Origin:http://localhost] is now [Origin:http://localhost]\nRegards,\n. Same problem with Chrome 16 now released (hybi 17)\n. Thank you. Finally I have decided to use the snipped 3 method.\nI tried to use onConnect, and it worked on server-side, but the client wasn't receiving an explicit close, so the websocket was waiting for timeout, which is not nice for the user.\nWhen using onOpen to refuse (and close) a connection, if the client is very fast, it achieves to send some data to the server.\nThis happens because for some time the second client is actually connected.\nI have solved this guarding the other API methods (onMessage, onError, onClose, etc.) with something like:\nif (currentConnection != conn) {\n        return;\n    }\nwhere currentConnection is set to conn in the onOpen the first time, and set to null in the onClose.\n. I'm sending a really large message and would like to be able to report some progress to the user. For now I'm doing an indeterminate progress bar, but the messages are getting so large that the user may cancel and assume the system is frozen.\n. This doesn't seem to work when sent from WebSocketClient.\nJust an FYI.  I don't even know if that's allowed by the standards, but I tried, and it failed.\n. Interesting.\nI'm not up to all of your levels to be able to diagnose this issue, so I'll merely report back my experience.\nThe ping works perfectly with the server, but with the client, it reports \"control frames may no be fragmented\" (thank goodness for the typo!).  Google leads to this line of code: https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/java/org/java_websocket/drafts/Draft_10.java#L316\nIf FIN is fin in the message then something may be off because with debug on, I can see that fin is true.  It may be \"true\" instead of true.  I can't be certain.\nEither way, works for me since it's sufficient that only the servers send pings since only clients will be connected to them, lol.\nThank you for that code!\n. Yep!  I use a ConcurrentQueue to immediately pass data from the server using this template as the server:  https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/ChatServer.java\nIt's very fast.  Just process messages in another thread using common wait notify techniques.\n. You are great Joris!\nI will definitely make those alterations!\nDoes it already automatically give code 1009 if the maximum payload size is exceeded?\n. Thank you so much Joris!!!\n. Thank you so much Joris!\nThank you for the suggestion on using queues!  I use ConcurrentLinkedQueue's, and my server is super fast!\nI'm sorry about my vocabulary.  I'm still very new to Java.\nI'm following the updated client example, and I'm trying to network these websocket servers so that they can be used either to talk to each other or to end users.  I have a whitelist that I'd like to continually try to connect to.  Also, the whitelist can be added to, or whitelist members can become blacklist members, so I need a way to shuffle them around.\nCan I make a class that extends WebSocketClient like in the updated example, fill up a container like a ConcurrentHashMap with those extended classes initialized, and periodically call connect() until a connection is made?  I've seen in the source that a connection can't be reused.  Is it reused if the attempt to connect failed?\nThank you so much for answering my last two questions!\n. Thank you so much again!\nDo those two per WebSocketClient threads wait to be notified?\nIs there no way to create a new WebSocket inside WebSocketServer and add it to the Collection of WebSockets or take the WebSocket from WebSocketClient after it connects and put it inside WebSocketServer?\nThank you so very very much in advance!\n. Thank you so very much Joris!\nWell, if my program gets to the usage level that would require it, I guess I could try, but I'm pretty sure that's above my experience.  Also, the data flow should be so low that I'm not sure if it's necessary.\nYou are great!  Thank you for explaining this to me!\n. My guess is that the WebSocketClient will continue to try to reconnect for some amount of time.\nUsing InetAddress.getByName(ip).isReachable(timeout); first makes it so that I won't try to connect to an unreachable host.\nIs there a way to set the timeout?\n. Beautiful!\nA timeout can be set with this constructor:  https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/java/org/java_websocket/client/WebSocketClient.java#L75\n. Thank you Joris!\nYes, I'm simply looking at Ubuntu System Monitor.\nDoes this happen to you?  The memory is essentially nothing before putting at ~20MB, and as soon as I put a WebSocket as key, it spikes to 130MB.  I isolated it to the line that does that, and the value is a class with 2 byte[32]s, a Base64 encoded 32byte number as String, and a boolean.\nFirst, I connect to the WebSocket server, then run some ed25519 operations, and finally put.  I checked to find the culprit, and it doesn't happen on anything except the put.  I even tried to feed fake data into a ConcurrentQueue just to see if that was the problem.\nLater, when a WebSocketClient is put, the memory doubles again to ~260MB.\nIt's most likely my fault considering my noobity, but I just wanted to make sure that this wasn't normal first.\nThank you again Joris!\n. Thanks Joris!\nI think I'm going to have to back away a little myself.  I'm trying to get an app out asap, and it looks like my need for performance (based upon a great digital signature implementation) has trumped my need for multiplatorm, so I'm going to have to rewrite in c++.\nThis lib is so valuable, I can't even explain it.  I have a few personal servers running jws because it took me moments to set them up, and they're so fast!\nThank you and all the contributors!  I hope you keep it up.  The world really does need this lib.\n. Fine, I'll do it myself.  ;))  Looks like socket's private, so I had to add a little method in WebSocketServer.java:\n```\nimport java.net.SocketException;\npublic void setTcpNoDelay( boolean on ){\n    try{\n        server.socket().accept().setTcpNoDelay( on );\n    }\n    catch (SocketException ex) {\n    }\n    catch (IOException ex) {\n    }\n}\n```\nRemember to note the rustiness disclaimer before criticizing, lol!\n. Hi @marci4 \nI will close this issue since it's not related to your library.\nI realised finally that the device I used was triggering the broadcast receiver \"android.net.conn.CONNECTIVITY_CHANGE\" service provided by android every 5 min, even on stable network connectivity. \nWhich in turn, was executing some code forcing the WebSocket to close and reconnect.\nThank for your time\n. ",
    "andrepl": "+1 for ssl support.  this looks like it might be helpful.\nhttp://rox-xmlrpc.sourceforge.net/niotut/#NIO and SSL on 1.4\n. ",
    "Tamirk": "Sorry guys moved to Netty they provide excellent support for WSS and the latest WS draft protocol\n. ",
    "bbogovich": "There don't appear to be any substantial differences in the hybi-08 specification that would affect text frames, so the server defaults to the hybi-07 processing for connections requesting 8.  This seems to work correctly with Chrome 14.0.835.186.\n. Oops, meant to comment, not close\n. ",
    "rememberkarl": "I use  Window 7 x64 and jdk 1.6.0_26. \nI tried to execute on android app, so that I have a one question to you , how could you fix this error?\n. I try to recompile and execute my project with this package, so I got successful result.\nThank you for your entire research and I wish that you make a great work on the web.\nThank you. \nkarl.\n. Hi again.\nI use to your master very well, and thank you for your all work about this project.\nBut I have a one question, did you try to compile this package on Android 2.2?\nI got an error on android like this\njava.lang.ExceptionInInitializerError\n    at net.tootallnate.websocket.WebSocket.(Unknown Source)\n    at net.tootallnate.websocket.WebSocketServer.run(Unknown Source)\n Caused by: java.lang.NoSuchMethodError: java.lang.String.getBytes\n    at net.tootallnate.websocket.Draft.(Unknown Source)\n    ... 3 more\nIt occurred only android 2.2 device, the device has a low level hardware, but android 2.3 is fine.\nDoes this package effect by low level environment on android?\nThank you.\nkarl\n. I have solved the problem a few minute ago.\nProblem is String.getBytes method. In your master, you use getBytes method that is like this.\npublic static final  Charset  UTF8_CHARSET = Charset.forName ( \"UTF-8\" );\nprivate static byte[] FLASH_POLICY_REQUEST = \"\".getBytes( UTF8_CHARSET );\nso I have fixed the line like this\nprivate static byte[] FLASH_POLICY_REQUEST = \"\".getBytes();\nJust to remove charset, getBytes parameter.\nIt is not only Draft.java also some java classes.\nBut if I remove that parameter at getBytes,  am I able to get a potential error in your master?\nThank you. \nkarl\n. ",
    "runvnc": "Yes native Chrome WebSocket.  Yes on the Chrome side.  Its a JSON string, like 10,000 + bytes I think.  But I guess it isn't the size necessarily if you tested that.. it might be some character that needs to be escaped.  Or its just because I am calling from JavaScript (Rhino).. or I did something weird.. somehow I called the WebSocket send and managed to get Chrome to say it couldn't decode it.\nI guess if you think its not something like this https://github.com/sockjs/sockjs-node/issues/27 then there may have been something I did and maybe I was just confused.  I am using socket.io now and not having the issue, but again its possible I was misinterpreting something.\nActually here is the string:\n    '[{\"hasScript\":false,\"ROGRAPHIC\":\"(Stephen, Jon at Daily Show)\",\"guid\":\"277850b9-5314-1ceb-a0e1-15936177923c\",\"ReadTime\":\"0:00\",\"RONGNOTES\":\"\",\"Slug\":\"DS TOSS\",\"ROSource\":\"\",\"PageNum\":\"A1\",\"ROCam\":\"\",\"Estimated\":\"0:00\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"hasScript\":false,\"guid\":\"8b71b651-f0ad-3452-ce87-ebd46e0f2a15\",\"ReadTime\":\"0:00\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A2\",\"ROCam\":\"\",\"Estimated\":\"0:00\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"(Stephen)\",\"guid\":\"8ed53132-957e-5d96-dd34-052daad37bce\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"TOC\",\"ROSource\":\"\",\"PageNum\":\"A3\",\"ROCam\":\"\",\"Estimated\":\"0:40\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"hasScript\":false,\"ROGRAPHIC\":\"Eagle Caw\",\"guid\":\"9013850a-26b6-a8b3-edb9-25e25f4eabed\",\"ReadTime\":\"0:00\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A4\",\"ROCam\":\"\",\"Estimated\":\"0:00\",\"Segment\":\"sot\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"hasScript\":false,\"ROGRAPHIC\":\"TOC Music\",\"guid\":\"93e821ac-9f66-ee8d-5796-c5ac10e17e78\",\"ReadTime\":\"0:00\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A5\",\"ROCam\":\"\",\"Estimated\":\"0:00\",\"Segment\":\"cart\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"adcd2fff-d9a7-7083-8cde-326bcc726664\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A6\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"L3\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"9b8700b7-190f-b1f8-f1b2-09227a028b86\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A7\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"L3\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"a4dcd5d0-77a3-14ed-d86c-1e327b237008\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A8\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"L3\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"(Truth Line)\",\"guid\":\"106a3fcb-9614-0292-1369-2dd915521e65\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A9\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"Show Open (:20) applause/welcome (:30)\",\"guid\":\"bea087b3-3076-a8e6-cd72-edf9693608e4\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"RED\",\"PageNum\":\"A10\",\"ROCam\":\"\",\"Estimated\":\"0:50\",\"Segment\":\"sot\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"(Stephen)\",\"guid\":\"bbe5dedf-784a-9653-99d5-5a21f7c50399\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"TOP OF ONE\",\"ROSource\":\"\",\"PageNum\":\"A11\",\"ROCam\":\"\",\"Estimated\":\"0:00\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"\",\"guid\":\"dad64d82-54f7-bc58-ed15-52d6f64801f0\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A12\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"a7b098f7-eba2-a228-6f4a-e928f24c80ae\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A13\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"45df9ad1-0f6a-d05d-d919-ef838668c586\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A14\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"08a8c1b7-7b0b-bea2-4c5a-a8c820f85d26\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A15\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"d802b4fb-f4e1-cc6a-595d-aead1db080d0\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A16\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"b28c53f8-be54-0da8-21d3-6859b3194c72\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A17\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"ddab8a37-efa2-f486-4a5f-aa4c74efee40\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A18\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"94c6b155-a111-212b-abc5-58866c6438dd\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A19\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"48b079ab-0284-e078-f4c2-23f2074740fa\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A20\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"c02a92c0-c275-22d6-ad82-bc1b5f10ef84\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A21\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"aa938c7b-6552-f3fc-4dc7-0e1b98ceb14d\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A22\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"75b7aa15-6e3e-bcc2-56a1-69da5efbad43\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A23\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"77c29fdc-7a32-d7f2-a0d9-a683b6332a21\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A24\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"be5974aa-ae8e-4325-50fd-9f4cadce0cac\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A25\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"13d7002a-1c00-7495-2209-a175ad60976c\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A26\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"0badbee0-f6d5-9f06-f7bc-a494601bd4f3\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A27\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"26e2f4f2-c5b3-eca6-e98f-661e7f17559f\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A28\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"61c258b7-e7ad-79f1-374e-c13dfb7f29e5\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A29\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"(Stephen)\",\"guid\":\"bba3be0b-12c2-19a4-d853-dbe0499b421f\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"TBD\",\"ROSource\":\"\",\"PageNum\":\"A30\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"89da7b61-abbe-2aa5-966d-0213cdc89cd9\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A31\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"a6ce81a5-1880-08fb-e566-48a1ac4decb0\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A32\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"ce2e5fd2-6da0-e2c6-e826-4fee7d159ea1\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A33\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"b750ab5c-1882-fa38-548a-c021a45069ed\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A34\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"beaf8651-66c0-9d95-26d2-578850f6d279\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A35\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"2f8f3c49-0c02-5e38-55b4-a449622b46b5\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A36\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"7ec62f0d-073a-4f9a-f81e-c24fb490c202\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A37\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"07a98c14-883d-575c-8d8b-b67f986a1ca2\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A38\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"1c1a83ae-b6c5-d75b-5a0c-403471bf7229\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A39\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"78bdfb07-7bd7-3abd-06ea-39f6c3424774\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A40\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"6e4ff1e4-ae8d-2f0e-f8f3-e28025375921\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A41\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"51251521-4540-9259-0d65-a700e92e3b8d\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A42\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"ffc836fe-6c1a-5f48-ae84-47a56ba83553\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A43\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"91bea625-a20f-2048-70cb-6f65549afd57\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A44\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"7f6c9c79-3d30-b2b1-a9c9-181147dd454c\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A45\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"d4283eac-f76c-62f1-b1a2-53acc67b39c2\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A46\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"3b64e592-64af-aab8-c02a-53fe41e160b6\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A47\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"fa07aa3c-736b-1a34-96b2-c975a1f87fac\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A48\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"24e06dd8-587b-3540-676c-f244bf1f7244\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A49\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"a547d653-8773-4da4-ab7f-f2c8910a1a59\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"A50\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROCAM\":\"4\",\"ROGRAPHIC\":\"Bump Music\",\"guid\":\"dcd8f8c0-9855-a355-d8b4-502f1385d2a6\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"BUMP OUT Act 1\",\"ROSource\":\"\",\"PageNum\":\"A51\",\"ROCam\":\"\",\"Estimated\":\"0:10\",\"Segment\":\"cart\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"f95baa80-3b9f-53b6-27d0-a666221c0ce4\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"ACT TWO\",\"ROSource\":\"\",\"PageNum\":\"B0\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"Bump Music\",\"guid\":\"49ccb234-9dc7-e0e0-dc8b-f24acba5047d\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"BUMP IN Act 2\",\"ROSource\":\"\",\"PageNum\":\"B1\",\"ROCam\":\"\",\"Estimated\":\"0:05\",\"Segment\":\"cart\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"(Stephen)\",\"guid\":\"2583516e-db1c-59f0-c030-091cdeb0aeb0\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"ACT TWO SCRIPT\",\"ROSource\":\"\",\"PageNum\":\"B2\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"368ae028-64ff-6d55-bfdd-1639afd85149\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B3\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"380b72fd-7990-ee21-df6d-38165afe68d7\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B4\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"79edc529-0eb3-9566-f1fe-95840060c761\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B5\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"ba8ddf4d-d17c-088d-c91f-8430be9914a5\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B6\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"27a033f2-1b03-6db8-cba8-996e6a8818dc\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B7\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"97362ad7-fb98-1724-2527-be4646117aff\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B8\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"49e153fc-bd5c-0e91-ff01-9fc436cbdb8e\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B9\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"c703bb78-7f3d-89af-742f-148b3d9074de\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B10\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"a43f170f-c959-908d-309c-50b02feea9ef\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B11\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"490ac68a-3bc1-5f09-ed30-00d6f4822cbb\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B12\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"ff63dfd8-b8a4-4a4d-3978-a58cc32ca516\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B13\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"e2b3bff0-aadc-3348-43f4-c7f62a350105\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B14\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"7dc9d977-49db-cf2d-9208-e0b1d94ed7a5\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B15\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"2902ba2b-fc08-4ef7-d894-0a057379878f\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B16\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"798c8012-386f-2ef3-662e-d64ee8d4f9bf\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B17\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"52d6376d-88e5-3745-cffd-e3b819463206\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B18\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"6b1fda6a-8d87-f680-d241-0633c11415f7\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B19\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"5429eba7-229b-3f33-9573-20b3f0581361\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B20\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"5914e468-09e2-7186-c911-06ac8e5d8f44\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B21\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"c256efa0-b83a-99cf-450e-fedaa9d94653\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B22\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"50deaab3-28b9-ad37-22e2-c049971807f2\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B23\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"0157e503-d61d-6d5c-7f42-02a21cfc74bd\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B24\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"6891973e-3ba4-bbf8-5577-fab931eba994\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B25\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"3a0b8b72-7e4d-678c-255f-5c6409a10022\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B26\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"c9a56ee1-1f75-ba12-550d-ba9574dc4df6\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B27\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"9973469c-d9e0-52ae-7f10-5eb2d3f94b15\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B28\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"44b77fe2-0a20-1366-1e5e-f0381d6f0911\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B29\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"58fa1546-4361-2bdf-48e1-85a1b928a3ad\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"B30\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"Bump Music\",\"guid\":\"ee4e818f-f19c-8a1c-69a8-f78b31cc93f9\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"BUMP OUT Act 2\",\"ROSource\":\"\",\"PageNum\":\"B31\",\"ROCam\":\"\",\"Estimated\":\"0:05\",\"Segment\":\"cart\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"0fb17967-2a2c-3a41-2bbf-8f24fce24efa\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"ACT THREE\",\"ROSource\":\"\",\"PageNum\":\"C0\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"Bump Music\",\"guid\":\"4498a4c9-0bc3-7e59-06a8-68dbdae018d3\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"BUMP IN Act 3\",\"ROSource\":\"\",\"PageNum\":\"C1\",\"ROCam\":\"\",\"Estimated\":\"0:10\",\"Segment\":\"cart\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROCAM\":\"1\",\"ROGRAPHIC\":\"(Stephen, Guest)\",\"guid\":\"cc97d134-4ed0-a726-1d7a-245890143573\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"GUEST...\",\"ROSource\":\"\",\"PageNum\":\"C2\",\"ROCam\":\"\",\"Estimated\":\"6:00\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"5e32559e-e735-f6ed-61a2-baadf77edfc5\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"(Camera ISO\\'s for Avid...)\",\"ROSource\":\"\",\"PageNum\":\"C3\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"Stephen Cross Music\",\"guid\":\"79d5a133-d876-1749-2a49-93d9b081b067\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"Intro Guest, Stephen Cross\",\"ROSource\":\"\",\"PageNum\":\"C4\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"cart\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"a1e52dd2-9d3b-eb06-b15e-3488e8825ce6\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"Interview\",\"ROSource\":\"\",\"PageNum\":\"C5\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"\",\"guid\":\"09044f4e-c341-c4fb-2747-1d130166f875\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"Guest L3\",\"ROSource\":\"\",\"PageNum\":\"C6\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"L3\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROCAM\":\"4\",\"ROGRAPHIC\":\"Bump Music\",\"guid\":\"876b9878-9ca8-4ce7-4e2f-b2cf15f31f36\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"BUMP OUT Act 3\",\"ROSource\":\"\",\"PageNum\":\"C7\",\"ROCam\":\"\",\"Estimated\":\"0:10\",\"Segment\":\"cart\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"e86fcee5-27ab-9b57-cdfd-4c949d1bb4f8\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"ACT FOUR\",\"ROSource\":\"\",\"PageNum\":\"D0\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"(Stephen)\",\"guid\":\"e12ea681-8db9-5590-b1ef-bb90ad242089\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"GOODNIGHT\",\"ROSource\":\"\",\"PageNum\":\"D1\",\"ROCam\":\"\",\"Estimated\":\"0:20\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"4153bddf-daf0-d275-c0db-e95d9fb72c7c\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"D2\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"2f0d944f-cefd-917a-a108-645517d6f67f\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"D3\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"7f2072bc-e867-8c99-f8c0-f336aaaf962e\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"D4\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"7a1e8046-0b30-2e44-fc71-88f8ac5c6470\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"D5\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"9fc17ba9-63ea-f467-1b7d-31fee17c0c51\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"D6\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"396dd25f-6822-0964-bcb0-d37416bbce65\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"D7\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"guid\":\"ccd50e8e-1538-5c16-3b50-d600df389fae\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"D8\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"ROGRAPHIC\":\"Show Theme\",\"guid\":\"bfc1d4b8-ce96-ffdc-95de-14b5facd0d04\",\"ReadTime\":\"\",\"RONGNOTES\":\"\",\"Slug\":\"End Logos, Credits, Copyrights\",\"ROSource\":\"\",\"PageNum\":\"D9\",\"ROCam\":\"\",\"Estimated\":\"0:30\",\"Segment\":\"cart\",\"Float\":\"\",\"ROGraphic\":\"\"},{\"hasScript\":false,\"guid\":\"bdfbea26-7c51-dda1-7f6e-a94225440c05\",\"ReadTime\":\"0:00\",\"RONGNOTES\":\"\",\"Slug\":\"\",\"ROSource\":\"\",\"PageNum\":\"D10\",\"ROCam\":\"\",\"Estimated\":\"\",\"Segment\":\"\",\"Float\":\"\",\"ROGraphic\":\"\"}]'\n. Great.. thanks for addressing that.  Wow that was a long paste.\n. ",
    "khacdai37": "Hi @Davidiusdadi, please help me! I have a same issue on Android version when server send a too long message to the client and client not receive that message.\nthanks.\n. ",
    "vijayraghunathan": "The exception occurs from\ntryToConnect\nwhich is outside the try/catch body.\nvijay\nOn Wed, Dec 14, 2011 at 3:13 PM, David Rohmer <\nreply@reply.github.com\n\nwrote:\nThank you very much for your report.\nDoes the error occur in the following code?\nhttps://github.com/TooTallNate/Java-WebSocket/blob/master/src/net/tootallnate/websocket/WebSocketClient.java\n``` java\npublic void run() {\n   running = tryToConnect(new InetSocketAddress(uri.getHost(), getPort()));\nwhile (this.running) {\n     SelectionKey key = null;\n     try {\n       selector.select();\n       Set keys = selector.selectedKeys();\n       Iterator i = keys.iterator();\n   while (i.hasNext()) {\n     key = i.next();\n     i.remove();\n\n     if (key.isConnectable()) {\n       finishConnect();\n     }\n\n     if (key.isReadable()) {\n       conn.handleRead();\n     }\n   }\n } catch (IOException ex) {\n     if( key != null )\n         key.cancel();\n     onIOError(conn, ex);\n } catch (Exception ex) {\n   onError( ex );\n }\n\n}\n//System.err.println(\"WebSocketClient thread ended!\");\n }\n```\nIn this case the onError( ex ) should already handle the error.\nIs any stack trace available?\nAnyway:\nDuring my refactoring i obviously messed up the WebSocketListener\ninterface...\nThere should be a method onError( Websocket e, Throwable t) instead of\nonError( Throwable t).\nAnd the onIOError which initially was part of the WebSocketListener should\nhave been remove already.\n@TooTallNate Do you think that onIOError should be part of\nWebSocketListener parallel to onError or is it better to do the whole error\nfeedback via the new onError?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/issues/50#issuecomment-3137424\n. I'm closing this because I've sent a pull request w/ the proposed fix (I love the inline edit = fork + pull)\n. I haven't seen a problem re-using the draft object across re-initializes, but I haven't done extensive testing.  \n\nI've just changed my code to re-create the websocket object rather than re-use the same object.  In that case, we should mark this method as deprecated/internal.\n. ",
    "donpdonp": "In trying a hello-world app with websockets, right away I hit a missing String.isEmpty(), which is provided in Gingerbread Android v2.3. \n33% of all android phones are still using Android 2.2. it would be a huge help to stick to the v2.2 API or lower.\nhttp://developer.android.com/resources/dashboard/platform-versions.html\n. Great, thanks for closing this ticket.\n. That would work though it feels a bit kludgy. I think something deeper is going on - something along the lines of send and receive are using the same buffer and they should be separate (total guess), though I am happy with the guard approach and dont really want to dive that deep into it right now. :)\n. I'm seeing initial hello message get lost now even with the isConnected() guard in the application code. This is an android app so there is a lot of voodoo (to me anyways) regarding thread management. Probably best to leave the code as-is until a better root cause can be found.\n. Pushing the IO work to the selector thread sounds like a great idea.\nI've been working on adding SSLEngine support with partial success, but not complete yet.\nI think this is an important library that will get a lot of use.\nOne interesting tip, t-mobile's http proxy for their data network does not support websockets! \nhttps://gist.github.com/1541604\n. ",
    "jribble": "I'm using Java-WebSocket to write a websockify implementation in Java. I'm using it to run VNC data to noVNC. It was pretty quick and easy to implement, but my data would get corrupted after a little while and the VNC client would shut down with data errors.\nI tracked this down to a problem with partially written buffers. WebSocket.sendFrame will attempt to write a buffer with channelWrite. If the buffer is only partially written it will be placed on a queue and the next time sendFrame is called the rest of the buffer will be sent. The problem is that channelWrite rewinds the buffer, so it resends the portion of the buffer that was already sent.\nIn my opinion, channelWrite should not change the state of the buffer. Buffers should be prepared for writing out to the socket before getting to channelWrite. Partially written buffers will then be continued from the correct location.\n. ",
    "lassic": "Happy to contribute, thanks for the code and effort on this lib, it seems like one of the better choices for Android currently. :)\nI'm actually using this in a non-browser client right now (browsers will join later), and will probably update the server when I can (what's the current popular draft btw?)\n. Thanks for the detailed explanation.\nFor now I don't require wss so it's fine (I read on another project that supporting wss with NIO can be a bit of a pain, but I haven't looked into it).\nAlso, I'm only using the client side for now, but I'll keep updating my experience on the client for Android on the issue you asked.\n. in WebSocket.java:\nimport javax.naming.LimitExceededException;\nThis exception is not part of Android SDK (so it doesn't compile)\nThe good news is, it's not really thrown or used? I removed it and the compiler is happy.\n. I can try :)\nMostly because I never really worked with a git repository before (coming from svn world, hopefully my next project will be git/mercurial).\nSo if I understand correctly (after reading a bit), I need to fork it on Github, push any changes to my own forked clone, and then issue a pull request so others can decide if they want the changes?\nDo I fork by issue, by platform (android in this case) or just by user (me)?\nIt's probably the wrong place to ask these questions and pollute the issue space, we can continue this discussion offline if you prefer. Thanks for your patience.\n. I gave it a shot, hopefully was done right (still not confident with git/hub, but it will get there).\nI do half my development on OSX (today for example) and Github seems to have a nice client for Mac that was very helpful.\n. ",
    "davidfooks": "Brilliant. That works thanks!\n. ",
    "Sixthly": "Update: I believe that the server isn't reading key3 properly.\n. # Issue\nIn the method readLine() of Draft.java, null is returned instead of key3 because the condition if( prev == (byte) '\\r' && cur == (byte) '\\n' ) is never met.\nSolution\nIn the method readLine() of Draft.java replace the following line:\n\nreturn null;\n\nWith:\n\nsbuf.limit( sbuf.position() );\nsbuf.position( 0 );\nreturn sbuf;\n. The Flash security policy request is separate to the WebSocket connection. Once the security policy has been served the connection needs to be closed or else Flash/the browser will think that the request has not been completed and will throw the following error:\n[17:01:51.853] [WebSocket] cannot connect to Web Socket server at ... (SecurityError: Error #2048) make sure the server is running and Flash socket policy file is correctly placed\n[16:56:12.394] [WebSocket] closed\n. \n",
    "geniuscodemonkey": "process(258): {GET / HTTP/1.1\nUpgrade: WebSocket\nConnection: Upgrade\nHost: ws39.example.com:180\nOrigin: http://ws39.example.com\nSec-WebSocket-Protocol: example\nSec-WebSocket-Key1: e d394t}0-12 6F1 v1   l  0]  t\nSec-WebSocket-Key2: 953C1      0 $  94 40\nQ\u00b3\u017d\u00a1\u00ed\u00c2\u00b2}\nwrite(181): {HTTP/1.1 101 null\nUpgrade: WebSocket\nConnection: Upgrade\nSec-WebSocket-Origin: http://ws39.example.com\nSec-WebSocket-Location: ws://ws39.example.com:180/\n`%dv\u00ee\u00d7<   \u00f8e\u02dc\u0013\u00de\u00c0\n\u001b}\nopen using draft: Draft_76\n. I've created a test HTML project using native WebSockets for the iPad and I'm using the WebSocketServer as a debug logger so I can send debug information from the iPad to my PC. As I said, it all works in Chrome. I'm getting an Open event followed immediately by a Close event. \n. ",
    "beykery": "public Handshakedata translateHandshake(ByteBuffer buf) throws InvalidHandshakeException\n{\n    HandshakeBuilder bui = translateHandshakeHttp(buf);\n    byte[] key3 = new byte[role == Role.SERVER ? 8 : 16];\n    try\n    {\n        buf.get(key3);\n    } catch (BufferUnderflowException e)\n    {\n        throw new IncompleteHandshakeException();\n    }\n    bui.setContent(key3);\n    return bui;\n}\nthis method in Draft_76.java allways throw BufferUnderflowException ,this is why draft76 not work.draft75 is ok if you\n modify Websocket.java's constractor like this:\npublic WebSocket(WebSocketListener listener, List<Draft> drafts, SocketChannel sockchannel)\n{\n    init(listener, null, sockchannel);\n    this.role = Role.SERVER;\n    if (known_drafts == null || known_drafts.isEmpty())\n    {\n        known_drafts = new ArrayList<>(4);\n        known_drafts.add(new Draft_17());\n        known_drafts.add(new Draft_10());\n        //known_drafts.add(new Draft_76());//draft76 not work !!!\n        known_drafts.add(new Draft_75());\n    } else\n    {\n        known_drafts = drafts;\n    }\n}\nso,this issue coused by the method translateHandshake in Draft_76.java.\nplease check it ,thanks .\n. i am using the latest version of TooTallNate / Java-WebSocket , #68 including the changes .\n. now it work well ,good job  Davidiusdadi .\n. ",
    "detro": "@TooTallNate Any comment? :)\n. Will file a new one.\n. @TooTallNate There you go. I got rid of the doc and dist directory too: leaving the files there would have made little sense, given that would mistmatch the new code.\n. I got that, but this means we would maintain the doc that is currently there.\nI took the opportunity to get rid of it completely: maintaining a directory with outdated doc would be even more pointless than having the doc in the repository in the first place. No?\n. Isn't a pull request a collection of commits? The minimal diff are the commits.\n\nIvan De Marino\nCoder, Technologist, Cook, Italian\nSent on the move\nOn 24 Feb 2012, at 18:26, Nathan Rajlich\nreply@reply.github.com\nwrote:\n\n@detro We would recompile the docs and jar afterwards, or you could even do that in a separate pull request afterwards. The point was to have a minimal diff for this pull request.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/pull/72#issuecomment-4162221\n. Sorry, yesterday I was on the move so my answer was short.\n\nBut the essence is the same: this is not a big pull request at all! Ignore the anwything in \"doc/\" and focus on the 4(!) .java files and the build.xml. I didn't make any major modification to this.\nI really like this project (minimal and focused): I don't want to keep a personal fork of this that will only be a reflection of my personal tuning.\nIf you still feel like we need to have dist/ and doc/, you (or I) can always generate a new one and recommit. My aim was to save github free quota too: it's a waste if the user can just clone and launch ant!\n. @Davidiusdadi I don't think we should re-commit stuff afterwards: removing /doc/ and /dist/ from the repo is a good thing. Having the build.xml to generate was a great move you guys made from the start.\nI don't see a contradiction here: after this, the amount of files is smaller. Hence, easier for anyone to get their head around it. Yes, the removed stuff will be part of the history, bit so is now: nothing major will change. Plus is plain text and Git GC does a good compression job.\nDiscussing about \"maintenance for the repo owner\" when the project is so young and small seems a bit \"excessive\" to me. I don't want to \"step on anyone toes\", but it's not like I made a major change to the code, driving the project in a different direction.\nI really have no clue what you mean about beautifications in CodeFormatterProfile.xml: I might have missed a couple of spaces here and there, but I generally followed the way the rest of the code was done. Small \"hiccups\" are easy to fix. If you have a specific code guideline that would like people to follow, I suggest you document it in a wiki page or a readme file.\nBut again, for a project of this size? Sounds like an overkill.\nI must admit, I feel a bit \"pushed back\" here: this is a small project and you guys seem to be making a big deal out of this. And all I'm doing at the moment is try to help making it as conforming as possible to the W3C specs (yet, maintaining a java-ish style).\nI'll keep putting my work on my own fork for now.\nIf you want to join forces, let me know.\n. If you ask me, what should have happened here was:\n- merge the pull request\n- fix what you think I didn't do right (so that next time I could be better and more conforming to your guidelines)\nJust a note: I'm pretty sure you guys are doing a great deal of work to be conforming to the W3C specs - indeed this is THE ONLY implementation I could find, able to deal with different WebSockets protocol implementation (KUDOS for that!).\nWhat I added in terms of functionality was merely:\n- send(bytes)\n- readyState\n- bufferedAmount\nand fixed some var name that made javadoc complain.\nEverything else was decorative or less.\nIvan\n. @TooTallNate @Davidiusdadi Guys, I'm pretty sure some API (that I read up you wanted to have in the release) got lost along the way.\n. It's part of the specs. No other reason :)\nI'm just implementing what exactly the specs says: the sum of the data present in the buffer not yet sent.\nIf the implementation changes, of course this calculation will have to change.\nBut for now seems the simplest way to do this.\n. Lots?\nThere is the \"work in progress / dev\" one: http://dev.w3.org/html5/websockets/#dom-websocket-bufferedamount\nAnd the \"stable\" one: http://www.w3.org/TR/websockets/#dom-websocket-bufferedamount\nBoth define \"bufferedAmount\" in exactly the same way (for now).\n. Btw, I catched up with your master and recommitted the bufferedAmount stuff: https://github.com/detro/Java-WebSocket/commit/58f939cf33fae7d9105f84b919a68e912b802fce\nyou could pick that one directly.\n. I'll make it synch tomorrow and update this pull request.\n. Done.\n. I see. That actually makes absolute sense.\nI'll update it.\nThanks\n. What do you think?\nIs this ok?\nI'm making full use of auto boxing/unboxing that Java offers.\n. @Davidiusdadi If there is one thing I learned doing some Open Source development, is that your ideas are just a \"starting point\" for others to build on. Most of the time, you think to do X and Y with your idea. But other come along and make X+1, Y-1 and all sort of Z.\nIt's the beauty of open sourcing code: you produce something, other people either build on it or extend it to cover more scenario.\nIn this case the \"bufferedAmount\" is a property of the WS official specs: if not now, later on someone will come along explaining why they need it for reason Z+1.\nUnless you can see an harm in this, just get along dude...\n. @Davidiusdadi I love your attitude man. It's like being punched for contributing.\n. Take a look to the link above for a precise description of what kind of timings are required.\nNo worries, I have sent this to check what you guys thought: I'm not going to submit a pull request for this stuff.\nEven though you need to consider the timings, yes at the guts level.\n. No, I guess I didn't make it clear.\nI don't want to send this to you guys: I want you to think if my approach to timing is correct or you have something else in mind!\nI'm still evaluating what can be done to make sure the API allow to reconstruct the timings of the connection and transmission over the socket.\nThis was to see if you have thought about it and, if so, what do you think.\nThe HAR format is industry standard for tracking the timing behaviour of HTTP(S) communication.\nIt doesn't provide support for WS Messages (yet), but it does work well the Handshake of Web Socket. Hence, it makes sense to look at it.\n. As much as we can?\nAt the moment I worked out the points to measure:\n- connect\n- send\n- wait\n- receive\nI can't see how can we work out dns and blocked yet (maybe ever).\n. So, I went through the code and tried to figure out what can and can't currently be \"marked\" for timing purposes:\nhsBeforeConnecting -> NO CALLBACK provided to know when the WSClient is about to connect the socket channel\nhsAfterConnected -> NO CALLBACK when the socket connection with the WSServer is established\nhsBeforeSending -> onHandshakeSentAsClient()\nhsAfterSent -> NO CALLBACK provided to know when the Handshake has been completely sent over the socket to the Server\nhsBeforeReceiving -> NO CALLBACK provided to know when the Handshake has been received but not yet read\nhsAfterReceived -> onHandshakeReceivedAsServer() or onHandshakeReceivedAsClient()\nThe above \"hsBefore/AfterSOMETHING\" can be seen as event that track the lifetime of the connection (well, before any actual message is sent over the WebSocket by the user).\nHaving those would allow to calculate exactly:\n- how long it took to connect\n- how long it took to send the handshake\n- how long it took to wait for a handshake response\n- how long it took to receive the whole handshake response\nDo you think that is a good idea to put those callback in the WSListener and provide an empty implementation in the WSAdapter?\n. That's what I'm using for us internally: https://github.com/detro/Java-WebSocket/commit/93d368b166f9ed80633983e496269154b77d608d\nIt's on my fork, but if you think it's a good idea, let me know.\nOtherwise, I'll stick with this for now.\n. ",
    "alejandro": "np! Glad to help!\n. ",
    "ovear": "And in new version it takes a lot of memory\n. i use the latest code in git\nand this  is  my test code\npublic void onOpen(WebSocket ws, Handshakedata handshake) {\nlist.add(ws);\n}\npublic void onClose(WebSocket ws, int code, String reason, boolean remote) {\nlist.remove(ws);\n}\npublic void onMessage(WebSocket ws, String string) {}\npublic void onError(WebSocket ws, Exception ex) {ex.printStackTrace;]\n. the latest info about the problem.\nnow server didn't hang,but it take up 100% again\nI might find out problem and i can offer my test machine to you\nplease look this\nhttp://imgup-domain1.stor.sinaapp.com/upload/1330946756.jpg\nhttp://imgup-domain1.stor.sinaapp.com/upload/1330946769.jpg\nhttp://imgup-domain1.stor.sinaapp.com/upload/1330946783.jpg\nthen i use jstack ,i look this\nThread 10833: (state = IN_JAVA)\n- java.util.concurrent.CopyOnWriteArrayList.iterator() @bci=10, line=925 (Compiled frame; information may be imprecise)\n- java.util.concurrent.CopyOnWriteArraySet.iterator() @bci=4, line=308 (Compiled frame)\n- org.java_websocket.WebSocketServer.run() @bci=306, line=211 (Compiled frame)\n- java.lang.Thread.run() @bci=11, line=662 (Interpreted frame)\nhttp://imgup-domain1.stor.sinaapp.com/upload/1330946795.jpg\nthe full version of jstack http://ovear.info/file/websocket/jstack.txt\nmy test server source : http://ovear.info/file/websocket/src1.zip\n. i set that queue's size to max,but it still take 100% cpu\nit seems not that queue problem\nWhen are you available to go to IRC.\nAnd i think i can reproduce this problem to you\n. but it create only one thread\nand my test can running well on the old version(about 2 months ago version)\nthe same code running on latest version will takes 100% cpu.\n. sorry i want to correct one thing\nit takes only about 5% cpu when it is normal\nwhen it work some time, in new version ,it suddenly takes 100% cpu until i stop it\nbut old version won't happened\n. i set 7G memory for Websocket Server\njava -Xincgc -Xmx7000m\nand a another problems is ,the latest version does not release,and it take more and more memory unless i stop it.\n.  @Davidiusdadi \nabout 5K-6K connection ,2-5Mbps traffic ,my message is based on json,so it's very small.user use draft 75 ,about 15 thread\n. Ok,i will try it again\n. ",
    "sameersegal": "Sorry, a second look solved the problem:\nprivate void sendHandshake() throws IOException {\n        String path = uri.getPath()\n                + (uri.getQuery() != null ? \"?\" + uri.getQuery() : \"\");\n        if (path.indexOf(\"/\") != 0) {\n            path = \"/\" + path;\n        }\n. ",
    "zzzhr": "Yeah,we  are having the same problem, we tested the new version on Windows 2008R2 with JDK 6U30, Windows 2003 with JDK 6U31, RedHat AS4 with 6U31, Debian 6.0 x64 with JDK 6U31 and CentOS 5.4, the problem occurred on all platforms above, when the number of clients reaches 5000-6000, server's CPU are running 100%.before this,we use an websocket server writtened by C# running on a Windows 2003, It only takes about 5% of CPU with about 5,0000 users.\n. We have some details for you. Can you contract me (my email is shiti08@126.com),I tried to send a mail to Davidiusdadi but failed.\n. ",
    "pramm": "thanks a lot. will report if I find any more issues.\n. ",
    "egslava": "C:\\wamp\\www\\corona-app\\trunk\\web-socks\\TooTallNate-Java-WebSocket-92c48b9>java -\ncp build/examples:dist/WebSocket.jar ChatServer\nError: Could not find or load main class ChatServer\nYou should fix build/examples(colon)dist/WebSocket.jar to build/examples(semicolon)dist/WebSocket.jar.\n. ```\nprocess(204): {GET / HTTP/1.1\nUpgrade: WebSocket\nConnection: Upgrade\nHost: localhost:8887\nOrigin: file://\nSec-WebSocket-Key1: b]8w  2   2<Oo 894 352xC\nSec-WebSocket-Key2: $ H @mJ1j01kG13r F  5|7< 8 8 8\n\u00a4~\u0453\u0438\u0454#FN}\nopen using draft: Draft_76\norg.java_websocket.WebSocket@1382897\nprocess(76): {QUADQUAD\u044f}\nTrace\nnull\nException in thread \"Thread-2\" java.lang.NullPointerException\n    at org.java_websocket.util.Charsetfunctions.utf8Bytes(Charsetfunctions.java:22)\n    at org.java_websocket.framing.CloseFrameBuilder.setCodeAndMessage(CloseFrameBuilder.java:32)\n    at org.java_websocket.framing.CloseFrameBuilder.(CloseFrameBuilder.java:28)\n    at org.java_websocket.WebSocket.closeDirect(WebSocket.java:384)\n    at org.java_websocket.WebSocket.close(WebSocket.java:367)\n    at org.java_websocket.WebSocket.close(WebSocket.java:441)\n    at org.java_websocket.WebSocket.handleRead(WebSocket.java:352)\n    at org.java_websocket.WebSocket.handleRead(WebSocket.java:225)\n    at org.java_websocket.WebSocketServer.run(WebSocketServer.java:202)\n    at java.lang.Thread.run(Unknown Source)\nsend frame: Framedata{ optcode:TEXT, fin:true, payloadlength:51, payload:[60, 115, 62, 60, 115, 101, 116, 116, 105, 110, 103, 115, 32, 100, 101, 112, 111, 115, 105, 116, 66, 111, 110, 117, 115, 61, 34, 49, 48, 48, 34, 32, 114, 101, 103, 66, 111, 110, 117, 115, 61, 34, 48, 34, 47, 62, 60, 47, 115, 62, 0]}\nwrite(53): {QUADQUAD\u044f}\n```\nWhere QUAD is [].\nIt is full log. Since this moment (after initiation of WebSocket connection) program doesn't take any connections, doesn't receive any messages. It is just stops (but other threads is still working).\np.s. In every message we are sending zero-symbol in the end (\\0).\n. Hello. New details:\n- It don't call onMessage and even onClose. It just calls onError and stops.\n- If I don't use in JavaScript null-symbol (\"\\0\") then everything will okay :)\nSay me, please, is it your bag or specification really don't allow to use special symbols in strings?\n. js code:\nws.send( \"<s><login uname=\"sergeman\" hash=\"md5Hash\" /></s>\" + \"\\0\" );\nOutput of the ex.printStakeTrace in onError procedure:\norg.java_websocket.exeptions.InvalidFrameException\n    at org.java_websocket.drafts.Draft_76.translateFrame(Draft_76.java:204)\n    at org.java_websocket.WebSocket.handleRead(WebSocket.java:298)\n. stringUtf8( utf8Bytes( \"\\0\" ) );\nstringAscii( asciiBytes( \"\\0\" ) );\nWhereon this code should be placed?\n. Guys, sorry for the slow answer!\nWe stoped use \\0 character and now it is all working. Thanx for the good framework :)\n. ",
    "l3eta": "I was going to do this my self when I was writing a server for something with this API and then I dropped the project so I never started it. For performance wise. Just add in a check for if it's in use (Active) if not then sleep for a few then check again. Btw. I love this API saves my time although I wish the Client and Server were in different packages.\n. ",
    "DanielYWoo": "I have create d a pull request, so this ticket can be closed.\n. ops, submitted too fast, compilation error fixed\n. How about this? Move the server class into a dedicated package like org.java_websocket.server? Then I can add two tasks 'jar-client' and 'jar-server' with a simple exclude rule. So there will be two tasks:\n- jar-client (common and client classes)\n- jar-server (all classes, including common, client and server)\nThe default target will be jar-server.\n. David, many thanks!\n. thanks David, I believe we can close this issue now.\n. Sorry, Rob, I realized I replied too fast and deleted my comment but you still saw it:-). My fault, SocketChannel does not support proxy and we have to tunnel it. Hopefully this can help you a little bit:\nhttp://www.koders.com/java/fid6C544EFC7FC1729D0DD2E500C72B74FD88479F6A.aspx\n. thanks David, close it now\n. sorry, I used spaces instead of tabs.\n. Hi David, can you merge this back to master?\n. oops, I just read the comment, not the code, sorry about that\n. Thanks, David\n. ",
    "marci4": "Closing issue. The Draft_76 should not be used anyway!\nGreetings\nmarci4. Hello @lvivtotoro,\nI currently don't understand what exactly would be useful. Could you elaborate more?\nGreetings\nmarci4. No feedback on this issue for a month.\nReclosing the issue then!\nGreetings\nmarci4. Code changed with #488.\nClosing issue!\nGreetings\nmarci4. Closing this issue.\nIt is working for me without any problems!\nGreetings\nmarci4. Always adding javadocs for new features/refactored methods, but cant to this for old ones!\nAdded link in readme. This draft is now deprecated, see #478.\nClosing this issue.\nGreetings\nmarci4. Hello @43350860,\nDraft_10 is deprecated. Please use Draft_6455.\nGreetings\nmarci4. This Android version is not active any more! \nClosing. \nGreetings marci4. Hello everyone,\nis this still an issue for you with the latest version?\nGreetings\nmarci4. Any update?. No feedback!\nIf you still have this issue, please open a separate thread!\nGreetings\nmarci4. Hello @sowd,\nsorry for closing your issue!\nYou don't have to feel bad. It is just that often people forget to close their issues or their issues getting solved in some way so thats why I often clean up dead issues!\nDo you want me to look into it?\nGreetings\nmarci4. Closing the issue due to @shuckc comment.\nGreetings\nmarci4. closing this pull request because of the already closed issue #88 . Closing this issue.\nWill be released with 1.3.4\nSee #473 . Hello everyone,\nI feel that this is not accomplished in a easy way. \nI, of course, could just add a callback, if frame with fin bit set, is send to a different endpoint.\nProviding a callback for every frame send would force the application user to decode the frame on his own.\nI am open for any other ideas :)\nGreetings\nmarci4\n. Hello @bcersows,\nthank you very much for your input.\nWell I am not sure if that would be enough for the use case.\nThere are some reasons for this:\n- Another frame could be added to the outQueue while still writing the huge frame\n- An empty outQueue does not ensure that the other endpoint already received the frame or the frame is flushed for sure.\nOf course we can just add a callback for all the bytes written on the socket, but I cannot ensure that the other endpoint received them.\nGreetings\nmarci4\n. No real solution on my mind and others.\nClosing it. If someone has a good idea, feel free to ping me!\nBest regards,\nmarci4. Hello @Erhannis,\nyou may wanna check out this example here.\nGreetings\nmarci4. Issue was fixed by @Erhannis.\nThx for your help.\nClosing issue!\nGreetings\nmarci4. right now there are too many changes/commits on this pull requst. Cant get a good commit out of this. Issue was answered, closing it \n. Looks like this issue is fixed with #329 \nClosing!\nGreetings\nmarci4. Hello everyone,\nis this with the latest version still an issue?\nSince the codebase changed a lot, I cannot use stacktrace.\nGreetings\nmarci4. Hello @ikermart,\nno there is no internal timeout configuration right now!\nWith the upcoming release of 1.3.4 I will add a feature which automatically detects lost connections.\nI will also change the implementation of your SSLSocketChannel which may also fix this!\nGreetings\nmarci4. Any update?. No feedback for months!\nPlease open a separate issue if you still have any problem!\nGreetings\nmarci4. Not gonna implement this. Please use a seperat socket server and let this server communicate with your websocket server.\nGreetings\nmarci4. Closing issue.\nGreetings\nmarci4. Pong check implemented with #473 . Issue fixed.\nClosing.\nGreetings\nmarci4. Hello @sippykup,\nis this still an issue for you?\nDo you want me to look into it again?\nGreetings\nmarci4. No update on this issue for months.\nClosing it!\nGreetings\nmarci4. Issue should be already solved. \nGreetings \nMarci4. Fragmented frames are verified by the autobahn test case.\nGreetings\nmarci4. Is there any update on this issue?\nI cannot reproduce it.\nCould be fixed by #532\nGreetings\nmarci4. No feedback!\nIf you still have this issue, please open a separate thread!\nGreetings\nmarci4. Looks like @Davidiusdadi already fixed that one.\nClosing issue.\nGreetings\nmarci4. duplicate/extends #379. see #473 . fixed by #331 . Well I quess I f**ked up here.\nChecking the related pull request #218 and using the StressTest doesnt show any problems.\nGreetings\nmarci4. Gonna do this maybe to a new full release. Issue should be fixed with merge #272 \nGreetings\nmarci4. @Arazjel please open a new bug report with steps to repeat and an example application!!. Closing this issue for #490 \nGreetings\nmarci4. Fixed with #477 . Old issue, no response. closing. Issue should be fixed right now. Checking for null already!\nGreetings\nmarci4. Hello everyone, \nis this still an issue?\nGreetings\nmarci4. Could also be fixed by #488 . No feedback for months!\nIf you still have an issue with that, please open a separate issue again!\nGreetings\nmarci4. Hello @feixiangsmile,\nthis is an error in the example.\nRight now it is not possible to reuse a server.\nGreetings\nmarci4. Right now there is no big interest in scala.\nAlso right now not willing to maintain one more building tool/repository.\nThx for your pull request!\nGreetings\nmarci4. Hello @zjbpku,\nyou can find a simple example here.\nGreetings\nmarci4. see #473 . Right now not happy with introducing a java 7 dependency. Closing this pull request due to the introduction of a java 7 dependency. I updated the wiki with short explanations for all the relevant exceptions.\nClosing the issue.\nGreetings\nmarci4. This issue is solved with #572. This and it is also not the correct way to measure the size of an object.\nKeep in mind, what you see using the system monitor is the total ram used including handling handshakes, de/-encrypting messages etc etc.\nThe actual size if a websocket object is way lower!\nApart from this, the user is not any more part of github and this thread is over 2 years old.\nClosing it!\nGreetings\nmarci4. Hello @pmarchesi and @sklegg \ndo you still have this issue with the latest version?\nCan't reproduce it here right now!\nGreetings\nmarci4. No update for months.\nClosing issue!\nGreetings\nmarci4. Closing issue. pull request closed.\nGreetings\nmarci4. I pushed an update to clojars.\nGreetings\nmarci4. Hello @darkl,\nI added an example to the wiki how you can implement a custom Sec-Websocket-Protocol.\nCheck it out here.\nHope this helps you!\nGreetings\nmarci4. Hello @stereo720712 \nhave you tried using 127.0.0.1 instead?\nGreetings\nmarci4. Testet it also with the latest version running client and server in an app!\nWorks with 127.0.0.1\nClosing issue!\nGreetings\nmarci4. Hello everyone,\nright now the best way to reconnect is just to call the constructor again and use a new instance of a websocketclient.\nGreetings\nmarci4. Hey everyone, \nI will try to provide a working solution for this!\nGreetings\nmarci4. Added examples for this!\nForgot to close this issue!\nBest regards,\nmarci4. Hello @cbinners,\nI think your pull request is not working correctly!\nHave you testet your changes?\nI am stuck in an infinite loop.\nGreetings\nmarci4. This issue is implemented with #598.\nBest regards,\nmarci4. Hello everyone,\nis this currently still an issue with the latest version of the lib?\nUsing SSL in production without any problems!\nGreetings\nmarci4. Hello @cong91,\nsorry for that :( it was removed a long time ago, but nobody updated the lib!\nPlease check out this example for SSL in the WebSocketClient https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/SSLClientExample.java\nGreetings\nmarci4. No answer for over two months. \nMentioned issues are also covered by other issues!\nClosing this one.\nGreetings\nmarci4. Hello @clackmac,\nthis was added with #764\nBest regards,\nmarci4. No ETA since I am just to busy with RL and trying to reduce my stress levels.. You can however always use the latest snapshot ;) https://oss.sonatype.org/content/repositories/snapshots/org/java-websocket/Java-WebSocket/. SSLExceptions will call onError now as well (see #516)\nClosing issue!\nGreetings\nmarci4. Hello @MarcoDisco \nplease dont use Draft_75 any more!\nIt is recommended to use Draft_17!\n(Read up on drafts here)\nGreetings\nmarci4. duplicate of #424. Looks like this WIP is not in progress any more. This should be fixed with #503. @bendem thx for the response. Closing it . Hello @farin,\nI added a method onStart() for you and others to get notified, when no error occurred during startup.\nGreetings\nmarci4. not needed with #272 . Hello @l15k4 ,\nsorry for getting to you just now!\nFor me that feature would not be useful for most of the users of this lib.\nMy main goal will always be to keep this lib clean.\nGreetings\nmarci4\n. already merged with different pull request!\nThx for your time!\nGreetings\nmarci4. Thank you for your work!\nMerged your changes into main branch!\nGreetings\nmarci4. #489. Hello @andybons,\nthx for your pull request.\nI think I got most of your changes and merged them over.\nGreetings\nmarci4. Hello @Mohammed-khurram-Ahmed,\nplease check out my response on the issue #340 \nGreetings\nmarci4. A quick search around the apis found nothing.\nIf anyone has a solution, feel free to post it here!\nBest regards,\nMarcel. Closing it for now as I see no solution.\nIf anyone has one, please ping me!\nBest regards,\nMarcel. Hello @greg-witczak,\nas mentioned by @CalvinKern please use Draft_17!\nGreetings\nmarci4. Sorry. I deprecated Draft_17 with 1.3.4 because I want people to use the upcoming features for RFC_6455.\nThe new draft is now Draft_6455\nGreetings\nmarci4. Updated with #444. This issue should be fixed with the latest version.\nGreetings\nmarci4. Will be added with #473.\nThx for your pull request!\nGreetings\nmarci4. Hello @renaudboulard and @szczepaan \nis this still an issue for you with the latest version of the lib?\nGreetings\nmarci4 . No feedback.\n@douglasjunior mentioned that it is solved.\nIf there is still a problem, feel free to reopen the issue.\nGreetings\nmarci4. dupliacte of #293. I quess I meant #424.... . hey @zhoulifu,\nright now I am playing with the thought of deprecating Draft_10, Draft_75 and Draft_76 and not supporting them any more.\nIn my opinion this should have been done a long time ago.\nGreetings\nmarci4. This draft is now deprecated, see #478.\nClosing this issue.\nGreetings\nmarci4. I added some additional logging for some exceptions.\nCant reproduce it. And the pull request is just f**ed up.\nClosing issue.\nGreetings\nmarci4. Cant really check what changed.. . Hello @jasminsehic \ncould you give me access to this repository? (Using the username marci4)\nThx!\nGreetings\nmarci4. Hello @jasminsehic,\nsorry that my message was misleading...\nI meant the https://clojars.org/ dashboard.\nGreetings\nmarci4. Hello @LAX1DUDE,\nI can't do anything with such a bug report. Please comment a detailed bug report and steps to repeat including the versions of different endpoints on the active topic #525.\nI would really like to understand and fix this problem, but if I cant reproduce it, I cant do anything...\nGreetings\nmarci4. Hello @LAX1DUDE,\nI would like to know your mistake. Maybe others made the same mistake and that would help them as well.\nGreetings\nmarci4. Could you please check if #570 is fixing this issue for you?\nGreetings\nmarci4. This issue should be solved. If not feel free to open a new issue!\nGreetings\nmarci4. Test code:\n```java\npublic class Test {\npublic static void main(String[] args) throws URISyntaxException, InterruptedException {\n    WebSocketImpl.DEBUG = false;\n    while (true) {\n        TestClient client = new TestClient();\n        client.connectBlocking();\n        client.send();\n        client.closeBlocking();\n        client.send();\n    }\n}\n\nstatic class TestClient extends WebSocketClient {\n\n    public TestClient() throws URISyntaxException {\n        super( new URI( \"ws://localhost:8887\" ), new Draft_17() );\n    }\n    public boolean connect = false;\n\n    public boolean closed = false;\n\n    @Override\n    public void onOpen( ServerHandshake handshakedata ) {\n        int i = Integer.MIN_VALUE;\n        while(i != Integer.MAX_VALUE) {\n            i++;\n        }\n        connect = true;\n    }\n\n    @Override\n    public void onMessage( String message ) {\n\n    }\n\n    @Override\n    public void onClose( int code, String reason, boolean remote ) {\n        int i = Integer.MIN_VALUE;\n        while(i != Integer.MAX_VALUE) {\n            i++;\n        }\n        closed = true;\n    }\n\n    @Override\n    public void onError( Exception ex ) {\n\n    }\n\n    public void send() {\n        if (connect  && !closed) {\n            send( \"success\" );\n        } else if (closed) {\n            System.out.println(\"closed\");\n        } else {\n            throw new RuntimeException(  );\n        }\n    }\n}\n\n}\n```. This issue should be fixed with the pull request #455 \nGreetings\nmarci4. needs additional code #273 . Hello @e82eric,\nplease check out the SLL client example provided here \nGreetings\nmarci4. I pushed an update to clojars.\nGreetings\nmarci4. Hello @jcdufourd,\nis this still an issue for you?\nI don't have a Mac so it is gonna be hard for me to reproduce it without your help!\nGreetings\nmarci4. Closing issue.\nGreetings\nmarci4. Hello @jwilljacob and @dbrgn,\nI added an example to the wiki how you can add your custom Sec-Websocket-Protocol.\nCheck it out here.\nGreetings\nmarci4. Closing old issue without any clear exception.\nGreetings\nmarci4. Added examples for  TCP_NODELAY . Added examples for Lost connection detection. TODO: \n- [x] Extend #473 documentation\n- [x] Frames\n- [x] Sample android application for websocket server and client ( see https://github.com/marci4/AndroidJavaWebsocketExample )\n- [x] #510 \n- [x] Android Keystore example\n- [ ] Extensions\n- [x] Enable SO_REUSEADDR \n- [x] How to reject a handshake (see #530)\n. @bendem thx for the response. Closing it . Hello @AmsterdamRocks \nsorry for the huge delay.\nTrying to get through all the old issues....\nI right now cannot reproduce this issue.\nCould you please update to 1.3.3?\nGreetings\nmarci4. No steps to reproduce. No response.\nClosing a dead issue. Hello @GreenRover,\nI am right now not able to merch your changes without fu**ing up my fork :(\nBut I copied the code over and it works great!\nGoing to merch it this way.\nSpecial thanks to you and your work!\nGreetings\nmarci4. Hello @xelixua,\nis this still an issue for you with the latest version of the lib?\nYou can also check the wiki for an example how to use a SSLContext.\nGreetings\nmarci4. No update for months.\nFor me this issue is solved with the reference to the wiki entry.\nClosing issue!\nGreetings\nmarci4. Hello @hezhubo\ncould you please use the latest version 1.3.2 to check if this issue is fixed for you?\nGreetings\nmarci4. Hello @hezhubo \nthat is not the solution to the problem, just a work around.\n(For tracking: Could be related to #302 )\nGreetings\nmarci4. hello @hezhubo \ndo you have any update on this issue?\nGreetings\nmarci4. No feedback!\nIf you still have this issue, please open a separate thread!\nGreetings\nmarci4. Hello @hydrabolt ,\nis this still an issue for you with the latest version of the lib?\nGreetings\nmarci4. Updated some code with #488.\nDoes this fix it for you?\nGreetings\nmarci4. No problem. Thanks for your feedback\nI'm gonna close this issue since I am not able to reproduce it locally!\nGreetings\nmarci4. Hello @max-mc2labs,\nis this still an issue for you with the latest version of the lib?\nGreetings\nmarci4. Since I cannot reproduce this issue and you gave up, I am gonna close this issue.\nGreetings\nmarci4. Issue was caused by kaspersky :(\nClosing issue.\nGreetings\nmarci4. Closing this issue for #490 \nGreetings\nmarci4. Included license headers for all files!\nGreetings\nmarci4. hello @dragonlr,\ndoes this issue still exists with the lastest lib version?\nGreetings\nmarci4. Cannot reproduce this issue...\nAnd did not get any feedback\nClosing it!\nGreetings\nmarci4. added with #462. Hello @iraj-wisilica and @JBearded \nI digged a bit into this topic and I think the limiting factor is how many threads you can spawn because each connection is getting its own thread to handle all its calls.\nInternally we (normaly) use a HashSet to store all the current connections so that would be the maximum limit, which is close to Integer.MAX_VALUE afaik.\nGreetings\nmarci4\n. fixed with #272 . Hello @mfsi-ankitb and @brobits \ndo you still run into this issue with the latest version?\nGreetings\nmarci4. Will be added with #473.\nThx for your pull request!\nGreetings\nmarci4. Hello @leiripmeester,\nPlease don't use the Draft_75 any more! \nI recommend the Draft_17 for you!\nGreetings\nmarci4. as posted in #347, the server passes all the close tests without any problems.\nGreetings\nmarci4. Hello @oakkitten,\nI used autobahn testsuite and with the current codebase the implementation passes any close test.\nHave you tried the latest version of the lib?\nGreetings\nmarci4. No update for 2 months!\nClosing issue.\nGreetings\nmarci4. Thank you for your feedback @oakkitten.\nHappy to hear that this is solved!. Hello @oakkitten,\nwhy do you interrupt the connector?\nCould you open a separate issue with an example code so I can take a look at this?\nThank you!\nBest regards,\nmarci4. Hello @oakkitten,\nsocket factories will be added for WebSocketClient in 1.4.0 (See #770).\nCan you reproduce the slow connection close please for me?\nLooking at the null pointer, this should not happen, so I would be happy if you can provide an example application for this as well!\nBest regards,\nmarci4. Hello @oakkitten,\nas you may see in my activity lately I am currently really busy with my normal job and real life in general. Therefore I simple do not have the time to reproduce such issues on my own and simply depend on others to provide a simple reproduction example.\nOn the other hand you can simple fix it and open a PR for the issues you found.\nBest regards,\nmarci4. Hello @oakkitten,\nthank you very very much for this test!\nIt is simple perfect :)\nI will take a look at this and will get back to you.\nBest regards,\nmarci4. Hello @oakkitten,\nwith the help of your unit test I created a patch. What do you think of the changes?\nBTW could you open a PR for your unit test? \nBest regards,\nmarci4. Maybe someone just needs to take his time and rewrite everything from the ground of.\nMaybe that is the only solution.... \nBut as far as I can tell, I will not have the time for this what so ever.. Maybe https://github.com/marci4/Java-WebSocket-Dev/tree/readystate is a start. Hello @latinosamuel,\nno this issue awaits your pull request!\nBest regards,\nMarcel. Hello @mhdjazmati,\nthe problem you describe looks like a bug in your server.\nFrom the android point it should be possible but it depends on your server.\nGreetings\nmarci4. merged to project. Thx for the pull request. \nBut I already updated everything!\nGreetings\nmarci4. Thx for your pull request!\nAlready integrated.\nGreetings\nmarci4. Hello @DeepSnowNeeL ,\nyou are mixing up different specs!!\nDraft_10 is an implementation of Hypi 10.\nThe spec you are revering (RFC_6455) to is implemented with Draft_17!\nGreetings\nmarci4\n. Going to look into that.\nRan into the same problem!\n. duplicates #379 . Hello @PerBothner \ncould you please open a pull request for your commit?\nThx\nGreetings\nmarci4. Hello @PerBothner \nthx for your pull request.\nGonna test it soon :)\nClosing the issue.\nGreetings\nmarci4. Hello @SteveMobile and @vinod1054,\nis this still an issue with the current version 1.3.2? \nGreetings\nmarci4. No update for months.\nClosing issue!\nGreetings\nmarci4. duplicate of #423 . Hello @9992800,\nyou have to html encode all the chinese characters to valid html.\nGreetings\nmarci4. Hello @vinod1054,\ndo you still have this issue?\nCould you build the jar directly from the sources here on github?\nGreetings\nmarci4. duplicates #424 . Issue answered. closing\nGreetings\nmarci4. Hello @GalloTeo,\ndo you still have this issue with the most recent lib version?\nWhich draft are you using?\nPersonally I dont have any issues with wss in my IDE and in production.\nGreetings\nmarci4. Cannot reproduce.\nNo feedback.\nProbably fixed with some commits.\nClosing.\nGreetings\nmarci4. Feeling the same like @bendem, it does not really make scene.\n@PerwinCZ try to build the jar directly from the sources, I merged some fixes that should help with WSS\nGreetings. Hello @jackwilliambell \nI would recommend to you to use Draft_17 and not Draft_10!\nGreetings\nmarci4. Looks like problem is answered.\nGreetings\nmarci4. @clickstan if you have anything to share feel free to open a pull request ;). duplicate of #423 . Hello @soylomass,\ndo you still have this issue?\nI ran into the same issue and the problem and made sure that the problem doesn't happen any more by catching all exceptions!\nWould recommend this to you too.\nAnyway, I'm gonna merch a pull request printing a stacktrace for exceptions caught by the UncaughtExceptionHandler \nGreetings\nmarci4. fixed with #437 . Hello @acib708 and @kirkmicz \ndo you still have this issue with the latest version?\nGreetings\nmarci4. @h3adache the latest version is 1.3.4\nIs this still an issue then?. Hello @h3adache,\nwell at least the error should be displayed and then disconnect.\nOpening a seperat issue for this!\nGreetings\nmarci4. Hello @h3adache, \njust an update for you. \nSSLException will now also call onError ( see #516 )\nClosing this issue!\nGreetings\nmarci4. Hello @happycodinggirl,\ndoes this issue still exists for you with the most recent lib version?\nGreetings\nmarci4. Looks like the issue is answered.\nGreetings\nmarci4. Cannot reproduce. Hello @felippeduran,\nI will be able to test this issue in two days probably .\nHave you tested the issue against the current master branch code as well? Does this still cause issues?\nRegarding the item 2, what do you think of an additional onError call with an exception indicating an invalid http status code?\nGreetings\nmarci4. Hello @felippeduran again,\nI added a reason for the onClose call, if there was an error with the status code or status line.\nIssue should be solved by that.\nGreetings\nmarci4. Duplicates #413 . hey @twoi,\nI went through the spec and at chapter 11.8 all the opcodes are specified!\nBut it could be that there is a bug that the opcode continuation is not correctly dealt with\nGreetings\nmarci4. Hello @twoi,\nsorry to ping you about this issue again.\nHave you, by any chance, checked if this is still an issue for you with the latest version?\nGreetings\nmarci4. Thank your feedback!\nSince no one else seems to have this issue and you are fine with it, I will close it!\nIf however anyone has the same problem, feel free to reopen this!\nBest regards,\nmarci4. Hello @DonnyLi,\nhave you tried to update your lib? \nOn the current codebase this is the setter for a proxy.\njava\npublic void setProxy( Proxy proxy ) {\nif( proxy == null )\nthrow new IllegalArgumentException();\nthis.proxy = proxy;\n}\nGreetings\nmarci4. Hey @patelrahul2040,\nfor me that looks like an internal error in your tls implementation/lib.\nDoes this problem still exists?\nGreetings\nmarci4. No update for months and no clear description.\nClosing issue!\nGreetings\nmarci4. hello @busyfree,\nhave you fixed your problem yet?\nI think he problem is the additional file path at the end of ws://**.\nTry to remove this and it should hopefully be fixed.\nGreetings\nmarci4. Hello @youyuanme,\nI do not really understand your issue. \nFor my projects onClose will always be called when the server closes the connection.\nGreetings\nmarci4. Hello @qktang,\nare you on the latest version 1.3.2?\nRight now this version is passing all the tests provided by the autobahn testsuite including closing behavior, so for me this works.\nGreetings\nmarci4\n. hello @hattie0312,\ncould you provide some steps to reproduce for me?\nwhat are you doing on the client side and what are you doing on the server side?\nGreetings \nmarci4. No feedback!\nIf you still have this issue, please open a separate thread!\nGreetings\nmarci4. I personally don't have any access to maven. \nGonna try to get in contact with @TooTallNate \nGreetings\nmarci4. I looked into it a bit more and found out that this website:\nhttps://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket/1.3.0\nLooks like @TooTallNate is the founder and @Davidiusdadi is the current maintainer.\nGreetings. Same as #306 . I pushed an update to clojars.\nGreetings\nmarci4. duplicate #401 . Hello @piyurabadiya,\nhave you tried the example provided here?\nGreetings\nmarci4\n. No response after one months..\nLooks like wrongy used constructor.\nClosing issue.\nGreetings\nmarci4. Hello @37du  and @piyurabadiya \nplease use the following example when you call the constructor:\nnew URI(\"ws://example.org)\"\nGreetings\nmarci4. Hello @scottslewis,\nsorry for the delay. I am trying to get through all the old issues!!\nDoes the NPE still exists when you build your jar from the current master?\nGreetings\nmarci4. 2 months of no feedback.\nCant reproduce this issue!\nClosing it.\nGreetings\nmarci4. Looks like his question was answered.\nClosing issue\nGreetings\nmarci4. Hello @PerBothner,\nno right now it is not possible for the libary to serve http/https and ws/wss.\nYou could just implement your own webserver into your application running parallel to your ws-server.\nGreetings\nmarci4. In comments, you said you fixed it. \nClosing. Greetings marci4 . Hello @clickstan, \ncould you please open a pull request for your commit?\nGreetings\nmarci4. possible duplicates #339 (internal for me). added with #462. https://github.com/TooTallNate/Java-WebSocket/wiki/Enable-TCP_NODELAY. The class exists in the current master branch.\nGreetings\nmarci4. Hello @atonamy,\ncan you tell me which files were missing?\nWould like to fix this issue for you and others!\nGreetings\nmarci4\n. Yes please send me a mail to admin at marci4.de \nGreetings \nMarci4. @atonamy thx for the respone. Got your mail :)\nGonna have to update the documentation, this files are not needed any more.\nClosing issue.\nGreetings\nmarci4. Hello @munnadroid and @whitebian \nCould you please check out the wiki here and give me feedback if this helps you?\nGreetings\nmarci4. I can use wss on android and connect from different sources to it.\nClosing the issue.\nGreetings\nmarci4. Hello @yasserf,\ncould you provide me with a test application where I can try to fix this problem.\nGreetings\nmarci4. possible cause #424. @erobic @rhlff could you provide me a test application? . Hello @rhlff,\nI changed some code with #488.\nHope to resolve those issues with these changes!\nGreetings\nmarci4. Hello @arpitjoshi08,\nfirst of all I have no idea if https://github.com/Gottox/socket.io-java-client is implementing the websocket protocol correctly. So there also may be issues there?\nCould you please tell me on what specific device versions you are getting this error? Does this only happen in production or also in the emulator?\n1.3.4 introduces a feature which detects if the other endpoint is not reachable any more (due to dropped internet etc), so in short all the connections got lost but the underlaying runtime did not detect it on its own.\nGreetings\nmarci4. Hello @arpitjoshi08, \nI will try to test this in an emulator if I got the time on the weekend.\nApart from this, no there is no example application for the socket.io-java-client. Maybe get in contact to the maintainer to help you with your issue!\nGreetings\nmarci4. No feedback!\nIf you still ave this issue, please open a separate issue!\nGreetings\nmarci4. Hello @hanmo9,\nplease read up on the short explanation for \"Connection reset by peer\" here.\nGreetings\nmarci4\n. Hello @vedi0boy,\nI should be able to provide an example for you to use a certificate (Let's encrypt) for the server.\nGonna add a documentation.\nGreetings\nmarci4. Hello @vedi0boy,\nplease check out my wiki post with some examples here.\nGreetings\nmarci4. Hello @vedi0boy,\nwell I use it with a Let's Encrypt certificate.\nSome certificiates may not use \"pem\" files so it will be likely that you have to use a keystore.\nAnd some certficiates may have a different format so you may wanna adjust this to (when you load the certificate directly from the file)\nGreetings\nmarci4. hey @pvtai,\ndo you still have this issue?\nCould you please provide your calls for the constructors of the WebSocketClient and WebSocketServer?\nGreetings\nmarci4\n. Closing this issue since there is no additional feedback and I also merged some fixes for shuting down threads.\nAlso not having any open threads in the profiler.\nGreetings marci4. TooTallNate is not active any more on this repository. Maybe just tweet him and if he has time he may check it.\nGreetings\nmarci4. Would be great if this project keeps on going!\nNot sure how long I would be able to maintain this project due to RL (end of university and so on) but really would like to step up!. Hello @sristi and others,\ncould you please try to build your jar directly from the sources?\nI merged some pull requests fixing bugs with wss!\nGreetings\nmarci4. Hello @sristi,\nplease don't use maven right now.\nWe haven't pushed an update to this repository yet!\nSo there are propably not all relevant changes included.\n(If you are unable to build the jar directly, fell free to ask)\nGreetings\nmarci4. Ahhh ok. Sorry for that then. (English is not my first language :( ) \nCould you provide some code for future developers? If it is fine for you I would add it to the wiki. \nGreetings\nMarci4. Hello @sristi \nthx for your example!\n(btw fixed the formatting for you :) )\nGreetings\nmarci4. hey @brucelwl,\nam I reading the stacktrace wrong or do you use the tomcat implementation and not the implementation provided by this project?\nGreetings\nmarci4. No response.\nStacktrace looks like tomcat.\nClosing issue...\nGreetings\nmarci4. Hey @ainsley and @Horsetopus,\ncould you provide any simple example for me to reproduce this issue and hopefully fix it.\nCan't really promise to much because I didn't implement it but I would really like to help you!\nGreetings\nmarci4. possible duplicates #300  (internal for me). Hello @solomon-chen ,\nI ran into the same idea while trying to complete all the testcases in the autobahn testsuite.\nThis caused some problems with fragmented byte frames as far as I remember.\nCould you please provide an example code, when a specific message is not working any more?\nGreetings\nmarci4. Could you please check if #570 is fixing this issue for you?\nGreetings\nmarci4. This issue should be solved. If not feel free to open a new issue!\nGreetings\nmarci4. hey @TomWangTW,\ncould you maybe provide a stacktrace for your issue?\nGreetings\nmarci4. Hey @TomWangTW,\nI am going to reduce the use of recursive calls, hopefully this helps your problem. \nI will update you with my changes!\nGreetings. Hello @TomWangTW,\nI merged some changes from my development repository to the main repository.\nCould you please build the jar directly from these sources and check if this fixes your issue?\nGreetings\nmarci4. Hello @TomWangTW,\ncan I reproduce this issue in the emulator as well?\nGreetings\nmarci4\nEDIT: Tried it in the emulator, cannot reproduce it this way....\nCant change the compile-version without f***ing up my project.... Right now I am moving away from the currently used SSLSocketChannel and write our own one!. Little update here:\nGot a SSLSocketChannel that works with every Android version from API Level 17 -25 :)\nWorking on some finishing touches (including talking to the author).\nGreetings\nmarci4. Hello @TomWangTW,\nI merged some changes to the main branch.\nFor me this resolves all the issues with android!\nGreetings\nmarci4. Hello @miopa,\nI had to remove it. Gonna push it to the main branch anyway later again to allow more testing!\nGreetings\nmarci4. Hello @TomWangTW \nthe cause for this problem is this issue https://issuetracker.google.com/issues/37044892\nThis combined with the not so perfect usage of the SSLEngine causes the problem!\nGreetings\nmarci4. Have to move this issue to 1.3.5.... Hello @sepehr1014,\nthis issue is caused by a bug in the android framework which was introduced in the Android L preview and made it into the release...\nThe only way to fix this issue is just to replace the current SSLChannel implementation with a total new one...\nAny contribution is very welcome since my time for this project is limited to work!\nGreetings\nmarci4. hey @emilpradeep,\ncould you tell me which version you use?\nSo I can try to reproduce it \nGreetings\nmarci4. Hello @simonchius, \nis it possible for you to send me your code please?\nRight now I cannot reproduce it :(\nAlso try to build the jar directly from the sources. I merged some fixes there.\nGreetings\nmarci4. @emilpradeep do I understand you correct that this issue is fixed right now using the lastest sources?\nGreetings\nmarci4. Yes :)\nThx for the feedback =)\nGreetings\nmarci4. Right now there is no update available in the maven repository (I don't have access to it).\nSo you need to build the jar directly from the sources (see README)\nGreetings. @simonchius I updated the readme with the new maven repository etc\nPlease check it out :)\nGreetings\nmarci4. Hello @simonchius,\na different user mentioned here that you maybe need to clear the cache of your IDE and restart it\nCheck here\nHope this fixes it for you.\nGreetings\nmarci4. hello @simonchius,\ncould you maybe add the following line to the start of your build\napply plugin:'java'\nIf this is not working, could you please send me your full build script.\nGreetings\nmarci4. Hello @emilpradeep \nplease add the following lines to your build script\nrepositories {\n    maven { url \"http://clojars.org/repo\" }\n}\nGreetings\nmarci4. Hello, \nThe code changed a bit with the internal commits. \nCheck this example when you wanna use a ssl context. \nhttps://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/SSLClientExample.java\nGreetings \nMarci4. Issue is clearly solved.\nClosing issue.\nGreetings\nmarci4. Hello @maxmikeibx,\nI am not sure if I understand your issue/request.\nWhat do you mean with ocpp1.6? \nDo you have any spec for me?\nGreetings\nmarci4\n. hello @maxmikeibx,\ncould you please check if the following example works for you?\n```java\npackage org.java_websocket.drafts;\nimport org.java_websocket.exceptions.InvalidHandshakeException;\nimport org.java_websocket.handshake.*;\npublic class Draft_OCPP16 extends Draft_17 {\n@Override\npublic HandshakeState acceptHandshakeAsServer(ClientHandshake handshakedata) throws InvalidHandshakeException {\n    if (super.acceptHandshakeAsServer(handshakedata) == HandshakeState.NOT_MATCHED)\n        return HandshakeState.NOT_MATCHED;\n\n    if (!handshakedata.hasFieldValue(\"Sec-WebSocket-Protocol\"))\n        return HandshakeState.NOT_MATCHED;\n\n    if (handshakedata.getFieldValue(\"Sec-WebSocket-Protocol\").equalsIgnoreCase(\"ocpp1.6\")) {\n        return HandshakeState.MATCHED;\n    } else {\n        return HandshakeState.NOT_MATCHED;\n    }\n}\n\n@Override\npublic HandshakeState acceptHandshakeAsClient(ClientHandshake request, ServerHandshake response) throws InvalidHandshakeException {\n    if (super.acceptHandshakeAsClient(request, response) == HandshakeState.NOT_MATCHED)\n        return HandshakeState.NOT_MATCHED;\n\n    if (!request.hasFieldValue(\"Sec-WebSocket-Protocol\"))\n        return HandshakeState.NOT_MATCHED;\n\n    if (request.getFieldValue(\"Sec-WebSocket-Protocol\").equalsIgnoreCase(\"ocpp1.6\"))\n        return HandshakeState.MATCHED;\n    return HandshakeState.NOT_MATCHED;\n}\n\n@Override\npublic ClientHandshakeBuilder postProcessHandshakeRequestAsClient(ClientHandshakeBuilder request) {\n    super.postProcessHandshakeRequestAsClient(request);\n    request.put(\"Sec-WebSocket-Protocol\", \"ocpp1.6\");\n    return request;\n}\n\n@Override\npublic HandshakeBuilder postProcessHandshakeResponseAsServer(ClientHandshake request, ServerHandshakeBuilder response) throws InvalidHandshakeException {\n    HandshakeBuilder result = super.postProcessHandshakeResponseAsServer(request, response);\n    result.put(\"Sec-WebSocket-Protocol\", \"ocpp1.6\");\n    return result;\n}\n\n@Override\npublic Draft copyInstance() {\n    return new Draft_OCPP16();\n}\n\n}\n```\nGreetings\nmarci4. Added this example to the wiki (see here). hey @iokane,\ndo you still have an issue here?\nGreetings\nmarci4. No feedback by issue creater and also unclear issue.\nClosing\nGreetings\nmarci4. hey @Henryeung,\ncould you provide a complete stacktrace?\nAlso I think that the main problem is the small delay (100ms) combined with the while loop.\nIf you still having issues I would really like to help you!\nGreetings\nmarci4. cannot reproduce this issue\nGreetings\nmarci4. Hey @ComradeWoland,\nwhat client are you using?\nCould it be that you are using a .NET client?\nGreetings\nmarci4. Hey @ComradeWoland,\ncould you please activate the debug output with WebSocketImpl.DEBUG = true;\nI cannot reproduce this problem with my private project right now (nether wss nor ws)\nMaybe you could also try rebuild the jar directly from the sources here on github (I merged some pull requests, but was not able to update maven/gradle yet)\nAlso I just got the idea that you maybe wanna use Draft17 and not Draft10 for your project (Read up on the drafts here), because as documented  it implements Hybi 17/RFC 6455 and is currently supported by Chrome16+ and IE10.\nGreetings\nmarci4. Hello @micamo2k17,\ncould you please activate the debug output with WebSocketImpl.DEBUG = true; before you start the websocket server\nand then post the log here please.\nWhen does this problem occur?\n- Which Draft are you using? (I really hope Draft_17 :) )\n- Do you ping the websocket server?\n- Do you send a lot of messages or no messages?\n- Do you use any other extension which might interfere with the websocket connection?\n- Are you using any specific sub-protocol? \nRight now I don't have any problems using a wss in production.\nGreetings\nmarci4\n. Hello @micamo2k17 \nfirst of all it looks like you are using an outdated version of the lib (Check the readme for the latest version)\nMaybe this fixes your issue already.\nIf not please also include the debug print out when the connection is opened :)\nGreetings\nmarci4. Hello @micamo2k17,\nthat is not an indication that you are using the latest build. It looks like you are actually using a outdated version.\nHow do you build your project? What do you use? Maven, Gradle?\nGreetings\nmarci4. Hello @micamo2k17 \nplease add a custom maven repository to your repositories list\nmaven { url \"http://clojars.org/repo\" }\nThe result may look like this\nrepositories { mavenCentral() maven { url \"http://clojars.org/repo\" } }\nFor compiling just add compile \"org.java-websocket:java-websocket:1.3.2\" so you are using the latest version.\nGreetings\nmarci4. Hello @micamo2k17 \ncould you maybe join the IRC Server here http://webchat.freenode.net/?channels=java-websocket\nI quess it will be easier for both of us to fix this :)\nGreetings\nmarci4. hello @micamo2k17 \nI installed the android studio again on my laptop and this works for me\n```gradle\napply plugin: 'com.android.library'\nrepositories {\n    maven { url 'http://clojars.org/repo' }\n}\nandroid {\n    compileSdkVersion 25\n    buildToolsVersion \"25.0.0\"\ndefaultConfig {\n    minSdkVersion 17\n    targetSdkVersion 25\n    versionCode 1\n    versionName \"1.0\"\n\n    testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n\n}\nbuildTypes {\n    release {\n        minifyEnabled false\n        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n    }\n}\n\n}\ndependencies {\n    compile fileTree(include: ['*.jar'], dir: 'libs')\n    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    compile 'com.android.support:appcompat-v7:25.3.0'\n    compile 'org.java-websocket:java-websocket:1.3.2'\n    compile 'org.apache.commons:commons-lang3:3.0'\n    compile 'commons-codec:commons-codec:1.9'\n    compile 'commons-io:commons-io:2.4'\n    compile 'com.android.support:support-v4:25.3.0'\n    testCompile 'junit:junit:4.12'\n    //compile files('libs/commons-codec-1.3.jar')\n}\n```\nso everything fixed itself with the following line\nrepositories {\n    maven { url 'http://clojars.org/repo' }\n}\nGreetings\nmarci4. Hello @micamo2k17,\nTooTallNate did not have any access to the maven repository so the clojars repository is now gonna be the main repository...\nCan't do much there...\nClosing the issue since it is resolved with the latest version.\nGreetings\nmarci4. Hello @ComradeWoland,\nhope you feel better now!\nCould it be that you are not using the current version 1.3.3?\nGreetings\nmarci4. hello @yin450561200,\ncould you please describe your issue a bit more specific?\nGreetings\nmarci4. Still no answer.\nClosing\nGreetings\nmarci4. Right now you cannot reuse your websocket connection instance!\nJust call the constructor again and start the connection (like you do in your initial connection)\nGreetings\nmarci4. Hello @GeminiLoal,\nhave you tried to build the jar directly from the sources?\nFor me the example provided is currently working without any problems.\nGreetings\nmarci4. Hey @GeminiLoal,\nI haven't changed any version-strings yet so I can't really tell if you have the right version.\nIf you still have the problem I will just send you my jar.\nGreetings\nmarci4. hey @GeminiLoal,\nit looks like you are using the wrong example.\nYou should use the example SSLClientExample and not ExampleClient\nGreetings\nmarci4. Issue solved :) closing\nGreetings. Should be fixed with the commit\nGreetings\nmarci4. hello @rashaverak,\nLet me try to understand your problem:\n\nYou are using one websocket server (wss)\nYou wanna listen to example.org and example2.org (and not a different sub domain)\nYou have one certificate for each domain\nYou have the same business logic for both domains\n\nYour problem is now that you get a certificate error when you try to access the wss with example.org while you used the certificate for example2.org\nIs that correct?\nGreetings\nmarci4. Ahhh ok, I quess I now understand your problem.\nWell I can't really help you with this problem because we use a native Java Socket which just allows us to bind to a specific IP-address and port. \nWithout any managing software above the connection something like SNI is not possible.\nI would recommend to you that you use just a different port for your second server (You should have had a bind exception that the address is already in use anyway!)\nHope I was able to help you!\nGreetings\nmarci4. Thx for your answer, sorry that I did not get your question!\nClosing the issue!\nGreetings\nmarci4. README Updated. Hello @PerBothner \nthinking about your pull request again.\nWould it also just be sufficient for you to get a notification that the server startet up successfully?\nGreetings\nmarci4. Hello @5hivams ,\nthe way to resolve your issue is just to use a custom maven repository .\nAdd the following lines to your repositories list \nmaven {\n        url \"http://clojars.org/repo\"\n    }\nThe result may look like this\nrepositories {\n    mavenCentral()\n    maven {\n        url \"http://clojars.org/repo\"\n    }\n}\nThen you can just use the clojars repository.\nGreetings\nmarci4. Hey @5hivams \nyou also added the compile dependency? \ncompile \"org.java-websocket:java-websocket:1.3.2\"\nWorking for me :(\nGreetings\nmarci4. Could you please elaborate your question, since there are no information in your issue which may let me help you!\nGreetings\nmarci4. No answer. Unclear question.\nClosing...\nGreetings\nmarci4. Hello @biaxident,\nas I understand your example correctly, you just need a SSLSocket to verify the hostname.\nGonna possible add a getter for this in the new version.\nGreetings\nmarci4\n. Hello @biaxident,\nI merged a change to this repository just now.\nCould you please check if this is sufficient for your needs?\nGreetings\nmarci4. Example code for echo.websocket.org\n```java\npackage com.example.marci4.websockettest;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport org.java_websocket.WebSocketImpl;\nimport org.java_websocket.client.WebSocketClient;\nimport org.java_websocket.handshake.ServerHandshake;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport javax.net.ssl.HostnameVerifier;\nimport javax.net.ssl.HttpsURLConnection;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.SSLHandshakeException;\nimport javax.net.ssl.SSLSession;\nimport javax.net.ssl.SSLSocket;\npublic class MainActivity extends AppCompatActivity {\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    WebSocketClient client = null;\n    try {\n        client = new WebSocketClient(new URI(\"wss://echo.websocket.org\")) {\n            @Override\n            public void onOpen(ServerHandshake handshakedata) {\n                Log.i(\"Client\", \"Open\");\n            }\n\n            @Override\n            public void onMessage(String message) {\n                Log.i(\"Client\", \"Message: \" + message);\n            }\n\n            @Override\n            public void onClose(int code, String reason, boolean remote) {\n                Log.i(\"Client\", \"Close: \" + reason + \" Code: \" + code + \" Remote: \" + remote);\n            }\n\n            @Override\n            public void onError(Exception ex) {\n                Log.e(\"Client\", \"Error: \" + ex.getMessage());\n            }\n        };\n    } catch (URISyntaxException e) {\n        e.printStackTrace();\n    }\n    try {\n        //Get SSLContext\n        SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(null, null, null);\n        client.setSocket(sslContext.getSocketFactory().createSocket());\n        //Connect to server\n        client.connectBlocking();\n        //Verify \n        HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();\n        SSLSocket socket = (SSLSocket) client.getSocket();\n        SSLSession s = socket.getSession();\n        if (!hv.verify(\"echo.websocket.org\", s)) {\n            Log.e(\"Client\", \"Expected echo.websocket.org, found \" + s.getPeerPrincipal());\n            throw new SSLHandshakeException(\"Expected echo.websocket.org, found \" + s.getPeerPrincipal());\n        } else {\n            Log.i(\"Client\", \"Success\");\n        }\n    } catch (SSLHandshakeException e) {\n        client.close();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n\n}\n```. Example also added to the wiki. https://github.com/TooTallNate/Java-WebSocket/wiki/Verify-hostname-after-handshake. also fix for #302 . Hello @prithivraj,\nright now I cannot reproduce your issue.\nI DO get a warning for the wrong source version which I am gonna fix, but other then that, my build succeeds.\nGreetings\nmarci4. Fixed some warnings.\nClosing issue.\nGreetings\nmarci4. Hello @dan335,\ncould you please tell me which version of the lib you are using right now?\nIt should be 1.3.2.\nAs it looks like you are using the lib on a normal client and not android, is this right?\nDo you know with which clients this problem occurs?\nGreetings\nmarci4\n. Hello @dan335 \nwas able to reproduce this issue with https://www.htbridge.com/ssl test suite.\nThe fix provided by @becast is working.\nGoing to release it with the new version 1.3.3.\nGreetings\nmarci4\n. Hello @becast,\nthx for your pull request.\nCould you explain why you made those changes to the code?\nI would like to understand the reasoning behind this :) \nGreetings\nmarci4. Hello @becast,\nI testet your changes against the autobahn ws testcase and also against https://www.htbridge.com/ssl in production.\nIt fixes the 100% CPU usage.\nIs it fine for you that I copy the changes over to my repository and also add some comments for a future me to it? (And don't f**k up this repository with all the other changes included in this pull request)\nGreetings\nmarci4. Thx again for your help!\nIncluded with PR #461 \nGreetings\nmarci4. Hello @dan335,\nthx for your pull request :)\nThis code introduces a dependency for Java 1.7 or Android 7.0\nSince we also support older android versions, I am also looking for a different approach.\nGreetings\nmarci4. Hello @dan335,\nit is me again, Mario... I mean Marcel :)\nCould you please check if the following code also improves your performance (it should!)\nI try to use a different method to access TCPNoDelay.\n```java\npackage org.java_websocket.server;\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.nio.ByteBuffer;\nimport java.nio.channels.ByteChannel;\nimport java.nio.channels.CancelledKeyException;\nimport java.nio.channels.ClosedByInterruptException;\nimport java.nio.channels.SelectableChannel;\nimport java.nio.channels.SelectionKey;\nimport java.nio.channels.Selector;\nimport java.nio.channels.ServerSocketChannel;\nimport java.nio.channels.SocketChannel;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.CopyOnWriteArraySet;\nimport java.util.concurrent.LinkedBlockingQueue;\nimport java.util.concurrent.atomic.AtomicBoolean;\nimport java.util.concurrent.atomic.AtomicInteger;\nimport org.java_websocket.SocketChannelIOHelper;\nimport org.java_websocket.WebSocket;\nimport org.java_websocket.WebSocketAdapter;\nimport org.java_websocket.WebSocketFactory;\nimport org.java_websocket.WebSocketImpl;\nimport org.java_websocket.WrappedByteChannel;\nimport org.java_websocket.drafts.Draft;\nimport org.java_websocket.exceptions.InvalidDataException;\nimport org.java_websocket.framing.CloseFrame;\nimport org.java_websocket.framing.Framedata;\nimport org.java_websocket.handshake.ClientHandshake;\nimport org.java_websocket.handshake.Handshakedata;\nimport org.java_websocket.handshake.ServerHandshakeBuilder;\n/*\n * WebSocketServer is an abstract class that only takes care of the\n * HTTP handshake portion of WebSockets. It's up to a subclass to add\n * functionality/purpose to the server.\n * \n /\npublic abstract class WebSocketServer extends WebSocketAdapter implements Runnable {\npublic static int DECODERS = Runtime.getRuntime().availableProcessors();\n\n/**\n * Holds the list of active WebSocket connections. \"Active\" means WebSocket\n * handshake is complete and socket can be written to, or read from.\n */\nprivate final Collection<WebSocket> connections;\n/**\n * The port number that this WebSocket server should listen on. Default is\n * WebSocket.DEFAULT_PORT.\n */\nprivate final InetSocketAddress address;\n/**\n * The socket channel for this WebSocket server.\n */\nprivate ServerSocketChannel server;\n/**\n * The 'Selector' used to get event keys from the underlying socket.\n */\nprivate Selector selector;\n/**\n * The Draft of the WebSocket protocol the Server is adhering to.\n */\nprivate List<Draft> drafts;\n\nprivate Thread selectorthread;\n\nprivate final AtomicBoolean isclosed = new AtomicBoolean( false );\n\nprivate List<WebSocketWorker> decoders;\n\nprivate List<WebSocketImpl> iqueue;\nprivate BlockingQueue<ByteBuffer> buffers;\nprivate int queueinvokes = 0;\nprivate final AtomicInteger queuesize = new AtomicInteger( 0 );\n\nprivate WebSocketServerFactory wsf = new DefaultWebSocketServerFactory();\n\n/**\n * Creates a WebSocketServer that will attempt to\n * listen on port <var>WebSocket.DEFAULT_PORT</var>.\n * \n * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here\n */\npublic WebSocketServer()  {\n    this( new InetSocketAddress( WebSocket.DEFAULT_PORT ), DECODERS, null );\n}\n\n/**\n * Creates a WebSocketServer that will attempt to bind/listen on the given <var>address</var>.\n * \n * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here\n * @param address The address to listen to\n */\npublic WebSocketServer( InetSocketAddress address ) {\n    this( address, DECODERS, null );\n}\n\n/**\n * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here\n * @param address\n *            The address (host:port) this server should listen on.\n * @param decodercount\n *            The number of {@link WebSocketWorker}s that will be used to process the incoming network data. By default this will be <code>Runtime.getRuntime().availableProcessors()</code>\n */\npublic WebSocketServer( InetSocketAddress address , int decodercount ) {\n    this( address, decodercount, null );\n}\n\n/**\n * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here\n *\n * @param address\n *            The address (host:port) this server should listen on.\n * @param drafts\n *            The versions of the WebSocket protocol that this server\n *            instance should comply to. Clients that use an other protocol version will be rejected.\n *\n */\npublic WebSocketServer( InetSocketAddress address , List<Draft> drafts ) {\n    this( address, DECODERS, drafts );\n}\n\n/**\n * @see #WebSocketServer(InetSocketAddress, int, List, Collection) more details here\n *\n * @param address\n *            The address (host:port) this server should listen on.\n * @param decodercount\n *            The number of {@link WebSocketWorker}s that will be used to process the incoming network data. By default this will be <code>Runtime.getRuntime().availableProcessors()</code>\n * @param drafts\n *            The versions of the WebSocket protocol that this server\n *            instance should comply to. Clients that use an other protocol version will be rejected.\n\n */\npublic WebSocketServer( InetSocketAddress address , int decodercount , List<Draft> drafts ) {\n    this( address, decodercount, drafts, new HashSet<WebSocket>() );\n}\n\n/**\n * Creates a WebSocketServer that will attempt to bind/listen on the given <var>address</var>,\n * and comply with <tt>Draft</tt> version <var>draft</var>.\n * \n * @param address\n *            The address (host:port) this server should listen on.\n * @param decodercount\n *            The number of {@link WebSocketWorker}s that will be used to process the incoming network data. By default this will be <code>Runtime.getRuntime().availableProcessors()</code>\n * @param drafts\n *            The versions of the WebSocket protocol that this server\n *            instance should comply to. Clients that use an other protocol version will be rejected.\n * \n * @param connectionscontainer\n *            Allows to specify a collection that will be used to store the websockets in. <br>\n *            If you plan to often iterate through the currently connected websockets you may want to use a collection that does not require synchronization like a {@link CopyOnWriteArraySet}. In that case make sure that you overload {@link #removeConnection(WebSocket)} and {@link #addConnection(WebSocket)}.<br>\n *            By default a {@link HashSet} will be used.\n * \n * @see #removeConnection(WebSocket) for more control over syncronized operation\n * @see <a href=\"https://github.com/TooTallNate/Java-WebSocket/wiki/Drafts\" > more about drafts</a>\n */\npublic WebSocketServer( InetSocketAddress address , int decodercount , List<Draft> drafts , Collection<WebSocket> connectionscontainer ) {\n    if( address == null || decodercount < 1 || connectionscontainer == null ) {\n        throw new IllegalArgumentException( \"address and connectionscontainer must not be null and you need at least 1 decoder\" );\n    }\n\n    if( drafts == null )\n        this.drafts = Collections.emptyList();\n    else\n        this.drafts = drafts;\n\n    this.address = address;\n    this.connections = connectionscontainer;\n\n    iqueue = new LinkedList<WebSocketImpl>();\n\n    decoders = new ArrayList<WebSocketWorker>( decodercount );\n    buffers = new LinkedBlockingQueue<ByteBuffer>();\n    for( int i = 0 ; i < decodercount ; i++ ) {\n        WebSocketWorker ex = new WebSocketWorker();\n        decoders.add( ex );\n        ex.start();\n    }\n}\n\n/**\n * Starts the server selectorthread that binds to the currently set port number and\n * listeners for WebSocket connection requests. Creates a fixed thread pool with the size {@link WebSocketServer#DECODERS}<br>\n * May only be called once.\n * \n * Alternatively you can call {@link WebSocketServer#run()} directly.\n * \n * @throws IllegalStateException Starting an instance again\n */\npublic void start() {\n    if( selectorthread != null )\n        throw new IllegalStateException( getClass().getName() + \" can only be started once.\" );\n    new Thread( this ).start();\n}\n\n/**\n * Closes all connected clients sockets, then closes the underlying\n * ServerSocketChannel, effectively killing the server socket selectorthread,\n * freeing the port the server was bound to and stops all internal workerthreads.\n * \n * If this method is called before the server is started it will never start.\n * \n * @param timeout\n *            Specifies how many milliseconds the overall close handshaking may take altogether before the connections are closed without proper close handshaking.<br>\n * \n * @throws InterruptedException Interrupt\n */\npublic void stop( int timeout ) throws InterruptedException {\n    if( !isclosed.compareAndSet( false, true ) ) { // this also makes sure that no further connections will be added to this.connections\n        return;\n    }\n\n    List<WebSocket> socketsToClose;\n\n    // copy the connections in a list (prevent callback deadlocks)\n    synchronized ( connections ) {\n        socketsToClose = new ArrayList<WebSocket>( connections );\n    }\n\n    for( WebSocket ws : socketsToClose ) {\n        ws.close( CloseFrame.GOING_AWAY );\n    }\n\n    wsf.close();\n\n    synchronized ( this ) {\n        if( selectorthread != null && selectorthread != Thread.currentThread() ) {\n            selectorthread.interrupt();\n            selector.wakeup();\n            selectorthread.join( timeout );\n        }\n    }\n}\npublic void stop() throws IOException , InterruptedException {\n    stop( 0 );\n}\n\n/**\n * Returns a WebSocket[] of currently connected clients.\n * Its iterators will be failfast and its not judicious\n * to modify it.\n * \n * @return The currently connected clients.\n */\npublic Collection<WebSocket> connections() {\n    return this.connections;\n}\n\npublic InetSocketAddress getAddress() {\n    return this.address;\n}\n\n/**\n * Gets the port number that this server listens on.\n * \n * @return The port number.\n */\npublic int getPort() {\n    int port = getAddress().getPort();\n    if( port == 0 && server != null ) {\n        port = server.socket().getLocalPort();\n    }\n    return port;\n}\n\npublic List<Draft> getDraft() {\n    return Collections.unmodifiableList( drafts );\n}\n\n// Runnable IMPLEMENTATION /////////////////////////////////////////////////\npublic void run() {\n    synchronized ( this ) {\n        if( selectorthread != null )\n            throw new IllegalStateException( getClass().getName() + \" can only be started once.\" );\n        selectorthread = Thread.currentThread();\n        if( isclosed.get() ) {\n            return;\n        }\n    }\n    selectorthread.setName( \"WebsocketSelector\" + selectorthread.getId() );\n    try {\n        server = ServerSocketChannel.open();\n        server.configureBlocking( false );\n        ServerSocket socket = server.socket();\n        socket.setReceiveBufferSize( WebSocketImpl.RCVBUF );\n        socket.bind( address );\n        selector = Selector.open();\n        server.register( selector, server.validOps() );\n        onStart();\n    } catch ( IOException ex ) {\n        handleFatal( null, ex );\n        return;\n    }\n    try {\n        while ( !selectorthread.isInterrupted() ) {\n            SelectionKey key = null;\n            WebSocketImpl conn = null;\n            try {\n                selector.select();\n                Set<SelectionKey> keys = selector.selectedKeys();\n                Iterator<SelectionKey> i = keys.iterator();\n\n                while ( i.hasNext() ) {\n                    key = i.next();\n                    conn = null;\n\n                    if( !key.isValid() ) {\n                        // Object o = key.attachment();\n                        continue;\n                    }\n\n                    if( key.isAcceptable() ) {\n                        if( !onConnect( key ) ) {\n                            key.cancel();\n                            continue;\n                        }\n\n                        SocketChannel channel = server.accept();\n                        if(channel==null){\n                            continue;\n                        }\n                        channel.configureBlocking( false );\n                        Socket socket = channel.socket();\n                        socket.setTcpNoDelay( true );\n                        WebSocketImpl w = wsf.createWebSocket( this, drafts, socket );\n                        w.key = channel.register( selector, SelectionKey.OP_READ, w );\n                        try {\n                            w.channel = wsf.wrapChannel( channel, w.key );\n                            i.remove();\n                            allocateBuffers( w );\n                            continue;\n                        } catch (IOException ex) {\n                            if( w.key != null )\n                                w.key.cancel();\n\n                            handleIOException( w.key, null, ex );\n                        }\n                        continue;\n                    }\n\n                    if( key.isReadable() ) {\n                        conn = (WebSocketImpl) key.attachment();\n                        ByteBuffer buf = takeBuffer();\n                        if(conn.channel == null){\n                            if( key != null )\n                                key.cancel();\n\n                            handleIOException( key, conn, new IOException() );\n                            continue;\n                        }\n                        try {\n                            if( SocketChannelIOHelper.read( buf, conn, conn.channel ) ) {\n                                if( buf.hasRemaining() ) {\n                                    conn.inQueue.put( buf );\n                                    queue( conn );\n                                    i.remove();\n                                    if( conn.channel instanceof WrappedByteChannel ) {\n                                        if( ( (WrappedByteChannel) conn.channel ).isNeedRead() ) {\n                                            iqueue.add( conn );\n                                        }\n                                    }\n                                } else\n                                    pushBuffer( buf );\n                            } else {\n                                pushBuffer( buf );\n                            }\n                        } catch ( IOException e ) {\n                            pushBuffer( buf );\n                            throw e;\n                        }\n                    }\n                    if( key.isWritable() ) {\n                        conn = (WebSocketImpl) key.attachment();\n                        if( SocketChannelIOHelper.batch( conn, conn.channel ) ) {\n                            if( key.isValid() )\n                                key.interestOps( SelectionKey.OP_READ );\n                        }\n                    }\n                }\n                while ( !iqueue.isEmpty() ) {\n                    conn = iqueue.remove( 0 );\n                    WrappedByteChannel c = ( (WrappedByteChannel) conn.channel );\n                    ByteBuffer buf = takeBuffer();\n                    try {\n                        if( SocketChannelIOHelper.readMore( buf, conn, c ) )\n                            iqueue.add( conn );\n                        if( buf.hasRemaining() ) {\n                            conn.inQueue.put( buf );\n                            queue( conn );\n                        } else {\n                            pushBuffer( buf );\n                        }\n                    } catch ( IOException e ) {\n                        pushBuffer( buf );\n                        throw e;\n                    }\n\n                }\n            } catch ( CancelledKeyException e ) {\n                // an other thread may cancel the key\n            } catch ( ClosedByInterruptException e ) {\n                return; // do the same stuff as when InterruptedException is thrown\n            } catch ( IOException ex ) {\n                if( key != null )\n                    key.cancel();\n                handleIOException( key, conn, ex );\n            } catch ( InterruptedException e ) {\n                return;// FIXME controlled shutdown (e.g. take care of buffermanagement)\n            }\n        }\n\n    } catch ( RuntimeException e ) {\n        // should hopefully never occur\n        handleFatal( null, e );\n    } finally {\n        if( decoders != null ) {\n            for( WebSocketWorker w : decoders ) {\n                w.interrupt();\n            }\n        }\n        if( selector != null ) {\n            try {\n                selector.close();\n            } catch ( IOException e ) {\n                onError( null, e );\n            }\n        }\n        if( server != null ) {\n            try {\n                server.close();\n            } catch ( IOException e ) {\n                onError( null, e );\n            }\n        }\n    }\n}\nprotected void allocateBuffers( WebSocket c ) throws InterruptedException {\n    if( queuesize.get() >= 2 * decoders.size() + 1 ) {\n        return;\n    }\n    queuesize.incrementAndGet();\n    buffers.put( createBuffer() );\n}\n\nprotected void releaseBuffers( WebSocket c ) throws InterruptedException {\n    // queuesize.decrementAndGet();\n    // takeBuffer();\n}\n\npublic ByteBuffer createBuffer() {\n    return ByteBuffer.allocate( WebSocketImpl.RCVBUF );\n}\n\nprivate void queue( WebSocketImpl ws ) throws InterruptedException {\n    if( ws.workerThread == null ) {\n        ws.workerThread = decoders.get( queueinvokes % decoders.size() );\n        queueinvokes++;\n    }\n    ws.workerThread.put( ws );\n}\n\nprivate ByteBuffer takeBuffer() throws InterruptedException {\n    return buffers.take();\n}\n\nprivate void pushBuffer( ByteBuffer buf ) throws InterruptedException {\n    if( buffers.size() > queuesize.intValue() )\n        return;\n    buffers.put( buf );\n}\n\nprivate void handleIOException( SelectionKey key, WebSocket conn, IOException ex ) {\n    // onWebsocketError( conn, ex );// conn may be null here\n    if( conn != null ) {\n        conn.closeConnection( CloseFrame.ABNORMAL_CLOSE, ex.getMessage() );\n    } else if( key != null ) {\n        SelectableChannel channel = key.channel();\n        if( channel != null && channel.isOpen() ) { // this could be the case if the IOException ex is a SSLException\n            try {\n                channel.close();\n            } catch ( IOException e ) {\n                // there is nothing that must be done here\n            }\n            if( WebSocketImpl.DEBUG )\n                System.out.println(\"Connection closed because of \" + ex);\n        }\n    }\n}\n\nprivate void handleFatal( WebSocket conn, Exception e ) {\n    onError( conn, e );\n    try {\n        stop();\n    } catch ( IOException e1 ) {\n        onError( null, e1 );\n    } catch ( InterruptedException e1 ) {\n        Thread.currentThread().interrupt();\n        onError( null, e1 );\n    }\n}\n\n/**\n * Gets the XML string that should be returned if a client requests a Flash\n * security policy.\n * \n * The default implementation allows access from all remote domains, but\n * only on the port that this WebSocketServer is listening on.\n * \n * This is specifically implemented for gitime's WebSocket client for Flash:\n * http://github.com/gimite/web-socket-js\n * \n * @return An XML String that comforms to Flash's security policy. You MUST\n *         not include the null char at the end, it is appended automatically.\n */\nprotected String getFlashSecurityPolicy() {\n    return \"<cross-domain-policy><allow-access-from domain=\\\"*\\\" to-ports=\\\"\" + getPort() + \"\\\" /></cross-domain-policy>\";\n}\n\n@Override\npublic final void onWebsocketMessage( WebSocket conn, String message ) {\n    onMessage( conn, message );\n}\n\n@Override\n@Deprecated\npublic/*final*/void onWebsocketMessageFragment( WebSocket conn, Framedata frame ) {// onFragment should be overloaded instead\n    onFragment( conn, frame );\n}\n\n@Override\npublic final void onWebsocketMessage( WebSocket conn, ByteBuffer blob ) {\n    onMessage( conn, blob );\n}\n\n@Override\npublic final void onWebsocketOpen( WebSocket conn, Handshakedata handshake ) {\n    if( addConnection( conn ) ) {\n        onOpen( conn, (ClientHandshake) handshake );\n    }\n}\n\n@Override\npublic final void onWebsocketClose( WebSocket conn, int code, String reason, boolean remote ) {\n    selector.wakeup();\n    try {\n        if( removeConnection( conn ) ) {\n            onClose( conn, code, reason, remote );\n        }\n    } finally {\n        try {\n            releaseBuffers( conn );\n        } catch ( InterruptedException e ) {\n            Thread.currentThread().interrupt();\n        }\n    }\n\n}\n\n/**\n * This method performs remove operations on the connection and therefore also gives control over whether the operation shall be synchronized\n * <p>\n * {@link #WebSocketServer(InetSocketAddress, int, List, Collection)} allows to specify a collection which will be used to store current connections in.<br>\n * Depending on the type on the connection, modifications of that collection may have to be synchronized.\n * @param ws The Webscoket connection which should be removed\n * @return Removing connection successful\n */\nprotected boolean removeConnection( WebSocket ws ) {\n    boolean removed;\n    synchronized ( connections ) {\n        removed = this.connections.remove( ws );\n        assert ( removed );\n    }\n    if( isclosed.get() && connections.size() == 0 ) {\n        selectorthread.interrupt();\n    }\n    return removed;\n}\n@Override\npublic ServerHandshakeBuilder onWebsocketHandshakeReceivedAsServer( WebSocket conn, Draft draft, ClientHandshake request ) throws InvalidDataException {\n    return super.onWebsocketHandshakeReceivedAsServer( conn, draft, request );\n}\n\n/**\n * @see #removeConnection(WebSocket)\n * @param ws the Webscoket connection which should be added\n * @return Adding connection successful\n */\nprotected boolean addConnection( WebSocket ws ) {\n    if( !isclosed.get() ) {\n        synchronized ( connections ) {\n            boolean succ = this.connections.add( ws );\n            assert ( succ );\n            return succ;\n        }\n    } else {\n        // This case will happen when a new connection gets ready while the server is already stopping.\n        ws.close( CloseFrame.GOING_AWAY );\n        return true;// for consistency sake we will make sure that both onOpen will be called\n    }\n}\n\n@Override\npublic final void onWebsocketError( WebSocket conn, Exception ex ) {\n    onError( conn, ex );\n}\n\n@Override\npublic final void onWriteDemand( WebSocket w ) {\n    WebSocketImpl conn = (WebSocketImpl) w;\n    try {\n        conn.key.interestOps( SelectionKey.OP_READ | SelectionKey.OP_WRITE );\n    } catch ( CancelledKeyException e ) {\n        // the thread which cancels key is responsible for possible cleanup\n        conn.outQueue.clear();\n    }\n    selector.wakeup();\n}\n\n@Override\npublic void onWebsocketCloseInitiated( WebSocket conn, int code, String reason ) {\n    onCloseInitiated( conn, code, reason );\n}\n\n@Override\npublic void onWebsocketClosing( WebSocket conn, int code, String reason, boolean remote ) {\n    onClosing( conn, code, reason, remote );\n\n}\n\npublic void onCloseInitiated( WebSocket conn, int code, String reason ) {\n}\n\npublic void onClosing( WebSocket conn, int code, String reason, boolean remote ) {\n\n}\n\npublic final void setWebSocketFactory( WebSocketServerFactory wsf ) {\n    this.wsf = wsf;\n}\n\npublic final WebSocketFactory getWebSocketFactory() {\n    return wsf;\n}\n\n/**\n * Returns whether a new connection shall be accepted or not.<br>\n * Therefore method is well suited to implement some kind of connection limitation.<br>\n * \n * @see #onOpen(WebSocket, ClientHandshake)\n     * @see #onWebsocketHandshakeReceivedAsServer(WebSocket, Draft, ClientHandshake)\n * @param key the SelectionKey for the new connection\n * @return Can this new connection be accepted\n **/\nprotected boolean onConnect( SelectionKey key ) {\n    //FIXME\n    return true;\n}\n\n/**\n * Getter to return the socket used by this specific connection\n * @param conn The specific connection\n * @return The socket used by this connection\n */\nprivate Socket getSocket( WebSocket conn ) {\n    WebSocketImpl impl = (WebSocketImpl) conn;\n    return ( (SocketChannel) impl.key.channel() ).socket();\n}\n\n@Override\npublic InetSocketAddress getLocalSocketAddress( WebSocket conn ) {\n    return (InetSocketAddress) getSocket( conn ).getLocalSocketAddress();\n}\n\n@Override\npublic InetSocketAddress getRemoteSocketAddress( WebSocket conn ) {\n    return (InetSocketAddress) getSocket( conn ).getRemoteSocketAddress();\n}\n\n/** Called after an opening handshake has been performed and the given websocket is ready to be written on.\n * @param conn The <tt>WebSocket</tt> instance this event is occuring on.\n * @param handshake The handshake of the websocket instance\n */\npublic abstract void onOpen( WebSocket conn, ClientHandshake handshake );\n/**\n * Called after the websocket connection has been closed.\n *\n * @param conn The <tt>WebSocket</tt> instance this event is occuring on.\n * @param code\n *            The codes can be looked up here: {@link CloseFrame}\n * @param reason\n *            Additional information string\n * @param remote\n *            Returns whether or not the closing of the connection was initiated by the remote host.\n **/\npublic abstract void onClose( WebSocket conn, int code, String reason, boolean remote );\n/**\n * Callback for string messages received from the remote host\n * \n * @see #onMessage(WebSocket, ByteBuffer)\n * @param conn The <tt>WebSocket</tt> instance this event is occuring on.\n * @param message The UTF-8 decoded message that was received.\n **/\npublic abstract void onMessage( WebSocket conn, String message );\n/**\n * Called when errors occurs. If an error causes the websocket connection to fail {@link #onClose(WebSocket, int, String, boolean)} will be called additionally.<br>\n * This method will be called primarily because of IO or protocol errors.<br>\n * If the given exception is an RuntimeException that probably means that you encountered a bug.<br>\n * \n * @param conn Can be null if there error does not belong to one specific websocket. For example if the servers port could not be bound.\n * @param ex The exception causing this error\n **/\npublic abstract void onError( WebSocket conn, Exception ex );\n\n/**\n * Called when the server started up successfully.\n *\n * If any error occured, onError is called instead.\n */\npublic abstract void onStart();\n\n/**\n * Callback for binary messages received from the remote host\n * \n * @see #onMessage(WebSocket, ByteBuffer)\n *\n *  @param conn\n *            The <tt>WebSocket</tt> instance this event is occurring on.\n * @param message\n *            The binary message that was received.\n **/\npublic void onMessage( WebSocket conn, ByteBuffer message ) {\n}\n\n/**\n * Callback for fragmented frames\n * @see WebSocket#sendFragmentedFrame(org.java_websocket.framing.Framedata.Opcode, ByteBuffer, boolean)\n * @param conn\n *            The <tt>WebSocket</tt> instance this event is occurring on.\n * @param fragment The fragmented frame\n */\npublic void onFragment( WebSocket conn, Framedata fragment ) {\n}\n\n/**\n * This class is used to process incoming data\n */\npublic class WebSocketWorker extends Thread {\n\n    private BlockingQueue<WebSocketImpl> iqueue;\n\n    public WebSocketWorker() {\n        iqueue = new LinkedBlockingQueue<WebSocketImpl>();\n        setName( \"WebSocketWorker-\" + getId() );\n        setUncaughtExceptionHandler( new UncaughtExceptionHandler() {\n            @Override\n            public void uncaughtException( Thread t, Throwable e ) {\n                System.err.print(\"Uncaught exception in thread \\\"\"\n                        + t.getName() + \"\\\":\");\n                e.printStackTrace(System.err);\n            }\n        } );\n    }\n\n    public void put( WebSocketImpl ws ) throws InterruptedException {\n        iqueue.put( ws );\n    }\n\n    @Override\n    public void run() {\n        WebSocketImpl ws = null;\n        try {\n            while ( true ) {\n                ByteBuffer buf;\n                ws = iqueue.take();\n                buf = ws.inQueue.poll();\n                assert ( buf != null );\n                try {\n                    ws.decode( buf );\n                } catch(Exception e){\n                    System.err.println(\"Error while reading from remote connection: \" + e);\n                    e.printStackTrace();\n                }\n\n                finally {\n                    pushBuffer( buf );\n                }\n            }\n        } catch ( InterruptedException e ) {\n        } catch ( RuntimeException e ) {\n            handleFatal( ws, e );\n        }\n    }\n}\n\n/**\n * Interface to encapsulate the required methods for a websocket factory\n */\npublic interface WebSocketServerFactory extends WebSocketFactory {\n    @Override\n    public WebSocketImpl createWebSocket( WebSocketAdapter a, Draft d, Socket s );\n\n    /**\n     * Create a new Websocket with the provided listener, drafts and socket\n     * @param a The Listener for the WebsocketImpl\n     * @param drafts The drafts which should be used\n     * @param s The socket which should be used\n     * @return A WebsocketImpl\n     */\n    public WebSocketImpl createWebSocket( WebSocketAdapter a, List<Draft> drafts, Socket s );\n\n    /**\n     * Allows to wrap the Socketchannel( key.channel() ) to insert a protocol layer( like ssl or proxy authentication) beyond the ws layer.\n     *\n     * @param channel The SocketChannel to wrap\n     * @param key a SelectionKey of an open SocketChannel.\n     * @return The channel on which the read and write operations will be performed.<br>\n     * @throws IOException may be thrown while writing on the channel\n     */\n    public ByteChannel wrapChannel( SocketChannel channel, SelectionKey key ) throws IOException;\n\n    /**\n     * Allows to shutdown the websocket factory for a clean shutdown\n     */\n    public void close();\n}\n\n}\n```\nGreetings\nmarci4. added with #462. https://github.com/TooTallNate/Java-WebSocket/wiki/Enable-TCP_NODELAY. Hello @becast,\nthx for your input :)\nI plan to support extensions in a more general way, so you don't have to copy changes for Draft_17 over to your other extensions.\nBut when the background stuff is done, I would like to take a look at your approach for the PerMessage-Deflate Extension.\nGreetings\nmarci4. Current development status can be found here. infrastructure is done. Looking for a specific implementation for the per-message-deflate extension which is  not against any licence etc. Extension system in place. \nImplementation of different extensions for future release.. @cjgriscom could you please open a new issue for this? Thank you!\nGreetings\nmarci4. Hello @zhoulifu \nwhat do you mean with bad?\nGreetings\nmarci4. Hello @zhoulifu,\nno problem. Just was thinking wtf :D\nAre you using the latest version 1.3.3?\nIf so, could you please provide an example application for me,, because right now I cannot reproduce this issue on my test enviroment.\nGreetings\nmarci4\n. Hello @zhoulifu \ncould you please activate the debug printouts with \nWebSocketImpl.DEBUG = true;\nCould you tell me something about the client you use to connect to the server?\nGreetings\nmarci4. Hello @zhoulifu,\nso as I understand you correctly you use the client provided by this lib.\nCould you then try if connectBlocking() and closeBlocking() \"fixes\" the issue?\nJust a heads up, I am going on a little trip for a few days later today. Won't be able to reply then.\nGreetings\nmarci4. Hello @zhoulifu,\nthx for looking into this issue a bit more :)\nThis issue sometimes happens with your example, but it looks like your patch fixes it.\nGoing to test against side affects now ;)\nGreetings\nmarci4. It is me again.\nSoo all the test cases pass.\nLooks like it isn't just an android problem, but it is more likely to occur since phones have slower cpus.\nCould you please open a pull request for your fix?\nGreetings\nmarci4. Well it still would not solve different clients, and I think it is an unexpected behavior that a non blocking method may block.\nGonna check when readyState can change and if we just include an additional check for this case.\nGreetings\nmarci4. Yes I like it this way more.\nReadystate is changed to open just during handshake so it should not be a problem.\nGreetings\nmarci4. Hello @Irahe,\nI just tested your problem with my wss which I use in production and the issue mentioned does not occur for me.\nGoing to look into your sample project.\nTil then, could you please tell me which clients you use? (so which browser)\nGreetings\nmarci4\n. Hello @Irahe,\nI looked into your project and for me it works fine.\nThe problem may be your self signed certificate.\nDid you go to https://localhost:8283 and told your browser to trust the certificate? (wss server has to run)\nGreetings\nmarci4\n. Hello @Irahe,\nthis is interesting. This problem occurs for me as well in firefox, but not in chrome.\nIt is also limited to localhost, since I was able to connect to my production wss.\nJust to clear some things up, your client is firefox.\nThe  websocket.org website just provides an easy interface for the javascript implementation below.\nGonna test it against other implementations of websocket servers and gonna keep you updated.\nGreetings\nmarci4. Ok here is my current status:\nSSC = Self signed certificate\nLE = Let's Encrypt\nTest case echo.websocket.org SSC:\n- Internet Explorer 11.1066 ERROR Security error\n- Firefox 53.0 ERROR Sometimes doesn't work (like 75% are fine)\n- Edge 38.14393 ERROR Security error\n- Chrome 59.0.3071.29 PASS \nTest case local file SSC:\n- Internet Explorer 11.1066 PASS ALWAYS\n- Firefox 53.0 ERROR Sometimes doesn't work (like 75% are fine)\n- Edge 38.14393 PASS Cannot get the browser to trust the certificate\n- Chrome 59.0.3071.29 PASS\nTest case local file LE:\n- Internet Explorer 11.1066 PASS (After not checking for revoke server)\n- Firefox 53.0 ERROR Sometimes doesn't work (like 95% are fine)\n- Edge 38.14393 PASS (After not checking for revoke server)\n- Chrome 59.0.3071.29 PASS\nHaving TcpNoDelay set to false!\nI also was able to connect to your server without problems.\nDo you really need TCP_NODELAY set to true?\nGreetings\nmarci4. Hello @Irahe,\nas mentioned above, do you really need tcpNoDelay set?\nIt does cause additional stress for the cpu and network, and I think it could be the main reason for the problems.\nIt is the only difference between your and my server.\nGreetings\nmarci4\n. Could be related to #385 and #160. It actually is related to #385.\nCheck out http://stackoverflow.com/a/30760134 for a more detail explanation.\nTL;DR java doesn't support TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 and firefox requests this.\nI quess I gonna patch this directly.\nGreetings\nmarci4. Hello @Irahe,\nyou can build the jar directly from the sources.\n1.3.4 will not be around for at least the next 2 weeks probably a bit more. (Don't wanna go be at version 1.33.7 at the end of the year ;) )\nGreetings\nmarci4. Hello @Irahe,\nno I already merged them into this repository.\nhahaha probably not ;) . Happy to hear that! \nClosing issue.\nGreetings\nmarci4. Hello @Gillardo,\nyes it is.\nCheck out the example code in Chatserver.java\njava\n     /**\n     * Sends <var>text</var> to all currently connected WebSocket clients.\n     * \n     * @param text\n     *            The String to send across the network.\n     * @throws InterruptedException\n     *             When socket related I/O errors occur.\n     */\n    public void sendToAll( String text ) {\n        Collection<WebSocket> con = connections();\n        synchronized ( con ) {\n            for( WebSocket c : con ) {\n                c.send( text );\n            }\n        }\n    }\nGreetings\nmarci4. Hello @bentzn,\neven though I tested it with a text fragment, that is the way to go.\nSo what is your current problem?\nGreetings\nmarci4. Hello @bentzn,\nthere is no method onMessage(ByteBuffer buf) for the client, the method is onFragment( Framedata fragment );\nGreetings\nmarci4. Issue solved.\nClosing issue.\nGreetings\nmarci4. Hello @maybea,\nthe best way to detect a lost connection is to ping the client and check if it succeeds.\nE.g.\njava\npublic void sendAllPing() {\n    FramedataImpl1 frame = new FramedataImpl1(Opcode.PING);\n    frame.setFin(true);\n    Collection<WebSocket> con = connections();\n    synchronized ( con ) {\n        for( WebSocket c : con ) {\n            c.sendFrame( frame );\n        }\n    }\n}\nEven tough, yes I see the need to improve lost connection detection.\nGreetings\nmarci4. Looking for some input here!\nI implemented a check with a timer.\nIt sends pings in a definied interval (default: 30s)\nIf there was an error sending this ping, the websocket gets closed\nYou can deactivate this check setting the interval below 1.\nCheck out the code here \nDid I miss something?\nShould I add anything?\nGreetings\nmarci4. Thx for your input @zhoulifu :)\nThis will add a bit more pressure but I think it is fine, especially since you have the possibility to turn it off.\nGreetings\nmarci4. Ok I added a check for the pong response.\nDefault check interval is 30 seconds, is this to often?\nCould you please check if for you this is working as well?\nGreetings\nmarci4. Hello @zhoulifu,\nthx for your feedback.\nGonna leave this issue open and not yet merch any changes. \nJust to give other users time to give feedback as well!\nGreetings\nmarci4. Merged changes into master branch.\nChanged timeout check to 60 seconds.\nClosing issue.\nGreetings\nmarci4. wiki article https://github.com/TooTallNate/Java-WebSocket/wiki/Lost-connection-detection. Lost connection is not yet released as a jar. It will come with the version 1.3.4 (no release date planned sorry)\nYou can also use the master branch which already includes the lost connection detection!\nDo you have any idea how I can extend the wiki?\nGreetings\nmarci4. Hello @qhchen2,\nI am gonna extend the wiki a bit more then (Sorry, for me these things are pretty clear ;) )\nLet me explain some stuff for you!\nA ping is specified by https://tools.ietf.org/html/rfc6455#section-5.5.2 \nA pong is specified by https://tools.ietf.org/html/rfc6455#section-5.5.3\nIf an endpoint recieves a ping frame it must respond with a pong frame. That is the basic idea behind this feature!\nIf you are using a valid endpoint implementing the spec correctly (what you can assume from modern browsers), you don't have to do anything (most modern browser don't even show ping/pong frames).\nGreetings\nmarci4\n. Hello @qhchen2,\nthe code is part of my connection lost detection!\nThe master branch is always a representation of the current development status!\nGreetings\nmarci4. Hello @ao,\njust a heads up, I don't know the specification for a JWT Authentication Header so you have to check for the correct header yourself please.\nApart from this, as far as I understand, what you need, you did it the right way!\nYou can add custom headers to your client handshake via this constructor.\nThe resulting handshake would be in this case:\nGET / HTTP/1.1\nAuthorization:jwt: SOME_STRING_AS_A_JWT\nConnection: Upgrade\nHost: localhost:8887\nSec-WebSocket-Key: AoKNz3DTFVjDKP8sI37/QQ==\nSec-WebSocket-Version: 13\nUpgrade: websocket\nGreetings\nmarci4\n. Not sure what I fu**ed up in the release. \nGonna read up a bit more and hopefully fix it!\nGreetings\nmarci4. Since I got access to the maven central repository, I hope that this issue solves itself with the next release!\nGreetings\nmarci4. Snapshot for 1.3.4 is live with javadocs :)\nClosing this issue!\nGreetings\nmarci4. Hello @ao,\nyes you are correct. WebSocketFactory was removed a while back!\nThe correct way for a client is right now \njava\nSSLContext sslContext = null;\nsslContext = SSLContext.getInstance( \"TLS\" );\nsslContext.init( kmf.getKeyManagers(), tmf.getTrustManagers(), null );\n// sslContext.init( null, null, null ); // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\nSSLSocketFactory factory = sslContext.getSocketFactory();// (SSLSocketFactory) SSLSocketFactory.getDefault();\nchatclient.setSocket( factory.createSocket() );\nFor a full example, check out https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/SSLClientExample.java\nGreetings\nmarci4. Hello @Irahe,\nwhen I am trying to connect to your address I first of all get a certificate error (in chrome as well as in firefox) so you should connect to wss://:8283/.\nSecond problem is that edge is not able to connect to the revokation server..\nThis could be to the following reasons:\n\nhttp://letsencrypt.status.io/ LetsEncrypt having some stability issues\nhttps://community.letsencrypt.org/t/identrust-com-crl-server-not-responding-connection-error-in-edge-browser/21697 Issues connection to the crl server of LetsEncrypt\nhttps://community.letsencrypt.org/t/windows-live-mail-revocation-warning/26310 LetsEncrypt certificate and edge/ie not working together.\n\nGreetings\nmarci4. Upps sorry :)\nOk then it is probably just LetsEncrypt trying to fix their issues!\nGreetings\nmarci4\nEDIT:\nIt really looks like LetsEncrypt is having problems! \nWas able to connect to my production wss once, then a few times not, and then again!. Hey @Irahe \ngonna look into this tomorrow!\nProbably some cipher suites...\nGreetings\nmarci4. Hello @Irahe,\nsorry for getting back to you so late.\nWas working on a fix for #424 the whole day (and I think it is fixed YEAH :D )\nCould you please tell me what exact version of java you are using?\nUnder windows, I was not able to reproduce it (with the new SSLSocketChannel).\nGonna look into this still more! Just wanted to give you a status update.\nGreetings\nmarci4\n. hey,\nsorry for the slow update.\nWasted my whole day on this issue..\nTo be honest I have no clue why Edge is fucking so bad with me .\nEven with my production wss it is not working any more (haven't patched that..)\nFor  now my tip is just not to use Edge/IE. Hopefully this issue resolves itself with the new SocketChannel...\nGreetings\nmarci4. Hello @Irahe ,\nI pushed some changes with #488.\nThis works fine for my production wss now! (Still using openjdk-7 though)\nGreetings\nmarci4. Hello @Irahe \ntrust me, I am really sorry right now (and pissed for that matter ;) )\nLets try the following (like #466)\njava\nciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\");\nciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\");\nciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\");\nciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\");\nciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\");\nciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\");\nciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\");\nGreetings\nmarci4. To be honest I think we do have somewhere else a problem (apart from the mentioned SSLException which is caused by the new SocketChannel, please revert this locally for you as well).\nI feel that the selector is not correctly updating/blocking or something like that...\nThat would also explain why some ciphers often work and sometimes not (timing....)\nApart from this, it is killing me right now!\nWhat you can try is to activate the java debug output (with -Djavax.net.debug=all) and check what cipher is used in your case!\nI will try to locate this issue with the selector!\nGreetings\nmarci4. Hello @Irahe,\nyes try to remove this specific cipher suite.\nLets hope we get around this issue....\nGreetings\nmarci4. Hello @Irahe \nhappy to hear that you managed to solve this issue on your own!\nAs mentioned earlier please dont use the new SocketChannel, there is still a bug in it (Was not able to locate it...)\nI also added an easier way for removing specific cipher suites. \nPlease check out CustomSSLWebsocketServerFactory.\nGreetings\nmarci4. Help is always appreciated :)\nGreetings\nmarci4. Hello @rjbergTU,\nfirst of all thanks a lot for your input :) \nI have the following \"problems\" with your idea:\n- Does everybody need this? (Every websocket server keeping a map containing websocket clients keeping a map)\n- What are the best key/value classes? (Probably resulting into  so everybody has to cast their results)\n- Are custom implementations not more efficient/intuitive?\nGreetings\nmarci4\n. Concept and implementation for future release!. Hello Joyie,\nEverything mentioned here (Map or Object) can be implemented on a application level as well!\nThe question is what is the best approach for most of the users of this project!\nGreetings\nmarci4. This issue is implemented with #627.\nThanks a lot to @promatik for his contribution!\nGreetings\nmarci4. #424 . I will start the development for this shortly.\nThis will only be relevant for the WebSocketClient, a WebSocketServer has a way to do this already.\nGreetings\nmarci4\n. Will be an example/documentation only issue!\nCurrent setup is more then sufficient.\nGreetings\nmarci4. Reopen issue to allow custom headers for the server as well!. Hello @werner291,\nI am so sorry for not getting back to earlier.\nI simply forgot to reply...\nGetting to your question (disclaimer: I have not implemented it so I have to go through the code myself and understand it)\nFrom my understanding yes this is not thread-safe.\nI think the best way is to use an object to synchronize the 3 methods accessing the write method.\nHow high is your priority for this?\nGreetings\nmarci4. For future me!\nclass WebSocketImpl\nlet everything use send( Collection frames ) instead of sendFrame( Framedata framedata ) and synchronize there!. Implementation with #500 . Hello @dan335,\ncould you tell me what version you are using? Is it the 1.3.3 ?\nWhat are you using as a client?\nTo the exception itself:\nThis is an indication that the recieved frame is containing an invalid bit.\nRight now this lib is supporting no exception so the rsv should always be 0.\nSo this is a valid exception and should not be caught (it should not happen with a valid endpoint).\nGreetings\nmarci4\n. Hello @dan335,\nthis exception should just disconnect the specific user and not crash the server itself!\nThe problem is that according to the spec the server has to dc the client.\nIf a nonzero value is received and none of the negotiated extensions defines the meaning of such a nonzero value, the receiving endpoint MUST _Fail the WebSocket Connection_. (https://tools.ietf.org/html/rfc6455#section-5.2)\nSince we do not support the deflate extension yet, rsv should always be 0.\nGreetings\nmarci4. Hello @GregoryConrad,\nwhat is the version you are using?\nAre you using ssl?\nIs onOpen called at both ends?\nDoes your device lose connection? (A new feature to more easyly detect lost connection will be added with 1.3.4)\nGreetings\nmarci4\n. Hello @GregoryConrad,\nthx for your fast feedback!\nonClose is currently not correctly detected when a device looses internet connection (Java is not that smart in this case ;) )\nWith the upcoming release of 1.3.4 the lib will automatically send pings to the endpoints in a specific intervall and if no pong was recieved it assumes that the endpoint got disconnected!\nApart from this. Could you maybe activate the debug printouts with WebSocketImpl.DEBUG = true; and post the output?\nGreetings\nmarci4. Hello @tangze,\nplease open a new issue. Cannot keep track of old closed issues!\nBest regards,\nmarci4 . Hello @vikulin,\nfirst of all thank you for your input.\nActually most of the time the connection is actually cleaned up by the IOException (remote closed connection). This is for sure cleaning up the connection! \nApart from this conn.close() should also close the connection and clean everything up! (Tested it with replacing conn.sendPing() with conn.close( CloseFrame.ABNORMAL_CLOSE ); and cleaned it up as well)\nDo you have any situation when the connection is not cleaned up?\nGreetings\nmarci4\n. Hello @vikulin,\nWell that should not happen oO.\nI suppose you use Android. With which versions do you have this problem?\nAre you using wss? or normal ws?\nGreetings\nmarci4\n. Hello @vikulin,\ntested it with java 1.8.0_131 and its working...\nThe connection is getting cleaned up in the WebSocketServer onWebsocketClose() which is called by closeConnection().\nDo you have a simple test application where I can reproduce it for sure?\nTheoretically we could just use closeConnection() instead of close().\nGreetings\nmarci4. Well for me it is still very interesting why the selector is not waking up and we get no IOException in the runnable.... Well there are things which are out of my power e.g. when I have to rely on the IOException telling me that the remote endpoint was closed.\nNethertheless I would really like to understand why this is working in my development enviroment but not in yours! That is why I am asking for your code.\n. Well then the source code is not an option ;)\nDon't wanna make you a lot of work!\nLet's try this a different way!\nCould you send me an example handshake? (Client request and server response)\nWhat is your exact java version on the server?\nWhat is the Android version on the client side? What are you using on the client side to connect to the server?\nTo your question about InterruptedIOException: it extends from IOException so this is fine!\nThe easiest workaround right now is change the code you posted earlier startConnectionLostTimer() and replace conn.close( CloseFrame.ABNORMAL_CLOSE ); with conn.closeConnection( CloseFrame.ABNORMAL_CLOSE );\n. Hello @vikulin,\nI was still not able to reproduce your issue in my development enviroment!\nNethertheless I build you a new version of the jar in which I switched out the conn.close call with conn.closeConnection.\nhttps://www.dropbox.com/s/g46yhov8igq77es/java_websocket-1.3.5-SNAPSHOT.jar?dl=0\nGreetings\nmarci4. Never do a hotfix I quess!\nWell here is the fixed version which should not cause CurrentModificationException as well as deadlocks.\nhttps://www.dropbox.com/s/g46yhov8igq77es/java_websocket-1.3.5-SNAPSHOT.jar?dl=0\nSorry again :( \nGreetings\nmarci4. Bugfix merged.\nClosing issue!\nIf there are still problems, feel free to open this issue again!\nGreetings\nmarci4. Hello @javierpineros,\nyeah I changed the implementation a bit to make it easier for you as a developer!\nI created a class for every opcode, so you just have to use new PingFrame()\nSee https://static.javadoc.io/org.java-websocket/Java-WebSocket/1.3.4/index.html?org/java_websocket/framing/PingFrame.html\nI also added a sendPing() method.\nHope this helps you!\nGreetings\nmarci4. Issue is solved and no answer for over a month.\nClosing issue!\nGreetings\nmarci4. You can always directly download it from the maven repository.\nThis is way easier for me to maintain then everything else!\nLink for the current version:\nhttp://repo1.maven.org/maven2/org/java-websocket/Java-WebSocket/1.3.4/\nGreetings\nmarci4. Because most of the developer use building tools like maven or gradle and dont rely on the jar!. Hello @tuetschek,\nthx for your bug report!\nLooks like this is just an issue for linux.\nMerged a fix!\nClosing issue! \nGreetings\nmarci4\n. No problem. I know a linux path when I see it ;). Hello @ignaciomolina,\nthx for your pull request!\nGoing to merch it.\nGreetings \nmarci4. I do have university exams over the next 4 weeks so not really soon.\nApart from this. You can use this also with the current version\njava\nSSLContext sslContext = SSLContext.getInstance( \"TLS\" );\nsslContext.init( null, null, null ); // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\nSSLSocketFactory factory = sslContext.getSocketFactory();// (SSLSocketFactory) SSLSocketFactory.getDefault();\nchatclient.setSocket( factory.createSocket() );\nGreetings\nmarci4. Hello @ignaciomolina \nwhy have you changed the code?\nsocket is null when nobody used the setter (custom sslcontext)\nIf this is the case we just create a the default sslcontext  for wss or use the normal socket for ws.\nAnd if the setter is used before, nothing special happens.\nSo I think this is not needed.\nGreetings\nmarci4. Ahh ok, I see! thx again. Hello @greenrd,\nthx for your bug report.\nCould you provide some more additional infos?\n\nWhat version of the lib are you using?\nAre you using ws or wss?\nIn what enviroment does this happen? OS? Java version?\nDo you know more about the client? \n\nGreetings\nmarci4. This issue should be resolved with pull request #514.\nClosing the issue!\nGreetings\nmarci4. Hello @gomeskingsley,\nwell I have a simple test application but I think this may help you :)\nYou need to have a bks keystore for android and put it in your res.raw folder.\nAlso don't just use this peace of code! It is just for testing purposes!\n```java\nChatServer server = new ChatServer();\n// load up the key store\nString KEYPASSWORD = \"PASSWORD\";\ntry {\n    KeyStore keystore = KeyStore.getInstance(\"BKS\");\n    InputStream in = getResources().openRawResource(R.raw.keystore);\n    try {\n        keystore.load(in, KEYPASSWORD.toCharArray());\n    } finally {\n        in.close();\n    }\n    KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(\"X509\");\n    keyManagerFactory.init(keystore, KEYPASSWORD.toCharArray());\n    TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"X509\");\n    tmf.init(keystore);\nSSLContext sslContext = null;\nsslContext = SSLContext.getInstance(\"TLS\");\nsslContext.init(keyManagerFactory.getKeyManagers(), tmf.getTrustManagers(), null);\n\nserver.setWebSocketFactory(new DefaultSSLWebSocketServerFactory(sslContext));\n\n} catch (Exception e) {\n    Log.e(\"ChatServer\", e.getMessage());\n    throw new AssertionError(e);\n}\nserver.start();\n```\nGreetings\nmarci4. Hello @gomeskingsley,\nI am sorry. I thought you needed an example for a wss server not a wss client since you referenced the SSLServerExample.\n```java\nChatClient client = new ChatClient();\nString KEYPASSWORD = \"PASSWORD\";\ntry {\n    KeyStore keystore = KeyStore.getInstance(\"BKS\");\n    InputStream in = getResources().openRawResource(R.raw.keystore);\n    try {\n        keystore.load(in, KEYPASSWORD.toCharArray());\n    } finally {\n        in.close();\n    }\n    KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(\"X509\");\n    keyManagerFactory.init(keystore, KEYPASSWORD.toCharArray());\n    TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"X509\");\n    tmf.init(keystore);\nSSLContext sslContext = null;\nsslContext = SSLContext.getInstance(\"TLS\");\nsslContext.init(keyManagerFactory.getKeyManagers(), tmf.getTrustManagers(), null);\n//sslContext.init(null, null, null);\nSSLSocketFactory sslSocketFactory = sslContext.getSocketFactory();\nclient.setSocket(sslSocketFactory.createSocket());\n\n} catch (Exception e) {\n    Log.e(\"ChatClient\", e.getMessage());\n    throw new AssertionError(e);\n}\nLog.i(\"ChatClient\", \"Trying to connect\");\nclient.connect();\n```\nThe important part is client.setSocket(sslSocketFactory.createSocket());\nGreetings\nmarci4\n. Issue solved! \nClosing issue!\nGreetings\nmarci4. Hello @lvivtotoro,\nsorry I don't get what you are doing and what your issue is.\nWhat exactly are you doing?\nWhat type of websocket frame are you sending?\nAre you sure you recieve the frame? \nCould you also provide the log you recieve by setting WebSocketImpl.DEBUG = true; before you open the connection?\nGreetings\nmarci4. Are you also overwriting the method public void onMessage( ByteBuffer bytes ); ?\nThis is not abstract and that is why you dont have to implement it (most people dont need this use case)\nGreetings\nmarci4. There are two different methods. \nThe first one is onMessage(String) which is for receiving text frames.\nThe second one is  onMessage(ByteBuffer) which is for receiving byte frames.\nThe methods should be more clear. But there are in this project for years... Sorry!\nGreetings\nmarci4\n. Ok. Just wanted to make sure!\nWell. I just tried it (with a server and client) and it works for me!\nTested it also against the echo ws server from websocket.org\nSending a hello as binary to the server!\nopened connection\nsend frame: Framedata{ optcode:BINARY, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:5], payload:[72, 101, 108, 108, 111]}\nwrite(11): {\ufffd\ufffd\ufffd\ufffd~C\ufffd\ufffd\u0012/\ufffd}\nprocess(7): {\ufffd\u0005Hello}\nmatched frame: Framedata{ optcode:BINARY, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:5], payload:[72, 101, 108, 108, 111]}\nRecieved ByteBuffer: Hello\nGreetings\nmarci4. Everything looks fine here!\nWhat is your client doing then? And what is your client?\nGreetings\nmarci4. As you can see, your other endpoint is not sending any data!\nprocess(2): {\ufffd\\00}\nmatched frame: Framedata{ optcode:BINARY, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:0], payload:[]}\nI am sorry but I cant help you if the other endpoint is not sending any payload back... \nGreetings\nmarci4\n. Yeah that is right but the OTHER endpoint is not sending any payload in the binary frame!\nYou have probably a logical error in your code!\nGreetings\nmarci4. Let me try to explain this for you:\nYou have a client and a server\nIf you send binary data from the client to the server, you probably do something like:\njava\nclient.send(new byte[]{0, 0, 0, 0, -17, -65, -67, 101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 73, 85, 122, 73, 49, 78, 105, 73, 115, 73, 110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 110, 97, 87, 81, 105, 79, 106, 69, 48, 78, 84, 103, 120, 77, 83, 119, 105, 99, 50, 78, 118, 99, 71, 86, 122, 73, 106, 112, 98, 73, 110, 66, 121, 98, 50, 90, 112, 98, 71, 85, 54, 98, 87, 85, 105, 88, 83, 119, 105, 100, 87, 108, 107, 73, 106, 111, 48, 78, 84, 73, 51, 79, 83, 119, 105, 90, 88, 104, 119, 73, 106, 111, 120, 78, 68, 107, 53, 77, 122, 77, 48, 79, 84, 85, 53, 102, 81, 46, 75, 85, 71, 106, 118, 118, 109, 103, 108, 89, 69, 54, 51, 89, 118, 118, 48, 73, 74, 86, 66, 82, 68, 107, 117, 84, 84, 97, 54, 85, 74, 84, 103, 74, 88, 120, 80, 111, 74, 84, 118, 78, 103});\nThis creates a binary frame with the provided payload!\nYou can also create the frame on your own doing something like:\njava\nBinaryFrame frame = new BinaryFrame();\nframe.setPayload(ByteBuffer.wrap(new byte[]{0, 0, 0, 0, -17, -65, -67, 101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 73, 85, 122, 73, 49, 78, 105, 73, 115, 73, 110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 110, 97, 87, 81, 105, 79, 106, 69, 48, 78, 84, 103, 120, 77, 83, 119, 105, 99, 50, 78, 118, 99, 71, 86, 122, 73, 106, 112, 98, 73, 110, 66, 121, 98, 50, 90, 112, 98, 71, 85, 54, 98, 87, 85, 105, 88, 83, 119, 105, 100, 87, 108, 107, 73, 106, 111, 48, 78, 84, 73, 51, 79, 83, 119, 105, 90, 88, 104, 119, 73, 106, 111, 120, 78, 68, 107, 53, 77, 122, 77, 48, 79, 84, 85, 53, 102, 81, 46, 75, 85, 71, 106, 118, 118, 109, 103, 108, 89, 69, 54, 51, 89, 118, 118, 48, 73, 74, 86, 66, 82, 68, 107, 117, 84, 84, 97, 54, 85, 74, 84, 103, 74, 88, 120, 80, 111, 74, 84, 118, 78, 103}))\nc.sendFrame(frame);\nTo echo just the message back, you would do something like this on the server:\njava\n@Override\npublic void onMessage( WebSocket conn, ByteBuffer message ) {\n    conn.send(message);\n}\nWhat are you doing on your client and your server side?\nGreetings\nmarci4. Could you please provide your code?\nGreetings\nmarci4. Just a few things.\n\n\nByteBuffer.array() is optional (see https://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html#array()). You have to make sure that the underlying implementation actually implements it (Do this with ByteBuffer.hasArray())\n\n\nJust use this.send(buffer); instead of this.send(buffer.array());\n\n\nByteBuffer.get() is starting with the current position which may not be 0 (see https://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html#get()). Set your position or use ByteBuffer.get(<index>) or  ByteBuffer.array() (if it has an array) instead\n\n\nGreetings\nmarci4. this.send(buffer.array()) is doing nothing more thenthis.send(ByteBuffer.wrap(buffer.array()))\nI think the easiest is to just use ByteBuffer.array() (if it exists) if you want to have an array!. Added to development branch! Closing issue!. Hello @edasaki,\nWebSocket.send() is actually not sending the message right away. It is putting it into a queue (converting it to a ByteBuffer etc already).\nSo the possible cause for this increased delay could just be a gc call or a heap increase.\nRegarding if it is thread safe to send a message to the websocket, it is not right now with version 1.3.4. But it will be with 1.3.5 (see #491)\nHope this clears up your questions!\nGreetings\nmarci4\n. Hello @edasaki,\nthat could be theoretically happening. The write operation of a socket channel is returning when all the bytes have been written.\nAnother thing you can do is to deactivate the Nagle's algorithm ( see https://github.com/TooTallNate/Java-WebSocket/wiki/Enable-TCP_NODELAY)\nGretings\nmarci4. Hello @edasaki,\ncould you keep me posted if slow endpoints are still an issue for you then? If this is the case, we should think about fixing this!\nGreetings\nmarci4. Hello @edasaki,\nthank you very much for your feedback.\nI will look into some possible solutions and will get back to you ok?\nThis of course will need some refactoring on my part!\nGreetings\nmarci4. Hello @edasaki,\nof course this will speed up everything.\nThe thread which is calling onMessage is responsible for reading from each connection as well as writing to the connection. If you add additional load by performing any business logic, this will right now slow down everything.\nSo I will probably add a thread pool for every received message as well as message to write to reduce load of this thread.\nGreetings\nmarci4. Hello @edasaki,\njust so you know. I am now working on the threadpool impelementation.\nGreetings\nmarci4. Hello Joyie,\nNo I would like to let the received and send messages be handeld by a separate thread pool, I do not wanna spawn new threads for each message.\nThe reason for this is that I would like to reduce the load on the Selector thread and also make it more proof against slow handshakes (like the firefox ssl handshake...)\nWell most of the users expect some sort of threadpool in the background so their actions in onMessage() have no incluence on thre rest of the websocket server.\nRight now we do have some async handeling on the onMessage side already!\nWe do have WebSocketWorker which help with the onMessage calls, but there is still to much stuff happening in the selector thread for my taste!\nDeveloper are always responsible for making their stuff thread safe!\nYou are dealing with async messages, so 2 messages could always hit the same timing!\nGreetings\nmarci4\n. Hello everyone,\nI am currently working on new implementation for the WebSocketServer to improve this behaviour.\nCurrent development status can be found here.\nGreetings\nmarci4. Hello @Dayssam,\nyeah that looks like there is no input device on the server (what you expect!)\nJust remove these lines!\n```java\n        BufferedReader sysin = new BufferedReader( new InputStreamReader( System.in ) );\n        while ( true ) {\n        try {\n            String in = sysin.readLine();\n            s.sendToAll( in );\n            if( in.equals( \"exit\" ) ) {\n                s.stop();\n                System.out.println(\"STOP\");\n                break;\n            }\n        } catch (Exception e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n```\nGreetings\nmarci4. Hello @Dayssam \nthe code allows you to write messages into the console which the server then sends.\nThis may be handy if you want to send something out of your IDE. \nThe server won't stop because it is running in a seperat thread!\nGreetings\nmarci4. Hello @sww0825521xy \nIf I understand correctly, the android client is not correctly closing the connection to the server due to e.g. lost internet.\nTherefore I implemented a lost connection connection (Check here).\nIf you wanna shorten the ping interval, decrease it with \njava\nChatServer s = new ChatServer( port );\ns.setConnectionLostTimeout( <new interval> );\ns.start();\nGreetings\nmarci4. Hello @sww0825521xy \ncould you please activate the debug printouts with WebSocketImpl.DEBUG = true; and post the log here so I can understand what is going wrong!\nGreetings\nmarci4. Hello @sww0825521xy \nthat log has close to 5000 lines. That won't help me....\nGreetings\nmarci4. I am sorry but I do not have time to go through so many unrelevant lines...\n. Hello @sww0825521xy,\nfinally got enough time to check out these 5k lines of log.\nLooks like it could be related to #504. Like some implementations (mostly Android) are not updating the selector and because of that not correctly closing everything down!\nCould you maybe try to patch #506 and give me some feedback.\nGreetings\nmarci4. Hello @sww0825521xy,\nthx for your feedback.\nAs I understand you correctly, I can close this topic right?\nGreetings\nmarci4. Hello @UannaFF,\nI assume you implemented something like the SSLClientExample so the client uses your keystore (BKS-keystore example).\nTo debug any ssl error, please use the vm option -Djavax.net.debug=all which can help to find out if there is a problem with the certificate.\nApart from this, can you tell me if there is any problem for a browser connecting to the server?\nGreetings\nmarci4. Hello @UannaFF,\nwell this Map is just for additional headers like cookies (will include something better when I have the time for it), so you don't have to do this! Also line breaks should be included automatically.\nCould you please activate the debug printouts withWebSocketImpl.DEBUG = true; before connecting to the server. Then you can see the handshake which is send to the server.\nGreetings\nmarci4\n. Is there any update on this issue?. Most likely related to https://github.com/TooTallNate/Java-WebSocket/pull/535#issuecomment-334198931\nThat would be an error in the webrtc websocket.\nClosing issue!\nGreetings\nmarci4. Hello @jpaulm,\nright now I am the only active maintainer for this project!\nWith 1.3.4 I implemented a heartbeat check to detect lost connections( see #473 ).\nSorry for breaking your code! A lot changed since the 1.3.0 and there were no updates for over 2 years...\nAnd sorry for the typo facepalm\nYeah it should be safe!\nTrying to introduce a bit more of structure to the project. So any bade code is subject to change ;)\nGreetings\nmarci4\n. Hello @jpaulm,\nI personally don't use maven or gradle.\nThere are plugins which notify you during the build process, if there is a new version (see https://stackoverflow.com/a/2687228 )\nGreetings\nmarci4. Hello @jpaulm,\nYou can also use the maven repository to provide a compiled version of the lib, so you can also push updates to your users and you have control over the used java-websocket version!\nGreetings\nmarci4\n. Hello @jpaulm,\nI meant that you can compile the java-websocket lib with your project sources to one single lib. Sorry if this was not clear!\nGreetings\nmarci4. Hello @jpaulm,\nYou need to include the the following line into your build.gradle\nfrom configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }\nResulting to something like:\njar {\n    manifest {\n        attributes 'Implementation-Title': 'JavaFBP-WebSockets', 'Implementation-Version': version\n    }\n    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }\n}  \ntask javadocJar(type: Jar) {\n    classifier = 'javadoc'\n    from javadoc\n    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }\n}\ntask sourcesJar(type: Jar) {\n    classifier = 'sources'\n    from sourceSets.main.allSource\n    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }\n}\nSo with this lib you dont need the additional libs as arguments ( java -cp \"build/libs/javafbp-websockets-1.2.0.jar;lib/javafbp-4.1.0.jar;lib/java-websocket-1.3.4.jar\" com.jpaulmorrison.fbp.examples.networks.TestWebSockets)\nHope it is clear what I am trying to say!\nGreetings\nmarci4. Hello @jpaulm,\nthe idea behind the proposed approach is just so you not have to include the two additional libs on your own!\nIf you always just use gradle, then don't do this since gradle will do all the downloading etc.\nIf you wanna provide an easy to use lib, then you may think about the approach.\nThe GitHub-ish way is to use gradle/maven and let the build tool download any dependencies.\nGreetings\nmarci4. Hello @jpaulm,\nsince there is no way for them to update the sources without downloading from github again, yeah one gradle build run is fine.\nIf you publish it up to maven, you can push a new version of your lib by just updating the Java-Websocket version your lib is depending on (e.g. see here under Compile Dependencies).\nNo worries, always trying to help :)\nGreetings\nmarci4. Hello @jpaulm,\nis it fine for you that I close this issue?\nGreetings\nmarci4. Hello @poly-sb,\nto be honest right now I have no idea what is happening there.\nCould you provide me with some additional information:\n- On what android version does this happen?\n- On what device does this happen?\n- Any other things which may help me understand this problem?\nGreetings\nmarci4. Hello @wang22123467469,\nfirst of all sorry for the delayed response. I was on holiday for a few days and normally don't read any emails.\nCould you explain to me what you mean with session?\nRight now for me it is not clear what you are trying to get.\nGreetings\nmarci4. No response by the user for over a month and no description at all.\nClosing issue!\nGreetings\nmarci4. Hello @ayyappan6031,\nfirst of all sorry for the delayed response. I was on holiday for a few days and normally don't read any emails.\nI think this issue is related to #423.\nDoes it always not work for messages longer then 8192 characters? Does it just not work for TextFrames or also for BinaryFrames?\nGreetings\nmarci4\nEDIT:\nTested it with a longer message and it works. What are you doing different?\nhttp://imgur.com/a/fXJsp. Hello @ayyappan6031 \ncould you possible post an example String when it is not working (like on https://gist.github.com/ ).\nCould you also update to 1.3.4, since this is the latest release!\nI will look into it a bit more!\nGreetings\nmarci4. Hello @ayyappan6031,\nthx a lot. \nWill look into it over the weekend :)\nGreetings\nmarci4. Hello @ayyappan6031,\nright now I cannot reproduce this issue with my development branch....\nDo you use both client and server from this project or are you using different components?\nGreetings\nmarci4. Hello @gwlucas,\nI still have an issue just to reproduce it :(\nPlease tell me what server and client you are using (as well as ws or wss).\nAnd does this always happen with every random message bigger then 15k characters?\nTell me what you are doing different to me ;)\nTried it with chrome as client as well as just java-websocket server and client and it always works for me...\nThe code you are mentioning is not writen by me. So I do have to read/understand it myself ;)\nonWebsocketFragment is an old API, which I probably will deprecate over time (like I did with the drafts)\nRegarding the PONG message, no this should not be the case and it is also not the case for me...\nPONG messages are specified by the spec and have their own opcode, so you have to handle these separat to a text message for example!\nGreetings\nmarci4\n. Hello @gwlucas,\neven though your help is really appreciated you would help me a lot if you could tell me exactly what you are doing so messages with a size bigger then 8k will not be send ;)\nI am more used to the code and I will find a way to not break all the protocol specific requirements ;)\nApart from this, yes I will look into your mentioned code parts!\nGreetings\nmarci4\n. Hello @gwlucas,\nthis testsuite may help your coworkers! https://github.com/crossbario/autobahn-testsuite/tree/master/doc \nI always test changes against this testsuite so I am sure everything is correctly implemented ;)\nAs you describe this, that should be working.\nGreetings\nmarci4. Hello @gwlucas,\ndo you have any update on this issue?\nGreetings\nmarci4. Could you please check if #570 is fixing this issue for you?\nGreetings\nmarci4. This issue should be solved. If not feel free to open a new issue!\nGreetings\nmarci4. Hello @JamesChungZLL,\nfirst of all sorry for the delayed response. I was on holiday for a few days and normally don't read any emails.\nRight now it is not possible to reuse the client or the server to reconnect.\nThe best way is just to create a new instance.\nApart from this, I may look into this a bit more if there is a growing interest!\nGreetings\nmarci4. @Davevb take a look at the new reocnnect method!. @Davevb open a separate issue please!. Hello @robutil,\nI will add a setter which sets this flag internally. Like TCP_NODELAY.\nGreetings\nmarci4. I added this feature just now.\nThx again for your input!\nGreetings\nmarci4. Hello @devgianlu,\nthx for your bug report!\nLooks like an internal error which is caused by WebSocketImpl between 271 to 275. I will look into this!\nGreetings\nmarci4. Thx again for the time you invest into this issue!\nHope I get the time to check this out over the weekend ;)\nCould also be just the flushAndClose (since there are no bytes to write maybe this is causing problems).\nGreetings\nmarci4. Hello @devgianlu,\nI fixed your issue with pull request #532.\nClosing this issue!\nGreetings\nmarci4. Hello @TOTOROYang,\nfirst of all thank you for your pull request!\nFrom my point of view, this does not fit into the Draft_6455 since it is not specified in RFC 6455.\nWould it not be better, if there is any interest from the community, to implement a new draft for RFC specific behavior?`\nGreetings\nmarci4. Hello @retrofreak83,\nthe lost connection detection is not specified by the RFC but I use the specified behavior by the RFC for the heartbeat.\nThis feature takes advantage of the specification in section 5.5.2 that a endpoint SHOULD respond to a Ping frame with Pong frame as soon as is practical.\nAs it sounds like your websocket server is not correctly implementing the specification.\nFurthermore I think this would not allow a detection of a lost connection since it would require a predefined duration between two pings which both endpoints would have to negotiate. This is not specified by the RFC and so would not be possible with other endpoints.\nTheoretically yes, it would be possible but right now I don't feel like implementing a work around for an endpoint which is not implementing the spec correctly.\nApart from this, you can always turn the lost connection detection off!\nGreetings\nmarci4. Hello @retrofreak83,\ncan we even solve this issue then?\nSince there is no way specified to negotiate a interval, it is not possible for the other endpoint to be sure to send a frame in the right interval. So even if every frame is resetting the timer, there still might be an issue. \nGreetings\nmarci4\n. Hello @TOTOROYang,\nthx a lot for the changes!\nAdded it to the master branch!\nGreetings\nmarci4. Hello @TOTOROYang,\nafter reading through the spec and some issues, a non browser websocket client does not have to send a orogin-header.\nThat is why I am removing this draft again.\nPlease open a issue at the specific project to let them support non browser clients.\nGreetings\nmarci4. Hello @TOTOROYang,\nThe following is out of the spec (1.3):\nThe |Origin| header field [RFC6454] is used to protect against\n   unauthorized cross-origin use of a WebSocket server by scripts using\n   the WebSocket API in a web browser.  The server is informed of the\n   script origin generating the WebSocket connection request.  If the\n   server does not wish to accept connections from this origin, it can\n   choose to reject the connection by sending an appropriate HTTP error\n   code.  This header field is sent by browser clients; for non-browser\n   clients, this header field may be sent if it makes sense in the\n   context of those clients.\nThe origin field is not required by the spec and for me it is not right in the current context.\nThat is why I am not including it into the main project. You are still free to use your own draft. Keep in mind to overwrite copyInstance(), hashCode() and equals().\nGreetings\nmarci4. Hello @Dayssam,\nyou have to trust your self signed certificate.\nThis is kind of difficult to do on IE/Edge.\nTry to export your certificate and trust it trough the certificate process.\nApart from this, please try your web app in other browser like chrome, you maybe need to generate a certificate with a different algorithm.\nGreetings\nmarci4. Hello @Dayssam,\nI know, this behavior is the same on all browsers that all of the content has to be using https.\nI never actually managed to get my self signed certificate trusted for wss just for https. I stopped after like 4 hours and gave up. It works with a offical signed certificate so I use an other browser for my testing.\nGreetings\nmarci4. Hello @Dayssam,\nthe problem is that your keystore is not at the path where you say it is.\nProbably just because of deployment, I quess. I have no idea who you structure your webapp so I can't help you there much.. sorry :(\nGreetings\nmarci4. Hello @Dayssam,\nI also found this. Maybe it helps you.\nhttps://github.com/qzind/tray/issues/6\nGreetings\nmarci4. Hello @Dayssam,\nclosing this issue then!\nGreetings\nmarci4. Hello @MasterEx,\nfirst of all thx for your long and detailed post! :)\nLet's talk about your proposed changes. \nYour solution would work right now but it will probably won't work in the future any more.\nThe reason for this is that I added the support for websocket extensions with the upcoming release of 1.3.5 (see #463).\nEven though right now all the websocket endpoints always use Draft_6455, the resulting binary frame may vary with the new release due to different negotiated compression extensions.\nThat is why outgoingFrames may not be the same for two different endpoints and for that we need to call draft.createBinaryFrame(f).\nWhat you can do anyways is to create one frame for all the endpoints you want to send it to.\nSomething like that should work without a problem and would also reduce the recreation of objects in comparison to the current situation.\njava\n    public void broadcast(byte[] buffer, Collection<WebSocket> clients) {\n        if (!clients.isEmpty()) {\n            Draft draft = clients.iterator().next().getDraft();\n            Framedata frame = draft.createFrames(ByteBuffer.wrap(buffer), true).get(0); //Right now createFrames for a draft will always return a list with one element.\n            for (WebSocket client : clients) {\n                client.send(frame);\n            }\n        }\n    }\nHope this helps you a bit.\nApart from this, could you maybe tell me a bit more about the project and why the amount of GC calls is relevant for you.\nGreetings\nmarci4. Hello @MasterEx,\nfirst of all sorry for my delayed answer. Had to finish some stuff for my holiday :) \nCaching internally in a draft would not solve this problem, since every connection has it's own instance of a draft. So some subclass of WebSocketImpl would be the better approach.\nYeah, you're right, my bad :( It is sendFrame(). Also thinking about making a public endpoint for sending multiple frames.\nYou're code snippet would not work, since currently two drafts with the same properties would have separate hashcodes, since we are not overriding the hashCode function right now.\nI will look into this and probably change this, if there are no issues with that.\nThank you for your insight! \nWhat do you think if I implement something like yourbroadcast() method for a String and a byte array. Would that cover every use case for you? If so, I think it would also be a benefit for other users!\nGreetings\nmarci4. Hello @MasterEx,\nyes I thought about implementing it this way!\nOpened a separate issue for managing some changes which should improve the total memory usage.\nIf it is fine with you, I would like to close this issue!\nGreetings\nmarci4. Hello @MasterEx,\nsorry that I post in this closed issue again but I want to clear up why I have not implemented it the way you proposed.\nThe simple reason for that is that a ByteBuffer is not thread-safe. \nThat could cause the theoretical problem, that the same ByteBuffer will be accessed by two different threads to write to the specific channel and the update of the written position could cause problems e.g. some bytes could not be written.\nThat is why I still create a separate ByteBuffer for each connection to not get into this situation.\nGreetings\nmarci4. Hello @Dayssam,\nfirst of all let's put some things in order.\nFirst of all IE is opening a connection to the websocket server and includes some supported protocols and ciphers.\nThe websocket server (java) is then choosing on of those ciphers/protocols out of its supported ciphers/protocols.\nIf there is no match, you will get such an error resulting in IE to close the connection and then the websocket server to respond with your java console message.\nSo in short, IE and java cannot negotiate a valid protocol/cipher.\nYou can use the vm option -Djavax.net.debug=all to find out more about the used ciphers/protocols.\nThen you need to find a cipher which is supported both by java and IE.\nYou can specify which ciphers/protocols are enabled using the CustomSSLWebSocketServerFactory. You can find an example here.\nHope this helps you!\nGreetings\nmarci4. Hello @Dayssam,\nhttps://www.ssllabs.com/ssltest/viewClient.html?name=IE&version=11&platform=Win%2010&key=107 is showing the supported ciphers for IE.\nhttps://www.ssllabs.com/ssltest/viewClient.html?name=Java&version=8u31 is showing the supported ciphers for java 8u31.\nYou may wanna use some of the getSupportedCiphers() which are higher in this list.\nGreetings\nmarci4. Hello @Dayssam,\nthx for your feedback. I will change it in the code as well.\nClosing this issue since it is now solved!\nGreetings\nmarci4. Hello @atapazvant,\nthx for your help!\nChanges merged!. Hello @zutuanwang,\nI have no clue what you mean with websocket 13 and why you think this is not supported.\nCould you elaborate a bit more please?\nThank you!\nGreetings\nmarci4. No answer for over a month and no clear question/issue.\nClosing!\nGreetings\nmarci4. Hello @atlithorn,\nthis could be related to lost connection detection. \nThe lib is sending a ping every 60 seconds (default value) to the other endpoint. If the other endpoint has not responded to this ping til the next ping is send, it assumes that the connection was lost.\nSo it is possible that the SockJS is not correctly implementing a response to a ping and causing the lib to think that the connection was lost.\nYou can see additional info if you activate the debug printouts with WebSocketImpl.DEBUG = true;\nGreetings\nmarci4. Hello @atlithorn,\nyes that looks normal.\nCould it be related to #523 ?\nGreetings\nmarci4. Hello @atlithorn,\nthat is \"good\" to hear, at least for me.\nWe can also test the following.\nDeactivate the lost connection detection by setting the value to 0 (method setConnectionLostTimeout()). This deactivates the feature. \nIt could be that creating creating a response to a ping causes the sockjs-server to have problems.\nStill gonna keep the issue opened just to get your feedback and for me to keep an eye on this issue.\nGreetings\nmarci4. Hello @atlithorn,\nsorry to hear that :( \nSad that I could not help you anyhow.\nGood luck!\nI will close this topic, if there is anything more, feel free to reopen it!\nGreetings\nmarci4. Hello @lifubang,\nlooks like the connection got lost due to some reason.\nI should catch this exception!\nGreetings\nmarci4. Catching this exception and give some additional info during active debug mode.\nClosing issue!\nGreetings\nmarci4. Hello @ilahsa,\nI have no idea how to get the remote ip for a nginx proxy since I am not using it.\nSorry!\nGreetings\nmarci4. @AoEiuV020, please check out the FAQ!. Hello @sww0825521xy,\nyou can find a documentation for this feature here.\nThis feature takes advantage of the section 5.5.2 in the rfc spec.\nUpon receipt of a Ping frame, an endpoint MUST send a Pong frame in response, unless it already received a Close frame.  It SHOULD respond with Pong frame as soon as is practical.  Pong frames are discussed in Section 5.5.3.\nIf the spring boot websocket is implementing the spec correctly, then everything should be working fine!\nGreetings\nmarci4. Issue answered. No feedback.\nClosing issue!\nGreetings\nmarci4. Hello @hattie0312,\npersonally I don't know any app, which is using this lib.\nBut you can check out maven, where you see which artifacts use this lib.\nI e.g. use this lib for a twitch bot as well as offering a dashboard for this bot.\nGreetings\nmarci4\n. Hello @hattie0312,\nthis lib works mostly fine on android.\nThere is only one known bug, which is caused by a bug in Android 5.0 when using the sslengine (see #424).\nGreetings\nmarci4. Hello @lifubang,\nthx again for your pull request.\nWell, I don't think most of the people use this main method for their projects even just in the beginning.\nIt is there to show new people how it works with extending and also overriding methods.\nDo you see it different? If so, please tell me why.\nGreetings\nmarci4. Hello @lifubang,\nI am trying to catch up with all the missing documentation from the beginning of the project. Since it is an open source project you are very welcome to participate and help with that ;)\nI personally still don't feel the need to change it since it is just to show new people how to use the library and it is never meant for production. \nI still will look into this when I am back home and maybe think of a good way not to sleep the main thread.\nPlease comment on the issues, if there is one already, or create new issues for your requests. I will not discuss them in a total different pull request.\nGreetings \nmarci4. Hello @lifubang,\nI have no high cpu usage. Not in my IDE as well as on my server..\nClosing this since it is not relevant.\nGreetings\nmarci4. Hello @lifubang,\nthx for your pull request.\nI am sorry to say that your work was unnecessary since I introduced a new method broadcast() which also includes some internal caching.\nGreetings\nmarci4. Hello @lifubang,\nI have never heard of this issue that a client in the connection collection is null. Why do you not report such an issue? Could you open an issue for that with detailed steps-to-repeat instructions. Thank you!\nGreetings \nmarci4. Hello @lifubang,\nWhen a new connection is opened and onOpen() is called, the ClientHandshake contains some of the information you are looking for.\nhandshake.getResourceDescriptor() will give you /roomid=123456\nhandshake.getFieldValue(\"Cookie\") will give you the cookies.\n\nI have no clue how the client gets this name... That is a application specific implementation which I have no clue of...\n\nGreetings\nmarci4. Hello @lifubang,\nI think what you are looking for is something which is proposed on a different issue #485.\nThe hashcode of a websocket is currently not overridden so it is the default java object hashcode.\nWhen is onClose not called? Do you have any example?\nGreetings\nmarci4. Hello @lifubang, \nwhat you are describing is just a feature reqest which is #485. \nYou are able to access these fields onOpen and if you need them later you may wanna save them in a separate map.\nClosing issue since it is solved!\nGreetings\nmarci4. Hello @wangdar,\nthis looks for me like a server side issue which may be caused by the low interval. \nEvery client is sending every 5 seconds a ping to the server which the server then has to process and respond to. That could push the server to its limits.\nGreetings\nmarci4. Hello @hattie0312,\nsendPing() does not support custom payloads write now.\nSo you have to implement the connectionLostTimerTask on your own.\nKeep in mind that the specification does not specify what payload is allowed to be send in a ping.\nIf you are using a different implementation it could be the current time in milliseconds or stuff like that!\nApart from this, the other endpoint should now in which room this endpoint is and should not require a ping for this.\nGreetings\nmarci4\n. Hello @hattie0312,\nif that is the requirement, then you cannot do anything against it.\nI am just sure that it will create a lot of load. You may wanna estimate how many ping/pong frames are send from and to the server with your planned user base.\nMaybe this would change the requirement...\nGreetings \nmarci4. Closing issue since it is solved!\nGreetings\nmarci4. Hello @hhhaiai,\nI do not understand Chinese. Could you please translate your issue to English ?\nThank you.\nGreetings marci4. Thx for translating @TomWangTW\ncould you please ask him the following:\nwhen does he have this issue? (Text or Binary)\nwhich version of android is he having this issue on?\nIs he using ws or wss?\nwith which endpoints is he having this issue?\nwhat is he exactly doing? (steps to reproduce)\nthx a lot.\nGreetings marci4\n. Could you please check if #570 is fixing this issue for you?\nGreetings\nmarci4. Any update?. I have no clue what he is taking about. Could you elaborate what he means with cache size limit and what the expected behaviour is ?\nGreetings \nmarci4. Any update?. Closing this dead issue.\nNot sure what was meant with this issue in the first place.\nGreetings\nmarci4. Hello @KevinKmoo,\nI introduced a feature called Lost connection detection in 1.3.4. (see here)\nIt looks like the other endpoint is not correctly responding to pings and not answering them with pongs.\nYou can turn this feature off with setConnectionLostTimeout(0)\nGreetings\nmarci4. Just to make it clear. Your endpoint is not responding correctly to the spec. You just turn the heart beat check off .... The specification requires an endpoint to respond to a ping with a pong! I use this requirement in my heart beat check. Since your endpoint is not correctly implementing the specification the heart beat check just fails and disconnects the client.\nGreetings\nmarci4. Hello @hattie0312,\nI am currently on holiday so I can not give you a definite answer.\nThow this statement was made a long time ago by a different maintainer.\nI will give you a definite answer when I am back.\nGreetings \nmarci4. It looks like there could be an issue in the websocket client side.\nI don't think there is an issue on the server side though.\nDoes this fit to your observations?\nGreetings\nmarci4. Hello @hattie0312,\nI think there could be an issue if you close the connection immediately.\nI will fix this!\nGreetings\nmarci4. Hello @Dayssam,\ncould you try to build the lib from the current master sources?\nI added some onError calls for SSLException.\nMaybe this could help!\nGreetings\nmarci4. Hello @Dayssam, \nI was not expecting a different behavior. I was just expecting an onError call with some specific information.\nWhat are you using as a SSLWebSocketServerFactory ?\nAnything specific you can tell me?\nGreetings\nmarci4. And which one are you using?\nGreetings\nmarci4. Sorry but your formatting fu**ed me up.\nSo you are just using the one method getSSLConextFromKeystore2() since the other two just return a SSLContext..\nHave you enabled Java Cryptography Extension (JCE)?\nGreetings\nmarci4. Please google that yourself!\nWell then it is just a broken/unsupported cipher as it sounds like. Nothing I can do!\nGreetings\nmarci4. No, please don't use these versions any more since they are outdated and don't receive any security fixes any more!. Hello @idontusenumbers,\ndo you have some steps to reproduce for me?\nI would like to see what causes the problem.\nCould you please also answer the following questions:\n- On what Java version is your server running?\n- On what Chrome version is your client running?\n- Are you using SSL?\nTo your propsed fix: I am sorry to say but these changes cause a lot of autobahn test cases to fail! (Right now we pass all of them!)\nRegarding the readVersion() method: You don't have to copy everything over. Just extend from Draft_6455 and overwrite processFrame().\nGreetings\nmarci4. Hello @idontusenumbers,\nthere is a testsuite (https://github.com/crossbario/autobahn-testsuite) which I always use to test any changes.\nWell for me the chrome api does not provide the possibility to send fragmented frames.\nCould you provide a code snippet, which causes the error.\nGonna add a getter for knownExtensions with the next commit to allow make this possible!\nGreetings\nmarci4. Hello @idontusenumbers,\ncould you provide a simple example application? I have no clue how to send chunks of messages in chrome and I have not found any documentation.\nAre you sure that you don't have to overwrite onWebsocketMessage( WebSocket conn, ByteBuffer blob )?\nCould you also activate the debug mode to get additional info? \nYou can to this with WebSocketImpl.DEBUG = true before you start up the server.\nThx\nGreetings\nmarci4. Hello @idontusenumbers,\nthank you very much for the time you invested to set up this sample.\nHere are some of my test results:\nIt is working fine with the following combinations:\n- Firefox 57.0b6 and 1.3.4\n- Firefox 57.0b6 and master code\n- Microsoft Edge 40.15063.0.0 and 1.3.4\n- Microsoft Edge 40.15063.0.0 and master code\nI have an issue with the following combinations:\n- Chrome 62.0.3202.45 and 1.3.4\n- Chrome 62.0.3202.45 and master code\nI will look more into this!\nGreetings\nmarci4\n. Hello @idontusenumbers,\nhere is an additional update.\nI think you found the cause for one of the oldest issues on this project! THANK YOU VERY MUCH! :)\nNeed to test the changes against the testsuite again and make them work! :)\nGreetings\nmarci4. Sorry for closing the issue!\nCould you please check if #570 is fixing this issue for you?\nThank you again for your support.\nGreetings\nmarci4. What exactly did I break?\nThx for your effort!\nGreetings\nmarci4. Well you should not need to overwrite acceptHandshakeAsServer() since you will always use Draft_6455 as a base class.\nApart from that thank you very much for your help!\nClosing this issue since it is solved.\nGreetings\nmarci4. Hello @OmriSoudry,\nthx for your bug report.\nI got a few questions:\n- Where is the NullPointerException? I just see a ClassFormatError\n- What is your java version and what is your lib version?\n- Are you using Java 8? If so, maybe update your java. There was a compiler error in a version (see stackoverflow)\nGreetings\nmarci4. No feedback for over one month!\nThere is no NullPointer exception in the provided stacktrace!\nClosing issue.\nGreetings\nmarci4. Hello @sonwh98,\nthx for your bug report!\nI feel that this issue is not related to the project itself but to the transit-java project.\nThe reason for this is, that the encoding is there not specified (see this open issue).\nFor the websocket protocol it is specified that if you are sending a TextFrame, it's payload has to be encoded in utf-8. \nWhat was the handshake error?\nGreetings\nmarci4\nThis is, what will be the . Hello @sonwh98,\nwell, it could be fine on for the browser since you don't compare the string on the hashCode level.\nSo you are saying the hashCode changes after a hashCode() call?\nThx for your input. That is right now not possible due to the 1.5 java version support (keeping the android support in mind)\nGreetings\nmarci4. Hello @felippeduran,\nthx for your pull request.\nDo you have some steps to repeat for this bug?\nOr have you just found it by code review?\nGreetings\nmarci4. Hello @felippeduran,\nthank you for your answer and your pull request.\nGreetings\nmarci4. hello @haruntuncay,\nthank you for your interest in this issue!\nYes this is still somewhat planned but I simple does not have the time for this.\nOf course, you can send me a mail or ping me in github whenever you want :) Always happy to help.\nBest regards,\nMarcel. ### TL;DR\nI see problems in including sources licensed under Apache-2 in this project and would like to do without them.\nLong story:\nOn my work I was among other things busy the last half year to examine Chromium, CEF and CefSharp and the licenses contained therein.\nIn addition to the many licenses of the components and their different storage structure, a closer look revealed that there are some sources which do not correspond to the described license.\nFor example:\n Wrong license in the defined dependency file\n Modifications of the license without the consent of the license holder by copying the source file\n* Mixed licenses, although defined as single/wrong license in dependency file (MIT was stated, but Facebook\u2019s BSD+Patents License was included)\nAll these things I would like to avoid for this project.\nIf we include the Apache component in this project, I think it will have the following effects:\n This project wouldn't be pure MIT anymore, so it would either have to take over the Apache license or it would have to contain the Apache license in the LICENSE file as well as in Maven (which in my eyes only TooTallNate can decide).\n This includes the current NOTICE as well as possible new ones.\n* A certain amount of administration is required to ensure that the latest version of the component is always used.\nAlthough it is not difficult for us as an OpenSource project to integrate other OpenSource software, this leads to a considerable additional effort for the users of the library in the administration of the licenses and the resulting compliance with these.\nIn my opinion, there are therefore the following possible solutions:\n Using the component and the associated license adjustment, etc.\n Using a dependency implementing the defined component, which can defined via pom.xml.\n* Write it yourself\nThe last variant would be my favorite.. > \n\nHey @marci4,\nDo you know about java.util.zip.Deflater ? Based on this stackoverflow question, he says that java.util.zip.Deflater can produce rfc 1951 compliant output. Since I don't know java.util.zip.Deflater very much, I wanted to ask you about it. Do you think it can get the deflate compression part done or should I write a deflate implementation around this LZ77 implementation ?\n\nI am pretty sure you can use the Deflater, e.g. https://github.com/TakahikoKawasaki/nv-websocket-client is also using it for their implementation.\nBest regards,\nMarcel. Hey \nYes doing really good. Currently on a vacation :)\nThe implementation looks clean :)\nNothing I can really spot. Thank you for your work !\nBest regards,\nMarcel\nAm March 7, 2019 9:12:13 PM UTC schrieb haruntuncay notifications@github.com:\n\nHey @marci4,\nHope you're doing well. When you have the time, could you please check\nthe implementation from this\ngist\n. I would like to hear your opinion on it, before submitting a PR. Btw,\nI will delete the gist file after your review.\n-- \nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/TooTallNate/Java-WebSocket/issues/574#issuecomment-470695967\n\n-- \nDiese Nachricht wurde von meinem Android-Ger\u00e4t mit K-9 Mail gesendet.. Hello @tiagosantos1988,\nplease open a seperate issue for this!\nGreetings\nmarci4. Issue solved!\nGreetings\nmarci4. Please use the template provided for any bug report. It is there for a reason to help me understand the problems.. With your poor description, it took me half an hour to reproduce your first issue with sendPing().\nWithout proper steps to repeat I cannot reproduce the second issue!\nGreetings\nmarci4. Should be fixed with new version..\nClosing issue!\nGreetings\nmarci4. Hello @pcdv,\nthank you very much for your bug report and the time you invested into it!\nI will look into this tonight :)\nGreetings\nmarci4. Hello @pcdv,\nI will take a look on your fork as well and come back to you!\nStill I feel that the test suite should be green with close() as well. \nApart from this, of course test suites are always very welcome :)\nTiming issues are the best issues.... not ;)\nThank you!\nGreetings\nmarci4\nEDIT: Sorry, will check it out tomorrow..\n. Hello @pcdv,\nsorry for getting back to you just today!\nWell there are a few things to consider\n- the websocket protocol requires a close frame to be received to close a connection.  (see here)\n- what you are testing is working, just not instant. But to the the required response by the other endpoint that is not possible!\nCould you please elaborate why you require an instant close/cleanup?\nGreetings\nmarci4\n. Hello @pcdv,\nif you just require a client-server communication without a proper handshake close, then closeConnection() is just fine!\nClosing this issue as solved!\nGreetings\nmarci4. Hello @mmucha-redhat,\ncould you please use the template for your bug report.\nRight now I do not understand what you are doing and what you are expecting.\nGreetings\nmarci4. Sorry to post on your closed issue!\nThis is not how the closing handshake works for the RFC 6455. A connection is closed when the endpoints receives a close frame. \nThe websocket server is sending these frames during stop(), which he has to receive to close the connection!\nGreetings\nmarci4. Hello @hattie0312,\nthere are still some information missing for me to understand your issue.\nAre you talking about the client oder server side?\nPlease provide some steps to repeat...\nThe template is in place for a reason to help me to fix/develop more stuff in my limited time available...\nGreetings\nmarci4. Any update?. Hello @pborissow,\nthank you for your pull request.\nI am sorry to say that I won't accept your pull request due to the following reasons:\n- There is a way to use a self signed certificate (Check out this example)\n- Deactivating all certificate checks with just a constructor is a huge security issue. If you wanna accept all certificates, which I DO NOT RECOMMEND, then you should do it intentional. Having a simple constructor is just to easy to do it unintentional\nGreetings\nmarci4. Hello @Forsties08,\nwhat are you using as a client?\nWhat kind of certificate are you using? Self Signed? Lets Encrypt? Other? And does the other endpoint trust it?\nThe message just says that both endpoints don't have any cipher suites in common.\nThe vm option -Djavax.net.debug=all can help to find out if there is a problem with the certificate.\nThis will activate additional debug printouts so you know which cipher suites are offered and so on.\nWe also have an example how to allow specific cipher suites here.\nHope this helps you!\nGreetings\nmarci4\n. Hello @Forsties08,\nIt looks like you have not activated the vm option. You have to do something like java -Djavax.net.debug=all -jar Server.jar to activate the vpm option.\nWell this will not work since you create the certificate for localhost/127.0.0.1 CN=127.0.0.1.\nYou can check it with https://########:#### using the same url/port as for wss.\nGreetings\nmarci4. Hello @Forsties08,\nif you use the ip address in your certificate, then you have to connect via ip address.\nIf you use a hostname in the certificate, use the hostname.\nYou have to add an exception for this certificate then! (Each browser allows this in a different way!)\nThen you should be able to connect!\nGreetings\nmarci4. Hello @Forsties08,\nthere should always be a 404 Websocket Upgrade Failure since it is a different specification!\nGreetings\nmarci4. Hello @Forsties08,\nwell, you cannot use a self signed certificate for production. Of course you have to use a signed certificate...\nCheapest way is of course Let's Encrypt.\nMaybe you should inform yourself about SSL a bit more before you start such a project!\nGreetings\nmarci4. Hello @meghneelgore,\nthank you for your bug report. \nWill test it later when I am back home!\nCould you maybe check if this issue is fixed already with #586 ?\nGreetings\nmarci4. Hello @meghneelgore,\nI can not reproduce this issue any more! \nMost likely fixed with #586.\nCould you please confirm this?\nGreetings\nmarci4\nEDIT: Also cannot confirm this issue on 1.3.5.... Is this still an issue with 1.3.7?\nGreetings\nmarci4. Hello @lvc,\nthank you very much for these information!\nThis is very interesting for me :)\nGreetings\nmarci4. Moved this to the wiki!\nThank you again for this service.\nBest regards,\nmarci4. Please use the template provided for any bug report. It is there for a reason to help me understand the problems.. Hello @JeremyJT,\nyou are not using the Java-Websocket project directly, am I understanding you there correctly? \nIf that is the case, please open a separate issue there!\nGreetings\nmarci4. Duplicate of NaikSoftware/StompProtocolAndroid/issues/84\nClosing issue!\nGreetings\nmarci4. Hello @RichieJi,\nIE8 to IE10 are not supported by Microsoft any more!\nDO NOT use these versions!\nThat is why there is no need for this project to support socketio.js\nGreetings\nmarci4. Hello @studenttwok,\nto my knowledge there is no way to have multiple SocketSever running on the same port.\nIt is technically not possible without some managing software, which redirects incoming request so the specific endpoint, to have multiple endpoints on one port.\nGreetings\nmarci4. Hello @8databit,\nthank you for your concerns!\nYes you are understanding this correctly. It will be stored as a big bytebuffer and maybe later converted to a string as well,\nRight now there is no limit in place. I know that you can send files with some MB over websockets without any problems (for streaming videos e.g.).\nWhere did you saw throttling? There should not be any!\nWell that is a mystery I did not solve yet. It was added a long time ago when I was not part of this project and none of the former maintainer are there to answer me this question.\nI think they needed to set a limit for the performance so they decided to do something like that!.\nDo you know other projects which may have a throttle setting?\nRight now I am not sure how to implement this without breaking everything ;)\nGreetings\nmarci4. Hello Joyie,\nwell I always considered this part just as a performance booster to reduce the need allocate new bytebuffer and reuse it out of the queue.\nIt could theoretically delay the amount of incoming frames, but it does not throttle them!\nFor me your suggestion is not really intuitive. A user excepts a onMessage call to contain a complete received message. \nThe problem which such a limit is also that the RFC spec is not setting any specific limit. So setting a limit that low (1MB) could break a lot of applications\nThe websocket protocol does not define what it should or should no be used to! It is up to the application to choose and I can not enforce a specific usage!\nHelp is always welcome! That's the spirit of an open source project!\nGreetings\nmarci4. Hello Joyie,\nsorry for the delayed answer.\nI think https://tools.ietf.org/html/rfc6455#section-10.4 is a better solution.\nThe point you mention received all the bytes out of the socket already!\nSo that would not really be a good point in my opinion. A quicker throttle would be better in my opinion (maybe quickcheck the payload size of a non complete frame)\nYes, it is also necessary to check the length at the bytebufferlist (for fragmented frames).\nI am not sure when I get the time to implement anything in this direction!\nFeel free to try it out on your own!\nGreetings\nmarci4. Hello Joyie,\nI implemented your recommended changes. \nCould you please take a look at them? \nYou can find them here!\nhttps://github.com/marci4/Java-WebSocket-Dev/tree/ReceivedLimit\nTo set a lower limit then Integer.MAX_VALUE, call the constructor for Draft_6455 with your specific limit in bytes.\nGreetings\nmarci4. Hello @8databit,\ndid you have a the time to take a look at this?\nGreetings\nmarci4. @8databit \nany update?. Hello @ken-kentan,\nthe SSLWebsocketServer is using the enabled cipher suites and protocols.\nIt depends on your android version which are enabled and therefore active!\nLooks like it could be SSLV3, which may have caused the issue! There are many threads on stackoverflow because of that!\nHappy you managed to solve it on your own!\nNext time please include the description right away then I can take a look on it quicker/when I have less time on my hands!\nGreetings\nmarci4. JavaDocs should be good enough. Probably duplicate of #579 . Hello @836608061,\nthis client does not support HTTP redirect. \nNot even the chrome websocket does support this. Why do you need such a feature?\nGreetings\nmarci4. Any update?. Hello @hackermike,\nThis issue should be solved with 1.3.6\nGreetings \nmarci4. Could you guys provide some steps to repeat?\nI cannot reproduce this in my development setup.\nGreetings\nmarci4. Do both of these issues still exist with this version? \nhttps://www.dropbox.com/s/o9vdm7iwyvcxia8/java-websocket-1.3.7-dev.jar\nGreetings\nmarci4. This feature requires the endpoint to implement the specification correctly! \nJust having a normal socket running will of course cause the connection to be closed!\nGreetings\nmarci4. Well you said something about streams and not a websocket so I expected something different.\nYeah, on onClose the WebSocket should not be open!\nIf you can provide some steps to repeat, which always work, I would really appreciate that! If you think it is releated to this issue, please post it here, otherwise open a separate issue!\nGreetings\nmarci4. Hello @hackermike,\nI found a possible cause for your problem. \nCould you check this please? https://www.dropbox.com/s/o9vdm7iwyvcxia8/java-websocket-1.3.7-dev.jar?dl=0\nThis should not cause any problems any more!\nGreetings\nmarci4. Any update?\n. Hello @hackermike,\nthank you for your feedback. I closed the corresponding issue #609 due to your feedback!\nCould you open a separate issue for that issue?\nJust to make this clear, this main issue (Exception during sendPing()) did not yet happen again?\nGreetings\nmarci4. Hello @fagnerng,\ncould you check if this issue still occurs with the current master branch?\nGreetings\nmarci4. Hello @hackermike,\njust skip the tests. They are for me (jenkins checking against every commit)\nBuild it with -Dmaven.test.skip=true clean package\nGreetings\nmarci4. Hello @hackermike,\nyou can also use this version. https://www.dropbox.com/s/um5gcwy9ax5imiu/Java-WebSocket-1.3.7-dev.jar?dl=0\nGreetings\nmarci4. This issue should be solved in the latest version.\nClosing issue!\nGreetings\nmarci4. Hello @richdyang,\nthis lib is not designed for Android only! Due to that reason I cannot implement such methods!\nPlease implement them and call the respective methods on the websocket server!\nGreetings\nmarci4. Hello @richdyang, hello @Tonacatecuhtli ,\nI tried it with a simple android app and for me the server was killed automatically.\nCould you maybe send me a small test application so I can try to understand the issue a bit more and direct you in the right way. \nSorry not an android guy, so you need to help me out here!\nGreetings\nmarci4. Hello @Tonacatecuhtli,\nthank you for these information!\nSo you are just looking for a service implementation and reusing a WebSocketServer?\nWhy not create a new WebSocketServer? Why is this not possible?\nThe setReuseAddr flag can be set manually. Check the wiki for this!\nGreetings\nmarci4\n. Hello @richdyang,\nI will look into the possibility to allow reusing a WebSocketServer, just for you ;\nI know, but I feel that many Android developer do not have the passion to implement it on their own and \"expect\" there to be a solution.\nApart from this, thank you very much for clearing everything up for me!\nGreetings\nmarci4. Hello @nik17klika,\nthank you for your feature request.\nI will try to set something up tonight!\nCan I then get some feedback from you?\nGreetings\nmarci4\n. Hello @nik17klika,\nI implemented some changes on this branch.\nCould you please take a look at this and tell me if this is sufficient. Thank you!\nTo apply a protocol, you have to use call the constructor of the Draft_6455 the following way!\nnew Draft_6455( Collections.<IExtension>emptyList(), Collections.<IProtocol>singletonList( new Protocol( \"chat\" )))\nThis adds the Sec-WebSocket-Protocol \"chat\" to the handshake and the connection!\nGreetings\nmarci4. Waiting for feedback on #606 to close this issue!. Feedback indicates this bug is fixed!. Hello @Harlber,\nYou can always check with isOpen() if the connection is already open!\nGreetings\nmarci4. Hello @jebej, \nthe problem with onFragment was that it was not intuitive. A user expects a message send in Chrome to be received withonMessage().\nSo I changed everything that all fragmented messages will get combined to a complete frame which will call the respective onMessage() method.\nSo to answer your message, just useonMessage().\nGreetings\nmarci4. Issue should be solved, if there are more questions feel free to open it again.\nGreetings\nmarci4. Hello @jasuade,\nright now there is no way to modify this field.\nI, of course, can add this, if it has any use.\nCould you maybe elaborate why you need such a feature, especially since it is up to the underlying architecture to use it or not?\nGreetings\nmarci4. Hello @jasuade,\nto be honest I don't think this is useful for other people.\nEspecially since it is not required that a gateway handels the trafific different.\nSo I would like you to fork and adjust it to your needs!\nGreetings\nmarci4. Hello @jasuade,\nIs this question answered for you? Can I close this issue or do you need more information?\nGreetings\nmarci4. Calling selectorthread.interrupt() will of course stop the sending the messages.... Hello @peace-maker,\nthank you for your bug report!\nI will take a look at it.\nGreetings\nmarci4. Hello @peace-maker,\nI looked into it. The stacktrace is from a caught exception. Still this exception should not happen.\nCommited a fix for this. Could you please check if this is fixed for you as well?\nGreetings\nmarci4\nEdit: sorry for the automatic close... Damn you github. Hello @oscarthecat,\nWhy should this cause a bad request?\nWhat is a bad request for you?\nThis code was changed due to this report here #247\nGreetings\nmarci4. Any update?. Going to close this issue. \nNo additional info by the author and we changed this due to issue #247.\nIf this is still an issue, feel free to reopen it!\nGreetings\nmarci4. Hello @promatik,\nRight now it is not possible to assign a WebSocket additional values. \nThere is however a an open discussion on such a new feature in issue #485 \nSo right now you have to use a map for assigning additional values to a websocket.\nGretings\nmarci4. Hello @VayneKaso,\nthis is most likely due to the underlying network layer directly indicating a disconnect.\nThere is nothing special this lib does on android, especially since it is mainly targeting Java.\nGreetings\nmarci4. Hello @VayneKaso,\nno, we are relying on the InputStream.read() method.\nGreetings\nmarci4. Hello @promatik,\nthank you very much for your pull request.\nI really like your approach, but would like to wait on some feedback from the rest of the community, if this is fine for you (waiting for one week or so).\nGreetings\nmarci4. Hello @promatik,\nthank you very much for your changes.\nThat is fine, I will add a simple JUnit test for this feature :)\nGreetings\nmarci4. Hello @ericjs,\nthis project was not designed to run under a web application server.\nI personally haven't used Tomcat so I would need your input for the required changes.\nGreetings\nmarci4. Hello @ericjs,\nwell, still you have more experience then I do right now! :)\nEverything we do cannot break the current system. I cannot enforce some annotations or stuff like that.\nI will keep this in mind and when I got more time on my hands I will take a look at this!\nGreetings\nmarci4. Hello everyone, \nI feel this is not possible right now.\nTo my knowledge it is not possible without breaking everything.\nIf anyone has a good idea, feel free to reopen/comment.\nGreetings\nmarci4. Hello @forresthopkinsa,\nthe JavaDoc for the WebSocketClient is missing for this I quess.\nThe onError method for the WebSocketServer is a bit more clear in this case.\nCalled when errors occurs. If an error causes the websocket connection to fail onClose(WebSocket, int, String, boolean) will be called additionally.\nThis method will be called primarily because of IO or protocol errors.\nIf the given exception is an RuntimeException that probably means that you encountered a bug.\nSo yes, onClose should always be called after onError. If you find any case, where that is not the case (apart from errors during the closing process), please report them to me! :)\nI have no clue how OkHttp is doing it, sorry!\nGreetings\nmarci4. Hello @forresthopkinsa,\nIs this question answered for you? Can I close this issue or do you need more information?\nGreetings\nmarci4. Added here.. Hello @venkateshthallam,\nright now I am not sure who I can help you anyway.\nYou should provide:\n- the stack trace for this exception and the exception itself\n- your enviroment (lib version, java version, operation system and version etc etc)\n- your constructor call or some steps to repeat\n- the debug log using WebSocketImpl.Debug = true;\nGreetings\nmarci4. Any update ?. Hello @casolorz,\nCould you maybe update to 1.3.7 and check if this issue still exists for you?\nGreetings\nmarci4. Hello @ebourg,\nthank you for your issue!\nThese close frames are not part of the official RFC and were added later.\nCould you tell me which endpoints use these close codes?\nGreetings\nmarci4. Hello @ebourg,\nthank you very much for your feedback.\nDo you think you could submit a PR for this?\nThank you!\nGreetings\nmarci4. Hello @AnandLin,\nthank you for your issue!\nNo, this lib does not have a specific message size apart from the Integer.MaxValue limit due to using bytebuffer.\nCould you please fill out this template and provide some steps to repeat for me so I can reproduce and fix this issue!\nThank you.\nGreetings\nmarci4\n```\n- Provide a general summary of the issue in the Title above \nExpected Behavior\n- If you're describing a bug, tell us what should happen \n- If you're suggesting a change/improvement, tell us how it should work \nCurrent Behavior\n- If describing a bug, tell us what happens instead of the expected behavior \n- If suggesting a change/improvement, explain the difference from current behavior \nPossible Solution\n- Not obligatory, but suggest a fix/reason for the bug, \n- or ideas how to implement the addition or change \nSteps to Reproduce (for bugs)\n- Provide a link to a live example, or an unambiguous set of steps to \n- reproduce this bug. Include code to reproduce, if relevant \n1.\n2.\n3.\n4.\nDebug log (for bugs)\n- Please provide a debug log for your issue. \n- You can activate the debug log with 'WebSocketImpl.DEBUG = true;' \nContext\n- How has this issue affected you? What are you trying to accomplish? \n- Providing context helps us come up with a solution that is most useful in the real world \nYour Environment\n- Include as many relevant details about the environment you experienced the bug in \n Version used:\n Java version:\n Operating System and version:\n Endpoint Name and version:\n* Link to your project:\n```. Hello @AnandLin,\nI would still like to know on which Android version this happens.\nAlso why are you using WebSocketImpl#socketBuffer(there is no method for that....) for receiving any data and not the normal WebSocketClient#onMessage method?\nCould you also provide a link to the javaWeb project, I did not find anything in my search!\nApart from this could you maybe send me your project so I can take a detailed look?\nGreetings\nmarci4. Hello @AnandLin,\ncould you provide an update for this issue?\nGreetings\nmarci4. Hello @AnandLin,\nRight now I am not sure if I can help you with no information. \nYou do not use the provided template to provide me with debug information or steps to repeat (You can activate the debug information with WebSocketImpl.DEBUG = true;)\nYou cannot provide any information for the other endpoint.\nI have no idea what you are doing so I cannot help you...\nGreetings \nmarci4\n  . Any update?. Dead issue!\nClosing it!\nIf there is new feedback, feel free to reopen it!\nGreetings\nmarci4. Hello @MukiA,\nthank you for opening this issue!\nThe \"problem\" is the method connect(). This is a non blocking method, which is starting the connection/handshake etc.\nIf you wanna send a frame right after connecting, please use the method connectBlocking().\nThis method blocks the thread till the connection is established (or failed).\nGreetings\nmarci4. Hello @mcourteaux,\nI am always open to suggestions for improvement, but these should be formulated constructively.\nHowever, no one has anything from such statements. They create a bad climate, as well as a reduced interest on my part to put more time into this project after a long working day.\nA lot of things are clear to me because I've been working with the API for months. I would be very happy if you describe your problems in a new issue constructively.\nAbout your question: You can find an example class on the first page of the wiki.\nYou can also find all examples here.\nGreetings\nmarci4\n. Hello @mcourteaux,\nthere are some reasons. \nThe smallest issue is, that I will only merch a PR, if there is an open issue (for discussion, keeping track of issues, etc).\nThe bigger reason for me is, that we do have a lot of examples in the wiki and I would have to maintain this example as well (yes, I try to check every class for each release).\nAlso this PR was not complete in the way, that there was no example for a WebSocketServer.\nHope this clears up some confusion.\nGreetings\nmarci4. See #644. Hello @lavancfc,\nthank you very much for opening this issue!\nI think you are looking for the method WebSocket.send(<yourMessage>); to send a message only to the specific connection. For example  you may wanna great a user when he connected to the server.\n(This replaces the use of the broadcast method).\nThis method may look like:\njava\n        @Override\n        public void onOpen(WebSocket conn, ClientHandshake handshake ) {\n                conn.send(\"Welcome to the server\");\n                System.out.println( conn.getRemoteSocketAddress().getAddress().getHostAddress() + \" entered the room!\" );\n        }\nI am not sure why you need the client URI, so you may wanna clear this up for me!\nIf you wanna save some client-specific data, you could also you the attachment feature described here.\nGreetings\nmarci4. Hello @lavancfc,\nwebSocket.begin() is not part of the API of this project\nOf course, we do support a different URI. See https://github.com/TooTallNate/Java-WebSocket/wiki#client-example\nGreetings\nmarci4\n  . Hello @lavancfc,\nI see you opened a separate issue on https://github.com/Links2004/arduinoWebSockets .\nClosing this issue then!\nGreetings\nmarci4. Hello @lavancfc,\nI am really sorry but I just don't have the time available to develop an android app for you!\nCheck the Java Doc for APIs you are looking for!\nI do not get why I should any examples for onOpen methods since it is up to you as a developer what you wanna do with this information.\nGreetings\nmarci4. Hello @cr5315,\nthank you very much for this issue and your interest in this project.\nFor me the problem is that the WebSocket-Protocol and IRC-Protocol are different in a lot of aspects.\nThe way how messages/frames are send is different as well as how a handshake is performed.\nIf you wanna connect to a IRC server with a WebSocket, you have to use a separate library like https://github.com/novnc/websockify.\nI hope this clears some things up.\nGreetings\nmarci4. Hello @cr5315,\nthat is not a problem at all ;) Happens the best of us.\nThere are still a lot of Java IRC libs out there. :) Just do a quick search on google.\nGreetings\nmarci4. Problem solved.\nClosing issue!\nGreetings\nmarci4. Hello @syntrydy,\nthank you for opening this issue.\nUnfortunately, I'm busy all day today and will only be able to look at it myself tomorrow.\nLooking into the log file, I think that it is not related to the lib itself but to your environment (see here for example. \nBut no promises since I haven't tried to reproduce it yet.\nGreetings\nmarci4\n. Hello @syntrydy,\nI am sorry to say this but I was not able to reproduce your issue.\nIt worked both with a new app and with my android wss example.\nUsed com.android.tools.build:gradle:3.0.1 for both of them\nCould you maybe send me your whole project?\nGreetings\nmarci4. Any update?. Hello @Salat-Cx65, \ncould you please use this issue template for a bug report?\nI have tests in place, which should report such an issue, so this is new for me!\nGreetings\nmarci4\n. Cannot reproduce in emulator using API level 26.\n. Any update?. Closing this issue!\nCannot reproduce and no feedback!\nGreetings\nmarci4. Hello @lavancfc,\nyou can check with isOpen() if the connection is established.\nGreetings\nmarci4. Hello @NadeenUdantha, \nthank you for updating the link!\nGreetings\nmarci4. Hello @bcersows,\nthank you for your bug report.\nFixed this issue with #662.\nGreetings\nmarci4. Hello @molaith,\nplease use this issue template to help me understand the issue at hand.\nThis is the definition for close code 1006.\n1006 is a reserved value and MUST NOT be set as a status code in a Close control frame by an endpoint. It is designated for use in applications expecting a status code to indicate that the connection was closed abnormally, e.g. without sending or receiving a Close control frame.\nGreetings\nmarci4\n. Hello @molaith,\nthank you for the updated issue!\nI was not able to install your example apk in my emulator...\nNever the less the exception you are describing is the cause for the disconnect and the resulting close with closecode 1006.\nAfter a quick search on google, it is most likely related to the websocket server you are connecting to.\nCould you give me a bit more insight on what you are using as your backend?\nGreetings\nmarci4. Hello @oakkitten and @molaith ,\n@molaith \nPlease tell me more on what you are using as your websocket server you are connecting to!\nApart from this, you should also try the recommended setting by @oakkitten. \nThis may be a problem since the other endpoint does not correctly implement the specification!\n@oakkitten \nwell it depends on how you use the library. If you use it in a service, it should still work fine!\nI never developed any android app, so this may be not be correct but this is the best I understand it from the outside.\nGreetings\nmarci4. Hello @oakkitten,\nI do see the problem and I think just implementing the WebSocketClient as a service should solve it.\nWhen I got more time on my hands I wanna implement a service on my own to prove this and give the Android users a few tips on how to do it the right way.\nApart from this I opened a separate issue to include some more information in the onClose call to help users understand the issue at hand!\nBy the way I am really thankful for your continuous input :) \nGreetings\nmarci4\n. Problem solved. Closing issue!. Hello @Sdghasemi,\nplease use this issue template to help me understand the issue at hand.\nAre you using wss?\nNormally we are not spawning a lot of new threads, especially on the client side....\nI would love to get a example application to help me understand the issue more!\nGreetings\nmarci4\n. Hello @Sdghasemi,\nyou should not read it but use it instead!\nThis helps me to understand the environment and everything I need to reproduce this issue.\nFor example when you started this issue, you did not mention that you are somehow reconnecting the websocket, Without such information I would just have closed this issue with \"cannot-reproduce\".\nFor me it is not clear what you are doing so such a template is important!!\nEspecially on android a simple demonstration app would also help me to debug and reproduce it. \nThe more details it contains the easier it is for me to reproduce and fix it (if there even exists a problem).\nGreetings\nmarci4. Hello @Sdghasemi,\nthank you again for the details especially for the link.\nAm I understanding the site correctly that there are 476 threads running? \n(Latest Session: Fatal Exception ... below that there is a button for me with \"Show all 475 threads\")\nGoing through this list it looks like you are spawning a lot of pool-threads. \nMaybe you can reduce the number there? \nI recently added some names for threads but all the threads would have the default (\"Thread-x\") or something with \"WebSocket\".\nAlso just for your information, I will be on holiday for a week so don't expect any answers in this time ;)\nHope this still helps you!\nGreetings\nmarci4. Hello @cstratton,\nthank you very much for this detailed bug report.\nThe issue you are describing is new to me, but I am more than welcome to take a look a this.\nAs it sounds, you have a patch for this issue ready. Could you also add it to this issue? Or is it just reverting #190?\nIs it also possible to reproduce this issue in another way, e.g. in a desktop only environment?\nDoes this also occur with the latest version 1.3.7?\nGreetings\nmarci4. Hello @cstratton,\nYeah I got confused with the tag there!\nWell I fear that I have to rewrite the whole SSLSocketChannel to have a more maintainable solution here, since using your fix causes other problems e.g. with firefox.\nI will however be on holidays till next friday so I will not be able to do this in the next week!\nIf I have a somehow working solution, can I get back to you and let you test this?\nGreetings\nmarci4\n. Well the problem is that for me the SSLSocketChannel is just a mess. The author is not active any more and it has some known issues.\nThat is the main reason why I wanna rewrite it.... Hello @a-ross-cohen,\nwell I do not have the time for such a big project right now! Being busy with my master thesis and my full time job.\nIn simple words, we \"just\" need a class that implements a ByteChannel interface over a TLS connection using a SSLEngine.\nAny help is much appreciated!\nGreetins\nmarci4. - Provide a general summary of the issue in the Title above \nSome threads are not named, e.g. the Timer in AbstractWebSocket\nExpected Behavior\n- If you're describing a bug, tell us what should happen \n- If you're suggesting a change/improvement, tell us how it should work \nAll threads, server and client, should have a non default name.\nCurrent Behavior\n- If describing a bug, tell us what happens instead of the expected behavior \n- If suggesting a change/improvement, explain the difference from current behavior \nSome threads, e.g. the timer, still have their default name.\nPossible Solution\n- Not obligatory, but suggest a fix/reason for the bug, \n- or ideas how to implement the addition or change \nSet thread names!\nSteps to Reproduce (for bugs)\n- Provide a link to a live example, or an unambiguous set of steps to \n- reproduce this bug. Include code to reproduce, if relevant \n1. Start Server/Client\n2. Check for the thread names in the debugger\nContext\n- How has this issue affected you? What are you trying to accomplish? \n- Providing context helps us come up with a solution that is most useful in the real world \nInformation only change\nYour Environment\n- Include as many relevant details about the environment you experienced the bug in \n Version used: 1.3.7 \n Java version: - \n Operating System and version: - \n Endpoint Name and version: - \n* Link to your project: -\nInclude\n\n[X] Tests\n[X] Documentation. Thank you very much for creating this issue @cjgriscom.\n\nShould be solved with #667.\nGreetings\nmarci4. Hello @oakkitten,\nthank you for the feedback.\nThe question is, if the getId() information is more important then \"workspace-id\". \nI personally think that most of the users expect the id at the end to represent getId().\nI also cannot add getId() to the constructor of Timer since the thread does not exist yet.\nDo you think there is any benefit using the \"workspace-id\"? Like for most of the users which just run one connection.\nCould you also just open a simple pull request for the wrong name? Thank you! :)\nGreetings\nmarci4. For me the biggest problem with the workspace id is that you have to set it on your WebSocket instance yourself since it cannot know that there was a WebSocket running already (e.g. two instances where stopped, you start a new one --> ID = 1 even though it should be 3.\nNo you cannot reuse the Timer for multiple connections, each WebSocket gets its own timer.\nYeah I see, I'm not really good at naming stuff ;) \nWill change this then!\nApart from that, I added a method to reconnect a WebSocketClient in 1.3.8. You may wanna check this out ;)\nThanks again for the feedback!\nGreetings\nmarci4. I will take a look at this again.\nThank you for your feedback :) Much appreciated!\nGreetings\nmarci4. Hello @vsch,\nthank you for your bug report.\nI think this issue should already be solved on the master due to #661.\nCould you please confirm this?\nGreetings\nmarci4\n. Hello @oakkitten,\nthank you very much for this improvement!\nDo you think it is possible make this somehow happen without f**king everyone up right now, especially users who do not use a build system like maven or gradle?\nOr do I have to provide a separate download then?\nI have no knowledge on how to write such a rule so could you maybe help me do this?\nThank you!\nGreetings\nmarci4. Hello @WalkerKnapp,\nthank you for your feedback!\nI quess I have to do it this way and maintain 2 versions. \nOne maven version and one standalone version.\nWill only do this to the next major release 1.4.\nBTW input is always welcome!!! That what github is build on! :)\nGreetings\nmarci4. Hello everyone, \nYou can see the current development status for this in this branch (https://github.com/marci4/Java-WebSocket-Dev/tree/slf4j).\nWould like to get some feedback on this please!\nGreetings\nmarci4. @NoahAndrews 1.4 is planned as the next release. No ETA since there is a lot to do.... Hello @gjsbe,\nmaybe this helps you.\nhttps://github.com/TooTallNate/Java-WebSocket/wiki/Using-the-WebSocket-through-a-http-proxy\nGreetings\nmarci4. Hello @gjsbe,\nWhy is the example not working for you?\nWhat kind of proxy do you wanna use? \nI don't get what you are trying to achieve.. sorry\nGreetings\nmarci4\n. Hello @gjsbe,\nDo you think you can share your solution to help other developers in the future?\nThank you!\nGreetings\nmarci4. It is a starting point for many! :)\nThank you!\nIssue solved. Closing it!\nGreetings\nmarci4. Hello @xmulxs,\nPlease use the latest version 1.3.7 and check if this issue still exists!\nGreetings\nmarci4. Is there any reason why you wanna sleep the connection?\nMaybe use a separate timer for this?\nGreetings\nmarci4. Hello @b3601993,\nto my knowledge it is possible to use this library in a tomcat environment.\nSome users reported that at least.\nGreetings\nmarci4. Dead issue.\nClosing!\nGreetings\nmarci4. Hello @kimtuitoek,\nthank you for your issue report!\nEven though I am pretty sure that this was also the same on 1.3.7, could you maybe update to 1.3.8?\nBecause I cannot reproduce your issue on the current master branch (so 1.3.8).\nLet me clear some things up for you:\n This behaviour is the expected behaviour \n Calling close() on a WebSocketClient will initiate the closing handshake. The closing handshake is intended to complement the TCP closing handshake (FIN/ACK).\n Initiating a closing handshake means that the WebSocketClient is sending a CloseFrame to the server and waiting for the server to respond with a CloseFrame.\n While the client is waiting for this frame, the connection is in the state: Closing (no new frames allowed, but the other endpoint may send still some data)\n After receiving the CloseFrame, the state will be changed to Closed\n closeConnection() does not care about this closing handshake and will directly close the socket and set the state to Closed\nHoe this clears some things up!\nAlso: I added a new method to support reconnecting, The method reconnect()/reconnectBlocking() is part of 1.3.8.\nGreetings\nmarci4. Hello @kimtuitoek,\nyeah that has do be detected by the underlying socket system. We also have a heartbeat feature for this on a lib level.\nBoth ways trigger the transition from closing to close in this case!\nGreetings\nmarci4. Any update?. Hello @bluekey630,\nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nGreetings\nmarci4. Dead issue.\nClosing it!\nGreetings\nmarci4. Hello @Patel32515,\nright now the lib does not directly have a connection limit.\nYou can however use the method onWebsocketHandshakeReceivedAsServer(), check for the limit and throw an InvalidDataException() if to many connections were made.\nCheck out this wiki article for more information.\nGreetings\nmarci4. Hello Priyank,\ndue to the reason that this lib does not require tomcat, we do not evaluate the server.xml.\nTo set the port, you have to call the WebSocketServer with a different constructor.\nGreetings\nmarci4. Hello @esrrhs,\nlooks like that this isnt used since 2013....\nGoing to deprecate this.\nThanks for your hint!\nGreetings\nmarci4. Hello @xcelder,\nCould you please open an issue for this to discuss the problem, the steps to reproduce and the resulting fix for this ?\nThank you!\nGreetings \nMarci4. Please create an issue or I will close this PR as cannot reproduce!. How about you check out the java doc and find the method for yourself?\nhttps://static.javadoc.io/org.java-websocket/Java-WebSocket/1.3.8/org/java_websocket/client/WebSocketClient.html. Hello @xcelder,\nthanks for opening this issue!\nIs this proxy available for testing? \nGreetings\nmarci4. Hello @xcelder,\nthanks for the feedback.\nNo worries, I just like to check and make sure the changes really fix the issue ;) \nAnyway, after you fix the typo I found in your PR, I am really happy to merch it!\nGreetings\nmarci4. No problem!\nThank you a lot for your changes!\nGreetings\nmarci4. Hello @baruchn,\nthank you for opening this issue and inform me about the changes for gradle.\nI think the problem is, that this library was never designed to separate between APIand implementationand therefore I expected that the lib just wokrs with implementation.\nAnyway I will take a look into this and maybe work out a better solution!\nGreetings\nmarci4\n. No real solution found. Compile will still exist. \nClosing this issue, exact info will be removed anyway with 1.4.0.. Hello @lifubang,\nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nGreetings\nmarci4. Hello @ykbjson,\nthat is intentional to make sure that you don't  have to manually synchronize messages.\nIf you however know that you have a non critical long running task to do, it is always the best to use an executor for such tasks!\nGreetings\nmarci4. Hello @ykbjson,\nis this issue solved for you?. No feedback. Closing issue!. Hello @Animaleante,\ncould you please update to the latest version 1.3.8 and see if this solves the issue?\nGreetings\nmarci4. Hello @Animaleante,\ncould you maybe enable the debug printouts with WebSocketImpl.Debug = true; and then post the log here? \nGreetings\nmarci4. Hello @Animaleante,\nthank you for the log!\nHere are some things you may wanna change:\n Use a ping/pong frame instead of a custom text frame for the heartbeat. This should reduce the load for both client and server (since the payload of the frame does not have to be validated by each endpoint). For more on this, check out the wiki. This library uses this e.g. for the lost connection detection.\n Try to use the normal close(), since it is initiating a normal closing handshake (no data will be lost, endpoint confirms closing etc). closeConnection() is a force method which ignores the spec and directly closes the connection (which could result in data not being send etc).\nOther then that there is nothing in the log which suggests any bad client or stuff like that (like huge messages).\nGreetings\nmarci4\n. Hello @Animaleante,\nthank you for your feedback! Always happy to help :). Hello @a13707331174,\nreconnect was never designed to use directly in the WebSocket-Thread!\nTo achieve what you are trying to do, just start a separate thread which then calls reconnect!\nGreetings\nmarci4. @a13707331174 is this issue solved for you\nnow ?  . Issue seems to be solved!\nClosing it!\nBest regards,\nmarci4. Hello @Nirupg63,\nthank you for your offer!\nI sent you an email, hope you got that one!\nBest regards,\nmarci4. Still looking for new contributers!\nAlso added a new label up-for-grabs for some issues!\nBest regards,\nmarci4. @bhaswanth88, could you email me? You don't have a public email address visible!. @brijsinghdev could you email me? You don't have a public email address visible!. @brijsinghdev could you email me? You don't have a public email address visible!. Hey @kaustavsarkar,\nof course!\nAdded the \"Up for graps\" label for possible issues.\nIf you have any question or looking for something else, feel free to contact me via email.\nBest regards,\nMarcel. Hey @kaustavsarkar,\nof course!\nAdded the \"Up for graps\" label for possible issues.\nIf you have any question or looking for something else, feel free to contact me via email.\nBest regards,\nMarcel. Hey @brijsinghdev,\nTry to get comfy with the code base. Maybe provide some examples for users or try to take on an open issue.\nIf you have any questions in regards to an issue ping me\nBest regards,\nMarcel. Hello @DarkSherlock \nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nGreetings\nmarci4. No update for a week...\nClosing issue!\nBest regards,\nmarci4. Hello @MatthiasKuk,\nfor your first question please check out the FAQ in the wiki!\nFor the follow up question, I quess that this just takes longer to process the json or is async and therefore the connection is already established!\nBest regards,\nmarci4\n. No feedback for a week!\nIssue should be answered from my point of view!\nClosing it!\nBest regards,\nmarci4. Hello @PhilipRoman,\nthank you very much for your bug report!\nYeah you are right, such a method should not contain an assert.\nI think the best solution is to just remove them!\nBest regards,\nmarci4. Issue is fixed by PR #702.\nThank you again, @PhilipRoman.\nBest regards,\nmarci4. Hello @Likarl,\nof course you can implement that yourself using Binary frames. These frames allow you to send a byte array/buffer to the other endpoint.\nThat is up to the application, we do not provide any special features for that!\nIn short, get a bytebuffer/array of your file, send it to the other endpoint and then write this bytebuffer/array in a specific file (Keep in mind NOT to trust the array a other endpoint will send!)\nBest regards,\nmarci4. @Likarl, you wanna post your solution here or are you fin with closing this issue?\nBest regards,\nmarci4. No feedback, \nclosing issue!\nBest regards,\nmarci4. Hello @michaeldboyd,\nwith 1.3.8 you don't have to recreate a WebSocket, you can reuse it!\nJust keep in mind not to start the reconnect in the WebSocket itself and use a separate thread for this!\nApart from that I do not understand what you are trying to achieve with this code, I'm sorry!\nBest regards,\nmarci4. Hello @michaeldboyd,\nhow do you trigger the reconnect? With the onClose() or different?\nHow does the server die? Does it shut down normally or is it killed hard, leaving all the connections open?\nIf the connections are left open, then it is harder to detect. Therefore we have a lost connection detection, which just does a heart beat check every minute by default.\nIf no pong is received, the connection will be closed by the client and then onClose() is called.\nMaybe you mean this with the timeout length, but keep in mind, lowering the interval in which frames are send will of course increase the load for your server!\nBest regards,\nmarci4\n. @michaeldboyd is this issue solved for you?\nBest regards,\nmarci4. Hello @hahaerle,\nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. Could be duplicate and cannot reproduce (see #664). No feedback.\nClosing issue!\nBest regards,\nmarci4. Hello @CSnowStack,\nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. Hello @anishlg,\nthank you very much for opening this issue!\nWhat do you think is the better approach? I am in favour of adding the possibility to reactivate the lost connection detection with the setter rather then adding an additional method.\nCould you also provide a simple application for me since I haven't done any android app.\nThank you very much!\nBest regards,\nmarci4. Hello @anishlg,\nSorry for not responding to use. Right now I am very busy and forgot to answer you.\nI wrote the code and did not have this use case in mind (since this library is designed for java in the first place).\nI just asked for the code to get a better understanding what is the best approach.\nNever the less I cannot promise that I can integrate this feature soon since I am busy right now with a lot of work.\nBest regards,\nmarci4. Hello @anishlg, \nthis issue should be solved with #708.\nCould you maybe try it out?\nThank you!\nBest regards,\nmarci4. This issue is already in the master!\nClosing it!. Hello @nysyzp,\nplease read the FAQ  on the WebSocketNotConnectedException!\nHope, this helps you!\nBest regards, \nmarci4. Hello @zhengxiaosong,\nSorry for the delayed response. I am currently very busy and therefore far away from a pc.\nDue to that reason I haven't tested your code but it looks good.\nIf there is no exception and also no onError call, then the binary frames should be sent.\nSo are you sure that you implemented the binary listener on the server side and not the text listener?\nSince you are sending a binary frame and no text frame.\nBest regards,\nmarci4. Hallo @PhilipRoman,\nthank you very much for your PR and your contribution to this project!\nBest regards,\nmarci4. Hello @stefan-reich ,\nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. Missing template.\nClosing issue!\nBest regards,\nmarci4. Hello @kkopper,\nthank you for your bug report!\nI fear that you have to take actions on that yourself.\nThe problem is, that your WebSocket server is not including the certificate chain and therefore Java is not able to verify your certificate.\nThere is nothing this library can do for you!\nHope this helps you.\nBest regards,\nmarci4. Hello @kkopper,\nHappy that this helped you!\nI would add my answer to the FAQ and then close this issue since it is solved. \nBest regards,\nmarci4. Included it to the FAQ.\nThank you again!\nBest regards,\nmarci4. Hello @algiuxass,\ndo you mean the per-message-deflate extension or GZIP on an application level.\nIf you mean the second one, you have to do this yourself!\nIf you mean the first one, there is already an open issue for that!\nBest regards,\nmarci4. Hello @mlybarger,\nthat is interesting since I am using this maven pom.xml to build the lib for the repository.\nAnd I do not understand why the examples should be required for the build...\nCould you explain this for me please?\nBest regards,\nmarci4. Hello @mlybarger,\nyeah I know about that sporadic issue. It is more an issue with the test itself then with the reconnect functionality.\nThe problem is that the WebSocketServer sometimes cannot handle more then 5 connections if the connect at the exact same moment (what happens with this test setup). Then the connection won't get established and everything breaks.\nI \"ignored\" this sporadic error since I always planned to improve the behaviour of the WebSocketServer Selector anyway to reduce the blocking time on it!\nHope this clears some things up.\nBest regards,\nmarci4. Issue should be solved.\nClosing it!\nBest regards,\nmarci4. Hello @jayronlou, \nis this issue solved for you?\nBest regards,\nmarci4. Hello @PhilipRoman,\nthank you very much for the idea.\nYeah, for me it was never a use case so I thought, I just to the byte array.\nBut I see where you are coming from!\nFeel free to open a PR for this. I am more than happy to merch it!\nBest regards,\nmarci4. Merged #712 \nClosing this issue!. Hello @PhilipRoman,\nthank you for your PR :)\nSince I am busy this weekend, I can take a look at this Sunday evening!\nFor the tests, I opened #713 to cover this!\nBest regards,\nmarci4. Hello @PhilipRoman,\nthank you again for your contribution!\nBest regards,\nmarci4. Hello @wang0x32 \nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. Hello @leokho,\nthank you for your bug report.\nI think the best is to just catch this exception. Could be just a bad timing thing....\nDoes this happen a lot?\nBest regards,\nmarci4. Hello @leokho,\nthat is actually a lot. I am sorry for the inconvenience!!\nOn what interval have you set the connection lost detection?\nHave you run into the same issue described in #699 ?\nCould you describe how you are using the library in your app?\nMaybe this helps at least get to the source of the problem.\nBest regards,\nmarci4. Hello @JoanaDFerreira,\nthat would only be #708.\nBest regards,\nmarci4. Hello @princrai,\nas far as I know this is not possible. \nThis library implements RFC 6455 and to my knowledge there is now way to access a IPC socket using websockets. \nBest regards,\nmarci4. Is this issue solved for you?\nBest regards,\nmarci4. Testing the usage of https://github.com/marianobarrios/tls-channel. Hello @theAprel,\nnot really. I am currently to busy do invest a lot of time in this project due to my work load.\nIt looked like it would require some bigger changes...\nYou wanna take a look at this?\nBest regards,\nmarci4. Hello @theAprel,\nthanks for your feedback.\nWell I personally have no problem dropping the 1.6 support...\nJava 10 is the active version and I do not see any problems going up to 1.8.\nI don't know if there would be problems with Android but on the other hand, Google copying everything from Java has the side affect that everything is currently working...\nThank you for your progress report. It may help me, if I will ever have more free time available.\nDo you mind telling me why you have a problem with wss in your project? Currently running both server and client in production using wss.\nBest regards,\nmarci4. Hello @theAprel,\nthanks again for your feedback!\nGoing to focus a bit more effort into wss then!\nBest regards,\nmarci4. Hello @yuliangC,\ncould you please ask your question in english? thanks!\nBest regards,\nmarci4. Hello @yuliangC,\nI added the reconnect() method with 1.3.8.\nCheck out the JavaDocs for more.\nBest regards,\nmarci4. Hello @yuliangC ,\nis this issue solved for you?\nBest regards,\nmarci4. Hello @yuliangC,\nno I cannot give you a time frame in which you wanna reconnect.\nThat is up to your application!\nBest regards,\nmarci4. Is this issue solved for you now?\nBest regards,\nmarci4. Hello @TestTito,\nthank you very much for your bug report.\nDo you think this issue is caused by https://github.com/TooTallNate/Java-WebSocket/wiki/FAQ:-Secure-WebSockets#handshake-error-on-android?\nSSl on Android is sometimes very buggy, so it could be related to this.\nApart from this, I know that our current method is not bug free, so it could be related to this as well (See #717).\nBest regards,\nmarci4. Hello @TestTito,\nsince I am very busy in RL, I do not have the time for this!\nMost of my free time is already gone managing open issues and stuff...\nAnyway, feel free to do contribute and compare yourself!\nBest regards,\nmarci4. Hello @mani2478,\nI cannot reproduce this issue with Edge 41.16299.492.0.\nSince you cannot install a new version manually, I have to mark this as cannot reproduce!\nYou also may wanna look at this! https://github.com/TooTallNate/Java-WebSocket/wiki/FAQ:-Secure-WebSockets#debugging-ssltls-connections\nBest regards,\nmarci4. Hello @mani2478,\nthank you for taking a look at this!\nBest regards,\nmarci4. Duplicate of #715. Hello @jochembroekhoff,\nThank you for your PR.\nGoing to merge it.\nBest regards\nmarci4. @PhilipRoman, gratz on your first merged PR! :)\n. Hello @dersteve,\nthat would be of course an option, if it is possible to not break existing applications. \nI personally see this always as a benefit that we do not require any other framework. You can simple use a WebSocket.\nI do not know how to achieve this, do you have any idea for that?\nI think that this also kind of matches issue #680.\nBest regards,\nmarci4. Hello @brijsinghdev,\nI added this to insure that multiple frames are correctly send in order.\nOtherwise it would be possible that e.g. a splitted binary frame will be send and in between a ping frame would be send to the other endpoint. This could cause problems which then result in a dropped message.\nBest regards,\nmarci4  . Hello @brijsinghdev,\nyeah, you are right about this!\nShould not be static just final right?\nThanks for taking a look at this!\n@PhilipRoman what do you think, am I missing something here?\nBest regards,\nmarci4. Hello @littleBoyGoing \nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. No feedback!\nClosing dead issue.\nBest regards,\nmarci4. Webhook working!\nNeeds more investigation how to deploy a snapshot!. Working on https://oss.sonatype.org/content/repositories/snapshots/org/java-websocket/Java-WebSocket/1.3.9-SNAPSHOT/. Hello @marsend,\nthank you for your bug report!\nDo you mind open a PR to fix this issue?\nLove to give credit where credit is due!\nBest regards,\nmarci4. Hello @marsend,\nI changed everything!\nThank you again!\nBest regards,\nmarci4. Hello @VyacheslavMartynenko \nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nI am also interested in your lib-version, since I added some additional info text for this dc to help enduser understand the issue!\nCould you also provide a sample application, where I can test my changes?\nI am not into Android and therefore have no knowledge how the doze and everything else works!\nThank you!\nBest regards,\nmarci4. Any update on the template?. No template. Closing issue!\nBest regards,\nmarci4. Hello @sucaiji \nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. Any update on the template?. Hello @925941723 \nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. No template. Closing issue!\nBest regards,\nmarci4. Hallo @schauersbergern,\nthank you for your bug report!\nCould you tell me to which endpoint you are connecting?\nAlso an empty protocol is the default for the DefaultExtension, which represents the Draft_6455.\nHTTP/1.1 403 Forbidden is not in our hand since it is coming from the other endpoint.\nThe refused handshake however should be made clearer why!\nI pushed with #741 some changes which should help debug this issue more.\nIf you want, you can use the latest snapshot (this one) and test it with that!\nBest regards,\nmarci4\n. @schauersbergern any update?. Hello @schauersbergern,\nyou are misunderstanding what the meaning of the protocol is, which is the Sec-WebSocket-Protocol. \nThis is a way do define a different protocol on the application level!\nIf you e.g. only wanna allow the specific sec-websocket-protocol \"echo-protocol\", take a look at this!\nIf this is however still an issue, could you maybe mail me the address of your server so I can take a look at this? You can find it on my profile!\nBest regards,\nmarci4\nEdit: For me the lib also contained the protocol class. Hello @schauersbergern,\nis there any update on your issue?\nBest regards,\nmarci4. Hello @schauersbergern,\nthank you for your feedback. \nI quess I can close this issue then!\nSorry if the example was not clear enough. I just meant that in this specific case, the only Sec-WebSocket-Protocol allowed would be \"ocpp2.0\". \nMaybe I need to rewrite it!\nBest regards,\nmarci4. No additional feedback and reference to the wiki\nClosing issue!\nBest regards,\nmarci4. Hello @leokho,\nfirst of all thank you for your interest in this project!\nSo a few things:\n- The milestone is mostly use to track changes which are part of this version. Never the less if there is an open issue with an active milestone, it will be part of this version (if no good reason come up)\n- I currently plan to start my regression tests this week. This includes updating my private projects to a release candidate build and test, if there are any major bugs.\n- After this regression tests succeeds, I would then push this release to maven!\nIf you however wanna use a snapshot version, feel free to test it (https://oss.sonatype.org/content/repositories/snapshots/org/java-websocket/Java-WebSocket/)\nBest regards,\nmarci4. Hello @leokho,\nthe regression tests looks good. \nReleasing the new version to maven!\nBest regards,\nmarci4. Hello @Davevb,\nsorry for the delayed response. I swear I already asked you these questions.... ;)\nThe debug log is not really helpful. \nCould you answer me the following questions?\n- What server are you using as the other endpoint\n- Are you using wss?\n- Does this happen on all devices or special ones?\n- Could you provide an example application?\nBest regards,\nmarci4. @Davevb any update?. Hello @Davevb,\nsorry if I don't understand you but why can you not just simple make an application on how you reconnect? Or does it only happen on this specific device with this specific server? Then you may wanna look into the specific hard/software.\nAlso by any change is this issue solved with 1.3.9? Just making sure we have the same version ;)\nApart from that I am not really sure how I am supposed to help without a specific example application.... \nBest regards,\nmarci4. Any update?. No feedback. Dead issue....\nClosing it!\nBest regards,\nmarci4. Without steps to repeat and a full template, we cannot reproduce this issue.... Any update?. No steps to repeat! No template! And cannot reproduce by reporter....\nClosing issue!\nBest regards,\nmarci4. Thank you for your pull request!\nBest regards,\nmarci4. Yeah we really have to do this!\nHelps us and everyone checking all the methods.\nEspecially the WebSocketServer is a beauty in itself ;)\n. We have a code close for 1.4.0.\nMaybe opening another issue for 1.4.1.\nClosing this issue as solved!. Hello @egueli,\nThese changes where made since most of the users expected to receive all messages using OnMessage regardless of how the message was sent.\nYou're application should work without any problems by simply using OnMessage (string/bytebuffer)\nBest regards,\nmarci4. Hello @yangxsa \nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nAlso why do you reqire a local http proxy?\nBest regards,\nmarci4. Please use the template!\nOtherwise this issue will be closed.... No template. Closing issue...\nBest regards,\nmarci4. We have a code close for 1.4.0.\nBest regards,\nMarcel. Hello @PhilipRoman,\nthank you for taking a look at the changes. \nHope I got everything!\nBest regards,\nmarci4. @PhilipRoman got everything. Thank you for pointing that out!. Hello @StephanWald,\nthank you for your pull request.\nJust for the future, you do not need to close a pull request, just commit the requested changes to the specific branch and the pull request will get updated!\nBest regards,\nmarci4. Hello @nsjames,\ncould you maybe provide an example application (repository) and some steps to repeat?\nThank you!\nBest regards,\nmarci4. Last call for an example application, otherwise I will close this issue as cannot reproduce!. No source code provided..\nClosing this as cannot reproduce!\nBest regards,\nmarci4. Hello @Librichard,\nPlease update to the latest version of this library 1.3.9!\nDraft_17 got removed a long time ago. The only supported draft is now Draft_6455.\nBest regards,\nmarci4. Hallo @Librichard,\ncould you maybe tell my what you are trying to achieve....\nA few things I can see:\n\nThere is no Sec-WebSocket-Protocol extension registered with the name xfer (See this). Are you sure that this extension does really exist?\n400 is the response by your server. This is not a valid http code, which has to be 101.... So you maybe need to check if you are requesting the correct endpoint.\nIt also looks as your server does not support the Sec-WebSocket-Protocol xfer since it is not part of the handshake response.\n\nBest regards,\nmarci4\n. Hello @Librichard,\nI was not able to find anything on this Sec-WebSocket-Protocol on the internet. \nCould you maybe mail me some more information (if you want to keep it confidential).\nAlso could you maybe include a debug log using WebSocketImpl.DEBUG = TRUE as well as the way you connect using jetty and the way you try to connect using this library. \nBest regards,\nmarci4. Any update?. Hello @sky\nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md. DO NOT forget to provide an example code!\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. No issue template, no additional infos.\nClosing this issue as cannot reproduce!\nBest regards,\nmarci4. Hello @ihsanhaikalz,\nyou got a lot of questions in there, so I try to answer them one by one.\n\nThe websocket protocol does not care if the endpoint is in the role of a client or a server when it comes to ping/pong frames. Both endpoints are allowed to send a ping and the other endpoint has to respond with a pong. We use this to detect if a connection is lost (e.g. dropped cellular network)\nSince every endpoint is allowed to send a ping, it is not defined when a ping is send. E.g. chrome will send a ping to the server in a specific interval. Therefore you may wanna look into another \"response\" to inform the client about a successful protocol initialization.\nNever the less, yes the WebSocketServer does allow you to send a ping using sendPing() of WebSocket. You can also send a ping with a specific payload, just take a look at the implementation for that!\nApart from that you do not really need this confirmation, since on both the client and server onOpen will be called if the connection is established successful. \n\nHope this clears up some things!\nBest regards,\nmarci4\n. Hello @ihsanhaikalz,\nif I understand you correctly you wanna have the delay between server and client, right?\nIn regards of the output, yes you will not receive a ping when listening to onMessage(String/ByteBuffer). For using a ping, use onWebsocketPing.\nYou may wanna check out this gist, since I think this will help you!\nBest regards,\nmarci4. Hello @ihsanhaikalz,\nfor a real representative ping, you need to send the message back to the server, since clocks will be different on different computers.\nApart from this, you can always enable TCP_NODELAY. \nBest regards,\nmarci4. Hello @ihsanhaikalz,\nis this issue solved for you?\nBest regards,\nmarci4. Dead issue!\nClosing it.\nBest regards,\nmarci4. Hello @VolodymyrSmolynets \nPlease use the Bug Report template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE.md.\nWithout a full bug report this will be closed.\nBest regards,\nmarci4. Please use the template to let me understand the use case, why you need such a method, some steps to repeat etc..... So it would be better if you can set a SocketFactory instead of a Socket? \nSo you do not have to take care for this?. Hello @FlorentMasson,\nno it does not automatically reload. It is an example just for the simple purpose to show how to get a SSLContext with a Let's Encrypt certificate and how to use it with this library...\nJust keep in mind, that examples do not have the aspiration to be completely correct or fail-proof for every user input..\nYes, simple update the WebSocketFactory.\nBest regards,\nmarci4. Issue should be solved, since the question is answered!\nClosing it.\nBest regards,\nmarci4. Hello @pellyadolfo,\nplease open a separate issue for these questions.\nThis issue is to track the progress of setting up running servers e.g. echoing a message back.\nApart from this, it looks like all of these messages are not directly linked on how to use the library but more standard java question. \nBest regards,\nmarci4. Hello @IlyaMyasoedov,\nplease provide an example application!\nBest regards,\nmarci4. Hello @martin-g,\nthank you for your bug report!\nRunning everything with the profiler, I saw some left over references to WebSocketImpl instances.\nThe problem is in my eyes, that the WebSocketWorker is referencing an instance but will still keep it until a new WebSocketImpl instance is put into the queue and therefore gc cannot clean up everything.\nI attached a patched version. Could you please check if this solves the issue. If not I may need additional steps to repeat!\nJava-WebSocket-1.3.10-SNAPSHOT.zip\nBest regards,\nmarci4\n. Hello @martin-g,\nyou can find it here. Just merged it locally back to 1.3.9 for you.\nBest regards,\nmarci4 . @martin-g any news?\n. Hello @chuntakung,\nplease provide an example application.\nThese steps to repeat are not sufficient.\nBest regards,\nmarci4. Hello @chuntakung,\nby example application I mean how you exactly use the WebSocketServer. How you set the interval, how you set the time etc to reproduce this issue without additional Android knowledge.\nIt could be that adjusting the time causes the Timer to think it has to catch up.\nSee https://developer.android.com/reference/java/util/Timer.html#scheduleAtFixedRate(java.util.TimerTask,%20java.util.Date,%20long):\nIn fixed-rate execution, each execution is scheduled relative to the scheduled execution time of the initial execution. If an execution is delayed for any reason (such as garbage collection or other background activity), two or more executions will occur in rapid succession to \"catch up.\" In the long run, the frequency of execution will be exactly the reciprocal of the specified period (assuming the system clock underlying Object.wait(long) is accurate).\nA solution for this issue would be to disable the lost connection detection BEFORE you update the time and then re-enable it afterwards (maybe with a small delay so the Android background execution task has some time to catch up with the new time). You do have to update to 1.3.9 for that since I fixed this bug #699)\nBest regards,\nmarci4\n. Have you tried to resolve the dynamic hostname with something like this? https://stackoverflow.com/questions/15788453/resolving-ip-address-of-a-hostname#15788605. And it could also be that your system dns lookup server really cannot look up this dynamic hostname (e.g. wrong configuration). Is this non library related issue solved for you?. No feedback.\nClosing issue!\nBest regards,\nmarci4. Hello @chuntakung,\nare you talking about the server side or the client side?\nBest regards,\nmarci4. Hello @chuntakung,\nsorry for my delayed response. I am currently really busy....\nDepending on the number of decoders defined in the constructor call of the WebSocketServer (default is the number of available processors using Runtime.getRuntime().availableProcessors()) we spawn a number of workers which decode the incoming message and call the respective method (like onOpen, onClose, onMessage).\nEach connection does currently get one specific worker, which then does everything described above!\nTherefore it is not possible what onMessage and onClose both are called the same time.\nThis could however can be subject to change in the feature for a more free floating thread approach.\nApart from this the execution of onClose will not interrupt onMessage!\nBest regards,\nmarci4. Issue should be answered. Closing it!\nBest regards,\nmarci4. Hello @zzhouag,\nthat is not a bug, this is simple because this is a Java library and not an Android library.\nTherefore we cannot listen to such events and implemented a heart-beat check with the lost connection detection feature.\n@sepehr1014 please open a separate issue for that and include an example application!\nBest regards,\nmarci4. Hello @BaraHashesh,\nI think you may wanna take a look at the fragmented example if you want to send a lot of data.\nOf course we do not wait for data to be send, we send it whenever it is possible by the underlying socket. \nIf that is really a problem, you may wanna think about not sending all the data at once!\nNo, based on your non existing bug report/detailed information, there is no reason for this behaviour....\nBest regards,\nmarci4. Hello @mikaelm12,\nyou can find the release note and everything important here.\nBest regards,\nmarci4. Hello @NoahAndrews,\nthank you for spotting that!\nDo you mind changing it? Thank you!\nBest regards,\nmarci4. Thank you very much !. Hello @theAprel,\nthank you for your bug report and thank you for spotting this!\nPR looks good, thank you again for your contribution.\nBest regards,\nmarci4. Hello @theAprel,\nthank you very much for your pull request!\nFor my jenkins setup I just use maven so I forgot to update everything!\nThank you for your contribution!\nBest regards,\nmarci4. Hello @iamchathu,\nplease provide your source code.\nNormally you just start the websocketserver with .start() and stop it with stop().\nI do not thing there is something special needed for Swing.\nBest regards,\nmarci4. Is this issue solved for you? @iamchathu . Hello @iamchathu,\nI am sorry but I still does not get what you are trying to achieve and why you do not use the normal .start() and .stop() method for your swing application!\nI also created a really simple application and to not see the need for a separate thread (see here).\nBest regards,\nmarci4. Is this issue solved?. Closing this issue since it should be solved and all questions answered.\nBest regards,\nmarci4. Hello @defning,\nhow you have to provide the username and password?\nIs it done by using http headers? Then simply use the different constructor.\nBest regards,\nmarci4. Dead issue.\nClosing it .\nBest regards,\nMarcel. Hello @AlanVerne,\nNo ETA, mostly since I am too busy with my normal work right now!\nYou can however use the snapshots (find the link in the readme) or build from master.\nBest regards,\nmarci4. Closing this issue as it should be answered.\nBest regards,\nmarci4. @PhilipRoman Conflict is not relevant FYI. Hello @xiejinsorry,\nplease fill in the bug report!\nBest regards,\nmarci4. No complete bug report, no activity...\nClosing it.\nBest regards,\nmarci4. What should I do with an issue without steps to reproduce, no template used, to example application, nothing?\n. Hello @NoahAndrews,\nfor me this issue was already answered in #776 and therefore a duplicate.\nBest regards,\nmarci4. Duplicate and therefore closing it!\nBest regards,\nmarci4. Hello @BaraHashesh,\nplease use the full template and include a project with easy steps to reproduce!\nBest regards,\nmarci4. Hello @BaraHashesh,\nthe reason why I require the template is simple because it reduces the chance for a misunderstanding and also helps me use my limit time available more effective.\nLike for example with this issue here.\nI cannot reproduce it with the current master branch and I also do not think it is somehow fixed already.\nThat is why I need clean steps to reproduce and also a link to an example application for easier reproduction. Since I followed your first report, I used sleep in onMessage and not onClose as you used it in your answer.\nIt is also not described what you mean by crash etc etc.\nBest regards,\nmarci4. Is this issue solved ?. Hello @nbtdev,\nyeah we enforce the implementation of onMessage(String) but you can always overwride the onMessage(ByteBuffer).\nSorry for the confussion!\nBest regards,\nmarci4. Hello @SossenSystems,\nI do not get what you mean when you say you have to enter a password.\nI am running a production server with a let's encrypt certificate without any problems.\nWhat do you mean by not accepting connections?\nIs this issue present in any client or only in a specific one (e.g. firefox)?\nBest regards,\nmarci4\n. Hey @SossenSystems,\nI was just wondering since I use the same exact code for production why it would not work for you ;)\nYeah there is a known issue that the current SSL implementation does not work well with firefox (and on buggy android version).\nThis however will be fixed (one day I hope...) by #717\nBest regards,\nmarci4. Hello @SossenSystems,\nis this issue solved for you?\nIf so, please close this issue!\nBest regards,\nmarci4. Hello @SossenSystems,\nyou would make me very happy if you got the time and fix this issue with a PR.\nBest regards,\nmarci4. Closing this issue since it is a duplicate and the question is answered.\nDuplicate of #717 \nBest regards,\nMarcel. Hello @FlorentMasson,\nthank you for your bug report.\nDo you think you can provide an example application so I can write a Unit test for this issue?\nThank you!\nBest regards,\nmarci4. Dead issue.\nClosing it .\nBest regards,\nMarcel. Hello @VelonicaScofield,\nplease open a bug report and include an example application for this issue!\nBest regards,\nmarci4. No feedback, no issue opened.\nClosing this PR!. Hello @uncleleonfan \nPlease use the Question template provided at https://raw.githubusercontent.com/TooTallNate/Java-WebSocket/master/.github/ISSUE_TEMPLATE/question.md!\nBest regards,\nmarci4. Hello @XxLittleCxX,\nyou cannot create two separat websocket servers, since they bind to one port.\nYou can however check the provided descriptor during the handshake and reject the connection or save the info for later evaluation.\nOn how to do it, you can take a look at https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/ServerRejectHandshakeExample.java#L51 overwriting onWebsocketHandshakeReceivedAsServer.\nBest regards,\nmarci4. Dead issue.\nClosing it .\nBest regards,\nMarcel. Hello @Zarovzky,\nlooks like your question was answered on stackoverflow.\nYou can use the https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/ServerAdditionalHeaderExample.java example on how to add headers for the server or simple use the constructor for the client.\nBest regards,\nMarcel. proxy_set_header X-Real-IP $remote_addr;. Hey @JesusTheHun,\nthe extraction out of the queue is thread safe however adding items is not ensured to be in order which can result in a mixed up frame order.\nBest regards,\nMarcel. Hello @apexJCL,\nCould you please provide an example application as well as the debug log?\nCould this issue be related to https://github.com/nodemcu/nodemcu-firmware/issues/2211 ?\nAre you trying to connect over ws or wss?\nCould you also provide the debug log of the NodeMCU  module?\nBest regards,\nMarcel. Could also be related since the nodemcu client may send a sec-websocket-protocol which is not enabled and therefore could result in a reject....\nHowever the log would tell that as well.\nhttps://github.com/nodemcu/nodemcu-firmware/blob/8181c3be7aed9f0a0ceb73ac8137c1a519e8a8e9/app/websocket/websocketclient.c#L76\n. Any update @apexJCL ?. Hello @alfree-kr,\ncould you write a unit test for this issue?\nThank you.\nBest regards,\nMarcel. I currently cannot reproduce this issue.... Was still not able to reproduce it even after running it for 15 minutes.. Could you maybe open a pull request so the changes are more visible? Thank you!\nBest regards,\nMarcel. Thanks for the dif @PhilipRoman. \nNot really happy to rely on the exception...\nFeel free to open a PR for a possible unit test\nBest regards,\nMarcel\n. Hello @ffand,\nThis cannot be the issue since it is only part of the current 1.4.0 branch and already fixed with another issue.\nBest regards,\nMarcel. Hello @robinchew,\nIs there any android setting with which you can define which connection is used?\nThis is a java lib and therefore we cannot use internal android apis. But I am pretty sure someone already had such an issue before you.\nIn my eyes it has to be defined by the application and not by the lib (and we simple cannot).\nBest regards,\nMarcel. Any update ?. If you can't solve it in android how can I even solve this in java?. Hello @testmayank013,\ncheck out https://github.com/TooTallNate/Java-WebSocket/wiki/FAQ:-Secure-WebSockets#wss-on-android for android ssl usage.\nBest regards,\nmarci4. Any update?. This issue is solved with #821.\nBest regards,\nMarcel. I planned to update it with #755 together, thanks for doing it!. Hello @cnoelle,\ndo you mind telling me where you got the information (any reference to a documentation?)\nBest regards,\nMarcel. Any update?. Any PR is welcome! Including some explanations and possible effects on the current system.\nBest regards,\nMarcel. Thanks for your review!. Hello @AlexisBrito,\ncan your issue be related to #764 ?\nBest regards,\nMarcel. @AlexisBrito any update?. Hey @AlexisBrito,\nIt simple does not work since there is a System.exit(0) when the client disconnects from the server (see https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/SSLClientExample.java#L63).\nBest regards,\nmarci4. Hello @tarasmytlovych,\nno, server is running fine with IPv4 without any problems in production...\nWhat we do is use the provided InetSocketAddress and bind the server socket to it.\nCheck out https://docs.oracle.com/javase/7/docs/api/java/net/BindException.html on what goes wrong.\nBest regards,\nMarcel. Normally you are not required to provide an host name only if you have multiple ip addresses.\nCheck out stackoverflow for possible solutions. \nThis is simple not related to this project.\nBest regards,\nMarcel. Any update ?. Closing dead question.\nBest regards,\nMarcel. No template. \nClosing issue!\nBest regards,\nMarcel. Hello @BobVul ,\nthank you for your bug report!\nAny PR is more than welcome!\nBest regards,\nmarci4. Fixed with #850 . Not sure if we want to allow a shutdown when there would still be something in the pipe and cleanup should be doing everything fine to my knowledge.\nIs there any issue?. Android 5.0 is buggy with their ssl implementation, see #717, #293, #424 . Duplicates #424. This issue was implemented with #839 !. @BroHammie sorry for again requesting changes :(\n. @BroHammie thank you again for your contribution!. Hello @zoubihai,\nPlease use the issue template to clarify your problem.\nBest regards,\nMarcel. Hello @hiei17,\nyou say that the code works basically, take a look at https://github.com/TooTallNate/Java-WebSocket/wiki/FAQ:-Secure-WebSockets#debugging-ssltls-connections\nBest regards,\nMarcel. Hello @kaduke,\nthanks for the fix in the documentation.\nBest regards,\nMarcel. Was able to reproduce this with 65.0-64 bit running against the ChatServer example using your avatar image @PhilipRoman  (https://avatars2.githubusercontent.com/u/33231208?s=400&v=4)\nWorked best when trying to upload the same image multiple times\nOnly affects Firefox currently as it seems..\nI was not able to reproduce this with 72.0.3626.71. Looks like the bug cause is #805, in detail my refactoring of translateSingleFramePayloadLength (call by value instead of reference for realpacketsize).. @nalizadeh could you confirm that this only affects 1.4.0?\nBest regards,\nMarcel. Fixing this tonight!. > \n\nCan you please explain what's happening in the Issue847Test? Why not simply send a large message and test it was received correctly?\n\nI was not able to reproduce with one single tcp packet.\nWireshark also showed that firefox is sending multiple tcp fragements and when recreating this behavior, the issue occured.\nThe relevant check to prevent this is translateSingleFrameCheckPacketSize, which ensures the buffer is big enough . Hello @Andreas-Bur,\nThank you for your pull request.\nCould you please add a test for your changes. \nJust wanna make sure that it stays that way.\nBest regards,\nMarcel. Hello @Andreas-Bur,\nthank you for your changes.\nYes, that can be the case, mostly since I am now using maven to test it directly.\nI put it onto my todo list.\nBest regards,\nMarcel. A special thanks to all the contributors of this release:\n @PhilipRoman \n @Andreas-Bur \n @BroHammie\n @kaduke\n @theAprel\n @fightyz \n* @StephanWald. @NoahAndrews yeah I have to trigger an update by using the newest version. Somehow it cannot find it. Maybe it is caching the result.. > \n\n@NoahAndrews yeah I have to trigger an update by using the newest version. Somehow it cannot find it. Maybe it is caching the result.\n\nFixed it :D. @L0ks looks like your server is not correctly working ... \nBy the way it is not recommended to trust all certificates.... @L0ks if you have a self signed certificate, you should add it to a keystore and trust it this way.\nIf you have a public signed certificate, java should be able to verify it without a keystore . Hello @liukefeng2008,\ncould you please describe your usecase and what you are trying to achieve?\nBest regards,\nMarcel. Hello @liukefeng2008 \nThank you for a feedback.\nDo I understand you correctly, you just need an API to set a InetAddress instead of an URL?\nBest regards,\nMarcel. Hello @RalryOng,\nplease provide an example application.\nKeep in mind this library is designed for Java and not Android.\nBest regards,\nMarcel. Maybe simple adding a setter would be enough?. Hey @haruntuncay,\nYou can leave it in there. Commenting it out would simple result in another error.\nSorry that this is not yet merged but as you know I am on vacation for 3 more weeks :)\nBest regards,\nMarcel. Hey @haruntuncay,\nYou can leave it in there. Commenting it out would simple result in another error.\nSorry that this is not yet merged but as you know I am on vacation for 3 more weeks :)\nBest regards,\nMarcel. Could you please revert this change?. maybe even extend from DefaultSSLWebSocketServerFactory?. sslParameters cannot be null, could you please adjust the JavaDoc. No check needed since we throw an IllegalArgumentException(). Does the magic ;) (only when we are in a non strict mode according to the documentation). ",
    "rmckay": "On Thu, 3 May 2012 09:22:17 -0700, David Rohmer wrote:\n\nWhen you talk about the socket interface do you mean the server or\nthe client side?\n\nI'm using it on the client side (actually I'm using \nhttps://github.com/benkay/java-socket.io.client which uses WebSocket \nunder the hood).\nCheers,\nRob\n. On Sat, 5 May 2012 23:07:03 -0700, Daniel Wu wrote:\n\nNIO works with proxies, it just does not support the global VM proxy\nproperties (e.g. -Dhttp.proxyHost) which is not flexible (it's kind \nof\nhaving everything proxied or nothing proxied) and I never use them. \nIf\nyou want nio with proxies you just need a couple of lines of code:\nProxy proxy = new Proxy(Proxy.Type.HTTP, proxyUrl);\nURL url = new URL(\"http://java.sun.com/\");\nURConnection conn = url.openConnection(proxy);\nAlthough bio is slightly faster in a low concurrent environment, but\nit does not scale. bio creates too many threads which put too much\npressure on the CPU context switching, and the JVM will also be \nslowed\ndown by the big heap which bio model requires. Most importantly, you\nhave a hard limit of native threads on most operating systems. So \nmany\nprojects, especially server side projects, are going to drop bio\nsupport totally. AFAIK, jetty 9 will totally remove bio support. Some\nfancy languages I have been using like erlang do not provide a bio\nmodel at all, its I/O was written in C with non-blocking model, it\nuses a few shared native threads to simulate lightweight process \nwhich\ncan scale up to millions concurrent processes on a commodity server.\nAlthough Java does not have this programming model at language level\nlike erlang but you should be able to achieve the same scalability\nwith the nio model.\n\nThanks for all the replies..\nFor my purposes I only want one or possibly two WebSockets so the \noverhead is almost completely irrelevant.. it's merely a question of \ngetting something that works with proxies. I'm not sure I understand \nyour example lines above -- surely that is for use with regular Java \nSockets, not the SocketChannel nio stuff used by WebSocket.. there \ndoesn't appear to be any Proxy support in the nio SocketChannel classes \nwhich is basically my problem. If you want proxies you have to implement \nyour own proxy support on top of the SocketChannel. I might even resort \nto some non-java solution - there are libraries you can preload that \ntake over the operating system socket io functions and add proxy support \n(for example http://tsocks.sourceforge.net/).. but I'll play with java \nsolutions for a bit longer.\nI originally started trying to write a replacement SocketChannel class \nbased on the original Socket class (using different threads for \nreading/writing).. and was going to try and hack up a classloader to \npoke it in place of the nio one but that turned out to be a pain \n(loading my version in place of the 'real one').. still might be worth \ndoing for other purposes but probably not this.\nI then started to hack some code into the WebSocket library to support \nan HTTP proxy -- should be fairly simple, just make it spit out\nCONNECT :80 HTTP/1.1\nHost: \nand then eat up the\nHTTP/1.1 Connection Established.\nmessage and then resume processing as per usual. With SOCKS it is \npretty similar except a more compact protocol.\nhttp://en.wikipedia.org/wiki/SOCKS#Protocol\nit's still just a case of sending one write and expecting one read and \nfrom then on it's just a regular TCP connection.\nI haven't quite got this working yet though.. basically I am having \nproblems handling the \"HTTP/1.1 Connection Established.\" reply which \ngets processed by the usual handleRead() stuff which then ends up \nclosing the connection due to it being unexpected.. I should be able to \nget this working though.. I'll post whatever I come up with here \nalthough I'm afraid it may end up being more of a complete hackjob than \nsomething anyone else would want to use ;)\nCheers,\nRob\n. ",
    "arunkjn": "Long time since the last reply. Any progress here?\nI am using this in one of my projects.\nI need to forward a websockets proxy request from a node.js proxy server to the socket.io server.\nIt connects directly to the client, but does not support connection through proxy.\nIs there any workaround or hack?\n. Thanks for the update David.\nWill look into this and try  to implement proxy support.\nI am also considering using an embedded Jetty server in my application to serve websocket content.\nJetty seems to support proxy.\nWill let you know what I eventually come up with.\nThanks & regards,\nArun Kumar Jain | +91 9379820103 | www.mu-sigma.comhttp://www.mu-sigma.com |\nFrom: David Rohmer [mailto:notifications@github.com]\nSent: Friday, September 28, 2012 2:02 AM\nTo: TooTallNate/Java-WebSocket\nCc: Arun Kumar Jain\nSubject: Re: [Java-WebSocket] Bare socket implementation & proxy support (#88)\nWe don't have proxies yet but there is progress :)\nIt can be easily implemented the same way ssl has been implemented:\nYou derive a new class from WrappedByteChannel ( just like SSLSocketChannel2 does) which performs the proxy stuff.\nI have not yet looked at how to \"talk\" to a proxy but it seems to be simple:\nCONNECT example.com:80 HTTP/1.1\nHost: example.com\nProxy-authorization: Basic ZWRuYW1vZGU6bm9jYXBlcyE=\nI think i will have implemented it within the next month.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/88#issuecomment-8952936.\n\nThis email message may contain proprietary, private and confidential information. The information transmitted is intended only for the person(s) or entities to which it is addressed. Any review, retransmission, dissemination or other use of, or taking of any action in reliance upon, this information by persons or entities other than the intended recipient is prohibited and may be illegal. If you received this in error, please contact the sender and delete the message from your system.\nMu Sigma takes all reasonable steps to ensure that its electronic communications are free from viruses. However, given Internet accessibility, the Company cannot accept liability for any virus introduced by this e-mail or any attachment and you are advised to use up-to-date virus checking software.\n. ",
    "leizhu": "@Davidiusdadi ,I have also used Java-WebSocket in my project, and need to use proxy. Does the client support proxy now?\n. compile:\n    [javac] Compiling 19 source files to /Users/leizhu/workspace/Cetas/Java-WebSocket/build/classes\n    [javac] /Users/leizhu/workspace/Cetas/Java-WebSocket/src/main/java/org/java_websocket/client/WebSocketClient.java:71: cannot find symbol\n    [javac] symbol  : class DefaultWebSocketClientFactory\n    [javac] location: class org.java_websocket.client.WebSocketClient\n    [javac]     private WebSocketClientFactory wsfactory = new DefaultWebSocketClientFactory( this );\n    [javac]                                                    ^\n    [javac] Note: /Users/leizhu/workspace/Cetas/Java-WebSocket/src/main/java/org/java_websocket/client/DefaultSSLWebSocketClientFactory.java uses or overrides a deprecated API.\n    [javac] Note: Recompile with -Xlint:deprecation for details.\n    [javac] 1 error\n@Davidiusdadi ,seems that the class DefaultWebSocketClientFactory is missed...Can not compile with the latest codes\n. ",
    "netdragonboberb": "Nice! You rock! I'm going to start playing with this immediately. I'll get back to you on results.\nEdit: I'll be verbose in describing what I'm seeing because I may not solve this myself and want to share everything I've done, just in case I hit a dead-end. I'll consolidate this later if need be.\nAfter some initial testing ON ANDROID, I think your stuff is working fine, but either some proxy programs like fiddler and charles are having problems with websocket or the Android proxy layer is inserting a rogue colon into the GET line. I can't figure out which yet, but I will find the cause. I single-stepped through your code, but I couldn't find the cause in your code, and it looks like you are creating the HTTP Headers fine. So I suspect the issue is outside your code.\nCharles 3.6.5 doesn't seem to support SSL websocket or websocket in general. I tried using both version 8 and 13 (DRAFT_17). For SSL websocket, and then went to Proxy > Proxy Settings > SSL and check \"Enable SSL proxying\" then add the correct websocket SERVER and port under Locations. I used \"*\" for port. And I couldn't get websocket to proxy properly through Charles even off of Chrome and Firefox using Javascript, so Charles is obviously busted.\nFiddler 4.4.4.0 is doing something strange and seems to think there is an extra colon after the GET line (but Charles isn't seeing that, so I think it's a Fiddler bug). I am pretty sure Java-Websocket isn't adding this since I'm single-stepping through. So I'm still looking into this and will probably fire up Wireshark on both the Android and computer and try to figure out what's going on. I suspect it's Android's proxy layer. I tried both websocket protocol 13 and 8.\nThis is what Fiddler is showing, coming from Java-Websocket on Android to Fiddler proxy on my desktop (notice the colon at the end of the Get line - I ran through websocket code line by line and couldn't see this in the buffers or ascii arrays, so I don't suspect this is java-websocket doing it):\nVERSION 8:\nCONNECT SERVER_NAME_OMMITTED:81 HTTP/1.1\nHost: SERVER_NAME_OMMITTED:81\nGET /94528e54-fd69-4572-939f-622cc8c6be5b HTTP/1.1:\nConnection: Upgrade\nHost: SERVER_NAME_OMMITTED:81\nSec-WebSocket-Key: Bh4wcYkU2ZsZ5lMBerXvqA==\nSec-WebSocket-Version: 8\nUpgrade: websocket\nVERSION 13:\nCONNECT SERVER_NAME_OMMITTED:81 HTTP/1.1\nHost: SERVER_NAME_OMMITTED:81\nGET /94528e54-fd69-4572-939f-622cc8c6be5b HTTP/1.1:\nConnection: Upgrade\nHost: SERVER_NAME_OMMITTED:81\nSec-WebSocket-Key: Nc3B94eJzdmaO2HzalzkrA==\nSec-WebSocket-Version: 13\nUpgrade: websocket\nEdit: I found out through wireshark later that Fiddler is adding the port on the Host header.\nUpdate:\nSadly, it COULD be Java-Websocket causing the issue, since I just used Websocket's Javascript implementation in Chrome on the Android, and Fiddler handled it properly. But it could still be Android causing it. So it's time for Wireshark on both ends and see what's being sent out, and received by the proxy, before Fiddler gets to it. If that doesn't tell me what's going on, I'll see if I can find the final point in Java-Websocket before things go to nio and figure out if it looks good there. I'm not confident I've dissected that far enough yet.\nFor comparison, these are the headers being sent by Chrome:\nCONNECT SERVER_NAME_OMMITTED:81 HTTP/1.1\nHost: SERVER_NAME_OMMITTED:81\nConnection: keep-alive\nGET /94528e54-fd69-4572-939f-622cc8c6be5b HTTP/1.1\nUpgrade: websocket\nConnection: Upgrade\nHost: SERVER_NAME_OMMITTED:81\nOrigin: SERVER_NAME_OMMITTED\nSec-WebSocket-Key: /4c6cZ/iq7C2inyfQxNlxw==\nSec-WebSocket-Version: 13\nUpdate: So there definitely is no colon in what Wireshark is receiving on the proxy server, so I would suspect Fiddler doesn't like the ordering of HTTP headers, or the content of the headers, or something like that. Here's what Wireshark shows for the proxy packets. One thing that really stands out is the positioning of Upgrade:Websocket not matching the RFC or the example above http://www.rfc-editor.org/rfc/rfc6455.txt In both cases, it looks like Upgrade: websocket should be called before Connection: Upgrade. Now, I'm looking at the draft functions like Draft_75::postProcessHandshakeResponseAsServer and it looks like at least in some cases, it's pushing it in the right order, but maybe they are ending up getting reordered later on, or maybe running through different logic. I'm debugging it now.\nUpdate 2: Upgrade:websocket is definately out of order due to a Map being used in postProcessHandshakeResponseAsServer but that isn't the cause of the issue. Albeit something that should be fixed.\nUpdate 3: I noticed in Wireshark that the Host header in the CONNECT request is missing /r/n/r/n at the end, like Chrome sends. Fiddler was also complaining that the Host header doesn't match the CONNECT hostname. I think there could be two causes: the lack of port on the Host or the /r/n/r/n. However, I believe the port is optional in HTTP (would need to double-check) and even the RFC doesn't show a port on the Host: header, so I suspect it's the lack of /r/n/r/n. Wireshark data below (hostname ommitted)\n0000 c0 cb 38 2c 86 f4 10 bf 48 ca 15 8b 08 00 45 60 ..8,.... H.....E`\n0010 00 92 be ee 40 00 40 06 c7 3c ac 11 2d ed ac 11 ....@.@. .<..-...\n0020 2d cb a9 7a 22 b8 59 f1 c8 d5 ec d2 38 0b 80 18 -..z\".Y. ....8...\n0030 00 e5 61 a3 00 00 01 01 08 0a 01 b1 76 3b 07 d5 ..a..... ....v;..\n0040 49 30 43 4f 4e 4e 45 43 54 20 XX XX XX XX XX XX I0CONNEC T xxxxxx\n0050 XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX xxxxxxxx xxxxxxxx\n0060 XX XX XX XX XX XX XX 2e 63 6f 6d 3a 38 31 20 48 xxxxxxx. com:81 H\n0070 54 54 50 2f 31 2e 31 0a 48 6f 73 74 3a 20 XX XX TTP/1.1. Host: xx\n0080 XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX xxxxxxxx xxxxxxxx\n0090 XX XX XX XX XX XX XX XX XX XX XX 2e 63 6f 6d 0a xxxxxxxx xxx.com.\nUpdate: Alright, so I solved part of the issue, and now Fiddler is no longer inserting the colon, however I'm still not getting it to send/receive messages through websocket when proxied (yet Chrome has no issue through Fiddler, and I have no issue when not proxied). Anyway, the updated code for WebSocketClient.java . Fiddler didn't like the port not being on the end of Host, and since it's optional, it doesn't hurt to use it. The other important thing was \\r\\n\\r\\n needed at the end (I also changed \\n to \\r\\n after HTTP/1.1 to have a proper end of line)\nI'll check it in when I've solved the other issues.\nWebSocketClient.java line  : 414\npublic String buildHandShake() {\n        StringBuilder b = new StringBuilder();\n        String host = uri.getHost();\n        b.append( \"CONNECT \" );\n        b.append( host );\n        b.append( \":\" );\n        b.append( getPort() );\n        b.append( \" HTTP/1.1\\r\\n\" );\n        b.append( \"Host: \" );\n        b.append( host );\n        b.append( \":\" );\n        b.append( getPort() );\n        b.append( \"\\r\\n\\r\\n\" );\nEdit: \nI figured out what else was going wrong with the proxy. When websocket sends the proxy CONNECT, the server responds with Connection Established, so if the library receives a Connection Established response, it needs to ignore it and wait for the next response. But acceptHandshakeAsClient is treating it like it should be \"Switching Protocols\", which will be the next response.\n. Update:\nAlright, I updated the code to fix the issues, and also changed TreeMap to LinkedHashMap in handshakeDataImpl1 to preserve ordering of header fields so that ordering matches RFC. I forked and I'm going to now check in the changes and send a pull request.\nAs a reminder, Fiddler proxy will work now but Charles Proxy doesn't seem to handle websocket for any clients.\n. ",
    "agad66": "Hi, i have recently started to use this library for websocket connection and i like it. I would like to continue using it but i have stumbled into a problem. My websocketclient is behind a proxy that needs user authentication and i didn't find any documentation or examples on how to set user and password for proxy. Where can i find some guidance if it is posible to setup user and posible and how. Thank you.\n. ",
    "binwiederhier": "Same here. Bump.\n. ",
    "privatejava": "I have a proxy server which have user and password but I am not sure how to add them in ExampleClient as it only accepts InetSocketAddress in setProxy. Please help\n. ",
    "BrushfireDigitalServices": "I'm going to close this due to changes in the codebase since 2012 and general inactivity in this thread. Feel free to open new issues about specific aspects of proxy support and mention this issue if relevant. \n. # Update:\n- The missing shutdown statement was fixed on the master branch in 1c43128.\n- Pull request #276 is now merged with the master branch as of ea7e061.\n- The current master branch of this library is the most up-to-date version.\n- There is not yet test coverage as per #318 to ensure this issue does not resurface. \n- No one is currently assigned to writing the tests. If needed I will write them, though ETA would be late next week at the earliest. Does someone in the community want to provide tests for these fixes?\n- The changes to WebSocketClient.onWebsocketClose proposed by @sghosh326 are not included.\nTo everyone who worked hard for the fixes to be included in the main project,  thank you for your interest and dedication! Apologies on behalf of the entire Java-Websockets project that this issue was not resolved sooner.\nTo take the changes, pull commit ea7e061 or later. As discussed in #286, the jar is not up to date. I am closing this issue in hopes that it is now fixed for everyone. If CPU usage or memory leak problems persist, please let the community know as soon as possible. \n. Related: #282 \n. I have added this to the Complete Documentation milestone and will add the solution(s) to the new docs. To summarize, the key points to avoid this pitfall are as follows:\n- To prevent stop() from blocking forever in some situations, use a positive timeout like stop(1) as @bendem suggests. \n- If developing for pre-Honeycomb Android, @vcucek links to an Android issue describing a separate bug where an interrupt does not prevent blocking in some situations. The workaround is to \"use Selector.wakeup(), possible[sic] in conjunction with Thread.interrupt().\" \n. This should be fixed now that #329 is merged. @bendem contributed the fix and confirmed that it works on JDK 8. Since neither of us is an Android developer, it is still untested on Android.\n. Agreed, behavior should differ based on whether the exception arose from a bug in our code or in other libraries. I will mention the problem and its location as part of my documentation pass on WebSocketClient, and leave the fix up to the next bug-fixing pass.\n. This fix will be part of the next release, and has been added to the milestone. We're fixing bugs on master and confirming stability ahead of the 1.4.0 release.\nRelated: #315\nShould be fixed by: #216 (partial) or #331 (complete)\nNow is a good time to confirm that #331 works and that the workaround provided by @diabolusss is no longer needed. I will close this after a fix is merged.\n. @ThreaT Looks like this request was pre-approved by @Davidiusdadi in the referenced issue #171, but he stopped actively updating this repo before it arrived. The conversation there goes into enough depth that I feel comfortable merging this as is. \nIdeally for clarity the import statements would not be re-ordered so that the added EOFException would be more noticable.\n. @viagraphs On behalf of the whole Java-Websockets project, apologies for not getting to this sooner. This project is being actively administrated again, and any and all pull requests are welcome.\nWe are currently pushing to complete documentation (#313) and expand unit test coverage in anticipation of a new stable release. The new release prioritizes fixing our wss and race condition bugs, and may include new features.\nYours would be an excellent feature for inclusion. If you are still interested, please send us pull requests, participate in discussions, etc.\n. Thanks for pointing out the problem! This bug will remain open until the jar is updated.\nIn the meantime, the master branch here is still the best place to find stable code. Now that this project is actively administrated again, you can expect more fixes, expanded documentation and test coverage, and (eventually) a new release.\nThe more community involvement and discussion, the better. Please keep contributing as you are interested and able.\n. @snooze67 Thank you for pointing out this error! We need to get it fixed without introducing other bugs. Does someone else in the project have more direct experience implementing the drafts?\n. # Calling for input from the community:\nPlease review this proposed fix to the implementation of Draft76. Even if you don't have direct experience in this area of the codebase, the more eyes and opinions look at proposed patches, the better.\nIf it all looks good, we still need to get unit tests written to make future contribution and debugging easier, as per #318.\nAs for me, I don't see any glaring issues, but am new to SSL-related projects. Am hesitant to commit without further input. \n. @dflz @din, thank you for taking the time to report and confirm this issue. At this time, I do not know of a fix.\nHave either of you made any progress towards a fix? Even a failing test case would be helpful at this stage. Would you be interested in finding and contributing the solution?\n. Hello all, based on volume of new issues, the current master branch is more stable than the 1.3.0 snapshot. \nWe are pushing to fix more issues and make new contributions easier. If you have time, please test with the new code--your troubles may already be fixed. If not, there should be a new stable snapshot in the next few months. \n. The method is there in the latest (several) commits and everything compiles ok on my end. @Fi5t @vach Did pulling from Github fix the error? If not I will reopen this.\n. If there's not a more active fork already, I'm willing to fork and begin administrating the documentation process. We should identify who wants to take on which tasks (and which tasks no-one is interested in) so folks aren't wasting time writing substantially similar pull requests.\nI would start by sorting out what contract the abstract methods actually have and what is added by concrete implementations.\n. Working on trackng him down. If all else fails, we could try opening an issue titled something like \"Active support can be found at [address of active fork]\" and see how many users follow the redirect.\n. Outstanding. Thank you, @TooTallNate, for taking the time to address this. In the near future I'll mainly be helping expand and clarify documentation.\n. Now #331 incorporates #216 and calls the new shutdown method. Will close this after #331 is merged.\n. Related: #270\n. Agreed, @ThreaT. \nI would like to push for major additions and bugfixes to include tests, perhaps as a new requirement for merge approval. For the pull requests I have merged this week, I expect to be able to deliver at least partial JUnit test classes by the end of next week.\nIdeally, the folks who wrote the patch will also write documentation and tests, but in the cases where the original authors cannot do so, or are not interested, I suggest using tags to track which items lack such metadata. This way, interested parties can find items to work on quickly and easily, and urgent fixes with community-reported correctness (such as #171) don't have to wait for a merge.\nWhat are your thoughts?\n. An unbiased perspective is definitely desirable. I'm open to using acceptance tests, but have no experience writing them.\nTest inclusion being strongly encouraged but not required sounds like the way to go.\n. @bendem are you interested in code reviewing @ThreaT's proposed acceptance tests? Your recent contributions are quite valuable, and we're trying to define a unit and acceptance test suite that can automatically check that fixed bugs are not reopened by future changes.\n. Thank you for the pull request, @rachidbm! Sorry to have taken so long to respond.\nI agree that this project needs a way to specify supported protocols and cipher suites. Your code looks like a good solution, with documentation included. Much appreciated!\nDo you have any test or example code for TLSWebSocketFactory? Test coverage is a major item right now (#318), and it would be good to include as much as possible with each new addition.\n. @xia199427 I'm hesitant to merge this as a new feature because the drafts correspond to versions of the websocket specification, and the only reference to a draft 18 I'm finding through search engines is this pull request.\nWhere can we find the corresponding specification for this feature? Is there an issue in this project that this change is intended to fix or work around?\n. Thank you for your input, @gayatrimali. Too much has changed in the ecosystem and this code since the 1.3.0 snapshot to avoid doing a new stable release in any case; see the milestone Release 1.4.0. Android has historically been a buggy area for this project, for the above reasons and poor TLS support in the Android libraries <4.1.\nIf you are interested in helping fix this or any other issue, please do write a pull request. \n@ThreaT and I are administrating this project for the foreseeable future, so you can expect to see responses to your efforts.\nDo what you feel confident and inspired to create!\nKeep in mind that we are in a push to complete documentation and provide unit test coverage. Therefore, all new code (and the existing methods it modifies) is strongly encouraged but not required to include these in the PR.\nUPDATE:\nAfter discussion in #318, I realize that strict requirements on contributions are not the right approach for open source. With or without test coverage and docs, all pull requests will be considered for merge. My apologies.\n. Thanks for being proactive about reporting troubles with this library! #171 has an update that should answer this question.\nPerhaps in the process we can collaborate on creating the test code for the new patch?\nPlease pull the current master branch and retry. Hopefully everything works for you now. If you still experience bugs, open a new issue here.\n. Thank you for your input! It's good to hear that docker-client seems to be running smoothly. \nI've applied labels and will keep this issue open as a centralized place for further feedback about our wss support. Knowing what projects are not experiencing troubles and how they use this library helps us help those who are.\n. The server should not crash/become unresponsive due to failed connections, but here it does. All three attempts in the stack trace are failing.\nAre you sure that your client is configured to accept the current version of your self-signed certificate? The stack trace looks like that's the underlying issue to me.\nI've tagged this as unclear until we can determine whether this is tied to an untrusted cert issue. If so, there's still likely diagnostics to be done.\n. Ok. Adjusted tags accordingly. What is the source of the NPE on line 161 of the stack trace?\n. We can still try to help sort it out. We recently changed WebSocketServer and SSLSocketChannel2, so it might be related to #307 or #171. Do you happen to know which commit of this library you were previously using?\nAre you experiencing CPU or memory leak symptoms before or during the crash?\n. @hydrabolt I'm glad that reconnecting the client helps in the short term. Perhaps Chrome is not meeting the protocol specs, perhaps they are within them and this library needs to account for it. Either way we definitely need to find a reusable way to stop client behavior from DoS-ing the server!\nResource leaks were an unlikely guess in the first place, but since the fixes are so recently introduced, I felt it best to ask. \n- Do you feel confident investigating the details of the handshake?\n- Issue #300 is also specific to Chrome, though your problem looks to be in the handshake with message lengths that shouldn't trigger it. If you have the opportunity to test your project with another browser, the results would be valuable to us. Please upload logs when available.\n- Issue #210 looks similar, but the reported fix is now included. We should check if the suggested malicious command will still reproduce this issue.\n- Pull request #297 isn't merged yet, but may work correctly for you.\n. Looking into the handshakes should probably wait until after the other tests anyway. The key point is being able to get a set of packet captures and program logs, preferably one of a failed connection and one successful. From there, I can look into what's going wrong.\nThanks for your patience throughout this process. \n. Understood. I'll try to reproduce the issue in the emulator and update with my findings in a few days.\n. You're welcome, @hydrabolt. Hopefully by the time you have access to your computer we'll have something actionable. \nAlthough I have experience with desktop Java and troubleshooting, I may need to follow up with a few Android-newbie questions as I work on the test app. Which SDK version or versions are you running your server on?\n. Progress update:\nNo luck emulating a wifi connection. I have one physical device that I may be able to load with new enough android to test. \nI have some completely untested theories about why the server is becoming unresponsive. If correct, it would mean the unresponsive issue is in Titancast and the bad handshake issue is somewhere between Java-Websocket and Chrome.\nAm still working on setting up a toolchain to sniff the handshake packets and test my theories.\n. Thanks for your contribution, @garys-esri! We're striving to make this repo even better, and having accurate Javadocs is a big part of that.\nIf your project uses WSS and this library is working great, please consider describing/linking to the use case in the discussion at the positive-report issue #325.\n. Much appreciated!\n. Upon researching the error, I see that unexplained \"found class when interface was expected\" problems pop up when building or testing with a slightly different toolchain than the code was written for.\nI recompiled the jar a few days ago without problems. I'll check this evening which versions of which tools I used--let's compare versions and see if we need to update pom.xml.\nAdditionally, our Autobahn tests haven't been updated in a while, so the problem may be there. @ThreaT has proposed a different set of acceptance tests written against the current state of this library. They may allow the build to complete, but do still require code review and bug fixing. \n. Hi all, it looks like this StackOverflow question might be talking about the same underlying situation as this \"found class but interface was expected\" error.\nSpecifically, the accepted answer states \"this happens when your runtime classpath is different than your compile time classpath... This is a common occurence if you had a different version of a jar file on the compile time classpath than on the runtime classpath.\"\nDoes running mvn clean and/or changing tge runtime classpath help?\nOther items I've found discussing the error sound like less similar situations, but a recurring theme is that under the wrong conditions, having an older jar on your compile time classpath is correlated with this error in the new jar at runtime.\n. Looks like a good fix of the main cross-platform bug to me. Since #259 involves Android but does not specify being post-Honeycomb, should we also include the Selector.wakeup() call before considering it solved?\n. Agreed, each file should carry its own license notice.\nLooks like you're packaging the 1.3.0 snapshot. Although 1.3.0 is still heavily used, it is much less stable than the current master branch. We're working towards a new official release. Like the other recent fixes, the license notice will be added to the above files before we've officially tagged and jar-ed 1.4.0.\n. @hegjon, @blunden\nA truly \"five star\" package for Fedora is probably a long way off. That said, a lot of progress is still being made. In particular, we're starting to get more and more confirmation from the community that fixes here are in fact working on their projects.\nThe deadline for an updated release number is fast approaching, but was chosen arbitrarily as a motivating factor just as this repo was being revived and before the rate of new development was clear. This deadline should be reexamined, and this time set with community input.\nGoing forward, I've started a new job and expect to be checking in to admin here approximately two days a week.\nUpdating to the master branch is a good idea in any case. \n. The stacktraces look different, but the symptoms are the same as #326.\n. ",
    "carlhopf": "I only found calls to LinkedBlockingQueue.put() which all have a capacity of Integer.MAX_VALUE. So basically this should never block, unless you insert 2147483647 entries? \nThis means we are out of memory before beeing blocked.\nSo I guess this issue was fixed in a commit some time ago.\n. Using the default WebSocketFactory, no custom implementation.\nEDIT: accidently clicked on close, so reopened x)\n. I've been reading/searching through the source too, couldnt find anything yet.\nBy the way: you should not let WebSocketServer.onError handle the RuntimeException from the WebSocketServer main loop, because it will get burried in thousands of IOExceptions (which are normal). I recommend not catching it, so we actually know that something important went wrong :)\n. Well that's what i was trying to say. It would be easier to recognize if you would just NOT catch RuntimeExceptions, so the app crashes. Currently, we need to log all WebSocketServer.onError calls and read through if there is an important exception in them.\nNot sure if your solution provided above solves the bug, will be able to test in the next days (cant restart the server often).\nSeems the race condition is between \njava\nkey.cancel()\nkey.attach(null)\nAND the main loop\njava\nkey.isWritable()\nkey.isReadable()\nkey.attachment()\nMight need to synchronize(key) for the whole main loop. Just guessing here though.\n``` java\nIterator i = keys.iterator();\nwhile ( i.hasNext() ) {\n    key = i.next();\nsynchronized(key) {\n    .....\n}\n\n}\n```\n+\njava\nsynchronized(key) {\n    key.cancel();\n    key.attach(null);\n}\nWhat do you think?\n. Yea, you really dont want to synchronize there :D I am gonna remove the key.attach(null), and will check a heapdump for leaks and will report back to you.\nI think as long as we make sure that all keys are cleaned from the selector, there should not be a memory leak? \nMaybe loop selector.keys() once a minute and check if we have lost/idle keys. If yes unregister+cancel them.\n. Server has been running fine so far. Uptime is 4 hours with about 2000 connections at once. Might be a bit premature, but seems like removing key.attach(null) fixed the issue. I'll let you know tomorrow if any problems came up, else i guess we are good to commit.\nGr\u00fc\u00dfe nach Hanover ;)\n. Can confirm so far that this solves the bug. Cheers\n. ",
    "pkriens": "That is good news, timing is fine with me. I ran into http://nioframework.sourceforge.net/, not sure if it is useful but they seem to claim it makes SSL and nio a lot easier. Thanks!\n. ",
    "Steelight": "Thank you!\n. Out of memory exception, if I remember correctly.\n. Did I mention I'm running on Android? I'm not sure if there's a way to do this on Android. According to this:\nhttp://tordtech.blogspot.co.il/2009/09/memory-limit-on-android.html\nit will require changing the Android source code.\n. Well, actually, I'm sending these ginormous packages. They are sent and received (on the remote side) properly, and the only problem is with the debug prints.\n. Look, the problem is solved as far as I am concerned. If you want the fix, cool, if you don't, I'll just add it manually to future versions. I just wanted to share.\n. ",
    "fomojola": "You either have to use a properly chained cert or it is actually moderately painful: you basically have to visit the IP address using a regular https URL. The browser will prompt you with the usual security warnings and you have to accept the warning and create a security exception, and then it works after that.\nVery sub-optimal, but unfortunately no options. \n. You are right: handle was basically a remnant of my application that made it into the test file, since in my app I only allowed 1 connection at a time.\nCreating multiple connections should be just fine: just strip out all references to handle and use arg0. I'm not sure what the default backlog is: I think it is 50 or something, but the base WebSocketServer doesn't set it when calling bind, so there may be something there that prevents multiple connections.\n. ",
    "vikasjayaram": "Does the WebSocketClient.java support wss? If yes, how to configure this?\n. I am using the Draft_17 protocol version. Here is the snippet of code that I am using and the output. If you could give an insight of what I am doing wrong that would be great.\nHere is the snippet of code:\npublic class ExampleDriver {\n    private static ExampleWebSocketClient ws;\n```\npublic ExampleDriver() {}\npublic static void main(String[] args) throws URISyntaxException, InterruptedException {\n    ws = new ExampleWebSocketClient(new URI(\"ws://localhost:8080\"), new Draft_17());\n    ws.connect();\n    String image = readFile();\n    System.out.println(\"image length\" + image.length());\n    String msg = \"{\\\"imagename\\\":\\\"Test-1\\\", \\\"imagedata\\\":\\\"\" + image.toString() + \"\\\"}}\";\n    System.out.println(msg);\n    ws.send(msg.toString());\n}\n public static String readFile()\n    {\n     String base64String = \"\";\n        try\n        {\n            String file = \"Test-1.jpg\";\n            base64String = Base64.encodeFromFile(file)  ;;          \n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n        return base64String;\n    }\n```\n}\nAnd here is the output :\nSocket open\nimage length : 88644\nSend msg\nClose test : CODE = 1005, REASON = false\nClient closed\nError in Socket :\njava.nio.channels.CancelledKeyException\n    at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:55)\n    at sun.nio.ch.SelectionKeyImpl.readyOps(SelectionKeyImpl.java:69)\n    at java.nio.channels.SelectionKey.isReadable(SelectionKey.java:271)\n    at org.java_websocket.client.WebSocketClient.interruptableRun(WebSocketClient.java:239)\n    at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:189)\n    at java.lang.Thread.run(Thread.java:680)\nI tried an image of size 41KB and it worked like a charm, the above test was done on a image size 70KB. Any guidance is very much appreciated.\n. Thank you for the previous response. I have figured out the issue. I tested the client with the following wesocket servers in various languages which I wrote. \nThe test was successful in the following platforms:\nJava (Tootallnate websocket server)\nwebsocketpp(c++ websocket server)\nws(nodejs javascript websocket server).\nIt failed with the Worlize websocket server. I could conclude that it is te server issue. The java tootallnate websocket client works like a charm.It also works like a charm on android 4.0.1 as well. Thank you for all your help. \n. @Davidiusdadi , yes I have worked with the Java-Websocket server and it works like a charm. Didn't find any issues , tested with image size upto 1.9MB and it worked like a charm where \nThe client used was Java-Websocket client\nThe server used was Java-Websocket server\n. ",
    "mparis": "Hello,\nI am working with WSS and it works well ;).\nI have got it downloading the source code and installing it in local with maven, but I want to use Maven Central dependency (http://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket).\nThe problem is that the current version is 1.3.0 and WSS is available in 1.3.1-SNAPSHOT version.\nAs I see, the code is stable since few months ago. So, is it possible to deploy a new release to Maven Central?\n. ",
    "blunden": "I agree with @mparis, it would be great if you could update the outdated maven central release. Lots of developers prefer to pull down their dependencies from there.\n. @mfsi-ankitb The issue might be that it still has problems with working on both 5.0 and earlier versions. See https://github.com/TooTallNate/Java-WebSocket/issues/293\n. @mfsi-ankitb Oh, really? Did you confirm that it works with earlier Android versions too?\nI personally switched to a different lib for that issue. I know of others who would be interested to know that it has been fixed though.\n. @mfsi-ankitb Thanks for the confirmation! \nYeah, you will need to recreate the WebSocket related objects. That seems to be the case in many WebSocket libraries. Perhaps you can reconnect in some onWebSocketError-like method?\n. @garys-esri It's not just \"a bad idea\", trusting all certificates should NEVER be done in production code. What you want in this case is probably to pin your company CA certificate in the client. The current example code shows you how to do this (add the certificate into a jks keystore and specify that as the trust store to trust).. I'm not sure it's such a great idea to bundle this lib in Fedora until it properly implements the disconnect handshake that is required by the WebSocket RFCs. Last time I tried it, it didn't. That might be fixed already though.\n. ",
    "mfsi-ankitb": "Actually yes, I too agree with @blunden, can you guys please update the maven central.\nI am on live project and really need to use WebSockets having WSS enabled with lollipop.\n. @blunden I tried using Java-WebSocket with the latest source code, and it is working for me on lollipop with WSS (using default SSLcontext).\n. @blunden Yes, the connection opens and I am able to send and receive messages (checked in 5.0 and 4.1.1). But, facing some problems like connection breaks (doesn't connect back) when Internet Connectivity drops and reconnect again. And I can't connect back with same client once disconnect is triggered.\n. Hello @marci4 \nAfter updating to latest version I didn't faced this issue again.\nThanks for this reminder, I must close this bug.\nRegards,\nmfsi-ankitb. ",
    "riddy": ":-p\nalso: ich verbinde mich, alles tut. wenn ich eine nachrichten an alle sende (getriggert von einem anderen teil der anwendung), kommt diese auf meinem blackberry ger\u00e4t an.\nwenn ich aber eine nachricht an den server sende und darauf antworten will (onMessage) dann erhalte ich keine nachricht\n. im gunde habe ich das chatserver beispiel leicht abge\u00e4ndert. \ndie sendToAll messages kommen ebenfalls auf dem blackberry an, bei onMessage m\u00f6chte ich aber nur dem gesendeten antworten, dies klappt \u00fcberall au\u00dfer auf dem blackberry. \nonerror auf dem ger\u00e4t wird nicht ausgef\u00fchrt, ich kann auch weiterhin die toAll messages empfangen, nur eben keine antwort auf meine anfrage via websocket :( \nda ich sonst keine probleme habe h\u00e4tte ich vermutet das blackberry vielleicht eine andere websocket-implementierung verwendet.. aber irgendwie macht es keinen sinn, dass die anderen nachrichten ankommen...\nich schau mir mal die debug-logs an. danke erstmal!\n. ^^ \nich sende eine leeren string via websockets an den server, und erwarte daraufhin eine antwort (\"on\").\ngleichzeitig kann ich serverseitig allen angeschlossenen clients nachrichten senden. \ndas funktioniert \u00fcberall, nur auf dem blackberry bekomme ich ausschlie\u00dflich die \"on\" nachrichten nicht (alles andere funktioniert einwandfrei). ich vermute es liegt an dem leeren string, leider kann ich das gerade nicht testen weil ich das ger\u00e4t nicht mehr habe. \nich dachte vielleicht hat jemand erfahrungen mit blackberry devices, am server kann es ja eigentlih nicht liegen wenns niergendwo sonst probleme gibt..\n. genau das war meine idee. \nich kann das leider erst n\u00e4chste woche wieder testen, aber ich melde mich auf jedenfall nochmal.\n. aaalsoo:\nDraft scheint schon 76 zu sein, allerdings ist der Fehler behoben wenn ich irgendein Zeichen zum Server sende. Ich schieb das mal auf eine BlackBerry Eigenheit.. Danke dir aber nochmal!\nDo not send empty Strings via BlackBerry devices!\n. ",
    "sabhiram": "@Davidiusdadi - I think what @leesangboo, and what I wish to answer is the following:\nHow do I connect to a subpath if my websocket server only accepts connections to:\nws://<ip>:<port>/<path>\nThe question is not asking how one might get a path from a given open connection, but rather how one would connect to a subpath in a websocket server.\nPerhaps this can be re-opened? \n. ",
    "lvivtotoro": "Yes, this would be pretty useful. 1. I am sending a byte array.\n2. Binary\n3. Yes\n4. I'll be back with that. I'd rather implement it than the method with a String parameter if I'm sending a ByteBuffer not a String.\nThe code would just be unreadable.. No, they're clear (at least to me).\nBut the ByteBuffer is receiving an empty one. Here's what I get serverside:\n```\nConnection lost timer started\nprocess(154): {GET / HTTP/1.1\nConnection: Upgrade\nHost: localhost:25571\nSec-WebSocket-Key: not sure if I should show\nSec-WebSocket-Version: 13\nUpgrade: websocket\n}\nwrite(212): {HTTP/1.1 101 Web Socket Protocol Handshake\nConnection: Upgrade\nDate: Thu, 29 Jun 2017 09:22:41 GMT\nSec-WebSocket-Accept: not sure if I should show\nServer: TooTallNate Java-WebSocket\nUpgrade: websocket\n}\nopen using draft: Draft_6455\nprocess(184): {\ufffd\ufffd\nsend frame: Framedata{ optcode:BINARY, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:17, len:0], payload:[5, 76, 90, -17, -65, -67, -36, -70, -17, -65, -67, 8, 34, 6, -17, -65, -67, -17, -65, -67, 42, 82, 45, -17, -65, -67, 107]}\nwrite(2): {\ufffd\n.\nwrite(154): {GET / HTTP/1.1\nConnection: Upgrade\nHost: localhost:25571\nSec-WebSocket-Key: not sure if I should show\nSec-WebSocket-Version: 13\nUpgrade: websocket\n}\nprocess(212): {HTTP/1.1 101 Web Socket Protocol Handshake\nConnection: Upgrade\nDate: Thu, 29 Jun 2017 09:55:59 GMT\nSec-WebSocket-Accept: not sure if I should show\nServer: TooTallNate Java-WebSocket\nUpgrade: websocket\n}\nopen using draft: Draft_6455\nConnection lost timer started\nsend frame: Framedata{ optcode:BINARY, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:176], payload:[0, 0, 0, 0, -17, -65, -67, 101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 73, 85, 122, 73, 49, 78, 105, 73, 115, 73, 110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 110, 97, 87, 81, 105, 79, 106, 69, 48, 78, 84, 103, 120, 77, 83, 119, 105, 99, 50, 78, 118, 99, 71, 86, 122, 73, 106, 112, 98, 73, 110, 66, 121, 98, 50, 90, 112, 98, 71, 85, 54, 98, 87, 85, 105, 88, 83, 119, 105, 100, 87, 108, 107, 73, 106, 111, 48, 78, 84, 73, 51, 79, 83, 119, 105, 90, 88, 104, 119, 73, 106, 111, 120, 78, 68, 107, 53, 77, 122, 77, 48, 79, 84, 85, 53, 102, 81, 46, 75, 85, 71, 106, 118, 118, 109, 103, 108, 89, 69, 54, 51, 89, 118, 118, 48, 73, 74, 86, 66, 82, 68, 107, 117, 84, 84, 97, 54, 85, 74, 84, 103, 74, 88, 120, 80, 111, 74, 84, 118, 78, 103]}\nwrite(184): {\ufffd\ufffd\\00\ufffd\ufffd\ufffd\u0006\u001b\ufffd\ufffd\u0006\u001b#\ufffd\u007fQ\ufffdAx\ufffdoQ\ufffd\ufffd|R\ufffd\ufffdoR\ufffd\ufffdhI\ufffd\ufffdER\ufffd\ufffdmk\u0412EQ\ufffd\ufffdcb\u00aagL\u066dIq\ufffd\ufffdHO\ufffdKH\ufffd\ufffde)\u01b2e\\\u07beOq\ufffd\ufffdOu\u02bdd)\u04b4d\\\ufffd\ufffddL\u076d^H\ufffd\ufffdbL\ufffdOq\ufffd\ufffdHO\ufffd\ufffdIH\ufffd\ufffd\\C\ufffdOq\ufffdH_\ufffd\ufffdKa\ufffd\ufffdIO\ufffd\ufffdJ\ufffd\ufffdS\\\ufffdpv\ufffd_^\ufffd\ufffd_m\ufffd\ufffdOQ\u0786T_\ufffdRO\ufffd\ufffdSQ\u0723LC\ufffdiQ\u0732H|}\nprocess(2): {\ufffd\\00}\nmatched frame: Framedata{ optcode:BINARY, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:0], payload:[]}\n```. It is! Look at the server log!\nThesend frameshows the bytes.  I don't understand, are you supposed to send a payload to get one?. That's exactly what I am doing.  \nThe only difference is that I'm passing aByteBuffer.. Here's the gist:  \nhttps://gist.github.com/lvivtotoro/d721c18b6bceb8cc09aefb32ed951d39. I'm usingByteBuffer.wrap` before sending it, so there's definitely an array there.  \nWhen I passed the ByteBuffer instead of the ByteBuffer.array, the server wasn't receiving anything at all.\nAm I supposed to use .position(0) every single time?. Something I noticed: When I pass a ByteBuffer, it is empty on the other side.\nSo I'll just be using .array() from now on.. ",
    "gitEmporer": "Hi, \nI have a similar requirement to specify a path, when sparting a WebSocketServer.\nA sample how this works in other websocket implementations can be found here:\nhttps://www.oracle.com/technetwork/articles/java/jsr356-1937161.html\nThe sample on the page uses a context (path): mycontextrootand an endpoint: hello.\nSample URL is :  ws://localhost:8080/mycontextroot/hello\nFor your framework I only need a way to configure the path.\nRegards\n. ",
    "PhilipRoman": "This library currently does not provide path/endpoint resolution. Instead of starting 2 different servers ws://localhost:1234/foo and ws://localhost:1234/bar, you start a single server on ws://localhost:1234 and within the onOpen(...) method you can check the requested endpoint using handshake.getResourceDescriptor() which returns a string, like \"/foo\" or \"/foo/bar\" and then implement further logic in your own code. WebSocketClient allows connections to websocket URIs with subpaths.\nWhile this library probably won't implement full endpoint resolution, we could potentially offer basic support for registering callbacks to only be invoked for sockets whose handshake endpoint matches a certain path. \nIf we were to support code like this:\nWebSocketServer a = new MyServer(1234, \"/endpoint\")\nWebSocketServer b = new MyServer(1234, \"/other/endpoint\")\nwe would have to maintain a global map of all currently running servers and host the two servers on a single WebSocketServer instance. This doesn't really fit within the scope of this library, but it might be possible to implement this behaviour as an external project. . At this point SLF4J is basically an industry standard (and for a good reason). With java.util.logging you lose a lot of flexibility.\nSLF4J API jar is 40kb and it's java.util.logging implementation is only 8kb. . Instead of using \"subscriptions\" you create a subclass of WebSocketServer or WebSocketClient and define your callbacks by overriding the methods \"onMessage\", \"onOpen\", \"onStart\" and \"onClose\". You can cancel them either by shutting down the whole socket or using your own logic (by toggling a variable, etc.).  If you're still not sure, take a look at the examples.\nI hope I understood your issue correctly.\n. Apparently node.js supports this. See this question on stackoverflow. They are using a cool syntax for the url: var client = new ws(\"ws+unix:///tmp/server.sock\")\n. CodeFormatterProfile.xml at project root. Tested it, everything works as expected. . Not sure what's the best way for this project (I don't use maven for dep management) but as a quick fix, you can always git clone, then mvn package and add the jar as a local library to your project (until next release).. Yeah, no static resources are accessed within the synchronized block so it should be fine!. What is the message size? Do you get an error? I tried it and the only limit was the available RAM. . Can you post a stack trace here? . Okay, this might be really stupid from me, but is it possible that webSocket variable is null at the time when you try to close it? \nThe line Caused by: java.lang.NullPointerException: Attempt to invoke interface method 'void org.java_websocket.WebSocket.closeConnection(int, java.lang.String)' on a null object reference seems to suggest that.. fixed the link. Nothing wrong with the link :). Previously it would point to a nonexistent url \"https://github.com/TooTallNate/Java-WebSocket/issues/url\". \n. Here is the relevant wiki page. In short, when your other endpoint doesn't respond in time, the connection will automatically be closed. You can change the timeout (or disable it) using setConnectionLostTimeout();. Default timeout is 60 seconds. . Thanks for catching this error! It would be nice if you could add additional information to match the issue template, especially the steps to reproduce and android/java version to make it easier to solve this issue. . By the way, are you sure that only one thread accesses the WebSocketClient object and calls connect/reconnect? It could be a race condition where the socket is reset while being connected. . Glad to see I'm not the only one staring at SonarQube reports \ud83d\ude2e!  On a more serious note, I think the first thing to do should be splitting up the large methods into smaller ones. This is guaranteed not to break anything and it could even help to achieve better performance. Reading some of the code currently is quite hard and improving code quality may help more people contribute in the future.\nAgain, thanks for bringing this up!. Please add more information about your problem using the given issue template (issues without template may be closed). Currently the question is unclear.. I'm closing this because there is no template or other info provided.. Sorry for being pedantic! Can't test it on mobile but I think that there shouldnt be a parameter in this statement (src/main/java/org/java_websocket/AbstractWebSocket.java): \nlog.error(\"Exception during connection lost restart: {}\", e);\nI believe this call uses the method \nerror(String, Throwable)\nwhich is supposed to log a message and stack trace, instead of treating the throwable as a parameter. This shouldn't affect anything important so feel free to merge if you want! \ud83d\udc4d. Have you tried using the setReuseAddr(true) option? This should not be an issue caused by this library.. Does this only happen when your app crashes? Does it happen when the app is closed normally? I've also experienced this on one of my linux servers. In any case, the TIME_WAIT state should go away after a few minutes. The \"reuseAddr\" of this library simply forwards to the underlying Java socket APIs and there is nothing we can fix there. I will try to help the best I can though! . What is the ArrayBuffer class you're mentioning? Is it org.simpleframework.util.buffer.ArrayBuffer from SimpleFramework or do you mean the JavaScript ArrayBuffer? If it is from SimpleFramework, you could ask in their forums about how to get the bytes as a byte array or a ByteBuffer. . Sorry for delayed reply!\nIf you are talking about Javascript ArrayBuffer, you certainly don't need SimpleFramework! I mentioned it because it was the first thing that came up about ArrayBuffer in Java. Anyway, I think you should take a look at the Javascript WebSocket documentation.\n I'm closing this issue because it is not related to this project. \nBest regards.. There are two different onMessage methods that you can override - onMessage(WebSocket, String) and onMessage(WebSocket, ByteBuffer). Overriding the last one will allow you to receive binary data. \nYou can find more information on the wiki.. Hello!\nThanks for your bug report.\nCould you please add more information, such as versions, steps to reproduce and debug log? Issues without enough information may be closed.. GitHub is not letting me \"review\" at the moment so I'm leaving this here. The changes are awesome! I didn't check all the tests but the ones I checked are good. \ud83d\udc4d . GitHub is not letting me \"review\" at the moment so I'm leaving this here. The changes are awesome! I didn't check all the tests but the ones I checked are good. \ud83d\udc4d . \ud83d\ude06 I did not expect that to happen. This method was added after release 1.3.9 (#770). You can use nexus (or jitpack.io) to obtain latest versions of this project.. Is this issue solved for you?. Hello!\nThis seems like an issue regarding image encoding and isn't really related to this library or websockets.\nI've never tried anything like this, but I believe getImageData() returns raw pixel data while Java ImageIO expects it as PNG, GIF, JPEG, etc. The most reliable solution seems to encode canvas as Base64 using toDataUrl(), send it as text and then decode it as shown here\nGood luck!. Fixed with #809 . Issue confirmed, suggested fix seems good. . Since it's been open for a while and no one has said anything, I'm going to merge this.. Could you please add the following information?\n How exactly are you running the examples (include all steps)\n What version of Java are you using. This seems to be like a general issue regarding BlueJ and is not specific to this library. I recommend asking this in either a BlueJ-specific forum or a general Java forum where there are far more users who will help you. . Closing this as off-topic. If it turns out that the issue is specific to this library, feel free to open a new, more specific issue.. What JDK are you using (include all output from java -version)? Also, what OS are you running the test on? Does the test fail every time you try it or does it happen rarely?. For now, I've made a quick diff of the changes. You can view it here. (whitespace issues shouldn't be visible). for the record, binaryType is the property you're looking for.\nNot sure what you mean by not being able to change client code - there is no way you can change that from the server side.. Personally, BlockingQueue has worked well for me. I don't really see why this is a \"poor alternative\". Do you mind elaborating on why you think it's bad?. Well, I haven't used the client side but AFAIK on both sides this library is supposed to run in background, on a seperate thread. As for performance penalty, in my experience BlockingQueue offers great throughput but not-so great latency (~20 microseconds unless you pin both threads on same cpu, not that it matters 99% of time). Honestly, if you are fine with 1 ms latency GC, you won't notice this at all. \nI've built a realtime game server with WebSockets and tons of blocking queues (~80 threads runing at the same time), running on bunch of $10 servers, where both latency and throughput are important and the bottleneck is either IO or physics engine. The cost of blocking queues and thread switching is too small to be even considered.\nThen again, if you find that a change to this library would yield a performance improvement for some users, I'd be interested in that.. The server is purely non-blocking and number of threads will remain constant. \nThe client, however, currently uses 3 threads per instance. Creating this many client instances in a single application (as opposed to receiving many connections in server) is not typical and I don't see a use case for this (apart from load testing maybe). \nWhat's your reason for creating so many clients?. Hello!\nAre you sure the issue is the message size? I can send a 1GB byte buffer on my computer without problems.\nTo help you, I need a bit more info:\n Are you using this library as server or client (or both)?\n What do you mean by \"byte stream\"? The library allows sending binary data as byte[] or ByteBuffer and receiving it as ByteBuffer\n What software are you using? (library version, Java version, OS/device info)\n Example code which can be used to reproduce the problem. No update, closing.. Hello!\nCan you provide a simple example application (both client and server side) which reproduces the bug? \nAlso, what browser are you using? Firefox and Chrome behave differently when refreshing a page with an active WebSocket connection.. Can you share your benchmark code?. I believe you're looking for the constructor WebSocketClient(URI, Map<String, String>) which accepts a Map containing additional headers you want to pass.. Fixed with #846. Hello!\nPlease use the provided issue template and translate your question to English.. No update; closing this issue!. Hello! Please use the given issue template and clarify your question. Issues without template may be closed.. No update; closing this issue!. Hello! Please clarify your question according to the issue template. Issues without template may be closed.. No information, closing this issue.. Could you reproduce this with Chrome? Thanks!. Interesting... can you give us a link to your client side source code?. I can't reproduce this behaviour. I can successfully upload & download images of size over 40 MB. I'd appreciate if you could post the following details:\n specific image file which causes it to fail\n server side code\n* java version & Java-WebSocket library version. Very strange. I've tried on Java 8 and Java 11; on Chrome 71.0.3578.98, Firefox Quantum 64.0.2 (64-bit), MS Edge with my avatar and loads of other files I could find, but none of them triggered the error.. Looks like it happens only on 1.4.0 (I was previously testing on 1.3.9)! I tested on library version 1.4.0 and it fails reliably. The issue is not related to client side and can be reproduced by sending a byte buffer from JWS client.\n1) When sending a zero-filled buffer of 16376 bytes, everything is normal\n2) When sending a zero-filled buffer of 16377 bytes, the first exception occurs: \n\n[WebSocketWorker-11] ERROR org.java_websocket.server.WebSocketServer - Error while reading from remote connection\njava.nio.BufferUnderflowException\n    at java.nio.Buffer.nextGetIndex(Buffer.java:500)\n    at java.nio.HeapByteBuffer.get(HeapByteBuffer.java:135)\n    at org.java_websocket.drafts.Draft_6455.translateSingleFrame(Draft_6455.java:491)\n    at org.java_websocket.drafts.Draft_6455.translateFrame(Draft_6455.java:645)\n    at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:378)\n    at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:218)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1015)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:997)\n\n3) After this, sending a buffer with 16376 bytes again, the following error happens:\n\n\n```\n[WebSocketWorker-11] ERROR org.java_websocket.WebSocketImpl - Closing due to invalid data in frame\norg.java_websocket.exceptions.InvalidFrameException: Unknown opcode 3\n    at org.java_websocket.drafts.Draft_6455.toOpcode(Draft_6455.java:769)\n    at org.java_websocket.drafts.Draft_6455.translateSingleFrame(Draft_6455.java:476)\n    at org.java_websocket.drafts.Draft_6455.translateFrame(Draft_6455.java:628)\n    at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:378)\n    at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:218)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1015)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:997)\nError from org.java_websocket.WebSocketImpl@64921d13\norg.java_websocket.exceptions.InvalidFrameException: Unknown opcode 3\n    at org.java_websocket.drafts.Draft_6455.toOpcode(Draft_6455.java:769)\n    at org.java_websocket.drafts.Draft_6455.translateSingleFrame(Draft_6455.java:476)\n    at org.java_websocket.drafts.Draft_6455.translateFrame(Draft_6455.java:628)\n    at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:378)\n    at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:218)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1015)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:997)\n\n```\n\n\nand the client is closed.\nIf in step 3 the buffer size is 1, the following error occurs instead:\n\n```\n[WebSocketWorker-11] ERROR org.java_websocket.WebSocketImpl - Closing due to invalid data in frame\norg.java_websocket.exceptions.InvalidFrameException: bad rsv RSV1: false RSV2: true RSV3: false\n    at org.java_websocket.extensions.DefaultExtension.isFrameValid(DefaultExtension.java:64)\n    at org.java_websocket.drafts.Draft_6455.translateSingleFrame(Draft_6455.java:505)\n    at org.java_websocket.drafts.Draft_6455.translateFrame(Draft_6455.java:628)\n    at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:378)\n    at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:218)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1015)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:997)\nError from org.java_websocket.WebSocketImpl@2e92f83c\norg.java_websocket.exceptions.InvalidFrameException: bad rsv RSV1: false RSV2: true RSV3: false\n    at org.java_websocket.extensions.DefaultExtension.isFrameValid(DefaultExtension.java:64)\n    at org.java_websocket.drafts.Draft_6455.translateSingleFrame(Draft_6455.java:505)\n    at org.java_websocket.drafts.Draft_6455.translateFrame(Draft_6455.java:628)\n    at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:378)\n    at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:218)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.doDecode(WebSocketServer.java:1015)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:997)\n```\n. Can you please explain what's happening in the Issue847Test? Why not simply send a large message and test it was received correctly?. Can you attempt to reproduce with latest library version? You're probably observing the effects of bug #847 which lasted from Nov 11, 2018 to Feb 5, 2019.. Hello! \nCan you verify that the problem still happens with version 1.3.9?. Hello!\nCould you provide a sample application which reproduces the issue?. The problem is caused by using a reserved close code 1006 (\"Abnormal Closure\"). The connection will eventually be closed, but only after the timeout interval (default 60 seconds).\nYou should use another close code depending on your reason for closing, for example: 1008 (\"Policy Violation\") or 1011 (\"Internal Error\").\nAlso, it's a good idea to use the constants defined in org.java_websocket.framing.CloseFrame instead of simple integer values.. Make sure WebSocketImpl.DEBUG is not set to true.. By default there should not be any logging visible. If you have added a logger implementation to your project, refer to the configuration format of that logging library. \nFor example, if you are using Logback, you can configure the logging process of this library using \nxml\n<logger name=\"org.java_websocket\" level=\"WARN\"/>. Is there any specific reason why this constructor is private and not public?. Looks like DefaultSSLWebSocketServerFactory closes the  executor service in it's close method. Maybe it should be done here as well. . Are you sure that fixed the code style issue? \ud83e\udd14 Probably meant to put them in separate declarations. ",
    "rydre": "That looks great.  I'll fetch the update and try it out tomorrow.\nThanks @Davidiusdadi.\n. Works perfectly.\nThanks again.\n. ",
    "wangpeng1": "i am a new nood.js,i want to  chat  client and server, you know  at android chient i can use your code,but server what i should to install and how to run it, i want to do myself server side\uff0cbut i do not know  what  first step I need to do\uff0cso i want  you can give me some clue step and step to install and build server.my question is easy,but for me is hard.i hope you can help me.thank you\n. what is you use?\n. at server side,can i use tomcat? if i use iOS socket.io as clite side ,also can use your server?\n. ",
    "jangxx": "What I meant was; If my server runs on example.com only pages from example.com should be allowed to connect. Kind of like the XMLHttpRequest where you can only request data from the domain you loaded the page from. Is that doable?\n. ",
    "fatshotty": "Hello,\nyes maven requires only one xml file named pom.xml.\nBut you should rework on the tree of the project.\nFor example you should have folder like this:\nsrc/main/java where put your source code\nsrc/main/test where put your test classes\nand little things other..\nBut maven gives you (and us) the possibility to manage versions (and the releases) of your projects.\nMoreover, your jars will be always reachable and then used.\nThanks for reply\n. waiting for integration ;)\n. It seems to be not deployed on a remote repo\nAm I missing something?\n. uhm\nit should be 1.0.0 not 1.0.0-SNAPSHOT, imho\nMoreover, I tried to integrate it in my pom, but when I do maven update dependencies it says: 'No dependencies found' for artifact WebSocket.\nWhat I do now is:\n- pull this project in a temporary folder\n- perform maven clean install\n- maven update dependencies from my project folder\nMaybe, in your case, it works because u already have an installed copy of WebSocket in your local repository folder.\nWhat I think is:\nu should do maven release:prepare && maven release:perform. In this way u'll upload the WebSocket on Maven central repo and we'll be albe to get it with maven.\nThanks\n. ",
    "ghillert": "+1 Having the build either be based on Maven or Gradle would be great. That would certainly help a lot with the adoption of your project and would make it easy to push your project into the respective Maven repos. \n. ",
    "brlnguy": "Done. I filed a pull request for this (see #124).\nCheers, Max\n. Did you already manage to upload your artifacts to the repos?\n. Dammit, stupid misclicking fingers...\n. Yes, I saw that one too. That's why I double-checked that I am compiling and running the application both with Java 7.\n. Hm, unfortunately (or not) it really does sound like there might be a problem with the setup on my side. I'll look into it again in more detail when I have more time on my hands.\n. ",
    "adamshone": "Hi David - any update on when this might get uploaded?\nThanks\n. ",
    "timmolter": "+1. Getting the artifacts on Maven Central would be awesome. I just did it for all my OSS projects here: http://xeiam.com/javalibraries.jsp Let me know if you need any help with it. It's pretty straight forward. I see you found the correct how-to page: https://docs.sonatype.org/display/repository/sonatype+oss+maven+repository+usage+guide\nThat's all you should need. You can already get the SNAPSHOT versions up on Sonatype's snapshots repo. \nYou should also get your example code out of src/main and put it in src/test. Otherwise when you build the jar with Maven, it will bundle the example code with it, bloating the jar size.\nPlease let me know if you want help, and I can set things up for you.\n. yes, I'll take a look at it soon. I recently posted this blog that will probably help you out: http://blog.xeiam.com/2013/03/a-practical-guide-to-uploading.html\n. Yes, indeed, the groupid must not be changed now. Make sure to change it back in the pom! (Or should I amend the pull request?)\nIt is a bit confusing at first. I was confused as well. \nGoogle about the release:prepare goal to see what those args are for. Obviously replace the String \"xchange\" with your artifactId. \nhttp://maven.apache.org/maven-release/maven-release-plugin/prepare-mojo.html\nMaven (release:prepare) will do the tagging for you (tag arg), the release version (releaseVersion arg), and increment the snapshot version in your pom (developmentVersion arg). Before running the maven commands, remove your tag and set the version in the pom to 1.3.0-SNAPSHOT. \nAfter setting up gpg, you still need all those params.\n. Check out XChange. The MtGox websocket streaming API is working. It uses the Java-WebSocket lib.\n. @Davidiusdadi Thanks for getting back to us on this issue. I understand and agree that Java-websockets should just be unreliable throwaway objects, and that clients should have a higher-level logic to handle reconnects and such. \nHowever, it would make implementing that higher-level logic much much easier, if there was a way to give java-websockets a timeout param. This would be a nice feature of the library. Perhaps the default could be infinite timeout as it is now, but it could be overridden/specified as @Sikerdebaard demonstrates. Adding this feature would be quite easy, it would help clients out tremendously, and it wouldn't make the library worse in anyway, as far as I can tell.\nWhat do you think about that??\nCheers, Tim\n. ",
    "slnovak": "+1\n:thumbsup: \n. ",
    "samskivert": "I'm willing to help out here as well. It looks like the POM is mostly ready to go.\nTo deploy to Maven Central, you need to register with SonaType and be given access to the org.java-websocket groupId and then do a few things. The detailed instructions on registering and requesting access are here: https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide\nThe simplified guide is:\n(Pardon the weird bullet numbers, otherwise Markdown tries to renumber them and gets it wrong.)\nONE. Create a SonaType account here:  https://issues.sonatype.org/\nTWO. Go to: https://issues.sonatype.org/browse/OSSRH and create a ticket with:\n- Summary: Java-Websocket is a barebones WebSocket client and server implementation written in 100% Java.\n- groupId: org.java-websocket\n- Project URL: http://java-websocket.org\n- SCM URL: https://github.com/TooTallNate/Java-WebSocket\n- Nexus Username: (the username you created)\n- Already Sync To Central : no\n- Description: Nothing, or point them to this issue to demonstrate demand.\n  Then they'll give you access.\nTHREE. You need to create an ~/.m2/settings.xml file with your user info:\n<settings>\n   <servers>\n     <server>\n       <id>sonatype-nexus-snapshots</id>\n       <username>USERNAME</username>\n       <password>PASSWORD</password>\n     </server>\n     <server>\n       <id>sonatype-nexus-staging</id>\n       <username>USERNAME</username>\n       <password>PASSWORD</password>\n     </server>\n   </servers>\n </settings>\nFOUR. You can do the release with the following commands:\nmvn clean install && mvn clean deploy\nmvn release:clean && mvn release:prepare && mvn release:perform\nmvn nexus:staging-close && mvn nexus:staging-promote\n- release:prepare will ask you for the version number of the release version, it looks like the POM is set up for that to be 1.3.0. Then it will ask you for the next snapshot version. That should probably be 1.3.1-SNAPSHOT.\n- staging-close will ask you for a description, put whatever you want, no one reads this\n- staging-promote will ask you want repository to publish to, this should be releases. Don't mess that one up! :)\nYou might be required to sign the artifact before it can be published. If so, you can add this to the POM file (just before the close project tag):\n<profiles>                                                                                                                      \n  <profile>                                                                                                                     \n    <id>release-sign-artifacts</id>                                                                                             \n    <activation>                                                                                                                \n      <property><name>performRelease</name><value>true</value></property>                                                       \n    </activation>                                                                                                               \n    <build>                                                                                                                     \n      <plugins>                                                                                                                 \n        <plugin>                                                                                                                \n          <groupId>org.apache.maven.plugins</groupId>                                                                           \n          <artifactId>maven-gpg-plugin</artifactId>                                                                             \n          <version>1.1</version>                                                                                                \n          <executions>                                                                                                          \n            <execution>                                                                                                         \n              <id>sign-artifacts</id>                                                                                           \n              <phase>verify</phase>                                                                                             \n              <goals>                                                                                                           \n                <goal>sign</goal>                                                                                               \n              </goals>                                                                                                          \n            </execution>                                                                                                        \n          </executions>                                                                                                         \n          <configuration>                                                                                                       \n            <keyname>KEYNAME</keyname>                                                                                          \n          </configuration>                                                                                                      \n        </plugin>                                                                                                               \n      </plugins>                                                                                                                \n    </build>                                                                                                                    \n  </profile>                                                                                                                    \n</profiles>\nYou need to create a GPG key and then replace KEYNAME with the name of your GPG key (which probably will be your email address).\nIf this all sounds crazy complicated and you just want me to handle Maven publishing, I'm happy to take on this responsibility. I don't even need commit access to the main project. I can just fork it, sync up to upstream when the time comes to do a release and then submit a pull request with the two commits and a tag that Maven generates when you do a release. I would just really like to have Java-WebSocket in Maven Central so that my cross-platform game library can pull in the latest release from Maven Central instead of an old copy I published to a separate Maven server ages ago.\n. Oh, it looks like you have a SonaType account and submitted the issue already. So you're partway done. You need to set up your ~/.m2/settings.xml file and possibly create a GPG key, but then doing a release should be as easy as copying and pasting the Maven commands I posted (assuming you're running on Mac or Linux, if not separate out the commands that are joined with &&s).\n. ",
    "Macarse": ":+1: \n. Excellent! it's working :)\nThanks!\n. ",
    "jpaulm": "I started using Java-WebSocket recently for a web sockets application, and as far as I can see 1.3.1 works fine, but 1.3.0 doesn't.  Unfortunately, as far as I can see, 1.3.1 doesn't show up in the central Maven repository, although this issue #118 seems to suggest that this was done.\nI admit I'm a total Maven and Git newbie, but I did manage to put 1.3.1 into a local repository, and build a pom that references it - and my test works!  If I just add a dependency referencing 1.3.0, as described by @Davidiusdadi , it doesn't!  So I'm wondering what the difference is between 1.3.0 and 1.3.1, and whether perhaps there are parameters I can add to 1.3.0 to get the same effect as 1.3.1.  If this is not possible, what is the status of 1.3.1?\nFor background, I can say that I basically followed @TooTallNate  's instructions - and, apart from the Maven problems, they worked great! My pom can be found at https://github.com/jpaulm/javafbp/blob/master/pom.xml .  I can post other information as needed.   TIA\n. Totally agree!  We are trying to build a Maven pom using 1.3.1, and it looks like the best way currently is to use a local repository.  I am a total Maven ignoramus, so I was surprised that I got it working!  Moving the new release to Maven central would simplify things enormously!  TIA \n. OK We have moved to Gradle from Maven - it seems a lot simpler!  However I am still curious why 1.3.1 isn't the \"official\" version, seeing that our test cases work with 1.3.1 and don't with 1.3.0...  1.3.1 doesn't even show up as a release in https://github.com/TooTallNate/Java-WebSocket/releases .  And build.gradle is showing 1.2.1-SNAPSHOT, which presumably is even older!   Could someone clarify the status of the various releases?  @TooTallNate or @Davidiusdadi ...?\n. Many thanks for the prompt feedback, Marcel!  \nI am downloading Java-WebSocket from Maven in my build.gradle - so should I just run that periodically, or is there a way I can get notified about new versions, so I can do a regression test?  \nMerci d'avance!. Thanks @marci4 , that's a good technique.  However, I just realized that my keeping track of new releases doesn't help my users much, as the build.gradle on my project currently downloads the latest version of Java-WebSocket into their runtime library.   This means that, if they do a rebuild before I do one, they will be working with a version that I have not regression-tested against my project.  It seems safest, therefore, for me to hardcode the version number for Java-WebSocket, keep track myself of updates to Java-WebSocket, and just update build.gradle periodically after I have regression-tested the new version of Java-WebSocket.  Do I have this straight?  Or is there a general, cleaner solution?  TIA. Merci @marci4 , of course - that makes sense!  Last question, what did you mean by \"compiled version of the lib\"?  A lib is a lib, non?  \nRegards,\nPaul. Thanks, as always, for your prompt reply!  \nGitHub allows me to store the lib directory on GitHub, and I have updated build.gradle to remove the copyJars function.  Would appreciate it if you could take a quick look at https://github.com/jpaulm/javafbp-websockets , to see if I did it right...?!   I haven't updated Readme yet, but I will publish an updated version after I hear from you!  \nMerci d'avance,\nPaul. Hi @marci4,\nInteresting!  I thought you might mean zipping.\nI also think I screwed up in a different way: please check out my logic:  I had been assuming all along that the user would have to do a gradle build to build the JavaFBP-WebSockets jar file - which then lands up in build.libs.  On the other hand, if we already have two jar files in the lib directory, why not include the JavaFBP-WebSockets jar file in the lib directory.  Then build.gradle can do a copy from build\\libs into lib...?   (build/ is not currently included in the GitHub project online)  Or is there a standard GitHub-ish way of managing the primary jar file...?  TIA. Hi @marci4, got that, and it's a good idea!  But, just to clarify - new users should always do a gradle build at least once - right? That will also build javadoc, etc., so it makes sense!  I will update Readme accordingly!\nWhen you make a change to Java-WebSocket, I should notify them to redo gradle build...?   If I put my project up on Maven, then I guess they could use the Maven listener...\nThanks a million for your patience!\nPaul. Hi @marci4 , things are rolling, so that's great!  Mille remerciments!   \nI think I now tell them to only run build.gradle once...  After that, they never need to again!\nMerci d'avance!. Absolutely!  Many thanks for your help!\nBest regards,\nPaul\nOn Thu, Jul 13, 2017 at 9:09 AM, Marcel Prestel notifications@github.com\nwrote:\n\nHello @jpaulm https://github.com/jpaulm,\nis it fine for you that I close this issue?\nGreetings\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/522#issuecomment-315072769,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AATGJ0SYswX8Kj_VG5c0j1fJm4NOuqrTks5sNhbxgaJpZM4ORydf\n.\n. \n",
    "jasminsehic": "See issue #252 for a Clojars repository alternative\n. @TooTallNate and @Davidiusdadi I've added a pull request: #298 that adds a Leiningen project that makes it relatively easy to build and deploy Java-WebSocket jar to clojars.org repository until Maven issues are sorted out. I've pushed up 1.3.1 to Clojars.org myself for time being and you can see commit 05d2e2e jar at https://clojars.org/org.java-websocket/java-websocket labeled as version 1.3.1. \nPlease let me know your Clojars.org usernames and I will add you as project members there. For others you can add http://clojars.org/repo as an external Maven repository to start using version 1.3.1\n. @marci4 I have added you to Clojars. ",
    "edwardotis": "Please put this library in maven central. Many thanks!\n. ",
    "stiletto": "Yes, the problem is reproducible. I use only unencrypted connections and\nonly receive messages. There were no stacktraces during hang.\nSorry, my \"fix\" was complete bullshit and worked only because it throwed an\nexception that interrupted io-loop.\nI will try to find real solution tomorrow.\n. ",
    "flashmandv": "Well, I'm not using server.stop() at all. Also onError does not outputs this, it is like jeneral java error in System.err \nI though this happens only when the writing to channel thread gets interrupted to handle other request (and the writing one fails)..but now I'm not sure :(  So it is not possible to be happening because of WebServer internal library interrupt ?\nThanks,\nDeyan\n. Thanks! This bug happens almost every day for me :(( I'm running server with at least 100 users at same time and it I see the error quite often.\n. Thanks, I'll  upload it tomorrow and will tell you in couple of days if is OK.\n. This is now fixed, but another issue appear - every time when \"No route to host\" exception or \"Connection reset by peer\" or \"Connection timed out\" exception is thrown - the connection gets closed\n. ",
    "mortan": "Hi, I just got the same exception and have no clue why it occurred... Maybe this is also related to this?\n[WebsocketSelector21] ERROR JsonWebSocketServer (JsonWebSocketServer.java:64)- error\njava.lang.InterruptedException\n        at java.lang.Object.wait(Native Method)\n        at java.lang.Thread.join(Thread.java:1258)\n        at java.lang.Thread.join(Thread.java:1332)\n        at org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:205)\n        at org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:219)\n        at org.java_websocket.server.WebSocketServer.handleFatal(WebSocketServer.java:431)\n        at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:376)\n        at java.lang.Thread.run(Thread.java:722)\n. Hi David! Actually the message above should exactly contain this (?), the output comes from this code:\njava\n@Override\npublic void onError(WebSocket webSocket, Exception e) {\n    logger.error(\"error\", e);\n}\nWhere logger.error refers to Log4J. Let me know if I can provide something useful to you.\nRegards,\nFabian\n. That's right, well spotted!\n2012-11-13 20:53:14,632 [WebsocketSelector21] ERROR JsonWebSocketServer (JsonWebSocketServer.java:64)- error\njava.util.ConcurrentModificationException\n        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:894)\n        at java.util.HashMap$EntryIterator.next(HashMap.java:934)\n        at java.util.HashMap$EntryIterator.next(HashMap.java:932)\n        at ClientConnector.disconnectClient(ClientConnector.java:145)\n        at JsonWebSocketServer.onClose(JsonWebSocketServer.java:33)\n        at org.java_websocket.server.WebSocketServer.onWebsocketClose(WebSocketServer.java:482)\n        at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:412)\n        at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:420)\n        at org.java_websocket.WebSocketImpl.eot(WebSocketImpl.java:434)\n        at org.java_websocket.SocketChannelIOHelper.read(SocketChannelIOHelper.java:15)\n        at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:326)\n        at java.lang.Thread.run(Thread.java:722)\nI'm feeling kinda ashamed now to have wasted your time because I fixed that error (I was removing an entry from a HashMap while iterating over it -- duh) already. I was wondering why I couldn't connect to my server and saw the InterruptedException on my terminal but didn't pay attention to the ConcurrentModificationException or the time (the InterruptedException wasn't even related to the connection issue as it seems).\nThanks for clearing that up and sorry again! :>\nWish you a good evening!\n. ",
    "qqsbunny": "sorry sorry sorry ,\ni left internet for a long time.\n. ",
    "apuder": "Thanks for your response. A few more details:\n- please note that I'm instantiating MyWebSocket (derived from WebSocketServer) twice. start() and stop()\n  are invoked on different MyWebSocket instances.\n- I'm running this on Android. There is a delay of several seconds between the first stop() and the second start().\n  I've noticed that after calling stop() the first time (and before calling the second start()) there are still two\n  threads (WebSocketWorker and WebSocketSelector). I assumed that those threads would get killed when\n  calling stop().\n- I thought that the problem might be related to the fact that the Linux kernel keeps the port marked as used.\n  I added a call to socket.setReuseAddress(true); in WebSocketServer but that didn't fix the problem. But I believe\n  that setReuseAddress to true is a good idea nonetheless.\nArno\n. thanks for the info. Multiple start() and stop() on the same WebSocketServer instance should work though, correct? Why does netstat still show the port in use after calling stop()?\n. your latest changes have a pretty dramatic effect: it seems to hang in WebSocketServer.stop() (when trying to close for the first time). Here some stack traces in case this helps:\nDALVIK THREADS:\n(mutexes: tll=0 tsl=0 tscl=0 ghl=0 hwl=0 hwll=0)\n\"main\" prio=5 tid=1 WAIT\n  | group=\"main\" sCount=1 dsCount=0 obj=0x4001f1a8 self=0xce48\n  | sysTid=2271 nice=0 sched=0/0 cgrp=default handle=-1345006528\n  | schedstat=( 4751045474 1572931158 372 )\n  at java.lang.Object.wait(Native Method)\n- waiting on <0x4053e2f0> (a java.lang.VMThread)\n  at java.lang.Object.wait(Object.java:358)\n  at java.lang.Thread.join(Thread.java:914)\n  at org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:184)\n\"WebsocketSelector12\" prio=5 tid=11 NATIVE\n  | group=\"main\" sCount=1 dsCount=0 obj=0x4053e1b0 self=0x2e92f0\n  | sysTid=2281 nice=0 sched=0/0 cgrp=default handle=3050616\n  | schedstat=( 42404002 87309011 18 )\n  at org.apache.harmony.luni.platform.OSNetworkSystem.selectImpl(Native Method)\n  at org.apache.harmony.luni.platform.OSNetworkSystem.select(OSNetworkSystem.java:90)\n  at dalvik.system.BlockGuard$WrappedNetworkSystem.select(BlockGuard.java:368)\n  at org.apache.harmony.nio.internal.SelectorImpl.selectInternal(SelectorImpl.java:220)\n  at org.apache.harmony.nio.internal.SelectorImpl.select(SelectorImpl.java:180)\n  at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:260)\n  at java.lang.Thread.run(Thread.java:1019)\n\"WebSocketWorker-11\" prio=5 tid=10 WAIT\n  | group=\"main\" sCount=1 dsCount=0 obj=0x4053d8a8 self=0x2ae0d8\n  | sysTid=2280 nice=0 sched=0/0 cgrp=default handle=3052072\n  | schedstat=( 2134000 5026000 4 )\n  at java.lang.Object.wait(Native Method)\n- waiting on <0x4053e0d0> (a java.lang.VMThread)\n  at java.lang.Thread.parkFor(Thread.java:1424)\n  at java.lang.LangAccessImpl.parkFor(LangAccessImpl.java:48)\n  at sun.misc.Unsafe.park(Unsafe.java:337)\n  at java.util.concurrent.locks.LockSupport.park(LockSupport.java:157)\n  at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2016)\n  at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:411)\n  at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:559)\n. ",
    "leggetter": "Awesome. Thanks for the info @Davidiusdadi.\n. It also has a security flaw\nhttp://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-5814\n. @Davidiusdadi I was hoping you guys would know :)\nI think @unit51 has the solution with http://blog.antoine.li/2010/10/22/android-trusting-ssl-certificates/\n. > If you only want a subset of the features in your final jar, for example if\n\nyou don't need the server, then we could build that into the existing maven\nor ant scripts.\n\nOk, thanks. We'll consider that.\n\nHave you experienced problems on android with Java-Websockets? Can you tell\nme a little about your own experience with pusher. Is it fast & easy...?\n\nWe haven't kicked off the project yet. But I'll make sure that we share any findings.\n. I've had feedback that it's possible to work around this. All I have (they can't supply the code) is:\n\nWhat you need to do is to make use of X509TrustManager and initiate SSLContext\n\nSo, this is outside of Java_WebSocket:\nhttps://github.com/pusher/pusher-java-client/blob/v0.1.0-beta.1/src/main/java/com/pusher/client/connection/websocket/WebSocketClientWrapper.java#L31\nBut, this may be useful information for others.\n. ",
    "Joris-van-der-Wel": "haha, ok thanks\n. I think you forgot to change something in that patch\n. Looks good\n. Thanks.\nI was actually already creating a new one for every connection in my own code so that it matches what the constructor does.\nThis was by accident because I wrote my own WebSocketServer class so that the library would work in conjunction with an existing http server.\n. Ah, I was using it to add some meta data to each WebSocket (by extending WebSocketImpl) for both client and server. This was easier to implement than a WeakHashMap, and the usage of abstract factories is in my opinion cleaner.\nI would prefer not to lose abstract factories, but I can use a WeakHashMap if needed (the performance difference would be probably be minor in my case).\nI would also be helped by a simple empty Object reference I can use to store stuff in, but that might be considered less clean.\n. Unless something else is going on, this seems to be a well known issue that is unrelated to websockets. \nTCP itself does not drop connections after a timeout by default, the only way to know if your connection is still alive is by sending data.\nHowever a lot of firewalls, routers, et cetera, drop TCP connections if no data has been sent for a while. The only way to get around this is to send some data yourself from time to time.  (also see http://stackoverflow.com/questions/3907537/keep-alive-tcp-ip-connected-sockets-over-the-internet-when-how-and-how-much/5149662#5149662 )\nThe WebSocket protocol provides a ping operation that lets you do this ( http://tools.ietf.org/html/rfc6455#section-5.5.2 ), but you could also accomplish this in your application protocol. Using ping in the WebSocket protocol might be more convenient because it requires no changes in your application protocol.\nThis library implements ping and pong, but it does not provide a convenient single method to send pings, it does provide ping/pong listeners. This is how you send a Ping operation: \njava\nvoid sendPing(WebSocket conn)\n{\n        conn.sendFrame(new FramedataImpl1(Opcode.PING));\n}\nAfter you do this, the other party will immediately reply with a pong.\nWhat you could do is:\n1. Keep a variable that stores the last time you received a message. You set this variable by implementing and overriding the methods in WebSocketListener/WebSocketAdapter such as onWebsocketMessage, onWebsocketPing, onWebsocketPong, onWebsocketOpen.\n   In your main loop, whenever this variable older than X seconds (maybe a few minutes?), you can assume the connection is dead.\n2. In your main loop, Send a Ping every X seconds (maybe 30?)\n. As long as it is optional, java-websocket would seem to be the right place to me yes. Or at least make it easier to implement, for example by adding a few methods on the WebSocket interface:\n- getter that returns the time (nanoTime) that the readyState was last changed (so that you can handle connect timeouts)\n- getter that returns when the last message was sent\n- getter that returns  when the last message was received\n- getter that returns WebSocket.Role so that you can find out if we are a server or client (this is very useful if you are making a library on top of the java-websocket lib)\n- a sendPing() method\n. Client and server should be able to send a ping. If a pong reply is not sent, there is either a bug in this library or my example code (which I did not test :smiling_imp:). \nYou could test this stuff with wireshark. Look here to figure out what the frames look like: https://tools.ietf.org/html/rfc6455#section-5.2\nSo a ping frame should start with the byte 0x89, a pong frame should start with the byte 0x8A.\n. Could you try this instead:\njava\nvoid sendPing(WebSocket conn)\n{\n        FramedataImpl1 frame = new FramedataImpl1(Opcode.PING);\n        frame.setFin(true);\n        conn.sendFrame(frame);\n}\nI had expected fin to be set by default, but it is not.\n. You could try using gist if there are not too many files https://gist.github.com/\nOr you could just create a repo for yourself (you can always remove it later)\nAnyway, I made a lightweight http server in java a while back that serves files. It integrates with this library.\nIt supports:\n- Serving static files using multiple routes\n- If-Modified-Since\n- Range\n- Mime types\n- Directory index using index.html & index.txt\n- Single thread for downloads\n- Java-WebSocket (upgrade header)\nIt was intended to be part of a game server so that the client is able to easily download asset files. I can share the code if anyone is interested.\n. Here you go: https://github.com/Joris-van-der-Wel/WSHttpServer\nI released it under the same license as the Java-WebSocket library.\n. Thanks.\nThe primary reason why I handle the downloads in a separate thread, is to make sure downloads do not affect the latency (as much) of websocket messages. It was intended for a multiplayer game thats lets people run their own servers.\n. Is it really hanging on select()? (which is okay if there is nothing interesting happening)\nOr is it going through the loop in WebSocketServer.java:302 very very often?\nIf the latter case is true, I am guessing this could be because i.remove() is not called often enough, and the same keys keep getting returned by selector.selectedKeys().\n. See https://github.com/TooTallNate/Java-WebSocket/issues/213\n. You could look at this issue from the perspective of TCP or websocket:\nTCP\nLook at WebSocketServer.java:330, basically what is happening there is that it reads up to \"buf.remaining()\" bytes at once. (The size of \"buf\" is WebSocketImpl.RCVBUF = 16384 bytes).\nYou could use this to close a connection if it sends too many bytes too fast (you have to be really careful you do not kick legitimate clients though). \nWebSocket\nThis is a little more tricky. Here's a figure of what a WebSocket frame looks like:\n```\n      0                   1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-------+-+-------------+-------------------------------+\n     |F|R|R|R| opcode|M| Payload len |    Extended payload length    |\n     |I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |\n     |N|V|V|V|       |S|             |   (if payload len==126/127)   |\n     | |1|2|3|       |K|             |                               |\n     +-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +\n     |     Extended payload length continued, if payload len == 127  |\n     + - - - - - - - - - - - - - - - +-------------------------------+\n     |                               |Masking-key, if MASK set to 1  |\n     +-------------------------------+-------------------------------+\n     | Masking-key (continued)       |          Payload Data         |\n     +-------------------------------- - - - - - - - - - - - - - - - +\n     :                     Payload Data continued ...                :\n     + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +\n     |                     Payload Data continued ...                |\n     +---------------------------------------------------------------+\n```\nThe most simple way of sending data in WebSocket is an unfragmented data/text frame (0x1 / 0x2). In this case you could close the connection if the payload is too large (before actually parsing the payload)\nThe other method is sending fragmented data. In this case the data is broken up into multiple frames, but you do not know the full size of the data until you have received it all (you do know the size of the individual frames). \nAt the moment, this library does not appear to reconstruct fragmented messages automatically (it calls listener.onWebsocketMessageFragment instead of listener.onWebsocketMessage). So you could solve this in the same way as unfragmented messages: close the connection if the payload is too large, before parsing the frame.\nFor this, look at Draft_10.java:342. There you can see there already is a maximum payload size of 2GiB (if exceeded, the connection is closed with code 1009). You could modify that so that it uses a variable you can set instead of a constant. So that you could do something like:\njava\nDraft draft = new Draft_17(); // RFC 6455\ndraft.setMaximumPayloadSize(4 * 1024 * 1024); // Max 4 MiB per frame\nWebSocketServer server = new MyWebSocketServer(new InetSocketAddress(\"0.0.0.0\", 80), Arrays.asList(draft));\nNote that there are also other drafts which would need a similar patch.\n. Yes, look at LimitExedeedException.java\n. You can use WebSocketClient on a server too. When you call connect() on a WebSocketClient object, it spawns 2 threads which handle all the reading and writing. (So make sure you properly lock stuff / make use of queue's, since all listener methods such as onMessage are called from these threads).\nI am not sure what you mean by dynamically generating and destroying clients.\n. You would have to create a new instance of WebSocketClient for each connection attempt. connect() can only be called once.\nDo note that this lib is not very efficient if you have a lot (hundreds/thousands) of connections open as a client, since it spawns 2 threads for each.\nAlso note that a connection might time out, you have to check for this yourself. See https://github.com/TooTallNate/Java-WebSocket/issues/213\nI use a WeakHashMap<WebSocket, MyWebSocketData> to store meta data about each websocket connection so that I can do things like detect which one has not received/sent data recently and should be pinged or closed. (MyWebSocketData is my own class, not part of this lib)\n. In WebSocketClient there is one thread for reading (WebSocketClient.run()) which blocks on InputStream.read() (line 184). This causes the thread to sleep until more data available on the tcp socket.\nThe thread for writing blocks on BlockingQueue.take() (line 351). This causes the thread to sleep until something is put in the queue.\nThe server uses non blocking sockets, and uses a constant amount of threads (number of processors+1), irregardless of the number of clients that have connected to it.\nIt would indeed be possible to handle both c2s sockets and s2c sockets in the same loop using non-blocking sockets. But you would have to rewrite the classes WebSocketServer and WebSocketClient (which you could do in your project without changing the library itself).\n. How are you measuring memory? This is hard in java. E.g. the value in your task manager is not the right value to measure this kind of thing.\nFor example, if you stop using an object, it might be along while before the memory it used is really reclaimed. It might even never be reclaimed until java terminates. It could be reused for different objects.\nThis is related to why creating plain objects on the heap in java can be much faster than in for example c++.\n. I have not done this in a while, but you can run a profiler to figure out how much is really being used.\nIn netbeans you run the project with the profiler (alt-f2) and then you can select memory on the left. There are also command line tools you can use (e.g. google for HeapDumpOnCtrlBreak and jhat)\n. Well. In TCP unless a peer explicitly closes the connection (which apparently the ipad does not do), you can not know if a connection still exists unless you actually try to use it.\nSo what you could do is: timeout the connection (close it) if you have not received data in a while, and send a ping request every once in a while (which websocket has built in).\nAlso see #213\n. ",
    "hanxue": "The javadocs are excluded on purpose. If you look at .gitignore, the /doc/ directory is excluded. https://github.com/TooTallNate/Java-WebSocket/blob/master/.gitignore\nYou can generate it anytime by running ant doc. If you want an online copy, I have a javadocs branch https://github.com/hanxue/Java-WebSocket/tree/javadocs/doc\n. Are you looking for src/main/example at https://github.com/TooTallNate/Java-WebSocket/tree/master/src/main/example\n. @yellowiscool no worries, I am also a fellow user of Java-WebSocket. Questions are always welcomed on Github. Have fun!\n. ",
    "jk-5": "Nevermind, old java_websocket version. Sorry for the incovience!\n. I'm working on Mac OS 10.8.2, so not android\nThe stack trace belongs to the server\nI've experienced this problem with all the packets to the clients. All these messages are sent with WebSocket.send(data);\n. Okay, I'll build it and try it out tonight\n. Thanks! This change made my application more reliable, and now it just works. Thanks for helping me out.\n. After doing some more research into this problem, it seems that this problem is only happening when the socket is closed by closing the browser. When you use WebSocket.close() in javascript, it closes just fine, no crashes, no log spamming.\n. ",
    "py8765": "Thks :)\n. ",
    "jeremyhahn": "Thanks for your feedback, David.\nWill you please elaborate on \"a connection is identified by the websocket object itself\"? Do you have an example of this? Are you looping over WebSocketServer.connections() and using .equals(this)? That seems expensive compared to a protected socketId field, no? I also don't see equals() being overridden in any of the base classes. Are we relying on the default Object.equals for this comparison?\nI suppose I could create my own factory/impl, but it seems counter-productive to require anyone needing to distinguish between different sockets to have to do this. Why not just bake it into the base WebSocket class as a protected field?\n. I guess we can start simple by having my WebSocketServer extension class receive a message inside onRead and then echo it right back to the client. I might have 10 clients connected, so I need the client and server to agree on a connection identifier so they can communicate back and forth.\nOnce that is working, I want to add a routing class to parse the HTTP request header and route the request to a service class. I assume I will need to pass the WebSocket object or some sort of an identifier so the service is able to look up the connection so it can respond.\n. I was aware of the WebSocket being passed as the first parameter, however, there is no identifier that can be associated on the client with the WebSocket. I think I see what you're saying about storing the protocol/session data  in the factory. I'll give that a shot - thanks!\n. ",
    "l15k4": "@Davidiusdadi I think that @jeremyhahn's point was that you cannot rely on Object#hashCode and Object#equals don't change even within one jvm execution. There is a general rule that it should not change within single jvm execution but because it's a native implementation representing a pointer to the object in memory, it is not 100%, thus storing objects in a HashSet without having it's own equals/hashCode implementation is probably not a good idea. Another implementation on the other hand would mean O(n) complexity on search and remove... Therefore I believe that having a unique websocket identifier would be ideal for a chat application for instance, where you need to keep track of WebSockets belonging to the same room, so you can push messages to the right clients only...\n. I'm wondering if there is a way of webSocket connection unique identification. Keeping webSocket instances in a List makes it O(n) for search/remove and one cannot rely on Object#equals and Object#hashCode when using HashMaps.\n. ",
    "volvorc": "The server is also use this websocket jar, and I did not set draft , so it should be the default.\nThis problem leads to the client's consumption of system resources.\n. yes, so now i just close channel at websocletclient function close, its just a  facile solution\n. ",
    "unit51": "I got the same issue ;)\n. I think i have another issue. After sending something to the server. Everythings stops and i get:\n12-18 14:50:12.234: D/dalvikvm(2445): GC_CONCURRENT freed 355K, 7% free 8381K/8972K, paused 2ms+16ms, total 42ms\n12-18 14:50:14.364: D/dalvikvm(2445): GC_CONCURRENT freed 397K, 7% free 8375K/8972K, paused 3ms+2ms, total 32ms\n12-18 14:50:16.464: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 3ms+2ms, total 32ms\n12-18 14:50:18.574: D/dalvikvm(2445): GC_CONCURRENT freed 386K, 7% free 8375K/8972K, paused 3ms+2ms, total 21ms\n12-18 14:50:20.674: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 2ms+3ms, total 23ms\n12-18 14:50:22.774: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 2ms+2ms, total 21ms\n12-18 14:50:24.874: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 3ms+2ms, total 22ms\n12-18 14:50:26.974: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 2ms+2ms, total 21ms\n12-18 14:50:29.064: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 3ms+1ms, total 22ms\n12-18 14:50:31.164: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 3ms+3ms, total 22ms\n12-18 14:50:33.264: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 2ms+2ms, total 20ms\n12-18 14:50:35.344: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 2ms+1ms, total 21ms\n12-18 14:50:37.434: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8375K/8972K, paused 3ms+3ms, total 22ms\n12-18 14:50:39.474: D/dalvikvm(2445): GC_CONCURRENT freed 381K, 7% free 8383K/8972K, paused 3ms+2ms, total 32ms\n12-18 14:50:41.504: D/dalvikvm(2445): GC_CONCURRENT freed 388K, 7% free 8381K/8972K, paused 3ms+3ms, total 22ms\n12-18 14:50:43.554: D/dalvikvm(2445): GC_CONCURRENT freed 389K, 7% free 8381K/8972K, paused 2ms+1ms, total 20ms\nCan you give an advice? The response should be a big json object.\n. 12-18 15:23:56.564: I/io.socket(6890): > 5:2+::{\"args\":[{\"radius\":5,\"longitude\":8.2224977,\"latitude\":53.1430179}],\"name\":\"getChatsAroundMe\"}\n12-18 15:23:56.564: I/System.out(6890): send frame: Framedata{ optcode:TEXT, fin:true, payloadlength:99, payload:[53, 58, 50, 43, 58, 58, 123, 34, 97, 114, 103, 115, 34, 58, 91, 123, 34, 114, 97, 100, 105, 117, 115, 34, 58, 53, 44, 34, 108, 111, 110, 103, 105, 116, 117, 100, 101, 34, 58, 56, 46, 50, 50, 50, 52, 57, 55, 55, 44, 34, 108, 97, 116, 105, 116, 117, 100, 101, 34, 58, 53, 51, 46, 49, 52, 51, 48, 49, 55, 57, 125, 93, 44, 34, 110, 97, 109, 101, 34, 58, 34, 103, 101, 116, 67, 104, 97, 116, 115, 65, 114, 111, 117, 110, 100, 77, 101, 34, 125]}\n12-18 15:23:56.564: I/System.out(6890): write(105): {\ufffd\ufffd#a;\u000b\u0016[    \u0019[@)B\u0013\\x\u0001[`p\u0001\u0013ZoJ\u0014H)\u0019T\u0017)O\u000eUlJ\u0015NoFC\u00013\nS   9\u0017X\f<\u000fCWjW\bO~G\u0004\u00191\u0016R\u0015:\u0017R\u000b:\u0014XFV\u000fCUjN\u0004\u00191\u0001\u0006^\u007f`  Z\u007fP IdV\u000f_FFCF}\nand then the log is going crazy with \"GC_CONCURRENT\"\nThe server is fine. The iPhone App sending 'getChatsAroundMe' and is getting an result.\nOther requests are working too. Maybe the response is to \"big\"? \nEdit:\nWhen the response is \"smaller\" everything works. So what is the problem? Memory leak?\n. btw: im using the default SSLContext\nSSLContext.getInstance(\"Default\")\n. Thread <22> Thread-14614 \n    SSLSocketChannel2.(SelectionKey, SSLEngine, ExecutorService) line: 66 \n    DefaultSSLWebSocketClientFactory.wrapChannel(SelectionKey, String, int) line: 39\n    WebsocketTransport(WebSocketClient).finishConnect(SelectionKey) line: 303\n    WebsocketTransport(WebSocketClient).interruptableRun() line: 246\n    WebsocketTransport(WebSocketClient).run() line: 202 \n    Thread.run() line: 856  \nSSLSocketChannel2\nsc.write( wrap( emptybuffer ) );// initializes res\n. btw: im using socket.io-java-client and the latest version of Java-Websocket\nServer is: https://f1eld.com\n. when im using \nSSLContext.getInstance(\"TLS\",\"HarmonyJSSE\");\nthe classes match but the client dont connect\n. When im using http://code.google.com/p/weberknecht/ everything works ;3\nHmmm\n. I think so\nhttp://code.google.com/p/weberknecht/source/browse/trunk/src/main/de/roderick/weberknecht/WebSocketConnection.java\nSocketFactory factory = SSLSocketFactory.getDefault();\nsocket = factory.createSocket(host, port);\n. the problem is that weberknecht is really slow. Per request like 10-15 seconds.\nIs there any other websocket library? :/ \n. As i said with\njava\n     SSLContext sslContext = SSLContext.getInstance(\"TLS\", \"HarmonyJSSE\");\nthe classes match (org.apache.harmony.xnet.provider.jsse.SSLSessionImpl)\nThis is my SSLContext creation\n``` java\nfinal KeyStore keyStore = KeyStore.getInstance(\"BKS\");\nkeyStore.load(Application.getAppContext().getResources().openRawResource(R.raw.field), \"123456\".toCharArray());\nfinal KeyManagerFactory keyManager = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\nkeyManager.init(keyStore, null);\nfinal TrustManagerFactory trustFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\ntrustFactory.init(keyStore);\nSSLContext sslContext = SSLContext.getInstance(\"TLS\", \"HarmonyJSSE\");\nsslContext.init(keyManager.getKeyManagers(), trustFactory.getTrustManagers(), null);\n```\nIm creating a BKS key store with the certs ( http://blog.antoine.li/2010/10/22/android-trusting-ssl-certificates/ )\nHTTPS Connect to server (Socket.io Handshake)\njava\nurl = new URL(IOConnection.this.url.toString() + SOCKET_IO_1);\nconnection = url.openConnection();\n((HttpsURLConnection) connection).setSSLSocketFactory(sslContext.getSocketFactory());\nInputStream stream = connection.getInputStream();\nAfter the getInputStream ill get an java.lang.NullPointerException and no other informations\nany idea what im doing wrong?\n. rewrote the socket.io handshake part\njava\nDefaultHttpClient client = new IOHTTPClient(Application.getAppContext());\nHttpGet get = new HttpGet(IOConnection.this.url.toString() + SOCKET_IO_1);\n// Execute the GET call and obtain the response\nHttpResponse getResponse = client.execute(get);\nHttpEntity responseEntity = getResponse.getEntity();\nInputStream stream  = responseEntity.getContent();\nnow everything works! and fast! :)\nphew \n. Yes im using Java-Websocket now :)\nWith the help from http://blog.antoine.li/2010/10/22/android-trusting-ssl-certificates/ \ni got it working.\n. ",
    "z4ce": "Does anyone know why using the \"HarmonyJSSE\" provider is necessary when using this library on android? From what I can tell the library doesn't do anything to specifically require not using the default provider, but obviously it is required for some reason..\n. ",
    "szczepaan": "Hey,\nbelow code worked for Android 4.x.x (also Kitkat), and stopped working on Lollipop\nSSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getInstance(\"TLS\");\n            sslContext.init(null, null, null); // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        } catch (KeyManagementException e) {\n            e.printStackTrace();\n        }\n        mWebSocketClient.setWebSocketFactory(new DefaultSSLWebSocketClientFactory(sslContext));\nmWebSocketClient.connect();\nI dont get any error, it just doesnt connect to wss server, onOpen() is never called :/\nPlease help\n. Are You using the same code as mine and WSS ?\n\nmWebSocketClient = new WebSocketClient(uri, new Draft_17()) \n\nLG Nexus 5\n. ",
    "alexey-potapov": "I faced 100% similar issue. Please help!\n. ",
    "simongladkoskok": "I faced exactly same problem. need help please\n. ",
    "douglasjunior": "I could make it work! I am using GlassFish 4 with default SSL certificate.\nI created my SSLContext in MyApplication class.\nLike this:\n``` java\npublic class MyApplication extends Application {\nprivate static SSLContext sc;\n\nstatic {\n    TrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {\n        public java.security.cert.X509Certificate[] getAcceptedIssuers() {\n            return new java.security.cert.X509Certificate[]{};\n        }\n\n        public void checkClientTrusted(X509Certificate[] chain,\n                                       String authType) throws CertificateException {\n        }\n\n        public void checkServerTrusted(X509Certificate[] chain,\n                                       String authType) throws CertificateException {\n        }\n    }};\n\n    KeyManager[] keyManager = null;\n    try {\n        final KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());\n        KeyManagerFactory factory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n        factory.init(keyStore, null);\n        keyManager = factory.getKeyManagers();\n    } catch (NoSuchAlgorithmException e) {\n        e.printStackTrace();\n    } catch (UnrecoverableKeyException e) {\n        e.printStackTrace();\n    } catch (KeyStoreException e) {\n        e.printStackTrace();\n    }\n\n    try {\n        sc = SSLContext.getInstance(\"TLS\");\n        sc.init(keyManager, trustAllCerts, new java.security.SecureRandom());\n        HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n\npublic static SSLContext getSSLContext() {\n    return sc;\n}\n\n}\n```\nAnd when creating my WebSocketClient:\n``` java\n            Log.i(\"Websocket\", \"Instanciando websocket\");\n            URI uri;\n            try {\n                uri = new URI(\"wss://192.168.254.105:8181/MyServerSocket/test\");\n            } catch (URISyntaxException e) {\n                e.printStackTrace();\n                return;\n            }\n        mWebSocketClient = new WebSocketClient(uri, new Draft_17()) {\n\n            @Override\n            public void onOpen(ServerHandshake serverHandshake) {\n                Log.i(\"Websocket\", \"onOpen: \" + serverHandshake.getHttpStatus() + \" \" + serverHandshake.getHttpStatusMessage());\n            }\n\n            @Override\n            public void onMessage(String s) {\n                Log.i(\"Websocket\", \"onMessage: \" + s);\n            }\n\n            @Override\n            public void onClose(int i, String s, boolean b) {\n                Log.i(\"Websocket\", \"onClose: \" + i + \" \" + s);\n            }\n\n            @Override\n            public void onError(Exception e) {\n                Log.i(\"Websocket\", \"onError: \" + e.getMessage());\n            }\n        };\n        WebSocketClient.WebSocketClientFactory factory = new DefaultSSLWebSocketClientFactory(MyApplication.getSSLContext());\n        mWebSocketClient.setWebSocketFactory(factory);\n        mWebSocketClient.connect();\n\n```\nI hope it works for you.\n. On Server I'm using Java EE 7. My Endpoint.\n``` java\n@ServerEndpoint(\"/test\")\npublic class TestEndpoint {\n@OnOpen\npublic void onOpen(Session s) {\n    System.out.println(\"websocket.onOpen: \" + s);\n}\n\n@OnClose\npublic void onClose(CloseReason c) {\n    System.out.println(\"websocket.onClose: \" + c.toString());\n}\n\n@OnError\npublic void onError(Throwable t) {\n    System.out.println(\"websocket.onError: \" + t.getMessage());\n    t.printStackTrace();\n}\n\n@OnMessage\npublic String onMessage(String message) {\n    System.out.println(\"websocket.onMessage: \" + message);\n    return \"Received on Server: \" + message;\n}\n\n}\n```\n. If using current devlopment version, change this:\njava\nWebSocketClient.WebSocketClientFactory factory = new DefaultSSLWebSocketClientFactory(MyApplication.getSSLContext());\nmWebSocketClient.setWebSocketFactory(factory);\nmWebSocketClient.connect()\nFor this:\njava\nmWebSocketClient.setSocket(HttpsURLConnection.getDefaultSSLSocketFactory().createSocket());\nmWebSocketClient.connectBlocking();\n. I had this problem in version 1.3.0. \nI downloaded the current source code and put into my project, problem solved.\n. I did a git Clone. But that was a long time ago, I dont know how it is now.\n. Try change to:\njava\n    @OnMessage\n    public String onMessage(String message) {\n        System.out.println(\"<< Server got message: \" + message);\n        String response = someLogic(message);     \n        return response;        \n    }\n. Try different connection ports. Maybe there is a range of ports that antivirus permits.\n. First take a look at this explanation. https://github.com/TooTallNate/Java-WebSocket#wss-support\nSee my example here https://github.com/TooTallNate/Java-WebSocket/issues/141#issuecomment-149303289\nI hope it helps.\n. ",
    "oakkitten": "@douglasjunior upgrade to java 7 and squash them catches tho\n. just writing to confirm that this has been resolved. just writing to confirm that this has been resolved. thanks for the awesome work, you rock!. i'm seeing this problem again, on 1.3.7 and 1.3.9. here's how i connect\nlogger.warn(\"CONNECTING\");\ntry {\n    client.connectBlocking()\n} finally {\n    logger.warn(\"CONNECTING END\");\n}\n\nhere's how i disconnect\nconnector.interrupt();\nlogger.warn(\"CLOSING CLIENT\");\ntry {\n    client.closeBlocking();\n} catch (InterruptedException e) {\n    e.printStackTrace();\n}\nlogger.warn(\"CLOSING CLIENT END\");\n\nlog output\n12:01:51.213 W/\ud83d\udc36: con2 : WebSocketConnection CONNECTING\n\nhere i press disconnect\n\n12:01:51.310 W/\ud83d\udc36: do2  : WebSocketConnection CLOSING CLIENT\n12:01:51.646 D/\ud83d\udc31: con2 : SSLHandler: Server is trusted by system\n12:01:51.662 W/\ud83d\udc36: con2 : WebSocketConnection CONNECTING END\n12:01:51.664 I/System.out: write(153): {GET /endpoint HTTP/1.1\n12:01:51.664 I/System.out: Connection: Upgrade\n12:01:51.664 I/System.out: Host: host\n12:01:51.664 I/System.out: Sec-WebSocket-Key: rBtC3umk7cczp80hnF67rw==\n12:01:51.664 I/System.out: Sec-WebSocket-Version: 13\n12:01:51.664 I/System.out: Upgrade: websocket\n12:01:51.664 I/System.out: }\n12:01:51.679 I/System.out: process(181): {HTTP/1.1 101 Switching Protocols\n12:01:51.679 I/System.out: Server: nginx\n12:01:51.680 I/System.out: Date: Fri, 02 Nov 2018 10:01:53 GMT\n12:01:51.680 I/System.out: Connection: upgrade\n12:01:51.680 I/System.out: Upgrade: websocket\n12:01:51.680 I/System.out: Sec-WebSocket-Accept: aTN/IRqmTriKfyQKn2ZRySg1p24=\n12:01:51.680 I/System.out: }\n12:01:51.687 I/System.out: acceptHandshakeAsClient - Matching extension found: DefaultExtension\n12:01:51.688 I/System.out: acceptHandshakeAsClient - Matching protocol found: \n12:01:51.688 I/System.out: open using draft: Draft_6455 extension: DefaultExtension protocol: \n12:01:51.688 I/System.out: Connection lost timer deactivated\n12:01:51.689 D/\ud83d\udc36: WebS : WebSocketConnection WebSocket.onOpen(), readyState=OPEN\n\nhere\u2014five minutes later\u2014the server closes socket\n\n12:05:31.435 D/\ud83d\udc36: WebS : WebSocketConnection WebSocket.onClose(code=1006, reason=)\n12:05:31.441 W/\ud83d\udc36: do2  : WebSocketConnection CLOSING CLIENT END\n\nif i call client.getConnection().closeConnection(1000, \"foo\") instead, i see:\n12:18:56.839 W/\ud83d\udc36: do1  : WebSocketConnection CLOSING CLIENT\n12:18:56.840 D/\ud83d\udc36: do1  : WebSocketConnection WebSocket.onClose(code=1000, reason=foo)\n12:18:56.840 W/\ud83d\udc36: do1  : WebSocketConnection CLOSING CLIENT END\n12:18:57.176 D/\ud83d\udc31: con1 : SSLHandler: Server is trusted by system\n12:18:57.193 W/\ud83d\udc36: con1 : WebSocketConnection CONNECTING END\n12:18:57.197 I/System.out: write(153): {GET /endpoint HTTP/1.1\n12:18:57.197 I/System.out: Connection: Upgrade\n12:18:57.197 I/System.out: Host: host\n12:18:57.197 I/System.out: Sec-WebSocket-Key: sLr34+rlxN1g7QrVyoEy8A==\n12:18:57.197 I/System.out: Sec-WebSocket-Version: 13\n12:18:57.197 I/System.out: Upgrade: websocket\n12:18:57.197 I/System.out: }\n\nthe sockets remain open as well\ni see that my server receives 7 bytes when closeBlocking() is called, but it doesn't send anything in return.. > why do you interrupt the connector?\nactually my immediate problem was some code that must've been added by mistake in the development process. since the library doesn't accept socket factories, i was calling setSocket() on the client before actually connecting, and somehow forgot to check if the thread was interrupted at that point. so the main problem is resolved now.\nas to why i'm calling interrupted in the first place, well. it's just there to make sure the connections are closed immediately. on my device, i see that it takes up to 3 minutes to for client.close() to make client.connectBlocking() to return (rarely, but still, and i do set connectTimeout), and when it does, the exception looks like something imposed by the OS, and i'm not sure if i can do anything save interrupt:\njavax.net.ssl.SSLHandshakeException: SSL handshake aborted: ssl=0x79bfe3adc0: I/O error during system call, Connection timed out\n    at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\n    at com.android.org.conscrypt.SslWrapper.doHandshake(SslWrapper.java:374)\n    at com.android.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(ConscryptFileDescriptorSocket.java:217)\n    at com.android.org.conscrypt.ConscryptFileDescriptorSocket.waitForHandshake(ConscryptFileDescriptorSocket.java:468)\n    at com.android.org.conscrypt.ConscryptFileDescriptorSocket.getInputStream(ConscryptFileDescriptorSocket.java:431)\n    at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:269)\n    at java.lang.Thread.run(Thread.java:764). while i was poking around emulating slow connections, i also managed to get this:\n\nWebSocket.onError(NullPointerException: Attempt to invoke interface method 'boolean org.java_websocket.handshake.ClientHandshake.hasFieldValue(java.lang.String)' on a null object reference). yeah i'm waiting for 1.4.0 to be released\nsince i only do java on android, it might be a while before i can make some minimal demo. but it's still easy to replicate the issue if you simulate slow connection and server disappearance.\ni used # tc qdisc add dev eth0 root netem delay 1000ms on the server to slow down the connection. this makes the client take about 4-5 seconds to establish the connection. so i wait for about 4 seconds and call close, and about 1 time in 5, if i do it at the right time, the client fails to stop connecting in a specified time frame. then, if needed, execute # iptables -A OUTPUT -p tcp --sport 443 -j DROP to make the server silently \u201cdisappear\u201d.\ni caught the NullPointerException in the same way, but it happened only once; didn't try reproducing it, might be very rare. ok bear with me here. by now i'm not really sure how the disconnection works at all.\nlet's ignore WebSocketClient.close() for the time being since my server seems to be ignoring closing frames. WebSocketClient.closeConnection(1000, \"foo\") seems to be the one method i should be using.\nnow, this method ultimately calls WebSocketImpl.closeConnection(...), which checks if readyState isn't CLOSED, and then proceeds to call this.wsl.onWebsocketClose(...), which interrupts the writeThread, which ultimately calls closeSocket(), which closes the socket (why does it check if the socket exists?)\nbut what if WebSocketImpl.closeConnection(...) is called before we are actually connected, that is, during the execution of the following method? before we reach the creation of the writeThread, engine.readyState might already be CLOSED. the writeThread is started anyway, but it's fine as we are calling engine.eot(), right? but that method calls the same method WebSocketImpl.closeConnection(...), which does nothing because it thinks that the connection is already closed. so both the writeThread and the socket remain open.\n(btw, i'm not sure but can't these calls block as well?). i made a test here, it's very simple and should demonstrate what i'm talking about. if i read this right, you are interrupting writeThread and setting it to null on WebSocketConnectReadThread, but in some other places like here it can get accessed from another thread which can lead to the NPE. and there's still the issue of ostream.write()/flush() blocking. also, it would be useful not to actually connect or create any threads if the close* methods were called soon enough.\nbut let's talk about close() meanwhile. it only proceeds if writeThread is non-null, so in case of it being run shortly after connect(), it will do nothing. moreover, if you call closeBlocking() in the same manner, if will potentially block forever\u2014regardless of whether you call connect or not!\nbut let's look at reconnect(), which is non-blocking, according to the documentation. it calls reset, which calls... closeBlocking()!\nthese are just the things i can spot on the very surface. the test is only so much useful; one probably should test this all with some random delays, maybe using some special real life mimicking environment?\nthere's just so much spaghetti in the code, i don't know if there is a way to fix it in a sane way. with many potential threads calling all the methods and very little synchronization, it's just so hard to reason about what can potentially happen. i don't think it was fixed; the connect() method creates a writeThread field which is overwritten with a new WebsocketWriteThread when the thread runs. WebsocketWriteThread sets the name, but the thread started in the connect() method continues to run with the default name. reopen the issue?\nalso, i would suggest number-naming the threads, as in WebsocketWriteThread-1\nedit: also, a new Timer is created in AbstractWebSocket. seems it also lacks a name. on android, the problem might be with the ping/pong mechanism of the library. android will freeze the application while it's idle, waking it up only from time to time. therefore you can't rely on Timers to ping/pong, and Timer is what this library is using by default. you can do setConnectionLostTimeout(0) and implement your own pinging mechanism using AlarmManager\nrun the library in debug mode (set WebSocketImpl.DEBUG to true) to verify that you are getting 1006 because of this. @marci4 according to this code, a timer that runs every 60 seconds will check for a pong event that is not older than 90 seconds. now if the threads are frozen for more than 30 seconds, the time between two calls can be more than 90 seconds according to the wall clock time, while the thread assumes it only slept 60 seconds. boom, abnormal close. you could perhaps use thread time instead of wall clock time (time = 0; sleep(60 seconds); time += 60;, but this sounds like a bad idea and doesn't help in detecting actual timeouts as the system can sleep for many minutes. this isn't a problem with the library but the system; perhaps there should be a note in the documentation somewhere. while the variable is named writeThread, the thread in question is not a writing thread, but a connecting/reading thread. also, getId() returns a number that uniquely identifies all threads, while it would be nice to have the threads working \u201ctogether\u201d having the same number (e.g. WebSocketWriteThread-1, WebSocketConnectReadThread-1 and WebSocketTimer-1). in my app, i only run one connection, but when there's a connection drop i reconnect, and my logging system logs thread names, and it's nice to know that i had a problem with WebSocketWriteThread-1 and not WebSocketWriteThread-2, for instance. also, things like Timer use their own serial numbering for their threads, so it seems that different \u201ckind\u201d of threads should use their own increments. well, just my opinion, anyways\nnow while it's easy to have the same number for writing/reading threads, i'm not sure if threads that are not created each time, such as that WebSocketTimer thing again, should have the \u201cworkspace\u201d number. that is, if i create and destroy 3 connections, i create and destroy WebSocketWriteThread-0, -1, and -2 but i might have only created one single WebSocketTimer; now should the next WebSocketTimer be called WebSocketTimer-1 or WebSocketTimer-3?\naaand perhaps WebSocketTimer can be something more descriptive like ConnectionLostTimer or -Watcher or maybe PingTimer, since it also sends pings?. > set it on your WebSocket instance yourself\nwhy not go the usual way and use a static atomic integer?\n\nNo you cannot reuse the Timer`\n\ni cannot, but i can disconnect before i'm connected, in this case the Timer just doesn't get created. android suspends the cpu when it sleeps, which includes the library's ping-pong mechanism. you should implement your own pinging in such a way that it wakes up the cpu, and disable the built-in one. you may need to exclude your app from the doze, too\nthis should be in the wiki or something. > This app is excluded from battery optimization rules.\nthe system will still put cpu to sleep. this library uses the regular sleep method that does not take sleeping into account, so you need either to never sleep, which you are doing, or wake up the cpu using android's built-in things, which i am suggesting. this is a bit of (dated) code we are using using to schedule pings:\nalarmMgr = (AlarmManager) getSystemService(Context.ALARM_SERVICE);\nPING_ACTION = BuildConfig.APPLICATION_ID + \".PING_ACTION\";\n\npublic void onConnect() { \n    long triggerAt = SystemClock.elapsedRealtime() + pingTimeout; \n    schedulePing(triggerAt, new Bundle()); \n}\n\n...\n\n@TargetApi(19) \nvoid schedulePing(long triggerAt, Bundle extras) { \n    Intent intent = new Intent(PingActionReceiver.PING_ACTION); \n    intent.putExtras(extras);\n\n    PendingIntent alarmIntent = PendingIntent.getBroadcast( \n            this, 0, \n            intent, \n            PendingIntent.FLAG_CANCEL_CURRENT \n    );\n\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { \n        alarmMgr.setExact(AlarmManager.ELAPSED_REALTIME_WAKEUP, triggerAt, alarmIntent); \n    } else { \n        alarmMgr.set(AlarmManager.ELAPSED_REALTIME_WAKEUP, triggerAt, alarmIntent); \n    } \n}\n\n...\n\n\npublic void onReceive(Context context, Intent intent) { \n    if (!relayService.isConnection(RelayService.CONNECTED)) return;\n\n    long triggerAt; \n    Bundle extras = new Bundle();\n\n    if (SystemClock.elapsedRealtime() - relayService.lastMessageReceivedAt > pingIdleTime) { \n        if (!intent.getBooleanExtra(\"sentPing\", false)) { \n            logger.debug(\"last message too old, sending ping\"); \n            relayService.connection.sendMsg(\"ping\"); \n            triggerAt = SystemClock.elapsedRealtime() + pingTimeout; \n            extras.putBoolean(\"sentPing\", true); \n        } else { \n            logger.debug(\"no message received, disconnecting\"); \n            relayService.startThreadedDisconnect(false); \n            return; \n        } \n    } else { \n        triggerAt = relayService.lastMessageReceivedAt + pingIdleTime; \n    }\n\n    relayService.schedulePing(triggerAt, extras); \n} .\n",
    "ukotdiya01": "Now there is no WebSocketClientFactory or setWebSocketFactory methods available  for WebsocketClient.  I am getting following error which is failure of TLS handshake. I am able to connect to this webserver using my iOS app on wss.\n05-25 19:27:03.474 5920-18807/org.java_websocket.client D/TOOTALLNATE: Exception occurred ...\n                                                                       javax.net.ssl.SSLException: Connection closed by peer\n05-25 19:27:03.474 5920-18807/org.java_websocket.client W/System.err: javax.net.ssl.SSLException: Connection closed by peer\n05-25 19:27:03.474 5920-18807/org.java_websocket.client W/System.err:     at org.apache.harmony.xnet.provider.jsse.NativeCrypto.SSL_do_handshake(Native Method)\n05-25 19:27:03.474 5920-18807/org.java_websocket.client W/System.err:     at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:378)\n05-25 19:27:03.474 5920-18807/org.java_websocket.client W/System.err:     at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl$SSLInputStream.(OpenSSLSocketImpl.java:649)\n05-25 19:27:03.474 5920-18807/org.java_websocket.client W/System.err:     at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.getInputStream(OpenSSLSocketImpl.java:620)\n05-25 19:27:03.484 5920-18807/org.java_websocket.client W/System.err:     at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:167)\n05-25 19:27:03.484 5920-18807/org.java_websocket.client W/System.err:     at java.lang.Thread.run(Thread.java:856)\n. ",
    "syedhabib53": "I am trying wss connection in Android using @douglasjunior mentioned, I am keep getting following error,\n08-31 10:33:20.907 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x10 ret=1\n08-31 10:33:20.907 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 handshake start in UNKWN  before/connect initialization\n08-31 10:33:20.907 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback calling handshakeCompleted\n08-31 10:33:20.907 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback completed\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1001 ret=1\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:UNKWN  before/connect initialization\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1001 ret=1\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:23WCHA SSLv2/v3 write client hello A\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 23RSHA SSLv2/v3 read server hello A\n08-31 10:33:20.908 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.938 15447-15484/com.demo.app D/IMGSRV: gralloc_register_buffer:1390: hnd=0x7f9f21f440 ID=44475 fd=77 ref=1\n08-31 10:33:20.938 15447-15484/com.demo.app D/GraphicBuffer: register, handle(0x7f9f21f440) (w:1080 h:1920 s:1088 f:0x1 u:0x000b00)\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1001 ret=1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:3RSH_A SSLv3 read server hello A\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 3RSC_A SSLv3 read server certificate A\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 3RSC_A SSLv3 read server certificate A\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 3RSC_A SSLv3 read server certificate A\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 3RSC_A SSLv3 read server certificate A\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 3RSC_A SSLv3 read server certificate A\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 3RSC_A SSLv3 read server certificate A\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 3RSC_A SSLv3 read server certificate A\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\n08-31 10:33:20.941 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 SSL_connect:error exit in 3RSC_A SSLv3 read server certificate A\n08-31 10:33:20.942 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback ignored\n08-31 10:33:20.942 15447-15552/com.demo.app D/NativeCrypto: ssl=0x7f93823280 info_callback where=0x1002 ret=-1\nPlease get me out of this. Thanks in advance.\n. #Using this above issue has fixed.\n. ",
    "burjorjee": "As per your suggestion, I commented and uncommented code in SSLClientExample like so:\n```\n    SSLContext sslContext = null;\n    sslContext = SSLContext.getInstance( \"TLS\" );\n    //sslContext.init( kmf.getKeyManagers(), tmf.getTrustManagers(), null );\n    sslContext.init( null, null, null ); // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\nchatclient.setWebSocketFactory( new DefaultSSLWebSocketClientFactory( sslContext ) );\n\nchatclient.connectBlocking();\n\n```\nWhen executed, the client disconnects immediately and the server throws the following exception:\njava.io.IOException: connection closed unexpectedly by peer\n    at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:87)\n    at org.java_websocket.SSLSocketChannel2.read(SSLSocketChannel2.java:150)\n    at org.java_websocket.SocketChannelIOHelper.read(SocketChannelIOHelper.java:11)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:328)\n    at java.lang.Thread.run(Thread.java:722)\n java.io.IOException: Broken pipe\n    at sun.nio.ch.FileDispatcherImpl.write0(Native Method)\n    at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)\n    at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:94)\n    at sun.nio.ch.IOUtil.write(IOUtil.java:65)\n    at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:472)\n    at org.java_websocket.SSLSocketChannel2.close(SSLSocketChannel2.java:201)\n    at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:435)\n    at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:465)\n    at org.java_websocket.server.WebSocketServer.handleIOException(WebSocketServer.java:429)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:371)\n    at java.lang.Thread.run(Thread.java:722)\n. I was using a self-signed certificate. Once I configure the trust manager of the client appropriately, the connection works.  Closing this issue.\n. Sorry, the issue is terribly worded. I should have been clearer. I'm raising an issue about the Java-Websocket server, not the client. To make it easy to reproduce the problem, I've included the sever-side code in the initial description. The server is just supposed to echo messages back to the client. Unfortunately it fails to do so for large messages when the protocol used is Draft_75/76. \n. It does fail silently. \nServer output: \n\nClient output:\n\nThis is for Draft_75. When using Draft_17, the client and server send the initial message back and forth ad-infinitum, which is the expected behavior.\n. Thanks!\n. ",
    "nirmala-mist": "I am very new to security. How do I configure the trust manager of the client to make it all work with self-signed certificate?\n. ",
    "0x6a77": "David,\nI wish you would reconsider about interfaces.  This is a standard, enterprise development pattern and It's not just Guice - it's Spring, Dagger and any other DI tool.  The way you have it right now there is no way to have any downstream modifications to WebSocket because it's a fixed, abstract class.  All I did was pull the abstract methods into an interface.  This increases reusability and keeps the risk is low.  You can easily extract the interface yourself with Eclipse refactor tools by choosing \"Extract as Interface\" on the ABC. There's nothing exotic about it at all and it doesn't introduce any behavior changes.  I have since made TONS of changes to the WebSocket ABC behavior that don't need to go into the repo because my implementation fulfills the interface.\nJeff\nOn Jan 10, 2013, at 13:30 , David Rohmer notifications@github.com wrote:\n\nEvery improvement is much appreciated - so thank you very much for creating this pull request!\nUnfortunately i am really not sold on the IWebsocket thing. For one part its because i don't know anything about guice. The other thing is that if these changes are necessary for being able to use guice there will still be only very few who use it and the rest is wandering about a confusing base interface name and its purpose...\nI will add the other improvements to the code base as soon as possible!!!!\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi David,\n\nOh, you can drop the \"I\".  It's not even an accepted convention anymore.  Usually I see something like WebSocket (intf) WebSocketAbc (ABC) and WebSocketImpl (the impl you already have).  The taste of the name is low priority to me, so I'll go with whatever you decide.\nBTW, EE is not meant to be high-minded!  Sometimes the lean stuff is waaay better.  Wait, mostly the lean stuff is waaay better.  E.g. the NakedObjects dissertation.\nCheers,\nJeff\nOn Jan 10, 2013, at 14:24 , David Rohmer notifications@github.com wrote:\n\nWith this interface enterprise development thing you really hurt my pride... \nIs putting \"I\"'s in front of Interfaces also a Java-Enterprise-Developer-Thing ; cause i rather consider such prefix stuff a C++ developer habit...\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "nicolyon": "We don't use wss.\nFor us the buffers stay blocked it never return i try let it run one hour.\nSo i restart the application. \nAfter some hours i made some try of debug and i see some WebSocketWorker thread that say blocked at\n ws = iqueue.take(); line 629 in WebSocketServer they don't go to the next instruction.\ntomorrow i will see of when takeBuffer don't return if all thread are blocked at this point.\n. backtrace of WebSocketWorkers blocked :\nUnsafe           park\nLockSupport  park\nAbstractQueuedSynchronizer await\n. ",
    "prdatur": "Thanks for the \"WebSocketImpl.debu = true\" tip, because i run the code within an applet, I couldn't get the stacktrace (java debug popup from applet didn't worked) so after trying with a default application i saw that something strange happens.\nI got an Unauthorized from my Server back. So I double checked my Server and found a problem there. After fixing my Server the connection works great.\nThanks for you fast reply and your great work on this implementation.\n. ",
    "9992800": "}\nprocess(193): {HTTP/1.1 101 Switching Protocols\nServer: openresty/1.9.7.1\nDate: Fri, 08 Jan 2016 03:55:24 GMT\nConnection: upgrade\nUpgrade: websocket\nSec-WebSocket-Accept: Fv+SNPWZc2Q42hHTESrhPYZy7Fk=\n}\norg.java_websocket.exceptions.InvalidFrameException: bad rsv 4\n    at org.java_websocket.drafts.Draft_10.translateSingleFrame(Draft_10.java:308)\n    at org.java_websocket.drafts.Draft_10.translateFrame(Draft_10.java:285)\n    at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:321)\n    at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:158)\n    at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:185)\n    at java.lang.Thread.run(Thread.java:722)\nwrite(212): {GET /online_test?system=-1&80010086=-1&80010087=-1&self=2 HTTP/1.1\nConnection: Upgrade\nHost: chat.jucaicun.com:443\nSec-WebSocket-Key: T3Z9W03umkn4iFadT3GlbQ==\nSec-WebSocket-Version: 13\nUpgrade: websocket\n}\n. ",
    "43350860": "@9992800 Is this the problem solved?\njava\norg.java_websocket.exceptions.InvalidFrameException: bad rsv 4\nat org.java_websocket.drafts.Draft_10.translateSingleFrame(Draft_10.java:308)\nat org.java_websocket.drafts.Draft_10.translateFrame(Draft_10.java:285)\nat org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:321)\nat org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:158)\nat org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:185)\nat java.lang.Thread.run(Thread.java:722). @Davidiusdadi Hello, how is this problem solved?\njava\norg.java_websocket.exceptions.InvalidFrameException: bad rsv 4\nat org.java_websocket.drafts.Draft_10.translateSingleFrame(Draft_10.java:308)\nat org.java_websocket.drafts.Draft_10.translateFrame(Draft_10.java:285)\nat org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:321)\nat org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:158)\nat org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:185)\nat java.lang.Thread.run(Thread.java:722). ",
    "Alain-Bearez": "2013/2/5 David Rohmer notifications@github.com\n\n@Alain-Bearez https://github.com/Alain-Bearez It does not matter but i\nam curious what android version you are (still) using?\n\nAndroid 2.1 on two years old devices... But it has become difficult to find\n5inch devices with 800x480 screens. Most of them are nowadays 7 inches or\nmore, which ends being way to large to fit well in hand for my purpose.\nDid I tell your library enables a system transmitting the touch position of\ntens of devices to a \"central\" notebook. Many thanks for your efforts!\nKind regards,\nAlain Fagot B\u00e9arez\nav. Santos Dumont 1267, sala 903\n60150-160 Fortaleza - CE\n+55 (85) 8623 9026\nhttp://br.LinkedIn.com/in/AlainFagotBearez\nhttp://twitter.com/cualiTI\n. The fact that you don't have this issue when running with a full load let me think there might be the same symptoms described in the issue #213  (apart from the very same 30 minutes).\n. ",
    "2fours": "There seem to be problems on older android platforms because of this bug in SSLEngine : https://code.google.com/p/android/issues/detail?id=12955#c12. It appears that the only way this will work on these platforms is to abandon SSLEngine and use SSLSocket. Any chance of that happening?\n. The merged code is fine, the problem is the library will never work on Android versions < 3.0 (which is where the bug is fixed I believe) as long as it uses SSLEngine. #141 will not fix the issue. \n. For me it's a showstopper as Gingerbread comprises 47% of the Android market, and I can not change the SSL certs issued to me. I have changed Gottox socket.io-java client to use the AutoBahn websocket implementation and it is working for me. \n. ",
    "Tobag": "No, I am  not just confused by the output. The connection doesn't get established.\n. No, from my Windows PC. I updated all the Websocket Files and now there is a little bit more in the output but it still doesn't work:\nCipher Suite: TLS_RSA_WITH_AES_128_CBC_SHA\nCompression Method: 0\nExtension renegotiation_info, renegotiated_connection: \n\nchannel is open while%% Initialized:  [Session-1, TLS_RSA_WITH_AES_128_CBC_SHA]\n** TLS_RSA_WITH_AES_128_CBC_SHA\n[read] MD5 and SHA1 hashes:  len = 81\n0000: 02 00 00 4D 03 01 51 0F   E9 70 9D B4 01 E0 27 A6  ...M..Q..p....'.\n0010: 5A C0 B1 2E 9B A6 EF A4   C2 DC 05 F8 80 91 5D B8  Z.............].\n0020: DB FB 80 0C B4 6E 20 64   3A F6 9A 9A 4C A1 DC 66  .....n d:...L..f\n0030: 3D B6 50 FD 42 D5 07 37   F6 F1 C1 ED 47 AF 1C 1E  =.P.B..7....G...\n0040: 77 E7 F2 8B AC 31 C0 00   2F 00 00 05 FF 01 00 01  w....1../.......\n0050: 00                                                 .\n. Connecting to wss://echo.websocket.org works without a problem.\nMy server (wss://diy-tobag.rhcloud.com/jSkatServer/server) is a Tomcat Websocket servlet.\nEDIT: I forgot the port, the address of my websocket server is wss://diy-tobag.rhcloud.com:8443/jSkatServer/server\nThe javascript code in this html file (https://diy-tobag.rhcloud.com/jSkatServer/test.html) can establish the connection without any problems.\n. I get some more output now:\nThread-3, called closeOutbound()\nThread-3, closeOutboundInternal()\nThread-3, SEND TLSv1 ALERT:  warning, description = close_notify\nThread-3, WRITE: TLSv1 Alert, length = 2\n[Raw write]: length = 7\n0000: 15 03 01 00 02 01 00 \n. Ok, I'm glad it wasn't my fault that I didn't work :-P. Thank you very much for your help.\n. \"The bug should occur very frequently on all websocket clients after db8a47f. \nSo just for testing you could use that revision until the issue is fixed.\"\nI just tried it with the older revision and that doesn't work either.\n. Just downloaded your Code, I get the following error now:\nException in thread \"WebsocketWriteThread\" java.nio.BufferOverflowException\n    at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:200)\n    at sun.security.ssl.EngineWriter.getOutboundData(EngineWriter.java:77)\n    at sun.security.ssl.EngineWriter.writeRecord(EngineWriter.java:163)\n    at sun.security.ssl.SSLEngineImpl.writeRecord(SSLEngineImpl.java:1276)\n    at sun.security.ssl.SSLEngineImpl.writeAppRecord(SSLEngineImpl.java:1246)\n    at sun.security.ssl.SSLEngineImpl.wrap(SSLEngineImpl.java:1161)\n    at javax.net.ssl.SSLEngine.wrap(SSLEngine.java:469)\n    at org.java_websocket.SSLSocketChannel2.wrap(SSLSocketChannel2.java:131)\n    at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:124)\n    at org.java_websocket.SSLSocketChannel2.write(SSLSocketChannel2.java:170)\n    at org.java_websocket.SocketChannelIOHelper.writeBlocking(SocketChannelIOHelper.java:72)\n    at org.java_websocket.client.WebSocketClient$WebsocketWriteThread.run(WebSocketClient.java:408)\n    at java.lang.Thread.run(Thread.java:722)\n. Thank you very much, it finally works!!\nThe problem above was caused by a certificate issue. After fixing that everything worked fine.\n. I just found out something: The SSL Client does work now with java version \"1.7.0_15\", but it doesn't work with java version \"1.7.0\". Thought that could be interesting for you.\n-Tobi\nEDIT: I''m sorry, it's the other way round: the \"1.7.0\" version works and the \"1.7.0_15\" doesn't\n. Here is what I get as output. It just stops after that:\ntrigger seeding of SecureRandom\ndone seeding SecureRandom\nUsing SSLEngineImpl.\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA\nAllow unsafe renegotiation: false\nAllow legacy hello messages: true\nIs initial handshake: true\nIs secure renegotiation: false\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\n%% No cached client session\n*** ClientHello, TLSv1\nRandomCookie:  GMT: 1361597323 bytes = { 88, 245, 221, 65, 132, 100, 170, 99, 236, 182, 140, 202, 78, 96, 173, 35, 59, 210, 255, 169, 174, 125, 49, 177, 96, 219, 242, 43 }\nSession ID:  {}\nCipher Suites: [TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_RC4_128_SHA, TLS_ECDHE_RSA_WITH_RC4_128_SHA, SSL_RSA_WITH_RC4_128_SHA, TLS_ECDH_ECDSA_WITH_RC4_128_SHA, TLS_ECDH_RSA_WITH_RC4_128_SHA, TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA, SSL_RSA_WITH_RC4_128_MD5, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]\nCompression Methods:  { 0 }\nExtension elliptic_curves, curve names: {secp256r1, sect163k1, sect163r2, secp192r1, secp224r1, sect233k1, sect233r1, sect283k1, sect283r1, secp384r1, sect409k1, sect409r1, secp521r1, sect571k1, sect571r1, secp160k1, secp160r1, secp160r2, sect163r1, secp192k1, sect193r1, sect193r2, secp224k1, sect239k1, secp256k1}\nExtension ec_point_formats, formats: [uncompressed]\nExtension server_name, server_name: [host_name: diy-tobag.rhcloud.com]\n\n[write] MD5 and SHA1 hashes:  len = 179\n0000: 01 00 00 AF 03 01 51 28   54 8B 58 F5 DD 41 84 64  ......Q(T.X..A.d\n0010: AA 63 EC B6 8C CA 4E 60   AD 23 3B D2 FF A9 AE 7D  .c....N.#;.....\n0020: 31 B1 60 DB F2 2B 00 00   2A C0 09 C0 13 00 2F C0  1...+......./.\n0030: 04 C0 0E 00 33 00 32 C0   07 C0 11 00 05 C0 02 C0  ....3.2.........\n0040: 0C C0 08 C0 12 00 0A C0   03 C0 0D 00 16 00 13 00  ................\n0050: 04 00 FF 01 00 00 5C 00   0A 00 34 00 32 00 17 00  .........4.2...\n0060: 01 00 03 00 13 00 15 00   06 00 07 00 09 00 0A 00  ................\n0070: 18 00 0B 00 0C 00 19 00   0D 00 0E 00 0F 00 10 00  ................\n0080: 11 00 02 00 12 00 04 00   05 00 14 00 08 00 16 00  ................\n0090: 0B 00 02 01 00 00 00 00   1A 00 18 00 00 15 64 69  ..............di\n00A0: 79 2D 74 6F 62 61 67 2E   72 68 63 6C 6F 75 64 2E  y-tobag.rhcloud.\n00B0: 63 6F 6D                                           com\nThread-3, WRITE: TLSv1 Handshake, length = 179\n[Raw write]: length = 184\n0000: 16 03 01 00 B3 01 00 00   AF 03 01 51 28 54 8B 58  ...........Q(T.X\n0010: F5 DD 41 84 64 AA 63 EC   B6 8C CA 4E 60 AD 23 3B  ..A.d.c....N.#;\n0020: D2 FF A9 AE 7D 31 B1 60   DB F2 2B 00 00 2A C0 09  .....1...+....\n0030: C0 13 00 2F C0 04 C0 0E   00 33 00 32 C0 07 C0 11  .../.....3.2....\n0040: 00 05 C0 02 C0 0C C0 08   C0 12 00 0A C0 03 C0 0D  ................\n0050: 00 16 00 13 00 04 00 FF   01 00 00 5C 00 0A 00 34  ..............4\n0060: 00 32 00 17 00 01 00 03   00 13 00 15 00 06 00 07  .2..............\n0070: 00 09 00 0A 00 18 00 0B   00 0C 00 19 00 0D 00 0E  ................\n0080: 00 0F 00 10 00 11 00 02   00 12 00 04 00 05 00 14  ................\n0090: 00 08 00 16 00 0B 00 02   01 00 00 00 00 1A 00 18  ................\n00A0: 00 00 15 64 69 79 2D 74   6F 62 61 67 2E 72 68 63  ...diy-tobag.rhc\n00B0: 6C 6F 75 64 2E 63 6F 6D                            loud.com\n[Raw read]: length = 5\n0000: 16 03 01 00 51                                     ....Q\n[Raw read]: length = 81\n0000: 02 00 00 4D 03 01 51 28   54 8B 11 98 E9 47 BA 92  ...M..Q(T....G..\n0010: 7D C9 DE 4E 49 A6 64 BD   77 C9 04 A2 D0 73 E0 F7  ...NI.d.w....s..\n0020: C1 0F 91 D4 CD 66 20 7A   BB E7 2D 78 4E D3 74 2C  .....f z..-xN.t,\n0030: F4 D9 F9 38 7F 35 F6 A4   AC 53 45 95 EA 27 F9 09  ...8.5...SE..'..\n0040: 64 B8 69 F8 03 4E 01 00   2F 00 00 05 FF 01 00 01  d.i..N../.......\n0050: 00                                                 .\nThread-3, READ: TLSv1 Handshake, length = 81\n*** ServerHello, TLSv1\nRandomCookie:  GMT: 1361597323 bytes = { 17, 152, 233, 71, 186, 146, 125, 201, 222, 78, 73, 166, 100, 189, 119, 201, 4, 162, 208, 115, 224, 247, 193, 15, 145, 212, 205, 102 }\nSession ID:  {122, 187, 231, 45, 120, 78, 211, 116, 44, 244, 217, 249, 56, 127, 53, 246, 164, 172, 83, 69, 149, 234, 39, 249, 9, 100, 184, 105, 248, 3, 78, 1}\nCipher Suite: TLS_RSA_WITH_AES_128_CBC_SHA\nCompression Method: 0\nExtension renegotiation_info, renegotiated_connection: \n\n%% Initialized:  [Session-1, TLS_RSA_WITH_AES_128_CBC_SHA]\n* TLS_RSA_WITH_AES_128_CBC_SHA\n[read] MD5 and SHA1 hashes:  len = 81\n0000: 02 00 00 4D 03 01 51 28   54 8B 11 98 E9 47 BA 92  ...M..Q(T....G..\n0010: 7D C9 DE 4E 49 A6 64 BD   77 C9 04 A2 D0 73 E0 F7  ...NI.d.w....s..\n0020: C1 0F 91 D4 CD 66 20 7A   BB E7 2D 78 4E D3 74 2C  .....f z..-xN.t,\n0030: F4 D9 F9 38 7F 35 F6 A4   AC 53 45 95 EA 27 F9 09  ...8.5...SE..'..\n0040: 64 B8 69 F8 03 4E 01 00   2F 00 00 05 FF 01 00 01  d.i..N../.......\n0050: 00                                                 .\n[Raw read]: length = 5\n0000: 16 03 01 05 25                                     ....%\n[Raw read]: length = 1317\n0000: 0B 00 05 21 00 05 1E 00   05 1B 30 82 05 17 30 82  ...!......0...0.\n0010: 03 FF A0 03 02 01 02 02   03 01 FD 1E 30 0D 06 09  ............0...\n0020: 2A 86 48 86 F7 0D 01 01   05 05 00 30 40 31 0B 30  .H........0@1.0\n0030: 09 06 03 55 04 06 13 02   55 53 31 17 30 15 06 03  ...U....US1.0...\n0040: 55 04 0A 13 0E 47 65 6F   54 72 75 73 74 2C 20 49  U....GeoTrust, I\n0050: 6E 63 2E 31 18 30 16 06   03 55 04 03 13 0F 47 65  nc.1.0...U....Ge\n0060: 6F 54 72 75 73 74 20 53   53 4C 20 43 41 30 1E 17  oTrust SSL CA0..\n0070: 0D 31 33 30 32 30 32 31   39 31 35 33 37 5A 17 0D  .130202191537Z..\n0080: 31 35 30 35 30 38 30 31   34 39 31 33 5A 30 81 B1  150508014913Z0..\n0090: 31 29 30 27 06 03 55 04   05 13 20 4C 6E 68 7A 4A  1)0'..U... LnhzJ\n00A0: 48 78 63 58 30 62 49 64   6C 48 32 49 54 6E 44 67  HxcX0bIdlH2ITnDg\n00B0: 61 65 77 65 79 38 63 65   35 67 33 31 0B 30 09 06  aewey8ce5g31.0..\n00C0: 03 55 04 06 13 02 55 53   31 17 30 15 06 03 55 04  .U....US1.0...U.\n00D0: 08 13 0E 4E 6F 72 74 68   20 43 61 72 6F 6C 69 6E  ...North Carolin\n00E0: 61 31 10 30 0E 06 03 55   04 07 13 07 52 61 6C 65  a1.0...U....Rale\n00F0: 69 67 68 31 14 30 12 06   03 55 04 0A 13 0B 52 65  igh1.0...U....Re\n0100: 64 20 48 61 74 20 49 6E   63 31 1E 30 1C 06 03 55  d Hat Inc1.0...U\n0110: 04 0B 13 15 52 48 43 20   43 6C 6F 75 64 20 4F 70  ....RHC Cloud Op\n0120: 6F 65 72 61 74 69 6F 6E   73 31 16 30 14 06 03 55  oerations1.0...U\n0130: 04 03 0C 0D 2A 2E 72 68   63 6C 6F 75 64 2E 63 6F  .....rhcloud.co\n0140: 6D 30 82 01 22 30 0D 06   09 2A 86 48 86 F7 0D 01  m0..\"0....H....\n0150: 01 01 05 00 03 82 01 0F   00 30 82 01 0A 02 82 01  .........0......\n0160: 01 00 B1 00 46 3D DB 68   00 31 8E A7 C5 FC 03 4B  ....F=.h.1.....K\n0170: 68 15 2E A7 8F CA 9C 3F   8D BA 24 9D 2D BB E2 B9  h......?..$.-...\n0180: EE A6 94 A6 5B 57 50 CE   20 89 7E 72 F5 F2 41 8B  ....[WP. ..r..A.\n0190: 44 EB 29 F8 7A 14 FE B7   67 BC 14 06 FC B8 4D 85  D.).z...g.....M.\n01A0: 85 9F 0F 9C 3E B1 D0 7A   72 25 14 33 8F F7 BB 50  ....>..zr%.3...P\n01B0: 84 D7 F8 06 E5 77 00 FC   20 FA F2 EF 5C 0E 0D 52  .....w.. .....R\n01C0: C3 27 34 8A C7 B1 DB AF   71 E0 84 66 25 7D 1B 74  .'4.....q..f%..t\n01D0: FB C7 E4 11 08 0D A0 E9   91 E1 7E 5E 3A 4C 45 63  ...........^:LEc\n01E0: BC F0 8B CF B1 39 63 92   6E 0D 3D B8 86 5A CE 7B  .....9c.n.=..Z..\n01F0: 80 D5 33 41 5E A2 FC D1   47 F2 8A 51 5B A2 28 27  ..3A^...G..Q[.('\n0200: C0 3B F3 0C 33 7D 3D E5   CA 5C 78 5B 62 33 18 77  .;..3.=..\\x[b3.w\n0210: 1B 1B F2 78 C9 DB 13 55   82 2B 85 B0 B7 A8 C0 37  ...x...U.+.....7\n0220: B9 FF 24 48 E6 2D D4 42   15 15 56 D6 43 20 20 09  ..$H.-.B..V.C  .\n0230: 1D EE B2 7E 75 E4 72 E3   96 46 CC 00 55 2C 9D 35  ....u.r..F..U,.5\n0240: 1B F6 1D FD 36 AB 5E 86   E0 4B 26 FE 28 8C 29 58  ....6.^..K&.(.)X\n0250: B6 3F 98 CC 60 CA 95 A2   DE C3 1C 55 86 1E CB 0C  .?........U....\n0260: 89 BD 02 03 01 00 01 A3   82 01 A6 30 82 01 A2 30  ...........0...0\n0270: 1F 06 03 55 1D 23 04 18   30 16 80 14 42 79 54 1B  ...U.#..0...ByT.\n0280: 61 CD 55 2B 3E 63 D5 3C   48 57 F5 9F FB 45 CE 4A  a.U+>c.<HW...E.J\n0290: 30 0E 06 03 55 1D 0F 01   01 FF 04 04 03 02 04 B0  0...U...........\n02A0: 30 1D 06 03 55 1D 25 04   16 30 14 06 08 2B 06 01  0...U.%..0...+..\n02B0: 05 05 07 03 01 06 08 2B   06 01 05 05 07 03 02 30  .......+.......0\n02C0: 25 06 03 55 1D 11 04 1E   30 1C 82 0D 2A 2E 72 68  %..U....0..._.rh\n02D0: 63 6C 6F 75 64 2E 63 6F   6D 82 0B 72 68 63 6C 6F  cloud.com..rhclo\n02E0: 75 64 2E 63 6F 6D 30 3D   06 03 55 1D 1F 04 36 30  ud.com0=..U...60\n02F0: 34 30 32 A0 30 A0 2E 86   2C 68 74 74 70 3A 2F 2F  402.0...,http://\n0300: 67 74 73 73 6C 2D 63 72   6C 2E 67 65 6F 74 72 75  gtssl-crl.geotru\n0310: 73 74 2E 63 6F 6D 2F 63   72 6C 73 2F 67 74 73 73  st.com/crls/gtss\n0320: 6C 2E 63 72 6C 30 1D 06   03 55 1D 0E 04 16 04 14  l.crl0...U......\n0330: B4 54 E2 D4 AA F2 75 12   17 CD F2 21 4A D9 CB 30  .T....u....!J..0\n0340: 75 00 AE 3B 30 0C 06 03   55 1D 13 01 01 FF 04 02  u..;0...U.......\n0350: 30 00 30 6F 06 08 2B 06   01 05 05 07 01 01 04 63  0.0o..+........c\n0360: 30 61 30 2A 06 08 2B 06   01 05 05 07 30 01 86 1E  0a0_..+.....0...\n0370: 68 74 74 70 3A 2F 2F 67   74 73 73 6C 2D 6F 63 73  http://gtssl-ocs\n0380: 70 2E 67 65 6F 74 72 75   73 74 2E 63 6F 6D 30 33  p.geotrust.com03\n0390: 06 08 2B 06 01 05 05 07   30 02 86 27 68 74 74 70  ..+.....0..'http\n03A0: 3A 2F 2F 67 74 73 73 6C   2D 61 69 61 2E 67 65 6F  ://gtssl-aia.geo\n03B0: 74 72 75 73 74 2E 63 6F   6D 2F 67 74 73 73 6C 2E  trust.com/gtssl.\n03C0: 63 72 74 30 4C 06 03 55   1D 20 04 45 30 43 30 41  crt0L..U. .E0C0A\n03D0: 06 0A 60 86 48 01 86 F8   45 01 07 36 30 33 30 31  ...H...E..60301\n03E0: 06 08 2B 06 01 05 05 07   02 01 16 25 68 74 74 70  ..+........%http\n03F0: 3A 2F 2F 77 77 77 2E 67   65 6F 74 72 75 73 74 2E  ://www.geotrust.\n0400: 63 6F 6D 2F 72 65 73 6F   75 72 63 65 73 2F 63 70  com/resources/cp\n0410: 73 30 0D 06 09 2A 86 48   86 F7 0D 01 01 05 05 00  s0....H........\n0420: 03 82 01 01 00 5E AA EE   6E B9 31 FF DF C8 BF 89  .....^..n.1.....\n0430: EA CD 50 D8 F1 CF F3 CE   BE E8 35 A8 AC 5C 8C 3C  ..P.......5...<\n0440: CB 17 05 70 3F 02 9E 07   C3 75 F2 64 3F 46 10 1D  ...p?....u.d?F..\n0450: C9 F6 75 89 5D AC D5 6C   57 93 5F D6 A8 C3 27 9A  ..u.]..lW._...'.\n0460: 18 CC D3 8F 04 BB 11 00   C4 5B F5 8D 9B 99 2D 84  .........[....-.\n0470: 9D 20 89 32 25 E5 65 39   4A 28 05 64 57 5D C7 5A  . .2%.e9J(.dW].Z\n0480: FB 4E FF 04 8B 2A 2E C5   E0 C4 91 7F A7 5F B4 9A  .N............\n0490: 8A 44 C6 4C A9 79 5B 8E   A6 C2 E2 DB 02 4D EE 8C  .D.L.y[......M..\n04A0: 5E DA 35 1B 7C B9 FA CD   13 BE 91 53 94 A8 60 63  ^.5........S..`c\n04B0: 0A 33 66 C5 0B 6C D7 39   6E B3 5E 1E CC BF 9D 5B  .3f..l.9n.^....[\n04C0: 4A 15 A1 09 40 37 1F D5   12 EB A3 C2 01 F2 D5 77  J...@7.........w\n04D0: 9B 9B 89 75 A8 85 AD 78   68 71 C2 17 3D B4 4E 7A  ...u...xhq..=.Nz\n04E0: 64 D1 D3 DC E2 AC 01 8F   BD 62 E5 55 D4 47 4C B8  d........b.U.GL.\n04F0: D2 04 36 05 CB 40 BB 2A   91 5C 2D CC 4A 7A C0 B4  ..6..@..-.Jz..\n0500: 2C E9 5E 50 65 AD 9D 79   D4 7B 9F 8A 62 D9 23 82  ,.^Pe..y....b.#.\n0510: 01 6E DA C0 77 69 A1 07   1A BE D6 CC F3 D8 59 87  .n..wi........Y.\n0520: 07 84 88 CE AF                                     .....\nThread-3, READ: TLSv1 Handshake, length = 1317\n_* Certificate chain\nchain [0] = [\n[\n  Version: V3\n  Subject: CN=.rhcloud.com, OU=RHC Cloud Opoerations, O=Red Hat Inc, L=Raleigh, ST=North Carolina, C=US, SERIALNUMBER=LnhzJHxcX0bIdlH2ITnDgaewey8ce5g3\n  Signature Algorithm: SHA1withRSA, OID = 1.2.840.113549.1.1.5\nKey:  Sun RSA public key, 2048 bits\n  modulus: 22344315281485641439488452374611855792676764291539102580121735035606607285205166280358817900639950111607231789012605952219555716480881969600864258490213770375732780605493298717852306097948319488125638778753758492051106000464953592119174329539022620832860800262068120039396657541316655014499276862654072296433689890273487572913592500538418253771959493725311031605037446117191270427160928764735433922540954407385741540363539089851236008293231452554569758821869918648163883138871657871224877900206779966263053730544780664325621173746821400270388364241931237934761068858677807001255247123920436180123620808229621961886141\n  public exponent: 65537\n  Validity: [From: Sat Feb 02 12:15:37 MST 2013,\n               To: Thu May 07 18:49:13 MST 2015]\n  Issuer: CN=GeoTrust SSL CA, O=\"GeoTrust, Inc.\", C=US\n  SerialNumber: [    01fd1e]\nCertificate Extensions: 9\n[1]: ObjectId: 1.3.6.1.5.5.7.1.1 Criticality=false\nAuthorityInfoAccess [\n  [\n   accessMethod: ocsp\n   accessLocation: URIName: http://gtssl-ocsp.geotrust.com\n, \n   accessMethod: caIssuers\n   accessLocation: URIName: http://gtssl-aia.geotrust.com/gtssl.crt\n]\n]\n[2]: ObjectId: 2.5.29.35 Criticality=false\nAuthorityKeyIdentifier [\nKeyIdentifier [\n0000: 42 79 54 1B 61 CD 55 2B   3E 63 D5 3C 48 57 F5 9F  ByT.a.U+>c.<HW..\n0010: FB 45 CE 4A                                        .E.J\n]\n]\n[3]: ObjectId: 2.5.29.19 Criticality=true\nBasicConstraints:[\n  CA:false\n  PathLen: undefined\n]\n[4]: ObjectId: 2.5.29.31 Criticality=false\nCRLDistributionPoints [\n  [DistributionPoint:\n     [URIName: http://gtssl-crl.geotrust.com/crls/gtssl.crl]\n]]\n[5]: ObjectId: 2.5.29.32 Criticality=false\nCertificatePolicies [\n  [CertificatePolicyId: [2.16.840.1.113733.1.7.54]\n[PolicyQualifierInfo: [\n  qualifierID: 1.3.6.1.5.5.7.2.1\n  qualifier: 0000: 16 25 68 74 74 70 3A 2F   2F 77 77 77 2E 67 65 6F  .%http://www.geo\n0010: 74 72 75 73 74 2E 63 6F   6D 2F 72 65 73 6F 75 72  trust.com/resour\n0020: 63 65 73 2F 63 70 73                               ces/cps\n]]  ]\n]\n[6]: ObjectId: 2.5.29.37 Criticality=false\nExtendedKeyUsages [\n  serverAuth\n  clientAuth\n]\n[7]: ObjectId: 2.5.29.15 Criticality=true\nKeyUsage [\n  DigitalSignature\n  Key_Encipherment\n  Data_Encipherment\n]\n[8]: ObjectId: 2.5.29.17 Criticality=false\nSubjectAlternativeName [\n  DNSName: *.rhcloud.com\n  DNSName: rhcloud.com\n]\n[9]: ObjectId: 2.5.29.14 Criticality=false\nSubjectKeyIdentifier [\nKeyIdentifier [\n0000: B4 54 E2 D4 AA F2 75 12   17 CD F2 21 4A D9 CB 30  .T....u....!J..0\n0010: 75 00 AE 3B                                        u..;\n]\n]\n]\n  Algorithm: [SHA1withRSA]\n  Signature:\n0000: 5E AA EE 6E B9 31 FF DF   C8 BF 89 EA CD 50 D8 F1  ^..n.1.......P..\n0010: CF F3 CE BE E8 35 A8 AC   5C 8C 3C CB 17 05 70 3F  .....5...<...p?\n0020: 02 9E 07 C3 75 F2 64 3F   46 10 1D C9 F6 75 89 5D  ....u.d?F....u.]\n0030: AC D5 6C 57 93 5F D6 A8   C3 27 9A 18 CC D3 8F 04  ..lW._...'......\n0040: BB 11 00 C4 5B F5 8D 9B   99 2D 84 9D 20 89 32 25  ....[....-.. .2%\n0050: E5 65 39 4A 28 05 64 57   5D C7 5A FB 4E FF 04 8B  .e9J(.dW].Z.N...\n0060: 2A 2E C5 E0 C4 91 7F A7   5F B4 9A 8A 44 C6 4C A9  ......._...D.L.\n0070: 79 5B 8E A6 C2 E2 DB 02   4D EE 8C 5E DA 35 1B 7C  y[......M..^.5..\n0080: B9 FA CD 13 BE 91 53 94   A8 60 63 0A 33 66 C5 0B  ......S..`c.3f..\n0090: 6C D7 39 6E B3 5E 1E CC   BF 9D 5B 4A 15 A1 09 40  l.9n.^....[J...@\n00A0: 37 1F D5 12 EB A3 C2 01   F2 D5 77 9B 9B 89 75 A8  7.........w...u.\n00B0: 85 AD 78 68 71 C2 17 3D   B4 4E 7A 64 D1 D3 DC E2  ..xhq..=.Nzd....\n00C0: AC 01 8F BD 62 E5 55 D4   47 4C B8 D2 04 36 05 CB  ....b.U.GL...6..\n00D0: 40 BB 2A 91 5C 2D CC 4A   7A C0 B4 2C E9 5E 50 65  @..-.Jz..,.^Pe\n00E0: AD 9D 79 D4 7B 9F 8A 62   D9 23 82 01 6E DA C0 77  ..y....b.#..n..w\n00F0: 69 A1 07 1A BE D6 CC F3   D8 59 87 07 84 88 CE AF  i........Y......\n]\n\n[read] MD5 and SHA1 hashes:  len = 1317\n0000: 0B 00 05 21 00 05 1E 00   05 1B 30 82 05 17 30 82  ...!......0...0.\n0010: 03 FF A0 03 02 01 02 02   03 01 FD 1E 30 0D 06 09  ............0...\n0020: 2A 86 48 86 F7 0D 01 01   05 05 00 30 40 31 0B 30  .H........0@1.0\n0030: 09 06 03 55 04 06 13 02   55 53 31 17 30 15 06 03  ...U....US1.0...\n0040: 55 04 0A 13 0E 47 65 6F   54 72 75 73 74 2C 20 49  U....GeoTrust, I\n0050: 6E 63 2E 31 18 30 16 06   03 55 04 03 13 0F 47 65  nc.1.0...U....Ge\n0060: 6F 54 72 75 73 74 20 53   53 4C 20 43 41 30 1E 17  oTrust SSL CA0..\n0070: 0D 31 33 30 32 30 32 31   39 31 35 33 37 5A 17 0D  .130202191537Z..\n0080: 31 35 30 35 30 38 30 31   34 39 31 33 5A 30 81 B1  150508014913Z0..\n0090: 31 29 30 27 06 03 55 04   05 13 20 4C 6E 68 7A 4A  1)0'..U... LnhzJ\n00A0: 48 78 63 58 30 62 49 64   6C 48 32 49 54 6E 44 67  HxcX0bIdlH2ITnDg\n00B0: 61 65 77 65 79 38 63 65   35 67 33 31 0B 30 09 06  aewey8ce5g31.0..\n00C0: 03 55 04 06 13 02 55 53   31 17 30 15 06 03 55 04  .U....US1.0...U.\n00D0: 08 13 0E 4E 6F 72 74 68   20 43 61 72 6F 6C 69 6E  ...North Carolin\n00E0: 61 31 10 30 0E 06 03 55   04 07 13 07 52 61 6C 65  a1.0...U....Rale\n00F0: 69 67 68 31 14 30 12 06   03 55 04 0A 13 0B 52 65  igh1.0...U....Re\n0100: 64 20 48 61 74 20 49 6E   63 31 1E 30 1C 06 03 55  d Hat Inc1.0...U\n0110: 04 0B 13 15 52 48 43 20   43 6C 6F 75 64 20 4F 70  ....RHC Cloud Op\n0120: 6F 65 72 61 74 69 6F 6E   73 31 16 30 14 06 03 55  oerations1.0...U\n0130: 04 03 0C 0D 2A 2E 72 68   63 6C 6F 75 64 2E 63 6F  .....rhcloud.co\n0140: 6D 30 82 01 22 30 0D 06   09 2A 86 48 86 F7 0D 01  m0..\"0....H....\n0150: 01 01 05 00 03 82 01 0F   00 30 82 01 0A 02 82 01  .........0......\n0160: 01 00 B1 00 46 3D DB 68   00 31 8E A7 C5 FC 03 4B  ....F=.h.1.....K\n0170: 68 15 2E A7 8F CA 9C 3F   8D BA 24 9D 2D BB E2 B9  h......?..$.-...\n0180: EE A6 94 A6 5B 57 50 CE   20 89 7E 72 F5 F2 41 8B  ....[WP. ..r..A.\n0190: 44 EB 29 F8 7A 14 FE B7   67 BC 14 06 FC B8 4D 85  D.).z...g.....M.\n01A0: 85 9F 0F 9C 3E B1 D0 7A   72 25 14 33 8F F7 BB 50  ....>..zr%.3...P\n01B0: 84 D7 F8 06 E5 77 00 FC   20 FA F2 EF 5C 0E 0D 52  .....w.. .....R\n01C0: C3 27 34 8A C7 B1 DB AF   71 E0 84 66 25 7D 1B 74  .'4.....q..f%..t\n01D0: FB C7 E4 11 08 0D A0 E9   91 E1 7E 5E 3A 4C 45 63  ...........^:LEc\n01E0: BC F0 8B CF B1 39 63 92   6E 0D 3D B8 86 5A CE 7B  .....9c.n.=..Z..\n01F0: 80 D5 33 41 5E A2 FC D1   47 F2 8A 51 5B A2 28 27  ..3A^...G..Q[.('\n0200: C0 3B F3 0C 33 7D 3D E5   CA 5C 78 5B 62 33 18 77  .;..3.=..\\x[b3.w\n0210: 1B 1B F2 78 C9 DB 13 55   82 2B 85 B0 B7 A8 C0 37  ...x...U.+.....7\n0220: B9 FF 24 48 E6 2D D4 42   15 15 56 D6 43 20 20 09  ..$H.-.B..V.C  .\n0230: 1D EE B2 7E 75 E4 72 E3   96 46 CC 00 55 2C 9D 35  ....u.r..F..U,.5\n0240: 1B F6 1D FD 36 AB 5E 86   E0 4B 26 FE 28 8C 29 58  ....6.^..K&.(.)X\n0250: B6 3F 98 CC 60 CA 95 A2   DE C3 1C 55 86 1E CB 0C  .?........U....\n0260: 89 BD 02 03 01 00 01 A3   82 01 A6 30 82 01 A2 30  ...........0...0\n0270: 1F 06 03 55 1D 23 04 18   30 16 80 14 42 79 54 1B  ...U.#..0...ByT.\n0280: 61 CD 55 2B 3E 63 D5 3C   48 57 F5 9F FB 45 CE 4A  a.U+>c.<HW...E.J\n0290: 30 0E 06 03 55 1D 0F 01   01 FF 04 04 03 02 04 B0  0...U...........\n02A0: 30 1D 06 03 55 1D 25 04   16 30 14 06 08 2B 06 01  0...U.%..0...+..\n02B0: 05 05 07 03 01 06 08 2B   06 01 05 05 07 03 02 30  .......+.......0\n02C0: 25 06 03 55 1D 11 04 1E   30 1C 82 0D 2A 2E 72 68  %..U....0..._.rh\n02D0: 63 6C 6F 75 64 2E 63 6F   6D 82 0B 72 68 63 6C 6F  cloud.com..rhclo\n02E0: 75 64 2E 63 6F 6D 30 3D   06 03 55 1D 1F 04 36 30  ud.com0=..U...60\n02F0: 34 30 32 A0 30 A0 2E 86   2C 68 74 74 70 3A 2F 2F  402.0...,http://\n0300: 67 74 73 73 6C 2D 63 72   6C 2E 67 65 6F 74 72 75  gtssl-crl.geotru\n0310: 73 74 2E 63 6F 6D 2F 63   72 6C 73 2F 67 74 73 73  st.com/crls/gtss\n0320: 6C 2E 63 72 6C 30 1D 06   03 55 1D 0E 04 16 04 14  l.crl0...U......\n0330: B4 54 E2 D4 AA F2 75 12   17 CD F2 21 4A D9 CB 30  .T....u....!J..0\n0340: 75 00 AE 3B 30 0C 06 03   55 1D 13 01 01 FF 04 02  u..;0...U.......\n0350: 30 00 30 6F 06 08 2B 06   01 05 05 07 01 01 04 63  0.0o..+........c\n0360: 30 61 30 2A 06 08 2B 06   01 05 05 07 30 01 86 1E  0a0_..+.....0...\n0370: 68 74 74 70 3A 2F 2F 67   74 73 73 6C 2D 6F 63 73  http://gtssl-ocs\n0380: 70 2E 67 65 6F 74 72 75   73 74 2E 63 6F 6D 30 33  p.geotrust.com03\n0390: 06 08 2B 06 01 05 05 07   30 02 86 27 68 74 74 70  ..+.....0..'http\n03A0: 3A 2F 2F 67 74 73 73 6C   2D 61 69 61 2E 67 65 6F  ://gtssl-aia.geo\n03B0: 74 72 75 73 74 2E 63 6F   6D 2F 67 74 73 73 6C 2E  trust.com/gtssl.\n03C0: 63 72 74 30 4C 06 03 55   1D 20 04 45 30 43 30 41  crt0L..U. .E0C0A\n03D0: 06 0A 60 86 48 01 86 F8   45 01 07 36 30 33 30 31  ...H...E..60301\n03E0: 06 08 2B 06 01 05 05 07   02 01 16 25 68 74 74 70  ..+........%http\n03F0: 3A 2F 2F 77 77 77 2E 67   65 6F 74 72 75 73 74 2E  ://www.geotrust.\n0400: 63 6F 6D 2F 72 65 73 6F   75 72 63 65 73 2F 63 70  com/resources/cp\n0410: 73 30 0D 06 09 2A 86 48   86 F7 0D 01 01 05 05 00  s0....H........\n0420: 03 82 01 01 00 5E AA EE   6E B9 31 FF DF C8 BF 89  .....^..n.1.....\n0430: EA CD 50 D8 F1 CF F3 CE   BE E8 35 A8 AC 5C 8C 3C  ..P.......5...<\n0440: CB 17 05 70 3F 02 9E 07   C3 75 F2 64 3F 46 10 1D  ...p?....u.d?F..\n0450: C9 F6 75 89 5D AC D5 6C   57 93 5F D6 A8 C3 27 9A  ..u.]..lW....'.\n0460: 18 CC D3 8F 04 BB 11 00   C4 5B F5 8D 9B 99 2D 84  .........[....-.\n0470: 9D 20 89 32 25 E5 65 39   4A 28 05 64 57 5D C7 5A  . .2%.e9J(.dW].Z\n0480: FB 4E FF 04 8B 2A 2E C5   E0 C4 91 7F A7 5F B4 9A  .N............\n0490: 8A 44 C6 4C A9 79 5B 8E   A6 C2 E2 DB 02 4D EE 8C  .D.L.y[......M..\n04A0: 5E DA 35 1B 7C B9 FA CD   13 BE 91 53 94 A8 60 63  ^.5........S..c\n04B0: 0A 33 66 C5 0B 6C D7 39   6E B3 5E 1E CC BF 9D 5B  .3f..l.9n.^....[\n04C0: 4A 15 A1 09 40 37 1F D5   12 EB A3 C2 01 F2 D5 77  J...@7.........w\n04D0: 9B 9B 89 75 A8 85 AD 78   68 71 C2 17 3D B4 4E 7A  ...u...xhq..=.Nz\n04E0: 64 D1 D3 DC E2 AC 01 8F   BD 62 E5 55 D4 47 4C B8  d........b.U.GL.\n04F0: D2 04 36 05 CB 40 BB 2A   91 5C 2D CC 4A 7A C0 B4  ..6..@.*.\\-.Jz..\n0500: 2C E9 5E 50 65 AD 9D 79   D4 7B 9F 8A 62 D9 23 82  ,.^Pe..y....b.#.\n0510: 01 6E DA C0 77 69 A1 07   1A BE D6 CC F3 D8 59 87  .n..wi........Y.\n0520: 07 84 88 CE AF                                     .....\n[Raw read]: length = 5\n0000: 16 03 01 00 04                                     .....\n[Raw read]: length = 4\n0000: 0E 00 00 00                                        ....\nThread-3, READ: TLSv1 Handshake, length = 4\n*** ServerHelloDone\n[read] MD5 and SHA1 hashes:  len = 4\n0000: 0E 00 00 00                                        ....\n*** ClientKeyExchange, RSA PreMasterSecret, TLSv1\n[write] MD5 and SHA1 hashes:  len = 262\n0000: 10 00 01 02 01 00 75 5B   AE 17 AC C2 95 1E 4F D3  ......u[......O.\n0010: BC 66 F4 31 DA 03 26 D2   BA 0C D4 B3 83 CD 99 D3  .f.1..&.........\n0020: F3 D8 04 7B CF 84 A6 98   A4 35 E6 E9 99 07 C5 5B  .........5.....[\n0030: 67 18 45 55 96 65 8D 3F   9B 12 F5 1B 6C 82 66 FF  g.EU.e.?....l.f.\n0040: 30 79 C7 C3 BA B4 E8 39   B1 49 DC E4 09 C9 B0 1C  0y.....9.I......\n0050: 54 58 8E 51 99 1D 0E 42   E7 A5 FD 11 41 72 F1 37  TX.Q...B....Ar.7\n0060: 23 2B D4 4F 0D 3A 15 D3   D5 5E 56 78 65 E7 6C C7  #+.O.:...^Vxe.l.\n0070: 52 4C 42 53 4A 77 68 32   CF 7B 8F B8 84 D4 92 D5  RLBSJwh2........\n0080: 30 2F 7C 48 06 05 A8 DD   EF 5D 8D CF DB B5 86 88  0/.H.....]......\n0090: E9 41 09 6E 63 D9 A7 AD   B4 A7 75 51 7F E3 69 95  .A.nc.....uQ..i.\n00A0: DF 75 9F BF 8C A4 AE 56   05 57 A1 10 3C 5C FC EE  .u.....V.W..<\\..\n00B0: 7F 4A 32 F6 5A 81 CA 64   A5 5D 7F 5E BC DF C8 65  .J2.Z..d.].^...e\n00C0: A0 67 9E 9A C6 28 F5 4E   C9 7B ED 77 8C 7D A5 80  .g...(.N...w....\n00D0: DE 8D 57 D7 F5 13 A7 69   A9 9A AC 21 CB D7 D7 E8  ..W....i...!....\n00E0: 78 CE 90 C6 DB F4 0E A8   B9 08 D5 64 8D B6 03 02  x..........d....\n00F0: 2A DA 2E 04 7D 94 14 29   99 CF D1 CC 9C DC 49 01  *......)......I.\n0100: 14 D1 AB 2F 79 75                                  .../yu\npool-1-thread-1, WRITE: TLSv1 Handshake, length = 262\nSESSION KEYGEN:\nPreMaster Secret:\n0000: 03 01 62 D4 E3 EE 19 1D   11 79 25 EE 0C D1 06 D7  ..b......y%.....\n0010: 65 1B 29 FC 69 9E 7B C2   91 02 2E F5 B5 C0 8B 44  e.).i..........D\n0020: 2D 57 53 18 02 C8 FC EF   7F 29 71 C8 D1 F9 32 EF  -WS......)q...2.\nCONNECTION KEYGEN:\nClient Nonce:\n0000: 51 28 54 8B 58 F5 DD 41   84 64 AA 63 EC B6 8C CA  Q(T.X..A.d.c....\n0010: 4E 60 AD 23 3B D2 FF A9   AE 7D 31 B1 60 DB F2 2B  N.#;.....1...+\nServer Nonce:\n0000: 51 28 54 8B 11 98 E9 47   BA 92 7D C9 DE 4E 49 A6  Q(T....G.....NI.\n0010: 64 BD 77 C9 04 A2 D0 73   E0 F7 C1 0F 91 D4 CD 66  d.w....s.......f\nMaster Secret:\n0000: F8 8D 6A 5C 43 2F 3A 10   19 7E B8 0C 8D E6 BD F2  ..j\\C/:.........\n0010: F3 B8 9D C5 81 F9 7E E3   6B 8E C2 14 D2 63 CA 5D  ........k....c.]\n0020: 08 F7 CF 76 C6 7A BC C8   E2 56 37 61 00 98 CA B1  ...v.z...V7a....\nClient MAC write Secret:\n0000: 60 9E 9A 0D F1 E3 0C 4E   0B 44 73 2B AF 0F 3F EE......N.Ds+..?.\n0010: 6B 7A 24 49                                        kz$I\nServer MAC write Secret:\n0000: E7 0A 5B 72 80 08 84 69   11 F7 51 3B 7B 9E 03 2C  ..[r...i..Q;...,\n0010: 1F 47 5A F4                                        .GZ.\nClient write key:\n0000: B2 52 D6 64 1F D5 38 27   B4 A3 D2 90 EE 53 2A 5B  .R.d..8'.....S[\nServer write key:\n0000: 38 35 11 40 8B C6 27 34   98 03 78 9C F9 64 C8 13  85.@..'4..x..d..\nClient write IV:\n0000: 13 0E 5B 41 05 60 07 63   41 9E D4 05 F7 59 00 A6  ..[A.`.cA....Y..\nServer write IV:\n0000: EF F2 F9 FF 4D 01 08 54   C4 6D 5D 29 55 93 41 67  ....M..T.m])U.Ag\npool-1-thread-1, WRITE: TLSv1 Change Cipher Spec, length = 1\n* Finished\nverify_data:  { 10, 3, 51, 25, 74, 9, 146, 52, 82, 204, 90, 100 }\n\n[write] MD5 and SHA1 hashes:  len = 16\n0000: 14 00 00 0C 0A 03 33 19   4A 09 92 34 52 CC 5A 64  ......3.J..4R.Zd\nPadded plaintext before ENCRYPTION:  len = 48\n0000: 14 00 00 0C 0A 03 33 19   4A 09 92 34 52 CC 5A 64  ......3.J..4R.Zd\n0010: A7 22 F9 52 FC 4A EB 4C   01 1E B0 27 38 07 6B 2B  .\".R.J.L...'8.k+\n0020: 52 DD 62 1E 0B 0B 0B 0B   0B 0B 0B 0B 0B 0B 0B 0B  R.b.............\npool-1-thread-1, WRITE: TLSv1 Handshake, length = 48\n[Raw write]: length = 267\n0000: 16 03 01 01 06 10 00 01   02 01 00 75 5B AE 17 AC  ...........u[...\n0010: C2 95 1E 4F D3 BC 66 F4   31 DA 03 26 D2 BA 0C D4  ...O..f.1..&....\n0020: B3 83 CD 99 D3 F3 D8 04   7B CF 84 A6 98 A4 35 E6  ..............5.\n0030: E9 99 07 C5 5B 67 18 45   55 96 65 8D 3F 9B 12 F5  ....[g.EU.e.?...\n0040: 1B 6C 82 66 FF 30 79 C7   C3 BA B4 E8 39 B1 49 DC  .l.f.0y.....9.I.\n0050: E4 09 C9 B0 1C 54 58 8E   51 99 1D 0E 42 E7 A5 FD  .....TX.Q...B...\n0060: 11 41 72 F1 37 23 2B D4   4F 0D 3A 15 D3 D5 5E 56  .Ar.7#+.O.:...^V\n0070: 78 65 E7 6C C7 52 4C 42   53 4A 77 68 32 CF 7B 8F  xe.l.RLBSJwh2...\n0080: B8 84 D4 92 D5 30 2F 7C   48 06 05 A8 DD EF 5D 8D  .....0/.H.....].\n0090: CF DB B5 86 88 E9 41 09   6E 63 D9 A7 AD B4 A7 75  ......A.nc.....u\n00A0: 51 7F E3 69 95 DF 75 9F   BF 8C A4 AE 56 05 57 A1  Q..i..u.....V.W.\n00B0: 10 3C 5C FC EE 7F 4A 32   F6 5A 81 CA 64 A5 5D 7F  .<...J2.Z..d.].\n00C0: 5E BC DF C8 65 A0 67 9E   9A C6 28 F5 4E C9 7B ED  ^...e.g...(.N...\n00D0: 77 8C 7D A5 80 DE 8D 57   D7 F5 13 A7 69 A9 9A AC  w......W....i...\n00E0: 21 CB D7 D7 E8 78 CE 90   C6 DB F4 0E A8 B9 08 D5  !....x..........\n00F0: 64 8D B6 03 02 2A DA 2E   04 7D 94 14 29 99 CF D1  d..........)...\n0100: CC 9C DC 49 01 14 D1 AB   2F 79 75                 ...I..../yu\n[Raw write]: length = 6\n0000: 14 03 01 00 01 01                                  ......\n[Raw write]: length = 53\n0000: 16 03 01 00 30 F9 38 EA   4C 00 CE 1F F1 C7 02 ED  ....0.8.L.......\n0010: C8 F2 7E 95 E2 50 C1 C0   73 50 B7 66 D5 B3 9B 56  .....P..sP.f...V\n0020: 52 96 74 EE 71 F8 34 E9   05 A3 67 C5 36 5F CA 4F  R.t.q.4...g.6.O\n0030: 73 1C A9 CA 36                                     s...6\n[Raw read]: length = 5\n0000: 14 03 01 00 01                                     .....\n[Raw read]: length = 1\n0000: 01                                                 .\nThread-3, READ: TLSv1 Change Cipher Spec, length = 1\n[Raw read]: length = 5\n0000: 16 03 01 00 30                                     ....0\n[Raw read]: length = 48\n0000: 99 1B 0A AA CD C3 27 BF   4A 5D AE AC 8B 81 28 D4  ......'.J]....(.\n0010: 76 63 D6 BB 03 D3 FE CB   97 A3 2D 45 8C AF D1 B9  vc........-E....\n0020: A2 7D B9 E0 45 40 9C 4F   8C 34 26 7A 69 FB 36 26  ....E@.O.4&zi.6&\nThread-3, READ: TLSv1 Handshake, length = 48\nPadded plaintext after DECRYPTION:  len = 48\n0000: 14 00 00 0C F8 E0 C4 30   B0 B0 F3 FE AA DA 2D D7  .......0......-.\n0010: D4 CC 00 21 CF EA C2 AA   FB 75 00 76 2C 49 A7 DC  ...!.....u.v,I..\n0020: 54 7A 8F 15 0B 0B 0B 0B   0B 0B 0B 0B 0B 0B 0B 0B  Tz..............\n*_* Finished\nverify_data:  { 248, 224, 196, 48, 176, 176, 243, 254, 170, 218, 45, 215 }\n\n%% Cached client session: [Session-1, TLS_RSA_WITH_AES_128_CBC_SHA]\n[read] MD5 and SHA1 hashes:  len = 16\n0000: 14 00 00 0C F8 E0 C4 30   B0 B0 F3 FE AA DA 2D D7  .......0......-.\n[Raw write (bb)]: length = 0\nPadded plaintext before ENCRYPTION:  len = 208\n0000: 47 45 54 20 2F 6A 53 6B   61 74 53 65 72 76 65 72  GET /jSkatServer\n0010: 2F 73 65 72 76 65 72 32   20 48 54 54 50 2F 31 2E  /server2 HTTP/1.\n0020: 31 0D 0A 68 6F 73 74 3A   20 64 69 79 2D 74 6F 62  1..host: diy-tob\n0030: 61 67 2E 72 68 63 6C 6F   75 64 2E 63 6F 6D 3A 38  ag.rhcloud.com:8\n0040: 34 34 33 0D 0A 75 70 67   72 61 64 65 3A 20 77 65  443..upgrade: we\n0050: 62 73 6F 63 6B 65 74 0D   0A 63 6F 6E 6E 65 63 74  bsocket..connect\n0060: 69 6F 6E 3A 20 55 70 67   72 61 64 65 0D 0A 73 65  ion: Upgrade..se\n0070: 63 2D 77 65 62 73 6F 63   6B 65 74 2D 76 65 72 73  c-websocket-vers\n0080: 69 6F 6E 3A 20 31 33 0D   0A 73 65 63 2D 77 65 62  ion: 13..sec-web\n0090: 73 6F 63 6B 65 74 2D 6B   65 79 3A 20 4E 5A 52 34  socket-key: NZR4\n00A0: 4E 75 34 79 4A 32 41 2F   6F 41 49 73 48 53 43 62  Nu4yJ2A/oAIsHSCb\n00B0: 79 51 3D 3D 0D 0A 0D 0A   66 5D 81 22 80 B9 F3 95  yQ==....f].\"....\n00C0: A1 33 03 DC 75 83 85 07   2A 74 38 DD 03 03 03 03  .3..u..._t8.....\nWebsocketWriteThread, WRITE: TLSv1 Application Data, length = 184\n[Raw write (bb)]: length = 213\n0000: 17 03 01 00 D0 57 98 01   F9 80 4E 57 21 67 50 A3  .....W....NW!gP.\n0010: 15 B4 E6 50 16 4F 81 41   76 73 99 F9 23 B4 DF 69  ...P.O.Avs..#..i\n0020: 89 D7 45 E0 98 00 63 A1   69 4E A1 6B E9 A2 F7 AB  ..E...c.iN.k....\n0030: 78 FC AF BB 86 59 80 09   EE FD C6 F0 1E ED 72 51  x....Y........rQ\n0040: 3F 68 10 DD 48 62 00 8F   EC 8A 6A 10 13 72 C4 7D  ?h..Hb....j..r..\n0050: 38 1B DE B9 7D 09 06 1B   2F A0 25 D7 4B 68 38 36  8......./.%.Kh86\n0060: 51 5B 5C 44 58 5D 17 72   AF C7 51 B5 3B 69 43 EF  Q[\\DX].r..Q.;iC.\n0070: 07 F1 82 AF 62 32 BC 25   C4 7B 50 BE EA 16 56 D6  ....b2.%..P...V.\n0080: 28 05 E9 7A 9E FA C7 30   1C AC DB 4D 26 EF 26 A5  (..z...0...M&.&.\n0090: E4 D7 D3 0F EA AC 3B DB   01 55 43 42 99 08 C8 D9  ......;..UCB....\n00A0: 30 A2 BD 21 6D 62 99 70   89 CD A3 D8 60 47 99 5D  0..!mb.p....G.]\n00B0: F8 7D 03 19 19 AC D8 ED   F2 16 14 C8 E7 09 A6 54  ...............T\n00C0: 73 FA 48 9F 63 4B FD FB   33 61 B5 74 19 2E 8B 27  s.H.cK..3a.t...'\n00D0: CD 68 0E FF C9                                     .h...\n[Raw read (bb)]: length = 37\n0000: 17 03 01 00 20 9C BB 3B   29 70 8E EA 7A DC 31 7B  .... ..;)p..z.1.\n0010: 5E 2A 2D 62 D1 47 24 14   AC 5B 27 F0 3C EE 2A 0E  ^_-b.G$..['.<._.\n0020: 41 7E 0B 46 76                                     A..Fv\nPadded plaintext after DECRYPTION:  len = 32\n0000: 4E 62 05 CC 7A 6C 3B D3   AD 9E 91 5D 50 5D 8B 7F  Nb..zl;....]P]..\n0010: 65 06 AB F2 0B 0B 0B 0B   0B 0B 0B 0B 0B 0B 0B 0B  e...............\nThread-3, called closeOutbound()\nThread-3, closeOutboundInternal()\nThread-3, SEND TLSv1 ALERT:  warning, description = close_notify\nPadded plaintext before ENCRYPTION:  len = 32\n0000: 01 00 0B 65 F0 AC 1B 0A   51 35 C2 1E E2 4C 83 A8  ...e....Q5...L..\n0010: 02 E5 19 6A FC E2 09 09   09 09 09 09 09 09 09 09  ...j............\nThread-3, WRITE: TLSv1 Alert, length = 32\n%% Invalidated:  [Session-1, TLS_RSA_WITH_AES_128_CBC_SHA]\n[Raw write]: length = 37\n0000: 15 03 01 00 20 8D 59 15   F2 06 3D 5A 41 37 1A C0  .... .Y...=ZA7..\n0010: 13 2A F1 C2 89 BD 9D D1   81 1E 06 6C 3A 1A 4A EC  ._.........l:.J.\n0020: 3B B7 BC A3 05                                     ;....\n[Raw read (bb)]: length = 165\n0000: 17 03 01 00 A0 94 98 F9   14 D1 4E F5 8A F4 78 57  ..........N...xW\n0010: 36 3C E7 DD 31 70 8C EA   0A A4 F2 C6 0B 64 AC CA  6<..1p.......d..\n0020: 16 4E 7F 4C 2F 60 82 0C   CC C6 6C 03 C5 89 AC 34  .N.L/....l....4\n0030: 84 89 C9 76 A6 DC C7 05   C8 DC DA A8 55 1A 51 5D  ...v........U.Q]\n0040: 3A C2 87 E5 3A 93 D5 46   90 99 03 6F 98 24 A3 A6  :...:..F...o.$..\n0050: 7E DA 6D 87 A8 DE B2 00   1F 1E 8E 77 4B 04 A6 5E  ..m........wK..^\n0060: 18 A7 B7 AA E8 EB C1 23   31 4B 84 78 B5 88 41 A5  .......#1K.x..A.\n0070: C5 CF 66 CF DD 82 16 71   B2 E4 DD C0 C8 1A 52 C2  ..f....q......R.\n0080: 04 2F 6E 2F F2 34 DD 1F   5C AC 2C 34 7E 66 73 EC  ./n/.4...,4.fs.\n0090: BE 7B 2A 48 A6 85 49 38   5C 57 AB 6F 21 00 F0 95  ..*H..I8\\W.o!...\n00A0: 05 96 9E 39 4A                                     ...9J\nPadded plaintext after DECRYPTION:  len = 160\n0000: 48 54 54 50 2F 31 2E 31   20 31 30 31 20 53 77 69  HTTP/1.1 101 Swi\n0010: 74 63 68 69 6E 67 20 50   72 6F 74 6F 63 6F 6C 73  tching Protocols\n0020: 0D 0A 55 70 67 72 61 64   65 3A 20 77 65 62 73 6F  ..Upgrade: webso\n0030: 63 6B 65 74 0D 0A 43 6F   6E 6E 65 63 74 69 6F 6E  cket..Connection\n0040: 3A 20 55 70 67 72 61 64   65 0D 0A 53 65 63 2D 57  : Upgrade..Sec-W\n0050: 65 62 53 6F 63 6B 65 74   2D 41 63 63 65 70 74 3A  ebSocket-Accept:\n0060: 20 52 69 49 48 4A 72 58   66 31 62 47 77 32 6F 6E   RiIHJrXf1bGw2on\n0070: 67 58 66 73 55 68 56 52   2B 64 71 67 3D 0D 0A 0D  gXfsUhVR+dqg=...\n0080: 0A 2B CD 65 C6 F4 D8 55   0F 59 97 51 8B 64 27 2C  .+.e...U.Y.Q.d',\n0090: 05 4F 17 7C 28 0A 0A 0A   0A 0A 0A 0A 0A 0A 0A 0A  .O..(...........\n. WebSocketImple.Debug = true; doesn't yield much output. Since I don't know what a gist is here the output directly again:\n`write(183): {GET /jSkatServer/server HTTP/1.1\nhost: diy-tobag.rhcloud.com:8443\nupgrade: websocket\nconnection: Upgrade\nsec-websocket-version: 13\nsec-websocket-key: MMS57NZjOgsYHQEgbu6mZA==\n}`\nWith the older Java version (1.7.0) there is more output and it works.\n. I added you on skype.\nI also found out that the connection is terminated because SocketChannelIOHelper.read(...) returns false, because channel.read(buf) returns 0 sometimes.\nI changed \"return read != 0;\" to \"return true;\" and everything worked again. But I guess that's not the proper way to fix this :-P.\n. ",
    "temka1234": "Hi, David.\nAre you gonna merge master and wss branches? I'm concerned about \"certificates fix\" )\n. Everything seems fine with the fix, waiting for merge. Thanx\n. I'm new in git and don't know how to create pull request. There is no \"Pull Request\" button in panel.\n@downtownallday fix resolves my problem.\n. Nothing changed if i make something like this:\nwhile(true) { \n    try {\n        Thread.sleep(10000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }               \n}\n. The problem occurs when using DefaultSSLWebSocketClientFactory.\nWhen server send close frame client main thread doesn't stop because this cycle never ends:\n(WebSocketClient.interruptableRun)\n...\nwhile ( SocketChannelIOHelper.readMore( buff, conn, w ) ) {\n    conn.decode( buff );\n}\n...\nMethod SocketChannelIOHelper.readMore( buff, conn, w ) has no delay and CPU usage increased.\nThis happens because (SSLSocketChannel2)channel.isNeedRead() always return true when server closes the connection (engineResult.getStatus() in this moment is Status.CLOSED):\n(SSLSocketChannel2)\n...\n@Override\npublic boolean isNeedRead() {\n    return inData.hasRemaining() || ( inCrypt.hasRemaining() && engineResult.getStatus() != Status.BUFFER_UNDERFLOW);\n}\n...\nIs this the correct fix?\n(SSLSocketChannel2)\n...\n@Override\npublic boolean isNeedRead() {\n    return inData.hasRemaining() || ( inCrypt.hasRemaining() && engineResult.getStatus() != Status.BUFFER_UNDERFLOW && engineResult.getStatus() != Status.CLOSED);\n}\n...\n. Sorry for duplicate issue, didn't notice this https://github.com/TooTallNate/Java-WebSocket/issues/171.\n. ",
    "fg0711": "it can work on java console.but can not work on android 2.3 .can solve this problem?\ni found socket.io use this sdk.how thire solve this problem.\n. ",
    "ck1125": "Hi David\nHappy to talk it through. Will skype you tomorrow evening (7pm GMT) if that\nis ok for you or can chat also before then.\nCheers\nEli.\nOn Thu, Feb 28, 2013 at 7:49 PM, David Rohmer notifications@github.comwrote:\n\n@ck1125 https://github.com/ck1125 thank you very much for your work.\ni am really sorry that i did not merged yet. The reason that i have no\nexperience with travis or gradle.\nIs it possible to briefly talk about this pull before merging via skype or\ngoogle talk?\nMy github name is also my skype name.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/pull/156#issuecomment-14253379\n.\n. \n",
    "NexorProject": "I've tried to use your post to create and accept the certificate.\nIf I navigate to https://localhost:1234 it says that the browser can't show up any page (this is correct because the certificate was accepted on this way and i haven't any \"normal\" WebServer which is listen for HTML-Sites).\nThe complete exception comes from @Override onError. The Exceptionname is SSLHandshakeException. The Exception:\njavax.net.ssl.SSLHandshakeException: no cipher suites in common\n    at sun.security.ssl.Handshaker.checkThrown(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.checkTaskThrown(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.writeAppRecord(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.wrap(Unknown Source)\n    at javax.net.ssl.SSLEngine.wrap(Unknown Source)\n    at org.java_websocket.SSLSocketChannel2.wrap(SSLSocketChannel2.java:141)\n    at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:132)\n    at org.java_websocket.SSLSocketChannel2.write(SSLSocketChannel2.java:192)\n    at org.java_websocket.SSLSocketChannel2.writeMore(SSLSocketChannel2.java:303)\n    at org.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:47)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:348)\n    at java.lang.Thread.run(Unknown Source)\nCaused by: javax.net.ssl.SSLHandshakeException: no cipher suites in common\n    at sun.security.ssl.Alerts.getSSLException(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.fatal(Unknown Source)\n    at sun.security.ssl.Handshaker.fatalSE(Unknown Source)\n    at sun.security.ssl.Handshaker.fatalSE(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.chooseCipherSuite(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.clientHello(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.processMessage(Unknown Source)\n    at sun.security.ssl.Handshaker.processLoop(Unknown Source)\n    at sun.security.ssl.Handshaker$1.run(Unknown Source)\n    at sun.security.ssl.Handshaker$1.run(Unknown Source)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at sun.security.ssl.Handshaker$DelegatedTask.run(Unknown Source)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\n    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)\n    at java.util.concurrent.FutureTask.run(Unknown Source)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n    ... 1 more\nbut know I see this \"no cipher suites in common\", so i think it's a problem with my Java installation instead of your library. Any ideas to fix it?\n. I think it gives many missunderstandings with my posts.. so here any relevant informations for you:\nTest-Browsers: Firefox 20.0, Chrome 25.0.1364.97 m (the Bowsers stand in the title)\nThe Self-Signed-Certificate Tutorial that I used: http://www.techbrainwave.com/?p=953\nAfter I starting the Server I've tried at FIRST to go on \"https://localhost:1234\". THEN i accepted the certificate in both browser. AFTER THAT my browsers say \"cannot load page\" (in FF) and it has an SSL-Security-Failure (Code: 107) in Chrome. In Both connection tests (from both browser to https://localhost:1234) the Exception was catched.\nBecause i tried many different Certificate-Tutorials I delete the Certificate many times manually from my Browsers and Import the Certificates manuelly into the Browsers. But no one of this two methods solve the problem.\nI've read ALL your Posts because i've evaluate your Library for our Project.\nIf i try to go on ws://localhost:1234 it gives no problems. The connection works perfectly and i can send and receive from and to server, from and to client (browser).\nMy SSL initialization Code:\nString STORETYPE = \"JKS\";\nString KEYSTORE = \"D:\\SSL\\truststore.jks\";\nString STOREPASSWORD = \"test1234\";\nString KEYPASSWORD = \"test4321\";\nKeyStore store = KeyStore.getInstance(STORETYPE);\nFile keyFile = new File(KEYSTORE);\nstore.load(new FileInputStream(keyFile), STOREPASSWORD.toCharArray());\nKeyManagerFactory keyFactory = KeyManagerFactory.getInstance(\"SunX509\");\nkeyFactory.init(store, KEYPASSWORD.toCharArray());\nTrustManagerFactory trustFactory = TrustManagerFactory.getInstance(\"SunX509\");\ntrustFactory.init(store);\nSSLContext sslContext = SSLContext.getInstance(\"TLS\");\nsslContext.init(keyFactory.getKeyManagers(), trustFactory.getTrustManagers(), null);\nthis.setWebSocketFactory(new DefaultSSLWebSocketServerFactory(sslContext));\n-> The Passwords are correct. All three files saved in the same directory \"D:\\SSL\"\nAnd the Exception that i catch comes from YOUR method \"onError\"\nGives this you any idea what i've done false? Or have you a Tutorial for the Keystore and Certificate which is very different from mine?\n. I've tried to use javax.net.debug = all (as System.setProperty in Java Code because I use Eclipse for testing and coding). In the console will show up this:\nadding as trusted cert:\n  Subject: CN=Alexander Ligt, OU=Comercial Online Service, O=Secure Pool, L=Z?rich, ST=Z?rich, C=CH\n  Issuer:  CN=Alexander Ligt, OU=Comercial Online Service, O=Secure Pool, L=Z?rich, ST=Z?rich, C=CH\n  Algorithm: RSA; Serial number: 0x242b578b\n  Valid from Mon Mar 04 11:00:54 CET 2013 until Fri May 06 12:00:54 CEST 2022\ntrigger seeding of SecureRandom\ndone seeding SecureRandom\nServer started on port 1234\nUsing SSLEngineImpl.\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA\nAllow unsafe renegotiation: false\nAllow legacy hello messages: true\nIs initial handshake: true\nIs secure renegotiation: false\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for TLSv1.1\n[Raw read]: length = 5\n0000: 16 03 01 00 8F                                     .....\n[Raw read]: length = 143\n0000: 01 00 00 8B 03 01 51 50   1E 72 45 5F 5E 88 5C 2F  ......QP.rE_^.\\/\n0010: 42 C6 92 A8 2D 10 7C 37   F9 F1 53 E1 E0 6C BA 1F  B...-..7..S..l..\n0020: 8C 7F 72 3B AA F4 00 00   48 00 FF C0 0A C0 14 00  ..r;....H.......\n0030: 88 00 87 00 39 00 38 C0   0F C0 05 00 84 00 35 C0  ....9.8.......5.\n0040: 07 C0 09 C0 11 C0 13 00   45 00 44 00 33 00 32 C0  ........E.D.3.2.\n0050: 0C C0 0E C0 02 C0 04 00   96 00 41 00 05 00 04 00  ..........A.....\n0060: 2F C0 08 C0 12 00 16 00   13 C0 0D C0 03 FE FF 00  /...............\n0070: 0A 01 00 00 1A 00 0A 00   08 00 06 00 17 00 18 00  ................\n0080: 19 00 0B 00 02 01 00 00   23 00 00 33 74 00 00     ........#..3t..\nWebsocketSelector16, READ: TLSv1 Handshake, length = 143\n*** ClientHello, TLSv1\nRandomCookie:  GMT: 1364205170 bytes = { 69, 95, 94, 136, 92, 47, 66, 198, 146, 168, 45, 16, 124, 55, 249, 241, 83, 225, 224, 108, 186, 31, 140, 127, 114, 59, 170, 244 }\nSession ID:  {}\nCipher Suites: [TLS_EMPTY_RENEGOTIATION_INFO_SCSV, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA, TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_ECDH_RSA_WITH_AES_256_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_CAMELLIA_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_RC4_128_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_RC4_128_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA, TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_ECDH_RSA_WITH_RC4_128_SHA, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA, TLS_ECDH_ECDSA_WITH_RC4_128_SHA, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_SEED_CBC_SHA, TLS_RSA_WITH_CAMELLIA_128_CBC_SHA, SSL_RSA_WITH_RC4_128_SHA, SSL_RSA_WITH_RC4_128_MD5, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA, SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA]\nCompression Methods:  { 0 }\nExtension elliptic_curves, curve names: {secp256r1, secp384r1, secp521r1}\nExtension ec_point_formats, formats: [uncompressed]\nUnsupported extension type_35, data: \nUnsupported extension type_13172, data: \n\n[read] MD5 and SHA1 hashes:  len = 143\n0000: 01 00 00 8B 03 01 51 50   1E 72 45 5F 5E 88 5C 2F  ......QP.rE_^.\\/\n0010: 42 C6 92 A8 2D 10 7C 37   F9 F1 53 E1 E0 6C BA 1F  B...-..7..S..l..\n0020: 8C 7F 72 3B AA F4 00 00   48 00 FF C0 0A C0 14 00  ..r;....H.......\n0030: 88 00 87 00 39 00 38 C0   0F C0 05 00 84 00 35 C0  ....9.8.......5.\n0040: 07 C0 09 C0 11 C0 13 00   45 00 44 00 33 00 32 C0  ........E.D.3.2.\n0050: 0C C0 0E C0 02 C0 04 00   96 00 41 00 05 00 04 00  ..........A.....\n0060: 2F C0 08 C0 12 00 16 00   13 C0 0D C0 03 FE FF 00  /...............\n0070: 0A 01 00 00 1A 00 0A 00   08 00 06 00 17 00 18 00  ................\n0080: 19 00 0B 00 02 01 00 00   23 00 00 33 74 00 00     ........#..3t..\n%% Initialized:  [Session-1, SSL_NULL_WITH_NULL_NULL]\npool-1-thread-1, fatal error: 40: no cipher suites in common\njavax.net.ssl.SSLHandshakeException: no cipher suites in common\n%% Invalidated:  [Session-1, SSL_NULL_WITH_NULL_NULL]\npool-1-thread-1, SEND TLSv1 ALERT:  fatal, description = handshake_failure\npool-1-thread-1, WRITE: TLSv1 Alert, length = 2\njavax.net.ssl.SSLHandshakeException: no cipher suites in common\nWebsocketSelector16, fatal: engine already closed.  Rethrowing javax.net.ssl.SSLHandshakeException: no cipher suites in common\nWebsocketSelector16, called closeOutbound()\nWebsocketSelector16, closeOutboundInternal()\nUsing SSLEngineImpl.\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA\nAllow unsafe renegotiation: false\nAllow legacy hello messages: true\nIs initial handshake: true\nIs secure renegotiation: false\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for SSLv2Hello\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for SSLv3\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for TLSv1.1\n[Raw read]: length = 5\n0000: 16 03 00 00 53                                     ....S\n[Raw read]: length = 83\n0000: 01 00 00 4F 03 00 51 50   1E 73 0C 51 AE 56 C9 7F  ...O..QP.s.Q.V..\n0010: 4A 44 60 96 2D 9A B9 0C   C7 30 5A 87 46 B3 6B 8E  JD`.-....0Z.F.k.\n0020: 40 23 23 E1 1A FC 00 00   28 00 FF 00 88 00 87 00  @##.....(.......\n0030: 39 00 38 00 84 00 35 00   45 00 44 00 33 00 32 00  9.8...5.E.D.3.2.\n0040: 96 00 41 00 05 00 04 00   2F 00 16 00 13 FE FF 00  ..A...../.......\n0050: 0A 01 00                                           ...\nWebsocketSelector16, READ: SSLv3 Handshake, length = 83\n    at sun.security.ssl.Handshaker.checkThrown(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.checkTaskThrown(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.writeAppRecord(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.wrap(Unknown Source)\n    at javax.net.ssl.SSLEngine.wrap(Unknown Source)\n    at org.java_websocket.SSLSocketChannel2.wrap(SSLSocketChannel2.java:141)\n    at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:132)\n    at org.java_websocket.SSLSocketChannel2.write(SSLSocketChannel2.java:192)\n    at org.java_websocket.SSLSocketChannel2.writeMore(SSLSocketChannel2.java:303)\n    at org.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:47)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:348)\n    at java.lang.Thread.run(Unknown Source)\nCaused by: javax.net.ssl.SSLHandshakeException: no cipher suites in common\n    at sun.security.ssl.Alerts.getSSLException(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.fatal(Unknown Source)\n    at sun.security.ssl.Handshaker.fatalSE(Unknown Source)\n    at sun.security.ssl.Handshaker.fatalSE(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.chooseCipherSuite(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.clientHello(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.processMessage(Unknown Source)\n    at sun.security.ssl.Handshaker.processLoop(Unknown Source)\n    at sun.security.ssl.Handshaker$1.run(Unknown Source)\n    at sun.security.ssl.Handshaker$1.run(Unknown Source)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at sun.security.ssl.Handshaker$DelegatedTask.run(Unknown Source)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\n    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)\n    at java.util.concurrent.FutureTask.run(Unknown Source)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n    ... 1 more\n*** ClientHello, SSLv3\nRandomCookie:  GMT: 1364205171 bytes = { 12, 81, 174, 86, 201, 127, 74, 68, 96, 150, 45, 154, 185, 12, 199, 48, 90, 135, 70, 179, 107, 142, 64, 35, 35, 225, 26, 252 }\nSession ID:  {}\nCipher Suites: [TLS_EMPTY_RENEGOTIATION_INFO_SCSV, TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA, TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_CAMELLIA_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA, TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_SEED_CBC_SHA, TLS_RSA_WITH_CAMELLIA_128_CBC_SHA, SSL_RSA_WITH_RC4_128_SHA, SSL_RSA_WITH_RC4_128_MD5, TLS_RSA_WITH_AES_128_CBC_SHA, SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA, SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA]\nCompression Methods:  { 0 }\n\n[read] MD5 and SHA1 hashes:  len = 83\n0000: 01 00 00 4F 03 00 51 50   1E 73 0C 51 AE 56 C9 7F  ...O..QP.s.Q.V..\n0010: 4A 44 60 96 2D 9A B9 0C   C7 30 5A 87 46 B3 6B 8E  JD`.-....0Z.F.k.\n0020: 40 23 23 E1 1A FC 00 00   28 00 FF 00 88 00 87 00  @##.....(.......\n0030: 39 00 38 00 84 00 35 00   45 00 44 00 33 00 32 00  9.8...5.E.D.3.2.\n0040: 96 00 41 00 05 00 04 00   2F 00 16 00 13 FE FF 00  ..A...../.......\n0050: 0A 01 00                                           ...\n%% Initialized:  [Session-2, SSL_NULL_WITH_NULL_NULL]\npool-1-thread-1, fatal error: 40: no cipher suites in common\njavax.net.ssl.SSLHandshakeException: no cipher suites in common\n%% Invalidated:  [Session-2, SSL_NULL_WITH_NULL_NULL]\npool-1-thread-1, SEND SSLv3 ALERT:  fatal, description = handshake_failure\npool-1-thread-1, WRITE: SSLv3 Alert, length = 2\nWebsocketSelector16, fatal: engine already closed.  Rethrowing javax.net.ssl.SSLHandshakeException: no cipher suites in common\njavax.net.ssl.SSLHandshakeException: no cipher suites in common\n    at sun.security.ssl.Handshaker.checkThrown(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.checkTaskThrown(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.writeAppRecord(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.wrap(Unknown Source)\n    at javax.net.ssl.SSLEngine.wrap(Unknown Source)\n    at org.java_websocket.SSLSocketChannel2.wrap(SSLSocketChannel2.java:141)\n    at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:132)\n    at org.java_websocket.SSLSocketChannel2.write(SSLSocketChannel2.java:192)\n    at org.java_websocket.SSLSocketChannel2.writeMore(SSLSocketChannel2.java:303)\n    at org.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:47)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:348)\n    at java.lang.Thread.run(Unknown Source)\nWebsocketSelector16, called closeOutbound()\nWebsocketSelector16, closeOutboundInternal()\nCaused by: javax.net.ssl.SSLHandshakeException: no cipher suites in common\n    at sun.security.ssl.Alerts.getSSLException(Unknown Source)\n    at sun.security.ssl.SSLEngineImpl.fatal(Unknown Source)\n    at sun.security.ssl.Handshaker.fatalSE(Unknown Source)\n    at sun.security.ssl.Handshaker.fatalSE(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.chooseCipherSuite(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.clientHello(Unknown Source)\n    at sun.security.ssl.ServerHandshaker.processMessage(Unknown Source)\n    at sun.security.ssl.Handshaker.processLoop(Unknown Source)\n    at sun.security.ssl.Handshaker$1.run(Unknown Source)\n    at sun.security.ssl.Handshaker$1.run(Unknown Source)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at sun.security.ssl.Handshaker$DelegatedTask.run(Unknown Source)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\n    at java.util.concurrent.FutureTask$Sync.innerRun(Unknown Source)\n    at java.util.concurrent.FutureTask.run(Unknown Source)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n    ... 1 more\nDoes you can give me any new ideas whats wrong?\nThe certificate is accepted in the Browser (like you show it me with https://localhost:1234)\n. I've write it 3 times :P \nI used this Tutorial http://www.techbrainwave.com/?p=953 to create my keystore, truststore and certificate files.\nI think you can see what values I used for O, OU and so.. and the passwords are in the code example from me.\nThe only time I used SSLContext is in the code example that I give you. I'll write it you again:\n``` java\n//class-operator:\npublic WebSocketConnection(int port, boolean ssl) throws UnrecoverableKeyException, KeyManagementException, KeyStoreException, NoSuchAlgorithmException, CertificateException, FileNotFoundException, IOException {\n        super(new InetSocketAddress(port));\n    if (ssl) {\n        WebSocketConnectionSSL();\n        this.sslPort = port;\n    } else {\n        this.port = port;\n    }\n\n    clientManager.checkClientHeartbeat();\n}\n\n//Create an SSL-WebSocket-Connection instead of normal WebSocket-Connection:\npublic void WebSocketConnectionSSL() throws KeyStoreException, NoSuchAlgorithmException, CertificateException, FileNotFoundException, IOException, UnrecoverableKeyException, KeyManagementException {\n        String STORETYPE = \"JKS\";\n        String KEYSTORE = \"D:\\SSL\\truststore.jks\";\n        String STOREPASSWORD = \"test1234\";//KeyStore Key\n        String KEYPASSWORD = \"test4321\"; //CertificateKey Key (-alias somecerticicate -> Password for this 'somecertificate')\n    KeyStore store = KeyStore.getInstance(STORETYPE);\n    File keyFile = new File(KEYSTORE);\n    store.load(new FileInputStream(keyFile), STOREPASSWORD.toCharArray());\n\n    KeyManagerFactory keyFactory = KeyManagerFactory.getInstance(\"SunX509\");\n    keyFactory.init(store, KEYPASSWORD.toCharArray());\n    TrustManagerFactory trustFactory = TrustManagerFactory.getInstance(\"SunX509\");\n    trustFactory.init(store);\n\n    SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n    sslContext.init(keyFactory.getKeyManagers(), trustFactory.getTrustManagers(), null);\n\n    this.setWebSocketFactory(new DefaultSSLWebSocketServerFactory(sslContext));\n}\n\n```\nEDIT by @Davidiusdadi: applied GitHub Flavored Markdown\n. I musst import and export do o.O\nbecause I haven't any certificate.. so to become one I musst export it from keystore file and import it on truststore file. How do you make this things if you don't import the certificate into your file?\nSo I tested it again with the example from you..\nNow I've become a new Exception:\njava.io.IOException: Eine vorhandene Verbindung wurde vom Remotehost geschlossen\n    at sun.nio.ch.SocketDispatcher.write0(Native Method)\n    at sun.nio.ch.SocketDispatcher.write(Unknown Source)\n    at sun.nio.ch.IOUtil.writeFromNativeBuffer(Unknown Source)\n    at sun.nio.ch.IOUtil.write(Unknown Source)\n    at sun.nio.ch.SocketChannelImpl.write(Unknown Source)\n    at org.java_websocket.SSLSocketChannel2.close(SSLSocketChannel2.java:262)\n    at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:449)\n    at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:478)\n    at org.java_websocket.server.WebSocketServer.handleIOException(WebSocketServer.java:422)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:373)\n    at java.lang.Thread.run(Unknown Source)\nOn English: A opened connection will be closed from client (remotecomputer)\nIt apears when I'll try to connect to the server.. and before you ask: yes i accepted the new certificate with \"https://localhost:1234\"\n. Ach du kannst Deutsch o.o\nDas h\u00e4tte die ganze Sache wesentlich vereinfacht. Tut mir leid das ich mich erst jetzt wieder melde, jedoch sah ich nicht, dass du mir bereits geantwortet hast.\nNat\u00fcrlich habe ich das Zertifikat vorher wieder gel\u00f6scht, bevor ich getestet habe ob es nun funktionieren w\u00fcrde mit deinen Parametern.\nIch werde sp\u00e4ter nochmals WebSocketImpl.DEBUG = true; versuchen. Vielleicht gibt dies etwas aufschluss dar\u00fcber wieso die Verbindung bei SSL unterbrochen wird. Ich melde mich wieder sobald ich dies testen konnte.\n. Problem solved! :)\nI've a new machine, the old had an TCP.exe failure cause of system partition defeket.\nI've added to your Certificate-Command -keyalg RSA and give the same input for -keypass and -alias\nNow it work perfecty without any problems :) Ty for your help your Lib is great\n. ",
    "chrisirhc": "Header field names are supposed to be case insensitive as per RFC (http://www.ietf.org/rfc/rfc2616.txt). If you rely on the case of the field names, perhaps you should use a custom subclassed implementation of the handshake?\n. You're right that this framework shouldn't be modifying the headers passed to it.\nIn my opinion, a better approach would be to store the header field names in their original case (preserve the case) but allow hasFieldValue and getFieldValue to operate in a case-insensitive manner.\nOne way to do this is to keep an additional map to get the original key with the preserved case. (lowercasekey -> originalKey)\nThis ensures compatibility with the specification as well as preserves case of header fields.\n. It's not really a more graceful solution but I was referring to having another dictionary that gets the original key from the lowercased key.\nFor example:\nkeyMap[\"content-length\"] -> \"Content-Length\"\nSo the hasFieldValue becomes:\nreturn keyMap.containsKey( name.toLowerCase( Locale.ENGLISH ) );\ngetFieldValue becomes:\nString s = map.get( keyMap[ name.toLowerCase( Locale.ENGLISH ) ] );\n. Are you overriding the methods in TreeMap to do this? I couldn't find out how TreeMap is case-insensitive.\n. I see. That's an interesting hack using the String.CASE_INSENSITIVE_ORDER Comparator to fool TreeMap to do case-insensitive comparisons. It's pretty cool but I'm worried that, as stated in the documentation, it no longer behaves like a Map as the Comparator is no longer consistent with the equals operation.\nIt does make things more compact, but it's not really a map. I'm not sure about this.\n. Yep it is the intended expected behavior for our use case. I'm just wondering about the implementation.\nWe'll have to see what the maintainer says about this.\nI prefer to have the special behavior clearly stated in the code (or at least in comments), showing that a header with a field name of a different case will replace a previous header.\nI was also hoping to keep everything in HashMaps to ensure constant time in retrieval while TreeMaps are implemented differently. This may not actually matter that much as there many not be a large number of headers for performance to really matter.\nThat being said, I like how the TreeMaps implementation is so clean. Let's see what the maintainer says then. :+1: \n. I think merging this (#162) is important. :+1: \nI recently got bitten by this on another codebase of mine that relied on looking up a header (Content-Length) and different servers returned that header with a different case (e.g. Content-length, content-length, ...).\n. ",
    "shortstuffsushi": "I agree they are supposed to be insensitive, but relying on all server implementations to respect that seems like a bad idea (as evidenced by this example).\nIt seems that not forcing lower case would make more sense, so that servers like this one that don't respect the protocol don't cause this framework to fail.\nIt also seems questionable, perhaps inappropriate even, that this framework should modify headers passed to it.\n. It also appears that the toLowerCase was only added as a fix for issue #98, which mentions the implementation being case sensitive.\n. Interesting idea. I think that seems pretty reasonable, so I'll go ahead and modify my patch to do that.\n. Oops, accidentally closed this request. I'll be submitting another one soon. I was hoping for a slightly more graceful solution that two, duplicate dictionaries, so I changed the implementation of the of the map to be a TreeMap. The TreeMap allows for case insensitive puts and gets.\nMy only remaining question is, was there an original reason for using LinkedHashMap? Will this change potentially break any functionality?\n. That is the other solution I had in mind. However, using TreeMap avoids the second dictionary entirely --\nhasFieldValue remains\njava\nreturn map.containsKey( name );\nand getFieldValue remains\njava\nString s = map.get( name );\nYou don't have to call toLowerCase on any of the parameters, you dont have to modify anything as it comes in, and you don't have to keep a second dictionary for anything.\nIf you'd truly rather have it have both, I can refactor it again to use that, but it seems like using a single, case-insensitive map would be simpler.\n. I'll push my solution, which uses it. We can further discuss on the new pull request. Or, if you just want to run a quick local test, check out this Gist -- https://gist.github.com/shortstuffsushi/5149244\n. In a sense, no, it doesn't maintain its contract. What I take this to mean is that, if you were to insert two headers named the same, but cased differently, the latter would replace the former. Isn't that the expected behavior in this case though, because the headers are supposed to be case insensitive, such that if you shouldn't be able to pass two with the same name but separate casing? \n. Alright, I'll wait to hear what he says. Oh, and TreeMaps are a red/black tree, so they're O log(n)... Not too bad, especially given, as you mention, the general size of the header map :) \n. Cool, thanks @chrisirhc and @Davidiusdadi\n. ",
    "murksermatt": "Hi!\nI tried the updated version, but now I still get another NullPointerException in WebSocketClient.onWebsocketClose(...), because \"readthread\" is null.\nSo I suggest to modify line 354:\nif (readthread != null) {\n    readthread.interrupt();\n}\nThat eliminates the exception and I also get the notification that the connection has been closed.\nRegards,\nMatt\n. ",
    "sowd": "Hi,\nThank you Davidiusdadi!\nFollowing your friend's code, I could somehow setup a wss server. It works fine for Firefox, IE\nand Safari. One exception is Chrome Ver. 25.0.1364.172 m.\nIt produces protocol version error as I pasted at the end of this post.\nMaybe caused by poor TLS support of Android SSL library (<OS Ver 4.1)?\nFurther comments are appriciated!\nShigeru\nBtw, I produce BKS file as follows:\nkeytool -genkey -v -keyalg RSA -sigalg SHA1withRSA -keystore key.bks -provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype BKS -providerpath bcprov-jdk16-146.jar -alias devkey -validity 100000\n===== Error message on Android on access by Chrome 25.0.1364.172 m =====\n03-27 10:48:57.912: W/System.err(6602): javax.net.ssl.SSLException: Error occured in delegated task:javax.net.ssl.SSLHandshakeException: PROTOCOL VERSION. Unsupported client version 32\n03-27 10:48:57.922: W/System.err(6602):     at org.apache.harmony.xnet.provider.jsse.HandshakeProtocol.fatalAlert(HandshakeProtocol.java:319)\n03-27 10:48:57.922: W/System.err(6602):     at org.apache.harmony.xnet.provider.jsse.HandshakeProtocol.wrap(HandshakeProtocol.java:271)\n03-27 10:48:57.922: W/System.err(6602):     at org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.wrap(SSLEngineImpl.java:694)\n03-27 10:48:57.922: W/System.err(6602):     at javax.net.ssl.SSLEngine.wrap(SSLEngine.java:462)\n03-27 10:48:57.922: W/System.err(6602):     at com.sonycsl.Kadecot.java_websocket.SSLSocketChannel2.wrap(SSLSocketChannel2.java:141)\n03-27 10:48:57.922: W/System.err(6602):     at com.sonycsl.Kadecot.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:132)\n03-27 10:48:57.922: W/System.err(6602):     at com.sonycsl.Kadecot.java_websocket.SSLSocketChannel2.write(SSLSocketChannel2.java:192)\n03-27 10:48:57.922: W/System.err(6602):     at com.sonycsl.Kadecot.java_websocket.SSLSocketChannel2.writeMore(SSLSocketChannel2.java:311)\n03-27 10:48:57.922: W/System.err(6602):     at com.sonycsl.Kadecot.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:47)\n03-27 10:48:57.922: W/System.err(6602):     at com.sonycsl.Kadecot.java_websocket.server.WebSocketServer.run(WebSocketServer.java:349)\n03-27 10:48:57.922: W/System.err(6602):     at java.lang.Thread.run(Thread.java:856)\n03-27 10:48:57.922: W/System.err(6602): Caused by: org.apache.harmony.xnet.provider.jsse.AlertException: javax.net.ssl.SSLHandshakeException: PROTOCOL VERSION. Unsupported client version 32\n03-27 10:48:57.922: W/System.err(6602):     at org.apache.harmony.xnet.provider.jsse.HandshakeProtocol.fatalAlert(HandshakeProtocol.java:308)\n03-27 10:48:57.922: W/System.err(6602):     at org.apache.harmony.xnet.provider.jsse.ServerHandshakeImpl.processClientHello(ServerHandshakeImpl.java:334)\n03-27 10:48:57.922: W/System.err(6602):     at org.apache.harmony.xnet.provider.jsse.ServerHandshakeImpl$1.run(ServerHandshakeImpl.java:124)\n03-27 10:48:57.922: W/System.err(6602):     at org.apache.harmony.xnet.provider.jsse.DelegatedTask.run(DelegatedTask.java:36)\n03-27 10:48:57.922: W/System.err(6602):     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:442)\n03-27 10:48:57.922: W/System.err(6602):     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)\n03-27 10:48:57.922: W/System.err(6602):     at java.util.concurrent.FutureTask.run(FutureTask.java:137)\n03-27 10:48:57.922: W/System.err(6602):     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:150)\n03-27 10:48:57.922: W/System.err(6602):     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:264)\n03-27 10:48:57.922: W/System.err(6602):     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n03-27 10:48:57.922: W/System.err(6602):     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n03-27 10:48:57.922: W/System.err(6602):     ... 1 more\n03-27 10:48:57.922: W/System.err(6602): Caused by: javax.net.ssl.SSLHandshakeException: PROTOCOL VERSION. Unsupported client version 32\n03-27 10:48:57.922: W/System.err(6602):     ... 12 more\n. Hi,\nI haven't reached any solution yet. However, as you may know, Android 4.0 or lower\nseems only to support TLS 1.0. Here is a reference:\nhttp://stackoverflow.com/questions/5950178/implementing-tls-1-2-on-android-2-3-3\nOn the other hand, Android 4.1 (unofficially) and Android 4.2 (officially) support TLS 1.2:\nhttp://source.android.com/tech/security/android_4_2_security_enhancements.html\nI also found on the web many people struggle to compile openssl for android.\nmmm...\nsowd\n. sorry.i have no solution yet. actually, we decided not to take too much time working on this issue. we can wait until higher version android become common.\nthank you very much for your advices.\nanyway we will continue to use this cool library for other purposes.\n. Thank you!\nI'll find time to check it later. . I am sorry for not responding. Since the project related this topic had ended long ago, I had to recompile the project again. It has not been successful because of Android change, not because of this issue.\nSo I redeveloped the similar code and still getting unsuccessful result, but I could not find the real issue yet. Since I still cannot put high priority on this topic now, I follow your advice.\nAgain, I am sorry for taking too much time on this issue.. Thank you, @marci4!\nActually it is no problem to close this issue because currently it is hard for me to find time to check whether this is solved or not (must be solved, I believe!)\nThe trouble I have now is about handshaking, which may be related to #599. I'll reopen this issue when I will find #167 is still remaining.\n. ",
    "zjbpku": "was the problem solved?\n. ",
    "ani-bellurbis": "@Davidiusdadi @sowd  have you got any solution for this issue ?\nI have also build web socket server on android platform using selfsigned .bks file, I am able to connect it using my another android/Java client by adding same .bks certificate with client.\nBut I am unable to connect android web socket server using wss with HTML web page .\n. ",
    "Kushi171987": "@sowd , We have the same problem but my side even not able to connect 'ws websocket server' in android from PC browser client.  It seems to you have the problem with 'wss' not the 'ws'. Can you please  pls help me if it works for you with just ws server.?\nThanks.\n. ",
    "aftersss": "Thank you for doing this.\n. ",
    "youpko": "I forked this repo and compiled a jar from the source. \nAnd i still get the exact same error.\n. My project did not take the proper builded jar as library so things got messed up.\nI just rebuild it again and everything works as it is supposed to now\n. ",
    "downtownallday": "Here is another endless loop that pegs the CPU. Not sure what triggers it, but this seems to fix the problem in SSLSocketChannel2.write(). I added these 3 lines just after \"int num = socketChannel.write( wrap( src ) );\"\nif (engineResult.getStatus() == SSLEngineResult.Status.CLOSED) {\n        throw new EOFException(\"Connection is closed\");\n    }\n. ",
    "sghosh326": "Thanks for the library, it is very useful for us. We are building a peer to peer messaging layer over web sockets with a number of components communicating with each other. We are using Tomcat WebSocketServlet for the web socket server end and WebSocketClient from this project for the client (I have version 5d4dead). Each of these components are tomcat webapps and embed the one or more WebSocketClient instances to talk to the other components. So we ran into this CPU usage maxing out as well. I have also been tracking these issues to SSLSocketChannel2. \nThere are thread that are not getting shutdown cleanly, resulting in memory leaks when we shutdown tomcat or undeploy these webapps, which prevent the tomcat process from cleanly shutting down. My shutdown sequence involves calling WebSocket.closeConnection(CloseFrame.GOING_AWAY, \"\");\nfor each WebSocketClient instance.\nSo I have made 2 changes to the code base to cleanly release the threads and prevent memory leaks and this CPU maxing out. \nThe first one to SSLSocketChannel2.close() method, to add this:\n``` java\n    public void close() throws IOException {\n        sslEngine.closeOutbound();\n        sslEngine.getSession().invalidate();\n        if( socketChannel.isOpen() )\n            socketChannel.write( wrap( emptybuffer ) );// FIXME what if not all bytes can be written\n        socketChannel.close();\n\n\n exec.shutdownNow();\n}\n\n```\n\n\nThe memory leaks are cause by the threads in ExecutorService not being shut down cleanly. I have tried both exec.shutdown() and exec.shutdownNow(), I think either of them are fine. This is definitely needed in my scenario even with @downtownallday's changes\nI also made a change to WebSocketClient.onWebsocketClose, I am less sure if this one is needed, I set a name to the writethread that I could use to identify it and did see leaks resulting from that thread not being shutdown cleanly. This might be address by @downtownallday's changes as well. Here is the change, I feel it would be good to have as protective measure:\n``` java\n    public final void onWebsocketClose( WebSocket conn, int code, String reason, boolean remote ) {\n        connectLatch.countDown();\n        closeLatch.countDown();\n        if( readthread != null )\n            readthread.interrupt();\n\n\n if (writethread != null) \n     writethread.interrupt();\n    onClose( code, reason, remote );\n}\n\n```\n\n\nThanks,\n-Sandip\n. ",
    "ekudel": "Please merge the pull request https://github.com/TooTallNate/Java-WebSocket/pull/276\n. ",
    "danpe": ":+1: \nPlease merge\n. ",
    "reikla": "Could you merge please?\n. ",
    "hy2008": "Hi @Davidiusdadi, \nThanks for this wonderful library. Really appreciated your hard work. Could you please merge the code change by @downtownallday and make a tag out of it? I am working on a project using https://github.com/Gottox/socket.io-java-client that depends on this library. I am having this high CPU usage issue due to this issue. \nThanks a lot.\n. ",
    "srikanthhugar": "Hello,\nWe are also using socket.io-java-client  and it depends on websocket and noticed CPU and memory is getting consumed like anything. Is it a same issue? How can i take the changes?\nWhen i analysed the issue from heap dump, noticed below mentioned instances and memory is huge.\nclass sun.security.ssl.EngineArgs \n   class int[] \n   class javax.net.ssl.SSLEngineResult \n   class java.nio.ByteBuffer[] \n. ",
    "shuckc": "I've just tested the combination of wss:// + proxy in v1.3.0 and it does not work together. I can see in Wireshark that the CONNECT header is not being sent in plaintext. It needs to be exchanged for a \"200 Connection established\" header with the proxy before the SSL initialisation begins.\nI can see there are some changes in master though, let me try from a checkout.\n. Per my comments on #205 proxy + wss works using code from master works for us \n. Hi, the changes in master allowed us to do WSS through a http-proxy with Connect. Sample code:\n``` java\n    public static void main( String[] args ) throws Exception {\n        URI serverUri = new URI( \"wss://ourapp.herokuapp.com:443/ws1\" );\n        WebSocketChatClient chatclient = new WebSocketChatClient( serverUri );\n    Proxy proxy = new Proxy( Proxy.Type.HTTP, new InetSocketAddress( \"proxy.corporate.com\", 2128) );\n\n    Socket proxySocket = new Socket(proxy);\n    String host = serverUri.getHost();\n    int port = serverUri.getPort();\n    proxySocket.connect(new InetSocketAddress(host, port));\n\n    SSLContext sslContext = null;\n    sslContext = SSLContext.getInstance( \"TLS\" );\n    sslContext.init( null, null, null );\n\n    SSLSocketFactory factory = sslContext.getSocketFactory();\n    chatclient.setSocket( factory.createSocket(proxySocket, host, port, true) );\n    chatclient.connectBlocking();\n\n    BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ) );\n    while ( true ) {\n        String line = reader.readLine();\n        if( line.equals( \"close\" ) ) {\n            chatclient.close();\n        } else {\n            chatclient.send(\"{\\\"msg\\\":\\\"\" + line + \"\\\"}\");\n        }\n    }\n}\n\n```\nThis wasn't possible in the previous 1.3.0 release. Would you consider a new release incorporating these changes?\n. ",
    "pepyakin": "Hello, @henrylgz \nAFAIK, there are problems on their side with WebSockets.\nAs I can remember, it is returns 4xx on connection.\nThe socket.io alternative works just fine, but I dunno any Java implementations.\n. There is one alternative with soundy name https://github.com/Gottox/socket.io-java-client\n. ",
    "Sikerdebaard": "Davidiusdadi, in this case, with XChange, it seems that Java-WebSockets uses java.nio.SocketChannel in such a way that it blocks indefinitely on a read when, for example, the network cable is disconnected. It NEVER times out and in no way a signal from Java-WebSockets is generated that tells us the TCP/IP connection is actually destroyed. It just hangs indefinitely. A solution for the problem is a wrapper as discussed in this article. You can find some diff-files that implement this as an ugly quick fix in this issue: https://github.com/timmolter/XChange/issues/109\nIf you'd like I can see if I can send in a pull request that fixes this issue somewhere this weekend.\n. @Davidiusdadi \nThanks for your reply, I'm sorry for not replying earlier. There was some personal stuff going on within my family.\nAs explained by the article:\n\"The only difference between \u201cblocking NIO\u201d and \u201cNIO wrapped around IO\u201d is that you can\u2019t use socket timeout with SocketChannels. Why ? Read a javadoc for setSocketTimeout(). It says that this timeout is used only by streams. However, you can use a trick to make it working\".\nIf we believe what is said in the article and the Javadocs, this blocking problem is not a bug or a platform limitation, it is the way it is supposed to work in Java and therefore we should assume that this problem exists on all platforms. This behavior makes sense though, as by my experience a recv-call on a native socket in C or C++ on Linux will block indefinitely under these same circumstances. The only way to prevent this is by setting a SO_RCVTIMEOUT and using select(..). This behavior kind of resembles the Java behavior, although it is on a lower level, and it is higly likely that this limitation within Java is because of the same limitation within C++ as the Oracle HotSpot VM is written within C++.\nDue to this problem being a limitation of Java, we, the developers, have to find a way around this as it is very unlikely that Oracle will change this behavior. A solution would be an extra thread that monitors the sockets as you proposed yourself but you seem to dislike this option as it requires a bit of extra resources. The other solution is to use the Channels.newChannel method as discussed in the article. I agree that mixing old and new IO is a bit dirty, but since the new IO does not seem to have logic for handling this issue and since Java-WebSocket basically only uses the in the article proposed fix for in and output streams I think the damage is manageable. The API for both versions seems to be almost the same for this particular part. If this 'mixing old and new'-method uses additional threads is something to investigate. A quick google search does not yield results on this subject.\nAll in all, I hope it is possible to find a solution for this problem as currently the developers that use the Java-WebSocket library have to write additional code to monitor all of the used websockets as this situation often occurs on for example Android phones on 2G/3G or when walking around an office building with multiple wireless APs.\n. ",
    "perumal": "@Sikerdebaard \nPlease let me know if you have found any solution to this problem.\nI have got this library working but facing the same problem on 2G/3G network.\nApart from this I have a very basic doubt.\nIf webscokets are suppose to be full duplex communication mechanism, then why does this particular websocket library depends on PING PONG mechanism for keeping the connection alive.\nI am new to websockets, any kind of explanation on this will be greatly appreciable.\n. ",
    "jbelstner": "Thanks for your reply.  Here is what I found.\nOn the Server side, the exception thrown from ServerSocketChannel.open() is \"java.net.SocketException: socket failed: EACCES (Permission denied)\".\nI did a quick search and I see others have encountered this as well.  I added ...\n<uses-permission\n    android:name=\"android.permission.INTERNET\" />\nto my AndroidManafest.xml and the exception goes away.\nThanks for pointing me in the right direction!!!  BTW, I'm running on an Asus Nexus 7, Android version 4.2.2, Kernel version 3.1.10-g05b777c, Build number JDQ39 \n. ",
    "asotog": "Awesome man looks pretty good, thanks so much\n. ",
    "scottferg": "Actually, scratch that. Re-reading the RFC it looks like the Go library is unnecessarily requiring that the header be sent. Closing this.\n. ",
    "alex116": "I have run into the same issue. I am sending a 16Mb file in chunks of 1Mb but it seems to be sent \"instantaneously\" and the JProgress bar is at 100%. The user is not allowed to close the application until the buffer has been sent... but he doesn't know that.\n. ",
    "bcersows": "If both the server and the client are in the dev's hand, the easiest would be to send some kind of ACK once the whole data was received (and parsed).\nAs for the callback, maybe call it once in the WebsocketWriteThread the outQueue.isEmpty() again after some data were queued for sending? For the use cases mentioned in this issue, this should be enough.. ",
    "jnain": "Every events are overloaded. The client is on an android system and the server is on my computer. I have opened the right port. Put the client and the server port on this same one.\nAnd I can connect my android to my computer if I use another client than yours, but I'd like to get your client on android ^^ So I think that my app is allowed to communicate with my computer.\n. In fact it was just a WS connection... Anyway I reached to make a client with another library which can interact with this server. So I think I'm okay now... Just a bit disappointed...\n. ",
    "Erhannis": "Is it a wss connection?  If so, the library requires a few extra steps (for certificate verification) that you can find in the SSLClientExample.java file, and that link in the README file.  If it's just ws, then I dunno.\n. Ah; would you happen to be referring to the InvalidKeyException (the bug in Cipher.java, etc) I learned about the other day?  Yeah, it turns out that the above code only seems to work on android SDK version 16 and above, because of that.  Except that my phone was working fine, and it's 2.something.  In any case, yes, I did discover that.  How difficult do you think it would be, by the way, to implement things with SSLSockets instead of SSLEngines?\n(also, a note: in Draft_76.java, on line 133, using !...isEmpty() rather than .length() > 0 is the only thing in the library that is noticeably incompatible with Android SDK 8; you might consider changing it.)\n. Oh, I just noticed your post.  Oops.  However, it seems to link to a different issue than I was thinking.  I was thinking of: \nhttps://github.com/TooTallNate/Java-WebSocket/issues/184\n(though I think the one you linked also links to 184.)\nI recently tested the code I posted (up top) on the emulators for SDK versions 8 through 17, and they all SEEMED to have the same problem (Cipher.java bug) - however, since it just closes the connection rather than display the error, it's possible some of them gave a different error.  All the ones I thoroughly debugged were having errors related to Cipher.java, though.\n. Great; thanks!  Except...it doesn't seem to work.  It seems like you were right about the cause, though; I get the error consistently when I send a large message.\n. Yep.  I tested it merged with the TooTallNate repo, as well as on its own, but either way it still overflowed.\n. No, I did; that stack trace at the top of the page was from before the fixes.  Hang on, I'll get another stack trace.\n. Ugh, that was a pain.  The error kept getting the bottom cut off, and...nevermind; anyway, here's a copy of the stack trace as given by Eclipse at a break on StackOverflowError:\nThread <11> Thread-24\n\n    ConnectionStateTLS(ConnectionState).getMinFragmentSize() line: 69\n    SSLRecordProtocol.getMinRecordSize() line: 134\n    SSLEngineImpl.unwrap(ByteBuffer, ByteBuffer[], int, int) line: 436\n    SSLEngineImpl(SSLEngine).unwrap(ByteBuffer, ByteBuffer) line: 385\n    SSLSocketChannel2.unwrap() line: 159\n    SSLSocketChannel2.readRemaining(ByteBuffer) line: 271\n    SSLSocketChannel2.read(ByteBuffer) line: 231\n    SSLSocketChannel2.read(ByteBuffer) line: 255\n    SSLSocketChannel2.read(ByteBuffer) line: 255\n    SSLSocketChannel2.read(ByteBuffer) line: 255\n..................\n    SSLSocketChannel2.read(ByteBuffer) line: 255\n    SSLSocketChannel2.read(ByteBuffer) line: 255\n    SSLSocketChannel2.read(ByteBuffer) line: 255\n    SSLSocketChannel2.read(ByteBuffer) line: 255\n    SocketChannelIOHelper.read(ByteBuffer, WebSocketImpl, ByteChannel) line: 12 \n    WebSocketManager$4(WebSocketClient).interruptableRun() line: 229\n    WebSocketManager$4(WebSocketClient).run() line: 188 \n    Thread.run() line: 1019 \n. So, I've stepped through a crash, and it looks like the following occurs:\n1.  When unwrap() is called, there's more data in inCrypt than there is space in inData.\n2.  sslEngine.unwrap( inCrypt, inData ) returns a status of BUFFER_OVERFLOW without unwrapping any of the data, so there's no data in inData.\n3.  transfereTo( inData, dst ) therefore transfers 0 bytes.\n4.  read( dst ) gets called again.\nWhat OUGHT unwrap do when BUFFER_OVERFLOW occurs?\n. Here's the order of how things are happening:\n1.  createBuffer() is called once from the constructor.\n1.1.  appBufferMax is set to 16384, affecting inData\n1.2.  netBufferMax is set to 18437, affecting inCrypt and outData\n2.  processHandshake() is called once from the constructor.\n3.  processHandshake() is called 7 times from read().\n4.  processHandshake() is called once from write().\n5.  createBuffer() is NOT called again.\n6.  When the crash is happening, the state in unwrap() is:\n6.1.  inCrypt:\n6.1.1.  capacity = 18437\n6.1.2.  position = 0\n6.1.3.  limit = 18437\n6.2.  inData:\n6.2.1.  capacity = 16384\n6.2.2.  position = 0\n6.2.3.  limit = 16384\n6.3.  sslEngine returns error code\nNote that createBuffer() is only called once, as you said might be the problem.\n. Also, I've added some logging lines.  The 7th time processHandshake() is called from read(), the engine handshake status starts as NEED_UNWRAP, then in the corresponding if block, after unwrap() the handshake state is NOT_HANDSHAKING.  Is that supposed to work like that?\n. Oops, my mistake.  That happened when...actually, one time it happened from read()->processHandshake(), and another time it happened from write()->processHandshake().\nAlso, that second time, there were a bunch of calls like write()->processHandshake() and THEN one call from read()->processHandshake(), so I suppose the order and count of the calls varies.\n. Sorry, still doesn't work.  In around the 8th call of processHandshake(), in the NEED_UNWRAP block, the\nsslEngine.getHandshakeStatus() : readEngineResult.getHandshakeStatus() : writeEngineResult.getHandshakeStatus()\ngoes from (immediately before unwrap()):\nNEED_UNWRAP : NEED_UNWRAP : NEED_UNWRAP\nto (immediately after unwrap()):\nNOT_HANDSHAKING : NOT_HANDSHAKING : NEED_UNWRAP\nso the FINISHED block is not called.\nI notice that both the write and read threads are calling processHandshake() simultaneously; that wouldn't mess anything up, would it?\n. You're right about processHandshake being synchronized, but that's REALLY weird because I swear yesterday the logs said that thread A went into the NEED_UNWRAP block, went into unwrap(), and then thread B went through several iterations of processHandshake(), and then thread A returned from unwrap() and continued processHandshake().\nAlso, according to my logs, FINISHED is never returned.  It just goes to NOT_HANDSHAKING, and stays there.  I'm working on Android, so I'm not sure if I can enable asserts, but I'll look into it; I can also see what happens if I run the code in Java on my computer.\n. Well, I don't know anything about \"popular nio implementation,\" but I use the default Android libraries, as follows:\n```\n        mClient = new WebSocketClient(....\n        SSLContext sslContext = null; // javax.net.ssl.SSLContext\n        sslContext = SSLContext.getInstance( \"TLS\" );\n        sslContext.init(null, tms1, null); // I believe for these null entries it grabs some default objects\n    DefaultSSLWebSocketClientFactory sslFactory = new DefaultSSLWebSocketClientFactory(sslContext);\n    mClient.setWebSocketFactory(sslFactory);\n    mClient.connect();\n\n```\ntms1 is a wrapper around a default trust manager, which is obtained from:\nString algorithm = TrustManagerFactory.getDefaultAlgorithm();  // javax.net.ssl.TrustManagerFactory\n        TrustManagerFactory tmf = TrustManagerFactory.getInstance(algorithm);\n        tmf.init((KeyStore) null);\n        TrustManager[] tms = tmf.getTrustManagers();\n        X509TrustManager trustManager = null;\n        for (TrustManager tm : tms) {\n            if (tm instanceof X509TrustManager) {\n                trustManager = (X509TrustManager)tm;\n                break;\n            }\n        }\nThe wrapper toggles two of the bits in the key usage array, to avoid the bug in Cipher; derived from code here:\nhttp://code.google.com/p/android/issues/detail?id=9307#c184\nAnyway, so the ssl classes are basically the default ones provided by the system.  I've verified for android version 2.3.6 as well as for 4.2.2 that the handshake status goes directly from NEED_UNWRAP to NOT_HANDSHAKING, never returning FINISHED.  Any idea why?  I haven't yet tested the same code in a normal JVM, I'm afraid.\n. Well, your changes cause createBuffers() to be called again; however, it unfortunately doesn't fix the problem.  From what I can see, the problem stems from the sizes of the buffers, given by session.getApplicationBufferSize() and session.getPacketBufferSize(), which (at least in the version of the source I looked at) return static members of SSLRecordProtocol.  getPacketBufferSize() returns MAX_SSL_PACKET_SIZE, and getApplicationBufferSize() returns MAX_DATA_LENGTH.  MAX_SSL_PACKET_SIZE is derived from MAX_DATA_LENGTH, specifically, adding 1024, 1024, and 5 bytes, apparently accounting for compression, ciphering, and misc. packet flags?\nIn any case, the two values are constant for this implementation, and in SSLEngineImpl.unwrap(), these two values (when the buffer is full) trigger (for some reason)\nif (capacity < recordProtocol.getDataSize(src.remaining()))\nwhich then causes a BUFFER_OVERFLOW message to be returned.  I'm currently investigating getDataSize.\n. Still investigating.  In the meantime, I found a StackOverflow answer that is maybe relevant to the FINISHED status: http://stackoverflow.com/a/3930854/513038. \n. So, frankly, I'm still not sure how it OUGHT to work, but what it seems like is for some reason either getApplicationBufferSize is too small relative to getPacketBufferSize, or recordProtocol.getDataSize calculates its return value incorrectly.\nRegarding that second possibility:\nIt seems like it expects the max to be the appBuf size, because if the value passed in is OVER netBuf, it returns appBuf.  However, when (as here) the value passed in is equal to netBuf, it calls SSLRecordProtocol.getDataSize() (on an instance, not a static call), which to the chain of similar function calls in: ConnectionStateTLS (subtracts hash_size (16) before returning) -> Cipher -> ARC4=JCEStreamCiper, which returns the input parameter.  Not sure exactly what to make of this, except that somewhere in the default implementations, someone has probably screwed up again.\nIn any case, I have a hacky solution.  It seems to work for me, but I'm not sure if there might be times when it could cause problems.  Basically, in createBuffers, after the two sizes are found, I add the following line:\nappBufferMax = Math.max(appBufferMax, netBufferMax);\nThis means that in unwrap(), the appBuffer has enough space to pass the possibly erroneous size check.  However, it could be a problem if there were some place in the code where the appBuffer truly ought to report at most a certain size (I haven't found such a place, yet).\nAlso, I noticed that with the patch for the second call to createBuffers(), since the read and write threads run simultaneously, I had at least one time where two calls to createBuffers() happened at the same time, which seems to be potentially problematic.  You could have a synchronized block around the if (bufferallocations <= 1) blocks and calls to createBuffers(), or something.  It's also possible that the second call to createBuffers() is not needed, since aside from the stack overflow things seemed to be working smoothly.  I could test it and see?\n. Well, having increased appBufferMax, the problem seems to have gone away, even if createBuffers() is only called once.  Addressing number 4, there, the problem may not REALLY be that appBufferMax is too small, but rather that a later function call erroneously overcalculates the maximum buffer size needed, and decides appBufferMax is too small.  Since we can't change THAT function (I think), making appBufferMax bigger solves the problem, either way.  I just worry that it could have unintended side effects, though I haven't seen any yet.  I'll keep looking for any.\n. Sorry; things were working for me, so this kinda fell to the back burner.  My fix was as stated before: in createBuffers(), after the two sizes are fetched, I added the line:\n    appBufferMax = Math.max(appBufferMax, netBufferMax);\nwhich seems to fix the problem.  I've also commented out the two extra createBuffers() calls:\n        if( bufferallocations <= 1 ) {\n            createBuffers( sslEngine.getSession() );\n        }\nsince they no longer seemed to be necessary, and seemed to open the potential for createBuffers() to be called by both the read() and write() threads at the same time, which could cause problems.  Out of a thousand users a day for the past few weeks, I haven't seen any crash reports related to this, so I've assumed the problem to be solved.  Not an ideal solution, exactly, but it appears to work.  I haven't carefully examined the newer updates, so I don't know how they affect the situation.\n. ",
    "OriginalName667": "Do you mean the configuration of the apache server or the apache http library (which I'm using on the client end)? I've tried just the websockets without using the apache http library and it will immediately disconnect with code 1006. The code I tested with (just using the websocket library) is very similar to the following code:\n```\n    TrustManager[] trustAllTrustManagers = new TrustManager[] { \n        new X509TrustManager() {   \n            public java.security.cert.X509Certificate[] getAcceptedIssuers() { \n                return null;\n            } \n            public void checkClientTrusted( \n                    java.security.cert.X509Certificate[] certs, String authType) {\n            } \n            public void checkServerTrusted( \n                    java.security.cert.X509Certificate[] certs, String authType) {\n            }\n        } \n    };\nSSLContext context = SSLContext.getInstance(\"TLS\");\ncontext.init(null, trustAllTrustManagers, null);\n\nWebSocketClient cl = new ConcreteWebSocketClient(\"wss://dnsname\");\ncl.setWebSocketFactory(new DefaultSSLWebSocketClientFactory(context));\n\n```\nThe code which I'm currently using, which requires a new http execute before every websocket connection opening, is similar to the following:\n```\n    TrustManager[] trustAllTrustManagers = new TrustManager[] { \n        new X509TrustManager() {   \n            public java.security.cert.X509Certificate[] getAcceptedIssuers() { \n                return null;\n            } \n            public void checkClientTrusted( \n                    java.security.cert.X509Certificate[] certs, String authType) {\n            } \n            public void checkServerTrusted( \n                    java.security.cert.X509Certificate[] certs, String authType) {\n            }\n        } \n    };\nSSLContext context = SSLContext.getInstance(\"TLS\");\ncontext.init(null, trustAllTrustManagers, null);\n\n// Required for getting websocket connected, for some reason\nSSLSocketFactory sf = new SSLSocketFactory(\n        context, SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\nScheme sch = new Scheme(\"https\", 443, sf);\nHttpClient client = new DefaultHttpClient();\nclient.getConnectionManager().getSchemeRegistry().register(sch);\n\nHttpGet httpGet = new HttpGet(new URI(<any random URL>));\n\nclient.execute(httpGet);\n// This is the end of the required apache http stuff\n\nWebSocketClient cl = new ConcreteWebSocketClient(\"wss://dnsname\");\ncl.setWebSocketFactory(new DefaultSSLWebSocketClientFactory(context));\n\n```\nThis is very confusing to me, as it seems like the apache http library is actually reaching in and changing the SSLContext, because that's the only object that the two connection types (http and websockets) from the two libraries have in common.\n. Yes, but it's a weird workaround. If I pass the websocket client the SSL context directly after initializing it, it does not work; it immediately closes the connection with websocket error 1006 (note that the client onClose method is called without the onOpen method ever being called). However, if I pass it to the apache HTTP executor, then execute, for example, a HTTP GET request FIRST, THEN pass it to the websocket client, it seems to accept the SSL context with no problem.\nDo you think this is an issue with Apache rather than the websocket implementation? If so, that means I'm implementing something incorrectly, and it just happens to work in tandem with a problem in Apache's HTTP library. I shouldn't NEED to execute a HTTP request using the SSL context before the websocket client will take the context and use it. Is there a correct way of implementing trust all/accept all SSL connections where I wouldn't need to execute a HTTP request first? I had thought I was doing it correctly, but it seems that's not true, or else I wouldn't need this crazy workaround.\n. ",
    "bastienleonard": "Any update on this? We are currently blocked by this problem on Android.\n. I'm using the latest code from Git. I was using and older version previously and had the same problem.\nPlease let me know if you need any other information.\nHere is the stack trace, the first line probably comes from my own code:\n08-08 09:59:06.896: E/DEBUG(665): Websocket error in client: Unexpected message type has been received: 60\n08-08 09:59:06.896: E/DEBUG(665): javax.net.ssl.SSLProtocolException: Unexpected message type has been received: 60\n08-08 09:59:06.896: E/DEBUG(665):   at org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol.unwrap(SSLRecordProtocol.java:350)\n08-08 09:59:06.896: E/DEBUG(665):   at org.apache.harmony.xnet.provider.jsse.SSLEngineImpl.unwrap(SSLEngineImpl.java:464)\n08-08 09:59:06.896: E/DEBUG(665):   at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:383)\n08-08 09:59:06.896: E/DEBUG(665):   at org.java_websocket.SSLSocketChannel2.unwrap(SSLSocketChannel2.java:159)\n08-08 09:59:06.896: E/DEBUG(665):   at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:129)\n08-08 09:59:06.896: E/DEBUG(665):   at org.java_websocket.SSLSocketChannel2.<init>(SSLSocketChannel2.java:77)\n08-08 09:59:06.896: E/DEBUG(665):   at org.java_websocket.client.DefaultSSLWebSocketClientFactory.wrapChannel(DefaultSSLWebSocketClientFactory.java:40)\n08-08 09:59:06.896: E/DEBUG(665):   at org.java_websocket.client.WebSocketClient.interruptableRun(WebSocketClient.java:211)\n08-08 09:59:06.896: E/DEBUG(665):   at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:188)\n08-08 09:59:06.896: E/DEBUG(665):   at java.lang.Thread.run(Thread.java:864)\n. If that's any help, I'm using this to connect to a Faye server and it works fine without HTTPS.\n. Err, it seems like the problem was simply that the app was still trying to connect to the 80 port. Sorry for the inconvenience.\n. ",
    "mathieuravaux": "Any news on this ? This is a real showstopper.\n. Can you provide the code of a reproducible unit test case triggering this, so that we can try and help fix it ?\n. @Davidiusdadi Is your commit https://github.com/Davidiusdadi/Java-WebSocket/commit/e927c29eab226e6accd7da602f9105b29aff671f there to fix this issue ?\n. ",
    "thughes": "I'm also trying to use a secure websocket on Android (testing on a 4.1.2 device). After specifying the SSLContext as described by @Erhannis in #187, I was able to connect, but I got the same StackOverflowError as shown here. I then made the same changes described in the last comment and it seems to be working.\nSeparately, I also tried pulling the changes from #205, but I wasn't ever able to connect when using those changes.\n. ",
    "emilpradeep": "@Erhannis Thanks man, your solution fixed the issue for me. Cheers!. @marci4  @simonchius  please refer to #190 . I fixed the issue with @Erhannis solution. yes, the issue is fixed for me.. ",
    "DeHecht": "I just hotfixed it for me (really nasty) so I can still proceed! I thought I may share it in case others face this problem aswell.\nIn the class extending WebSocketServer i've implemented something like this:\n```\n    // try a hack to stop the server\n    Field f = WebSocketServer.class.getDeclaredField(\"selector\");\n    f.setAccessible(true);\n    Selector s = (Selector) f.get(this);\n    // first close the selector (to not accept new connections)\n    s.close();\nsuper.stop((int) TimeUnit.SECONDS.toMillis(1));\n\n```\nI cannot estimate the impact this way has on the behaviour but I state that it cannot be very healthy to do so.\nI think the problem why I face this issue (and only on the server where it is running and not locally) is that the server uses solaris. In other parts of our software I've recognized that interrupting on a thread for a blocking socket action does not work on solaris, while it does for windows and linux. We did resolve issues with closing the socket then, so this may also apply here.\nTo come to the actual code of the WebSocketServer ... any reason why the selector is closed afterwards?\n```\n    synchronized ( this ) {\n        if( selectorthread != null ) {\n            if( Thread.currentThread() != selectorthread ) {\n        }\n        if( selectorthread != Thread.currentThread() ) {\n            selectorthread.interrupt();\n            selectorthread.join();\n        }\n    }\n    if( decoders != null ) {\n        for( WebSocketWorker w : decoders ) {\n            w.interrupt();\n        }\n    }\n    if( server != null ) {\n        server.close();\n    }\n\n```\nSuggestions anybody?\n. I think the system fullfills the requirements, because it is an oracle machine (but you never know).\nI will now investigate in detail so I can see what the issue is. Usually, that kind of issues are not that complex to be solved when knowing what is going on. I hope I can come up with an \"improved\" version of stopping the WebSocketServer.\n. As is see that someone is currently busy with implementing a stop/start of the WebsocketServer I only figured out what lead into the problem (so no complete redesign).\nIn the run() method there is the following in the end\n} catch ( CancelledKeyException e ) {\n                // an other thread may cancel the key\n            } catch ( IOException ex ) {\n                if( key != null )\n                    key.cancel();\n                handleIOException( key, conn, ex );\n            } catch ( InterruptedException e ) {\nI looked into the javadoc of ServerSocketChannel and saw that the ServerSocketChannel.accept() will throw an ClosedByInterruptException when the thread gets interrupted. As this exception extends IOException it will get catched by the according code (and not the InterruptedException) and this leads to the deadlock I faced.\nWhen adding a catch block for it ... like this in front of the IOException:\ncatch ( ClosedByInterruptException e ) {\n                // thrown in case the server.accept(); does get interrupted!\n                return; // FIXME controlled shutdown\n            }\neverything is fine. I tried several times commenting out and vice versa and it worked.\nI am sorry but I did not took the time to figure out how to work with git ... maybe next time ;)\n. i faced the same problem #191 may this help you?\n. One of our testers reproduced an deadlock within the library.\n\"WebsocketSelector328\":\n    at org.java_websocket.server.WebSocketServer.removeConnection(WebSocketServer.java:519)\n    - waiting to lock <0x00000007ae49fcd8> (a java.util.HashSet)\n    at org.java_websocket.server.WebSocketServer.onWebsocketClose(WebSocketServer.java:498)\n    at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:470)\n    - locked <0x00000007ae555d00> (a org.java_websocket.WebSocketImpl)\n    at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:490)\n    at org.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:64)\n    - locked <0x00000007ae555d00> (a org.java_websocket.WebSocketImpl)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:349)\n    at java.lang.Thread.run(Thread.java:662)\n\"main\":\n    at org.java_websocket.WebSocketImpl.flushAndClose(WebSocketImpl.java:498)\n    - waiting to lock <0x00000007ae555d00> (a org.java_websocket.WebSocketImpl)\n    at org.java_websocket.WebSocketImpl.close(WebSocketImpl.java:424)\n    at org.java_websocket.WebSocketImpl.close(WebSocketImpl.java:537)\n    at org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:209)\n    - locked <0x00000007ae49fcd8> (a java.util.HashSet)\nso my suggested quick solution would be to replace\nsynchronized ( connections ) {\n    for(WebSocket ws : socketsToClose) {\n        ws.close( CloseFrame.GOING_AWAY );\n    }\n}\nwith\n```\nList socketsToClose = null;\n// copy the connections in a list (prevent callback deadlocks)\nsynchronized ( connections ) {\n    socketsToClose = new ArrayList(connections);\n}\nfor(WebSocket ws : socketsToClose) {\n    ws.close( CloseFrame.GOING_AWAY );\n}\n```\nthis way the HashSet would not get accessed by two different threads at the same time resulting into the deadlock.\n. i faced this issue aswell yesterday.\nWhat about adding the shutdown-method into the interface \"WebSocketServerFactory\" and let the WebSocketServer shut it down when it gets closed?\n. ",
    "noodles-v6": "Thanks a lot!\n. ",
    "kishanDevani": "hi......\ni not clear ....\nplease help me....\n. this web socket  server work very well but problem only occurs when stooping them...\n. it still hang app on android, today i replace all new code....!\n. i am working on this app....!\nhttps://play.google.com/store/apps/details?id=com.spidren.inc\n. it now hang on when not conected any clicent..!\n. ",
    "bendem": "Probably fixed by #329\n. This is fixed by #329\n. This happens on real java applications as well.\nAs described here, this select call is blocking. Thus, if stopping with a timeout of 0 (indefinite), this line will never be executed and the line before will hang forever. The thread should be interrupted in all cases.\nIn the meantime, using stop(1) fixes the problem (the first join will fail, the thread will be interrupted, the second join will wait for the thread).\n. Well, what I provided is a workaround to a bug. Calling stop() or stop(0) will never work if there are open connections because the selectorThread is joined before being interrupted so it's hanging forever on a select() call.\nI'd rather see the bug fixed instead of documented.\n. @marci4 this is fixed.. The jar should be removed, not updated, storing binaries in repos is bad and as we can see, cause problems because maintainers forget to update it.\n. There are currently 3 build system included in the repo and only 1 is up to date...\n. The pom.xml is up to date, latest released version is 1.3.0, current head is 1.3.1-SNAPSHOT\n. This closes the ThreadPool shared between all the SSLSocketChannel2s, preventing any further call to processHandshake in another one.\n. Partially fixed by #216, just need to call the new shutdown method.\n. @marci4 this is fixed.. I agree that all libraries should aim to improve test coverage at all time; but it's easy for me to say that when I have very little experience in writing those.\nI'm not sure how to go about writing unit tests for a multi threaded network application like this one. I'm not familiar with the websocket protocol (thus why I use a lib) and my time is quite limited as of today.\nI'll continue to be involved with the repo as long as we use the library in our product, but I can't promise anything about reviewing code on a regular basis.\nAs for @ThreaT's acceptance test, I have no idea what it is about, but I can try and take a look later this week.\nAnother point I'd like to be considered is the code style consistency and internal doc (javadoc) of the codebase. Fixing this would lower the contributing barrier considerably imo.\n. Reviewed @ThreaT's tests, they were basically not doing anything, now they do. Each // TODO Implement check is a check that I didn't find how to fulfill and that either needs to be removed or fixed.\nRemember that I didn't know anything about Acceptance tests before this day and I might have understood the (poor) cucumber doc wrong.\nEDIT: https://github.com/bendem/Java-WebSocket/commit/011191c2f615e213d4e07bbfe33aa10eb0f99a37\nEDIT2: I fixed indenting to match the majority of the project, better diff here: https://github.com/bendem/Java-WebSocket/commit/011191c2f615e213d4e07bbfe33aa10eb0f99a37?w=1\n. Might want to reenable travis to test PRs.\n. I used these instructions to setup my wss keystore, worked nicely.\n. > java.lang.IncompatibleClassChangeError: Found class org.java_websocket.WebSocket, but interface was expected\nThe WebSocket class was made an interface in 2013. How did you compile it from sources and get a version prior to that?\nMy guess is that the compilation process failed at some point and you're using the version from 2012 which doesn't contain the interface.\nEDIT: Might also want to update ant target version (1.5) to correspond to the maven one (1.6).\n. That's really weird. Can you open the jar you compiled with ant and check WebSocket is actually a class? How do you run the AutobahnServerTest example?\n. > 2) I run AutobahnServerTest simply with 'java AutobahnServerTest'\nWhere do you feed it the jar to get the implementation from? Can you try running it with -cp /path/to/new.jar?\n. I'm not an Android developer so I can't really test the change, but here you go.\nConfirmed to work on jdk8.\n. > In my project i use TooTallNate Websocket client in Java applet\n\"Java applet\", there is your problem.\n. This is the same as #216 but actually calls the new method.\nThis fixes #315, #270\n. at long last \ud83c\udf89 . That would be the job of the page you're running the js on, not the websocket server. What are you using to serve it?\n. I think everything is blocked by default when running from the local filesystem (with file://). If it doesn't work with the python server and localhost:<port>, I'm not sure. What browser / OS are you using?\n. It's the server's response headers that matters for CORS control. What's the output of curl -I localhost:<port> where <port> if your python server's port?\n. Really weird, I have no idea what could do that.\n. The browser shouldn't even try to contact the websocket server. Which is why I find this really weird.\nOrigin: null is bothering me, can you try setting origins to something? like  io.set('origins', 'localhost:<port>) (link)\n. I think this issue was fixed in https://github.com/TooTallNate/Java-WebSocket/commit/dbced22dd20c54db7ccc27c1397a186c1ed56763\n. From what I see, WebSocketServer.java:317 is empty and WebSocketServer.java:327 cannot NPE, conn is not null (it's used before).\nWhich version are you using?\nAlso, would you mind pasting the real stack trace? That one looks like it's been auto corrected by a dumb phone dictionary or something.\n. oh, took me a while to realize your stacktraces are reversed, the IOException happened at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:118) and the NPE at org.java_websocket.SocketChannelIOHelper.read(SocketChannelIOHelper.java:12).\nCould you try and compile master to see if it hasn't been fixed by a recent commit and so it's easier to see which line correspond to which in your stacktraces?\n. Hm, I suppose netcat doesn't implement the websocket protocol. That'd explain the error in the handshake.\nWe might want to consolidate the error handling in case of erroneous protocol, but I don't think it prevents you from using the lib with a real websocket client.\n. Does this crash the server or just print a stacktrace?\n. You can provide the amount of decoders (threads used to handle connections) in the constructor. If you don't provide that parameter, Runtime.getRuntime().availableProcessors() is used.\n. https://github.com/TooTallNate/Java-WebSocket/issues/306#issuecomment-113890135\n. This assertion specifies that an unclosed channel when the thread finishes is a bug. It has no impact on the thread logic and has nothing to do with a timeout. Moreover, assertions are disabled by default; you'd need to run your application with -enableassertion for it to have any effect (that is, throwing AssertionError if the condition was false).\nSo I doubt your problem comes from there. Maybe you could provide some reproduction steps if the problem is easily reproducible or at least the stacktrace and more information about the state of the application when the problem happens.\n. Kinda hard to do anything with an obfuscated stacktrace...\n. You do realize line 210 in WebSocketClient is a } right?\nSo I'm guessing it is actually L166 which is in a try/catch so the exception thrown would be handled L172 and the return L174 would prevent it from ever reaching the assert L195.\nAnd yes, the last contribution is half a year old. Maybe someone with commit access has a comment about that. /cc @ThreaT, @BrushfireDigitalServices\n. @ThreaT well, I don't really need anything specific, it's just true that the development is nowhere near active, the last milestone marked for months ago still contains 8 open issues (7 marked as bugs) and  there is a total of 36 open issues marked as bugs.\nSince you are with @BrushfireDigitalServices the last 2 active committers for the project, I thought you would be the most appropriate people to make a statement about @avenwu's claim.\nI'm not relying on this project anymore so I can't really tell, but if there is no intention to further update the project, it's ok but it could be made clear somewhere.\n. As I suspected, the assertion has nothing to do with a Java-Websocket assert statement. It looks like channel.connect calls this method with or without a timeout, which means it's either directly forwarded to a native method which thows a SocketTimeoutException, or handled on the java side by setting the socket to non blocking and polling its status until it's connected or the timeout is hit. That exception is handled at the call site by wrapping it in an AssertionError.\nThe best fix for this would then be imo to catch AssertionError when calling connect and calling the error code (onWebsocketError and closeConnection with NEVER_CONNECTED) if the exception cause is an IOException.\n. I just answered that question, see the message above...\n\nThat exception is handled at the call site by wrapping it in an AssertionError.\n. I'm not sure I understand, the server doesn't connect to anything so changing its timeout will not do anything.\nThis issue is a client side problem. If your problem is server side, it belongs to another issue.\n. That's a stupid fix, the point of thread pooling is to keep the threads around, recreating the executorservice makes 0 sense.\n. Here is the code I used to generate a keystore from a regular certificate; and here is an example usage.\n\nThe code is pretty old, I ended up not using Java-WebSocket because the code is old and full of weird quircks. But the idea is there.. ",
    "supertick": "Thanks for the quick response, I've been looking at the source for just a little bit, but would be glad to discuss it if/when I can formulate something more meaningful or concrete.  \nI did notice that the client request header was available in file WebSocketServer.java line 328 - \nWebsockets are new to me - but the client is expected to ask for them with an \"upgrade\" request if they started the conversation with a http request.. is that correct?  This is part of the handshake?  So there is a logical fork if the client doesn't ask for the upgrade - maybe this location would be a good place to do a call back?  \nif( SocketChannelIOHelper.read( buf, conn, (ByteChannel) conn.channel ) ) {\n                                String clientHeader = new String(buf.array());\n                                /*-------------------------- call back begin --------------------------                             \n                                // determine if request wants an upgrade - if not send the channel & buf to a call back\n                                -------------------------- call back end -------------------------- */                                  \n                                conn.inQueue.put( buf );\n                                queue( conn );\n                                i.remove();\nThanks again for you time.\n. Hi  Davidiusdadi,\nAlthough I was not able to Skype last weekend, I'm still interested in this enhancement. I'm currently involved in a different aspect of the project which this related too, but at some point I'll come back to it. Maybe at that time I'll have something more worthwhile to possibly contribute - instead of just a line number and some comments :)\nBest Regards,\nGroG\n. I'm a complete noob with git & github.  My usual tool set is eclipse & subversion.  So far, the experience has not been without bumps, the biggest one being - github will not install (crashes when it attempts to start). Is there a good method to send you the files to examine?\n. oops too many buttons....\n. Thanks,\nI updated to eclipse Eclipse Kepler.  It comes with a git plugin.  I attached to what I thought was the repo and did push upstream.. probably just commited to my local clone..  again, dunno... I'm probably got just enough knowledge to be dangerous...\nI'd like to see your project.\nI'm using the websockets to support another gui for a robotics platform - http://myrobotlab.org\nIt's a SOA framework - I'm doing some of the security.  Security becomes easier if there are fewer systems which allow remote access.  That's why I was interested in this websocket server to allow http callbacks - so that all remote activity could be authorized at one place, versus employing security over 2 sub-systems.\n. Hi Joris,\nIt looks like an excellent implementation.  Thanks for sharing it :)\nWell documented, clear and concise.\nIMHO, I am still of the belief that it would benefit the java_websocket library to offer a callback to user if all websocket Draft upgrades fail.  The basic concept would be if all Drafts fail - the communication data at its lowest level is sent to the user to deal with.  I think within your implementation, this would have alleviated the need of synchronization of your code, since the threads would have continued to be managed by the library, but allowed with the callback to execute \"users\" code.  A \"raw\" callback could also support user protocols (non-http & non-websocket) if they so desired.\n. ",
    "GESTAR": "yeah~Thanks. The lib is so useful.Thank you for your effort\n. ",
    "galdolber": "I'm using nginx in the server (for the ssl) and httpkit behind it.\nNo special port: wss://my.server.com\nYes, for now I'm just connecting. I get the open event, and after a few\nminutes of not sending any data I get the exception.\nOn Wed, Aug 14, 2013 at 10:33 AM, David Rohmer notifications@github.comwrote:\n\nVery strange. Please give me more infos.\nDo you use a special port?\nWhat server are you connecting to; the JavaWebsocketServer?\nWas a proxy somehow involved?\n1006 is a reserved value and MUST NOT be set as a status code in a\nClose control frame by an endpoint. It is designated for use in\napplications expecting a status code to indicate that the\nconnection was closed abnormally, e.g. without sending or\nreceiving a Close control frame.\nSo i assume that the NullPointerException caused you client to go down -\nwhich definitively is a bug.\nI however wander that\nafter a few minutes\nthe connection still has not been established but the opening handshake is\nbeing performed.\nCan you confirm that you never transferred a single byte over that\nconnection?\nPlease also pull from https://github.com/Davidiusdadi/Java-WebSocket.gitfrom and post an updated stacktrace.\nThat branch has the latest bugfixes applied and will be merged soon.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/200#issuecomment-22652629\n.\n\n\nA world citizen\n. Ok, found the problem. Is the proxy_read_timeout configuration on nginx.\nOn Wed, Aug 14, 2013 at 11:11 AM, Gal Dolber gal.dolber@gmail.com wrote:\n\nI'm using nginx in the server (for the ssl) and httpkit behind it.\nNo special port: wss://my.server.com\nYes, for now I'm just connecting. I get the open event, and after a few\nminutes of not sending any data I get the exception.\nOn Wed, Aug 14, 2013 at 10:33 AM, David Rohmer notifications@github.comwrote:\n\nVery strange. Please give me more infos.\nDo you use a special port?\nWhat server are you connecting to; the JavaWebsocketServer?\nWas a proxy somehow involved?\n1006 is a reserved value and MUST NOT be set as a status code in a\nClose control frame by an endpoint. It is designated for use in\napplications expecting a status code to indicate that the\nconnection was closed abnormally, e.g. without sending or\nreceiving a Close control frame.\nSo i assume that the NullPointerException caused you client to go down -\nwhich definitively is a bug.\nI however wander that\nafter a few minutes\nthe connection still has not been established but the opening handshake\nis being performed.\nCan you confirm that you never transferred a single byte over that\nconnection?\nPlease also pull from https://github.com/Davidiusdadi/Java-WebSocket.gitfrom and post an updated stacktrace.\nThat branch has the latest bugfixes applied and will be merged soon.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/200#issuecomment-22652629\n.\n\n\nA world citizen\n\n\nA world citizen\n. rite(158): {GET / HTTP/1.1\nConnection: Upgrade\nHost: my.server.com:443\nSec-WebSocket-Key: xbKYiYgMPxoeBHC4jajRKA==\nSec-WebSocket-Version: 8\nUpgrade: websocket\n}\nprocess(200): {HTTP/1.1 101 Switching Protocols\nServer: nginx\nDate: Wed, 14 Aug 2013 18:39:01 GMT\nContent-Length: 0\nConnection: upgrade\nSec-Websocket-Accept: SiwNQRGDlakbfQRhSu+jlv+flcM=\nUpgrade: websocket\n}\nopen using draft: Draft_10\nopen\nclose  1006\nprocess(16384): {too big to display}\njava.lang.NullPointerException\nat\norg.java_websocket.drafts.Draft_10.acceptHandshakeAsClient(Draft_10.java:71)\nat org.java_websocket.WebSocketImpl.decodeHandshake(WebSocketImpl.java:264)\n at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:159)\nat\norg.java_websocket.client.WebSocketClient.interruptableRun(WebSocketClient.java:239)\n at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:188)\nat\nposplugin.client.proxy$org.java_websocket.client.WebSocketClient$0.run(Unknown\nSource)\n at java.lang.Thread.run(Thread.java:680)\nOn Wed, Aug 14, 2013 at 11:35 AM, Gal Dolber gal.dolber@gmail.com wrote:\n\nwrite(158): {GET / HTTP/1.1\nConnection: Upgrade\nHost: backend.zuldi.co:443\nSec-WebSocket-Key: xbKYiYgMPxoeBHC4jajRKA==\nSec-WebSocket-Version: 8\nUpgrade: websocket\n}\nprocess(200): {HTTP/1.1 101 Switching Protocols\nServer: nginx\nDate: Wed, 14 Aug 2013 18:39:01 GMT\nContent-Length: 0\nConnection: upgrade\nSec-Websocket-Accept: SiwNQRGDlakbfQRhSu+jlv+flcM=\nUpgrade: websocket\n}\nopen using draft: Draft_10\nopen\nclose  1006\nprocess(16384): {too big to display}\njava.lang.NullPointerException\nat\norg.java_websocket.drafts.Draft_10.acceptHandshakeAsClient(Draft_10.java:71)\nat org.java_websocket.WebSocketImpl.decodeHandshake(WebSocketImpl.java:264)\n at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:159)\nat\norg.java_websocket.client.WebSocketClient.interruptableRun(WebSocketClient.java:239)\n at\norg.java_websocket.client.WebSocketClient.run(WebSocketClient.java:188)\nat\nposplugin.client.proxy$org.java_websocket.client.WebSocketClient$0.run(Unknown\nSource)\n at java.lang.Thread.run(Thread.java:680)\nOn Wed, Aug 14, 2013 at 11:26 AM, David Rohmer notifications@github.comwrote:\n\nAlso you found the problem on your side please help me fix the problem on\nmine.\nI want to know what caused the nullpointer exception.\nPlease put this line at the start of your application\nWebSocketImpl.DEBUG = true;\n,reproduce the problem once more\nand post the command line output as a comment on this issue.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/200#issuecomment-22656376\n.\n\n\nA world citizen\n\n\nA world citizen\n. ",
    "tmbo": "@Davidiusdadi did you have time to look into the issue? we ran into the same problem. Since we are also using nginx, I guess we are facing the same cause.\n. ",
    "BenDavidJamin": "+1\n. +1\n. ",
    "kanelr": "Did you fix this bug? I run this socket standard alone\njava.lang.NullPointerException\n    at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:321)\n    at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:158)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:709)\n2015-09-11 09:52:24,455 ERROR [MainSicbo] onError\njava.lang.InterruptedException\n    at java.lang.Object.wait(Native Method)\n    at java.lang.Thread.join(Thread.java:1186)\n    at java.lang.Thread.join(Thread.java:1239)\n    at org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:229)\n    at org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:235)\n    at org.java_websocket.server.WebSocketServer.handleFatal(WebSocketServer.java:464)\n    at org.java_websocket.server.WebSocketServer.access$100(WebSocketServer.java:51)\n    at org.java_websocket.server.WebSocketServer$WebSocketWorker.run(WebSocketServer.java:716)\n. ",
    "ikermart": "@marci4  I seems that still closes the server. I have a timer, that every 3 seconds sends data to websocket server from my android app.\nI have an event that in certain moment stops sending data (semaphor), If i restarted sending data before 5 minutes, the server response ok, but if the stop is more than 5 minutes, I send the request but not onMessage is called neither onError.\nIs there a internal timeout configuration?. ",
    "jaimegarzon": "Yes, the problem is about the client not support websocket, because the stack tcp of device transmit info only by binary data, and is necessary a new custom Draft, for read the binary protocol of device. The question is about how create a new draft for read binary data without handshake\n. because I have many conections of device with websockets and normal socket, and the idea is use only this server, to comunicate all conections\n. ",
    "sdidrik": "Okay, thanks. Problem is probably between my keyboard and chair.\nScott\n\nScott Didriksen\nCarpe Diem!\n\nOn Aug 28, 2013, at 3:57 AM, David Rohmer notifications@github.com wrote:\n\nI do not see the problem in the dump. \nBeside \"Thread-2\" & \"main\" all threads appear to be normal VM internal \nbackground Threads. \nThose threads will be there for pretty much every java program you start. \n2013/8/27 sdidrik notifications@github.com \n\nI have a java server running on linux that opens websockets with a local \napache/python server. It is acting as a proxy for web browsers that do not \nhandle websockets. I am getting the following errors though: \nFull thread dump OpenJDK 64-Bit Server VM (23.7-b01 mixed mode): \n\"Thread-2\" prio=10 tid=0x0000000000f1a000 nid=0xad6e runnable \n[0x00007fd0ac3ea000] \njava.lang.Thread.State: RUNNABLE \nat sun.nio.ch.EPollArrayWrapper.epollWait(Native Method) \nat sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:228) \nat sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:81) \nat sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:87) \n- locked (a sun.nio.ch.Util$2) \n- locked (a java.util.Collections$UnmodifiableSet) \n- locked (a sun.nio.ch.EPollSelectorImpl) \n  at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:98) \n  at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:102) \n  at \n  org.java_websocket.client.WebSocketClient.interruptableRun(WebSocketClient.java:238) \n  at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:204) \n  at java.lang.Thread.run(Thread.java:724) \n\"Abandoned connection cleanup thread\" daemon prio=10 \ntid=0x0000000000e6c000 nid=0xad66 in Object.wait() [0x00007fd0ac6fc000] \njava.lang.Thread.State: WAITING (on object monitor) \nat java.lang.Object.wait(Native Method) \n- waiting on (a java.lang.ref.ReferenceQueue$Lock) \n  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135) \n- locked (a java.lang.ref.ReferenceQueue$Lock) \n  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151) \n  at com.mysql.jdbc.NonRegisteringDriver$1.run(NonRegisteringDriver.java:93) \n\"Timer-0\" prio=10 tid=0x00007fd0b8172800 nid=0xad4b in Object.wait() \n[0x00007fd0ac8fe000] \njava.lang.Thread.State: TIMED_WAITING (on object monitor) \nat java.lang.Object.wait(Native Method) \n- waiting on (a java.util.TaskQueue) \n  at java.util.TimerThread.mainLoop(Timer.java:552) \n- locked (a java.util.TaskQueue) \n  at java.util.TimerThread.run(Timer.java:505) \n\"Service Thread\" daemon prio=10 tid=0x00007fd0b8120800 nid=0xad49 runnable \n[0x0000000000000000] \njava.lang.Thread.State: RUNNABLE \n\"C2 CompilerThread1\" daemon prio=10 tid=0x00007fd0b811e000 nid=0xad48 \nwaiting on condition [0x0000000000000000] \njava.lang.Thread.State: RUNNABLE \n\"C2 CompilerThread0\" daemon prio=10 tid=0x00007fd0b811b000 nid=0xad47 \nwaiting on condition [0x0000000000000000] \njava.lang.Thread.State: RUNNABLE \n\"JDWP Command Reader\" daemon prio=10 tid=0x00007fd094001000 nid=0xad44 \nrunnable [0x0000000000000000] \njava.lang.Thread.State: RUNNABLE \n\"JDWP Event Helper Thread\" daemon prio=10 tid=0x00007fd0b8119000 \nnid=0xad41 runnable [0x0000000000000000] \njava.lang.Thread.State: RUNNABLE \n\"JDWP Transport Listener: dt_socket\" daemon prio=10 tid=0x00007fd0b8115000 \nnid=0xad40 runnable [0x0000000000000000] \njava.lang.Thread.State: RUNNABLE \n\"Signal Dispatcher\" daemon prio=10 tid=0x00007fd0b8107800 nid=0xad3d \nwaiting on condition [0x0000000000000000] \njava.lang.Thread.State: RUNNABLE \n\"Finalizer\" daemon prio=10 tid=0x00007fd0b80af800 nid=0xad3c in \nObject.wait() [0x00007fd0ad881000] \njava.lang.Thread.State: WAITING (on object monitor) \nat java.lang.Object.wait(Native Method) \n- waiting on (a java.lang.ref.ReferenceQueue$Lock) \n  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135) \n- locked (a java.lang.ref.ReferenceQueue$Lock) \n  at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151) \n  at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:189) \n\"Reference Handler\" daemon prio=10 tid=0x00007fd0b80ad000 nid=0xad3b in \nObject.wait() [0x00007fd0ad982000] \njava.lang.Thread.State: WAITING (on object monitor) \nat java.lang.Object.wait(Native Method) \n- waiting on (a java.lang.ref.Reference$Lock) \n  at java.lang.Object.wait(Object.java:503) \n  at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133) \n- locked (a java.lang.ref.Reference$Lock) \n\"main\" prio=10 tid=0x00007fd0b800a800 nid=0xad37 runnable \n[0x00007fd0bfbb7000] \njava.lang.Thread.State: RUNNABLE \nat java.net.PlainSocketImpl.socketAccept(Native Method) \nat \njava.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398) \nat java.net.ServerSocket.implAccept(ServerSocket.java:530) \nat java.net.ServerSocket.accept(ServerSocket.java:498) \nat pollingdaemon.baseline.com.PollingDaemon.main(PollingDaemon.java:222) \n\"VM Thread\" prio=10 tid=0x00007fd0b80a4800 nid=0xad3a runnable \n\"GC task thread#0 (ParallelGC)\" prio=10 tid=0x00007fd0b8018000 nid=0xad38 \nrunnable \n\"GC task thread#1 (ParallelGC)\" prio=10 tid=0x00007fd0b801a000 nid=0xad39 \nrunnable \n\"VM Periodic Task Thread\" prio=10 tid=0x00007fd0b812b000 nid=0xad4a \nwaiting on condition \nJNI global references: 1318 \nHeap \nPSYoungGen total 18432K, used 8795K [0x00000000eb6b0000, \n0x00000000ecb40000, 0x0000000100000000) \neden space 15808K, 55% used \n[0x00000000eb6b0000,0x00000000ebf46d50,0x00000000ec620000) \nfrom space 2624K, 0% used \n[0x00000000ec8b0000,0x00000000ec8b0000,0x00000000ecb40000) \nto space 2624K, 0% used \n[0x00000000ec620000,0x00000000ec620000,0x00000000ec8b0000) \nParOldGen total 42176K, used 0K [0x00000000c2400000, 0x00000000c4d30000, \n0x00000000eb6b0000) \nobject space 42176K, 0% used \n[0x00000000c2400000,0x00000000c2400000,0x00000000c4d30000) \nPSPermGen total 21248K, used 7580K [0x00000000b7e00000, \n0x00000000b92c0000, 0x00000000c2400000) \nobject space 21248K, 35% used \n[0x00000000b7e00000,0x00000000b85673d8,0x00000000b92c0000) \nWe are seeing a lot of threads in a wait_close state that do not go away \nand think the above has some thing to do with it. \n\u2014 \nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/203 \n. \n\u2014\nReply to this email directly or view it on GitHub.\n. \n\n",
    "jaydp17": "same problem\n. Anyone successful in reconnecting ?\n. The above approach works on Jelly Bean and KitKat, but has some problem with Ice Cream Sandwich.\nHere's what I get on Ice Cream Sandwich, when enabling debug using WebSocketImpl.DEBUG = true;\nI/System.out\ufe55 write(160): {GET / HTTP/1.1\nI/System.out\ufe55 Connection: Upgrade\nI/System.out\ufe55 Host: echo.websocket.org:443\nI/System.out\ufe55 Sec-WebSocket-Key: Y9gTqnO2lLqe04GAhkt61A==\nI/System.out\ufe55 Sec-WebSocket-Version: 8\nI/System.out\ufe55 Upgrade: websocket\nI/System.out\ufe55 [ 09-05 01:07:21.053  1635:0x671 I/System.out ]\n    }\nand here's what I get running the same program on KitKat\nI/System.out\ufe55 write(160): {GET / HTTP/1.1\nI/System.out\ufe55 Connection: Upgrade\nI/System.out\ufe55 Host: echo.websocket.org:443\nI/System.out\ufe55 Sec-WebSocket-Key: RvR8oq0OUB2VfT6P3t3HPw==\nI/System.out\ufe55 Sec-WebSocket-Version: 8\nI/System.out\ufe55 Upgrade: websocket\nI/System.out\ufe55 [ 09-05 01:11:35.402 25325:25342 I/System.out ]\n    }\nI/System.out\ufe55 process(201): {HTTP/1.1 101 Web Socket Protocol Handshake\nI/System.out\ufe55 Upgrade: WebSocket\nI/System.out\ufe55 Connection: Upgrade\nI/System.out\ufe55 Sec-WebSocket-Accept: d/EswBO/Y6qm8B2GLjoSiZMLZh4=\nI/System.out\ufe55 Server: Kaazing Gateway\nI/System.out\ufe55 Date: Thu, 04 Sep 2014 19:41:28 GMT\nI/System.out\ufe55 [ 09-05 01:11:37.104 25325:25342 I/System.out ]\n    }\nI/System.out\ufe55 open using draft: Draft_10\nIf you need any more information, I'd be happy to help\n. ",
    "thphu": "Hi, \nDo you have any solution for reconnect?\n. I'm implement a voice service base on websocket. I also use Pong check. But if it drop for a long time (over 30sec) It can't connect to server anymore, so I close and connect but can't. \n. From android device, you can easy to simulate, if it the network doesn't stable (EDGE or 3G), it's very easy to reproduce \n. The problem is how to reconnect. If I create a new websocketclient, server side is detect as a new client and can't drop the previous. That's why I need a help from you\n. I have a same problem with Nexus 5 (5.0.1) but seem work on 5.1. do you have any idea to fix it?\n. ",
    "blue86": "I have Build a Pong Check\nVom iPhone gesendet\n\nAm 17.03.2015 um 19:29 schrieb phutang2359media notifications@github.com:\nHi,\nDo you have any solution for reconnect?\n\u2014\nReply to this email directly or view it on GitHub.\n. From Handy or pc?\n\nVom iPhone gesendet\n\nAm 17.03.2015 um 19:56 schrieb phutang2359media notifications@github.com:\nI'm implement a voice service base on websocket. I also use Pong check. But if it drop for a long time (over 30sec) It can't connect to server anymore, so I close and connect but can't.\n\u2014\nReply to this email directly or view it on GitHub.\n. I have the Problem too. You Must fast Send Ponks if this fail you Must reconnect\n\nVom iPhone gesendet\n\nAm 17.03.2015 um 20:28 schrieb phutang2359media notifications@github.com:\nFrom android device, you can easy to simulate, if it the network doesn't stable (EDGE or 3G), it's very easy to reproduce\n\u2014\nReply to this email directly or view it on GitHub.\n. You Need a Java Script Funktion width timeout if the Ponk Test fail\n\nVom iPhone gesendet\n\nAm 17.03.2015 um 21:03 schrieb phutang2359media notifications@github.com:\nThe problem is how to reconnect. If I create a new websocketclient, server side is detect as a new client and can't drop the previous. That's why I need a help from you\n\u2014\nReply to this email directly or view it on GitHub.\n. The Problem is the line \"exec.shutdownNow()\" in SSLSocketChannel2.java i have comment the line and the Server works fine.\n. thanks\n. \n",
    "mkuklis": "@Davidiusdadi do you know when this one will get merged? Thank you.\n. ",
    "rgillan": "Hi,\nOur end to end system (clients and server) are on RFC/draft 17.  We are working with Michal on his mkuklis/phonegap-websocket project.  He is currently stitching the fragmented frames together in the onFragment handler.\nThanks for the responsiveness and let us know if we can help\nRob\n. David et al,\nAny progress on this?  We are still seeing problems with very large messages and fragmentation, and upstream it looks like it's receiving FIN too early.  Any help much appreciated.\nCheers\nRob\n. ",
    "abrodmann": "I have the same problem.\nThis error occurs when the listener is connected by a non-websocket-aware client like\na crawler or a normal webbrowser (or me with telnet chatting HTTP).\nThis is a critical KILLER for publicly accessible services.\nHas anyone an idea which commit has introduced this?\n. Some more detailed information on this issue:\n\nAnyone with tcp access to this service can crash the websocket server by simply telnet to this service and then enter something like \"GET / HTTP/1.0\\n\\n\"\n\npublic void onError(WebSocket conn, Exception ex) {\nis then called with\n1) conn == null\n2) the NullPointerException below:\njava.lang.NullPointerException\n        at org.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:64)\n        at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:352)\n        at java.lang.Thread.run(Thread.java:744)\n. prasad-1210 you may want to have a look at this project:\nhttps://github.com/Gottox/socket.io-java-client\n. ",
    "bzb95": "If you only plan on using it as a server this issue can be fixed by changing line 64 of SocketChannelIOHelper to \"if( ws.outQueue.isEmpty() && ws.isFlushAndClose())\" not the best long term solution, but its keeping my server up in the mean time.\n. ",
    "MrSam": "Hmm, someone looking into this ? \nI was quite happy with my java_websocket server implementation :/\n. ",
    "snaef999": "I just noticed that this has already been noted in #136.  Sorry for the duplicate!\n. ",
    "Paril": "Okay, I've been running it a little bit with users connected at all times and no logins/logouts - no issue. It seems to occur during connection. I'm beginning to think that maybe #207 is related to this. I have it set to break the next time onError is called with null, so I will get you a full trace from there.\n. ",
    "metamorphy": "I was getting:\nException: java.lang.NullPointerException thrown from the UncaughtExceptionHandler in thread \"WebSocketWorker-XX\"\nand worried it was an error in the library. However, it turned out the exception was thrown in my onMessage handler, which was not caught until the catch ( RuntimeException e ) in the code posted in #207. The exception was thrown by an incorrect assert() in my code and I didn't realize Eclipse wasn't configured to catch AssertionError.\nAnyway, if you see this error, you might try to put a catch in your onMessage handler.\n. Like I wrote, I put it a catch in my onMessage handler, which solved it for me. So now my code is:\n```\n@Override\npublic void onMessage(WebSocket conn, ByteBuffer message) {\n    // If the message is in bytes, this method is called.\n    String m = null;\n    try {\n        m = new String(message.array());\n        onMessage(conn, m);\n} catch (Exception e) {\n    // Catch all exceptions, otherwise they cryptically show up in WebSocketWorker\n    logger.error(\"Uncaught exception when processing onMessage(ByteBuffer): '\" + (m != null ? m : \"(null)\") + \"' -- \" + e.getMessage(), e);\n}\n\n}\n@Override\npublic void onMessage(WebSocket ws, String message) {\n    if (ws == null) {\n        logger.error(\"onMessage with null websocket. Message: \" + message);\n        return;\n    }\ntry {\n\n...lots of stuff...   \n    } catch (Exception e) {\n        // Catch all exceptions, otherwise they cryptically show up in WebSocketWorker\n        logger.error(\"Uncaught exception when processing onMessage(String): '\" + message + \"' -- \" + e.getMessage(), e);\n    }\n}\n```\n. ",
    "soylomass": "@metamorphy Hi, may I know how did you solve it? I've put a try catch there, but it still crashes. https://github.com/TooTallNate/Java-WebSocket/issues/379\n. ",
    "xdansmith": "I'm having a similar issue in another library that uses Java-WebSocket. It doesn't take 30 minutes for it to happen, but if nothing happens for a short period of time (say, 5 minutes), then the connection remains open but the connection quits receiving data. \nThis is happening to me when using the library in an Android app, so I don't know if this is perhaps an Android specific problem?\nI can see you posted this a couple weeks ago - have you made any progress on finding a solution? \n. @Joris-van-der-Wel,\nDo you think this is something that consumers of this library should have to do, or is this something that should be implemented in the Java-WebSocket library itself? It seems like sending out Ping requests ought to be handled by this library rather than the consumer.\nRegardless, I really appreciate you providing advice on how to go about implementing this without making any changes to this library, and I may end up doing just that if the library I'm using doesn't implement logic similar to this or this library doesn't get updated to do it on its own. \n. ",
    "ddrscott": "I can't honestly remember the exact test process I used. My memory usually dies off around a month on these sort of things.\nI probably started the app, went a few activities deep, scrolled to the bottom of a ListView, then took the snapshot. I know it's not much to go on.\nThanks for taking the pull. I've been using my fork for a while and everything has been stable regarding the socket stuff.\n. ",
    "julienroux": "Hi,\nI had the same problem. After many tests I found it happened only with Java 7. It seems a closed socket cannot be opened unless the option socket.setReuseAddress(true) is set.\nI found info here: http://stackoverflow.com/questions/18849754/why-doesnt-socket-close-free-up-the-bound-port\nI think it would be a good idea to manage this reuseAddress option on the WebsocketServer object. That's what I did for my project.\n. Yes the socket seems to stay in the TIME_WAIT state.\n@Dykam I got the sources of java_websocket and modified directly WebSocketServer. I added a 'reuseAddress' parameter in the class and I use it in the run() method  with:\n    ...\n    ServerSocket socket = server.socket();\n    socket.setReuseAddress(reuseAddress);\n    socket.setReceiveBufferSize( WebSocketImpl.RCVBUF );\n    ...\n. Thank you so much for your solution, I have been having the same problem for a long time. It is only if you use Java 8, not Java 7.\nSo I just removed the TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 cipher and it works.\nList<String> ciphers = new ArrayList(Arrays.asList(e.getEnabledCipherSuites()));\nciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\");\ne.setEnabledCipherSuites( ciphers.toArray(new String[]{}));\n. ",
    "dertseha": "@Dykam did you verify whether the old socket was possibly in the TIME_WAIT state? It may take some seconds until the OS really frees the server socket.\n. ",
    "Dykam": "How would I get this socket? I remember looking for a way to get the actual Socket instance. I am pretty sure that was the issue though, the case I work with is that is part of a subsystem, and sometimes I need to unload the entire subsystem and recreate with a new classloader it. Which happens in under a second, hence the error. It isn't really an issue with Java-WebSocket, but I can't work around it. @julienroux, how did you set that up?\n. ",
    "whiteproud": "I have Tomcat 6, Java 7, i Set socket.setReuseAddress(true); but, when I close the socket and try to reopen on the same port (58887), the java.net.BindException is thrown.\nRunning netstat -na the port is in Listening state and will be released only when Tomcat will be stopped\n. ",
    "maxanier": "I have the same problem as whiteproud, the tips from above did not work since the port stays in Listing state and not in Time_Wait state, anyone found a solution yet?\n. Found a solution, hope it doesnt destroy anything else:\nAdd selector.close() at the end of the run method in WebSocketServer:\nfinally {\n            if (decoders != null) {\n                for (WebSocketWorker w : decoders) {\n                    w.interrupt();\n                }\n            }\n            if (server != null) {\n```\n            try {\n            selector.close();\n            server.close();\n\n        } catch (IOException e) {\n\n            onError(null, e);\n        }\n    }\n}\n\n```\n. ",
    "EasyTarget86": "I found that I needed the code in pull 273\n. I found that this fixed the issues I was having with some Unit test where I was creating socket a socket with same port.  Without this fix 2/3 test would fail with bind issues.  \njava version \"1.8.0_25\"\nJava(TM) SE Runtime Environment (build 1.8.0_25-b18)\nJava HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)\n. I think the extra code in pull request 273 is needed.  https://github.com/TooTallNate/Java-WebSocket/pull/273 I tried this and 1 out of my 3 test were still having bind issues.  with the additional changes in 273 all issues seemed to go away.\n. ",
    "Tarapaty": "The issue is still present in Android. @marci4 ok I found out what went wrong before I managed to find free time for the example application, so what was going on wrong. \nIn WebSocketServer in \n```\n    public WebSocketServer( InetSocketAddress address , int decodercount , List drafts , Collection connectionscontainer ) {\n        if( address == null || decodercount < 1 || connectionscontainer == null ) {\n            throw new IllegalArgumentException( \"address and connectionscontainer must not be null and you need at least 1 decoder\" );\n        }\n    if( drafts == null )\n        this.drafts = Collections.emptyList();\n    else\n        this.drafts = drafts;\n\n    this.address = address;\n    this.connections = connectionscontainer;\n    setTcpNoDelay(false);\n    setReuseAddr(false);\n    iqueue = new LinkedList<WebSocketImpl>();\n\n    decoders = new ArrayList<WebSocketWorker>( decodercount );\n    buffers = new LinkedBlockingQueue<ByteBuffer>();\n    for( int i = 0 ; i < decodercount ; i++ ) {\n        WebSocketWorker ex = new WebSocketWorker();\n        decoders.add( ex );\n        ex.start();\n    }\n}\n\n```\nsetReuseAddr(false) prevents a server from reusing the same address\n. ",
    "NoahAndrews": "You can call setReuseAddr(true) in the constructor of your WebSocketServer child class.. > nah it didnt work , still have to implenment onMessage(String string)\nJust implement it as an empty function if you want to ignore all String messages.. Why would the Apache license be a problem?. Any update on this? . Done. Sounds like you might be attempting to stop the server by killing the SwingWorker? Make sure you call stop() on the websocket server instance itself. Probably not helpful, just a thought. This sounds like a question about Swing though. . You have to specify in js which way you would like the data. . Is there something you need to do to trigger javadoc.io, or will that happen automatically?. @haruntuncay You can submit multiple PRs at once, you just need to submit them from different branches. In general it's a good idea to work on code in feature branches, rather than your master branch like you did with the currently open PR.. ",
    "fampinheiro": "That code indicates that the socket was closed normally.\nAre you sure the problem is in Android, that code indicates the socket is closed by the server or because of network connectivity problems. \n. ",
    "sklegg": "I am seeing a similar issue when many clients are connected. (WebSocketServer.java line 298 waiting for selector.select() to return.)\nDoing some research, this method usually churns when multiple threads make register calls or register OP_WRITE when not necessary. I could not find any place in the code where this could be happening.\n. See this pull request: https://github.com/TooTallNate/Java-WebSocket/pull/216\n. This is possible. To accomplish this you would need to keep track of all client WebSocket connections on the server and forward messages from client to client. \nFor example, in your WebSocketServer implementation keep a List of WebSocket objects. (Use onOpen and onClose methods to add/remove from the list.) In onMessage, you can access the List and use the WebSocket.send() method to send a message to the clients.\n. I found a similar problem, too. I fixed by patching SSLSocketChannel2.java like this:\n@ line 136\n            try {\n                unwrap();\n            } catch (SSLException ssle) {\n                System.out.println(\"SSL unwrap failed. Abandoning handshake.\");\n                return; \n            }\n. ",
    "becast": "I just experienced the same problem but only while using SSL. It is an issue when an SSL session can not fully established or the negotiations break down. Which leaves the Channel in a constant read state. I created a PR.\n. I'm encountering this too with Portscans. However even with @MODLR the selector.select() just hangs and does not select new connections. Anyone any Ideas?\n. I now see the \"keep-alive\" in the Upgrade field, which I just confirmed Chrome does not include. Wonder if that is it. Will investigate. \nEdit: No, I changed the server to submit \"Connection: Upgrade, close\" back, no change.\n. Well that did cost me some sleep xD\nI figured it out, well... at least I have a workaround, still not sure if it is a Java issue or a Firefox issue.\nApparently the Cipher TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 does not work well with Firefox & Java leading to aforementioned issues. the workaround for me is:\nIn DefaultSSLWebSocketServerFactory.java:\nreplace\npublic ByteChannel wrapChannel( SocketChannel channel, SelectionKey key ) throws IOException {  \n        SSLEngine e = sslcontext.createSSLEngine();  \n        e.setUseClientMode( false );\nwith\n```\n    public ByteChannel wrapChannel( SocketChannel channel, SelectionKey key ) throws IOException {\n        SSLEngine e = sslcontext.createSSLEngine();\n        String pickedCipher[] ={\n                \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305\",\n                \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305\",\n                \"TLS_ECDHE_ECDSA_WITH_CHACHA20_SHA\",\n                \"TLS_ECDHE_RSA_WITH_CHACHA20_SHA\",\n            \"TLS_DHE_RSA_WITH_CHACHA20_POLY1305\",\n            \"TLS_RSA_WITH_CHACHA20_POLY1305\",\n            \"TLS_DHE_RSA_WITH_CHACHA20_SHA\",\n            \"TLS_RSA_WITH_CHACHA20_SHA\",\n\n            \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",\n            \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",\n            \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",\n            \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",\n\n            \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA384\",\n            \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",\n            \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",\n            \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",\n\n            \"TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",\n            \"TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",\n            \"SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA\",\n            \"SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA\",\n\n            \"TLS_RSA_WITH_AES_256_CBC_SHA256\",\n            \"TLS_RSA_WITH_AES_256_CBC_SHA\",\n            \"TLS_RSA_WITH_AES_128_CBC_SHA256\",\n            \"TLS_RSA_WITH_AES_128_CBC_SHA\"}; \n    e.setEnabledCipherSuites(pickedCipher);\n    e.setUseClientMode( false );\n\n```\nThis fixes the issue on my end. I don't think hardcoding this is a good idea for the lib, but I leave this here for people that encounter the same issue.\n. I checked this out, I can't reproduce a single issue here.\n1.) Works for me\n2.) prototype.js is bundled (https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/prototype.js)\n3.) Does not trigger a reload for me with Firefox 47.0\n. Seems you're missing quite a lot of code. Take a look at the Example: https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/SSLClientExample.java\n. Have a look at this: https://github.com/TooTallNate/Java-WebSocket/issues/349#issuecomment-212691018\n. Yeah I faced the same issue. I solved it but to be honest I have no clue what the deciding change was.\nI added this\n```\nif( key.isReadable() ) {\n                            conn = (WebSocketImpl) key.attachment();\n                            ByteBuffer buf = takeBuffer();\n                            try {\n                                if(conn.channel == null){\n                                    if( key != null )\n                                        key.cancel();\n                                handleIOException( key, conn, new IOException() );\n                                continue;\n                            }\n\n```\nMaybe it helps, since my library is quite altered at this point I can't guarantee it, but I'll open a PR if you confirm this as the working change.\nAlso I replaced the Solution mentioned before with:\n```\nif( key.isAcceptable() ) {\n    if( !onConnect( key ) ) {\n        key.cancel();\n        continue;\n    }\nSocketChannel channel = server.accept();\nif(channel==null){\n    continue;\n}\nchannel.configureBlocking( false );\nWebSocketImpl w = wsf.createWebSocket( this, drafts, channel.socket() );\nw.key = channel.register( selector, SelectionKey.OP_READ, w );\ntry {\n    w.channel = wsf.wrapChannel( channel, w.key );\n    i.remove();\n    allocateBuffers( w );\n    continue;\n} catch (IOException ex) {\n    if (w.key != null)\n        w.key.cancel();\n    }\n}\n\n```\n. Done. I submitted a PR that might solve your issue https://github.com/TooTallNate/Java-WebSocket/pull/459/commits/203470bbf338dc09d7818ac2913e3ba7399d2e5e. Hi!\nYes, if you use the library to create a WSS Server and i.e. test it with the SSL-Labs test (https://www.ssllabs.com/) a lot of connections are made and in some cases aborted. It appears that this leaves some connections in Limbo forcing their way through selector.select(); in WebSocketServer.java\nThese connections are not Handshaking and have the SSLEngine closed but keep the WebSocketSelector busy and causing 100% CPU as the selector tries to read them.\nThis change examines the Connection status upon reading to detect these \"Limbo\" connections, and since this is a SSL only issue fixing it in the selector seems to be much more work and prone to introduce issues for non WSS connections.\nThat being said, I'm not sure why all my previous PR are here too. It*s only the last one ( 203470b) I wanted to merge.\n. Yes that is completely fine! I'm not sure how I screwed up that PR so badly xD. Uhm. I already written a permessage-deflate draft. If you're interested https://github.com/becast/Java-WebSocket/tree/Permessage-Deflate?files=1. ",
    "fungiboletus": "You are right. Thanks and sorry for the spam.\n. Thanks it works fine.\nIt's not perfect because it doesn't care about man in the middle attack, but I can use a encrypted VPN for my Java applications.\nHowever, a default SSL factory can be very interesting for Java-WebSocket.\n. ",
    "feixiangsmile": "Do you solve this problem? I am also find this problem, can you help me?\n. ",
    "stken2050": "UPDATE:\nthis works with node ws.\n. ",
    "zjulia": "This is an old thread but I am getting the same draft org.java_websocket.drafts.Draft_17@4566ba50 refuses handshake error. How did you fix it? Does anyone know? I am also trying to connect to a ws server.\n. ",
    "theRaffe": "Hello? I got error when I try to connect to a wss uri:\nserver refuses handshake\n. ",
    "munnadroid": "+1. @whitebian have you got any progress ? I am stuck in this problem. @IllusionaryOne . ",
    "ThreaT": "Would this change not fit better as a new client, solely to demonstrate SSL?\n. @ekudel Thanks for the pull request. Can you please provide clear steps to reproduce the issue that this pull fixes?\n. @drecrabb Would it be possible to get steps to reproduce the issue that this pull fixes?\n. @drecrabb \nThis is what I get:\n*1. Started AutobahnServerTest:\nNo port specified. Defaulting to 9003\n*2. Started AutobahnClientTest:\n```\nTestutility to profile/test this implementation using the Autobahn suit.\nType 'r ' to run a testcase. Example: r 1\nType 'r  ' to run a testcase. Example: r 1 295\nType 'u' to update the test results.\nType 'ex' to terminate the program.\nDuring sequences of cases the debugoutput will be turned of.\nYou can now enter in your commands:\n\n```\n\n*3. Entered r 1 on client:\n```\n\nr 1\n//////////////////////Exec: case=1&agent=tootallnate/websocket\nwrite(195): {GET /runCase?case=1&agent=tootallnate/websocket HTTP/1.1\nConnection: Upgrade\nHost: localhost:9003\nSec-WebSocket-Key: FV6ApTZiLGxSeZWkJ/5VkA==\nSec-WebSocket-Version: 13\nUpgrade: websocket\n\n}\nprocess(129): {HTTP/1.1 101 Switching Protocols\nConnection: Upgrade\nSec-WebSocket-Accept: Qr+KiWyKp3VSP23M3BdNebJRg2U=\nUpgrade: websocket\n}\nopen using draft: Draft_17\n```\n*4. Stopped AutobahnServerTest\n*5. AutobahnClientTest output:\nClosed: 1006\n. Thank you for the pull request. Would it be possible to remove the formatting as it makes it difficult to identify what's been changed?\n. @bdbergeron I suggest you wait until around October 2015 when JEP 110 is complete. Since this repository is open source, there won't necessarily be a dedicated developer working on it. \n. @raydelto Would it be possible to get steps to reproduce the issue that this pull fixes?\n. Thanks @raydelto.\nJust some things I've noticed:\n1. Might be worth catching specific NullPointerException instead of plain Exception\n2. The server no longer crashes after this fix but I'm wondering if the exception should even occur at all?\n. @raydelto That makes sense. Maybe we could even introduce a new exception specifically for that case...\n. Sounds like the socket is being closed right after opening, could be that the client is not compatible with Tomcat... Does the problem occur with a javascript client?\n. @jfranki it seems this whole repo has gone dead due to lack of administration. It would be great if we could get a link to a more active fork.\n. The problem is redirecting future pull requests as well. We can't edit the readme because there's no administration unless someone is able to contact the author or administrator directly. \n. @TooTallNate No worries, I think @BrushfireDigitalServices would like to administrate this repo. You can also add me as a collaborator. Otherwise, could you please change the readme to point to the most active fork? \n. @TooTallNate Can you add me as well please\n. @rob-baily There are lots of open source solutions out there. Personally, I find that Jetty has too many tightly coupled lines of code to comprehend or change for project-specific requirements. This solution offers a clear start for projects without having a complete Java EE implementation that people may not fully understand or need. Please feel free to contribute some of Jetty's strong points to this repository though. For example, there are some issues when using wss through a browser - OnOpen, OnMessage and OnClose don't work properly.\n. @GreenRover: Would you mind making the changes without formatting the code please?\n. @BrushfireDigitalServices  I absolutely agree. I don't generally like processes but requesting pull requests to add tests would make many things better and easier. Another idea could be to write acceptance tests in a separate project. That might be useful when testing pull requests manually from an unbiased perspective.\n. I've added a prototype. I don't have time to make it perfect but it's a good place to start I think. It needs a code review and some bug fixes before merging. Once merged, the existing AutobahnClientTest and AutobahnServerTest need to be moved, deleted or renamed as examples.\n. @bendem Thank you for the above. I've reviewed it and it seems 99% fine. Can you please start a pull request to my fork so that I can make a couple minor changes and pull to master?\n. @bendem @BrushfireDigitalServices acceptance tests merged into master. Would be good if there were more, but it's a good start I think.\n. @rachidbm I think we can achieve full test coverage if everyone adds tests while they're at it so to speak. Would you be willing to add [a] test(s) for each method that you changed/added? Just to make sure each method does what it says it does...\n. @rachidbm Similar to what I've started doing for acceptance tests then. That would be fine too. \n. @bendem Sorry, I've been busy with other stuff, what do you need done exactly?\n. @bendem We were verifying pull requests before committing them not too long ago but it takes a lot of time to double check and make sure they work. If someone's willing to do that and tell me which ones are safe, I'd be glad to merge them.\n. ",
    "taracus": "For the record, I switched to android_websockets (https://github.com/koush/android-websockets) library and it worked out of the box, both with wss:// and ws://.\nStill no idea why this lib wouldnt work (not even with ws://) but for anyone out there looking for a WebSocket-client for android I recommend that instead.\n. ",
    "rjbergTU": "Well, I do not know if this is still relevant after 2 years, but it might be due to the fact you are using a HashMap. They use a lot of extra memory as empty space.. Hello @marci4 \nRegarding your feedback, I have the following things:\n1.a No, not everybody needs this. But I do believe it is very common to be able to distinguish between clients and assign them variables.\n1.b I actually was more talking about a map in the WebSocket implementations then one in the server or client. This makes it easier then a map which maps WebSockets to other maps.\n\n\nI think it is no problem if keys have to be Strings. It is also more useful with map implementations that need instances of Comparable, like TreeMap. I would recommend using Objects for values though.\n\n\nMaybe, but it is a bit of a hassle to modify WebsocketImpl, or to assign a map in each server mapping WebSocket to other maps, which need their own keys. In other words I think it is easier to be able to write something like webSocket.get(key) in the server instead of socketMap.get(webSocket).get(key).\n\n\nEdit: By the way, thanks for adding labels. I had forgotten about them.\n. Now that I checked all this, I agree that a Map per websocket might be overkill for many applications. However, I do believe some way to distinguish between clients in the server is needed. A clientid field should suffice for this.\nHowever, I do have a small warning: If multiple clients are handled in different threads, it might be handy to have a map for each client, as my initial proposal. The reason is that multithreading might break a standard(not thread safe) Map of client id's to other objects. Using clientid's is more lightweight then a TreeMap for each client, but also more risky, as a coder might use a non thread safe map.\nOverall, both solutions have their merits to me. The map solution might be safer, but overkill in some situations. The client id is more lightweight, but also harder to use in some cases, or have more work to it.. I am not surprised a HashMap per connection is bad, since a HashMap needs a lot of memory. (One reason I do not like them, except in cases where the number and total size of the Map can be predetermined.) But amap of any kind(like a TreeMap) would be overkill anyway. Your current solution is a lot more flexible. \nIn short, thank you.. ",
    "Spoortihallur": "Thanks a lot. I could do it\n. ",
    "pmarchesi": "If this is a bugs\nPossible solution:\nLine 372 Add\n    } catch ( SSLException ex ) {\n                    if( channel != null ){\n                        System.out.println(\"Close by a SSLException\");\n                        try {\n                            channel.close();\n                        } catch (IOException e) {\n                            e.printStackTrace();\n                        }\n                    }\nLine 315 change\n- SocketChannel channel = server.accept();\n- channel = server.accept();\nLine 269 Add\n        SocketChannel channel = null;       \nI don't know if make a leakmemory. \nSaludos\nPablo\n. ",
    "hepin1989": "I think this is a client lib,and you @tinganho .\n. @tinganho I just take a glance at its source code,and I don't think that should be scalable.\nanyway this lib is still very nice.\nyou could try netty or something else if you are wring an server.WDYT?\n. ",
    "tinganho": "@hepin1989 the descriptions says \"A barebones WebSocket client and server implementation written in 100% Java\"\n. ok thanks\nOn Thu, Mar 27, 2014 at 2:44 PM, kerr notifications@github.com wrote:\n\n@tinganho https://github.com/tinganho I just take a glance at its\nsource code,and I don't think that should be scalable.\nanyway this lib is still very nice.\nyou could try netty or something else if you are wring an server.WDYT?\n\nReply to this email directly or view it on GitHubhttps://github.com/TooTallNate/Java-WebSocket/issues/250#issuecomment-38773399\n.\n\n\nSincerely,\nTingan Ho\n. ",
    "aiQon": "+1\n. ",
    "xolan": "Another +1.\n. ",
    "Mathbl": "+1 \nIs someone listening? \n. ",
    "daluu": "@jasminsehic I have question for you under your pull request.\n. Also, for others, if clojars repo doesn't seem to be working for you, or you want to host this project's JAR in internal repo or locally with your project, you can do something like what I did here:\nhttps://gist.github.com/daluu/52af7eef52563ddf78fe\nit's no big deal for those of us who are using maven anyways, so build your own copy of the latest JAR with maven and then package it for local hosting or dependency management. Granted having an official public repo to pull from is better.\n. I guess in the meantime, manually compile the needed Dist JAR with the sources (and maven) from this repo? If you don't want to link with sources and rather have a JAR that is.\n. I didn't even notice the JAR was in the source code repo. I downloaded from the website homepage rather than Github page and assumed I was downloading a zip of the full package source + binary. Agree that the JAR should be under Github releases as a binary asset for download (for those that don't use maven, gradle, etc.)\n. Is it actually fully working for clojars.org repo? Or one must actually use Clojure/Leiningen to use the JAR stored there?\nI thought to give it a try with my maven pom & this was the result snippet below (running mvn eclipse:eclipse). I wasn't able to pull the JAR/POM for 1.3.1 nor 1.3.0 (tested manually via pasting URL to browser), but was able to pull 1.3.0 from maven central by URL just no 1.3.1 available.\nFor maven pom, I simply inserted the clojar maven repository snippet & the maven dependency snippet from clojars.org into my pom file, following https://clojars.org/org.java-websocket/java-websocket\n```\nDownloading: http://clojars.org/repo/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.pom\nDownloading: https://repo.maven.apache.org/maven2/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.pom\n[WARNING] Missing POM for org.java-websocket:Java-WebSocket:jar:1.3.1\nDownloading: http://clojars.org/repo/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.jar\nDownloading: https://repo.maven.apache.org/maven2/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.jar\n[WARNING] An error occurred during dependency resolution.\n    Failed to retrieve org.java-websocket:Java-WebSocket-1.3.1\nCaused by: Could not find artifact org.java-websocket:Java-WebSocket:jar:1.3.1 in clojars.org (http://clojars.org/repo)\nTry downloading the file manually from the project website.\nThen, install it using the command: \n    mvn install:install-file -DgroupId=org.java-websocket -DartifactId=Java-WebSocket -Dversion=1.3.1 -Dpackaging=jar -Dfile=/path/to/file\nAlternatively, if you host your own repository you can deploy the file there: \n    mvn deploy:deploy-file -DgroupId=org.java-websocket -DartifactId=Java-WebSocket -Dversion=1.3.1 -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]\nPath to dependency: \n    1) your maven project\n    2) org.java-websocket:Java-WebSocket:jar:1.3.1\norg.java-websocket:Java-WebSocket:jar:1.3.1\nfrom the specified remote repositories:\n  clojars.org (http://clojars.org/repo, releases=true, snapshots=true),\n  central (https://repo.maven.apache.org/maven2, releases=true, snapshots=false)\n[INFO] Unable to read jar manifest from /Users/daluu/.m2/repository/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.jar\n```\n. Which build system is up to date?\nMy question/point was that it appears the clojars repo isn't fully working, although I didn't test from the Clojure side. But from what I saw on the clojars.org site (docs), it appears you can use maven to fetch from that repo so you aren't restricted to pulling with Leiningen (or other Clojure toolkit), or restricted to fetching from maven central only. Attempting the maven fetch against clojars repo fails as per my previous comment.\n. but I'm curious why trying to fetch from clojars repo via a maven pom.xml in my own project for this dependency (or from the error dump, trying to fetch with direct URL to clojars repo) fails. I don't know the workings of clojars repo but I know for maven central, you are able to pull with maven as well as directly fetch by URL link in repo (the maven central page for a hosted JAR even has link to download the JAR that maven also uses to pull the JAR from I believe.\nThe question isn't about whether the files are correct but why what was published to clojars doesn't seem to be available. I mean take a look at this page:\nhttps://clojars.org/org.java-websocket/java-websocket\nand last comment by @jasminsehic at https://github.com/TooTallNate/Java-WebSocket/issues/252, maybe @jasminsehic can answer this.\n. I guess in the interim, one will want to pull from the clojars repo with maven? Or manually compile the latest JAR with maven from the codebase here and link to your project rather than use maven to pull it off maven central (or host the manually compiled version in your own local maven repo).\n. Btw, anyone use/try from clojars or use Clojure? I thought to give it a try with my maven pom & this was the result snippet below (running mvn eclipse:eclipse). I wonder if the info on clojars.org regarding v1.3.1 is even accurate or not. I wasn't able to pull the JAR/POM for 1.3.1 nor 1.3.0 (tested manually via pasting URL to browser), but was able to pull 1.3.0 from maven central by URL just no 1.3.1 available.\nFor maven pom, I simply inserted the clojar repository snippet & the maven dependency snippet from clojars.org into my pom file, following https://clojars.org/org.java-websocket/java-websocket\n```\nDownloading: http://clojars.org/repo/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.pom\nDownloading: https://repo.maven.apache.org/maven2/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.pom\n[WARNING] Missing POM for org.java-websocket:Java-WebSocket:jar:1.3.1\nDownloading: http://clojars.org/repo/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.jar\nDownloading: https://repo.maven.apache.org/maven2/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.jar\n[WARNING] An error occurred during dependency resolution.\n    Failed to retrieve org.java-websocket:Java-WebSocket-1.3.1\nCaused by: Could not find artifact org.java-websocket:Java-WebSocket:jar:1.3.1 in clojars.org (http://clojars.org/repo)\nTry downloading the file manually from the project website.\nThen, install it using the command: \n    mvn install:install-file -DgroupId=org.java-websocket -DartifactId=Java-WebSocket -Dversion=1.3.1 -Dpackaging=jar -Dfile=/path/to/file\nAlternatively, if you host your own repository you can deploy the file there: \n    mvn deploy:deploy-file -DgroupId=org.java-websocket -DartifactId=Java-WebSocket -Dversion=1.3.1 -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]\nPath to dependency: \n    1) your maven project\n    2) org.java-websocket:Java-WebSocket:jar:1.3.1\norg.java-websocket:Java-WebSocket:jar:1.3.1\nfrom the specified remote repositories:\n  clojars.org (http://clojars.org/repo, releases=true, snapshots=true),\n  central (https://repo.maven.apache.org/maven2, releases=true, snapshots=false)\n[INFO] Unable to read jar manifest from /Users/daluu/.m2/repository/org/java-websocket/Java-WebSocket/1.3.1/Java-WebSocket-1.3.1.jar\n```\n. ",
    "dbrgn": "There's more discussion and a possible solution in #311.\n. Probably a duplicate of #253.\n. > can i use the constructor below to set header Sec-WebSocket-Protocol ?\nThanks for the idea, this seems to work.\njava\nMap<String, String> headers = new HashMap<>();\nheaders.put(\"Sec-WebSocket-Protocol\", \"super-duper-subproto-1.0\");\nWebSocketClient(serverUri, new Draft_17(), headers, connectTimeout);\n. ",
    "serviewcare": "I found there is a headers parameter which is optional in the constructor:\nMap headers = new HashMap();\nheaders.put(\"User-Agent\", \"Android\");\nnew WebSocketClient(new URI(meteorServerAddress), new Draft_17(), headers, 0);\n. ",
    "larrytin": "I've commited a simple reconnector for android at https://github.com/goodow/realtime-channel/blob/master/src/main/java/com/goodow/realtime/channel/impl/ReconnectBus.java\n. ",
    "YangLzy": "Thank you for your answer My question! But my project based on android rtc Mechanism,and in my code i send ping data and handle reconect with alarmmanager, so i can't reconnect websocket with timer or thread,thanks again!\n. ",
    "yin450561200": "Anyone successful in reconnecting ?. I was in the development of my app, the use of your web socket framework, and sometimes the phone network is unstable, and then app web socket will be disconnected, and then in the app socket in the re connection. . ok\uff0cthank you.. ",
    "lixuebo0630": "Anyone successful in reconnecting ?. ",
    "tiagosantos1988": "Here is an example class that reconnects the websocket whenever the connection is lost:\n`public class JWebSocketClient {\nprivate final int PING_INTERVAL = 50000;\n   private final int RECONNECT_INTERVAL = 10000;\n   private final int WEBSOCKET_TIMEOUT = 5;\n   private static JWebSocketClient instance;\nprivate WebSocketClient websocketClient;\n   private IWebSocketListener listener;\nprivate String myChannel;\n   private String myInstance;\n   private String myWebSocket;\n   private static Boolean isReconnecting = false;\n   private static Boolean isStarting = false;\npublic static JWebSocketClient getInstance() {\n      if (instance == null) {\n         instance = new JWebSocketClient();\n      }\n      return instance;\n   }\npublic boolean isConnected() {\n      try {\n         return websocketClient != null && websocketClient.getConnection().isOpen();\n      } catch (Exception e) {\n         return false;\n      }\n   }\npublic void start(String userEmail, String userInstance, String webSocketHost, IWebSocketListener listener) {\n      this.myChannel = \"uc_\" + userEmail.replace(\"@\", \"\").replace(\".\", \"\");\n      this.myInstance = userInstance + \".\" + userEmail;\n      this.myWebSocket = webSocketHost + \"/v1/service/\" + myInstance;\n      this.listener = listener;\n  if (!isConnected() && !isStarting) {\n     isStarting = true;\n     new JStartWebSocket().run();\n  }\n\n}\npublic void stop() {\n      try {\n         if (isConnected()) {\n            websocketClient.close();\n         }\n      } catch (Exception e) {\n      } finally {\n         websocketClient = null;\n      }\n   }\npublic boolean sendMessage(String message) {\n      try {\n         if (isConnected() && message != null) {\n            websocketClient.send(message);\n            return true;\n         } else {\n            return false;\n         }\n      } catch (NotYetConnectedException e) {\n         return false;\n      }\n   }\nprivate void reconnect() {\n      if (!isReconnecting && !isConnected()) {\n         isReconnecting = true;\n         new JRestartWebSocket();\n      }\n   }\nprivate void sendDelayedMessage() {\n      new JSendDelayMessage();\n   }\nprivate class JStartWebSocket implements Runnable {\n  public JStartWebSocket() {\n     ThreadFactory customThreadfactory = new JThreadFactoryBuilder().setNamePrefix(\"thread_JStartWebSocket\").build();\n     customThreadfactory.newThread(this);\n  }\n\n  @Override\n  public void run() {\n     try {\n        websocketClient = null;\n        System.out.println(\"******** NEW WEBSOCKET INSTANCE ********\");\n        System.out.println(\"**** URL: \" + myWebSocket + \" ****\");\n        websocketClient = new WebSocketClient(new URI(myWebSocket), new Draft_6455()) {\n\n           @Override\n           public void onMessage(String message) {\n              listener.onWebSocketMessageReceive(message);\n           }\n\n           @Override\n           public void onOpen(ServerHandshake handshake) {\n              System.out.println(\"******** WEBSOCKET CONNECTED ********\");\n              sendDelayedMessage();\n\n              listener.onWebSocketConnect();\n           }\n\n           @Override\n           public void onWebsocketPing(WebSocket conn, Framedata f) {\n              try {\n                 FramedataImpl1 frame = new FramedataImpl1(Opcode.PONG) {\n                    @Override\n                    public void isValid() throws InvalidDataException {\n                    }\n                 };\n                 frame.setFin(true);\n                 if (isConnected() && conn != null && conn.isOpen()) {\n                    conn.sendFrame(frame);\n                 }\n                 System.out.println(\"******** WEBSOCKET PING-PONG ********\");\n              } catch (NotYetConnectedException e) {\n              }\n           }\n\n           @Override\n           public void onClose(int code, String reason, boolean remote) {\n              System.out.println(\"********\\n\\nWEBSOCKET CLOSED\\n\\nReason:\" + reason + \"\\nCode: \" + code + \"\\nRemote: \" + remote + \"\\n\\n********\");\n              if (remote || code != 1000) {\n                 reconnect();\n              }\n              listener.onWebSocketClose(code, reason, remote);\n           }\n\n           @Override\n           public void onError(Exception ex) {\n              System.out.println(\"WEBSOCKET ERROR: \" + ex.toString());\n              reconnect();\n              listener.onWebSocketError(ex);\n           }\n        };\n\n        if (myWebSocket.startsWith(\"wss\")) {\n           SSLSocketFactory socketFactory = getSSLSocketFactory();\n           websocketClient.setSocket(socketFactory.createSocket());\n           websocketClient.setConnectionLostTimeout(WEBSOCKET_TIMEOUT);\n           websocketClient.connect();\n           //System.out.println(websocketClient.getConnection().toString());\n        }\n\n     } catch (IOException | URISyntaxException e) {\n        System.out.println(\"WS error: \" + e);\n     } finally {\n        isStarting = false;\n     }\n  }\n\n}\nprivate class JRestartWebSocket implements Runnable {\n  private ScheduledExecutorService scheduler = null;\n\n  public JRestartWebSocket() {\n     ThreadFactory customThreadfactory = new JThreadFactoryBuilder().setNamePrefix(\"thread_JRestartWebSocket\").build();\n     scheduler = Executors.newScheduledThreadPool(1, customThreadfactory);\n     scheduler.schedule(this, RECONNECT_INTERVAL, TimeUnit.MILLISECONDS);\n\n  }\n\n  @Override\n  public void run() {\n     if (!isConnected()) {\n        System.out.println(\"********* RECONNECT WEBSOCKET **********\");\n        try {\n           if (!isStarting) {\n              isStarting = true;\n              new JStartWebSocket().run();\n           }\n        } catch (Exception ex) {\n           System.out.println(\"WebSocket Connect Error \" + ex.toString());\n        } finally {\n           scheduler.schedule(this, RECONNECT_INTERVAL, TimeUnit.MILLISECONDS);\n        }\n     } else {\n        isReconnecting = false;\n     }\n  }\n\n}\nprivate class JSendDelayMessage implements Runnable {\n  private ScheduledExecutorService scheduler = null;\n\n  public JSendDelayMessage() {\n     ThreadFactory customThreadfactory = new JThreadFactoryBuilder().setNamePrefix(\"thread_JSendDelayMessage\").build();\n     scheduler = Executors.newScheduledThreadPool(1, customThreadfactory);\n     scheduler.schedule(this, PING_INTERVAL, TimeUnit.MILLISECONDS);\n  }\n\n  @Override\n  public void run() {\n     if (isConnected()) {\n        try {\n           sendMessage(myChannel);\n        } catch (NotYetConnectedException ex) {\n           System.out.println(\"WebSocket Send Channel Error \" + ex.toString());\n        } finally{\n           scheduler.schedule(this, PING_INTERVAL, TimeUnit.MILLISECONDS);\n        }\n     }\n  }\n\n}\nprivate SSLSocketFactory getSSLSocketFactory() {\n      try {\n         SSLContext sslContext;\n         TrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {\n            @Override\n            public java.security.cert.X509Certificate[] getAcceptedIssuers() {\n               return new java.security.cert.X509Certificate[]{};\n            }\n        @Override\n        public void checkClientTrusted(X509Certificate[] chain,\n                String authType) throws CertificateException {\n        }\n\n        @Override\n        public void checkServerTrusted(X509Certificate[] chain,\n                String authType) throws CertificateException {\n        }\n     }};\n\n     KeyManager[] keyManager = null;\n     try {\n        final KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());\n        KeyManagerFactory factory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n        factory.init(keyStore, null);\n        keyManager = factory.getKeyManagers();\n     } catch (NoSuchAlgorithmException | UnrecoverableKeyException | KeyStoreException e) {\n     }\n\n     try {\n        sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(keyManager, trustAllCerts, new java.security.SecureRandom());\n        return sslContext.getSocketFactory();\n     } catch (KeyManagementException | NoSuchAlgorithmException e) {\n        return null;\n     }\n  } catch (Exception ex) {\n     System.out.println(\"Erro no getSSLContext\");\n     return null;\n  }\n\n}\n}`. There is a problem with sending ping. If there isn't network it throws an exception. It didn't happend in version 1.3.4.. The problem I'm having is exactly that quoted by @tiagomartines11 .. ",
    "yuksels": "Release 1.3.8  ?. ",
    "entr0cks": "I'm using a nodejs server and connect over TLS.\nSending:\nMap<String,String> headers = new HashMap<String, String>();\nheaders.put(\"Cookie\", \"sid=AndroidUniqueId\");\n//headers.put(\"Origin\", \"xxx.xxx.xxx.xxx\");\nheaders.put(\"Sec-WebSocket-Origin\", Build.MODEL);\nmWebSocketClient = new WebSocketClient(uri, new Draft_10(), headers, 0) {...}\nAnd receive with:\npublic void onOpen(ServerHandshake serverHandshake) {\n    Log.i(\"Websocket\", serverHandshake.getFieldValue(\"Set-Cookie\"));\n    mWebSocketClient.send(\"Hello from \" + Build.MANUFACTURER + \" ::: \" + Build.MODEL);\n}\nMy problem is that despite sending multiple cookies to android I'm able to see only the last one...\nsocket_test=Justtestingmultiplecookies;Secure;HttpOnly\n. This works well in android :)\n```\nwsClient = new WebSocketClient(...){...}\nSSLContext sslContext = null;\ntry {\n    sslContext = SSLContext.getInstance( \"TLS\" );\n    sslContext.init( null, null, null ); // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\n} catch (NoSuchAlgorithmException e) {\n    e.printStackTrace();\n} catch (KeyManagementException e) {\n    e.printStackTrace();\n}\nwsClient.setWebSocketFactory( new DefaultSSLWebSocketClientFactory( sslContext ) );\nwsClient.connect();\n```\n. Just a quick guess (haven't tested anything or done research) - top one is ws and bottom one is wss, because of the handshake?\n. ",
    "wang22123467469": "how to get user's session message?. ",
    "vcucek": "I think i have found the source of this problem:\nhttps://code.google.com/p/android/issues/detail?id=15388\n. ",
    "marwin42": "You can try that:\nhttp://paste.ubuntu.com/7710792/\n(this = Your WebSocket client)\nand call it before you connect your WebSocket client.\n. ",
    "GregoryHlavac": "This really should be put into the official example thing, as the example in the repo still uses something that sets a SSLSocketFactory instead and doesn't work.\n. ",
    "andredigenova": "@entr0cks approach also doesn't seem to work on Lollypop.\nEdit: This may be a bug actually. Debugged it and the SSL code seems to get in an infinite loop in SSLSocketChannel2's unwrap method.\n. Are you connecting via wss by any chance?\n. I have the same issue as well. Tracked it down to what appears to be an infinite loop in the class SSLSocketChannel2.\n``` java\nprivate synchronized ByteBuffer unwrap() throws SSLException {\n    int rem;\n    do {\n        rem = inData.remaining();\n        engineResult = sslEngine.unwrap( inCrypt, inData );\n        engineStatus = engineResult.getStatus();\n    } while ( engineStatus == SSLEngineResult.Status.OK && ( rem != inData.remaining() || engineResult.getHandshakeStatus() == HandshakeStatus.NEED_UNWRAP ) );\ninData.flip();\nreturn inData;\n\n}\n```\nThe do/while seems to run forever.\n. @iheart2code it definitely is an issue with the client as well. (This is the use-case I am using. My endpoint is a node.js WebSocket server) In 1.3.0 both the server and the client use the class SSLSocketChannel2 which is where the bug is.\nI managed to get everything working again but did some fairly heavy handed rewriting of SSLSocketChannel2. Not sure if there are any bugs and whatnot, but it seems to work perfectly for my client application.\nCode is here if anyone wants it. Although it was written by someone who had no idea how SSLEngine worked 24 hours ago so try it at your own risk. Definitely not confident enough about it to submit a pull request without someone who knows what they're doing taking a look.\n. I had this issue and rewrote SSLSocketChannel2 to use SSLEngine in the way I saw several other projects use it. The code seems to work for me but it definitely needs more testing. I have only used it as a WSS client, but it should behave the same for servers.\nhttps://github.com/andrepew/Java-WebSocket/tree/1.3.0-Android-SSL-Fix\n. ",
    "AngellusMortis": "I am also having trouble getting an SSL connection to work. I am using nodeJS+ws and when I turn off SSL and use ws:// it works, but when SSL is on and I use wss:// it does not. The server is set up and configured fine as I have a JavaScript client connecting to it and using it with the wss:// and SSL. It is also not a self-signed cert. \nEDIT: I am using version 1.3.0 from Maven.\nCode:\n```\npublic SocketClientHandler(Plugin plugin, URI socket_url) throws InvalidClassException {\n    super(socket_url, new Draft_17());\n    this.plugin = plugin;\nif (socket_url.toString().startsWith(\"wss\")) {\n    this.plugin.getLogger().info(\"Socket: Using SSL\");\n    try {\n        SSLContext sslContext = null;\n        sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(null, null, null);\n        this.setWebSocketFactory(new DefaultSSLWebSocketClientFactory(sslContext));\n    } catch (NoSuchAlgorithmException | KeyManagementException e) {\n        throw new InvalidClassException(\"Could not initialize SSL connection\");\n    }\n}\n\n}\n```\nLogs (without SSL):\n```\n[08:22:57] [Thread-10/INFO]: write(151): {GET / HTTP/1.1\nConnection: Upgrade\nHost: somehost.com:9000\nSec-WebSocket-Key: KkCG4JWnHB9laXGxi/82uQ==\nSec-WebSocket-Version: 13\nUpgrade: websocket\n}\n[08:22:57] [Thread-10/INFO]: process(129): {HTTP/1.1 101 Switching Protocols\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Accept: o8XnegQLdYlURafEgvKhAqwukz0=\n}\n[08:22:57] [Thread-10/INFO]: open using draft: Draft_17\n[08:22:57] [Thread-10/INFO]: Sockets: onOpen\n```\nLogs (with SSL):\n```\n[08:31:12] [Server thread/INFO]: Socket: Using SSL\n[08:31:12] [Thread-10/INFO]: write(151): {GET / HTTP/1.1\nConnection: Upgrade\nHost: somehost.com:9000\nSec-WebSocket-Key: GQ6/FA8/Hz0wktFml+q4hQ==\nSec-WebSocket-Version: 13\nUpgrade: websocket\n}\n[08:31:12] [Thread-10/INFO]: Sockets: onClose: -1  true\n```\n. ",
    "ilber": "I have the same problem here. \nClosed draft org.java_websocket.drafts.Draft_10@14e30802 refuses handshake .... And then:\nError ssl == null\n    java.lang.NullPointerException: ssl == null\n            at com.android.org.conscrypt.NativeCrypto.SSL_read_BIO(Native Method)\n            at com.android.org.conscrypt.OpenSSLEngineImpl.unwrap(OpenSSLEngineImpl.java:477)\n            at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:1006)\n            at org.java_websocket.SSLSocketChannel2.unwrap(SSLSocketChannel2.java:150)\n            at org.java_websocket.SSLSocketChannel2.readRemaining(SSLSocketChannel2.java:254)\n            at org.java_websocket.SSLSocketChannel2.readMore(SSLSocketChannel2.java:321)\n            at org.java_websocket.SocketChannelIOHelper.readMore(SocketChannelIOHelper.java:28)\n            at org.java_websocket.client.WebSocketClient.interruptableRun(WebSocketClient.java:238)\n            at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:188)\n            at java.lang.Thread.run(Thread.java:818)\nSomeone has any idea? Its working fine with the wss://echo.websocket.org but not with my production server.\nThank you for your help.\nRegards,\nIlber\n. ",
    "chetbox": "Note that you can also use SSLContext.getDefault() rather than the somewhat mysterious init(null, null, null).\njava\nif (uri.getScheme().equals(\"wss\")) {\n    try {\n        SSLContext sslContext = SSLContext.getDefault();\n        setWebSocketFactory(new DefaultSSLWebSocketClientFactory(sslContext));\n    } catch (NoSuchAlgorithmException e) {\n        e.printStackTrace();\n    }\n}\nIn my case the issue was that I hadn't included the full certificate authority (CA) chain on my server. Chrome happens to include the intermediate CA my server certificate is signed with as well as the root CA but Android only includes the root CA. (Their names were subtly different which I hand't noticed before.)\nYou can see which CAs your device recognises by going to\nSettings > Security > Trusted credentials\n. ",
    "pkolanda": "I got  - refuses handshake , false    - then changed the code as below:\n        SSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getDefault();\n        } catch (NoSuchAlgorithmException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        setWebSocketFactory(new DefaultSSLWebSocketClientFactory(sslContext));\nDraft_17. \nI get : closed connection -1 ,  , true. \nAny help here. This happens during socket creation. I know this very old thread. But now i am in this stage only.\n. Need to create sslcontext like below. it skips the certificate. I was successfully able make a connection without certificate\nSSLContext sslContext = SSLContext.getInstance(\"SSL\");\n// set up a TrustManager that trusts everything\nsslContext.init(null, new TrustManager[] { new X509TrustManager() {\n            public X509Certificate[] getAcceptedIssuers() {\n                    System.out.println(\"getAcceptedIssuers =============\");\n                    return null;\n            }\n```\n        public void checkClientTrusted(X509Certificate[] certs,\n                        String authType) {\n                System.out.println(\"checkClientTrusted =============\");\n        }\n    public void checkServerTrusted(X509Certificate[] certs,\n                    String authType) {\n            System.out.println(\"checkServerTrusted =============\");\n    }\n\n```\n} }, new SecureRandom());\n. I dont have keys with me. I use only user name and password. I have token generated after login via other API. It is possible to establish the connection with token or user/password ?\n. How do i say don't look for any certificate ?\n. Need to create sslcontext like below. it skips the certificate. I was successfully able make a connection without certificate\nSSLContext sslContext = SSLContext.getInstance(\"SSL\");\n// set up a TrustManager that trusts everything\nsslContext.init(null, new TrustManager[] { new X509TrustManager() {\n            public X509Certificate[] getAcceptedIssuers() {\n                    System.out.println(\"getAcceptedIssuers =============\");\n                    return null;\n            }\n```\n        public void checkClientTrusted(X509Certificate[] certs,\n                        String authType) {\n                System.out.println(\"checkClientTrusted =============\");\n        }\n    public void checkServerTrusted(X509Certificate[] certs,\n                    String authType) {\n            System.out.println(\"checkServerTrusted =============\");\n    }\n\n```\n} }, new SecureRandom());\n. ",
    "cong91": "Hi everyone. \nis this currently my problem. But lastest version in class WebSocketClient delete function setWebSocketFactory. I can't found same function for SSL in WebSocketClient. \nPlease share for your tutorial.\nThanks for share.\nCongNT . ",
    "clackmac": "Hey @marci4 , is it possible setSocketFactory is not available? I noticed a @since 1.4.0 which I believe is not released yet.. Thanks for the quick response and sorry to bother but do you have any idea when the next release is going to be? \nBTW: I'm using the library on an android project\n. More than fair! haha\nHave a good one man \ud83c\udf7band thank you for your work =D.. Cool! Thanks man, really appreciate it \ud83d\ude4f\nI'll test my app a little bit more with 1.3.9 which seems to be working at the moment but I'll keep your suggestion as an option in case something arises.. Hey @feng612266, in my scenario the latest version worked just fine. FYI: I was not using client cert validation via keystore.\nHaving said that, I had another test environment having a certificate with an invalid CA chain and in that case I tried the latest snapshot (1.4.0) using the sample code, again, without using cert validation via keystore but accepting all certificates as valid. Even though the latter worked, that's not very secure, but that specific implementation was for testing purposes and not my final approach.. ",
    "feng612266": "\nCool! Thanks man, really appreciate it \ud83d\ude4f\nI'll test my app a little bit more with 1.3.9 which seems to be working at the moment but I'll keep your suggestion as an option in case something arises.\n\nhello,clackmac,I had used the latest snapshot lib,and setSocketFactory after new webcokctclient ,but still have SSLHandshakeException java.security.cert.CertPathValidatorException: \"Trust anchor for certification path not found\". if i use this sslContext.init( null, null, null ),the \"keystore.jks\" can not set is that? this file is diffrent with the android .jks file when packaging release is that?. hello, marci4 ,I had used the latest snapshot lib,and setSocketFactory after new webcokctclient ,but still have SSLHandshakeException java.security.cert.CertPathValidatorException: \"Trust anchor for certification path not found\". if i use this sslContext.init( null, null, null ),the \"keystore.jks\" can not set is that? this file is diffrent with the android .jks file when packaging release is that?. > \n\nHey @feng612266, in my scenario the latest version worked just fine. FYI: I was not using client cert validation via keystore.\nHaving said that, I had another test environment having a certificate with an invalid CA chain and in that case I tried the latest snapshot (1.4.0) using the sample code, again, without using cert validation via keystore but accepting all certificates as valid. Even though the latter worked, that's not very secure, but that specific implementation was for testing purposes and not my final approach.\n\nthank you @clackmac now it worked fine , I was not using client cert validation via keystore too. I fund this way online:\n               try {\n                        sslContext.init(null, new TrustManager[]{\n                                new X509TrustManager() {\n\n                                    @Override\n                                    public void checkClientTrusted(java.security.cert.X509Certificate[] chain, String authType) {\n\n                                    }\n\n                                    @Override\n                                    public void checkServerTrusted(java.security.cert.X509Certificate[] chain, String authType) {\n\n                                    }\n\n                                    @Override\n                                    public X509Certificate[] getAcceptedIssuers() {\n                                        return new X509Certificate[0];\n                                    }\n                                }\n                        }, new SecureRandom());\n                    } catch (KeyManagementException e) {\n                        e.printStackTrace();\n                    }\n                    SSLSocketFactory factory = sslContext.getSocketFactory();\n                    mWebSocket.setSocketFactory(factory);.\n",
    "patheros": "I would like to turn on TCP_NODELAY in Java-WebSocket. I have looked through the code and I can't find anything that seems to do this by default or let me set it.\nThe above code doesn't work but my work around is\n@Override\npublic void onOpen( WebSocket conn, ClientHandshake handshake ) {\n    try {\n        ((WebSocketImpl)conn).socket.setTcpNoDelay(true);\n    } catch (SocketException e) {\n        e.printStackTrace();\n    }\n    ...\n}\n. ",
    "derekcsm": "Hey did you end up solving this?\n. ",
    "RoundSparrow": "Yes. Sorry I forgot to mention SSL.\n. ",
    "iheart2code": "I am seeing this issue as well, using SSL with self-signed certificate.\n. This may be an issue with the websocket client, as well.\n. Thanks for sharing @andrepew \n. ",
    "diabolusss": "I followed Exception path and found changed code part in SSLSocketChannel2 function consumeDelegatedTasks. I commented tasks.add( exec.submit( task ) ); and uncommented task.run();. \nprotected void consumeDelegatedTasks() {\n        Runnable task;\n        while ( ( task = sslEngine.getDelegatedTask() ) != null ) {\n            //tasks.add( exec.submit( task ) );\n            task.run();\n        }\n    }\nNow server is working fine without any errors like before.\nIf someone could explain that i would appreciate that.\n. ",
    "dpitty": "I encountered the same problem on my program. You can replicate it using the ChatServer example provided in the original code. It's not just you!\n-Open Java-WebSocket.git/trunk/src/main/example/chat.html in a browser while running the corresponding back-end. In the first text area enter wss://hostname:portnumber\n-Press \"connect,\" toy around, everything should work fine. Press \"disconnect,\" still fine. Press \"connect\" again and the system will break (you will no longer be able to send messages). I got the same error message.\nJust tried diabolusss's edit an everything seems to work now. Thanks for the fix! Is this a bug that can be fixed in the next release?\n. ",
    "Dameck": "I had the identical problem and I was able to fix it with the solution as described above. Thank you for this! \n. ",
    "chico1198": "I implemented this fix, but I can still get this error in a certain situation.\nMy implementation wants only a single connection to the server. So, in my server code I have the following:\n@Override\n    public void onOpen(WebSocket conn, ClientHandshake handshake ) {\n        if(connections().size() > 1) {\n            System.out.println(\"Connection request after first connection. Refusing request.\");\n            // Use custom code to inform client of refusal\n            conn.closeConnection(1111, \"Websocket connection count exceeded.\");\n        } else {\n            System.out.println(conn + \" connected. \" +\n                    \"Type characters and press 'return' to send them to attached client.\");\n        }\n    }\nThis works as expected for the second connection. That is, the connection is refused. However, when a third client attempts to connect, I get the same server error as noted above.\njava.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@16667c73 rejected from java.util.concurrent.ScheduledThreadPoolExecutor@783835ee[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4]\n    at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047)\n    at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823)\n    at java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:326)\n    at java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:533)\n    at java.util.concurrent.ScheduledThreadPoolExecutor.submit(ScheduledThreadPoolExecutor.java:632)\n    at java.util.concurrent.Executors$DelegatedExecutorService.submit(Executors.java:678)\n    at org.java_websocket.SSLSocketChannel2.consumeDelegatedTasks(SSLSocketChannel2.java:176)\n    at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:141)\n    at org.java_websocket.SSLSocketChannel2.write(SSLSocketChannel2.java:208)\n    at org.java_websocket.SSLSocketChannel2.writeMore(SSLSocketChannel2.java:351)\n    at org.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:49)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:344)\n    at java.lang.Thread.run(Thread.java:745)\nAgain, I do have the fix described above in place.\nIs there any way to fix this?\n. ",
    "salamanders": "out of date.\n. ",
    "cgross": "Any help would be appreciated.  We need to know the CN of the cert thats connecting to know which user it is.\n. ",
    "CalvinKern": "For anyone else experiencing this problem, I was able to get a success by creating the WebSocket with a different draft type.\nFor example:\nmWebSocket = new WebSocketClient(uri, new Draft_17()) {\n...\n}\n. ",
    "sushant36": "did not help me Draft_17 deprecated in 1.3.4. ",
    "hellojinjie": "+1\n. ",
    "raxetul": "Of course jars should not be in repos, but  they might be kept under\n\"release\" with the source code which they are compiled from.\n3 Ara 2015 22:50 tarihinde \"bendem\" notifications@github.com yazd\u0131:\n\nThe jar should be removed, not updated, storing binaries in repos is bad\nand as we can see, cause problems because maintainers forget to update it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/286#issuecomment-161780619\n.\n. \n",
    "kirushanths": "+1\n. ",
    "metabrain": "+1\nAlso came across this issue. Though it only happens on our TeamCity project.\n```\nFound one Java-level deadlock:\n=============================\n\"WebsocketSelector18\":\n  waiting to lock monitor 0x0000000028ef87c8 (object 0x00000005c00e1190, a java.util.HashSet),\n  which is held by \"main\"\n\"main\":\n  waiting to lock monitor 0x00000000018b3d48 (object 0x000000071d80b900, a org.java_websocket.WebSocketImpl),\n  which is held by \"WebsocketSelector18\"\nJava stack information for the threads listed above:\n\"WebsocketSelector18\":\n    at org.java_websocket.server.WebSocketServer.removeConnection(WebSocketServer.java:508)\n    - waiting to lock <0x00000005c00e1190> (a java.util.HashSet)\n    at org.java_websocket.server.WebSocketServer.onWebsocketClose(WebSocketServer.java:488)\n    at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:459)\n    - locked <0x000000071d80b900> (a org.java_websocket.WebSocketImpl)\n    at org.java_websocket.WebSocketImpl.closeConnection(WebSocketImpl.java:479)\n    at org.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.java:64)\n    - locked <0x000000071d80b900> (a org.java_websocket.WebSocketImpl)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:349)\n    at java.lang.Thread.run(Thread.java:745)\n\"main\":\n    at org.java_websocket.WebSocketImpl.flushAndClose(WebSocketImpl.java)\n    - waiting to lock <0x000000071d80b900> (a org.java_websocket.WebSocketImpl)\n    at org.java_websocket.WebSocketImpl.close(WebSocketImpl.java:413)\n    at org.java_websocket.WebSocketImpl.close(WebSocketImpl.java:526)\n    at org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:207)\n    - locked <0x00000005c00e1190> (a java.util.HashSet)\n    at org.java_websocket.server.WebSocketServer.stop(WebSocketServer.java:232)\n    at our.internal.classes.OurWebSocket.stop(OurWebSocket.java:59)\n    at ...\nFound 1 deadlock.\n```\n. ",
    "stefanjauker": "+1\n18:48:46      [java] java.lang.Exception: test timed out after 60000 milliseconds\n18:48:46      [java]    at org.java_websocket.WebSocketImpl.flushAndClose(WebSocketImpl.java:487)\n18:48:46      [java]    at org.java_websocket.WebSocketImpl.close(WebSocketImpl.java:413)\n18:48:46      [java]    at org.java_websocket.WebSocketImpl.close(WebSocketImpl.java:526)\n18:48:46      [java]    at org.java_websocket.client.WebSocketClient.close(WebSocketClient.java:155)\n18:48:46      [java]    at io.socket.WebsocketTransport.disconnect(WebsocketTransport.java:44)\n18:48:46      [java]    at io.socket.IOConnection.cleanup(IOConnection.java:434)\n18:48:46      [java]    at io.socket.IOConnection.unregister(IOConnection.java:289)\n18:48:46      [java]    at io.socket.SocketIO.disconnect(SocketIO.java:323)\n. ",
    "drecrabb": "@ThreaT \nConnect Device1 (client running old TTN JWS code) to Device2 (server).\nUnplug/kill Device2.\nDevice1 doesn't get notified the connection dropped.\n. ",
    "aesteve": "duplicate from #251 \n. ",
    "johnnyzen": "We are also experencing this when we get error code 4000. The socket is closing, but never closes and then we get the same in a loop:\nGC_FOR_ALLOC freed 512K, 4% free 17338K/17896K, paused 13ms, total 13ms\nAny progress on this issue?\n. We are using lollipop and not getting this issue.. what device are you using?\n. ",
    "rzorzal": "I have this same problem, I tried create and connect using AsyncTask, Service on Background and on Application Class, but still not working. \nAlways 50 sec after connecting, it disconnected and then stops the communication with Object instantiated before. I think it happens , because all Threads and Objects has a lifetime and lifecycle and when that Objects are no longer used, they are destroyed and then the connection with server ends. But i don't have solution yet. \nPS: I'm not using SSL connection . I think is the same problem with garbage collector .\nEDIT 1: It only occur when use on mobile, when it run on emulator android nothing wrong happens.\n. ",
    "renaudboulard": "I had the same issue with webSocket.close() and the GC, on my Android app.\n@douglasjunior  what do you mean by \"I downloaded the current source code and put into my project, problem solved\" your downloaded source code, isn't the same as version 1.3.0 ?\n. ",
    "jabrena": "I found a solution in Javascript side.\nI changed the way to send the information.\nI will publish an example soon.\n. ",
    "kickroot": "If you want to send JSON via Websocket then you'll need to serialize your objects to a JSON String.  It's quite easy with a number of JSON libraries.  (json.org, Jackson, Gson)\n. ",
    "khk624": "I have same issue here. It only has a problem with Lollipop. \nMy code is almost same with @szczepaan, but I've used X509TrustManager for sslContext.init(). \nTested on Nexus 7 (Android 5.0)\n. ",
    "aeirola": "I'm experiencing the same problems as above. Checking the debugger it seems as if the reader thread is stuck in the SSLSocketChannel2.unwrap() loop with sslEngine being an instance of OpenSSLEngineImpl. The sslEngine.unwrap() call constantly returns with bytesConsumed=0, bytesProduced=0 and handshakeStatus=NEED_UNWRAP.\nNeed to investigate further what this is about...\nEDIT: Add some links\n. So apparently NativeCrypto.SSL_do_handshake_bio return 0 in the code, which according to the documentation means \n\n\"The TLS/SSL handshake was not successful but was shut down controlled and by the specifications of the TLS/SSL protocol. Call SSL_get_error() with the return value ret to find out the reason.\"\n\nWithout access to the context, and calling SSL_get_error, it'll be too hard to continue debugging.\nI guess I'll just use some other websocket library, like AndroidAsync...\n. ",
    "earlymarket-oc": "I can confirm, on Nexus 5 with Lollipop WSS is not working at all.\n. ",
    "porkyhead": "Can confirm that the issue exists on Nexus 9 Lollipop. \nAndrepew's solution is working on Lollipop but crashes on Kitkat (and maybe even older Android versions), so there is no single solution for using websocket SSL on Android in general :(\n. ",
    "juanjo75es": "Couldn't it be that Lollipop has a different list of supported CA's and now your root certificate is not accepted by your client?\n. ",
    "Jullekungfu": "@andrepew I had the exact same issue as described above, your provided fix solved everything!\nThanks! :D\n. ",
    "sristi": "@andrepew I confirm that I had tested your version of java_websocket.jar with WSS protocol on Android 4.1.2 to 6.0 emulators and devices from major android device vendors. Moreover, I had tried wss connections on older version of device/emulators having android 4.0.3 and previous ones. But wss did not work for them and I simply make a fallback to ws protocol to those devices. Hats off to your work !\n. No Framing Exception. No, there is no possibility to connect to server without presenting client's certificate(Two-way SSL). However, Socket gets connected (and works OK) in Server Authentication (One-way SSL). . @hellochenwang, which type of authentication are you using -- server-authentication or client-authentication ?\nI have worked with both type of authentication and there is no problem.\nBTW, the problem we are discussing is getting connected from Android WSS:// clients.. @hellochenwang, No modification in this library code (if you had asked about it) has been done. For server-authentication, wss connection from Chrome client just works  fine.\nI've not used SSLServerExample from this library. For server-side sockets, I've used JEE7 libraries. I've been using this (Java-WebSocket) library only for connection from Android app to my JEE7 web application server.\nFor testing ws/wss websockets, I'm using chrome's extension called 'Simple WebSocket Client 0.1.3' (you might be already using it & also available for FireFox too). . Hello @marci4,\nI built the jar from source code with maven. The jar looks ok. I attempted to use it in android app for WSS connection with (Self-signed)client-certificate, and it was working Ok.\nCheers!\n. Hello @marci4,\nActually I built jar from the source cloned from github (and built jar using mvn clean install from CLI) not from maven central. I think you got misled by my last comment. Sorry for that.\nGreetings,. Hello @marci4, \nHere I'm posting my dummy activity code that uses the java_websocket library to make WSS connection with client certificate authentication. Though the source is very rough, but the code is functional, at least it fulfills the required functionality for demo. I have tested the functionality on android API level 10 to 25, and it works OK.\nSo, here we go.\nThis is the layout code:\n```xml\n\n\n\n\n\n\n\n\n```\nAnd this is the Activity code:\n```java\npackage com.sristi.websockettester;\nimport java.io.InputStream;\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.security.KeyStore;\nimport java.util.List;\nimport org.apache.http.conn.ssl.SSLSocketFactory;\nimport org.java_websocket.client.WebSocketClient;\nimport org.java_websocket.drafts.Draft_17;\nimport org.java_websocket.handshake.ServerHandshake;\nimport android.annotation.SuppressLint;\nimport android.app.Activity;\nimport android.app.ActivityManager;\nimport android.content.ComponentName;\nimport android.os.Bundle;\nimport android.text.method.ScrollingMovementMethod;\nimport android.util.Log;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.Button;\nimport android.widget.TextView;\n/*\n * @author sristi\n * \n * This is dummy activity to implement java_websocket library [ref. https://github.com/TooTallNate/Java-WebSocket.git]\n * in android platforms. \n * \n * Secure websocket connection with client certificate has been implemented in this activity.\n * Functionality of this activity has been tested from android platforms 2.3.3 [API level 10] to 7.1.1[API level 25]\n * and works OK in all API levels. \n * NOTE: R.raw.ca is my application's truststore in BKS format [I've placed the file in raw folder]\n * R.raw.keystore is my application's client certificate in P12 format [I've placed the file in raw folder]\n * webServiceUri is my server's websocket end point URL \n /\npublic class SecureWebsocketActivity extends Activity {\nprivate static final String tag = \"WEBSOCKET_ACTIVITY\";\nprivate static WebSocketClient webSocketClient;\n\nprivate String webServiceUri = \"wss://107.233.47.33:8443/mywebservice/services/\";\n\nTextView websocketResponse;\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    final Button btnOpenSecureWebSocket = (Button)findViewById(R.id.btnTestWss);\n    websocketResponse = (TextView)findViewById(R.id.websocketResponse);\n    websocketResponse.setMovementMethod(new ScrollingMovementMethod());\n\n    btnOpenSecureWebSocket.setOnClickListener(new OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            connectWebSocket();\n        }\n    });\n\n}\n\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.main, menu);\n    return true;\n}\n\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    int id = item.getItemId();\n    if (id == R.id.action_settings) {\n        return true;\n    }\n    return super.onOptionsItemSelected(item);\n}\n\n@SuppressLint(\"TrulyRandom\")\nprivate void connectWebSocket() {\n    try {\n        URI uri = new URI(webServiceUri);\n        webSocketClient = new WebSocketClient(uri, new Draft_17()) {\n            @Override\n            public void onOpen(ServerHandshake serverHandshake) {\n                Log.i(tag, \"SOCKET OPENED\");\n            }\n\n            @SuppressLint(\"NewApi\")\n            @Override\n            public void onMessage(final String message) {\n                Log.i(tag, \"Message from server is:\" + message);\n                runOnUiThread(new Runnable() {\n\n                    @Override\n                    public void run() {\n                        updateUi(message);\n\n                    }\n                });\n\n            }\n            @Override\n            public void onClose(int i, final String s, boolean b) {\n                if (webSocketClient == null) {\n                    connectWebSocket();\n                }\n                logEvent(\"Websocket\", \"Closed \" + s);\n            }\n\n            @Override\n            public void onError(Exception e) {\n                logEvent(\"Websocket\", \"Error \" + e.getMessage());\n            }\n        };\n\n        //Connect the secure websoket now\n        if(null!=webSocketClient && !webSocketClient.isOpen())\n        {   \n            try {\n                if (webServiceUri.startsWith(\"wss\")){\n                    logEvent(\"SELF-Signed Conn\",\n                            \"Trying wss conn with Self-Signed Certificate...\");\n\n                    webSocketClient.setSocket(getSslSocketFactory().createSocket());\n\n                    webSocketClient.connect();\n                }\n            } catch (Exception e2) {\n                logEvent(\"WebSocket Unreachable\", e2.getMessage());\n            }\n        }\n    } catch (URISyntaxException e) {\n        logEvent(\"WebSocket got some exception:\", e.getMessage());\n        return;\n    }\n}\n\nprivate void logEvent(String title, String eventMessage) {\n    Log.i(title, eventMessage);\n}\n\n/**\n * @param myPackage\n * @return\n */\npublic boolean isApplicationGuiActive(String myPackage) {\n    ActivityManager manager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);\n    List<ActivityManager.RunningTaskInfo> runningTaskInfo = manager\n            .getRunningTasks(1);\n    ComponentName componentInfo = runningTaskInfo.get(0).topActivity;\n    return componentInfo.getPackageName().equals(myPackage);\n}\n\nprivate SSLSocketFactory getSslSocketFactory() {\n    try {\n        // Get an instance of the Bouncy Castle KeyStore format\n        KeyStore truststore = KeyStore.getInstance(\"BKS\");\n        KeyStore keystore = KeyStore.getInstance(\"PKCS12\");\n        String keystorePass = \"MY_CLIENT_CERTIFICATE_PASS\";\n        String truststorePass = \"MY_CLIENT_TRUSTSTORE_PASS\";\n        // Get the raw resource, which contains the keystore with\n        // your trusted certificates (root and any intermediate certs)\n        InputStream truststoreBksStream = getResources().openRawResource(R.raw.ca);\n        InputStream keystoreStream = getResources().openRawResource(R.raw.keystore);\n        try {\n            // Initialize the keystore with the provided trusted certificates\n            truststore.load(truststoreBksStream, truststorePass.toCharArray());\n            keystore.load(keystoreStream, keystorePass.toCharArray());\n        } finally {\n            truststoreBksStream.close();\n            keystoreStream.close();\n        }\n        SSLSocketFactory sf = new SSLSocketFactory(keystore, keystorePass, truststore);\n        sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\n        return sf;\n    } catch (Exception e) {\n        throw new AssertionError(e);\n    }\n}\nprivate void updateUi(String currentMessage)\n{\n    String oldMessage = websocketResponse.getText().toString();\n    websocketResponse.setText(oldMessage+\"\\n\"+currentMessage);\n}\n\n}\n```\nAnd this one is Manifest file:\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<uses-sdk\n    android:minSdkVersion=\"10\"\n    android:targetSdkVersion=\"19\" />\n\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n\n<application\n    android:allowBackup=\"true\"\n    android:icon=\"@drawable/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:theme=\"@style/AppTheme\" >\n    <activity\n        android:name=\".SecureWebsocketActivity\"\n        android:configChanges=\"orientation|screenSize|keyboardHidden\"\n        android:label=\"@string/app_name\" >\n        <intent-filter>\n            <action android:name=\"android.intent.action.MAIN\" />\n\n            <category android:name=\"android.intent.category.LAUNCHER\" />\n        </intent-filter>\n    </activity>\n\n</application>\n\n\n```\ncheers!. OMG! the automatic formats here resulted awful to my codes! . ",
    "YudizVinay": "@marci4 this question is duplicate of this question??? wow, nice reason to close this issue (clap)\nI have same issue in lollipop, any one have solution?\n. ",
    "zhoulifu": "getResourceDescriptor()will return the request URI according to its JavaDoc, it knows nothing about the protocol, so does classDraft. I think there should be a filed inClientHandshaketo hold the scheme of the handshake request.\n@marci4 WDYT. Sounds great, I was going to ask whether this issue should be fixed or not since Draft75/76 was marked deprecated in wiki =D. @marci4 Sorry i just double click the Enter by mistake :( . Yes we are using java-websocket-1.3.3.\nI'm afraid I can't provide the apk :D, furthermore, it doesn't hannped 100% in our test env :(\nBut, i'll try may best to produce this issue manually. Yes, WebSocketImpl.DEBUG is enabled, and I added some statements in source code\nSystem.out.println(\"D/WebSocketChannel: Impl ready state \" + readystate);\n System.out.println(\"D/WebSocketChannel: \" + Hexdump.format(socketBuffer.array(), socketBuffer.position(), socketBuffer.remaining()));\nhere was what I got \n04-27 15:40:52.940 I/System.out( 1548): D/WebSocketChannel: Impl ready state CLOSING\n04-27 15:40:52.940 I/System.out( 1548): D/WebSocketChannel: 000000    48 54 54 50 2f 31 2e 31 20 31 30 31 20 53 77 69 74 63  HTTP/1.1 101 Switc\n04-27 15:40:52.940 D/WebSocketChannel( 1548): onError:org.java_websocket.exceptions.InvalidFrameException: bad rsv 4\nIt seems that my conjecture was confirmed.\nOur client runs as an android system service, it invoke the async method connect() and close(), I think it's the reason of this issue, because the stupid client would invoke close() after connect() was invoked immediately and over and over again in some cases :(\nI'm still trying to reproduce this issue, wait for my good news ;D\n. It seems those blocking methods are helpful, it works fine so far.\nThanks for your advice, and have a nice trip! :). Hello @marci4 , please checkout this, it could produce this problem on my computer.\nENV:\nIntel(R) Core(TM) i5-3210M CPU @ 2.50GHz\nUbuntu 14.04.5 LTS\nLinux 4.4.0-75-generic\nJava 1.8.0_101 HotSpot(TM) 64-Bit (build 25.101-b13)\nThanks :). Hi @marci4, I think it would be helpful, PTAL. After thinking it carefully, you are right.\nIt still could happen even if check the ready state, readyState could changed from NOT_YET_CONNECTED to CLOSED or CLOSING after the state's check. \nThe effect of variable readyState is limited. \nMaybe we should find another way to fix it, how about blocking the close() method until handshake \n was completed?\n. If so, I think this would be better\nif( readystate != READYSTATE.NOT_YET_CONNECTED ) {\n  if( readystate == READYSTATE.OPEN ) {\n    decodeFrames( socketBuffer );\n  }\n} else {\n    // something else\n}\n WDYT?. Hey guys, I've test this issue using websocket.org with a netty websocket server, it works fine with firefox as the same as chrome. I believe this problem has nothing to do with the self-signed certificate.\nSince it's sometimes failed to connect to server due to timeout, is it possible that this problem was caused by some resources leak?. @Irahe Glad to hear you've solved your problem.\nBut it will have performance effect I think because apache needs to hold extra socket for every ws connection. Just mentioning :). @Irahe PTAL. OMG, It's a mistaken identity, i mean to @marci4, HAHA\nSorry for disturbing you @Irahe XD. Hello @marci4 \nIn my opinion, it's not enough to detecting the disconnection just sending ping. \nFor example, one client was shut down suddenly, without sending closeframe or closing the connection,  the server could still send message to this disconnected connection without any errors due to the tcp retransmission. Drop all outgoing packages from client side using iptables can simulate this scenario:\niptables -A OUTPUT -p tcp --sport {CLIENT_PORT} -j DROP\nSo it's necessary to check whether the corresponding pong was received within a certain amount of time. But this would bring more pressure to server when there are plenty of clients.. Hey @marci4, i've tested it and it works :+1: \n30s is okay i think since pong arrived within hundreds of milliseconds in general.\n. ",
    "incapable": "Fixed it myself, pull request: https://github.com/TooTallNate/Java-WebSocket/pull/297\n. I can try but it has been more then half a year since i made the change, we've been developing it ever since.\n. ",
    "LAX1DUDE": "same here :/. Sorry, should have mentioned I figured my mistake out myself. ",
    "din": "I can confirm the issue. Is there anything that can fix the issue?\n. ",
    "Dflz": "I solved this problem without using ws, and for my project this question is removed. but it is very desirable to find a solution. It may be necessary to address to developers chrome?\n. ",
    "ladislavjacho": "wsServer.run();\ndoesn't work \nwsServer.start();\nused instead!\n. ",
    "petertorelli": "This can also be observed in the example client by calling c.send() immediately after c.connect(); calling .isOpen right after .connect() always returns false when testing from the console, but a slight delay solves the problem.\n. ",
    "gesellix": "I can confirm the issue. I added some CountDownLatches in my code to avoid timing issues.\n. ",
    "rathnaum": "I am facing the same issue. I guess connectLatch is set to 1 in the Client and probably increasing it to 2 or 3 might solve the issue.\n. ",
    "b95505017": "Agree. Please upgrade to maven!!\n. ",
    "jakehilton": "I'm also seeing an SSL issue.. I'm seeing this in my logs which eludes to some internal isssue:\nUsing SSLEngineImpl.\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_GCM_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\nAllow unsafe renegotiation: false\nAllow legacy hello messages: true\nIs initial handshake: true\nIs secure renegotiation: false\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for TLSv1\nIgnoring unsupported cipher suite: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 for TLSv1.1\nIgnoring unsupported cipher suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 for TLSv1.1\nWebsocketSelector32, fatal error: 80: problem unwrapping net record\njavax.net.ssl.SSLException: Unrecognized SSL message, plaintext connection?\nWebsocketSelector32, SEND TLSv1.2 ALERT:  fatal, description = internal_error\nWebsocketSelector32, WRITE: TLSv1.2 Alert, length = 2\nI tried java 7 and 8 but have the same problem.\nAny help would be great on this!\nThanks\n. Sadly I ended up using an haproxy front for the SSL exchange because I\ncouldn't get the built-in SSL stuff working properly.\nI hope to be able to revisit this again soon but for now I must press\nonward!\nThanks for the help though!\nOn Fri, Mar 6, 2015 at 1:41 PM, mhmeadows63 notifications@github.com\nwrote:\n\nI have a Wireshark trace of a Java Desktop app attempting an HTTPS connect\nto a NodeJS SocketIO server, and it shows the websocket-upgrade request is\ntransmitted as plain-text, while XHR polling requests are encrypted.\nSadly, I don't think sharing the trace would be much help without my TLS\nkey for decode.\nHowever, the following ladder diagrams attempts to detail my observation:\n1) encrypted XHR poll exchange to port 8080\n[----------Client----------]    [----------Server:8080-----------]\n                         SYN ->\n                             <- SYN,ACK\n                         ACK ->\n        TLSv1.2(ClientHello) ->\n                             <- ACK\n                             <- TLSv1.2(ServerHello)\n                             <- TLSv1.2(Certificate)\n                         ACK ->\n  TLSv1.2(ClientKeyExchange) ->\n   TLSv1.2(ChangeCipherSpec) ->\n           TLSv1.2(Finished) ->\n                             <- ACK\n                             <- TLSv1.2(ChangeCipherSpec,Finished)\n   TLS(GET /socket.io/..etc) ->\n                             <- HTTP(200 OK)\nTLSv1.2(Alert,Warning:Close) ->\n                     FIN,ACK ->\n                             <- FIN,ACK\n                         ACK ->\n2) plain-text websocket-upgrade to port 8080\n[----------Client----------]    [----------Server:8080-----------]\n                         SYN ->\n                             <- SYN,ACK\n                         ACK ->\n PLAIN(GET /socket.io/..etc) ->\n                             <- ACK\n                     RST,ACK ->\nAnybody else this this might be relevant?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/305#issuecomment-77631711\n.\n. \n",
    "mhmeadows63": "Oops, placed this on the wrong issue.  Moved to:\n  https://github.com/nkzawa/socket.io-client.java/issues/88\n. ",
    "bdbergeron": "Trying to use the latest version of Pusher's Android/Java library (0.3.3) fails due to the lack of a 1.3.1 release of Java-WebSocket. Had to go back to 0.3.1 in order to get it working. Can we get a new release?\n. ",
    "brcolow": "From what I can tell 1.3.1 has been released to the clojars.org repo, but not Maven Central. This is obviously an issue.\n. ",
    "SKART1": "I think you should increase you version number in build.gradle  - because now it is version = '1.2.1-SNAPSHOT', and maven suddenly have version 1.3.0 - which was released 2 years ago! \nI was confused when maven version which has bigger release number was actually so out-of-dated!\nSo please at least make version in build.gradle actual, and if possible update maven version too.\nP.S. Great job! Were good and useful library :+1: \n. ",
    "h0jeZvgoxFepBQ2C": "Is the 1.3.1 version still not released on gradle? looks like it.. :/\n. ",
    "raydelto": "Hi @ThreaT these are are the steps for reproducing the issue:\n1- Run the ChatServer Example provided within the Java-WebSoket build distribution.\n2- Connect via telnet to the port where Java-WebSocket is listening (8887 by default).\n3- Type random sequences of characters and line breaks (\\n by hitting enter). \n4- The server will stop answering requests(because it crashed due to a null pointer exception)\nThis is the stack trace:\njava.lang.NullPointerException\n        at org.java_websocket.SocketChannelIOHelper.batch(SocketChannelIOHelper.\njava:64)\n        at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:35\n2)\n        at java.lang.Thread.run(Thread.java:745)\n. @ThreaT \n1. I agree.\n2A. Someone might open a browser and open the URL http://localhost:8887  , which would make the error to occur.\n2B. Someone with bad intentions might intentionally exploit this issue in order to make the server stop answering requests, it will make the WebSocket server unavailable.\n. ",
    "Fi5t": "Similar problem!\n. ",
    "btiernay": "I hit the same issue. I guess this was never released to central?\n. ",
    "jcdufourd": "SSLChatServer and SSLChatClient run in the same directory with the same certificate work on a PC running Windows 7. I suspect it is a Mac-specific problem.\nI am using JDK 8 on both sides.\n. Thank you, but no, it is not an issue any more.\nBest regards\nJC\nOn 26/03/2017 22:26, marci4 wrote:\n\nHello @jcdufourd https://github.com/jcdufourd,\nis this still an issue for you?\nI don't have a Mac so it is gonna be hard for me to reproduce it \nwithout your help!\nGreetings\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub \nhttps://github.com/TooTallNate/Java-WebSocket/issues/309#issuecomment-289312337, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AByPbEbqfUukQGQNaSYsB14lm30L_jrCks5rpsoHgaJpZM4D8dtN.\n\n\n-- \nJean-Claude DUFOURD\nDirecteur d\u2019\u00e9tudes / Multimedia Group / Telecom ParisTech\n46 rue Barrault, 75013 Paris, France\nT\u00e9l. : +33 1 45 81 77 33\n. ",
    "sandrum": "The maven version I am asking about is here: http://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket/1.3.0, the jar size of which is quite different and DOES contain the SSLClientFactory.java\n. ",
    "intari": "Looks like SSLClientFactory got removed in https://github.com/TooTallNate/Java-WebSocket/commit/115477eb2b95a9204fe8997cb549aa553057aa28 \n. ",
    "jwilljacob": "can i use the constructor below to set header Sec-WebSocket-Protocol ?\njava\npublic WebSocketClient( URI serverUri , Draft protocolDraft , Map<String,String> httpHeaders , int connectTimeout )\n. ",
    "benwtrent": "Knowing exactly how to do this would be helpful as I am running into an issue right now where I need to set the subprotocol and it is failing to do so. Any pointers on how to do this?\n. ",
    "farhanlatheef": "@marci4 there is nothing in that link.. ",
    "Librichard": "@farhanlatheef: I found it:\nhttps://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/SecWebSocketProtocolClientExample.java. Hi @marci4 .\nI did, and also I used your sample example to add my custom protocol to draft instance.\nNow I got the followings:\n- client sent:\nwrite(183): {GET /xfer HTTP/1.1\nConnection: Upgrade\nHost: xxx\nSec-WebSocket-Key: xxx\nSec-WebSocket-Protocol: xfer\nSec-WebSocket-Version: 13\nUpgrade: websocket\n}\n-- Note that this time the Host doesn't have :443 like before\n- and received:\n     Server: /xxx:443\n     Code: 1002\n     Reason: Invalid status code received: 400 Status line: HTTP/1.1 400 Bad Request\n     Remote: false. @marci4 ,\nxfer is a protocol on top of WebSocket for a traffic control system. It is implemented by Siemens in the servers I am dealing with. It works fine when I use the Jetty implementation of WebSockets, but it fails when I use yours. Since we are using your jar library in our systems already (java-websockets-v1.3.3), I rather to keep using it, otherwise we have to add the Jetty library to our system.. I am not working on that project anymore. Actually I don't work there anymore.\nI think you didn't find anything about XFER because it is proprietary. I set the DEBUG = TRUE, that's how I got all the client request details.\nIt seems jetty does not have the idea of drafts. Its API is different from yours. For some reason, the XFER server is able to handshake with our client using their library (following their API contract), but not yours.. ",
    "jfranki": "It would be great even a little javadoc...\n. ",
    "rob-baily": "All, while this project was great for getting started you may want  to consider the Jetty WebSocket client at http://www.eclipse.org/jetty/documentation/current/jetty-websocket-client-api.html and drop this project.  I've been using the Jetty client and it appears to be very full featured and does not require the entire Jetty infrastructure to run.\n. ",
    "jackklink": "Bump. Having the same exact problem. :( It seems to occur when a socket connection is closed. Or shortly after.\n. ",
    "duke-robby": "Strange issue, only happens when an SSL client is disconnecting.\n. ",
    "PerwinCZ": "Fixed by #375 aswell\n. ",
    "GreenRover": "@ThreaT i used now tab insted of 4 spaces.  But i didnt fort anaything, i completly rewrote this methode.\n. ",
    "rachidbm": "Good to hear that contributions are appreciated. Although I do see the importance that test coverage, I didn't wrote a test because this class is mainly doing some settings. There's hardly any logic included which makes it worth testing (in my opinion). \nI just added an example in code ;)\n. I don't think it's useful to add unit tests that directly cover the methods. But I do think it's helpful to have a test that starts a server with the TLSWebSocketFactory, and let a client trying to connect with different protocols. When a protocol is not configured in the TLSWebSocketFactory, connection should be refused be the server.\nWhat do you think?\n. ",
    "xia199427": "it isn't a feather change of the protocol, it is  a functional patch for large message sending. when send large message(>2k), it will divide the message into many small parts, and send them.it's a feather that the websocket protocol supports, but the project didn't realize before.\n. I'm sorry for that bad naming style. Draft_18 doesn't mean a new protocol, it is a little improvement for Draft_17.\n. ",
    "hezhubo": "Is this bug fixed? If it has been fixed, can you send me a temporary version by email\uff1f. Hello @marci4 \nI use the version 1.3.1, but I remove the code\n\nassert ( socket.isClosed() );\n\nIt seem that it's OK now. I need to watch for some time.. Hello @marci4 \nI will be updating my app in the next version. Because this problem is not necessarily appear, so I can only let the user to test.\nBut assert whether it is necessary? . Hello @marci4 \nNow, I use the version 1.3.3. And I also delete the assert code\n\nassert ( socket.isClosed() );\n\nI do not think it is necessary. Because it is runnable and no crash.. ",
    "garysheppardjr": "Many thanks for this useful library and sample code. I used Java-WebSocket to successfully connect to an ArcGIS Server stream service, which is a secure WebSocket. I used the techniques in SSLClientExample.java. Since my service uses a certificate signed by my company's CA instead of a well-known CA, I also had to trust untrusted certificates, which is a bad idea in production code but enabled me to make sure the Java-WebSocket library would work with this type of service.\n. Thanks! Great repo by the way!\n. Done: https://github.com/TooTallNate/Java-WebSocket/issues/325#issuecomment-126029382\n. ",
    "amishshah": "It should do, I went to https://192.168.0.8:25517/ (where my WSS server runs), accepted the certificate and opened websockets to it in chrome.\n. I've no idea, although I updated the version of this library I'm using and now it doesn't error but it still crashes :\\\n. I'm not sure, although it was fairly old. I think 1.3.0?\nI will check for CPU and memory leaks tomorrow ;) \nThanks for your help!\nedit: I don't think that there would be any leaks (but I'll still check), if there were the application would be totally unresponsive and get sluggish, but that's not the case.\n. I don't believe there were any CPU or memory leaks, however I think there must be something wrong during the handshake as the onOpen event is not even called, and is also fixed by disconnecting the client and then reconnecting.\n. I have found a development in this issue, and am very sure that is an isolated case within Chrome (not tested on other browsers). I just did a spam connect using Java and it was fine, there were no errors. This leads me to believe that you were correct @BrushfireDigitalServices, it seems that chrome is messing up something with SSL.\n. I'm not that confident with the handshake, and I'll post more details later\n. Hi again @BrushfireDigitalServices \nThe most I've been able to salvage from the errors were the stacktraces above\n. Thank you @BrushfireDigitalServices. I've been unable to access my computer for a few days and won't be able to for a week or so, so I've been unable to provide more information.\n. It requires a minimum of android 4.2 and should be built with the latest SDK @BrushfireDigitalServices\n. I can't seem to edit from my mobile but all the SDK references in my project are here\n. OK! Thanks for your help with this issue @BrushfireDigitalServices \nI will definitely try recreating the WebSocket Server on its own and seeing if it still produces the same result.\n. Hi! I've since given up on the project I was working on so I'm no longer able to check, sorry. ",
    "max-mc2labs": "(btw: I want to patch the websockets's implementation simply to store the [serverside] session_id of each connection in the respective WebSocket object to avoid using later an hashmap to address the associated single [server] sessions objects -- for example on each onMessage? -- I instantiate per user session: needed for my software model, which implements an array of threads for the user sessions and to run true-realtime services)\nvery simple. very useful:\nconnections++;\nsessions[connections]=conn;\nconn.setIndex(connections);\nthen we can address the user sessions directly:\n@Override\npublic void onMessage(WebSocket conn, String msg) {\n   sessions[conn.getIndex()].pushClientRequest(msg);\n}\nno?\n. > our Autobahn tests haven't been updated in a while, so the problem may be there.\nAutobahnServerTest.java is terribly simple (onOpen, onMessage, onClose -not more), can't be the source of the issue.\nconn.send( message );\ncalling the send method of conn, the WebSocket object: this throws the exception.\npublic void onMessage( WebSocket conn, String message ) {\n            System.out.println(\"RECEIVED: \"+message);\n            conn.send( message ); <--------- (?!)\n    }\n. > The WebSocket class was made an interface in 2013. How did you compile it from sources \n\nand get a version prior to that?\n\nthis is the stranger part of the issue for me: here the WebSocket object IS an interface, NOT a class.\n(source files comes from here, they are not out-of-date: I got websocket sources cloning this TooTallNate git project about 1 week ago: here WebSocket object IS an interface).\n(this is why I completly do not understand the exception thrown.\njust in the case I would except the contrary: found interface but class expected.\nfound class but interface expected is less coherent at my eyes. but it throws.)\nbtw\nif I use again the original .jar file included in the git folder under ./dist, the one existing before recompiling with ANT (I did a safe copy of that original .jar before doing the first ANT), everything works.\nif I change back to the ant-recompiled .jar, the AutobahnServerTest.java fails as seen above.\nnb\n- of course I did not make any change yet to any source file\n- of course I already did an rm -rf and then git clone again. no changes.\n- the compilation with ant is clean: I can see only warnings in the javadoc session\nplease note that I use only vi, java and javac. no maven.\nas said: jdk1.7 on a remote CentOS6.5 server. not else.\n. 1) from inside the 2 jar files:\njavap on the original WebSocket.class file:\npublic abstract class org.java_websocket.WebSocket\njavap on the recompiled WebSocket.class file:\npublic interface org.java_websocket.WebSocket\n(mm)\n2) I run AutobahnServerTest simply with 'java AutobahnServerTest' \nsource file is simple and mostly unchanged:\nhttp://www.mc2labs.net/others/issues/jws/AutobahnServerTest.java.txt\nand the source file of the corrisponding client side:\nhttp://www.mc2labs.net/others/issues/jws/test2.html.txt\n. do you mean where are the jar files I use?\nin /opt/jdk1.7.0_65/jre/lib/ext/ \nin this case I have both jar files there:\njava_websocket.jar.org (the original, which works)\njava_websocket.jar.new (the ant compiled)\n(files which with those extensions are obviously skipped by java)\nthen I cp to java_websocket.jar the jar I need to test and I recompile (elsewhere)\nno need of javac -cp /path/to/file.jar (if I understand well your question)\nedit:\nboth jar file in the mentioned path are symbolic links, but the cp command of above makes a physical copy of the files.. so in any case it can't be an issue.\n. Hi @marci4,\nsorry but I gave up on the issue in Aug 2015, so I haven't tested the latest version of the lib.\nGood luck.\nmax\n. roger.. ",
    "Nackloose": "Experiencing this identical issue as of three days ago with no avail to my problem. Has anyone found a solution or any new pointers? Although in my case the error is occurring in my own project, that has used this API for a few years now with no problem.\n. ",
    "lol768": ":+1:\n. ",
    "AlexRomanch": "Well, i found the reason of this trouble.\nThe reason is Kaspersky Anti-virus - when i turn off him, server received all message from client, without any problem.\nHow can i solve this? Make a special settings for Kaspersky on each client PC - i dont think this is a good idea.\n. ",
    "clickstan": "This should be added to the main project, it works, fixed the issue for me. . I ended up figuring out that you can build the repository by callling 'ant' after cding to the root folder of the package. Also, ended up tweaking this lib for my own uses :). I'm actually interested in learning GIT more, so i'll do it!. ",
    "lwiechec": "Right now I was just running it from the file (URL would be file:///my/wstest/index.html).\nI was also testing with running a simple HTTP server that is serving the index.html (was using python -m SimpleHTTPServer <port> in the dir the file is saved).\n. It's Firefox 39.0.3 on Linux.\nI am logging what arrives on the websocket Java server that I am running:\nGET /socket.io/?EIO=3&transport=polling&t=1439553973950-7 HTTP/1.1\nHost: localhost:8887\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nOrigin: null\nCookie: _ga=GA1.1.1835690867.1423483351\nConnection: keep-alive\n. curl -I localhost:6666\ngives\nHTTP/1.0 200 OK\nServer: SimpleHTTP/0.6 Python/2.7.6\nDate: Fri, 14 Aug 2015 14:36:24 GMT\nContent-type: text/html\nContent-Length: 3680\nLast-Modified: Fri, 14 Aug 2015 14:35:11 GMT\n. But - isn't it like this: the JS code, read from http://localhost:6666/ is run in the browser and ordered to create websocket to address http://localhost:8887 (that's where my websocket service is running). The browser issues GET only not to receive the Access-Control-Allow-Origin: * which is interpreted as 'this service is not public and will not accept us as a origin. Browser then refuses to run it.\n. I am using Socket.IO to create _clients_ and I can't callio.set()` :/\nBrowser should not contact the websocket server? but - it is running the JS code that tell it just that?...\n. Hi,\nno I haven't. But I have switched to using web socket implementations from Tomcat, as the application that I planned to write had to be deployed as WAR...\n---- On Ter, 26 Abr 2016 23:50:08 +0200 Paul M. Christian <notifications@github.com>wrote ---- \n@lwiechec did you ever solve the problem you were having?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n. ",
    "GregDThomas": "Origin: null is sent from the client to indicate that the requesting page is hosted on the file system. \n. ",
    "meta-meta": "bump\n. I'm running a Java-WebSocket server on Android. I managed to add Access-Control-Allow-Origin: * to the handshake response by overriding Draft.postProcessHandshakeResponseAsServer and passing my Draft implementation to the WebSocketServer constructor. \nStill no luck though. I get this when sending a message from server to client: \nXMLHttpRequest cannot load http://[websocket server on android]/. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://[web page with websocket client]:8080' is therefore not allowed access.\n. @lwiechec did you ever solve the problem you were having?\n. ",
    "Animaleante": "Hnm, well, I've been using the jar that can be found on the dist folder, and just now saw that it is 3 years old.\nWill compile a recent build here, thanks.\n. Hey there @marci4 \nWill try that now, had not seen that a new version was released. Gonna test it for the rest of the week, and update you here if anything comes up. Thanks!. The error happened yesterday again, and I'm using the latest version now. Any ideas on how to better debug this?. All right @marci4, I will turn it on and will update here if it happens again and post the log. Thank you. This is 250 lines of log right before the moment that the error happened. It seems to happen always after there's a huge amount of clientes connecting and disconnecting rapidly (After around 9000 connections since the server started).\n\nopen using draft: Draft_6455 extension: DefaultExtension\nINFO server comment - CHTWSServer::onOpen >> instanceName: null, userId: -1, remoteSocketAddress: /190.123.207.20:20783, userAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0\nprocess(21): {\ufffd\ufffd\ufffd\ufffd\ufffdB\ufffd\ufffd\ufffd^\ufffd\ufffd\ufffd^\ufffd\ufffd\ufffd_\ufffd\ufffd}\nafterDecoding(15): {heartbeatResult}\nprocess(21): {\ufffd\ufffd_5L\ufffd7P-\ufffd+W)\ufffd+g)\ufffdY8}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nINFO server comment - CHTWSServer::onOpen >> Application with instanceName: null doesn't exist.\nprocess(21): {\ufffd\ufffd\ufffd\ufffd\u0018\ufffd\u07b4y\ufffd\u00b3}\ufffd\u0083}\ufffd\u00fdl}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffd\u050eM\ufffd\ufffd\ufffd,\u03e0\ufffd(\u0720\ufffd(\u03a1\ufffd9}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffd2+\ufffd\ufffdZN\ufffd\ufffdFI\ufffd\ufffdFy\ufffd\ufffdGG\ufffd}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(604): {GET /1352d0a0378e409aae43d0c9b94d2364/-1 HTTP/1.1\nHost: streaming8.campremium.com\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:59.0) Gecko/20100101 Firefox/59.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate, br\nSec-WebSocket-Version: 13\nOrigin: http://aovivo.camerahot.com\nSec-WebSocket-Extensions: permessage-deflate\nSec-WebSocket-Key: Cosj0P+B7aT/Th2poIJQxw==\nDNT: 1\nConnection: keep-alive, Upgrade\nPragma: no-cache\nCache-Control: no-cache\nUpgrade: websocket\n}\nwrite(224): {HTTP/1.1 101 Web Socket Protocol Handshake\nConnection: keep-alive, Upgrade\nDate: Wed, 04 Apr 2018 19:09:45 GMT\nSec-WebSocket-Accept: vJhiizk8lybx3pl+v7PaWBbgldE=\nServer: TooTallNate Java-WebSocket\nUpgrade: websocket\n}\nopen using draft: Draft_6455 extension: DefaultExtension\nINFO server comment - CHTWSServer::onOpen >> instanceName: null, userId: -1, remoteSocketAddress: /179.113.26.65:50620, userAgent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:59.0) Gecko/20100101 Firefox/59.0\nINFO server comment - CHTWSServer::onOpen >> Application with instanceName: null doesn't exist.\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nINFO stream play hlsStream -\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nprocess(599): {GET /1352d0a0378e409aae43d0c9b94d2364/-1 HTTP/1.1\nHost: streaming8.campremium.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate, br\nSec-WebSocket-Version: 13\nOrigin: http://aovivo.camerahot.com\nSec-WebSocket-Extensions: permessage-deflate\nSec-WebSocket-Key: MVu7Wh3EEvT7eNFbIiddhA==\nDNT: 1\nConnection: keep-alive, Upgrade\nPragma: no-cache\nCache-Control: no-cache\nUpgrade: websocket\n}\nwrite(224): {HTTP/1.1 101 Web Socket Protocol Handshake\nConnection: keep-alive, Upgrade\nDate: Wed, 04 Apr 2018 19:09:45 GMT\nSec-WebSocket-Accept: OCkIj1dCZ7JBcwR+iysK92WCjb0=\nServer: TooTallNate Java-WebSocket\nUpgrade: websocket\n}\nopen using draft: Draft_6455 extension: DefaultExtension\nINFO server comment - CHTWSServer::onOpen >> instanceName: null, userId: -1, remoteSocketAddress: /179.208.247.211:51165, userAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0\nINFO server comment - CHTWSServer::onOpen >> Application with instanceName: null doesn't exist.\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nprocess(21): {\ufffd\ufffd\ufffd\ufffd'\ufffd\ufffdcU\ufffd\ufffdgF\ufffd\ufffdgT\ufffd\ufffdv}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nINFO cupertino connect 1820616074 -\nINFO stream create hlsStream -\nINFO server comment - \u001b[32m 1360163 - CameraHotController::onHTTPCupertinoStreamingSessionCreate >> URI: camerahot_chat/1360163/hlsStream/playlist.m3u8?userid=-493, ipAddressClient: 177.7.126.139, queryStr: userid=-493, userAgent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36\nINFO server comment - \u001b[32m 1360163 - CameraHotController::onHTTPCupertinoStreamingSessionCreate >> HTTP Session accepted for userId: -493\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:33], payload:{\"action\":\"mobileVideoRequested\"}}\nafterEnconding(33): {{\"action\":\"mobileVideoRequested\"}}\nwrite(35): {\ufffd!{\"action\":\"mobileVideoRequested\"}}\nprocess(21): {\ufffd\ufffdw\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffd\ufffd#qK\ufffdF\u00109\ufffdA\u0014\ufffdq\u00148\ufffdO\u0005}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffd\u001fR\ufffd\u000fw7\ufffd}k0\ufffdnk\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffdK\u0011\ufffd\ufffd#t\ufffd\ufffd?s\ufffd\ufffd?C\ufffd\ufffd>}\ufffd}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffdB\ufffd\u0007H\ufffdf:6\ufffdb)6\ufffdb;7\ufffds}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nprocess(600): {GET /1352d0a0378e409aae43d0c9b94d2364/-1 HTTP/1.1\nHost: streaming8.campremium.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate, br\nSec-WebSocket-Version: 13\nOrigin: http://aovivo.camerahot.com\nSec-WebSocket-Extensions: permessage-deflate\nSec-WebSocket-Key: hxL2i7xVLxY+jkSHDeQEAg==\nDNT: 1\nConnection: keep-alive, Upgrade\nPragma: no-cache\nCache-Control: no-cache\nUpgrade: websocket\n}\nwrite(224): {HTTP/1.1 101 Web Socket Protocol Handshake\nConnection: keep-alive, Upgrade\nDate: Wed, 04 Apr 2018 19:09:45 GMT\nSec-WebSocket-Accept: az2gGD3JJRzJ3TvGZsMSOC5p5mI=\nServer: TooTallNate Java-WebSocket\nUpgrade: websocket\n}\nopen using draft: Draft_6455 extension: DefaultExtension\n2018-04-04  16:09:45 - INFO server comment - CHTWSServer::onOpen >> instanceName: null, userId: -1, remoteSocketAddress: /179.190.196.245:52932, userAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0\nprocess(21): {\ufffd\ufffd\u001d\ufffd\ufffd]u\ufffd\ufffd/i\ufffd\ufffd> Application with instanceName: null doesn't exist.\nprocess(591): {GET /1352d0a0378e409aae43d0c9b94d2364/-1 HTTP/1.1\nHost: streaming8.campremium.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate, br\nSec-WebSocket-Version: 13\nOrigin: http://aovivo.camerahot.com\nSec-WebSocket-Extensions: permessage-deflate\nSec-WebSocket-Key: 7ssQgyASnUiTo1cXdfHHYw==\nConnection: keep-alive, Upgrade\nPragma: no-cache\nCache-Control: no-cache\nUpgrade: websocket\n}\nwrite(224): {HTTP/1.1 101 Web Socket Protocol Handshake\nConnection: keep-alive, Upgrade\nDate: Wed, 04 Apr 2018 19:09:45 GMT\nSec-WebSocket-Accept: wOFv3c14P62he2JqoiROdVZwlXk=\nServer: TooTallNate Java-WebSocket\nUpgrade: websocket\n}\nopen using draft: Draft_6455 extension: DefaultExtension\n2018-04-04  16:09:45 - INFO server comment - CHTWSServer::onOpen >> instanceName: null, userId: -1, remoteSocketAddress: /177.138.242.63:57889, userAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:59.0) Gecko/20100101 Firefox/59.0\nINFO server comment - CHTWSServer::onOpen >> Application with instanceName: null doesn't exist.\nprocess(21): {\ufffd\ufffd\ufffd\ufffd)Y\ufffd\ufffdH+\ufffd\ufffdL8\ufffd\ufffdL\ufffd\ufffd]}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffd\u0013\ufffd\ufffd\ufffd{\ufffd\ufffd\ufffdg\ufffd\ufffd\ufffdg\ufffd\ufffd\ufffdf\ufffd\ufffd}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nINFO server comment - CHTWSServer$4$1::run >> Failed heartbeat call for Userid: -422\nprocess(21): {\ufffd\ufffdV\ufffd~\ufffd>\ufffd\u001f\ufffd\"\ufffd\u001b\ufffd\"\ufffd\u001b\ufffd#\ufffd\n}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nprocess(21): {\ufffd\ufffd\ufffd\u0019)\ufffd\ufffd|H\ufffd\ufffd{L\ufffd\ufffdKL\ufffd\ufffdu]}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffd_nvS7\u000b\u0017!+\f\u00132+<\u0013 }\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nprocess(21): {\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffdG\ufffd\ufffd@\ufffd\ufffd\ufffdp\ufffd\ufffdN\ufffd}\nafterDecoding(15): {heartbeatResult}\nmatched frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:15], payload:heartbeatResult}\nsend frame: Framedata{ optcode:TEXT, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:22], payload:{\"action\":\"heartbeat\"}}\nafterEnconding(22): {{\"action\":\"heartbeat\"}}\nwrite(24): {\ufffd\u0016{\"action\":\"heartbeat\"}}\nprocess(579): {GET /1352d0a0378e409aae43d0c9b94d2364/-1 HTTP/1.1\nHost: streaming8.campremium.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; rv:59.0) Gecko/20100101 Firefox/59.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate, br\nSec-WebSocket-Version: 13\nOrigin: http://aovivo.camerahot.com\nSec-WebSocket-Extensions: permessage-deflate\nSec-WebSocket-Key: hxDoO641GuRVtH9frmDl9w==\nConnection: keep-alive, Upgrade\nPragma: no-cache\nCache-Control: no-cache\nUpgrade: websocket\n}\nwrite(224): {HTTP/1.1 101 Web Socket Protocol Handshake\nConnection: keep-alive, Upgrade\nDate: Wed, 04 Apr 2018 19:09:45 GMT\nSec-WebSocket-Accept: vvgXZ4x7GnfWbLSG01fEddAchiA=\nServer: TooTallNate Java-WebSocket\nUpgrade: websocket\n}\nopen using draft: Draft_6455 extension: DefaultExtension\n2018-04-04  16:09:45 - INFO server comment - CHTWSServer::onOpen >> instanceName: null, userId: -1, remoteSocketAddress: /189.13.145.19:49863, userAgent: Mozilla/5.0 (Windows NT 6.1; rv:59.0) Gecko/20100101 Firefox/59.0\nINFO server comment - CHTWSServer::onOpen >> Application with instanceName: null doesn't exist.\nINFO server comment - CHTWSServer(CameraHotController)::onError >> java.lang.IllegalArgumentException: null\nINFO server comment - CHTWSServer::onError >> java.lang.IllegalArgumentException: null at java.nio.Buffer.position(Buffer.java:244). I noticed this only happens after several clients have been disconnected when trying to enter a non-existent room.\n\nInside onOpen, I check to see if the room they are trying to connect to is open, if not, I call \nsocket.closeConnection(CloseFrame.REFUSE, \"Some message\");\nCould this be causing the problem? Should I close the socket connection after the onOpen method has finished properly?. Hey @marci4, thanks for the answer, and sorry for the delay.\nThank you for the tip on using the PingFrame, I have implemented it. And changed from the closeConnection method to the close method, and will test it this afternoon, and will update this issue with the results, thank you!. Just to update you @marci4 \nThe modifications worked, and the server no longer crashes. Thank you very much!. ",
    "hegjon": "\nAgreed, each file should carry its own license notice.\n\nThanks, glad to hear :)\n\nLooks like you're packaging the 1.3.0 snapshot.\n\nWe are using https://github.com/TooTallNate/Java-WebSocket/archive/Java-WebSocket-1.3.0.tar.gz today. I assume that is the snapshot you are referring to.\n\nAlthough 1.3.0 is still heavily used, it is much less stable than the current master branch. We're working towards a new official release.\n\nThanks for letting me know, do you have an idea when the release is planned? I can update to the master branch before the release.\n. Thanks for the feedback, I will work on updating to a snapshot of the master branch, since several of the developers recommend that over the 0.3 version.\n. ",
    "chasing95": "Thank you for your prompt reply.\nI use java_websocket 1.3.0, so it may be different from the current call stack. My call stack is:\njava\njava.io.IOException: connection closed unexpectedly by peer\nConnection closed because ofjava.io.IOException: connection closed unexpectedly by peer\n    at org.java_websocket.SSLSocketChannel2.processHandshake(SSLSocketChannel2.java:118)\n    at org.java_websocket.SSLSocketChannel2.<init>(SSLSocketChannel2.java:75)\n    at org.java_websocket.server.DefaultSSLWebSocketServerFactory.wrapChannel(DefaultSSLWebSocketServerFactory.java:39)\n    at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:317)  -- now is line 312\n    at java.lang.Thread.run(Thread.java:745)\n. Sorry, my operation error.\n. I download the latest master code, and run SSLServerExample and SSLClientExample, everything seems to be very good, but when I use netcat(nc -vw 2 -z 127.0.0.1 8887) to check whthere the server is ok, the server side called the exception as follows:\njava. lang. NullPointerException\nthe at org. Java_websocket. SocketChannelIOHelper. Read (SocketChannelIOHelper. Java: 14)\nthe at org. Java_websocket. Server. WebSocketServer. Run (WebSocketServer. Java: 322)\nthe at Java. Lang. Thread. The run (Thread. Java: 745)\nThe client output:\nDisconnected\nThanks\n. Thank you for your reply. \nWebSocket client and server can normally interaction, but if the server become unavailable when someone just check whethere the server port can connect, scanning is not available on the server, this may seems a bit fragile.\n. Yes, after the port scan, the server is not receiving the new request.\n. ",
    "FelixTony": "My god you guys are pussies...\nthe bugs aren't in TooTallNate's code,  their in yours or those of your\nclients' monoliths.\nif you wanna expand on TTN's work then start a new, OPEN SOURCE\nproject....  who cares what your boss thinks.\nOn Sat, Aug 22, 2015 at 8:04 PM, Henry Dwyer notifications@github.com\nwrote:\n\nThe stacktraces look different, but the symptoms are the same as #326\nhttps://github.com/TooTallNate/Java-WebSocket/issues/326.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/337#issuecomment-133736303\n.\n. \n",
    "JBearded": "I also want to know\n. ",
    "brobits": "I am running into a similar issue.  I can operate normally for a few hours, then I start getting error code 1000 disconnects with no reason.  unable to reconnect until I relaunch the process\n. I think with some discretion that doesn't sound like a bad idea.  I'm not certain, but I recall having some framing issues with a TLS endpoint using this library recently. Might have been an issue with the SSL handshake but I didn't dive in.. I think it's safe to say with nearly 6 mo of maintainer absence, a fork is acceptable, but I'd be interested in hearing back from @TooTallNate . Do you receive a framing exception after the initial connect?  Does your socket open if you trust all certificates?  Not recommending to deploy a trust all solution to production, but it may help identifying the issue.. ",
    "JulienChene": "Actually this is not an issue at all. According to Web Socket Protocol (RFC 6465):\n\nIf an endpoint receives a Close frame and did not previously send a\n   Close frame, _the endpoint MUST send a Close frame in response_.  (When\n   sending a Close frame in response, the endpoint typically echos the\n   status code it received.)  It SHOULD do so as soon as practical.  An\n   endpoint MAY delay sending a Close frame until its current message is\n   sent (for instance, if the majority of a fragmented message is\n   already sent, an endpoint MAY send the remaining fragments before\n   sending a Close frame).  However, there is no guarantee that the\n   endpoint that has already sent a Close frame will continue to process\n   data.\n\nSo what close() does, is set readyState to CLOSING (hence you receiving the onClosing() callback) and send a CLOSE message.\nAgain, you're supposed to receive a response from the endpoint.\nSo your Web Socket is just waiting for the endpoint to send a CLOSE frame.\nWhich is done here.\nThe only case where this is not working, is if you lose internet connection, in which case I would call closeConnection() just like you mentioned.\nI was stuck on the same issue and ended up digging a bit more. Hope that helps you !\n. ",
    "latinosamuel": "Hello,\nI have the same problem.\nI would like to close the wbesocketclient connection before connecting and I am not able to resolve the problem.\nIs there any temporary solution to solve the previous problem?\nThank You. Hello @marci4 ,\nOk.\nIs there any pull request forecast?\nThank You.. Issue related to Issue  # 347\nWaiting for a pull request.. Hello @PhilipRoman ,\nThanks for the solution. I solved the problem.\nSolution:\nFirst:  I updated the JavaWebSocket library in order to detect the closing bug of the Websocket Client (# 827) for version 1.4.0:\n\"org.java-websocket:Java-WebSocket:1.4.0\"\nFinally:  I used the Close Frame in order to use the predefined constants.\nWebSocket Client side lock code (Code 1011: Internal Error):\nmClient.close (CloseFrame.UNEXPECTED_CONDITION);\nThank you.\nI'll close the Issue.. ",
    "bluechips23": "@ophibox Although I have randomly received this error few times before (once in few weeks), now I am unable to reproduce this. Do you know if anything in particular triggers this exception or how to reproduce it?\n. You are getting the error because you have a while(true) loop. You don't need that at all. When you start your thread with server.start() - it stays open until you issue a shutdown (server.stop()) or something bad happens. When you put that under a while loop, it just goes through an infinite loop of creating new websocket connections - which is BAD! So, just remove your while loop.\n. ",
    "MODLR": "Since changing to WSS we have started having this issue intermittently. There seems to be no correlation with user load and the occurrence of this issue.\n. For me It occurs when my service is port scanned. The port scan client connects and disconnects before the handshake occurs, the raised IOException (SSLSocketChannel2.java:130) somehow stops the server from listening. \nI've got around it (definitely not the best way)  by introducing try/catch for the IOException in the key.isAcceptable() clause of the WebSocketServer.java:319.\n```\ntry {\n w.channel = wsf.wrapChannel(channel, w.key);\n i.remove();\n allocateBuffers(w);\ncontinue;\n} catch (IOException ex) {\nif (key != null)\nkey.cancel();\n}\n```\nToo soon to tell if its worked long term but we are back to 400 users online and I can port scan the server without it crashing.\n. ",
    "friendOfOurs": "That should do the job :) Thank you!\n. ",
    "samczsun": "Unfortunately, I have a library which is reaching a stable build, but is dependant on the snapshot version of this library. Maven Central won't accept a release which depends on something which is not in central so that's why I'm hoping this snapshot can be promoted to a release.\n. Found a solution using the release version\n. ",
    "pmanent": "I solved the problen changing the keystore file for a good one.\nNow is working perfectly with a secure connection.\n. ",
    "DeepSnowNeeL": "Allright ! Thanks for the info :). ",
    "avenwu": "Thanks for your reply.\nPersonally I only use assertions in unit test, in fact I do not know much about assertions.\nAfter google some resources, it seems that your point is right, assertion may have no impact default.\nBut I have got this error and it's definitely caused by assertion.\nI use the project on android devices with no special configurations;\nHere is my the exception stacktrace:\njava.lang.AssertionError\njava.net.SocketTimeoutException: failed to connect to comet.domain.com/119.254.211.135 (port 80) after 90000ms: isConnected failed: ETIMEDOUT (Connection timed out)\nlibcore.io.IoBridge.connect(IoBridge.java:102)\njava.nio.SocketChannelImpl.connect(SocketChannelImpl.java:177)\norg.java_websocket.a.d.j(WebSocketClient.java:210)\norg.java_websocket.a.d.run(WebSocketClient.java:188)\njava.lang.Thread.run(Thread.java:841)\ncause by:\njava.net.SocketTimeoutException:failed to connect to comet.domain.com/119.254.211.135 (port 80) after 90000ms: isConnected failed: ETIMEDOUT (Connection timed out)\nlibcore.io.IoBridge.isConnected(IoBridge.java:247)\nlibcore.io.IoBridge.connectErrno(IoBridge.java:178)\nlibcore.io.IoBridge.connect(IoBridge.java:112)\nlibcore.io.IoBridge.connect(IoBridge.java:100)\njava.nio.SocketChannelImpl.connect(SocketChannelImpl.java:177)\norg.java_websocket.a.d.j(WebSocketClient.java:210)\norg.java_websocket.a.d.run(WebSocketClient.java:188)\njava.lang.Thread.run(Thread.java:841)\ncause by:\nlibcore.io.ErrnoException:isConnected failed: ETIMEDOUT (Connection timed out)\nlibcore.io.IoBridge.isConnected(IoBridge.java:234)\nlibcore.io.IoBridge.connectErrno(IoBridge.java:178)\nlibcore.io.IoBridge.connect(IoBridge.java:112)\nlibcore.io.IoBridge.connect(IoBridge.java:100)\njava.nio.SocketChannelImpl.connect(SocketChannelImpl.java:177)\norg.java_websocket.a.d.j(WebSocketClient.java:210)\norg.java_websocket.a.d.run(WebSocketClient.java:188)\njava.lang.Thread.run(Thread.java:841)\n. The obfuscation does not make it difficult to found out the WebSocketClient failure with source line number out there.\nThis project  seems no longer being maintained?\nThe last active contributions is years ago.\nAnyway, thanks for your kindly replys\n. ",
    "vinod1054": "same problem in my case also...getting crashes because of assertion statement in 1.3.0 veresion\n. channel.connect( new InetSocketAddress( host, port ) );\n            conn.channel = wrappedchannel = createProxyChannel( wsfactory.wrapChannel( channel, null, host, port ) );\ntimeout = 0; // since connect is over\n        sendHandshake();\n        readthread = new Thread( new WebsocketWriteThread() );\n        readthread.start();\n    } catch ( ClosedByInterruptException e ) {\n        onWebsocketError( null, e );\n// Here we should close the connection to get rid of assertion error.\n            return;\n        } catch ( /IOException | SecurityException | UnresolvedAddressException/Exception e ) {//\n            onWebsocketError( conn, e );\n            conn.closeConnection( CloseFrame.NEVER_CONNECTED, e.getMessage() );\n            return;\n        }\n. Fatal Exception: java.lang.AssertionError\njava.net.SocketTimeoutException: failed to connect to xyz.com after 90000ms: isConnected failed: ETIMEDOUT (Connection timed out)\nHow can i reproduce this error.\nBy the way how come Assertion description is having SocketTimeoutException( Error is showing Exception description)\n. thanks @bendem ..I got this now.\nHow can I reproduce this situation.\nI tried with keeping 180 seconds timeout on my server, in this case it is just saying \"Connection timeout\".\nBut I am not getting \"java.net.SocketTimeoutException: failed to connect to xyz.com after 90000ms: isConnected failed: ETIMEDOUT\"\n. ok....Thanks @bendem \n. same problem with me\n. ",
    "PerBothner": "I no longer use Java-WebSocket (for Domterm I use libwebsockets instead).\nHowever, I created a quick pull request #449 .\nI tested that it still compiles, but I haven't otherwise tested it.\nGlad to see Java-WebSocket is seeing some love again, even though I no longer use it myself.. For DomTerm, I've switched to using libwebsockets.  For my Java applications, I'm using AJAX as a fallback.. See issue #362 .. No, because if the requested port number is zero, I also need to know the actual port number.\nNote I am no longer using Java-WebSocket (I'm using libwebsockets instead), so this is no longer an issue for me or my projects.. I may have misunderstood the question: The problem is solved if I can reliably get the actual port number after start-up.\n(However, I'm still sticking with libwebsockets.  Glad to see this project is alive again, though.). ",
    "SteveMobile": "I'm check the android source code ,ClientHandshakeImpl : \nprivate SSLSessionImpl findSessionToResume()  , \nClientSessionContext context = parameters.getClientSessionContext();\nSSLSessionImpl session= (SSLSessionImpl) context.getSession(host, port);\ncontext.getSession(host, port) //return opensslsessionimpl , how to change the session to sslsessionimpl\n. ",
    "blainebell": "I was able to \"work around\" this on Chrome by chunking the messages into separate send() calls, and combining them on the server.  However, I needed to set 50ms timeouts between send() calls to get the server to receive the messages (i.e., calling setTimeout() for each send).  Not sure if this is a problem on the client or server side (I would assume server).  In any case, if anyone knows about the above problem, whether its just a different format/protocol that Chrome uses, I would be grateful.  Thanks! Blaine\n. ",
    "jnblanchet": "I'm having the same problem. Message fragmenting is suppose to be handled internally by Java-WebSocket. Does anyone have a solution to this?\n. ",
    "kemorrisnf": "Got bitten by this too. At the very least an exception should be thrown indicating that too much data was sent.\n. ",
    "ritzyramen": "Wondering if there's been any progress on this. Looks to me like it's probably chrome and not this server websocket implementation. I'm manually implementing websockets in Node, parsing the frames manually, and at 131071 the correct bytes are received, ie [1, 255, 255], and on 131072 or greater, it only reads [2, 0, 0]. And this does hold for much greater values. Oddly I'm still receiving the data, it looks like chrome just isn't constructing the opening frame correctly. This doesn't seem to be the only issue with chrome's websocket frame construction, as each frame for a message should still have the header bytes. For more context, after about 32kb it splits a message into multiple frames, but sends the rest of the message without mask information, so I need to preserve the mask externally. \nThis may be correct but the implementation says there should be a FIN bit, implying that when chunking occurs there should still be header bytes. I'm going to work around this for now by calculating the length minus 4 and storing it in the first 4 bytes of each message. This is severely less than ideal, requiring client side hoops but the performance server side is worth it. Hoping I'm just missing something obvious.\n. ",
    "ainslec": "Having same issue.. Having the exact same issue. The internal buffer size appears to be 16 kilobytes, which I assumed would be chunked so that there was no limit except for JVM memory capacity. I modified this to a much higher figure (4 megabytes) whilst keeping messages sent less than 2 megabytes, and messages were still being dropped.\nThe protocol code is complex therefore I don't understand exactly what is happening, but for sure, there are problems with larger messages.\nHorsetopus: Were you able to solve your issue?. Thanks for replying to this. I'll try to put one together in the next few days.. ",
    "andiwand": "overwrite the public void onMessage(ByteBuffer bytes) method?\n. ",
    "kishordesai": "Override onMessage() method like this. It's working for me.\n @Override\n    public void onMessage(WebSocket conn, ByteBuffer buff)\n. Hi Hitesh,\nI was also facing same issue. I tried following code instead of \"chatclient.setSocket()\". It's working fine.\n    chatclient.setWebSocketFactory(new DefaultSSLWebSocketClientFactory(sslContext));\nRefer:\nhttp://www.juliankrone.com/connect-and-transfer-data-with-secure-websockets-in-android/\n. ",
    "amirreza-sobhdel": "\nOverride onMessage() method like this. It's working for me.\n@override\npublic void onMessage(WebSocket conn, ByteBuffer buff)\n\nnah it didnt work , still have to implenment onMessage(String string). yes , it worked , thanks ;)\n\u202b\u202aNoah Andrews\u202c\u200f \u202anotifications@github.com\u202c\u200f \u062f\u0631 \u062a\u0627\u0631\u06cc\u062e \u062f\u0648\u0634\u0646\u0628\u0647 \u06f1\u06f1 \u0641\u0648\u0631\u06cc\u0647\u0654\n\u06f2\u06f0\u06f1\u06f9 \u0633\u0627\u0639\u062a \u06f1\u06f9:\u06f1\u06f6 \u0646\u0648\u0634\u062a:\u202c\n\nnah it didnt work , still have to implenment onMessage(String string)\nJust implement it as an empty function if you want to ignore all String\nmessages.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/369#issuecomment-462376287,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AhSxJVCxbijP0kCg-DJ403hCgbiZ0CGkks5vMZBGgaJpZM4HTJaE\n.\n. \n",
    "gang018": "can't download your release from jitpack, Android Studio shows an error \"can't find\"\n. @rockwotj Thanks for quick response) \n. ",
    "rockwotj": "Sorry, I deleted by fork of this repo, as I found another library for my use case. @gang018 what you can do instead is find the commit of Java-WebSocket that you want, and then grab that from JitPack.\nCheckout out this link for the latest commit at the time of writing. This should work for you.\nhttps://jitpack.io/#TooTallNate/Java-WebSocket/58d1778695\nThen if a new feature comes along that you'd like, you can just update the commit SHA and you'll have a new version! :beers: \n. @bluebluby I only need a client. So I am using: https://github.com/TakahikoKawasaki/nv-websocket-client\nIt is working really well for me in an android app in production, over wss.\n. ",
    "Drtikso": "@rockwotj Which library did you find? I picked this one because it was the first one i found that supports ssl. Have you found a better one?\n. ",
    "jackwilliambell": "Update...\nI restarted my IDE (IDEA) and I loaded a completely new copy of the web page in a new tab. I did not restart FIrefox. I ran my test again and this time it appeared to work. \nIs it possible that earlier crashes or incomplete shutdowns left Websocket threads running or left the Websocket server code in an invalid state somehow? If yes, that was my problem; and I would like to know if there is an easy way to reset/shut down properly to avoid this in a production application. I had thought that when I killed the app it also killed all the running threads, but maybe I was wrong.\nThanks;\nJack\n. Update. I am continuing to get this error. If I reboot my machine and start over from scratch the server will send one message to the client. After that I get the error on every try, even if I kill the server process and start it again. Every time I reload the client code in Firefox it says it is connected to the websocket server, but I still get the error. I will now try the same on some different browsers.\n. . . \nEdited to add: Tried with Chrome. I am NOT getting the same error in my initial efforts. I will update if I see the same behavior on Chrome and/or if I get a chance to try on Safari.\n. ",
    "Wulf": "You can find the JAR here. I suggest you use Gradle or even Maven to manage your dependencies for you. It could get tricky juggling all the JARs.\nAll the best~\n. ",
    "evan505": "I'm having a similar issue in another library that uses Java-WebSocket. do you solve it \n. ",
    "kirkmicz": "Yaeah same here\n. ",
    "h3adache": "I got this same error and it seems to be happening cause my cert was expired (but using version 1.3.0). Maybe the same for you guys?. Hi @marci4 it doesn't throw the BufferOverflow anymore but it doesn't give the correct error. It simply disconnects.\nThe error message is actually swallowed by an exception block that only calls engine.eot()\nThe linked source above is different because integrated wss support was added. It's L 232/233 in the 1.3.4 code.\nSomething is wrong when looking it up by the version tag. It shows it on L257 but when looking at the code in the 1.3.4 jar it's L233. \nThe actual exception message is correct it seems:\nPKIX path validation failed: java.security.cert.CertPathValidatorException: timestamp check failed. ",
    "happycodinggirl": "when i invoke client.close method ,the onClose will be invoked after about 1min ,why so late?\n. no,i found it missing.the question may be solved.Thank you for the library!. ",
    "HellerCommaA": "@hiteshpurohit I'm willing to bet you pulled the project file from Maven / equivalent. Checkout 58d17786958ec2b629b75de1eed00915b3e4f7c4 from this repo. I believe the Maven build is broken.\n. ",
    "oemers": "it is the ws path probleam!\n. ",
    "picolino0": "apparently #277 is supposed to fix this problem. I implemented it, but nothing changed.\n. That didn't solve it. Now it keeps saying the port is open, but I'm unable to connect once I've pinged once. I also found out this only happens for the secure websocket. The normal websocket doesn't have any problems with this at all\n. Yes! this did the trick. Thank you so much it finally works now.\n. ",
    "felippeduran": "The pull request #567 fixes the exact issue mentioned by the item 1.\nRegarding the item 2, I had the same issue when trying to handle a status code 503 during the HTTP handshake (mentioned on the pull request).\nWhat seems to be a good solution is to make the Draft_6455 propagate these status codes to the websocket class and then expose it as a connection failure instead of CloseFrame.PROTOCOL_ERROR (or CloseFrame.NEVER_CONNECTED), even though the RFC6455 doesn't mention how to handle these errors (at least I couldn't find it).\nThanks!. Hi, @marci4,\nThanks for the reply!\nI found it by inspecting the code. Before that, I was trying to debug a case where the server would return me 503 during the HTTP handshake and I'd get the error CloseFrame.NEVER_CONNECTED, which didn't make much sense for me. Then I realized that the error code was actually CloseFrame.PROTOCOL_ERROR (as the Draft_6455 can't read the success headers to Upgrade the connection) and it was being changed somewhere during the closing state, which led me to this pull request.\nSo the steps to reproduce would be just to make your server return a status code like 503 during handshake and then try to connect with it.\nCheers!. ",
    "twoi": "Thanks @marci4 for looking into this. Yes, so Continuation is one of the specified opcodes (opcode = 0). However the RFC you referenced does not define a scenario like the one System.ServiceModel.WebSockets.WebSocket has implemented.\nI wonder why MS did that - was it perhaps part of an older version of a spec? Because you'd think when implementing a standard protocol, you'd do so for interoperability.\nBut according to the spec,\n\nUpon receipt of a Ping frame, an endpoint MUST send a Pong frame in response\nThere is no such thing as a standalone, even empty (Payload Len: 0) CONTINUATION frame with the FIN bit clear.\n\nAs to the second point, although other uses are no specifically excluded, the purpose of CONTINUATION frames is to allow fragmentation of frames. The defined opcodes and FIN bit values for fragmented frames:\n```\n   o  An unfragmented message consists of a single frame with the FIN\n      bit set (Section 5.2) and an opcode other than 0.\no  A fragmented message consists of a single frame with the FIN bit\n      clear and an opcode other than 0, followed by zero or more frames\n      with the FIN bit clear and the opcode set to 0, and terminated by\n      a single frame with the FIN bit set and an opcode of 0.\n``\nSo whatSystem.ServiceModel.WebSockets.WebSocket` is doing in effect is sending a (empty payload) middle-fragment of a fragmented message in response to a PING from the client.\nThis contravenes the spec, but enabling this by default is not doing any harm, other than NOT throwing an exception in this case that other websocket implementations do not produce.\nHowever, after reading the spec, understanding what CONTINUATION is all about, and looking again at the Java-WebSocket code, adding a new OpCode.CONTINUATION (in addition to the existing Opcode.CONTINUOUS with the same byte value) and  an onWebsocketContinuation() method to the WebSocketClient etc does not look like the right thing to do.\nAllowing/Ignoring the MS style CONTINUATION frame should be integrated with the existing handling of the CONTINUOUS opcode. If and when requests/pressure from clients comes again, I'd be willing to look into this again, as they have to cope with our MS server implementation. Then I'd come up with something that integrates better into the existing code base.\nI closed the PR, but am going to leave this issue open, waiting for another one - perhaps a future me - to address it.. @marci4 I'm not involved in that project any more, and so unfortunately I currently have no easy way to test the latest version.\nSo I won't cry if you decide to close this issue :). ",
    "busyfree": "sorry ,forgot to closed. ",
    "IllusionaryOne": "You cannot actually.  Socket.IO uses a different handshake protocol among other things.  I was unable to use this library to connect to a Socket.IO server in Java and had to use another one (I still use this library for other means though, connecting to websocket servers that follow the RFC for websockets).\n. @johnsh I did not develop for Android but I used https://github.com/socketio/socket.io-client-java  It has dependencies, be sure to follow that through in their documentation.\nCheers!\n. Did you extend your class to support TLS and link it to a certificate?. ",
    "johnsh": "Hi, @IllusionaryOne thanks for you soon reply. \nWhich library might I use for connect Android ( Client ) and node js (Server) ?\nThanks\n. Hi, @IllusionaryOne \nI've followed this tutorial https://www.youtube.com/watch?v=WFfd4QbmWpI\nNow I have the connection between android and node js\n. ",
    "qktang": "I also met. Do not operate for a long time, the client can not receive the message, the server is closed, but the client does not call onClose. ",
    "hattie0312": "I also met. The version is 1.3.4. I called close(), but never received onClose(int code, String reason, boolean remote). \nOh my god. My project will be blocked in this situation.. Hello @marci4 ,\nThanks for your reply! But it seems not useful for me.\nWe want to use your lib in our android project, but aren't sure if it works fine in android app.\nGreetings\nHattie\n. Thanks.. Hello @marci4 ,\nThanks and I implemented the connectionLostTimerTask on my own.\nOur server-side developer asked us to send a message every 5 seconds to keep the connection. If it is not received, they will close the connection from the server-side. But I think to send message such frequently is a waste of flow. \nAny Suggestions please\uff1f\nGreetings\nHattie. Hi marci4,\nSorry for my poor English.\nSuppose I sent a message then closed the connection immediately. If the message is received by the server?. thanks for your reply. ",
    "lmsmartins": "In the meanwhile, I've compiled the library and manually imported into my project. Please update the maven repository so I can use gradle. Thank you.\n. It's in milliseconds. I've tested it.\n. ",
    "piyurabadiya": "I have try to your way .But not working  and I got exception like RuntimeException: unknown scheme  https.I don't retract the issue.what is requirement for connecting https URL??\n. I also try this way but in my case not work and thrown exception MalformedURLException\n. ",
    "37du": "@piyurabadiya     In my case, scheme use ws://, or use wss://\n. I pass URI to WebsocketClient,   URI can accept ws scheme\n. ",
    "glatteis": "Closed issue: Had to use Draft_17. Please document this better.\n. ",
    "kenny-house": "I've used Java-WebSocket with Primus before, and it can definitely work well. I believe we used the WebSockets transformer.\nKeep in mind, no matter what transformer you use, Primus has a heartbeat protocol you'll want to implement for your client: https://github.com/primus/primus#heartbeats-and-latency \n. ",
    "atonamy": "Here you can get missing files https://github.com/Kicksend/Initiative/tree/master/WebSocketServer/src/main/java/org/java_websocket/client. @rajathvsm thanks\nI solved this problem to recompile all library from latest source and missing files I took from here https://github.com/Kicksend/Initiative/tree/master/WebSocketServer/src/main/java/org/java_websocket\nAnd works like a charm without any issue now.. @marci4\nI don't remember which exactly files. I can send you my custom build if you want. Anyway this library seems to be outdated already. I recently discovered featured and solid nv-websocket-client  and very happy to use it in Android.. @marci4 \nJust sent you email.. ",
    "rajathvsm": "I face this issue too, especially when the server disconnects for some reason. I am passing the auth info as URI args, and I disconnect on the server side if they are not right. On the client side, I'm using self-signed certs, with this code to trust all hosts:\nTrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {\n                public java.security.cert.X509Certificate[] getAcceptedIssuers() {\n                    return new java.security.cert.X509Certificate[]{};\n                }\n                public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n                }\n                public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n                }\n            }};\nRest of the code looks pretty similar to the one posted before this.\nWith the right credentials, I do not get the constant GC. But with incorrect credentials, the objects GC'ed are allocated as shown below:\n\nI can add more details if needed.. I believe you have this confused with Socket.io. Could you check this?. ",
    "whitebian": "@IllusionaryOne Yes, I also tried to build a TrustManager which doesn't validate any certificate chains. But it still cannot be connected.  Below is my code:\n`    try {\n            int port = 8887;\n            mJavaWebSocketServer = new JavaWebSocketServer(this, port);\n            WebSocketImpl.DEBUG = true;\n            // Install the all-trusting trust manager\n            SSLContext sc = SSLContext.getInstance(\"TLS\");\n            sc.init(null, trustAllCerts, new java.security.SecureRandom());\n            mJavaWebSocketServer.setWebSocketFactory(new DefaultSSLWebSocketServerFactory(sc));\n        mJavaWebSocketServer.start();\n        Log.d(LOG_TAG, \"startServer()\");\n    } catch (Exception e) {\n        Log.e(LOG_TAG, \"Exception when started server: \" + e);\n    }`.\n",
    "erobic": "We are having this exact same issue!. ",
    "yasserf": "Same, any idea on why this happens?. ",
    "tobiasrohloff": "Unfortunately, I couldn't reproduce the issue on any of my debug devices or the emulator yet. I got the error logs from the Google Play Console.. Hi @marci4,\nI already updated our app to version 1.3.3 and I will monitor if the issue will appear again. Hope for the best :). ",
    "arpitjoshi08": "i am using socket 0.9 connection and for that i am using https://github.com/Gottox/socket.io-java-client with javewebsocket 1.3.3 jar  and getting issue is some devices ;\nFatal Exception: java.lang.NullPointerExceptionssl == null\u00a0Raw Text\n| com.android.org.conscrypt.NativeCrypto.SSL_write_BIO\u00a0(NativeCrypto.java)\n\u00a0 | javax.net.ssl.SSLEngine.wrap\u00a0(SSLEngine.java:1093)\n\u00a0 | org.java_websocket.SSLSocketChannel2.wrap\u00a0(SSLSocketChannel2.java:141)\n\u00a0 | org.java_websocket.SSLSocketChannel2.write\u00a0(SSLSocketChannel2.java:195)\n\u00a0 | org.java_websocket.SocketChannelIOHelper.writeBlocking\u00a0(SocketChannelIOHelper.java:76)\n\u00a0 | org.java_websocket.client.WebSocketClient$WebsocketWriteThread.run\u00a0(WebSocketClient.java:440)\ni am not getting the reason why is it happening , can anyone help for that to resolved this?\nand using 1.3.4 getting other issue like many time disconnect connection of node.\ngetting this issue;\n07-29 02:43:50.077 7325-8261/com.sockettollnate W/System.err:     at com.sockettollnate.socket.WebsocketTransport.onMessage(WebsocketTransport.java:188)\n07-29 02:43:50.077 7325-8261/com.sockettollnate W/System.err:     at org.java_websocket.client.WebSocketClient.onWebsocketMessage(WebSocketClient.java:339)\n07-29 02:43:50.077 7325-8261/com.sockettollnate W/System.err:     at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:448)\n07-29 02:43:50.077 7325-8261/com.sockettollnate W/System.err:     at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:201)\n07-29 02:43:50.077 7325-8261/com.sockettollnate W/System.err:     at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:276)\n07-29 02:43:50.077 7325-8261/com.sockettollnate W/System.err:     at java.lang.Thread.run(Thread.java:841)\n. hii @marci4 , i am getting issue in samsung SM-G570F (6.0) device (with 1.3.3). and if using 1.3.4 jar i am getting issue https://github.com/Gottox/socket.io-java-client/issues/4 so thats why \ni am using 1.3.3.\nand is there any sample available to connect socket using this library if avail for android , please provide me link for that. ",
    "hollowbit": "Awesome! I will try it when I get the chance. Does this only work with Let's Encrypt? I use it but I'm just curious for people using other CAs.. Unfortunately, it looks like it is.. ",
    "Didi95": "it seems that the server spawns too many threads, if you run the server too long. . ",
    "pvtai": "Yes, I'm run the server too long time, but I don't know how to fix it :). ",
    "yoiang": "Is the project still a good websocket library resource? If not are there others that you would recommend? (I am new to websocket work in Java). Java.websocket is only available on Java EE, no?\nOn Wed, Dec 28, 2016 at 1:24 AM Mark Hughes notifications@github.com\nwrote:\n\nI'm curious too. Why aren't we just using javax.websocket? I can't seem\nto find an informative comparison\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/419#issuecomment-269432285,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAFedn1-krM1Uy3V9bRKipCTswRgfWieks5rMgCSgaJpZM4LNPfp\n.\n. \n",
    "markhughes": "I'm curious too. Why aren't we just using javax.websocket? I can't seem to find an informative comparison . I believe you can still use it though. However its complicated, I guess thats why this project was born. \nJust tested this project, and although it appears to not be actively maintained it seems to be working fine. . Perhaps we should find out what the future of this project is first? I just tweeted @TooTallNate to see whats happening . ",
    "kazimuth": "It might be reasonable to make a fork and apply all the open PRs.. ",
    "hellochenwang": "I tried with Chrome, always getting \"WebSocket connection to 'wss://localhost:8887/' failed: WebSocket opening handshake timed out\" error. @sristi I'm using server-authentication. Basically just like accessing https from chrome, in my case i'm trying to access wss from chrome. Did you modify the code to get it work?\nSo you are doing two way authentication(client verifies server's identity and server also verifies client's) with browser as the client? If this works, one way should work too. \nIn the example folder, there's a SSLClientExample.java and SSLServerExample.java. They work in paris, but SSLServerExample doesn't work with browsers.\n. ",
    "martinalig": "@sristi, have you been able to use client certificates with this library?. ",
    "solomon-chen": "To solve the issue, you could add some codes here in WebSocketImp.java:\nelse if( fin ) {\n                        if( current_continuous_frame == null )\n                            ...\n                        if( current_continuous_frame.getOpcode() == Opcode.TEXT ) {\n                            ...\n                            if( !Charsetfunctions.isValidUTF8( current_continuous_frame.getPayloadData(), off ) ) {\n                                throw new InvalidDataException( CloseFrame.NO_UTF8 );\n                            }\n//begin\n                                                try {\n                                wsl.onWebsocketMessage( this, Charsetfunctions.stringUtf8( current_continuous_frame.getPayloadData() ) );\n                            } catch ( RuntimeException e ) {\n                                wsl.onWebsocketError( this, e );\n                            }\n//end. ",
    "TomWangTW": "Hi Marci4,\nBecause this issue is type of infinite loop, so i think it is hard to get stacktrace.\n\nBut when you use some devices which android version between 5.0~5.1 and it always will happen.. Hi marci4.\n    Sorry for late reply, i will test it asap and reply result to you.. Hi Marci4,\nThanks for your help but it still occurs the infinite loop in same place.\n\nIt is 100% happen in Android 5.0.x devices but work normally with other Android version...\nSo strange.. Hi Marci4,\nI will trace this issue when i have time, but the other project(AndroidAsync) looks work normally with Android 5.0.x.\nBy the way, this issue looks like same as issue 293. Hello @marci4 \nI will upload result when i test it. By the way, do you know the root cause?. This library has 8kb limitation on Android platform. What should i do?. ",
    "miopa": "@marci4 Is this fix in the master now? I saw some reverts in the commit log.\n. ",
    "sepehr1014": "Hundreds of our users are currently having this issue. Could you give any clues on how to solve this problem or where exactly it stems from?. We have the same issue when calling reconnect. The tcp connection is never closed and the server quickly runs into port exhaustion.. ",
    "simonchius": "I am getting this issue too, I am using this version (org.java-websocket:Java-WebSocket:1.3.0).\nCan anyone help?\n. So as my understanding, If i update to latest version, this issue will be fixed. Am i right? . @marci4 Thanks for the update, I will check out. . \n@marci4 It seems org.java-websocket:java-websocket:1.3.2  is not resolved. Can you please check that?. Hi @marci4 \nI tried clear cache and restarting Android Studio. Nothing is working. Still not working.. Hi @marci4 \napply plugin:'java' is not compatible with Android.\nYou can check my build script\napply plugin: 'com.android.application'\nandroid {\n    compileSdkVersion 25\n    buildToolsVersion '25.0.0'\ndefaultConfig {\n    applicationId \"com.xxxx.xxxxxxxxxxxxxx\"\n\n    minSdkVersion 19\n    targetSdkVersion 23\n    versionCode 35\n    versionName \"1.1.0\"\n    multiDexEnabled true;\n\n}\nbuildTypes {\n    release {\n        minifyEnabled false\n        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n    }\n\n    debug {\n        minifyEnabled false\n        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n    }\n}\n\npackagingOptions {\n    exclude 'META-INF/DEPENDENCIES'\n    exclude 'META-INF/NOTICE'\n    exclude 'META-INF/LICENSE'\n}\n\n}\ndependencies {\n    compile fileTree(include: ['*.jar'], dir: 'libs')\n    testCompile 'junit:junit:4.12'\n    compile files('libs/fullauth-api-java-client-1.1.1.jar')\n    compile project(':FeedsLibrary')\n    compile 'com.android.support:appcompat-v7:25.3.0'\n    compile 'com.android.support:design:25.3.0'\n    compile 'com.android.support:recyclerview-v7:25.3.0'\n    compile 'org.java-websocket:java-websocket:1.3.2'\n    compile 'com.google.android.gms:play-services-auth:9.0.2'\n    compile 'com.google.code.gson:gson:2.2.4'\n    compile 'com.loopj.android:android-async-http:1.4.9'\n    compile 'com.google.android.gms:play-services-location:9.0.2'\n    compile 'com.google.firebase:firebase-crash:9.0.2'\n    compile 'com.google.firebase:firebase-messaging:9.0.2'\n    compile 'com.squareup.picasso:picasso:2.5.2'\n}\napply plugin: 'com.google.gms.google-services'\n. Hi @marci4,\nIssue with building gradle is fixed,\nBut setWebSocketFactory and DefaultSSLWebSocketClientFactory not found\nmWebSocketClient.setWebSocketFactory( new DefaultSSLWebSocketClientFactory( sslContext ) );\nSince I am using wss, It was throwing SSL exception, So I added SSL Context manually like below\nSSLContext sslContext = null;\n        try {\n            sslContext = SSLContext.getInstance( \"TLS\" );\n            sslContext.init( null, null, null ); // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        } catch (KeyManagementException e) {\n            e.printStackTrace();\n        }\n    mWebSocketClient.setWebSocketFactory( new DefaultSSLWebSocketClientFactory( sslContext ) );\n\nNow setWebSocketFactory and DefaultSSLWebSocketClientFactory not found..\nPls check this.\n. ",
    "Nic2012": "Found a client example in sources.. ",
    "Henryeung": "while(true) is just a testing, my application need to start server when login and  stop server when logout, so will continue loop to start and stop server.\nThe question is why can't release open file after stop server until  quit application.. normal server socket loop to create and then close  not hold open file(number of open file will not be increased). ",
    "ComradeWoland": "No, man, this bug appears while Google Chrome (latest version) connects to my WSS server. \nMy app uses WSS to support WebRTC connection establishing and text messaging inside Video chat roulette, but connection sometimes unstable, and server log is full of bugs.. Hey, people!\nHuge sorries, i was some deep ill. But LOGS has been collected during this time.\nHere two pieces of them. error.log and standard log files\nerror.log.txt\nlog.txt\nStd. Log is much more bigger by size,and cutted at more early point\n. ",
    "micamo2k17": "Hi,\nsame error here. In my case it's always \"bad rsv 3\", seems to appear at random moments, but quite often. Didn't have this problem when using WS instead of WSS.\nThank you for any indication.. Hi @marci4 \nI activated debug mode. The following are two cases of that error (one with debug off, one on). As you can see, the number following \"bad rsv\" actually changes also in my case:\nWithout WebSocketImpl.DEBUG = true;\nE/SERVICE: WebSocket did fail with error: org.java_websocket.exceptions.InvalidFrameException: bad rsv 1\nD/WSServer: onError: org.java_websocket.exceptions.InvalidFrameException: bad rsv 1\nW/SERVICE: WebSocket closed\nWith WebSocketImpl.DEBUG = true;\nE/SERVICE: WebSocket did fail with error: org.java_websocket.exceptions.InvalidFrameException: bad rsv 4\nD/WSServer: onError: org.java_websocket.exceptions.InvalidFrameException: bad rsv 4\nI/System.out: send frame: Framedata{ optcode:CLOSING, fin:true, payloadlength:11, payload:[3, -17, -65, -67, 98, 97, 100, 32, 114, 115, 118, 32, 52]}code: 1002\nI/System.out: write(13): {\ufffd\u000b\ufffdbad rsv 4}\nW/SERVICE: WebSocket closed\nTrying to answer to your questions:\n\nWhich Draft are you using? (I really hope Draft_17 :) )\nHow can I know that? Right now my dependency is 'org.java-websocket:Java-WebSocket:1.3.0'\nDo you ping the websocket server?\nYes, I can ping the device where the web socket server is. I also can telnet the websocket server's port, both before the error, and after.\nDo you send a lot of messages or no messages?\nThere are moments in which no messages are exchanged. In other moments, a lot of messages are exchanged very quickly. The error seems to happen when a lot of messages are exchanged in no-time.\nDo you use any other extension which might interfere with the websocket connection?\nMy scenario involves a webview, on the same app that hosts the web socket, which connects to it. Nothing more.\nAre you using any specific sub-protocol?\nThe problem only happens when using WSS. No problems with non-secure WS.\n\nThanks for your help!. Hi @marci4 \nI couldn't find a readme for a newest version of the lib. Tried 1.3.1 (I saw it from the available branches/tags list) but the dependency could not be resolved.\nHowever, when the connection is opened, the following is logged:\nI/System.out: open using draft: Draft_17\nSo I believe we're using the updated build.\nThanks. Hi @marci4 \nI'm using gradle. How can I select a new version?\nThank you!. Hi @marci4 \nJust tried that, doesn't seem to resolve the dependency either: Error:Failed to resolve: org.java-websocket:java-websocket:1.3.2\nRegards,\nmicamo1k2017. Ok, I'm logged in as micamo2k17.\nThanks.. Hi @marci4 \nversion 1.3.2 seems to solve the issue (no more errors thrown even in high-messages-rate situations)!\nI would now like to get back using the library retrieved via repository, rather than a JAR...\nThanks,\nmicamo2k17. Hi @marci4 \nI figured out where my problem was: I'm using the library inside a custom library. I simply was not referring to the repository in the app that integrates my library, but just in my library's gradle.\nAny clue about the timing of a possible \"promotion\" of version 1.3.2 to the master/official branch?\nThanks!\nMichele. ",
    "GeminiLoal": "Hi @marci4 , thanks for your reply. \nI cloned the project then I run mvn package. In the project I used the resulting .jar marked as Java-WebSocket-1.3.1-SNAPSHOT\nIs this correct? \nI will run some other tests an see if I can fix the issue\nGreetins\n. That would be perfect @marci4, you can send it at my mail gemini.loal at gmail.com\nThanks\nGreetings\nL. Hi @marci4 , your .jar seems a bit more stable compared to the one I used. \nAnyway, on the client side now I see: \nwrite(156): {GET / HTTP/1.1\nConnection: Upgrade\nHost: xxxxx\nSec-WebSocket-Key: xxxxx\nSec-WebSocket-Version: 8\nUpgrade: websocket\n}\nOn the server side I see: \n!isHandShakeComplete\nStill no connection :(\nThanks for the help so far\nGreetings\nL. Got my error... A very stupid one, not related to this specific project. \nBasically I wrote the loading of the .jsk in a wrong way...\nThank for everything, the .jar you sent me work really well!\nGreetings\nL. ",
    "rashaverak": "I have 2 different servers. I connect to them using host names. They use different certificates for different host names. In case of my connection the servers use default certificates and not these that I want, like if the host names I set were ignored and they were just resolved to ip address and that was used for the connection. On one it works by accident because the default certificate is the one that I want. It has something to do with the SNI I believe.. Found solution, maybe useful for someone\n```\nSSLSocket sslSocket = (SSLSocket) sslContext.getSocketFactory().createSocket();\n                SNIHostName serverName = new SNIHostName(\"example.com\");\n                List serverNames = new ArrayList<>(1);\n                serverNames.add(serverName);\n            SSLParameters params = sslSocket.getSSLParameters();\n            params.setServerNames(serverNames);\n            sslSocket.setSSLParameters(params);\n            setSocket(sslSocket);\n\n```\nThank you anyway for you time.. ",
    "5hivams": "Thanks @marci4 I tried same even tried with https://clojars.org/repo but nothing working.. Yes that's already added. But issues resolved by cleaning cache of android studio and restarted. Everything working fine now. \nThanks for your response.. ",
    "biaxident": "Hello, @marci4 . Thank you for so fast reply! Look forward for such feature!. ",
    "dan335": "The version is 1.3.2.  Normal client not android.  I was using chrome with plain javascript websockets.\nI got rid of SSL so unfortunately I can't test your fix.. I got the idea from issue https://github.com/TooTallNate/Java-WebSocket/issues/409. Works great locally.  It will be a couple days before I can test it on a server.  Will let you know.  Thanks Marcel!. Looks like it works.  Steady 75 - 85 ping from Seattle to New York.. Version 1.3.3.  It's from a game.  I'm using plain javascript websockets but some players try to cheat or create bots by sending messages themselves.  I'm guessing it's caused by one of the players but have no way of knowing.\nIs there a place I can catch that exception so that it doesn't crash if this happens again? . I saw this error again and the server was still up so they must be unrelated.  Thanks, closing.. ",
    "cjgriscom": "I was mistaken; it looks like this is already fixed in the latest version.. @marci4 Done: https://github.com/TooTallNate/Java-WebSocket/issues/666. ",
    "Irahe": "Hello @marci4 , thank you for your fast response!\nIm using firefox 53.0 (32bits) for my tests. and i already have gone to https://localhost:8283 and accepted my certificate.\nWhat i cant understand is that if the problem is with my certificate, why some times it can connect correctly?\nThe client im testig with is from websocket.org. it is on this link: http://www.websocket.org/echo.html.\nCan you tell me step by step how i must configure my setup so it works for me too?\nThank you =*. Hello there, @marci4 , \nThank you again for your immediate response! This is really getting interesting.\nIm getting a Let's Encrypt certificate for my production domain, and so ill try to apply it to a test server on a subdomain there... \nI hope it works...\nI keep you posted!\nBest wishes,\nIrahe Kasprzykowski.. Hi, @marci4 ,\nI have disabled TCPNoDelay on the chatserver at my domain. \nHowever, my problems with Firefox and other naughty browsers other than chrome keep happening.\nIn Firefox, if i connect, disconnect and try to reconnect, it just does nothing for a while, then times out.\nWhy is Firefox so unrighteous?  LOL...\nGreetings,\nIrahe Kasprzykowski. @zhoulifu , thank you for the advice.\nI'll take a look at netty lib. However a already have made a cross-solution, proxying wss:// to ws:// in apache server, this way i can still have a https connection and a ws one.\n=D. @marci4 , FANTASTIC!\nThe 1.3.4 is already available? I can just download the source and rebuild?\nThank you guys again!\nIrahe Kasprzykowski. @marci4 ,\nThe changes needed are already at the source in here( https://github.com/TooTallNate/Java-WebSocket) or i should go to your personal fork at (https://github.com/marci4/Java-WebSocket-Dev)?\nThanks,\nI hope the 2.0 reaches us soon! =D. @marci4  and @zhoulifu ,\nThank you for your help!\nI just imported the new lib into my mais project and it worked like a champ!\nYou can tag this issue as FIXED LIKE A BOSS...  XD\ntausend dank!,\nIrahe Kasprzykowski. Hello @zhoulifu , i'll merge this code to my lib and rebuild to test...\nThank you for your time.\ni'm realy proud of this community!\n\ud83d\udc4d . Dear @zhoulifu , Unfortunately the fix wont work for me. I still have the same issues on firefox and Edge.. I know about the domain issue, i just dont wanted to post it publicly here ;D\nI'll investigate the issues you sent me, however i may say that yesterday morning it was working like a champ.. Lets hope they do.\nI'll keep monitoring they status and keep you posted.\nThank you again for your help.\nAnd another thing, about #466 , the fix only works on linux if you use Oracle Java 8. With Openjdk-8 it does not work for some reason.. Let's encrypt is back to action, and connections are back to work.\nHowever, if i try multiple connections on Edge, i still get freeze state.\n=D. Hey, @marci4 ,\nI still having problems with edge and ie on the same server.\nSomehow, i cant connect with edge. Some times i can, however is only works if edge is the first to connect to the server. If i try to connect another tab, it keeps eternally loading. Dont even times out.\n. Dear @marci4,\nI completely renewed the environment of the server today.\nSorry to say, but nothing has changed on the edge and ie behavior.\ni`m using:\nApache2, PHP7.0, Oracle Java8.\nI figured that if i go to websockets.org client and keep pushing the connect button, it connects after some like 20 tries.\nMys server is online, and you can try it for yourself: \nPlease tell me when you see this message so i can erase the domain.. =D. Dear @marci4 ,\nIn response to java -version on the server i have the following:\n`\n###@instancialeilao:~$ java -version\njava version \"1.8.0_131\"\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\n`. Dear @marci4 ,\nI'll test it soon and give you an feedback.\nThank you for your support again.. Dear @marci4 ,\nI have patched my server with the new version released.\nUnfortunately, Edge is not working properly yet.\nI have tested with Firefox and Chrome, and some times, with multiple connections i get a freeze on browser and exception on server:\nFirefox:\njavax.net.ssl.SSLException: Unsupported record version Unknown-156.126\n        at sun.security.ssl.InputRecord.checkRecordVersion(InputRecord.java:552)\n        at sun.security.ssl.EngineInputRecord.bytesInCompletePacket(EngineInputRecord.java:113)\n        at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:868)\n        at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:781)\n        at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:624)\n        at org.java_websocket.SSLSocketChannel.read(SSLSocketChannel.java:140)\n        at org.java_websocket.SocketChannelIOHelper.read(SocketChannelIOHelper.java:13)\n        at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:370)\n        at java.lang.Thread.run(Thread.java:748)\nChrome:\njavax.net.ssl.SSLException: Unsupported record version Unknown-124.66\n        at sun.security.ssl.InputRecord.checkRecordVersion(InputRecord.java:552)\n        at sun.security.ssl.EngineInputRecord.bytesInCompletePacket(EngineInputRecord.java:113)\n        at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:868)\n        at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:781)\n        at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:624)\n        at org.java_websocket.SSLSocketChannel.read(SSLSocketChannel.java:140)\n        at org.java_websocket.SocketChannelIOHelper.read(SocketChannelIOHelper.java:13)\n        at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:370)\n        at java.lang.Thread.run(Thread.java:748)\nWith Edge, i can connect only if i am not connected to the server with any other browser. If i connect with any other browser, Edge simple not work.\nThis problem is really fucking with both of us... =(\nI hope we can find an solution.\nPS: I'm still using oracle-java8... I have installed OpenJDK-8, however, i get the similar problem with Edge, and Firefox stop working(similar to #466) on that version. I was not able to install openjdk-7 because I'm running Ubuntu 17.04, and it is not available via ppa. . Hello @marci4 ,\nI'v tested the above, and with this change, Firefox works on OpenJDK-8 correctly. However, Edge and IE still not working properly. In Chrome and Firefox, if i connect 2 or 3 tabs in a row, i still get the following exception(with does not happen on previously socketchannel implementation):\njavax.net.ssl.SSLException: Unsupported record version Unknown-221.189\n        at sun.security.ssl.InputRecord.checkRecordVersion(InputRecord.java:552)\n        at sun.security.ssl.EngineInputRecord.bytesInCompletePacket(EngineInputRecord.java:113)\n        at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:868)\n        at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:781)\n        at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:624)\n        at org.java_websocket.SSLSocketChannel.read(SSLSocketChannel.java:140)\n        at org.java_websocket.SocketChannelIOHelper.read(SocketChannelIOHelper.java:13)\n        at org.java_websocket.server.WebSocketServer.run(WebSocketServer.java:370)\n        at java.lang.Thread.run(Thread.java:748)\nI have figured that if i try to connect to my server on http://www.websocket.org/echo.html (using edge) and keep pressing the connect button(like crazy), it will eventually connect....Thats Odd.... seems like Edge is suffering the same issues as Firefox on #466 .... Hello @marci4 ,\nI have done as requested with java debug. A lot of information was showed when trying to connect via Edge.\nThe Cipher used is: [TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256].\nYou think i should remove this cipher to see if it works?\nI hope we can sort it out.\n=D. Hello @marci4 ,\nI removed the cipher, but it is still a  no go...\nHowever, i decided to chalange this issue!\nWhen i removed (TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256) Edge picked a new one(TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA) so i removed this too, and it picked a new one(TLS_RSA_WITH_AES_128_GCM_SHA256)  and so on...\nAt the end, i removed some ciphers, and finally i can tell you its working on Firefox, Edge, Chrome and IE.\nHowever, i still have some problems with the new sslSocketChannel, some times on all browsers i need to restart the connection, causing the exeption i already have mentioned.\nAt the end, my WrapChannel method is like this:\n`public ByteChannel wrapChannel(SocketChannel channel, SelectionKey key) throws IOException {\n    SSLEngine e = sslcontext.createSSLEngine();\n    /*\n     * See https://github.com/TooTallNate/Java-WebSocket/issues/466\n     *\n     * We remove TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 from the enabled\n     * ciphers since it is just available when you patch your java\n     * installation directly. E.g. firefox requests this cipher and this\n     * causes some dcs/instable connections\n     */\n    List<String> ciphers = new ArrayList<String>(Arrays.asList(e.getEnabledCipherSuites()));\n   // Recomendend ciphers to remove\n    ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\");\n    ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\");\n    ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\");\n    ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\");\n    ciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\");\n    ciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\");\n    ciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\");\n   //Ciphers removed on my own\n    ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\");\n    ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\");\n    ciphers.remove(\"TLS_RSA_WITH_AES_128_GCM_SHA256\");\n    ciphers.remove(\"TLS_RSA_WITH_AES_128_CBC_SHA256\");\n    ciphers.remove(\"TLS_RSA_WITH_AES_128_CBC_SHA\");\n    //edge is using now -> SSL_RSA_WITH_3DES_EDE_CBC_SHA\n    e.setEnabledCipherSuites(ciphers.toArray(new String[]{}));\n    e.setUseClientMode(false);\n    return new SSLSocketChannel(channel, e, exec, key);\n}`. Hello, @marci4 ,\n\nI went back to SSLSocketChannel2 and all is back to work. no exception.\nOnly for your information, SSLSocketChannel2 also have the above explained exception, however it just don't show it....\nI noticed if you try to connect to the server continuously, it will eventually freeze and then connect.\nI guess its ok for the moment.\nAnyway, thanks for your help and support. \nI believe you can close this issue now. \nIf i have any news i'll post it here on another issue.\nIf you guys need any help, i'll be pleased to help.\n=D. Well,\nOn my project i use this kind of mapping for authentication and identification proposes. \nI have created two separated chasses and two Synchronized lists on the Server class, so i can keep track of this.\nI believe this is not the role of the lib, but a specificity of each implementation.\nGreetings. :*\nPS: If you will use this kind of approach, don't forget to use Iterators for manipulating the lists..... ",
    "bentzn": "This is sent from the server. I can see in the debugger that the client receives both parts but onMessage(ByteBuffer buf) is never called.. It runs.\nThanks a lot! . ",
    "qhchen2": "Could you create an example that uses this lost detection connection? Im trying to follow the wiki and My Server that extends WebSocketServer doesn't recognize the method myServer.setConnectionLostTimeout(15). The wiki is pretty short so I'm not exactly sure where I'm going wrong. Im using 1.3.3. Thanks for the quick reply, maybe examples on what methods to call in the js client and what methods in the server and to put it all in an example. Even if 1.3.4 was released the wiki is unfortunately so short I would not have understood the example(The same with trying to do wss, had alot of problems trying to make that work. As for me, Im forced to use 1.3.3 for now, so Im trying to implement the ping/pong thing myself. What is not clear for me from the wiki what ping and pong are exactly, strings, objects etc? also some kind of interaction diagram would be handy. So right now im unsure what to send to the client from the server and what method to use. Im guessing I could use websocket.send(String) but maybe thats not ideal because of the overhead.\nGreetings,\nQ. Im using a javascript client and am wondering how to check for pings from a server in a regular interval there. Did you use JS also and have found a solution? JS does not appear to have multithreading\nGreetings,\nQ. Hey marci, just a quick question on some code I found in AbstractWebSocket class in the master, namely\n/*\n     * Attribute for the lost connection check interval\n     /\n    private int connectionLostTimeout = 60;\n/**\n * Get the interval checking for lost connections\n * Default is 60 seconds\n * @return the interval\n */\npublic int getConnectionLostTimeout() {\n    return connectionLostTimeout;\n}\n\nIs this your code that is not part of 1.3.3, or is it code that has been part of the project for a long time? cause now it seems I can just use these builtin functions and variables to make the pingpong work.\nGreetings,\nQ. ",
    "NitzDKoder": "@marci4 on Android \nClient:\nRequest is done from android webview level web-socket as client.\nbut after webview is frozen it fails to send pong.\nhttps://developers.google.com/web/updates/2018/07/page-lifecycle-api#developer-recommendations-for-each-state\nServer:\nwe are getting reason: The connection was closed because the other endpoint did not respond with a pong in time. For more information \nsay if server is  setConnectionLostTimeout(30secs), Server will auto detect and wait for message from client? Client has to retry to the same server port?\nThanks\nNithin\n. ",
    "ao": "For anybody who stumbles on this information. The header should be set as follows:\nMap<String, String> _headers = new HashMap<String, String>();\n_headers.put(\"Authorization\",\"jwt SOME_STRING_AS_A_JWT\");. ",
    "calvertdw": "Awesome!. ",
    "lifubang": "I think if the maintainer provide a clientid field in org.java_websocket.WebSocketImpl class, the map can be maintained by ourselves. (#554)\nBut I also think that because the class org.java_websocket.server.WebSocketServer provide a private field Collection connections, if this field changes to Dictionary connections, It'll be more Convenient for us. But it will need more code changes. So I think it's not a good idea.\nSo I think you can add a clientid field in org.java_websocket.WebSocketImpl class, the problem will be resolved with a lowest cost.. I think Java-WebSocket project is the most simple one for websocket, but not the popular one because of missing extensive documentations. So I think most of people may start there first example with src/main/example/ChatServer.java.  In fact, this example provide most features of simple websocket server, and we also need this main method to stop the server because web socket server is usually Single deployment. All people may focus on server's performance when using websocket server, but when they got a 20% cpu usage, they may give up.\nBy the way, I think this project needs more features:\n1. How to get url's params?\n2. How to get client's cookie?\n3. How to get client socket's unique key in onOpen, onClose, and onMessage method?. I have reviewed the broadcast method, it's most like sendToAll method in the older versions. You add try catch, It's very well. But you need to assert client != null in broadcast method because I have got an NullPoint Exception in sendToAll method in a production system.. For the third question, I have no idea all. So I have to add a Dictionary in ChatServer, make a mapping from userid to websocket's unique id, but there are two problems:\n1. I don't know this unique id is really one and only.\n2. Although I remove the disconnected websocket from Dictionary in onClose event, but some disconnected websocket with some unknown errors will not be removed from the Dictionary for ever.\nSo I suggest the maintainer to add a clientid field in WebSocketImpl or WebSocket.\n```java\n    //The dic of websocket\n    //todo: I suggest the maintainer to add a clientid field in WebSocketImpl or WebSocket\n    private Dictionary conns = new Hashtable();\n//get a socket's unique key\n//todo: I suggest the maintainer to add a clientid field in WebSocketImpl or WebSocket\nprivate String key(WebSocketImpl sock) {\n    StringBuilder s  = new StringBuilder();\n\n    s.append(sock.toString().substring(33))\n            .append(sock.key.toString().substring(28))\n            .append(sock.hashCode())\n            .append(sock.getRemoteSocketAddress().getAddress().getHostAddress().replaceAll(\"\\\\.\", \"\"))\n            .append(sock.getRemoteSocketAddress().getPort());\n    String str = s.toString();\n\n    return str;\n}\n\n@Override\npublic void onOpen( WebSocket conn, ClientHandshake handshake ) {\n    //this.sendToAll( \"new connection: \" + handshake.getResourceDescriptor() );\n    WebSocketImpl sock = (WebSocketImpl)conn;\n\n    //todo: I suggest the maintainer to add a clientid field in WebSocketImpl or WebSocket\n    String key = this.key(sock);\n    this.conns.put(key, conn);\n\n    //get from cookie\n    ......\n\n    //add to db\n    ChatUser chatUser = new ChatUser();\n    chatUser.userid = json.getString(\"userid\");\n    chatUser.clientid = key;\n    chatUser.role = json.getString(\"role\");\n    chatUser.in_date = new Date();\n    ChatUser chatUserSaved = this.chatUserDAO.repository.insert(chatUser);\n    //then there is a map from userid to websocket's key id\n    if (WebSocketImpl.DEBUG)\n        System.out.println(key + \" entered the room!\" );\n}\n\n```\nWhen onMessage, \njava\nChatUser chatUser = this.chatUserDAO.repository.findByUserid(to_client_id);\nif (chatUser != null) {\n    //find the dictionary by a unique id\n    WebSocket ws = this.conns.get(chatUser.clientid);\n    if (ws != null) {\n           ws.send(JSON.toJSONString(obj));\n    }\n}. @marci4 in onOpen event, we can get ClientHandshake param, so we can get cookie value by handshake.getFieldValue(\"Cookie\"). But in onMessage event, there are no ClientHandshake param, how to get cookie?\nYou may know, in web application, each controller may need cookie value to store the user's data. So I think in onMessage event, we may need cookie field.. Sorry, I use a nodejs ws library now. . ",
    "8databit": "I agree with lifubang, add an getter/setter in the class mentioned for just an Object\nprivate Object attachment = null;\nThis is the best way sinse we dont have to find the address of the object inside an iterator of some sort. \nMaybe add it to the websocket interface too, would be good sinse it's somewhat a standard thing to add custom information/references to a socket.\nI highly disagree with adding a map. It isn't necessary sinse this can be easily implemented with help of the onOpen() method of the server.\nBecause onMessage() is returning the websocketimpl class you could easily fetch a custom class, UUID or whatever.\n```\n@Override\npublic void onOpen(WebSocket conn, ClientHandshake handshake) {\n    MyCustomClass client = new MyCustomClass();\n    conn.setAttachment(client);\n}\n@Override\npublic void onMessage(WebSocket conn, ByteBuffer message) {\n    MyCustomClass client = (MyCustomClass) conn.getAttachment();\n}\nclass MyCustomClass {\n    //An unique identifier for the client. \n    public string UUID = null;\n    public MyCustomClass() {\n    UUID = UUID.randomUUID().toString();\n    }\n//more code can be added here... ??\n\n}\n```. \"So I will probably add a thread pool for every received message as well as message to write to reduce load of this thread.\"\nAdding a new thread for every message being send and received is a really bad idea.  Every processor handles 1 thread. If you add more threads it will just be virtual, it will switch between threads on the assigned processor core. There is a limit on how many threads can be created, this limit is set by the operating system.  It costs time to create a thread,  adding threads automatically this way mehhs me because there could be alot of messages being send/received.\nIf the operation is taking too long i suggest you take a different approach in the method that's processing the output of onMessage() or either yeah, do the work on a different thread. There should be 1 thread only (the main thread) calling back onMessage() with final output that can be used. It's more than okay to do the to ByteArray conversions, whatever on the other threads. There should be 1 static message queue, being dequeued by onMessage() (this case is a bit different sinse we have:\n Framedata.Opcode.BINARY\n Framedata.Opcode.TEXT\nSo 2 queues being filled by other threads because we have to convert and read data out of the sockets, being dequeued by 1 thread for user usage. This 1 thread will not block the other threads from putting data inside the queues. If you determined that an operation takes to long, well make a thread yourself. Or use a threadpool.\nIf we create a thread for every thing that processes inside the onMessage() method we have to deal with async stuff. What if the main thread changes a value that is needed by the thread created in the onMessage() method later on? Because this project is used as an extension to current work, people who use this should code these kind of methods.\nCorrect me if im wrong :) . Hey,\nCall me Joyie, Well i maybe read the code wrong but ur adding a queue which holds the bytebuffers if im corrrect. This queue has a limitation of how many buffers it holds, so this is some sort of throttle.\n```\n    protected void allocateBuffers(WebSocket c) throws InterruptedException {\n        if (queuesize.get() >= 2 * decoders.size() + 1) {\n            return;\n        }\n        queuesize.incrementAndGet();\n        buffers.put(createBuffer());\n    }\nprivate void pushBuffer(ByteBuffer buf) throws InterruptedException {\n    if (buffers.size() > queuesize.intValue())\n        return;\n    buffers.put(buf);\n}\n\n```\nSinse it doen't put the buffer in the queue when there is no queue space available, i thought this was a throttle on the server sided reading. Although this isn't per socket-connection and the code is kinda unclear to me, bit of a puzzle hahaha. \nI have been struggling on this for a while myself actually using TCP. I'd like to mention that the receive and read buffer of the socket also allocates ram. The thing i would do is just only make a feature that just doesn't read the buffer of the socket when the limitation is overflown and just outputs onmessage(). What happens after then is up to the user of this project. Create a file, or keep it in a list/queue?\nFor now, just for security measures i would just set a standard limitation of 1MB+ amount of ram (bytebuffer) that a socket/connection can use. This makes RAM = socket_rcvbuf + (socket_readbuf + bytebuffer). Without ofcourse the objects and everything created.\nSee:\nif (key.isReadable())inside websocketserver class. if it haven't read the data , the data will just be left inside the buffer of the socket. Correct me if im wrong idk if this is possible cus of the RCF implementation.\nFiles should be written in parts yeah ^^ although i think this protocol should not be implemented in this project. It's for the user of this project to determine when the server is expecting a file or sending a file.\nAnd no i unfortunately do not know any projects implementing this method.\nI do not have enough knowledge about the websocket protocol for as now to be usefull, i have been studying this for a few days now. Would love to help once i'm finished with my project. if i come across anything ill make sure ill update it and post it here :). Heyy marci!\nThanks for ur reply. I get what you mean, I was just giving an example ^^.  Your right it should be implemented with care. I have taken a look inside the files again and maybe it's an idea to look at:\n\n10.7.  Handling of Invalid Data\n\nof the RFC 6455 docs.  This might be a solution, or not lmao need u to verify this.\ntranslateSingleFrame(); inside Draft_6455.\n```\n        //CHECK LIMIT\n    ByteBuffer payload = ByteBuffer.allocate(checkAlloc(payloadlength));\n    if (MASK) {\n        byte[] maskskey = new byte[4];\n        buffer.get(maskskey);\n        for (int i = 0; i < payloadlength; i++) {\n            payload.put((byte) (buffer.get( /* payloadstart + i */ ) ^ maskskey[i % 4]));\n        }\n    } else {\n        payload.put(buffer.array(), buffer.position(), payload.limit());\n        buffer.position(buffer.position() + payload.limit());\n    }\n\n```\nIf we came till this point we were able to fetch the payloadsize and are about to allocate space. What if we just simply add a limit here. It sends a close frame (10.7.  @ Docs of 6455 with status code 1009 if it crosses the limit:\n\n1009 indicates that an endpoint is terminating the connection\n      because it has received a message that is too big for it to\n      process.\n\nThis just simply closes the connection, be sure to force close the connection if it takes to long to close with the Close Frame. The client could either reconnect after a random amount of seconds (0-5 based on the docs) if it has received a message for closure with this error code. \nThis should be seen more as a security feature than something for performance, if i connect to some server randomly and send a large amount of data i can just fill up the ByteBuffer list of Draft_6455 because it will keep looking for a Complete Frame. If i have 10 connections and i keep sending data nothing is done by the server while i'm sending them.\n```\n    /*\n     * Attribute for the payload of the current continuous frame\n     /\n    private List byteBufferList;\n        public static int RCVBUF = 16384;\n```\nI would also add a limit to the byteBufferList.\n```\n//For now we use an int and we put the default value at MAX_INT, max frame size = 2^63\nint limit = Integer.MAX_VALUE;\n//Add a seperate ADD method for the byteBufferList\nint limitByteBufferList = Math.ceil(limit / RCVBUF);\n//Queue  | Convert byteBufferList to a queue (faster if used correctly) because were\n//expecting it to be called a lot of times, store totalbytes in a seperate integer variable\n//to avoid double itteration.\n    private ByteBuffer getPayloadFromByteBufferList() throws LimitExedeedException {\n        long totalSize = 0;\n        for (ByteBuffer buffer : byteBufferList) {\n            totalSize += buffer.limit();\n        }\n        if (totalSize > Integer.MAX_VALUE) {\n            throw new LimitExedeedException(\"Payloadsize is to big...\");\n        }\n        ByteBuffer resultingByteBuffer = ByteBuffer.allocate((int) totalSize);\n        for (ByteBuffer buffer : byteBufferList) {\n            resultingByteBuffer.put(buffer);\n        }\n        resultingByteBuffer.flip();\n        return resultingByteBuffer;\n    }\n```\nThis could be implemented as an additional feature, not as a standard thing, based on your reply. \n. The JVM is probably still running, well atleast i think the thread that initialized the socket did.\nI never experienced the problem when properly closing the application that took a hold of the given ip/port.\nMaybe you're using threads the wrong way.. What are you trying to do?\nAre you trying to approach another device over the internet or locally?\nIf over the internet, make sure you portforward the right ports for the server to listen too and make sure the device your approaching is not blocking anything on that port. . I think marci's answer should work. Maybe URI (\"ws://\") is not hinting to look locally to resolve the name to an IP.\nMarci is telling you to parse the domain to an IP first and than use the IP adress to connect. . ",
    "promatik": "Hi everyone!\nI just created a pull request for this feature #627.\nAfter reading all your comments I ran some tests between having an HashMap or creating a getter and a setter to an object, and clearly HashMap was a lot worst, even with fewer connections.\nMy implementation is pretty simple to use, here is an example on how to set the attachment on onOpen and access it on onMessage:\n```java\npublic void onOpen(WebSocket conn, ClientHandshake handshake) {\n    User user = new User(conn);\n    conn.setAttachment(user);\n}\npublic void onMessage(WebSocket conn, String message) {\n    User user = conn.getAttachment();\n    // ...\n}\n```\nI'm using it just now, and it's working great.. Thank you @marci4, I'll close this issue and continue there.. Hi @marci4, just added the javadoc since tag.\nI'm not used to do tests, I don't know what kind of tests could I do for this feature.\nRegards!. ",
    "werner291": "Actually, I can already say for the 2 threads scenario that it is NOT thread-safe since sending multiple frames is not atomic.. Hi,\nnot very high at all, just checking. It's mostly a documentation issue for me, in that case I know what I'm up against.\nThanks for the response!. ",
    "GregoryConrad": "I added the Gradle line to my project just a week ago, so presumably the latest version. I am not using ssl, and I'm pretty positive onOpen is called on both ends. I'll check to make sure later today.\nAnd I'm not getting an onClose, so I don't think that's it either.. I tried again today, and there appeared to be no problems. Strange.\nSorry for using your time.. ",
    "tangze": "Meet the same question in \nOS: windows 10-1803\nJRE: 1.8 \nServer: websocket-sharp(https://github.com/sta/websocket-sharp) based\nonMessage never called, & I'm sure the Server works fine.\n. ",
    "vikulin": "Yes, I have. My app throws every time:\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@22cc90ed\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@1b3ca737\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@6de0c2fd\n19:43:34.515 INFO [etherpush]  New block: #3877720 (c170ca <~ ee2724) Txs:0, Unc: 0\n19:43:37.515 INFO [etherpush]  New block: #3877721 (eadfa0 <~ c170ca) Txs:20, Unc: 0\n19:43:38.390 INFO [etherpush]  New block: #3877722 (5095fb <~ eadfa0) Txs:32, Unc: 0\n19:43:43.453 INFO [etherpush]  New block: #3877723 (d4c9eb <~ 5095fb) Txs:194, Unc: 0\n19:43:47.578 INFO [etherpush]  New block: #3877724 (6d629b <~ d4c9eb) Txs:217, Unc: 0\n19:43:53.796 INFO [etherpush]  New block: #3877725 (17c481 <~ 6d629b) Txs:101, Unc: 0\n19:44:07.953 INFO [etherpush]  New block: #3877726 (18d0be <~ 17c481) Txs:219, Unc: 0\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@22cc90ed\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@1b3ca737\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@6de0c2fd\n19:44:58.031 INFO [etherpush]  New block: #3877727 (fecf73 <~ 18d0be) Txs:105, Unc: 0\n19:45:00.937 INFO [etherpush]  New block: #3877728 (fc2a19 <~ fecf73) Txs:0, Unc: 0\n19:45:09.015 INFO [etherpush]  New block: #3877729 (fdfb3e <~ fc2a19) Txs:146, Unc: 0\n19:45:16.047 INFO [etherpush]  New block: #3877730 (90d5b7 <~ fdfb3e) Txs:47, Unc: 0\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@22cc90ed\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@1b3ca737\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@6de0c2fd\n19:45:38.578 INFO [etherpush]  New block: #3877731 (92c453 <~ 90d5b7) Txs:139, Unc: 0\n19:45:40.234 INFO [etherpush]  New block: #3877731 (11a58d <~ 90d5b7) Txs:200, Unc: 0\n19:46:06.406 INFO [etherpush]  New block: #3877732 (2a889c <~ 92c453) Txs:174, Unc: 1\n19:46:25.765 INFO [etherpush]  New block: #3877733 (d4a26c <~ 2a889c) Txs:140, Unc: 0. No, I'm using your lib in desktop app under windows deployed into Apache tomcat servlet container.\nJDK 1.8, Windows 10 x86_64,\nI save your connection into a Map for a further broadcast in Ethereum messenger. This is a server side part of the messenger.\nHere is a client side where I receive these messages:\nhttps://play.google.com/store/apps/details?id=org.vikulin.etherwallet. Can you please point out where exactly you clean up connections Collection?. Yes, I have. Will build it soon\n15 \u0438\u044e\u043d\u044f 2017 \u0433. 21:33 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Marcel Prestel\" \nnotifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\nHello @vikulin https://github.com/vikulin,\ntested it with java 1.8.0_131 and its working...\nThe connection is getting cleaned up in the WebSocketServer\nonWebsocketClose() which is called by closeConnection().\nDo you have a simple test application where I can reproduce it for sure?\nTheoretically we could just use closeConnection() instead of close().\nGreetings\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/504#issuecomment-308813363,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtYxifRD4gbLl7xxPuJiiSKi00tNDMgks5sEWoggaJpZM4N7End\n.\n. No need to run app. Let see on close sequence:\n1. class AbstractWebSocket: if( ((WebSocketImpl)conn).getLastPong() < current ) {\n                                if (WebSocketImpl.DEBUG)\n                                    System.out.println(\"Closing connection due to no pong received: \" + conn.toString());\n                                conn.close( CloseFrame.ABNORMAL_CLOSE );\n                            } else {\n                                conn.sendPing();\n                            }\n2. class WebSocketImpl private void close( int code, String message, boolean remote ) {\n        if( readystate != READYSTATE.CLOSING && readystate != READYSTATE.CLOSED ) {\n            if( readystate == READYSTATE.OPEN ) {\n                if( code == CloseFrame.ABNORMAL_CLOSE ) {\n                    assert ( !remote );\n                    readystate = READYSTATE.CLOSING;\n                    flushAndClose( code, message, false );\n                    return;\n                }...\n\n\nprotected synchronized void flushAndClose( int code, String message, boolean remote ) {\n        if( flushandclosestate ) {\n            return;\n        }\n        closecode = code;\n        closemessage = message;\n        closedremotely = remote;flushandclosestate = true;\n\nwsl.onWriteDemand( this );\ntry {\n    wsl.onWebsocketClosing( this, code, message, remote );\n} catch ( RuntimeException e ) {\n    wsl.onWebsocketError( this, e );\n}\nif( draft != null )\n    draft.reset();\nhandshakerequest = null;\n\n}\n\n\nActually flushAndClose method does not contain Collections clean up as you mentioned.\n. You should never relay on an Exception. It is slow approach catching by\ntry-catch block and should be closed connection by timeout.\n16 \u0438\u044e\u043d\u044f 2017 \u0433. 9:27 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Marcel Prestel\" notifications@github.com\n\u043d\u0430\u043f\u0438\u0441\u0430\u043b:\nWell for me it is still very interesting why the selector is not waking up\nand we get no IOException in the runnable...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/504#issuecomment-308944360,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtYxmDWTH_EXnF76NALHoZUbJKNWDFuks5sEiBMgaJpZM4N7End\n.\n. I could send you my whole server side If had no security sensitive info\nsuch as certificates. So I need to remove these files and modify my\nproject. Second things: how to reproduce the scenario. I connect to server\nside with extended handshake. So only authorized users are allowed to make\nconnections with server side.\nCould it be better if you debug the issue on my side remotely through\nTeamViewer?\n2017-06-16 9:41 GMT+03:00 Marcel Prestel notifications@github.com:\n\nWell there are things which are out of my power e.g. when I have to rely\non the IOException telling me that the remote endpoint was closed.\nNethertheless I would really like to understand why this is working in my\ndevelopment enviroment but not in yours! That is why I am asking for your\ncode.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/504#issuecomment-308946667,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtYxohPjFF_0NAloK7g1MAEl2lz4wrCks5sEiO2gaJpZM4N7End\n.\n. Accordingly to this article http://www.javaworld.com/article/2076498/core-java/simple-handling-of-network-timeouts.html\nyou have to handle not only IOException but:\nInterruptedIOException\n\nJava throws IOException when destination address is unavailable and network returns appropriate response. But this case does not cover scenario when remote host does not respond.\nAre you handling both cases?\nI will try t fix it by my self adding InterruptedIOException try-catch block.\nCan you please send me a code line where to put it?. Handshake:\nprocess(314): {GET / HTTP/1.1\nAuthentication: b80c3a39edc0421fe637bd47f28288e0e781bca7ee28565cd54cc1ed8e3a6d96c3c796558786a11aeacae44f1732daf7d48c628fabc23c7ce9b9c70bded325db\nConnection: Upgrade\nHost: messenger.hyperborian.org:443\nSec-WebSocket-Key: ZdcjgAAlVOu7+cjDK8+ZQg==\nSec-WebSocket-Version: 13\nUpgrade: websocket\n}\nwrite(212): {HTTP/1.1 101 Web Socket Protocol Handshake\nConnection: Upgrade\nDate: Fri, 16 Jun 2017 08:13:13 GMT\nSec-WebSocket-Accept: QRtV6WdCnN/IY2xJMkxxUvoKt/4=\nServer: TooTallNate Java-WebSocket\nUpgrade: websocket\n}\nopen using draft: Draft_6455\nJava:\n\njava -version\njava version \"1.8.0_131\"\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\n\nClient side: Android 6.0 using the same lib: Java-WebSocket v1.3.4. The issue was fixed by your change. App showed it once and no other such messages in log:\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@43305ffd\norg.java_websocket.WebSocketImpl@43305ffd has left the room!\nThanks a lot!. Found only once:\nClosing connection due to no pong received: org.java_websocket.WebSocketImpl@7dc75151\norg.java_websocket.WebSocketImpl@7dc75151 has left the room!\n21:46:52.710 ERROR [general]  Uncaught exception\njava.util.ConcurrentModificationException: null\n        at java.util.HashMap$HashIterator.nextNode(HashMap.java:1437)\n        at java.util.HashMap$KeyIterator.next(HashMap.java:1461)\n        at org.java_websocket.AbstractWebSocket$1.run(AbstractWebSocket.java:112)\n        at java.util.TimerThread.mainLoop(Timer.java:555)\n        at java.util.TimerThread.run(Timer.java:505)\nDo you synchronize HashMap?. ",
    "javierpineros": "I resolve this issue temporarily extending FramedataImpl1 and implements isValid abstract method, but this implementation of this method its empty because i don\u00b4t know that is necessary to validate  in this method. \nMy new implementation code is:\npublic class CithatFramedataImpl1 extends FramedataImpl1 {\n    public CithatFramedataImpl1(Opcode op) {\n        super(op);\n    }\n@Override\npublic void isValid() throws InvalidDataException {\n    // i don\u00b4t know that make in this method\n}\n\n}\nAnd mi new send ping method is:\npublic static void sendPing(){\n    //Log.d(Constants.TAG, \"SENDING PING PING PING PING\");\n    FramedataImpl1 frame = new CithatFramedataImpl1(Framedata.Opcode.PING);\n    frame.setFin(true);\n    mWebSocketClient.getConnection().sendFrame(frame);\n}\n\nPlease helpme to implements correctly isValid method\nThanks. ",
    "makedir": "And why is it not linked here: https://github.com/TooTallNate/Java-WebSocket ?. I see that nonsense and stubbornness a lot actually on so many projects on here, it is ridiculous. Why should I mess with Gradle... making things complicated and blown up, where there is just one jar file to include with a single line.... Cool story.. ",
    "Arkasian": "Yea, totally, who to hell uses .jars nowadays? XD Maven or Gradle are best\noption I believe.\nOn Sat, Jun 17, 2017 at 8:43 PM, Marcel Prestel notifications@github.com\nwrote:\n\nBecause most of the developer use building tools like maven or gradle and\ndont rely on the jar!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/507#issuecomment-309232763,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AYXtSkWUhLD7K2aKq9DOpMmfHtA_uDQyks5sFB5BgaJpZM4N9R0p\n.\n. Yea, right now it is one file, but what will happen if there will be more\nthan one needed? For example 10 jars.\n\nOn Sat, Jun 17, 2017 at 8:48 PM, makedir notifications@github.com wrote:\n\nCool story.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/507#issuecomment-309233045,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AYXtSo1ALRmkJkrl1bnC9Vxq90JCaaWrks5sFB-bgaJpZM4N9R0p\n.\n. \n",
    "tuetschek": "Thanks! And sorry I forgot to mention that it happened under Linux.. ",
    "ignaciomolina": "Do you know if you already planned the next release date?\nThis is to know when I could use the upstream version instead of my own. Previous version of the code didn't take in account if a proxy was set, therefore in case of proxy wouldn't create the connection properly. ",
    "gomeskingsley": "Thanks for your prompt reply @marci4 !\nBelow is the piece of code which I use to open a web socket, \ncan you tell where setWebSocketFactory() will be used over here?\nprivate void openWebSocket(URI uri) {\n        mWebSocket = new WebSocketClient(uri) {\n            @Override\n            public void onOpen(ServerHandshake serverHandshake) {\n                Log.i(TAG, \"onOpen: \");\n            }\n        @Override\n        public void onMessage(String message) {\n            Log.i(TAG, \"onMessage: \" + message);\n        }\n\n        @Override\n        public void onClose(int code, String reason, boolean remote) {\n            Log.i(TAG, \"onClose: \" + reason);\n        }\n\n        @Override\n        public void onError(Exception ex) {\n            Log.i(TAG, \"onError: \");\n        }\n    };\n      mWebSocket.connect()\n}\n\nThanks in advance!. Thanks @marci4! This is working fine! . ",
    "edasaki": "Okay, thank you!\nI was also wondering, is it possible that a client with bad connection could cause the entire queue to lag? For example if one client has latency of 500ms but all others have latency of 30ms, will the 500ms client cause issues for everyone else? Or does it not make a difference?. Oh, thanks for linking that, I didn't see it before! Since I am using websockets for a game it seems like a good option to use. Hopefully it will improve things a little bit. Thank you!. Sure thing, will do!. It's been some time but recently I've started having this issue again. I didn't have many users lately so the problem never occurred, but now that usage has gone up a bit I've noticed the problem appearing again. It's strange in that sometimes I can handle high loads with very low latency, but other times even with much smaller loads the latency is very high.\nCould it possibly be beneficial to use more than the default number of WebSocketWorkers? I see that by default the number of threads is equal to the number of processors. But are there any blocking operations during the decoding where having more threads than processors could be time-efficient? As I understand it, if one thread is waiting on something then another thread can do some work, so maybe it'd be better to raise the number of threads. I'm not familiar enough with async stuff to be sure. Thanks!\nEdit: It looks like each connection is assigned one worker, so I suppose it's not actually a good solution?. Thank you! \nWorth noting that I have since moved the stuff I was doing on my socket server in onMessage() to a separate thread pool, and performance seems to have improved dramatically. So the onMessage() just creates a runnable and submits it to the pool rather than actually doing anything. Doing this seems to have prevented one slow message from slowing down other ones for me at least.. ",
    "Dayssam": "Thank you @marci4 , it works like a charm\nBut the question is , what the code above did ?\nand if i want the service dont stop like \nwhile(true){\n}\nHow can i be sure the app doesn't stop ?. Thank you very much @marci4 for your time. :100: . Thanks @marci4 for your time,\nFor information, when i'm not using a secure web socket in HTTPS, it's not working just in Internet Explorer.\nIt gives me \n\nSecurity Error. hi @marci4  \n\nThanks for your time, i could trust a self signed certificate and make my webapp communicate with the websocket server  using chrome (Not IE) when i'm using Eclipse IDE.\nIn my case i want to use the websocket server it in a WebStart,App, but it gives me an error \n\njava.io.FileNotFoundException: http:\\192.168.1.31:8094\\webApp\\resources\\jws\\xxxajws.jar!\\resource\\key.jks (La syntaxe du nom de fichier, de r\u00e9pertoire ou de volume est incorrecte)\n  at java.io.FileInputStream.open0(Native Method)\n  at java.io.FileInputStream.open(Unknown Source)\n  at java.io.FileInputStream.(Unknown Source)\n  at ma.xxxxxx.xxxxna.yyyyJWS.getSSLConextFromKeystore(Xxxxx.java:652)\n\nThe file key.jks already exists in the folder resource of the jar\nOur project is to let the user use our web app to scan files using a local scanner,\nThe old version used is the applet but is not supported anymore.\nfor the new version , we used the webstart to communicate with the scanner device & for the communication between the web app & web start we used the websocket\nfor a non secure web app , the webstart works like a charm . Hi @marci4 \nMy problems are solved now\nfor this  issue  \ni used Thread.currentThread().getContextClassLoader() to get My file.\nfor the first one its solved now .. #540 \n. Thank you very time @marci4  for your time & help\ni used the example as you mentioned Example and the vm option -Djavax.net.debug=all\nI got this LOG \n\n\nfound key for : mycert\nchain [0] = [\n[\n  Version: V3\n  Subject: CN=192.168.1.13, OU=MyOrgUnit, O=MyOrg, L=MyCity, ST=MyRegion, C=MyCountry\n  Signature Algorithm: SHA1withDSA, OID = 1.2.840.10040.4.3\nKey:  Sun DSA Public Key\n    Parameters:DSA\n  p:     fd7f5381 1d751229 52df4a9c 2eece4e7 f611b752 3cef4400 c31e3f80 b6512669\n    455d4022 51fb593d 8d58fabf c5f5ba30 f6cb9b55 6cd7813b 801d346f f26660b7\n    6b9950a5 a49f9fe8 047b1022 c24fbba9 d7feb7c6 1bf83b57 e7c6a8a6 150f04fb\n    83f6d3c5 1ec30235 54135a16 9132f675 f3ae2b61 d72aeff2 2203199d d14801c7\n  q:     9760508f 15230bcc b292b982 a2eb840b f0581cf5\n  g:     f7e1a085 d69b3dde cbbcab5c 36b857b9 7994afbb fa3aea82 f9574c0b 3d078267\n    5159578e bad4594f e6710710 8180b449 167123e8 4c281613 b7cf0932 8cc8a6e1\n    3c167a8b 547c8d28 e0a3ae1e 2bb3a675 916ea37f 0bfa2135 62f1fb62 7a01243b\n    cca4f1be a8519089 a883dfe1 5ae59f06 928b665e 807b5525 64014c3b fecf492a\ny:\n    f62f218f 901c603e d59cf0a1 b301555f a9df122e bbde2220 6517dbde 3301bd9e\n    932cbf54 06a38804 63da34a0 7e2b76e3 ea781f00 77348781 84746815 9d750645\n    e83c869e 84a78f36 1ebb0430 3eee34bf a9f8958f c31746b4 5ab651db dd167d43\n    02ed0a1c 04fc804d 6f8c5b92 a4efce07 25ad6747 75418502 3df8448b 2aa5b385\nValidity: [From: Wed Aug 23 19:36:26 GMT 2017,\n               To: Sat Aug 21 19:36:26 GMT 2027]\n  Issuer: CN=192.168.1.13, OU=MyOrgUnit, O=MyOrg, L=MyCity, ST=MyRegion, C=MyCountry\n  SerialNumber: [    599dd93a]\n]\n  Algorithm: [SHA1withDSA]\n  Signature:\n0000: 30 2C 02 14 44 0C FC 4B   14 23 76 14 F5 61 74 43  0,..D..K.#v..atC\n0010: 06 40 EC 9C 13 06 7C 01   02 14 06 64 C6 00 93 89  .@.........d....\n0020: 66 C8 CB 0E 76 E5 94 49   4B AE FA 20 E8 7C        f...v..IK.. ..\n]\n\nadding as trusted cert:\n  Subject: CN=192.168.1.13, OU=MyOrgUnit, O=MyOrg, L=MyCity, ST=MyRegion, C=MyCountry\n  Issuer:  CN=192.168.1.13, OU=MyOrgUnit, O=MyOrg, L=MyCity, ST=MyRegion, C=MyCountry\n  Algorithm: DSA; Serial number: 0x599dd93a\n  Valid from Wed Aug 23 19:36:26 GMT 2017 until Sat Aug 21 19:36:26 GMT 2027\ntrigger seeding of SecureRandom\ndone seeding SecureRandom\nUsing SSLEngineImpl.\nWSServer started on port: 6789\nConnection lost timer started\nFinished DialogBox\nUsing SSLEngineImpl.\n[Raw read]: length = 5\n0000: 16 03 03 00 97                                     .....\n[Raw read]: length = 151\n0000: 01 00 00 93 03 03 59 9E   BC 67 16 A8 3F 50 B9 6B  ......Y..g..?P.k\n0010: DA AC 05 3A 02 BD CF B4   C0 95 9B 3A 84 0F A3 F3  ...:.......:....\n0020: 06 C8 E1 45 0C 6E 00 00   30 C0 28 C0 27 C0 14 C0  ...E.n..0.(.'...\n0030: 13 00 9F 00 9E 00 9D 00   9C 00 3D 00 3C 00 35 00  ..........=.<.5.\n0040: 2F C0 2C C0 2B C0 24 C0   23 C0 0A C0 09 00 6A 00  /.,.+.$.#.....j.\n0050: 40 00 38 00 32 00 0A 00   13 01 00 00 3A 00 05 00  @.8.2.......:...\n0060: 05 01 00 00 00 00 00 0A   00 06 00 04 00 17 00 18  ................\n0070: 00 0B 00 02 01 00 00 0D   00 14 00 12 04 01 05 01  ................\n0080: 06 01 02 01 04 03 05 03   06 03 02 03 02 02 00 17  ................\n0090: 00 00 FF 01 00 01 00                               .......\nWebsocketSelector11, READ: Unknown-3.3 Handshake, length = 151\n ClientHello, Unknown-3.3\nRandomCookie:  GMT: 1486732391 bytes = { 22, 168, 63, 80, 185, 107, 218, 172, 5, 58, 2, 189, 207, 180, 192, 149, 155, 58, 132, 15, 163, 243, 6, 200, 225, 69, 12, 110 }\nSession ID:  {}\nCipher Suites: [Unknown 0xc0:0x28, Unknown 0xc0:0x27, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, Unknown 0x0:0x9f, Unknown 0x0:0x9e, Unknown 0x0:0x9d, Unknown 0x0:0x9c, Unknown 0x0:0x3d, Unknown 0x0:0x3c, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, Unknown 0xc0:0x2c, Unknown 0xc0:0x2b, Unknown 0xc0:0x24, Unknown 0xc0:0x23, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, Unknown 0x0:0x6a, Unknown 0x0:0x40, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA]\nCompression Methods:  { 0 }\nUnsupported extension status_request, data: 01:00:00:00:00\nExtension elliptic_curves, curve names: {secp256r1, secp384r1}\nExtension ec_point_formats, formats: [uncompressed]\nUnsupported extension type_13, data: 00:12:04:01:05:01:06:01:02:01:04:03:05:03:06:03:02:03:02:02\nUnsupported extension type_23, data: \nUnsupported extension type_65281, data: 00\n\n[read] MD5 and SHA1 hashes:  len = 151\n0000: 01 00 00 93 03 03 59 9E   BC 67 16 A8 3F 50 B9 6B  ......Y..g..?P.k\n0010: DA AC 05 3A 02 BD CF B4   C0 95 9B 3A 84 0F A3 F3  ...:.......:....\n0020: 06 C8 E1 45 0C 6E 00 00   30 C0 28 C0 27 C0 14 C0  ...E.n..0.(.'...\n0030: 13 00 9F 00 9E 00 9D 00   9C 00 3D 00 3C 00 35 00  ..........=.<.5.\n0040: 2F C0 2C C0 2B C0 24 C0   23 C0 0A C0 09 00 6A 00  /.,.+.$.#.....j.\n0050: 40 00 38 00 32 00 0A 00   13 01 00 00 3A 00 05 00  @.8.2.......:...\n0060: 05 01 00 00 00 00 00 0A   00 06 00 04 00 17 00 18  ................\n0070: 00 0B 00 02 01 00 00 0D   00 14 00 12 04 01 05 01  ................\n0080: 06 01 02 01 04 03 05 03   06 03 02 03 02 02 00 17  ................\n0090: 00 00 FF 01 00 01 00                               .......\nmatching alias: mycert\n%% Created:  [Session-1, TLS_DHE_DSS_WITH_AES_128_CBC_SHA]\n ServerHello, TLSv1\nRandomCookie:  GMT: 1486732389 bytes = { 203, 35, 93, 203, 56, 254, 109, 186, 86, 169, 217, 43, 188, 127, 156, 216, 95, 26, 5, 54, 254, 209, 18, 237, 170, 141, 72, 159 }\nSession ID:  {89, 158, 188, 101, 161, 216, 118, 17, 144, 217, 80, 27, 134, 74, 58, 32, 10, 19, 104, 247, 4, 215, 119, 222, 249, 234, 108, 98, 92, 93, 13, 120}\nCipher Suite: TLS_DHE_DSS_WITH_AES_128_CBC_SHA\nCompression Method: 0\n\nCipher suite:  TLS_DHE_DSS_WITH_AES_128_CBC_SHA\n*** Certificate chain\nchain [0] = [\n[\n  Version: V3\n  Subject: CN=192.168.1.13, OU=MyOrgUnit, O=MyOrg, L=MyCity, ST=MyRegion, C=MyCountry\n  Signature Algorithm: SHA1withDSA, OID = 1.2.840.10040.4.3\nKey:  Sun DSA Public Key\n    Parameters:DSA\n  p:     fd7f5381 1d751229 52df4a9c 2eece4e7 f611b752 3cef4400 c31e3f80 b6512669\n    455d4022 51fb593d 8d58fabf c5f5ba30 f6cb9b55 6cd7813b 801d346f f26660b7\n    6b9950a5 a49f9fe8 047b1022 c24fbba9 d7feb7c6 1bf83b57 e7c6a8a6 150f04fb\n    83f6d3c5 1ec30235 54135a16 9132f675 f3ae2b61 d72aeff2 2203199d d14801c7\n  q:     9760508f 15230bcc b292b982 a2eb840b f0581cf5\n  g:     f7e1a085 d69b3dde cbbcab5c 36b857b9 7994afbb fa3aea82 f9574c0b 3d078267\n    5159578e bad4594f e6710710 8180b449 167123e8 4c281613 b7cf0932 8cc8a6e1\n    3c167a8b 547c8d28 e0a3ae1e 2bb3a675 916ea37f 0bfa2135 62f1fb62 7a01243b\n    cca4f1be a8519089 a883dfe1 5ae59f06 928b665e 807b5525 64014c3b fecf492a\ny:\n    f62f218f 901c603e d59cf0a1 b301555f a9df122e bbde2220 6517dbde 3301bd9e\n    932cbf54 06a38804 63da34a0 7e2b76e3 ea781f00 77348781 84746815 9d750645\n    e83c869e 84a78f36 1ebb0430 3eee34bf a9f8958f c31746b4 5ab651db dd167d43\n    02ed0a1c 04fc804d 6f8c5b92 a4efce07 25ad6747 75418502 3df8448b 2aa5b385\nValidity: [From: Wed Aug 23 19:36:26 GMT 2017,\n               To: Sat Aug 21 19:36:26 GMT 2027]\n  Issuer: CN=192.168.1.13, OU=MyOrgUnit, O=MyOrg, L=MyCity, ST=MyRegion, C=MyCountry\n  SerialNumber: [    599dd93a]\n]\n  Algorithm: [SHA1withDSA]\n  Signature:\n0000: 30 2C 02 14 44 0C FC 4B   14 23 76 14 F5 61 74 43  0,..D..K.#v..atC\n0010: 06 40 EC 9C 13 06 7C 01   02 14 06 64 C6 00 93 89  .@.........d....\n0020: 66 C8 CB 0E 76 E5 94 49   4B AE FA 20 E8 7C        f...v..IK.. ..\n]\n\n Diffie-Hellman ServerKeyExchange\nDH Modulus:  { 233, 230, 66, 89, 157, 53, 95, 55, 201, 127, 253, 53, 103, 18, 11, 142, 37, 201, 205, 67, 233, 39, 179, 169, 103, 15, 190, 197, 216, 144, 20, 25, 34, 210, 195, 179, 173, 36, 128, 9, 55, 153, 134, 157, 30, 132, 106, 171, 73, 250, 176, 173, 38, 210, 206, 106, 34, 33, 157, 71, 11, 206, 125, 119, 125, 74, 33, 251, 233, 194, 112, 181, 127, 96, 112, 2, 243, 206, 248, 57, 54, 148, 207, 69, 238, 54, 136, 193, 26, 140, 86, 171, 18, 122, 61, 175 }\nDH Base:  { 48, 71, 10, 213, 160, 5, 251, 20, 206, 45, 157, 205, 135, 227, 139, 199, 209, 177, 197, 250, 203, 174, 203, 233, 95, 25, 10, 167, 163, 29, 35, 196, 219, 188, 190, 6, 23, 69, 68, 64, 26, 91, 44, 2, 9, 101, 216, 194, 189, 33, 113, 211, 102, 132, 69, 119, 31, 116, 186, 8, 77, 32, 41, 216, 60, 28, 21, 133, 71, 243, 169, 241, 162, 113, 91, 226, 61, 81, 174, 77, 62, 90, 31, 106, 112, 100, 243, 22, 147, 58, 52, 109, 63, 82, 146, 82 }\nServer DH Public Key:  { 33, 15, 178, 98, 47, 162, 231, 163, 246, 128, 105, 228, 165, 45, 219, 232, 214, 134, 253, 61, 80, 185, 140, 36, 82, 111, 86, 253, 171, 121, 159, 236, 13, 241, 92, 209, 242, 234, 9, 97, 9, 255, 5, 235, 40, 138, 211, 180, 42, 192, 204, 242, 150, 74, 122, 215, 191, 103, 30, 94, 157, 37, 222, 148, 216, 220, 106, 246, 195, 28, 239, 19, 56, 11, 153, 216, 26, 1, 252, 154, 100, 200, 202, 41, 42, 83, 141, 143, 19, 1, 233, 163, 4, 18, 14, 41 }\nSigned with a DSA or RSA public key\n ServerHelloDone\n[write] MD5 and SHA1 hashes:  len = 1239\n0000: 02 00 00 46 03 01 59 9E   BC 65 CB 23 5D CB 38 FE  ...F..Y..e.#].8.\n0010: 6D BA 56 A9 D9 2B BC 7F   9C D8 5F 1A 05 36 FE D1  m.V..+......6..\n0020: 12 ED AA 8D 48 9F 20 59   9E BC 65 A1 D8 76 11 90  ....H. Y..e..v..\n0030: D9 50 1B 86 4A 3A 20 0A   13 68 F7 04 D7 77 DE F9  .P..J: ..h...w..\n0040: EA 6C 62 5C 5D 0D 78 00   32 00 0B 00 03 2A 00 03  .lb].x.2......\n0050: 27 00 03 24 30 82 03 20   30 82 02 DE A0 03 02 01  '..$0.. 0.......\n0060: 02 02 04 59 9D D9 3A 30   0B 06 07 2A 86 48 CE 38  ...Y..:0....H.8\n0070: 04 03 05 00 30 73 31 12   30 10 06 03 55 04 06 13  ....0s1.0...U...\n0080: 09 4D 79 43 6F 75 6E 74   72 79 31 11 30 0F 06 03  .MyCountry1.0...\n0090: 55 04 08 13 08 4D 79 52   65 67 69 6F 6E 31 0F 30  U....MyRegion1.0\n00A0: 0D 06 03 55 04 07 13 06   4D 79 43 69 74 79 31 0E  ...U....MyCity1.\n00B0: 30 0C 06 03 55 04 0A 13   05 4D 79 4F 72 67 31 12  0...U....MyOrg1.\n00C0: 30 10 06 03 55 04 0B 13   09 4D 79 4F 72 67 55 6E  0...U....MyOrgUn\n00D0: 69 74 31 15 30 13 06 03   55 04 03 13 0C 31 39 32  it1.0...U....192\n00E0: 2E 31 36 38 2E 31 2E 31   33 30 1E 17 0D 31 37 30  .168.1.130...170\n00F0: 38 32 33 31 39 33 36 32   36 5A 17 0D 32 37 30 38  823193626Z..2708\n0100: 32 31 31 39 33 36 32 36   5A 30 73 31 12 30 10 06  21193626Z0s1.0..\n0110: 03 55 04 06 13 09 4D 79   43 6F 75 6E 74 72 79 31  .U....MyCountry1\n0120: 11 30 0F 06 03 55 04 08   13 08 4D 79 52 65 67 69  .0...U....MyRegi\n0130: 6F 6E 31 0F 30 0D 06 03   55 04 07 13 06 4D 79 43  on1.0...U....MyC\n0140: 69 74 79 31 0E 30 0C 06   03 55 04 0A 13 05 4D 79  ity1.0...U....My\n0150: 4F 72 67 31 12 30 10 06   03 55 04 0B 13 09 4D 79  Org1.0...U....My\n0160: 4F 72 67 55 6E 69 74 31   15 30 13 06 03 55 04 03  OrgUnit1.0...U..\n0170: 13 0C 31 39 32 2E 31 36   38 2E 31 2E 31 33 30 82  ..192.168.1.130.\n0180: 01 B8 30 82 01 2C 06 07   2A 86 48 CE 38 04 01 30  ..0..,...H.8..0\n0190: 82 01 1F 02 81 81 00 FD   7F 53 81 1D 75 12 29 52  .........S..u.)R\n01A0: DF 4A 9C 2E EC E4 E7 F6   11 B7 52 3C EF 44 00 C3  .J........R<.D..\n01B0: 1E 3F 80 B6 51 26 69 45   5D 40 22 51 FB 59 3D 8D  .?..Q&iE]@\"Q.Y=.\n01C0: 58 FA BF C5 F5 BA 30 F6   CB 9B 55 6C D7 81 3B 80  X.....0...Ul..;.\n01D0: 1D 34 6F F2 66 60 B7 6B   99 50 A5 A4 9F 9F E8 04  .4o.f.k.P......\n01E0: 7B 10 22 C2 4F BB A9 D7   FE B7 C6 1B F8 3B 57 E7  ..\".O........;W.\n01F0: C6 A8 A6 15 0F 04 FB 83   F6 D3 C5 1E C3 02 35 54  ..............5T\n0200: 13 5A 16 91 32 F6 75 F3   AE 2B 61 D7 2A EF F2 22  .Z..2.u..+a.*..\"\n0210: 03 19 9D D1 48 01 C7 02   15 00 97 60 50 8F 15 23  ....H......P..#\n0220: 0B CC B2 92 B9 82 A2 EB   84 0B F0 58 1C F5 02 81  ...........X....\n0230: 81 00 F7 E1 A0 85 D6 9B   3D DE CB BC AB 5C 36 B8  ........=....\\6.\n0240: 57 B9 79 94 AF BB FA 3A   EA 82 F9 57 4C 0B 3D 07  W.y....:...WL.=.\n0250: 82 67 51 59 57 8E BA D4   59 4F E6 71 07 10 81 80  .gQYW...YO.q....\n0260: B4 49 16 71 23 E8 4C 28   16 13 B7 CF 09 32 8C C8  .I.q#.L(.....2..\n0270: A6 E1 3C 16 7A 8B 54 7C   8D 28 E0 A3 AE 1E 2B B3  ..<.z.T..(....+.\n0280: A6 75 91 6E A3 7F 0B FA   21 35 62 F1 FB 62 7A 01  .u.n....!5b..bz.\n0290: 24 3B CC A4 F1 BE A8 51   90 89 A8 83 DF E1 5A E5  $;.....Q......Z.\n02A0: 9F 06 92 8B 66 5E 80 7B   55 25 64 01 4C 3B FE CF  ....f^..U%d.L;..\n02B0: 49 2A 03 81 85 00 02 81   81 00 F6 2F 21 8F 90 1C  I........./!...\n02C0: 60 3E D5 9C F0 A1 B3 01   55 5F A9 DF 12 2E BB DE  >......U_......\n02D0: 22 20 65 17 DB DE 33 01   BD 9E 93 2C BF 54 06 A3  \" e...3....,.T..\n02E0: 88 04 63 DA 34 A0 7E 2B   76 E3 EA 78 1F 00 77 34  ..c.4..+v..x..w4\n02F0: 87 81 84 74 68 15 9D 75   06 45 E8 3C 86 9E 84 A7  ...th..u.E.<....\n0300: 8F 36 1E BB 04 30 3E EE   34 BF A9 F8 95 8F C3 17  .6...0>.4.......\n0310: 46 B4 5A B6 51 DB DD 16   7D 43 02 ED 0A 1C 04 FC  F.Z.Q....C......\n0320: 80 4D 6F 8C 5B 92 A4 EF   CE 07 25 AD 67 47 75 41  .Mo.[.....%.gGuA\n0330: 85 02 3D F8 44 8B 2A A5   B3 85 30 0B 06 07 2A 86  ..=.D.*...0...*.\n0340: 48 CE 38 04 03 05 00 03   2F 00 30 2C 02 14 44 0C  H.8...../.0,..D.\n0350: FC 4B 14 23 76 14 F5 61   74 43 06 40 EC 9C 13 06  .K.#v..atC.@....\n0360: 7C 01 02 14 06 64 C6 00   93 89 66 C8 CB 0E 76 E5  .....d....f...v.\n0370: 94 49 4B AE FA 20 E8 7C   0C 00 01 57 00 60 E9 E6  .IK.. .....W...\n0380: 42 59 9D 35 5F 37 C9 7F   FD 35 67 12 0B 8E 25 C9  BY.5_7...5g...%.\n0390: CD 43 E9 27 B3 A9 67 0F   BE C5 D8 90 14 19 22 D2  .C.'..g.......\".\n03A0: C3 B3 AD 24 80 09 37 99   86 9D 1E 84 6A AB 49 FA  ...$..7.....j.I.\n03B0: B0 AD 26 D2 CE 6A 22 21   9D 47 0B CE 7D 77 7D 4A  ..&..j\"!.G...w.J\n03C0: 21 FB E9 C2 70 B5 7F 60   70 02 F3 CE F8 39 36 94  !...p..p....96.\n03D0: CF 45 EE 36 88 C1 1A 8C   56 AB 12 7A 3D AF 00 60  .E.6....V..z=..\n03E0: 30 47 0A D5 A0 05 FB 14   CE 2D 9D CD 87 E3 8B C7  0G.......-......\n03F0: D1 B1 C5 FA CB AE CB E9   5F 19 0A A7 A3 1D 23 C4  .............#.\n0400: DB BC BE 06 17 45 44 40   1A 5B 2C 02 09 65 D8 C2  .....ED@.[,..e..\n0410: BD 21 71 D3 66 84 45 77   1F 74 BA 08 4D 20 29 D8  .!q.f.Ew.t..M ).\n0420: 3C 1C 15 85 47 F3 A9 F1   A2 71 5B E2 3D 51 AE 4D  <...G....q[.=Q.M\n0430: 3E 5A 1F 6A 70 64 F3 16   93 3A 34 6D 3F 52 92 52  >Z.jpd...:4m?R.R\n0440: 00 60 21 0F B2 62 2F A2   E7 A3 F6 80 69 E4 A5 2D  .!..b/.....i..-\n0450: DB E8 D6 86 FD 3D 50 B9   8C 24 52 6F 56 FD AB 79  .....=P..$RoV..y\n0460: 9F EC 0D F1 5C D1 F2 EA   09 61 09 FF 05 EB 28 8A  ....\\....a....(.\n0470: D3 B4 2A C0 CC F2 96 4A   7A D7 BF 67 1E 5E 9D 25  ..*....Jz..g.^.%\n0480: DE 94 D8 DC 6A F6 C3 1C   EF 13 38 0B 99 D8 1A 01  ....j.....8.....\n0490: FC 9A 64 C8 CA 29 2A 53   8D 8F 13 01 E9 A3 04 12  ..d..)*S........\n04A0: 0E 29 00 2F 30 2D 02 14   6A 4C D5 F9 E8 F1 B6 1E  .)./0-..jL......\n04B0: D9 2C 95 01 8D 69 98 AA   04 6E 94 49 02 15 00 93  .,...i...n.I....\n04C0: 71 D6 12 DE EF 7E C9 A6   58 07 31 85 53 71 67 00  q.......X.1.Sqg.\n04D0: 30 73 46 0E 00 00 00                               0sF....\npool-1-thread-1, WRITE: TLSv1 Handshake, length = 1239\n[Raw write]: length = 1244\n0000: 16 03 01 04 D7 02 00 00   46 03 01 59 9E BC 65 CB  ........F..Y..e.\n0010: 23 5D CB 38 FE 6D BA 56   A9 D9 2B BC 7F 9C D8 5F  #].8.m.V..+...._\n0020: 1A 05 36 FE D1 12 ED AA   8D 48 9F 20 59 9E BC 65  ..6......H. Y..e\n0030: A1 D8 76 11 90 D9 50 1B   86 4A 3A 20 0A 13 68 F7  ..v...P..J: ..h.\n0040: 04 D7 77 DE F9 EA 6C 62   5C 5D 0D 78 00 32 00 0B  ..w...lb\\].x.2..\n0050: 00 03 2A 00 03 27 00 03   24 30 82 03 20 30 82 02  ..*..'..$0.. 0..\n0060: DE A0 03 02 01 02 02 04   59 9D D9 3A 30 0B 06 07  ........Y..:0...\n0070: 2A 86 48 CE 38 04 03 05   00 30 73 31 12 30 10 06  *.H.8....0s1.0..\n0080: 03 55 04 06 13 09 4D 79   43 6F 75 6E 74 72 79 31  .U....MyCountry1\n0090: 11 30 0F 06 03 55 04 08   13 08 4D 79 52 65 67 69  .0...U....MyRegi\n00A0: 6F 6E 31 0F 30 0D 06 03   55 04 07 13 06 4D 79 43  on1.0...U....MyC\n00B0: 69 74 79 31 0E 30 0C 06   03 55 04 0A 13 05 4D 79  ity1.0...U....My\n00C0: 4F 72 67 31 12 30 10 06   03 55 04 0B 13 09 4D 79  Org1.0...U....My\n00D0: 4F 72 67 55 6E 69 74 31   15 30 13 06 03 55 04 03  OrgUnit1.0...U..\n00E0: 13 0C 31 39 32 2E 31 36   38 2E 31 2E 31 33 30 1E  ..192.168.1.130.\n00F0: 17 0D 31 37 30 38 32 33   31 39 33 36 32 36 5A 17  ..170823193626Z.\n0100: 0D 32 37 30 38 32 31 31   39 33 36 32 36 5A 30 73  .270821193626Z0s\n0110: 31 12 30 10 06 03 55 04   06 13 09 4D 79 43 6F 75  1.0...U....MyCou\n0120: 6E 74 72 79 31 11 30 0F   06 03 55 04 08 13 08 4D  ntry1.0...U....M\n0130: 79 52 65 67 69 6F 6E 31   0F 30 0D 06 03 55 04 07  yRegion1.0...U..\n0140: 13 06 4D 79 43 69 74 79   31 0E 30 0C 06 03 55 04  ..MyCity1.0...U.\n0150: 0A 13 05 4D 79 4F 72 67   31 12 30 10 06 03 55 04  ...MyOrg1.0...U.\n0160: 0B 13 09 4D 79 4F 72 67   55 6E 69 74 31 15 30 13  ...MyOrgUnit1.0.\n0170: 06 03 55 04 03 13 0C 31   39 32 2E 31 36 38 2E 31  ..U....192.168.1\n0180: 2E 31 33 30 82 01 B8 30   82 01 2C 06 07 2A 86 48  .130...0..,..*.H\n0190: CE 38 04 01 30 82 01 1F   02 81 81 00 FD 7F 53 81  .8..0.........S.\n01A0: 1D 75 12 29 52 DF 4A 9C   2E EC E4 E7 F6 11 B7 52  .u.)R.J........R\n01B0: 3C EF 44 00 C3 1E 3F 80   B6 51 26 69 45 5D 40 22  <.D...?..Q&iE]@\"\n01C0: 51 FB 59 3D 8D 58 FA BF   C5 F5 BA 30 F6 CB 9B 55  Q.Y=.X.....0...U\n01D0: 6C D7 81 3B 80 1D 34 6F   F2 66 60 B7 6B 99 50 A5  l..;..4o.f.k.P.\n01E0: A4 9F 9F E8 04 7B 10 22   C2 4F BB A9 D7 FE B7 C6  .......\".O......\n01F0: 1B F8 3B 57 E7 C6 A8 A6   15 0F 04 FB 83 F6 D3 C5  ..;W............\n0200: 1E C3 02 35 54 13 5A 16   91 32 F6 75 F3 AE 2B 61  ...5T.Z..2.u..+a\n0210: D7 2A EF F2 22 03 19 9D   D1 48 01 C7 02 15 00 97  ...\"....H......\n0220: 60 50 8F 15 23 0B CC B2   92 B9 82 A2 EB 84 0B F0  P..#...........\n0230: 58 1C F5 02 81 81 00 F7   E1 A0 85 D6 9B 3D DE CB  X............=..\n0240: BC AB 5C 36 B8 57 B9 79   94 AF BB FA 3A EA 82 F9  ..\\6.W.y....:...\n0250: 57 4C 0B 3D 07 82 67 51   59 57 8E BA D4 59 4F E6  WL.=..gQYW...YO.\n0260: 71 07 10 81 80 B4 49 16   71 23 E8 4C 28 16 13 B7  q.....I.q#.L(...\n0270: CF 09 32 8C C8 A6 E1 3C   16 7A 8B 54 7C 8D 28 E0  ..2....<.z.T..(.\n0280: A3 AE 1E 2B B3 A6 75 91   6E A3 7F 0B FA 21 35 62  ...+..u.n....!5b\n0290: F1 FB 62 7A 01 24 3B CC   A4 F1 BE A8 51 90 89 A8  ..bz.$;.....Q...\n02A0: 83 DF E1 5A E5 9F 06 92   8B 66 5E 80 7B 55 25 64  ...Z.....f^..U%d\n02B0: 01 4C 3B FE CF 49 2A 03   81 85 00 02 81 81 00 F6  .L;..I*.........\n02C0: 2F 21 8F 90 1C 60 3E D5   9C F0 A1 B3 01 55 5F A9  /!...>......U_.\n02D0: DF 12 2E BB DE 22 20 65   17 DB DE 33 01 BD 9E 93  .....\" e...3....\n02E0: 2C BF 54 06 A3 88 04 63   DA 34 A0 7E 2B 76 E3 EA  ,.T....c.4..+v..\n02F0: 78 1F 00 77 34 87 81 84   74 68 15 9D 75 06 45 E8  x..w4...th..u.E.\n0300: 3C 86 9E 84 A7 8F 36 1E   BB 04 30 3E EE 34 BF A9  <.....6...0>.4..\n0310: F8 95 8F C3 17 46 B4 5A   B6 51 DB DD 16 7D 43 02  .....F.Z.Q....C.\n0320: ED 0A 1C 04 FC 80 4D 6F   8C 5B 92 A4 EF CE 07 25  ......Mo.[.....%\n0330: AD 67 47 75 41 85 02 3D   F8 44 8B 2A A5 B3 85 30  .gGuA..=.D....0\n0340: 0B 06 07 2A 86 48 CE 38   04 03 05 00 03 2F 00 30  ....H.8...../.0\n0350: 2C 02 14 44 0C FC 4B 14   23 76 14 F5 61 74 43 06  ,..D..K.#v..atC.\n0360: 40 EC 9C 13 06 7C 01 02   14 06 64 C6 00 93 89 66  @.........d....f\n0370: C8 CB 0E 76 E5 94 49 4B   AE FA 20 E8 7C 0C 00 01  ...v..IK.. .....\n0380: 57 00 60 E9 E6 42 59 9D   35 5F 37 C9 7F FD 35 67  W...BY.5_7...5g\n0390: 12 0B 8E 25 C9 CD 43 E9   27 B3 A9 67 0F BE C5 D8  ...%..C.'..g....\n03A0: 90 14 19 22 D2 C3 B3 AD   24 80 09 37 99 86 9D 1E  ...\"....$..7....\n03B0: 84 6A AB 49 FA B0 AD 26   D2 CE 6A 22 21 9D 47 0B  .j.I...&..j\"!.G.\n03C0: CE 7D 77 7D 4A 21 FB E9   C2 70 B5 7F 60 70 02 F3  ..w.J!...p..p..\n03D0: CE F8 39 36 94 CF 45 EE   36 88 C1 1A 8C 56 AB 12  ..96..E.6....V..\n03E0: 7A 3D AF 00 60 30 47 0A   D5 A0 05 FB 14 CE 2D 9D  z=..0G.......-.\n03F0: CD 87 E3 8B C7 D1 B1 C5   FA CB AE CB E9 5F 19 0A  ............._..\n0400: A7 A3 1D 23 C4 DB BC BE   06 17 45 44 40 1A 5B 2C  ...#......ED@.[,\n0410: 02 09 65 D8 C2 BD 21 71   D3 66 84 45 77 1F 74 BA  ..e...!q.f.Ew.t.\n0420: 08 4D 20 29 D8 3C 1C 15   85 47 F3 A9 F1 A2 71 5B  .M ).<...G....q[\n0430: E2 3D 51 AE 4D 3E 5A 1F   6A 70 64 F3 16 93 3A 34  .=Q.M>Z.jpd...:4\n0440: 6D 3F 52 92 52 00 60 21   0F B2 62 2F A2 E7 A3 F6  m?R.R.!..b/....\n0450: 80 69 E4 A5 2D DB E8 D6   86 FD 3D 50 B9 8C 24 52  .i..-.....=P..$R\n0460: 6F 56 FD AB 79 9F EC 0D   F1 5C D1 F2 EA 09 61 09  oV..y........a.\n0470: FF 05 EB 28 8A D3 B4 2A   C0 CC F2 96 4A 7A D7 BF  ...(.......Jz..\n0480: 67 1E 5E 9D 25 DE 94 D8   DC 6A F6 C3 1C EF 13 38  g.^.%....j.....8\n0490: 0B 99 D8 1A 01 FC 9A 64   C8 CA 29 2A 53 8D 8F 13  .......d..)*S...\n04A0: 01 E9 A3 04 12 0E 29 00   2F 30 2D 02 14 6A 4C D5  ......)./0-..jL.\n04B0: F9 E8 F1 B6 1E D9 2C 95   01 8D 69 98 AA 04 6E 94  ......,...i...n.\n04C0: 49 02 15 00 93 71 D6 12   DE EF 7E C9 A6 58 07 31  I....q.......X.1\n04D0: 85 53 71 67 00 30 73 46   0E 00 00 00              .Sqg.0sF....\nWebsocketSelector11, called closeOutbound()\nWebsocketSelector11, closeOutboundInternal()\nWebsocketSelector11, SEND TLSv1 ALERT:  warning, description = close_notify\nWebsocketSelector11, WRITE: TLSv1 Alert, length = 2\n[Raw write]: length = 7\n0000: 15 03 01 00 02 01 00                               .......\nRemoving connection which is not in the connections collection! Possible no handshake recieved! org.java_websocket.WebSocketImpl@1eb5666\n\nAlso there is a list of all supported protocols and ciphers (engine.getEnabledProtocols() and engine.getEnabledCipherSuites()) : \n\ncipher : SSL_RSA_WITH_RC4_128_MD5\ncipher : SSL_RSA_WITH_RC4_128_SHA\ncipher : TLS_RSA_WITH_AES_128_CBC_SHA\ncipher : TLS_DHE_RSA_WITH_AES_128_CBC_SHA\ncipher : TLS_DHE_DSS_WITH_AES_128_CBC_SHA\ncipher : SSL_RSA_WITH_3DES_EDE_CBC_SHA\ncipher : SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA\ncipher : SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA\ncipher : SSL_RSA_WITH_DES_CBC_SHA\ncipher : SSL_DHE_RSA_WITH_DES_CBC_SHA\ncipher : SSL_DHE_DSS_WITH_DES_CBC_SHA\ncipher : SSL_RSA_EXPORT_WITH_RC4_40_MD5\ncipher : SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\ncipher : SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\ncipher : SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\nProtocol : SSLv2Hello\nProtocol : SSLv3\nProtocol : TLSv1\n\nWhich TLS version should i use or ciphers/protocols !!!\nAny idea !!\nGreetings\nDayssam\n. Thank you very much @marci4 \nThe problem was the generated keystore.\n@ first time i used the cmd as mentionned in the source code (Keystore with certificate created like so (in JKS format))\n\nkeytool -genkey -validity 3650 -keystore \"keystore.jks\" -storepass \"storepassword\" -keypass \"keypassword\" -alias \"default\" -dname \"CN=127.0.0.1, OU=MyOrgUnit, O=MyOrg, L=MyCity, S=MyRegion, C=MyCountry\"\n\nThis certificate is not supported by IE 11\nSo i generated a second certificate with SHA256withRSA Algorithm\n\nkeytool -genkey -validity 3650 -keyalg RSA -sigalg SHA256withRSA -keystore \"keystore.jks\" -storepass \"storepassword\" -keypass \"keypassword\" -alias \"default\" -dname \"CN=127.0.0.1, OU=MyOrgUnit, O=MyOrg, L=MyCity, S=MyRegion, C=MyCountry\"\n\nThe 2nd one is working like a charm.\nThank you for your time @marci4 \n. Hi @marci4 \nI got the same error with the curent master sources\n```\n\nfound key for : localhost16\nchain [0] = [\n[\n  Version: V1\n  Subject: CN=localhost, OU=sofisoft, O=SofiSoft, L=Casablanca, ST=Casablanca, C=MA\n  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11\nKey:  Sun RSA public key, 1024 bits\n  modulus: 123305967866127895135250096688235484937121945450718380358917371399124253346709386004466389104242421166360785344280077222004077082809461310900467735014154077261856903926817905422244941920913784967092867528081733933790245573579176596115386851419936178686024588398583026693226855371939187095372462213116070534287\n  public exponent: 65537\n  Validity: [From: Thu Sep 28 18:05:02 WET 2017,\n               To: Mon Sep 28 18:05:02 WET 2037]\n  Issuer: CN=localhost, OU=sofisoft, O=SofiSoft, L=Casablanca, ST=Casablanca, C=MA\n  SerialNumber: [    59cd39ce]\n]\n  Algorithm: [SHA256withRSA]\n  Signature:\n0000: 18 9A 4A FA 1B 95 C1 93   F2 42 E3 01 B2 AB 19 66  ..J......B.....f\n0010: 4B 8D 0B 7C D1 DD DC DF   21 EE 95 E5 70 CD 9A 6B  K.......!...p..k\n0020: A3 A4 6E E4 76 80 A9 A2   DF D9 90 0E 11 D9 C6 2D  ..n.v..........-\n0030: 39 E0 A5 48 E7 D4 0D 38   87 37 1B 73 6D B4 39 F9  9..H...8.7.sm.9.\n0040: 70 2F 19 B3 C6 C8 17 16   56 5F 33 C3 2D 89 5E 9D  p/......V_3.-.^.\n0050: 81 F5 79 50 BD 05 E1 59   5F 62 50 55 B1 75 CF 49  ..yP...Y_bPU.u.I\n0060: E1 36 73 DF 9F DD FB 9D   65 45 2C 0B A1 25 13 FE  .6s.....eE,..%..\n0070: 5B 16 1D 27 46 E8 74 16   C9 8F FD A3 4D 9C BE F2  [..'F.t.....M...\n]\n\nadding as trusted cert:\n  Subject: CN=localhost, OU=sofisoft, O=SofiSoft, L=Casablanca, ST=Casablanca, C=MA\n  Issuer:  CN=localhost, OU=sofisoft, O=SofiSoft, L=Casablanca, ST=Casablanca, C=MA\n  Algorithm: RSA; Serial number: 0x59cd39ce\n  Valid from Thu Sep 28 18:05:02 WET 2017 until Mon Sep 28 18:05:02 WET 2037\ntrigger seeding of SecureRandom\ndone seeding SecureRandom\nWSServer started on port: 6789\nConnection lost timer started\nFinished DialogBox\nUsing SSLEngineImpl.\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA\nAllow unsafe renegotiation: false\nAllow legacy hello messages: true\nIs initial handshake: true\nIs secure renegotiation: false\n[Raw read]: length = 5\n0000: 16 03 01 00 D5                                     .....\n[Raw read]: length = 213\n0000: 01 00 00 D1 03 03 2C 4C   01 A8 42 E9 1A 85 90 08  ......,L..B.....\n0010: EF 03 B2 DB 35 3F F1 15   E6 B2 54 45 86 67 16 3A  ....5?....TE.g.:\n0020: D6 4C 43 04 67 05 20 59   CD 42 F2 2D AE 3E D8 4B  .LC.g. Y.B.-.>.K\n0030: 86 5B C5 26 86 78 86 EA   4B D5 07 2E 9B E6 9A E0  .[.&.x..K.......\n0040: C4 EA FB F5 4C CE 7E 00   18 C0 2B C0 2F C0 2C C0  ....L.....+./.,.\n0050: 30 C0 13 C0 14 00 9C 00   9D 00 2F 00 35 00 0A 00  0........./.5...\n0060: FF 01 00 00 70 00 00 00   0E 00 0C 00 00 09 6C 6F  ....p.........lo\n0070: 63 61 6C 68 6F 73 74 00   0B 00 04 03 00 01 02 00  calhost.........\n0080: 0A 00 1C 00 1A 00 17 00   19 00 1C 00 1B 00 18 00  ................\n0090: 1A 00 16 00 0E 00 0D 00   0B 00 0C 00 09 00 0A 00  ................\n00A0: 23 00 00 00 0D 00 20 00   1E 06 01 06 02 06 03 05  #..... .........\n00B0: 01 05 02 05 03 04 01 04   02 04 03 03 01 03 02 03  ................\n00C0: 03 02 01 02 02 02 03 00   05 00 05 01 00 00 00 00  ................\n00D0: 00 0F 00 01 01                                     .....\nWebsocketSelector10, READ: TLSv1 Handshake, length = 213\n ClientHello, TLSv1.2\nRandomCookie:  GMT: 743178408 bytes = { 66, 233, 26, 133, 144, 8, 239, 3, 178, 219, 53, 63, 241, 21, 230, 178, 84, 69, 134, 103, 22, 58, 214, 76, 67, 4, 103, 5 }\nSession ID:  {89, 205, 66, 242, 45, 174, 62, 216, 75, 134, 91, 197, 38, 134, 120, 134, 234, 75, 213, 7, 46, 155, 230, 154, 224, 196, 234, 251, 245, 76, 206, 126}\nCipher Suites: [TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]\nCompression Methods:  { 0 }\nExtension server_name, server_name: [host_name: localhost]\nExtension ec_point_formats, formats: [uncompressed, ansiX962_compressed_prime, ansiX962_compressed_char2]\nExtension elliptic_curves, curve names: {secp256r1, secp521r1, unknown curve 28, unknown curve 27, secp384r1, unknown curve 26, secp256k1, sect571r1, sect571k1, sect409k1, sect409r1, sect283k1, sect283r1}\nUnsupported extension type_35, data: \nExtension signature_algorithms, signature_algorithms: SHA512withRSA, Unknown (hash:0x6, signature:0x2), SHA512withECDSA, SHA384withRSA, Unknown (hash:0x5, signature:0x2), SHA384withECDSA, SHA256withRSA, Unknown (hash:0x4, signature:0x2), SHA256withECDSA, SHA224withRSA, Unknown (hash:0x3, signature:0x2), SHA224withECDSA, SHA1withRSA, SHA1withDSA, SHA1withECDSA\nUnsupported extension status_request, data: 01:00:00:00:00\nUnsupported extension type_15, data: 01\n\n[read] MD5 and SHA1 hashes:  len = 213\n0000: 01 00 00 D1 03 03 2C 4C   01 A8 42 E9 1A 85 90 08  ......,L..B.....\n0010: EF 03 B2 DB 35 3F F1 15   E6 B2 54 45 86 67 16 3A  ....5?....TE.g.:\n0020: D6 4C 43 04 67 05 20 59   CD 42 F2 2D AE 3E D8 4B  .LC.g. Y.B.-.>.K\n0030: 86 5B C5 26 86 78 86 EA   4B D5 07 2E 9B E6 9A E0  .[.&.x..K.......\n0040: C4 EA FB F5 4C CE 7E 00   18 C0 2B C0 2F C0 2C C0  ....L.....+./.,.\n0050: 30 C0 13 C0 14 00 9C 00   9D 00 2F 00 35 00 0A 00  0........./.5...\n0060: FF 01 00 00 70 00 00 00   0E 00 0C 00 00 09 6C 6F  ....p.........lo\n0070: 63 61 6C 68 6F 73 74 00   0B 00 04 03 00 01 02 00  calhost.........\n0080: 0A 00 1C 00 1A 00 17 00   19 00 1C 00 1B 00 18 00  ................\n0090: 1A 00 16 00 0E 00 0D 00   0B 00 0C 00 09 00 0A 00  ................\n00A0: 23 00 00 00 0D 00 20 00   1E 06 01 06 02 06 03 05  #..... .........\n00B0: 01 05 02 05 03 04 01 04   02 04 03 03 01 03 02 03  ................\n00C0: 03 02 01 02 02 02 03 00   05 00 05 01 00 00 00 00  ................\n00D0: 00 0F 00 01 01                                     .....\n%% Initialized:  [Session-1, SSL_NULL_WITH_NULL_NULL]\nmatching alias: localhost16\n%% Negotiating:  [Session-1, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA]\n ServerHello, TLSv1.2\nRandomCookie:  GMT: 1489851951 bytes = { 251, 148, 140, 169, 227, 249, 120, 76, 246, 38, 90, 104, 113, 149, 243, 142, 132, 78, 4, 48, 36, 123, 125, 6, 221, 62, 5, 136 }\nSession ID:  {89, 205, 86, 47, 95, 210, 14, 223, 235, 240, 59, 56, 115, 215, 246, 246, 159, 36, 32, 243, 88, 23, 59, 53, 0, 159, 224, 70, 38, 82, 248, 198}\nCipher Suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\nCompression Method: 0\nExtension renegotiation_info, renegotiated_connection: \n\nCipher suite:  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n*** Certificate chain\nchain [0] = [\n[\n  Version: V1\n  Subject: CN=localhost, OU=sofisoft, O=SofiSoft, L=Casablanca, ST=Casablanca, C=MA\n  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11\nKey:  Sun RSA public key, 1024 bits\n  modulus: 123305967866127895135250096688235484937121945450718380358917371399124253346709386004466389104242421166360785344280077222004077082809461310900467735014154077261856903926817905422244941920913784967092867528081733933790245573579176596115386851419936178686024588398583026693226855371939187095372462213116070534287\n  public exponent: 65537\n  Validity: [From: Thu Sep 28 18:05:02 WET 2017,\n               To: Mon Sep 28 18:05:02 WET 2037]\n  Issuer: CN=localhost, OU=sofisoft, O=SofiSoft, L=Casablanca, ST=Casablanca, C=MA\n  SerialNumber: [    59cd39ce]\n]\n  Algorithm: [SHA256withRSA]\n  Signature:\n0000: 18 9A 4A FA 1B 95 C1 93   F2 42 E3 01 B2 AB 19 66  ..J......B.....f\n0010: 4B 8D 0B 7C D1 DD DC DF   21 EE 95 E5 70 CD 9A 6B  K.......!...p..k\n0020: A3 A4 6E E4 76 80 A9 A2   DF D9 90 0E 11 D9 C6 2D  ..n.v..........-\n0030: 39 E0 A5 48 E7 D4 0D 38   87 37 1B 73 6D B4 39 F9  9..H...8.7.sm.9.\n0040: 70 2F 19 B3 C6 C8 17 16   56 5F 33 C3 2D 89 5E 9D  p/......V_3.-.^.\n0050: 81 F5 79 50 BD 05 E1 59   5F 62 50 55 B1 75 CF 49  ..yP...Y_bPU.u.I\n0060: E1 36 73 DF 9F DD FB 9D   65 45 2C 0B A1 25 13 FE  .6s.....eE,..%..\n0070: 5B 16 1D 27 46 E8 74 16   C9 8F FD A3 4D 9C BE F2  [..'F.t.....M...\n]\n\n ECDH ServerKeyExchange\nSignature Algorithm SHA512withRSA\nServer key: Sun EC public key, 256 bits\n  public x coord: 52488722484077799282330395125011254755727576858610461731640897288562032674207\n  public y coord: 98977771087201195394399530651292200955473163300636549869261006251938011542125\n  parameters: secp256r1 [NIST P-256, X9.62 prime256v1] (1.2.840.10045.3.1.7)\n ServerHelloDone\n[write] MD5 and SHA1 hashes:  len = 900\n0000: 02 00 00 4D 03 03 59 CD   56 2F FB 94 8C A9 E3 F9  ...M..Y.V/......\n0010: 78 4C F6 26 5A 68 71 95   F3 8E 84 4E 04 30 24 7B  xL.&Zhq....N.0$.\n0020: 7D 06 DD 3E 05 88 20 59   CD 56 2F 5F D2 0E DF EB  ...>.. Y.V/_....\n0030: F0 3B 38 73 D7 F6 F6 9F   24 20 F3 58 17 3B 35 00  .;8s....$ .X.;5.\n0040: 9F E0 46 26 52 F8 C6 C0   13 00 00 05 FF 01 00 01  ..F&R...........\n0050: 00 0B 00 02 5E 00 02 5B   00 02 58 30 82 02 54 30  ....^..[..X0..T0\n0060: 82 01 BD 02 04 59 CD 39   CE 30 0D 06 09 2A 86 48  .....Y.9.0....H\n0070: 86 F7 0D 01 01 0B 05 00   30 71 31 0B 30 09 06 03  ........0q1.0...\n0080: 55 04 06 13 02 4D 41 31   13 30 11 06 03 55 04 08  U....MA1.0...U..\n0090: 0C 0A 43 61 73 61 62 6C   61 6E 63 61 31 13 30 11  ..Casablanca1.0.\n00A0: 06 03 55 04 07 0C 0A 43   61 73 61 62 6C 61 6E 63  ..U....Casablanc\n00B0: 61 31 11 30 0F 06 03 55   04 0A 0C 08 53 6F 66 69  a1.0...U....Sofi\n00C0: 53 6F 66 74 31 11 30 0F   06 03 55 04 0B 0C 08 73  Soft1.0...U....s\n00D0: 6F 66 69 73 6F 66 74 31   12 30 10 06 03 55 04 03  ofisoft1.0...U..\n00E0: 0C 09 6C 6F 63 61 6C 68   6F 73 74 30 1E 17 0D 31  ..localhost0...1\n00F0: 37 30 39 32 38 31 38 30   35 30 32 5A 17 0D 33 37  70928180502Z..37\n0100: 30 39 32 38 31 38 30 35   30 32 5A 30 71 31 0B 30  0928180502Z0q1.0\n0110: 09 06 03 55 04 06 13 02   4D 41 31 13 30 11 06 03  ...U....MA1.0...\n0120: 55 04 08 0C 0A 43 61 73   61 62 6C 61 6E 63 61 31  U....Casablanca1\n0130: 13 30 11 06 03 55 04 07   0C 0A 43 61 73 61 62 6C  .0...U....Casabl\n0140: 61 6E 63 61 31 11 30 0F   06 03 55 04 0A 0C 08 53  anca1.0...U....S\n0150: 6F 66 69 53 6F 66 74 31   11 30 0F 06 03 55 04 0B  ofiSoft1.0...U..\n0160: 0C 08 73 6F 66 69 73 6F   66 74 31 12 30 10 06 03  ..sofisoft1.0...\n0170: 55 04 03 0C 09 6C 6F 63   61 6C 68 6F 73 74 30 81  U....localhost0.\n0180: 9F 30 0D 06 09 2A 86 48   86 F7 0D 01 01 01 05 00  .0....H........\n0190: 03 81 8D 00 30 81 89 02   81 81 00 AF 97 F1 60 18  ....0..........\n01A0: CC C0 0B 32 DC 81 A4 20   6C 32 D8 15 D9 E1 7D 99  ...2... l2......\n01B0: 56 8F 63 ED F7 40 2C 82   39 3C 5C 86 60 63 5C 82  V.c..@,.9<\\.c.\n01C0: BD 07 32 40 58 F0 F2 FE   FF 28 A6 35 33 65 62 45  ..2@X....(.53ebE\n01D0: 5D 9D 73 66 50 8B F1 47   1A 1D 74 BA 5A 7A 21 C6  ].sfP..G..t.Zz!.\n01E0: F2 5D 80 BC D0 A1 0E 0B   92 59 93 A5 B0 9E 12 4F  .].......Y.....O\n01F0: D9 7F 18 83 C2 40 70 DB   8C BB 47 AE 54 DE 9A 05  .....@p...G.T...\n0200: 49 F8 43 29 95 9F 4F 5C   B2 D4 6F A1 85 3B 0D FC  I.C)..O..o..;..\n0210: 5B FF 05 21 DC 1C 5A 7F   99 1C 8F 02 03 01 00 01  [..!..Z.........\n0220: 30 0D 06 09 2A 86 48 86   F7 0D 01 01 0B 05 00 03  0....H.........\n0230: 81 81 00 18 9A 4A FA 1B   95 C1 93 F2 42 E3 01 B2  .....J......B...\n0240: AB 19 66 4B 8D 0B 7C D1   DD DC DF 21 EE 95 E5 70  ..fK.......!...p\n0250: CD 9A 6B A3 A4 6E E4 76   80 A9 A2 DF D9 90 0E 11  ..k..n.v........\n0260: D9 C6 2D 39 E0 A5 48 E7   D4 0D 38 87 37 1B 73 6D  ..-9..H...8.7.sm\n0270: B4 39 F9 70 2F 19 B3 C6   C8 17 16 56 5F 33 C3 2D  .9.p/......V_3.-\n0280: 89 5E 9D 81 F5 79 50 BD   05 E1 59 5F 62 50 55 B1  .^...yP...Y_bPU.\n0290: 75 CF 49 E1 36 73 DF 9F   DD FB 9D 65 45 2C 0B A1  u.I.6s.....eE,..\n02A0: 25 13 FE 5B 16 1D 27 46   E8 74 16 C9 8F FD A3 4D  %..[..'F.t.....M\n02B0: 9C BE F2 0C 00 00 C9 03   00 17 41 04 74 0B 90 6A  ..........A.t..j\n02C0: CB F2 40 3A 45 82 AF B1   5A 68 41 AD BC 68 9A E5  ..@:E...ZhA..h..\n02D0: 31 44 0D D9 08 CB 80 EC   DA DA 85 9F DA D3 6E E4  1D............n.\n02E0: FA D3 0E 7C CF 23 FB FB   58 83 34 0E D3 F0 34 26  .....#..X.4...4&\n02F0: 6A 0F 3B 3A 72 41 66 CC   C3 69 F2 6D 06 01 00 80  j.;:rAf..i.m....\n0300: 7C 2F 96 07 2E A2 66 71   95 7F 57 33 D4 6E 1D C2  ./....fq..W3.n..\n0310: 34 AD F5 58 73 C3 1E 6C   CB 90 86 A4 9E 00 2E 2E  4..Xs..l........\n0320: E3 F2 26 40 A8 26 AE AD   33 84 14 93 34 AA 5E D4  ..&@.&..3...4.^.\n0330: 88 3C 19 B5 C5 1A 1A 6B   F1 04 D3 5B 9D 01 05 10  .<.....k...[....\n0340: D7 9B 35 AE 85 A5 E0 19   4D 86 91 DB 6A 6C 3E 65  ..5.....M...jl>e\n0350: F8 F5 24 FF 5B 6E 92 93   CB F0 71 9B 8C 5B E4 CD  ..$.[n....q..[..\n0360: FB A2 E6 DC 14 C2 B2 17   6C 31 79 E2 5D D9 11 B9  ........l1y.]...\n0370: 7C A8 35 10 17 E2 95 45   A5 50 46 AE 51 60 19 63  ..5....E.PF.Q.c\n0380: 0E 00 00 00                                        ....\npool-1-thread-1, WRITE: TLSv1.2 Handshake, length = 900\n[Raw write]: length = 905\n0000: 16 03 03 03 84 02 00 00   4D 03 03 59 CD 56 2F FB  ........M..Y.V/.\n0010: 94 8C A9 E3 F9 78 4C F6   26 5A 68 71 95 F3 8E 84  .....xL.&Zhq....\n0020: 4E 04 30 24 7B 7D 06 DD   3E 05 88 20 59 CD 56 2F  N.0$....>.. Y.V/\n0030: 5F D2 0E DF EB F0 3B 38   73 D7 F6 F6 9F 24 20 F3  _.....;8s....$ .\n0040: 58 17 3B 35 00 9F E0 46   26 52 F8 C6 C0 13 00 00  X.;5...F&R......\n0050: 05 FF 01 00 01 00 0B 00   02 5E 00 02 5B 00 02 58  .........^..[..X\n0060: 30 82 02 54 30 82 01 BD   02 04 59 CD 39 CE 30 0D  0..T0.....Y.9.0.\n0070: 06 09 2A 86 48 86 F7 0D   01 01 0B 05 00 30 71 31  ..*.H........0q1\n0080: 0B 30 09 06 03 55 04 06   13 02 4D 41 31 13 30 11  .0...U....MA1.0.\n0090: 06 03 55 04 08 0C 0A 43   61 73 61 62 6C 61 6E 63  ..U....Casablanc\n00A0: 61 31 13 30 11 06 03 55   04 07 0C 0A 43 61 73 61  a1.0...U....Casa\n00B0: 62 6C 61 6E 63 61 31 11   30 0F 06 03 55 04 0A 0C  blanca1.0...U...\n00C0: 08 53 6F 66 69 53 6F 66   74 31 11 30 0F 06 03 55  .SofiSoft1.0...U\n00D0: 04 0B 0C 08 73 6F 66 69   73 6F 66 74 31 12 30 10  ....sofisoft1.0.\n00E0: 06 03 55 04 03 0C 09 6C   6F 63 61 6C 68 6F 73 74  ..U....localhost\n00F0: 30 1E 17 0D 31 37 30 39   32 38 31 38 30 35 30 32  0...170928180502\n0100: 5A 17 0D 33 37 30 39 32   38 31 38 30 35 30 32 5A  Z..370928180502Z\n0110: 30 71 31 0B 30 09 06 03   55 04 06 13 02 4D 41 31  0q1.0...U....MA1\n0120: 13 30 11 06 03 55 04 08   0C 0A 43 61 73 61 62 6C  .0...U....Casabl\n0130: 61 6E 63 61 31 13 30 11   06 03 55 04 07 0C 0A 43  anca1.0...U....C\n0140: 61 73 61 62 6C 61 6E 63   61 31 11 30 0F 06 03 55  asablanca1.0...U\n0150: 04 0A 0C 08 53 6F 66 69   53 6F 66 74 31 11 30 0F  ....SofiSoft1.0.\n0160: 06 03 55 04 0B 0C 08 73   6F 66 69 73 6F 66 74 31  ..U....sofisoft1\n0170: 12 30 10 06 03 55 04 03   0C 09 6C 6F 63 61 6C 68  .0...U....localh\n0180: 6F 73 74 30 81 9F 30 0D   06 09 2A 86 48 86 F7 0D  ost0..0...*.H...\n0190: 01 01 01 05 00 03 81 8D   00 30 81 89 02 81 81 00  .........0......\n01A0: AF 97 F1 60 18 CC C0 0B   32 DC 81 A4 20 6C 32 D8  .......2... l2.\n01B0: 15 D9 E1 7D 99 56 8F 63   ED F7 40 2C 82 39 3C 5C  .....V.c..@,.9<\\\n01C0: 86 60 63 5C 82 BD 07 32   40 58 F0 F2 FE FF 28 A6  .c\\...2@X....(.\n01D0: 35 33 65 62 45 5D 9D 73   66 50 8B F1 47 1A 1D 74  53ebE].sfP..G..t\n01E0: BA 5A 7A 21 C6 F2 5D 80   BC D0 A1 0E 0B 92 59 93  .Zz!..].......Y.\n01F0: A5 B0 9E 12 4F D9 7F 18   83 C2 40 70 DB 8C BB 47  ....O.....@p...G\n0200: AE 54 DE 9A 05 49 F8 43   29 95 9F 4F 5C B2 D4 6F  .T...I.C)..O\\..o\n0210: A1 85 3B 0D FC 5B FF 05   21 DC 1C 5A 7F 99 1C 8F  ..;..[..!..Z....\n0220: 02 03 01 00 01 30 0D 06   09 2A 86 48 86 F7 0D 01  .....0...*.H....\n0230: 01 0B 05 00 03 81 81 00   18 9A 4A FA 1B 95 C1 93  ..........J.....\n0240: F2 42 E3 01 B2 AB 19 66   4B 8D 0B 7C D1 DD DC DF  .B.....fK.......\n0250: 21 EE 95 E5 70 CD 9A 6B   A3 A4 6E E4 76 80 A9 A2  !...p..k..n.v...\n0260: DF D9 90 0E 11 D9 C6 2D   39 E0 A5 48 E7 D4 0D 38  .......-9..H...8\n0270: 87 37 1B 73 6D B4 39 F9   70 2F 19 B3 C6 C8 17 16  .7.sm.9.p/......\n0280: 56 5F 33 C3 2D 89 5E 9D   81 F5 79 50 BD 05 E1 59  V_3.-.^...yP...Y\n0290: 5F 62 50 55 B1 75 CF 49   E1 36 73 DF 9F DD FB 9D  _bPU.u.I.6s.....\n02A0: 65 45 2C 0B A1 25 13 FE   5B 16 1D 27 46 E8 74 16  eE,..%..[..'F.t.\n02B0: C9 8F FD A3 4D 9C BE F2   0C 00 00 C9 03 00 17 41  ....M..........A\n02C0: 04 74 0B 90 6A CB F2 40   3A 45 82 AF B1 5A 68 41  .t..j..@:E...ZhA\n02D0: AD BC 68 9A E5 31 44 0D   D9 08 CB 80 EC DA DA 85  ..h..1D.........\n02E0: 9F DA D3 6E E4 FA D3 0E   7C CF 23 FB FB 58 83 34  ...n......#..X.4\n02F0: 0E D3 F0 34 26 6A 0F 3B   3A 72 41 66 CC C3 69 F2  ...4&j.;:rAf..i.\n0300: 6D 06 01 00 80 7C 2F 96   07 2E A2 66 71 95 7F 57  m...../....fq..W\n0310: 33 D4 6E 1D C2 34 AD F5   58 73 C3 1E 6C CB 90 86  3.n..4..Xs..l...\n0320: A4 9E 00 2E 2E E3 F2 26   40 A8 26 AE AD 33 84 14  .......&@.&..3..\n0330: 93 34 AA 5E D4 88 3C 19   B5 C5 1A 1A 6B F1 04 D3  .4.^..<.....k...\n0340: 5B 9D 01 05 10 D7 9B 35   AE 85 A5 E0 19 4D 86 91  [......5.....M..\n0350: DB 6A 6C 3E 65 F8 F5 24   FF 5B 6E 92 93 CB F0 71  .jl>e..$.[n....q\n0360: 9B 8C 5B E4 CD FB A2 E6   DC 14 C2 B2 17 6C 31 79  ..[..........l1y\n0370: E2 5D D9 11 B9 7C A8 35   10 17 E2 95 45 A5 50 46  .].....5....E.PF\n0380: AE 51 60 19 63 0E 00 00   00                       .Q.c....\n[Raw read]: length = 5\n0000: 16 03 03 00 46                                     ....F\n[Raw read]: length = 70\n0000: 10 00 00 42 41 04 BC 36   73 84 B4 0F DB 75 20 36  ...BA..6s....u 6\n0010: FE 62 5A 2C 90 2A DF D2   AB B5 7E B2 4E 9E 6C 28  .bZ,.......N.l(\n0020: 83 92 2A 69 28 49 BD 21   5C 4C 9D 18 AF E6 06 80  ..i(I.!\\L......\n0030: AA 7F 19 42 F2 B5 D7 64   9E 1A 2C ED F1 17 0D D3  ...B...d..,.....\n0040: 2B 6B 22 7B 6E 47                                  +k\".nG\nWebsocketSelector10, READ: TLSv1.2 Handshake, length = 70\n ECDHClientKeyExchange\nECDH Public value:  { 4, 188, 54, 115, 132, 180, 15, 219, 117, 32, 54, 254, 98, 90, 44, 144, 42, 223, 210, 171, 181, 126, 178, 78, 158, 108, 40, 131, 146, 42, 105, 40, 73, 189, 33, 92, 76, 157, 24, 175, 230, 6, 128, 170, 127, 25, 66, 242, 181, 215, 100, 158, 26, 44, 237, 241, 23, 13, 211, 43, 107, 34, 123, 110, 71 }\nSESSION KEYGEN:\nPreMaster Secret:\n0000: 9F F5 E0 E8 E6 EC 5E CB   EC C7 A1 7F 87 C7 91 31  ......^........1\n0010: 49 52 AA AB D2 07 CF AD   A3 66 A6 19 3E DE 1A D7  IR.......f..>...\nCONNECTION KEYGEN:\nClient Nonce:\n0000: 2C 4C 01 A8 42 E9 1A 85   90 08 EF 03 B2 DB 35 3F  ,L..B.........5?\n0010: F1 15 E6 B2 54 45 86 67   16 3A D6 4C 43 04 67 05  ....TE.g.:.LC.g.\nServer Nonce:\n0000: 59 CD 56 2F FB 94 8C A9   E3 F9 78 4C F6 26 5A 68  Y.V/......xL.&Zh\n0010: 71 95 F3 8E 84 4E 04 30   24 7B 7D 06 DD 3E 05 88  q....N.0$....>..\nMaster Secret:\n0000: 2C 77 2A 44 9B 5F D3 D7   51 49 7E 0D 74 91 35 46  ,wD...QI..t.5F\n0010: DB 0D 36 4F 52 E8 E9 BF   79 90 4C AF 9E 10 89 6B  ..6OR...y.L....k\n0020: 9E 63 5E 92 A3 81 36 EF   1A F0 71 9E FB 1B 62 9C  .c^...6...q...b.\nClient MAC write Secret:\n0000: EA 58 3C 29 27 28 6E F8   2B F6 E5 53 19 A2 DF 6C  .X<)'(n.+..S...l\n0010: 7A FF BB 06                                        z...\nServer MAC write Secret:\n0000: 50 C1 BE 42 D6 2D 70 AC   1B 71 98 76 70 14 E6 C5  P..B.-p..q.vp...\n0010: 8A 8C A0 82                                        ....\nClient write key:\n0000: 88 7E 29 EC 5F 3A 12 29   99 E1 73 1C 66 E5 94 07  ..).:.)..s.f...\nServer write key:\n0000: 9B 03 CE F6 2B 44 18 30   A7 28 F2 B8 24 13 4C E1  ....+D.0.(..$.L.\n... no IV derived for this protocol\n[read] MD5 and SHA1 hashes:  len = 70\n0000: 10 00 00 42 41 04 BC 36   73 84 B4 0F DB 75 20 36  ...BA..6s....u 6\n0010: FE 62 5A 2C 90 2A DF D2   AB B5 7E B2 4E 9E 6C 28  .bZ,.......N.l(\n0020: 83 92 2A 69 28 49 BD 21   5C 4C 9D 18 AF E6 06 80  ..i(I.!\\L......\n0030: AA 7F 19 42 F2 B5 D7 64   9E 1A 2C ED F1 17 0D D3  ...B...d..,.....\n0040: 2B 6B 22 7B 6E 47                                  +k\".nG\n[Raw read]: length = 5\n0000: 14 03 03 00 01                                     .....\n[Raw read]: length = 1\n0000: 01                                                 .\nWebsocketSelector10, READ: TLSv1.2 Change Cipher Spec, length = 1\n[Raw read]: length = 5\n0000: 16 03 03 00 40                                     ....@\n[Raw read]: length = 64\n0000: 59 15 AA A7 EE D8 63 BF   0E BF 5D B5 60 41 82 B4  Y.....c...].A..\n0010: 06 E7 9B B6 06 CC 07 FA   91 0B B4 BE DC 45 11 3A  .............E.:\n0020: 52 18 62 DD 74 EA D7 6E   B3 2F B5 39 B6 1A E3 71  R.b.t..n./.9...q\n0030: AE 89 6C DE 50 D9 2D 36   3F 72 A0 88 76 47 90 A2  ..l.P.-6?r..vG..\nWebsocketSelector10, READ: TLSv1.2 Handshake, length = 64\nPadded plaintext after DECRYPTION:  len = 64\n0000: E4 B1 B6 FB 45 AF A1 F9   45 82 89 97 98 1B 31 FB  ....E...E.....1.\n0010: 14 00 00 0C 91 57 D0 5A   14 58 14 54 62 9B 07 33  .....W.Z.X.Tb..3\n0020: A9 47 4B C6 9A 80 99 8A   3E 00 81 A7 F2 6D BA B4  .GK.....>....m..\n0030: 77 3A B3 59 0B 0B 0B 0B   0B 0B 0B 0B 0B 0B 0B 0B  w:.Y............\n*** Finished\nverify_data:  { 145, 87, 208, 90, 20, 88, 20, 84, 98, 155, 7, 51 }\n***\n[read] MD5 and SHA1 hashes:  len = 16\n0000: 14 00 00 0C 91 57 D0 5A   14 58 14 54 62 9B 07 33  .....W.Z.X.Tb..3\nWebsocketSelector10, WRITE: TLSv1.2 Change Cipher Spec, length = 1\n*** Finished\nverify_data:  { 191, 56, 77, 229, 33, 89, 94, 221, 16, 41, 237, 2 }\n***\n[write] MD5 and SHA1 hashes:  len = 16\n0000: 14 00 00 0C BF 38 4D E5   21 59 5E DD 10 29 ED 02  .....8M.!Y^..)..\nPadded plaintext before ENCRYPTION:  len = 64\n0000: 7B 33 C8 DD 26 B5 80 0F   B3 E5 39 D2 07 2C 3E D3  .3..&.....9..,>.\n0010: 14 00 00 0C BF 38 4D E5   21 59 5E DD 10 29 ED 02  .....8M.!Y^..)..\n0020: 70 D1 25 4F 86 7C D5 15   5F 92 73 D1 45 14 7F 54  p.%O...._.s.E..T\n0030: A3 4F D5 D9 0B 0B 0B 0B   0B 0B 0B 0B 0B 0B 0B 0B  .O..............\nWebsocketSelector10, WRITE: TLSv1.2 Handshake, length = 64\n%% Cached server session: [Session-1, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA]\n[Raw write]: length = 6\n0000: 14 03 03 00 01 01                                  ......\n[Raw write]: length = 69\n0000: 16 03 03 00 40 28 2E D7   77 B7 62 8E D5 E4 87 F8  ....@(..w.b.....\n0010: E1 AF 25 B6 93 50 38 D6   41 27 44 10 5D BA A0 3E  ..%..P8.A'D.]..>\n0020: A5 C3 BC F1 2C 06 3A 60   53 80 41 AB 3A 31 8D B9  ....,.:S.A.:1..\n0030: 41 BA C6 5D 96 A8 02 FC   BF 9A C4 A1 56 34 0D AE  A..]........V4..\n0040: 7B E1 3B C2 FD                                     ..;..\nWebsocketSelector10, called closeOutbound()\nWebsocketSelector10, closeOutboundInternal()\nWebsocketSelector10, SEND TLSv1.2 ALERT:  warning, description = close_notify\nPadded plaintext before ENCRYPTION:  len = 48\n0000: 4A B4 44 C2 F7 5D BE EF   EF 06 6B 4F F1 B3 D4 27  J.D..]....kO...'\n0010: 01 00 7B B1 B5 1E D1 A1   D2 AA 96 6A 13 8E 64 B8  ...........j..d.\n0020: 87 12 4C A3 80 C7 09 09   09 09 09 09 09 09 09 09  ..L.............\nWebsocketSelector10, WRITE: TLSv1.2 Alert, length = 48\n%% Invalidated:  [Session-1, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA]\n[Raw write]: length = 53\n0000: 15 03 03 00 30 BD C8 EB   11 6C 9D 16 72 EE 17 98  ....0....l..r...\n0010: 1A 80 60 C1 C0 E2 EA 73   DE C1 09 2C BC EE 9F B2  ..`....s...,....\n0020: B9 20 EC 34 76 08 92 EB   BE 7B C6 A4 BB 7D F8 B9  . .4v...........\n0030: E8 A7 6C 33 6A                                     ..l3j\nRemoving connection which is not in the connections collection! Possible no handshake recieved! org.java_websocket.WebSocketImpl@b088f8\nUsing SSLEngineImpl.\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA256\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_DHE_DSS_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\nIgnoring unavailable cipher suite: TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\nIgnoring unavailable cipher suite: TLS_RSA_WITH_AES_256_CBC_SHA\nAllow unsafe renegotiation: false\nAllow legacy hello messages: true\nIs initial handshake: true\nIs secure renegotiation: false\n[Raw read]: length = 5\n0000: 16 03 01 00 D5                                     .....\n[Raw read]: length = 213\n0000: 01 00 00 D1 03 03 40 43   3E 4C 83 F1 61 03 12 96  ......@C>L..a...\n0010: 6B 3C E3 70 EF 04 5A E6   0C AE B0 37 7A 87 DE B5  k<.p..Z....7z...\n0020: 53 10 24 DE 42 71 20 59   CD 56 2F 5F D2 0E DF EB  S.$.Bq Y.V/_....\n0030: F0 3B 38 73 D7 F6 F6 9F   24 20 F3 58 17 3B 35 00  .;8s....$ .X.;5.\n0040: 9F E0 46 26 52 F8 C6 00   18 C0 2B C0 2F C0 2C C0  ..F&R.....+./.,.\n0050: 30 C0 13 C0 14 00 9C 00   9D 00 2F 00 35 00 0A 00  0........./.5...\n0060: FF 01 00 00 70 00 00 00   0E 00 0C 00 00 09 6C 6F  ....p.........lo\n0070: 63 61 6C 68 6F 73 74 00   0B 00 04 03 00 01 02 00  calhost.........\n0080: 0A 00 1C 00 1A 00 17 00   19 00 1C 00 1B 00 18 00  ................\n0090: 1A 00 16 00 0E 00 0D 00   0B 00 0C 00 09 00 0A 00  ................\n00A0: 23 00 00 00 0D 00 20 00   1E 06 01 06 02 06 03 05  #..... .........\n00B0: 01 05 02 05 03 04 01 04   02 04 03 03 01 03 02 03  ................\n00C0: 03 02 01 02 02 02 03 00   05 00 05 01 00 00 00 00  ................\n00D0: 00 0F 00 01 01                                     .....\nWebsocketSelector10, READ: TLSv1 Handshake, length = 213\n ClientHello, TLSv1.2\nRandomCookie:  GMT: 1078148684 bytes = { 131, 241, 97, 3, 18, 150, 107, 60, 227, 112, 239, 4, 90, 230, 12, 174, 176, 55, 122, 135, 222, 181, 83, 16, 36, 222, 66, 113 }\nSession ID:  {89, 205, 86, 47, 95, 210, 14, 223, 235, 240, 59, 56, 115, 215, 246, 246, 159, 36, 32, 243, 88, 23, 59, 53, 0, 159, 224, 70, 38, 82, 248, 198}\nCipher Suites: [TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]\nCompression Methods:  { 0 }\nExtension server_name, server_name: [host_name: localhost]\nExtension ec_point_formats, formats: [uncompressed, ansiX962_compressed_prime, ansiX962_compressed_char2]\nExtension elliptic_curves, curve names: {secp256r1, secp521r1, unknown curve 28, unknown curve 27, secp384r1, unknown curve 26, secp256k1, sect571r1, sect571k1, sect409k1, sect409r1, sect283k1, sect283r1}\nUnsupported extension type_35, data: \nExtension signature_algorithms, signature_algorithms: SHA512withRSA, Unknown (hash:0x6, signature:0x2), SHA512withECDSA, SHA384withRSA, Unknown (hash:0x5, signature:0x2), SHA384withECDSA, SHA256withRSA, Unknown (hash:0x4, signature:0x2), SHA256withECDSA, SHA224withRSA, Unknown (hash:0x3, signature:0x2), SHA224withECDSA, SHA1withRSA, SHA1withDSA, SHA1withECDSA\nUnsupported extension status_request, data: 01:00:00:00:00\nUnsupported extension type_15, data: 01\n\n[read] MD5 and SHA1 hashes:  len = 213\n0000: 01 00 00 D1 03 03 40 43   3E 4C 83 F1 61 03 12 96  ......@C>L..a...\n0010: 6B 3C E3 70 EF 04 5A E6   0C AE B0 37 7A 87 DE B5  k<.p..Z....7z...\n0020: 53 10 24 DE 42 71 20 59   CD 56 2F 5F D2 0E DF EB  S.$.Bq Y.V/_....\n0030: F0 3B 38 73 D7 F6 F6 9F   24 20 F3 58 17 3B 35 00  .;8s....$ .X.;5.\n0040: 9F E0 46 26 52 F8 C6 00   18 C0 2B C0 2F C0 2C C0  ..F&R.....+./.,.\n0050: 30 C0 13 C0 14 00 9C 00   9D 00 2F 00 35 00 0A 00  0........./.5...\n0060: FF 01 00 00 70 00 00 00   0E 00 0C 00 00 09 6C 6F  ....p.........lo\n0070: 63 61 6C 68 6F 73 74 00   0B 00 04 03 00 01 02 00  calhost.........\n0080: 0A 00 1C 00 1A 00 17 00   19 00 1C 00 1B 00 18 00  ................\n0090: 1A 00 16 00 0E 00 0D 00   0B 00 0C 00 09 00 0A 00  ................\n00A0: 23 00 00 00 0D 00 20 00   1E 06 01 06 02 06 03 05  #..... .........\n00B0: 01 05 02 05 03 04 01 04   02 04 03 03 01 03 02 03  ................\n00C0: 03 02 01 02 02 02 03 00   05 00 05 01 00 00 00 00  ................\n00D0: 00 0F 00 01 01                                     .....\n%% Initialized:  [Session-2, SSL_NULL_WITH_NULL_NULL]\n%% Negotiating:  [Session-2, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA]\n ServerHello, TLSv1.2\nRandomCookie:  GMT: 1489851991 bytes = { 54, 92, 192, 20, 121, 193, 6, 55, 213, 66, 74, 119, 73, 82, 155, 254, 182, 149, 41, 220, 185, 22, 161, 95, 47, 234, 239, 68 }\nSession ID:  {89, 205, 86, 87, 193, 232, 75, 99, 29, 129, 52, 196, 235, 105, 17, 156, 218, 248, 109, 163, 110, 240, 108, 154, 170, 159, 248, 179, 3, 117, 166, 50}\nCipher Suite: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\nCompression Method: 0\nExtension renegotiation_info, renegotiated_connection: \n\nCipher suite:  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n Certificate chain\nchain [0] = [\n[\n  Version: V1\n  Subject: CN=localhost, OU=sofisoft, O=SofiSoft, L=Casablanca, ST=Casablanca, C=MA\n  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11\nKey:  Sun RSA public key, 1024 bits\n  modulus: 123305967866127895135250096688235484937121945450718380358917371399124253346709386004466389104242421166360785344280077222004077082809461310900467735014154077261856903926817905422244941920913784967092867528081733933790245573579176596115386851419936178686024588398583026693226855371939187095372462213116070534287\n  public exponent: 65537\n  Validity: [From: Thu Sep 28 18:05:02 WET 2017,\n               To: Mon Sep 28 18:05:02 WET 2037]\n  Issuer: CN=localhost, OU=sofisoft, O=SofiSoft, L=Casablanca, ST=Casablanca, C=MA\n  SerialNumber: [    59cd39ce]\n]\n  Algorithm: [SHA256withRSA]\n  Signature:\n0000: 18 9A 4A FA 1B 95 C1 93   F2 42 E3 01 B2 AB 19 66  ..J......B.....f\n0010: 4B 8D 0B 7C D1 DD DC DF   21 EE 95 E5 70 CD 9A 6B  K.......!...p..k\n0020: A3 A4 6E E4 76 80 A9 A2   DF D9 90 0E 11 D9 C6 2D  ..n.v..........-\n0030: 39 E0 A5 48 E7 D4 0D 38   87 37 1B 73 6D B4 39 F9  9..H...8.7.sm.9.\n0040: 70 2F 19 B3 C6 C8 17 16   56 5F 33 C3 2D 89 5E 9D  p/......V_3.-.^.\n0050: 81 F5 79 50 BD 05 E1 59   5F 62 50 55 B1 75 CF 49  ..yP...Y_bPU.u.I\n0060: E1 36 73 DF 9F DD FB 9D   65 45 2C 0B A1 25 13 FE  .6s.....eE,..%..\n0070: 5B 16 1D 27 46 E8 74 16   C9 8F FD A3 4D 9C BE F2  [..'F.t.....M...\n]\n\n ECDH ServerKeyExchange\nSignature Algorithm SHA512withRSA\nServer key: Sun EC public key, 256 bits\n  public x coord: 36941648318746369457941347383736441162232106962031852121937859848604368276791\n  public y coord: 12284987792728277363487466181498544521700072922644701877249081074698722022511\n  parameters: secp256r1 [NIST P-256, X9.62 prime256v1] (1.2.840.10045.3.1.7)\n ServerHelloDone\n[write] MD5 and SHA1 hashes:  len = 900\n0000: 02 00 00 4D 03 03 59 CD   56 57 36 5C C0 14 79 C1  ...M..Y.VW6..y.\n0010: 06 37 D5 42 4A 77 49 52   9B FE B6 95 29 DC B9 16  .7.BJwIR....)...\n0020: A1 5F 2F EA EF 44 20 59   CD 56 57 C1 E8 4B 63 1D  ._/..D Y.VW..Kc.\n0030: 81 34 C4 EB 69 11 9C DA   F8 6D A3 6E F0 6C 9A AA  .4..i....m.n.l..\n0040: 9F F8 B3 03 75 A6 32 C0   13 00 00 05 FF 01 00 01  ....u.2.........\n0050: 00 0B 00 02 5E 00 02 5B   00 02 58 30 82 02 54 30  ....^..[..X0..T0\n0060: 82 01 BD 02 04 59 CD 39   CE 30 0D 06 09 2A 86 48  .....Y.9.0....H\n0070: 86 F7 0D 01 01 0B 05 00   30 71 31 0B 30 09 06 03  ........0q1.0...\n0080: 55 04 06 13 02 4D 41 31   13 30 11 06 03 55 04 08  U....MA1.0...U..\n0090: 0C 0A 43 61 73 61 62 6C   61 6E 63 61 31 13 30 11  ..Casablanca1.0.\n00A0: 06 03 55 04 07 0C 0A 43   61 73 61 62 6C 61 6E 63  ..U....Casablanc\n00B0: 61 31 11 30 0F 06 03 55   04 0A 0C 08 53 6F 66 69  a1.0...U....Sofi\n00C0: 53 6F 66 74 31 11 30 0F   06 03 55 04 0B 0C 08 73  Soft1.0...U....s\n00D0: 6F 66 69 73 6F 66 74 31   12 30 10 06 03 55 04 03  ofisoft1.0...U..\n00E0: 0C 09 6C 6F 63 61 6C 68   6F 73 74 30 1E 17 0D 31  ..localhost0...1\n00F0: 37 30 39 32 38 31 38 30   35 30 32 5A 17 0D 33 37  70928180502Z..37\n0100: 30 39 32 38 31 38 30 35   30 32 5A 30 71 31 0B 30  0928180502Z0q1.0\n0110: 09 06 03 55 04 06 13 02   4D 41 31 13 30 11 06 03  ...U....MA1.0...\n0120: 55 04 08 0C 0A 43 61 73   61 62 6C 61 6E 63 61 31  U....Casablanca1\n0130: 13 30 11 06 03 55 04 07   0C 0A 43 61 73 61 62 6C  .0...U....Casabl\n0140: 61 6E 63 61 31 11 30 0F   06 03 55 04 0A 0C 08 53  anca1.0...U....S\n0150: 6F 66 69 53 6F 66 74 31   11 30 0F 06 03 55 04 0B  ofiSoft1.0...U..\n0160: 0C 08 73 6F 66 69 73 6F   66 74 31 12 30 10 06 03  ..sofisoft1.0...\n0170: 55 04 03 0C 09 6C 6F 63   61 6C 68 6F 73 74 30 81  U....localhost0.\n0180: 9F 30 0D 06 09 2A 86 48   86 F7 0D 01 01 01 05 00  .0....H........\n0190: 03 81 8D 00 30 81 89 02   81 81 00 AF 97 F1 60 18  ....0..........\n01A0: CC C0 0B 32 DC 81 A4 20   6C 32 D8 15 D9 E1 7D 99  ...2... l2......\n01B0: 56 8F 63 ED F7 40 2C 82   39 3C 5C 86 60 63 5C 82  V.c..@,.9<\\.c.\n01C0: BD 07 32 40 58 F0 F2 FE   FF 28 A6 35 33 65 62 45  ..2@X....(.53ebE\n01D0: 5D 9D 73 66 50 8B F1 47   1A 1D 74 BA 5A 7A 21 C6  ].sfP..G..t.Zz!.\n01E0: F2 5D 80 BC D0 A1 0E 0B   92 59 93 A5 B0 9E 12 4F  .].......Y.....O\n01F0: D9 7F 18 83 C2 40 70 DB   8C BB 47 AE 54 DE 9A 05  .....@p...G.T...\n0200: 49 F8 43 29 95 9F 4F 5C   B2 D4 6F A1 85 3B 0D FC  I.C)..O..o..;..\n0210: 5B FF 05 21 DC 1C 5A 7F   99 1C 8F 02 03 01 00 01  [..!..Z.........\n0220: 30 0D 06 09 2A 86 48 86   F7 0D 01 01 0B 05 00 03  0....H.........\n0230: 81 81 00 18 9A 4A FA 1B   95 C1 93 F2 42 E3 01 B2  .....J......B...\n0240: AB 19 66 4B 8D 0B 7C D1   DD DC DF 21 EE 95 E5 70  ..fK.......!...p\n0250: CD 9A 6B A3 A4 6E E4 76   80 A9 A2 DF D9 90 0E 11  ..k..n.v........\n0260: D9 C6 2D 39 E0 A5 48 E7   D4 0D 38 87 37 1B 73 6D  ..-9..H...8.7.sm\n0270: B4 39 F9 70 2F 19 B3 C6   C8 17 16 56 5F 33 C3 2D  .9.p/......V_3.-\n0280: 89 5E 9D 81 F5 79 50 BD   05 E1 59 5F 62 50 55 B1  .^...yP...Y_bPU.\n0290: 75 CF 49 E1 36 73 DF 9F   DD FB 9D 65 45 2C 0B A1  u.I.6s.....eE,..\n02A0: 25 13 FE 5B 16 1D 27 46   E8 74 16 C9 8F FD A3 4D  %..[..'F.t.....M\n02B0: 9C BE F2 0C 00 00 C9 03   00 17 41 04 51 AC 3B 63  ..........A.Q.;c\n02C0: 9A B0 91 AC 1B B2 3A B9   93 10 28 C4 21 59 48 A4  ......:...(.!YH.\n02D0: E2 54 FD 28 61 3B 97 FA   52 A0 8D 37 1B 29 0E 82  .T.(a;..R..7.)..\n02E0: D1 AE F9 7D 83 F8 C8 8D   FA F8 E2 3F B4 BC C2 6E  ...........?...n\n02F0: B3 AD 18 30 39 4E FF 3F   C0 FD 14 6F 06 01 00 80  ...09N.?...o....\n0300: 12 1D 9C F3 6F 67 BB 81   BA 92 B0 16 38 16 7D 9F  ....og......8...\n0310: 42 F3 BC 16 72 4D FC 58   7D 39 8E F8 46 7D 66 55  B...rM.X.9..F.fU\n0320: 24 D1 2A C1 F5 60 8A AC   4B CC 7C E5 F3 C7 C9 31  $.....K......1\n0330: 3C D4 B4 80 01 C7 CF 2C   EB 94 D0 59 27 42 3D 5D  <......,...Y'B=]\n0340: E2 09 76 98 4A BD B1 4B   5A 3D 36 D3 53 E8 D4 B2  ..v.J..KZ=6.S...\n0350: E2 AC 69 97 93 71 E5 97   3A B3 C1 2C FE 41 85 E0  ..i..q..:..,.A..\n0360: FC B1 71 58 6B 87 4A 97   09 76 DB 85 E8 9C 0D 9A  ..qXk.J..v......\n0370: 6B 62 69 A1 56 21 5C 3B   8B C8 1C 35 73 CB AB 09  kbi.V!\\;...5s...\n0380: 0E 00 00 00                                        ....\npool-1-thread-1, WRITE: TLSv1.2 Handshake, length = 900\n[Raw write]: length = 905\n0000: 16 03 03 03 84 02 00 00   4D 03 03 59 CD 56 57 36  ........M..Y.VW6\n0010: 5C C0 14 79 C1 06 37 D5   42 4A 77 49 52 9B FE B6  \\..y..7.BJwIR...\n0020: 95 29 DC B9 16 A1 5F 2F   EA EF 44 20 59 CD 56 57  .)...._/..D Y.VW\n0030: C1 E8 4B 63 1D 81 34 C4   EB 69 11 9C DA F8 6D A3  ..Kc..4..i....m.\n0040: 6E F0 6C 9A AA 9F F8 B3   03 75 A6 32 C0 13 00 00  n.l......u.2....\n0050: 05 FF 01 00 01 00 0B 00   02 5E 00 02 5B 00 02 58  .........^..[..X\n0060: 30 82 02 54 30 82 01 BD   02 04 59 CD 39 CE 30 0D  0..T0.....Y.9.0.\n0070: 06 09 2A 86 48 86 F7 0D   01 01 0B 05 00 30 71 31  ..*.H........0q1\n0080: 0B 30 09 06 03 55 04 06   13 02 4D 41 31 13 30 11  .0...U....MA1.0.\n0090: 06 03 55 04 08 0C 0A 43   61 73 61 62 6C 61 6E 63  ..U....Casablanc\n00A0: 61 31 13 30 11 06 03 55   04 07 0C 0A 43 61 73 61  a1.0...U....Casa\n00B0: 62 6C 61 6E 63 61 31 11   30 0F 06 03 55 04 0A 0C  blanca1.0...U...\n00C0: 08 53 6F 66 69 53 6F 66   74 31 11 30 0F 06 03 55  .SofiSoft1.0...U\n00D0: 04 0B 0C 08 73 6F 66 69   73 6F 66 74 31 12 30 10  ....sofisoft1.0.\n00E0: 06 03 55 04 03 0C 09 6C   6F 63 61 6C 68 6F 73 74  ..U....localhost\n00F0: 30 1E 17 0D 31 37 30 39   32 38 31 38 30 35 30 32  0...170928180502\n0100: 5A 17 0D 33 37 30 39 32   38 31 38 30 35 30 32 5A  Z..370928180502Z\n0110: 30 71 31 0B 30 09 06 03   55 04 06 13 02 4D 41 31  0q1.0...U....MA1\n0120: 13 30 11 06 03 55 04 08   0C 0A 43 61 73 61 62 6C  .0...U....Casabl\n0130: 61 6E 63 61 31 13 30 11   06 03 55 04 07 0C 0A 43  anca1.0...U....C\n0140: 61 73 61 62 6C 61 6E 63   61 31 11 30 0F 06 03 55  asablanca1.0...U\n0150: 04 0A 0C 08 53 6F 66 69   53 6F 66 74 31 11 30 0F  ....SofiSoft1.0.\n0160: 06 03 55 04 0B 0C 08 73   6F 66 69 73 6F 66 74 31  ..U....sofisoft1\n0170: 12 30 10 06 03 55 04 03   0C 09 6C 6F 63 61 6C 68  .0...U....localh\n0180: 6F 73 74 30 81 9F 30 0D   06 09 2A 86 48 86 F7 0D  ost0..0...*.H...\n0190: 01 01 01 05 00 03 81 8D   00 30 81 89 02 81 81 00  .........0......\n01A0: AF 97 F1 60 18 CC C0 0B   32 DC 81 A4 20 6C 32 D8  .......2... l2.\n01B0: 15 D9 E1 7D 99 56 8F 63   ED F7 40 2C 82 39 3C 5C  .....V.c..@,.9<\\\n01C0: 86 60 63 5C 82 BD 07 32   40 58 F0 F2 FE FF 28 A6  .c\\...2@X....(.\n01D0: 35 33 65 62 45 5D 9D 73   66 50 8B F1 47 1A 1D 74  53ebE].sfP..G..t\n01E0: BA 5A 7A 21 C6 F2 5D 80   BC D0 A1 0E 0B 92 59 93  .Zz!..].......Y.\n01F0: A5 B0 9E 12 4F D9 7F 18   83 C2 40 70 DB 8C BB 47  ....O.....@p...G\n0200: AE 54 DE 9A 05 49 F8 43   29 95 9F 4F 5C B2 D4 6F  .T...I.C)..O\\..o\n0210: A1 85 3B 0D FC 5B FF 05   21 DC 1C 5A 7F 99 1C 8F  ..;..[..!..Z....\n0220: 02 03 01 00 01 30 0D 06   09 2A 86 48 86 F7 0D 01  .....0...*.H....\n0230: 01 0B 05 00 03 81 81 00   18 9A 4A FA 1B 95 C1 93  ..........J.....\n0240: F2 42 E3 01 B2 AB 19 66   4B 8D 0B 7C D1 DD DC DF  .B.....fK.......\n0250: 21 EE 95 E5 70 CD 9A 6B   A3 A4 6E E4 76 80 A9 A2  !...p..k..n.v...\n0260: DF D9 90 0E 11 D9 C6 2D   39 E0 A5 48 E7 D4 0D 38  .......-9..H...8\n0270: 87 37 1B 73 6D B4 39 F9   70 2F 19 B3 C6 C8 17 16  .7.sm.9.p/......\n0280: 56 5F 33 C3 2D 89 5E 9D   81 F5 79 50 BD 05 E1 59  V_3.-.^...yP...Y\n0290: 5F 62 50 55 B1 75 CF 49   E1 36 73 DF 9F DD FB 9D  _bPU.u.I.6s.....\n02A0: 65 45 2C 0B A1 25 13 FE   5B 16 1D 27 46 E8 74 16  eE,..%..[..'F.t.\n02B0: C9 8F FD A3 4D 9C BE F2   0C 00 00 C9 03 00 17 41  ....M..........A\n02C0: 04 51 AC 3B 63 9A B0 91   AC 1B B2 3A B9 93 10 28  .Q.;c......:...(\n02D0: C4 21 59 48 A4 E2 54 FD   28 61 3B 97 FA 52 A0 8D  .!YH..T.(a;..R..\n02E0: 37 1B 29 0E 82 D1 AE F9   7D 83 F8 C8 8D FA F8 E2  7.).............\n02F0: 3F B4 BC C2 6E B3 AD 18   30 39 4E FF 3F C0 FD 14  ?...n...09N.?...\n0300: 6F 06 01 00 80 12 1D 9C   F3 6F 67 BB 81 BA 92 B0  o........og.....\n0310: 16 38 16 7D 9F 42 F3 BC   16 72 4D FC 58 7D 39 8E  .8...B...rM.X.9.\n0320: F8 46 7D 66 55 24 D1 2A   C1 F5 60 8A AC 4B CC 7C  .F.fU$.*....K..\n0330: E5 F3 C7 C9 31 3C D4 B4   80 01 C7 CF 2C EB 94 D0  ....1<......,...\n0340: 59 27 42 3D 5D E2 09 76   98 4A BD B1 4B 5A 3D 36  Y'B=]..v.J..KZ=6\n0350: D3 53 E8 D4 B2 E2 AC 69   97 93 71 E5 97 3A B3 C1  .S.....i..q..:..\n0360: 2C FE 41 85 E0 FC B1 71   58 6B 87 4A 97 09 76 DB  ,.A....qXk.J..v.\n0370: 85 E8 9C 0D 9A 6B 62 69   A1 56 21 5C 3B 8B C8 1C  .....kbi.V!\\;...\n0380: 35 73 CB AB 09 0E 00 00   00                       5s.......\n[Raw read]: length = 5\n0000: 16 03 03 00 46                                     ....F\n[Raw read]: length = 70\n0000: 10 00 00 42 41 04 01 E3   93 26 01 D2 8C 84 C0 09  ...BA....&......\n0010: 3A 87 46 16 16 96 CC DC   5E 6A 97 C4 70 35 E8 C4  :.F.....^j..p5..\n0020: 22 66 26 59 D8 4F 28 F8   1D 6B BA 88 F9 89 6A 0D  \"f&Y.O(..k....j.\n0030: 7E 6B 34 78 77 0D 29 9A   40 C3 C2 76 83 28 3D 27  .k4xw.).@..v.(='\n0040: C2 FE 6B 9C 37 F2                                  ..k.7.\nWebsocketSelector10, READ: TLSv1.2 Handshake, length = 70\n ECDHClientKeyExchange\nECDH Public value:  { 4, 1, 227, 147, 38, 1, 210, 140, 132, 192, 9, 58, 135, 70, 22, 22, 150, 204, 220, 94, 106, 151, 196, 112, 53, 232, 196, 34, 102, 38, 89, 216, 79, 40, 248, 29, 107, 186, 136, 249, 137, 106, 13, 126, 107, 52, 120, 119, 13, 41, 154, 64, 195, 194, 118, 131, 40, 61, 39, 194, 254, 107, 156, 55, 242 }\nSESSION KEYGEN:\nPreMaster Secret:\n0000: 63 5E 93 DD 82 BE 1A 5B   45 A6 9D 7F 5C CC 9D AD  c^.....[E......\n0010: F8 8F DB B5 28 08 F4 81   14 AD A5 1D BA 79 3C DF  ....(........y<.\nCONNECTION KEYGEN:\nClient Nonce:\n0000: 40 43 3E 4C 83 F1 61 03   12 96 6B 3C E3 70 EF 04  @C>L..a...k<.p..\n0010: 5A E6 0C AE B0 37 7A 87   DE B5 53 10 24 DE 42 71  Z....7z...S.$.Bq\nServer Nonce:\n0000: 59 CD 56 57 36 5C C0 14   79 C1 06 37 D5 42 4A 77  Y.VW6..y..7.BJw\n0010: 49 52 9B FE B6 95 29 DC   B9 16 A1 5F 2F EA EF 44  IR....)..../..D\nMaster Secret:\n0000: D1 07 8B 5F B3 40 BA 01   14 64 97 D8 1F 17 AB 87  ....@...d......\n0010: C6 CF 60 2B B9 4B 60 75   95 20 F9 1C E2 76 2E A4  ..+.Ku. ...v..\n0020: 8A 48 ED 06 DE 14 D9 C5   8F B8 7F 7E 43 C4 C3 B8  .H..........C...\nClient MAC write Secret:\n0000: 10 6B 0A 62 14 3A 0C EB   B8 5E 31 68 6B BC 6C 6C  .k.b.:...^1hk.ll\n0010: C8 92 02 58                                        ...X\nServer MAC write Secret:\n0000: FF C7 8C 92 30 29 C5 39   FC B7 C5 B6 5D 04 BE C9  ....0).9....]...\n0010: 4E E7 94 F0                                        N...\nClient write key:\n0000: AE 2E 07 3D 29 4F 4F 27   34 EC 3D DA 5D 92 69 AC  ...=)OO'4.=.].i.\nServer write key:\n0000: D7 2D 6D 18 93 8F 45 7B   36 53 F8 18 94 C7 1E 3B  .-m...E.6S.....;\n... no IV derived for this protocol\n[read] MD5 and SHA1 hashes:  len = 70\n0000: 10 00 00 42 41 04 01 E3   93 26 01 D2 8C 84 C0 09  ...BA....&......\n0010: 3A 87 46 16 16 96 CC DC   5E 6A 97 C4 70 35 E8 C4  :.F.....^j..p5..\n0020: 22 66 26 59 D8 4F 28 F8   1D 6B BA 88 F9 89 6A 0D  \"f&Y.O(..k....j.\n0030: 7E 6B 34 78 77 0D 29 9A   40 C3 C2 76 83 28 3D 27  .k4xw.).@..v.(='\n0040: C2 FE 6B 9C 37 F2                                  ..k.7.\n[Raw read]: length = 5\n0000: 14 03 03 00 01                                     .....\n[Raw read]: length = 1\n0000: 01                                                 .\nWebsocketSelector10, READ: TLSv1.2 Change Cipher Spec, length = 1\n[Raw read]: length = 5\n0000: 16 03 03 00 40                                     ....@\n[Raw read]: length = 64\n0000: BD A4 20 2C 75 D0 76 8C   17 BD A2 E1 34 EE 90 88  .. ,u.v.....4...\n0010: CE 4A 2C 64 EE 52 C5 45   47 3A E7 71 21 D9 29 B6  .J,d.R.EG:.q!.).\n0020: E7 A6 70 21 1A 2C B8 8B   07 7F D8 09 E3 55 93 57  ..p!.,.......U.W\n0030: E4 E6 80 99 E1 FB BA DF   B5 79 C1 81 33 5F E5 44  .........y..3_.D\nWebsocketSelector10, READ: TLSv1.2 Handshake, length = 64\nPadded plaintext after DECRYPTION:  len = 64\n0000: 3A F9 8B BC 96 6D 1B 5D   F1 18 4F 04 3B EB 6E FB  :....m.]..O.;.n.\n0010: 14 00 00 0C 4A 69 B1 4C   16 59 CC 96 9B 7F 6C 22  ....Ji.L.Y....l\"\n0020: BF 98 AE 87 17 40 7A 6D   B5 90 3D AD B8 46 B6 F8  .....@zm..=..F..\n0030: E0 0E 24 CF 0B 0B 0B 0B   0B 0B 0B 0B 0B 0B 0B 0B  ..$.............\n Finished\nverify_data:  { 74, 105, 177, 76, 22, 89, 204, 150, 155, 127, 108, 34 }\n\n[read] MD5 and SHA1 hashes:  len = 16\n0000: 14 00 00 0C 4A 69 B1 4C   16 59 CC 96 9B 7F 6C 22  ....Ji.L.Y....l\"\nWebsocketSelector10, WRITE: TLSv1.2 Change Cipher Spec, length = 1\n Finished\nverify_data:  { 231, 71, 131, 63, 36, 125, 3, 238, 159, 185, 212, 8 }\n***\n[write] MD5 and SHA1 hashes:  len = 16\n0000: 14 00 00 0C E7 47 83 3F   24 7D 03 EE 9F B9 D4 08  .....G.?$.......\nPadded plaintext before ENCRYPTION:  len = 64\n0000: 00 DC 66 AB 77 B9 6C 21   D3 54 18 89 75 54 E3 A2  ..f.w.l!.T..uT..\n0010: 14 00 00 0C E7 47 83 3F   24 7D 03 EE 9F B9 D4 08  .....G.?$.......\n0020: 21 CB BC B5 9F 81 1C C6   95 D3 1F 6A 0C 74 B4 55  !..........j.t.U\n0030: 8F 96 46 26 0B 0B 0B 0B   0B 0B 0B 0B 0B 0B 0B 0B  ..F&............\nWebsocketSelector10, WRITE: TLSv1.2 Handshake, length = 64\n%% Cached server session: [Session-2, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA]\n[Raw write]: length = 6\n0000: 14 03 03 00 01 01                                  ......\n[Raw write]: length = 69\n0000: 16 03 03 00 40 25 76 3C   A0 98 BF F9 9A 53 D0 16  ....@%v<.....S..\n0010: 93 16 BC 6D 1D 73 A7 4A   F6 E3 19 D9 B9 25 8F 5C  ...m.s.J.....%.\\\n0020: F9 FB 42 C0 3C 16 19 DB   1D C9 BE C6 D9 DD 78 4D  ..B.<.........xM\n0030: 63 52 01 46 F8 39 8A BD   CA 02 2D 29 C1 F5 D9 76  cR.F.9....-)...v\n0040: CA C8 9D C0 D9                                     .....\nWebsocketSelector10, called closeOutbound()\nWebsocketSelector10, closeOutboundInternal()\nWebsocketSelector10, SEND TLSv1.2 ALERT:  warning, description = close_notify\nPadded plaintext before ENCRYPTION:  len = 48\n0000: 4B 75 47 88 E9 58 87 82   6E 1D E6 48 29 6D 07 B7  KuG..X..n..H)m..\n0010: 01 00 0C A1 91 57 40 B6   C0 D1 DB 07 82 06 7A 4E  .....W@.......zN\n0020: 9A CD 49 59 94 F9 09 09   09 09 09 09 09 09 09 09  ..IY............\nWebsocketSelector10, WRITE: TLSv1.2 Alert, length = 48\n%% Invalidated:  [Session-2, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA]\n[Raw write]: length = 53\n0000: 15 03 03 00 30 9C F3 36   09 95 51 F9 46 52 E9 40  ....0..6..Q.FR.@\n0010: B6 E8 DB E0 2E 68 2D ED   22 A9 5E D5 06 73 B1 31  .....h-.\".^..s.1\n0020: 5C 3F 20 2E 05 0D 8E 3E   36 33 D9 F5 5D 6A 58 EC  \\? ....>63..]jX.\n0030: A5 77 FD C5 E9                                     .w...\nRemoving connection which is not in the connections collection! Possible no handshake recieved! org.java_websocket.WebSocketImpl@103d2a8\n```. Hi @marci4 \ni'm using the websokcet server for localhost wss://localhost;6789\ni'm using 3 SSLWebSocketServerFactory methods , \n```java\npublic static SSLContext getSSLConextFromKeystore3() throws NoSuchAlgorithmException, CertificateException, FileNotFoundException, IOException, UnrecoverableKeyException, KeyStoreException, KeyManagementException{\n    String storeType = \"JKS\";\n    //String keystore = \"keylocalhost.jks\";\n    char[] storePassword = new char[] {'1', '2', '3', '4', '5', '6'};\n    char[] keyPassword = new char[] {'1', '2', '3', '4', '5', '6'};\n    KeyStore ks = KeyStore.getInstance(storeType);\n    InputStream inputStream = UtilFile.searchResource(\"resource/\"+KEYSTORE);\n    ks.load(inputStream, storePassword);\n    /*\n    KeyStore ks = KeyStore.getInstance(storeType);\n    ClassLoader classLoader = SofiSignaJWS.class.getClassLoader();\n     String path  = classLoader.getResource(\"resource/\"+keystore).getPath();\n     File kf = new File( path );\n\n\n    ks.load(new FileInputStream( kf ), storePassword);\n\n*/\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n        kmf.init(ks, keyPassword);\n        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n        tmf.init(ks);\n    SSLContext sslContext;\n    sslContext = SSLContext.getInstance(\"TLS\");\n    sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n\n    return sslContext;\n\n}\n\n```\n```java\npublic static SSLContext getSSLConextFromKeystore()  {\n        // load up the key store\n        String storeType = \"JKS\";\n        //String keystore = \"keylocalhost.jks\";\n        String storePassword = \"123456\";\n        String keyPassword = \"123456\";\n    KeyStore ks;\n    SSLContext sslContext = null;\n\n    try {\n        ClassLoader classLoader = SofiSignaJWS.class.getClassLoader();\n         String path  = classLoader.getResource(\"resource/\"+KEYSTORE).getPath();\n         File kf = new File( path );\n            ks = KeyStore.getInstance(storeType);\n            ks.load(new FileInputStream( kf ), storePassword.toCharArray());\n            KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n            kmf.init(ks, keyPassword.toCharArray());\n            TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n            tmf.init(ks);\n\n\n            sslContext = SSLContext.getInstance(\"TLS\");\n            sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n    } catch (UnrecoverableKeyException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (KeyManagementException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (KeyStoreException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (NoSuchAlgorithmException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (CertificateException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (FileNotFoundException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n\n/*\n            KeyStore ks = KeyStore.getInstance( STORETYPE );\n         ClassLoader classLoader = SofiSignaJWS.class.getClassLoader();\n         String path  = classLoader.getResource(\"resource/\"+KEYSTORE).getPath();\n         System.out.println(path);\n\n        File kf = new File( path );\n        System.out.println(kf.getAbsolutePath());\n        ks.load( new FileInputStream( kf ), STOREPASSWORD.toCharArray() );\n\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance( \"SunX509\" );\n        kmf.init( ks, KEYPASSWORD.toCharArray() );\n        TrustManagerFactory tmf = TrustManagerFactory.getInstance( \"SunX509\" );\n        tmf.init( ks );\n\n        SSLContext sslContext = null;\n        sslContext = SSLContext.getInstance( \"TLS\" );\n        sslContext.init( kmf.getKeyManagers(), tmf.getTrustManagers(), null );\n\n        //\n        s.setWebSocketFactory(new DefaultSSLWebSocketServerFactory( sslContext ));\n    */\n    return sslContext;\n}\n\n```\n```java \npublic static WebSocketServerFactory getSSLConextFromKeystore2(){\n    String STORETYPE = \"JKS\";\n    //String KEYSTORE = \"keylocalhost.jks\";\n    String STOREPASSWORD = \"123456\";\n    String KEYPASSWORD = \"123456\";\n\n    CustomSSLWebSocketServerFactory factory = null;\n\n    try {\n        KeyStore ks = KeyStore.getInstance(STORETYPE);\n        ClassLoader classLoader = SofiSignaJWS.class.getClassLoader();\n         String path  = classLoader.getResource(\"resource/\"+KEYSTORE).getPath();\n\n        File kf = new File(path);\n        ks.load(new FileInputStream(kf), STOREPASSWORD.toCharArray());\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n        kmf.init(ks, KEYPASSWORD.toCharArray());\n        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n        tmf.init(ks);\n\n        SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), new java.security.SecureRandom());\n\n        //Lets remove some ciphers and protocols\n        SSLEngine engine = sslContext.createSSLEngine();\n        SSLParameters sslParams = new SSLParameters();\n        //SSLSocketChannel2 \n        List<String> ciphers = new ArrayList<String>( Arrays.asList(engine.getEnabledCipherSuites()));\n        //ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\");\n        //ciphers.add(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\");\n        for (String string : ciphers) {\n            System.out.println(\"cipher : \" + string);\n        }\n        ciphers = new ArrayList<String>( Arrays.asList(engine.getSupportedCipherSuites()));\n        for (String string : ciphers) {\n            System.out.println(\"Supppoted cipher : \" + string);\n        }\n        ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\");\n        ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\");\n        ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\");\n        ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\");\n        ciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\");\n        ciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\");\n        ciphers.remove(\"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\");\n       //Ciphers removed on my own\n        ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\");\n        ciphers.remove(\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\");\n        ciphers.remove(\"TLS_RSA_WITH_AES_128_GCM_SHA256\");\n        ciphers.remove(\"TLS_RSA_WITH_AES_128_CBC_SHA256\");\n        ciphers.remove(\"TLS_RSA_WITH_AES_128_CBC_SHA\");\n        engine.setEnabledCipherSuites(ciphers.toArray(new String[]{}));\n        engine.setUseClientMode(false);\n        List<String> protocols = new ArrayList<String>( Arrays.asList(engine.getEnabledProtocols()));\n        //protocols.remove(\"SSLv3\");\n\n        for (String string : protocols) {\n            System.out.println(\"Enabled Protocol : \" + string);\n        }\n        protocols = new ArrayList<String>( Arrays.asList(engine.getSupportedProtocols()));\n        for (String string : protocols) {\n            System.out.println(\"Suppored Protocol : \" + string);\n        }\n        factory = new CustomSSLWebSocketServerFactory(sslContext, protocols.toArray(new String[]{}), ciphers.toArray(new String[]{}));\n\n         System.out.println(\"default : \" + KeyStore.getDefaultType());\n\n        // Different example just using specific ciphers and protocols\n        /*\n        String[] enabledProtocols = {\"TLSv1.2\"};\n        String[] enabledCipherSuites = {\"TLS_RSA_WITH_AES_128_CBC_SHA\", \"TLS_RSA_WITH_AES_256_CBC_SHA\"};\n        factory = new CustomSSLWebSocketServerFactory(sslContext, enabledProtocols,enabledCipherSuites);\n        */\n    } catch (UnrecoverableKeyException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (KeyManagementException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (KeyStoreException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (NoSuchAlgorithmException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (CertificateException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (FileNotFoundException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n    return factory;\n}\n\n```. everytime i made the test with all the 3. hi @marci4\nhow to enable the extension by code ?\nFor your information , this code is working in IE if i use Java 1.7u80 or Java 8 but not if i use 1.6u45 or 1.7u0. thank you @marci for your time, can you juste give me some tested ciphers in java 6 or 7 ?. > \n\nHello @Forsties08,\nthere should always be a 404 Websocket Upgrade Failure since it is a different specification!\nGreetings\nmarci4\n\nHi @marci4 \nWhat does mean 404 Websocket Upgrade Failure ?\nI wanna customize the hello message if it's possible when i access https://XXXXXX:PORT. ",
    "sww0825521xy": "Hi marci4\nI use setConnectionLostTimeout to set timeout for both server and client device. If client lost connection, server will receive the onClose after timeout. But if server lost connection, client will not receive the onClose after timeout.\nWebSocketClient.setConnectionLostTimeout(9);. Hi marci4\nI have uploaded the client log and enable the log switch.\nclient.txt\nclient onOpen : 07-11 05:19:11.679: I/ClientService(9488): onOpen:Web Socket Protocol Handshake\nclient close log will print :  onClose code:\nIf the server lost connection, the client will not receive the onClose callback.. Hello marci4\nYou can start from line 4606 when the client receive onOpen callback.. Hello marci4\nI will download the master code and test it. Give you feedback ASAP.. Hello marci4\nI download the master code with the patch #506 and test on my android devices.\nif server lost connection, client now will receive the onClose callback after the timeout.\npatch #506 fix the issue.\n. ",
    "UannaFF": "Thank you for answering! Yes I implemented something like the BKS keystore example and it worked because previously I was getting another error: refused handshake.\nI'm guessing my problem now has something to do with the handshake header? Because I tried connecting with my web app example and the server accepted the request.\nI read the header has to have this form:\nGET /chat HTTP/1.1\nHost: server.example.com\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==\nSec-WebSocket-Protocol: chat, superchat\nSec-WebSocket-Version: 13\nOrigin: http://example.com\nI know in the creation of the web socket client you can pass a Hash map as a header,and  i've been just sending an empty cmap. So doing something like this should work, right? \nMap<String, String> cmap = new HashMap<String, String>();\n....\ncmap.put(\"Upgrade\", \"websocket\");\ncmap.put(\"Connection\", \"Upgrade\"\ncmap.put(\"Origin\", \"wss://192.168.1.6:8089/ws\");\n.....\nwss = new WebSocketSecureClient(uri, new Draft_6455(), cmap, TIMEOUT);\n....\n\nIt has some special requirements I don't know if I have to put them explicitly: it has to have an empty line at the end, every line must end with \\r\\n and I don't know how would I put the first line.\nI'm basing this in this question https://stackoverflow.com/questions/27332956/create-a-websocket-handshake-using-android-as-server-and-a-browser-as-client\nBut here instead of a Hashmap, they have a String to represent the header.. ",
    "TOTOROYang": "you can try this draft\nhttps://github.com/TooTallNate/Java-WebSocket/commit/e30eb11a68a2e6733acfb330f2e031fb90d7d88d.  ok,i see. I will implement a new draft.. I renamed and add some description.. wss://apprtc-ws.webrtc.org:443/ws\nyou can try to connect this webSocket server.\nI find out this webSocket (use go) need origin.\ni find it at http://websocket.org/echo.html.. ",
    "ayyappan6031": "Hi Marcel,\nIt is not working for textframes.\nI have added the below code  in line 370 in WebSocketImpl.java.\nwsl.onWebsocketMessage( this, Charsetfunctions.stringUtf8(\ncurrent_continuous_frame.getPayloadData() ) );\nIt works. But  is it the correct way?\nI'm using 1.3.3 version.\nThanks,\nAyyappan N\nOn Wed, Jul 26, 2017 at 8:07 PM, Marcel Prestel notifications@github.com\nwrote:\n\nHello @ayyappan6031 https://github.com/ayyappan6031,\nfirst of all sorry for the delayed response. I was on holiday for a few\ndays and normally don't read any emails.\nI think this issue is related to #423\nhttps://github.com/TooTallNate/Java-WebSocket/issues/423.\nDoes it always not work for messages longer then 8192 characters? Does it\njust not work for TextFrames or also for BinaryFrames?\nGreetings\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/525#issuecomment-318072820,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADDKa54ZrI5hJGP5z0mzBOhJAT_JplEIks5sR08SgaJpZM4OiYWo\n.\n. Hi marcel,\nThank you for quick response. I tried the latest version 1.3.4 also. I'm\nnot getting the messages larger than 8192 chars. I have attached the sample\nmessage text file.\n\nOn Thu, Jul 27, 2017 at 1:59 PM, Marcel Prestel notifications@github.com\nwrote:\n\nHello @ayyappan6031 https://github.com/ayyappan6031\ncould you possible post an example String when it is not working (like on\nhttps://gist.github.com/ ).\nCould you also update to 1.3.4, since this is the latest release!\nI will look into it a bit more!\nGreetings\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/525#issuecomment-318295452,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADDKa5qINeuXym4PIE7AAiri4gg3zJR5ks5sSEp2gaJpZM4OiYWo\n.\n\n\n{\"paramater1\":\"1263871638162378\",\"parameter2\":\"3\",\"stringarray\":[\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\",\"sdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuygsdfjksdfjksjflkjsluerkjeriuwyriuwerwygjhsfggfjgsyfgfjhsgeuyfgekuyg\"]}. ",
    "gwlucas": "I'm also having this issue.  I am using text messages.  I'm haven't quite learned to navigate the code yet, but I may have spotted something that helps.\nLooking at WebSocketInpl.java, it looks like there is a loop in decodeFrames which accepts incoming frames from the socket buffer.  When a frame is not finished, it is stored in the class member element current_continuous_frame.  When a future frame is received with a \"fin\" value of true, its content is appended to the current_continuous_frame.  But, IMMEDIATELY AFTER, the current_continuous_frame is set to null (line 419 or thereabouts).    So both the data from the original frame and the incoming frame is lost.\nAlso, I notice that there are methods with the name onWebsocketFragment which appear to be do-nothings.  Is that correct?\nHope some of this helps.\nGary\nP.S. Maybe there needs to be a call to wsl.onWebSocketMessage()  after the append? \nP.P.S.  Okay, I tried putting in the call and it seems to work.  I am now receiving 15 K length text messages just fine.  \nAlso, this is off topic a little, but I have a question.  I notice that PONG messages are being passed to the onMessage method of the WebSocketClient class as text messages.   I'm new to websockets, so I have to ask.  Is this a correct behavior?  It seems to me that a PONG is something quite distinct from a text message and that the logic I've had to add to handle it (look for a 1 character message, check to see if that character is a linefeed) is kind of a kludge. \n. Well, as I said I\u2019m new to websockets (and web technology in general), so please excuse me if I get some terminology wrong. Also, I didn\u2019t set up the server, so I\u2019m not 100 percent sure what they\u2019re doing on that side\u2026\u00a0 I\u2019ll try to provide the details as I understand them.\nThe place where I am running into trouble is in a websocket client application.\u00a0 The server is providing text message responses that are larger than 8K (1 frame?) and things fall apart when the incoming message is larger than 8K. I think the application running on the server side is an Apache message queue.\u00a0\u00a0 The application I wrote is essentially a reverse proxy which accepts connections from the Internet and relays traffic to a protected server where the data originates (with some extra statistics gathering and other non-related processing).\nFrom your description, it sounds to me that in the Chrome test you mention, Chrome would be the client and be performing in the same role as my proxy application.\u00a0 \n\u00a0\u00a0\u00a0\nI could take a cut at cleaning up the code in WebSocketImpl.java, but I really don\u2019t have the set up right now to test it adequately for applications other than my own. \u00a0\u00a0The good news is that the problem in the decodeFrames code sticks out like a sore thumb, so that should make it a bit easier to read.\nGary\nFrom: Marcel Prestel [mailto:notifications@github.com] \nSent: Wednesday, August 02, 2017 2:33 PM\nTo: TooTallNate/Java-WebSocket\nCc: gwlucas; Mention\nSubject: Re: [TooTallNate/Java-WebSocket] unable to receive message size more than 8192 char (#525)\nHello @gwlucas,\nI still have an issue just to reproduce it :(\nPlease tell me what server and client you are using (as well as ws or wss).\nAnd does this always happen with every random message bigger then 15k characters?\nTell me what you are doing different to me ;)\nTried it with chrome as client as well as just java-websocket server and client and it always works for me...\nThe code you are mentioning is not writen by me. So I do have to read/understand it myself ;)\nonWebsocketFragment is an old API, which I probably will deprecate over time (like I did with the drafts)\nRegarding the PONG message, no this should not be the case and it is also not the case for me...\nPONG messages are specified by the spec and have their own opcode, so you have to handle these separat to a text message for example!\nGreetings\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.. Well, let me dig a bit and ask my coworkers a few questions and see if I can think of more detail about their side of the implementation.\nI can tell you that decodeFrames() is getting called multiple times and processing multiple frames.\u00a0 The first frame comes in with an Opcode.CONTINUOUS and a \u201cfin\u201d value of false.\u00a0 \u00a0\u00a0The number of bytes available is 8K.\u00a0 The next query comes in with fin=TRUE and the rest of the bytes.\u00a0 In the future, I fully expect to be dealing with larger queries.\u00a0 But so far it\u2019s only been two frames.\nGary\nFrom: Marcel Prestel [mailto:notifications@github.com] \nSent: Thursday, August 03, 2017 3:52 PM\nTo: TooTallNate/Java-WebSocket\nCc: gwlucas; Mention\nSubject: Re: [TooTallNate/Java-WebSocket] unable to receive message size more than 8192 char (#525)\nHello @gwlucas,\neven though your help is really appreciated you would help me a lot if you could tell me exactly what you are doing so messages with a size bigger then 8k will not be send ;)\nI am more used to the code and I will find a way to not break all the protocol specific requirements ;)\nApart from this, yes I will look into your mentioned code parts!\nGreetings\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "Davevb": "I'm having the same issue. I try to reconnect by making a new instance every 10 sec. For example, when a connection is made after 2 minutes I see 12 connections on server side and only the last one is used.... @marci4 Thx! Great method!\nHowever, Is there any known issues using reconnect on Android 5.1. On Android 4.4.4 it works fine. On 5.1.1 it won't reconnect.... Hi, Sorry. I was on holiday.\n\nThe server we are using is a small \"black box\" with Windows 10 IoT running on it.\nNo just ws\nI can only test on 1 device and that's our touchscreen (http://prodvx.com/products/integrated-android-displays/prodvx-appc-10-dskp-poe)\nThis is hard. Because you will need a full home automation installation. The touchscreen connects locally to the instalation with the WIndows 10 Iot\n\nBest regards. I don't know if it is ao any help, but here is the technical information of the device. ",
    "devgianlu": "I've done some more debugging:\n\nthrowing a RuntimeException doesn't work either\nI can close the connection with WebSocket#close(int, String) but the close code and the message are overwritten \nIf I call WebSocket#closeConnection(int, String), the connection is closed but with close code -1.\n\nI've also done some \"breakpointing\" through the source code in WebSocketImpl and I can reach the end of #flushAndClose without any problem.. ",
    "retrofreak83": "Thanks for your answer.\nYou are right, according to the RFC and the RFCs meaning of the notion SHOULD, it seems highly reasonable that the other websocket server answers the frameworks pings.\n\nApart from this, you can always turn the lost connection detection off!\n\nYes, for sure, but I thought, extend an existing detection which would work in this case is better than fully go without a check :). I'm fine with closing. At least I could convince the particular developer to implement a \"pong\" meanwhile ;). ",
    "MasterEx": "Hi @marci4,\nThank you for your answer. I see how the compression extensions complicate this issue.\nI guess this could get partially addressed if the Drafts (or better some subclass of WebSocketImpl, i.e. CachedWebSocketImp) were caching the last X binary frames and reused them whenever this was possible. I am not sure if this is the best idea though.\nRegarding your code snippet I guess you wanted to use sendFrame() instead of send() or maybe pass the whole List of FrameData that createFrames returns in send. I guess either would be an improvement.\nBased on my original code snippet and your remark that different endpoints may use different Draft implementations I guess this could be an improved solution for many clients.\njava\npublic void broadcast(byte[] buffer, Collection<WebSocket> clients) {\n    Map<Draft, List<ByteBuffer>> draftFrames = new HashMap<>();\n    for (WebSocket client : clients) {\n        Draft draft = client.getDraft();\n        if(!draftFrames.contains(draft)) {\n            List<Framedata> frames = draft.createFrames(ByteBuffer.wrap(buffer), true);\n            List<ByteBuffer> outgoingFrames = new ArrayList<ByteBuffer>();\n            for (Framedata f : frames) {\n                outgoingFrames.add(draft.createBinaryFrame(f));\n            }\n            draftFrames.put(draft, outgoingFrames);\n        }\n        client.write(draftFrames.get(draft));\n    }\n}\nRegarding the project I am working on, I would like to run a server on an android device and stream data to connected clients (in a local network). As I was stress testing my prototype I saw that the server was making some tiny pauses while sending the data as the number of clients were increasing. The pauses were more obvious after a while.\nBy running a profiler I identified that the pauses where happening when the garbage collector was running. Of course the garbage collection was happening more often as the memory consumption was getting increased after the addition of each client.\nAnyway, thank you for your time and your suggestions!. Hi @marci4,\nYes, I think a \"broadcast()\" method would be very useful and it would definetely cover my case.\nJust a thought, that you may already have in mind, about it. In most cases a broadcast() that sends a String or byte array to all the connected clients would suffice. However, there are cases where one would like to send the same message only to a specific sub-group of the connected clients and not to all.\nAn example would be a chat application that supports different channels. When a client sends a message to a specific channel then all the other clients connected to the specific channel should receive the message and not all the clients connected to the server.\nSo in case you implement this, I think that it would be more beneficial if you provide a broadcast() that accepts the list of the clients that the message should be delivered or even better provide two, one that accepts the list of the recipient clients and one that sends the message to all the connected clients.\nThank you very much for your time and effort!. Hi @marci4,\nYes, sure! Thanks!. ",
    "atlithorn": "Thanks for your response. I activated debug printout and received the following. Looks like the sockJS server is responding as expected? \n09-02 15:40:36.653 7975-8242/com.gangverk.sling I/System.out: write(163): {GET / HTTP/1.1\n09-02 15:40:36.653 7975-8242/com.gangverk.sling I/System.out: Connection: Upgrade\n09-02 15:40:36.653 7975-8242/com.gangverk.sling I/System.out: Host: test-socket.sling.is:443\n09-02 15:40:36.653 7975-8242/com.gangverk.sling I/System.out: Sec-WebSocket-Key: RandomStuff==\n09-02 15:40:36.653 7975-8242/com.gangverk.sling I/System.out: Sec-WebSocket-Version: 13\n09-02 15:40:36.653 7975-8242/com.gangverk.sling I/System.out: Upgrade: websocket\n09-02 15:40:36.653 7975-8242/com.gangverk.sling I/System.out: }\n09-02 15:40:36.859 7975-8242/com.gangverk.sling I/System.out: process(188): {HTTP/1.1 101 Switching Protocols\n09-02 15:40:36.859 7975-8242/com.gangverk.sling I/System.out: Server: nginx/1.10.1\n09-02 15:40:36.859 7975-8242/com.gangverk.sling I/System.out: Date: Sat, 02 Sep 2017 15:39:54 GMT\n09-02 15:40:36.859 7975-8242/com.gangverk.sling I/System.out: Connection: upgrade\n09-02 15:40:36.859 7975-8242/com.gangverk.sling I/System.out: Upgrade: websocket\n09-02 15:40:36.859 7975-8242/com.gangverk.sling I/System.out: Sec-WebSocket-Accept: MoreRandomStuff=\n09-02 15:40:36.859 7975-8242/com.gangverk.sling I/System.out: }\n09-02 15:40:36.862 7975-8242/com.gangverk.sling I/System.out: open using draft: Draft_6455\n09-02 15:40:36.862 7975-8242/com.gangverk.sling I/System.out: Connection lost timer started\n09-02 15:41:36.868 7975-8259/com.gangverk.sling I/System.out: send frame: Framedata{ optcode:PING, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:0], payload:[]}\n09-02 15:41:36.868 7975-8259/com.gangverk.sling I/System.out: write(6): {\ufffd\ufffdP\ufffd\ufffd\ufffd}\n09-02 15:41:37.060 7975-8242/com.gangverk.sling I/System.out: process(2): {\ufffd\ufffd\ufffd}\n09-02 15:41:37.061 7975-8242/com.gangverk.sling I/System.out: matched frame: Framedata{ optcode:PONG, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:0], payload:[]}\n09-02 15:42:36.865 7975-8259/com.gangverk.sling I/System.out: send frame: Framedata{ optcode:PING, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:0], payload:[]}\n09-02 15:42:36.865 7975-8259/com.gangverk.sling I/System.out: write(6): {\ufffd\ufffd\u001a\ufffd5j}\n09-02 15:42:37.059 7975-8242/com.gangverk.sling I/System.out: process(2): {\ufffd\ufffd\ufffd}\n09-02 15:42:37.059 7975-8242/com.gangverk.sling I/System.out: matched frame: Framedata{ optcode:PONG, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:0], payload:[]}\n09-02 15:43:36.865 7975-8259/com.gangverk.sling I/System.out: send frame: Framedata{ optcode:PING, fin:true, rsv1:false, rsv2:false, rsv3:false, payloadlength:[pos:0, len:0], payload:[]}\n09-02 15:43:36.866 7975-8259/com.gangverk.sling I/System.out: write(6): {\ufffd\ufffd\u001f6Y\ufffd}\n09-02 15:43:37.057 7975-8242/com.gangverk.sling I/System.out: Connection lost timer stoped. Debugging it some more and it appears not to be the client that is terminating the connection.\nSeems weird that it always disconnects immediately after the ping however. \nI'll debug on the server and report back.. I don't think so. We have an older version of the server which runs on https://github.com/websockets/ws which runs fine forever on exact same client code.\nUnfortunately we had too many browser clients needing a fallback so we switched to https://github.com/sockjs/sockjs-node. That solved the browser problem but introduced a mobile app problem instead \ud83d\ude15.\nI'm 99.9% sure this is not a java-websocket problem so feel free to close. I will report back here regardless.. Tried it. Same result. Server kicks us after a couple of minutes. \nTime to dig into sockjs internals I guess.. ",
    "AoEiuV020": "@marci4 there is a header key is \"X-Real-IP\", how to get it ?. ",
    "wangdar": "Hi @marci4 \nThanks for you reply, this is may server side problem, I will report a issue my server side developer\nalso change my check interval to high value for sending ping to server.. ",
    "forresthopkinsa": "I'll try Google Translate. @hhhaiai  :\n\u6211\u5728\u7528\u8c37\u6b4c\u7ffb\u8bd1\nmarci4\u60f3\u77e5\u9053\u8fd9\u4e9b\u95ee\u9898\n\u9996\u5148\uff0c\u4f60\u6709\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f\n\u63a5\u4e0b\u6765\uff0c\u60a8\u6b63\u5728\u4f7f\u7528\u4ec0\u4e48\u7248\u672c\u7684Android\uff1f\n\u4f60\u4f7f\u7528ws\u8fd8\u662fwss\uff1f\n\u54ea\u4e9b\u7aef\u70b9\u6709\u95ee\u9898\uff1f\n\u4ec0\u4e48\u6b65\u9aa4\u5bfc\u81f4\u95ee\u9898\uff1f  \u91cd\u73b0\u6b65\u9aa4. Ah, I see. Got it. Thanks!\nAnd yeah, for anyone else wondering, OkHttp combines OnError and OnClose into one method, OnFailure.. Oh, no, I'm good. Sorry, I forgot to close. Thanks for the help. \ud83d\udc4d . ",
    "oscarthecat": "He is asking about the 8KB receiving cache size limit, which can be set with custom values.\nAnd forresthopkinsa's translation with google is read good in Chinese :). And I just checked URI.java in jdk 1.8\n```java\n    public String getQuery() {\n        if ((decodedQuery == null) && (query != null))\n            decodedQuery = decode(query);\n        return decodedQuery;\n    }\n``\nand so isString part1 = uri.getRawPath();`. ",
    "KmooKay": "Thanks , i try this way and it worked , i will close this issue.. Our server is written by PHP , i guess that the heart beat check is the server written with your code will do , i hadn't read your code , i just use that , maybe what i understand is wrong.. ",
    "idontusenumbers": "I replaced the code snippet from above with the following code snippet and it seems to be working now. I did very minimal testing (and no continuous text testing, which seems to be the current focus of this code branch)\n```java\n} else if( !frame.isFin() || curop == Framedata.Opcode.CONTINUOUS ) {\n    if( curop != Framedata.Opcode.CONTINUOUS ) {\n        if( current_continuous_frame != null )\n            throw new InvalidDataException( CloseFrame.PROTOCOL_ERROR, \"Previous continuous frame sequence not completed.\" );\n        current_continuous_frame = frame;\n    } else if( frame.isFin() ) {\n        if( current_continuous_frame == null )\n            throw new InvalidDataException( CloseFrame.PROTOCOL_ERROR, \"Continuous frame sequence was not started.\" );\n    try {\n        webSocketImpl.getWebSocketListener().onWebsocketMessageFragment( webSocketImpl, frame );\n    } catch ( RuntimeException e ) {\n        webSocketImpl.getWebSocketListener().onWebsocketError( webSocketImpl, e );\n    }\n\n    current_continuous_frame.append( frame );\n\n\n    //Check if the whole payload is valid utf8, when the opcode indicates a text\n    if( current_continuous_frame.getOpcode() == Framedata.Opcode.TEXT ) {\n        //Checking a bit more from the frame before this one just to make sure all the code points are correct\n        int off = Math.max( current_continuous_frame.getPayloadData().limit() - 64, 0 );\n        current_continuous_frame.append( frame );\n        if( !Charsetfunctions.isValidUTF8( current_continuous_frame.getPayloadData(), off ) ) {\n            throw new InvalidDataException( CloseFrame.NO_UTF8 );\n        }\n    }\n\n    if( current_continuous_frame.getOpcode() == Framedata.Opcode.TEXT ) {\n        try {\n            webSocketImpl.getWebSocketListener().onWebsocketMessage( webSocketImpl, Charsetfunctions.stringUtf8( current_continuous_frame.getPayloadData() ) );\n        } catch ( RuntimeException e ) {\n            webSocketImpl.getWebSocketListener().onWebsocketError( webSocketImpl, e );\n        }\n        return;\n    } else if( current_continuous_frame.getOpcode() == Framedata.Opcode.BINARY ) {\n        try {\n            webSocketImpl.getWebSocketListener().onWebsocketMessage(webSocketImpl, current_continuous_frame.getPayloadData());\n        } catch (RuntimeException e) {\n            webSocketImpl.getWebSocketListener().onWebsocketError(webSocketImpl, e);\n        }\n    }\n\n    current_continuous_frame = null;\n\n```. For what it's worth, I copied the Draft_6455 class into my src folder so I could modify it in isolation (which seems to be encouraged by the architecture) but readVersion is not public =(. jdk1.8.0_92\nVersion 61.0.3163.100 (Official Build) (64-bit)\nNo SSL\nI briefly looked through the tests I found and didn't see anything that actually tests the protocol; Is the bulk of the test cases somewhere else?\nI don't know the specs well enough to use the correct terminology, but the outline of what causes the issue is in the original issue description; Send the following frames to the server:\nBINARY, isFin = false\nCONTINUOUS, isFin = true\nExtending and overriding doesn't work or at least is not as easy as you suggest. It uses a private member of Draft_6455, after making a copy for the subclass, looks like copyInstance() on the superclass creates instances of the old instance. copyInstance() accesses additional (not as easily replaced) private members.. My app sends files from the client (Chrome) to a server (using this library). The app basically sends an \"incoming file\" message (string) with the name and size; then when it receives a response back it starts sending the file in a dynamically sized chunks (based on network conditions in an attempt to target between 100 and 500ms per chunk, eventually ending in a \"file complete\" message (string).\nThis first manifested when I sent three files in a row triggering messages in a sequence like (String) (ByteBuffer)m (String) (String) (ByteBuffer)n (String) etc. Chrome does a terrible job showing what frames are being sent; the lengths are all zero and no information about fin, continuation, etc are present. Only \"binary\".. Regardless of what my app is doing, the logic in that method doesn't seem sound, unless I just don't understand how the protocol works. Try tracing through the logic with a hypothetical partial BINARY then the completing CONTINUOUS.. I tried to pare down what I'm working on to something small and reproducible. I have attached the source code.\nStart WebSocketTest then load the HTML file. The HTML file will connect to the server and send a bunch of dummy data. The blue progress bar should get to the end; it gets to the end with my changes I mentioned earlier. You'll need to add the websocket library to the class path.\nThe app I'm writing is used to upload files to the server. With my changes, I uploaded numerous test files all at once and they all match the originals so I think it's working properly.\nThere's still a chance I'm doing something wrong, and if so, please let me know =)\nwebsockettest.zip\n. It works!\nI cloned the repo (considering it was already merged) and it seems to be working fine now. Thanks!\nThe other refactoring broke my modified Draft but that's alright since I don't need it anymore.. Because of the access levels on some of the methods before, it was easiest to bring in the code for whole class and change what I needed. The recent changes that made readVersion private prevent that code from running; removing just the method the override of acceptHandshakeAsServer was not possible since it was abstract. I suspect getting the version information from a handshake is a common task in any Draft, maybe leave that one as final or something.\nAnyway, no big deal since I don't need it any more.. ",
    "sonwh98": "thanks for responding. I will report the handshake error in a different issue\ntransit is UTF-8 encoded.  I have no problem decoding it from the javascript side in a web browser.\nin the onMessage callback the hashCode of  message:\"[\\\"a\\\",\\\"b\\\"]\" is  -120497949. However, in the same code block doing \"[\\\"a\\\",\\\"b\\\"]\".hashCode() gives  -939944225 as it does on the clojure side on the server. This tells me that the hashCode -939944225 is correct\nhttps://github.com/TooTallNate/Java-WebSocket/blob/84fc70e7d66b1720b691bdff568c010a7a7183fb/src/main/java/org/java_websocket/util/Charsetfunctions.java#L87 seems more complicated than it needs to be. it can be replaced with a oneliner\nnew String(bytes.array(), \"UTF-8\");. @marci4 I think I know whats going on, but I do not know if this is the proper behavior.\nencoding a vector in transit [\"a\"] produces a string which has 5 character and a hasCode of 85147669\n[\n\"\na\n\"\n]\nin the onMessage the value of the message is the string which has 9 characters and a hasCode of -530250003. The characters in that string is:\n\"\n[\n\\\n\"\na\n\\\n\"\n]\n\"\nit seems the string in the message has 2 extra \" and  2 extra \\ characters. is this the expected behavior?  This is not the behavior I am expecting. I should get the original string that was sent from the server. @marci4 ok i think this is a problem with the serverside clojure websocket lib i'm using https://github.com/jarohen/chord I sent a raw clojure vector without encoding it with transit and got the expected string on the kotlin side. This shows that chord websocket library already does some kind of encoding before sending it to the client. It works on clojurescript in the browser only because i'm using the chord clientside lib that somehow knows how to decode. Sorry to bother you! the fix was to configure chord to format as string instead of EDN https://github.com/sonwh98/wocket/commit/4384e898dbe60a99e0d7da50e6b5c7d12e630c58. ",
    "haruntuncay": "Hey @marci4, I want to struggle with this issue but it seems a bit dated. I just wanted to confirm whether it is still expected/needed or not.\nAlso, I may have to request your opinion on some design issues sometimes if that's okay ? \ud83d\ude05 . Hi @marci4,\nI have been doing some research on LZ77, Deflate and their implementation and now I have some free-time and I want to start on the implementation but I would like to hear your opinion on something;\nI have found this generic LZ77 implementation by Apache but I don't know about license issues and I also implemented LZ77 myself using the same hash chaining technique that is described in section 4 of RFC-1951 Deflate Algorithm with a circular-sliding window.\nNow, I don't know which one would be more suitable for the project and I wanted to hear your idea on which should be chosen. I personally would like to use my own implementation because I think it would be easier to maintain and has no license issues, btw I will share my impl on github later today.\nDo you think it is more suitable to choose ready-built implementation or implement it separately and use that ? (both for LZ77 and Deflate)\nEDIT\nI have decided to NOT to re-invent the wheel and use the LZ77 implementation provided under Apache license. Please give me a heads-up if you think that would not be appropriate for the project.\n. Hey @marci4,\nDo you know about java.util.zip.Deflater ? Based on this stackoverflow question, he says that java.util.zip.Deflater can produce rfc 1951 compliant output. Since I don't know java.util.zip.Deflater very much, I wanted to ask you about it. Do you think it can get the deflate compression part done or should I write a deflate implementation around this LZ77 implementation ?. Hey @marci4,\nHope you're doing well. When you have the time, could you please check the implementation from this gist ,  I would like to hear your opinion on it, before submitting a PR.\nBy the way, I have built an example client and tested manually for both single and fragmented frames and it works for both.. @marci4, Thank you for taking the time to review it. I will send a PR soon. Have a fun vacation :). Hi, @marci4,\nI am also interested in this project and would like to contribute soon.\nCurrently I am studying the codebase.\nHoping to be able to commit soon.. If this is planned as a new-feature or as an enhancement, I would like to help.. We could add a method to put additional headers and it could initialize private Map<String,String> headers; variable, if not initialized yet, and then just add the value. The values in the headers map would automatically be used with each call to connect() and reconnect(). \nI also added a method to remove a header since a user may not want to send every header on every call to reconnect().\nBtw, I actually have a commit ready for this, but I don't want that commit to go in to the pending PR, since that PR covers something entirely unrelated. I will send a new PR for this issue once the pending one is merged/closed.. > \n\n@haruntuncay You can submit multiple PRs at once, you just need to submit them from different branches. In general it's a good idea to work on code in feature branches, rather than your master branch like you did with the currently open PR.\n\nThank you for the notice. I wasn't aware that we could submit multiple PRs simultaneously.. Hey @marci4, Codacy/PR Quality Review is complaining about the unused static variables. I will send a commit to fix it, but do you think should I comment them out until they are needed, or remove them completely ?. Hi @marci4,\nOkay, I will leave them in place.\n\nSorry that this is not yet merged but as you know I am on vacation for 3 more weeks :)\n\nAbsolutely no problem, have a nice and fun vacation :). Hello @TooTallNate,\nThank you for this project and the invitation. I would love to help maintain and hopefully can do a good job.\nMay I ask, just out of curiosity, how did you decided to intive me to collaborate on this project ? (I ask this because I originally was chatting with the socket.io java client maintainers and was surprised to see this invitation. \ud83d\ude04 ). AFAIK, it is possible with a simple change. WebSocketServerclass holds a Collectionof connections, which is a HashSetby default. Since HashSetdoesn't allow duplicates, you can solve your problem by overriding both equalsmethod and the hashCodemethod in WebSocketImpl.java file. \nYou can get the InetSocketAddressobject of a WebSocketobject by calling getRemoteAddresson it.\nSo, in the equalsmethod, you have to compare if these two WebSocketobjects have the same hostname.\nAnd your hashCodemethod should return a value based on the hostnamevalue of InetSocketAddress.\nI think the below example would be enough to solve your problem, but of course you have to try and see.\n`\n// WebSocketImpl.java\n\n@Override\npublic int hashCode() {\n    return getRemoteSocketAddress().getHostName().hashCode();\n}\n\n@Override\npublic boolean equals(Object obj) {\n    if(this == obj)\n        return true;\n    if(!(obj instanceof WebSocket))\n        return false;\n    WebSocket wsObj = (WebSocket) obj;\n    return getRemoteSocketAddress().getHostName().equals(wsObj.getRemoteSocketAddress().getHostName());\n}\n\n`. ",
    "yuripourre": "Awesome news! Thank you.. ",
    "tiagomartines11": "I believe the new version is failing to detect some disconnection state before dispatching internal commands.\nThese are some traces that are related to this issue:\nFatal Exception: org.java_websocket.exceptions.WebsocketNotConnectedException\n--\n\u00a0 | org.java_websocket.WebSocketImpl.send\u00a0(WebSocketImpl.java:608)\n\u00a0 | org.java_websocket.WebSocketImpl.sendFrame\u00a0(WebSocketImpl.java:634)\n\u00a0 | org.java_websocket.WebSocketImpl.sendPing\u00a0(WebSocketImpl.java:641)\n\u00a0 | org.java_websocket.AbstractWebSocket$1.run\u00a0(AbstractWebSocket.java:132)\nFatal Exception: org.java_websocket.exceptions.WebsocketNotConnectedException\n--\n\u00a0 | org.java_websocket.WebSocketImpl.send\u00a0(WebSocketImpl.java:608)\n\u00a0 | org.java_websocket.WebSocketImpl.sendFrame\u00a0(WebSocketImpl.java:634)\n\u00a0 | org.java_websocket.WebSocketImpl.close\u00a0(WebSocketImpl.java:440)\n\u00a0 | org.java_websocket.WebSocketImpl.close\u00a0(WebSocketImpl.java:569)\n\u00a0 | org.java_websocket.client.WebSocketClient.close\u00a0(WebSocketClient.java:190). ",
    "pcdv": "After more investigation, the bug seems to be on client side. I gave more explicit names to created threads:\n```\nDummyClient\n    at java.net.SocketInputStream.socketRead0(Native Method)\n    at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\n    at java.net.SocketInputStream.read(SocketInputStream.java:171)\n    at java.net.SocketInputStream.read(SocketInputStream.java:141)\n    at java.net.SocketInputStream.read(SocketInputStream.java:127)\n    at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:278)\n    at java.lang.Thread.run(Thread.java:748)\nDummyClient.WebsocketWriteThread\n    at sun.misc.Unsafe.park(Native Method)\n    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)\n    at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\n    at org.java_websocket.client.WebSocketClient$WebsocketWriteThread.run(WebSocketClient.java:464)\n    at java.lang.Thread.run(Thread.java:748)\nDummyClient.connectionLostTimer\n    at java.lang.Object.wait(Native Method)\n    at java.util.TimerThread.mainLoop(Timer.java:552)\n    at java.util.TimerThread.run(Timer.java:505)\n```\nSo visibly, the client is indefinitely trying to read on its socket which has not been closed by the server. If the socket was closed, the 3 threads would probably terminate as part of the cleanup. Looks like this happens when the server is killed too soon after the client sent its close request. Confirmed by adding sleep(500) before calling stop().\nAdding a sleep() in my code is not an option because multiplied by the number of tests, it would make the test suite much longer.\nThere are 2 possible fixes:\n - client: force closing socket when close() is called (after a given delay)\n - server: force closing all client sockets when stop() is called\nEDIT:\nI just found out about method closeConnection() that does what I need, i.e. close the connection and terminate the 3 connection threads. So I guess it solves my problem...\nI suppose it is still kind of a bug that stopping the server does not disconnect the clients.\n. Hi Marcel,\nI pushed all the changes on my fork (the test + naming threads more explicitly). I can submit a PR if you like (the test suite is green when closeConnection() is called).\nFYI the behavior is indeterministic when I remove the close()/closeConnection() call: sometimes the client is disconnected, sometimes not.\nThanks\n. Hi @marci4,\nThe context is a suite of automated tests simulating client and server processes that communicate together and are then killed. I need instant close because it makes the suite faster (with several hundred tests it can have a non negligible impact).\nThe instant cleanup is required because my tests are configured to fail if they leave some dangling threads behind. In my fork, this is enforced by:\njava\n@Rule public ThreadCheck zombies = new ThreadCheck();\nWhen I submitted the issue I had missed the closeConnection() method. I now have a working solution so I don't mind if you close the issue :)\nCheers\n. ",
    "martin-mucha": "There isn't an error. I was just a suggesting to close all connections before closing server in your demo ChatServer implementation, since otherwise it does not close port immediately on linux.. Sorry about this report; examining stop method it indeed closes all connections. However, on my env, it does not close port if any connection is opened before calling stop. And calling Websocket.stop(going_away) myself before closing WebSocketServer 'seemed' to remove this issue. \nI might be wrong on that, I saw issue just a few times. I'll try to reproduce again, and if I do, I'll post proper bug report. With this one, I just thought there is error in example, which there isn't.. ",
    "Forsties08": "Oh, and my site / application WS are on different hosting . Hi ! thanks for your reply.\nDebug with the option:\nRemoving connection which is not in the connections collection! Possible no handshake recieved! org.java_websocket.WebSocketImpl@426675d6\nConnection closed because of javax.net.ssl.SSLHandshakeException: no cipher suites in common\nI use this code\nhttps://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/SSLServerCustomWebsocketFactoryExample.java\nand the certificate in the header of the example:\nkeytool -genkey -validity 3650 -keystore \"keystore.jks\" -storepass \"storepassword\" -keypass \"keypassword\" -alias \"default\" -dname \"CN=127.0.0.1, OU=MyOrgUnit, O=MyOrg, L=MyCity, S=MyRegion, C=MyCountry\"\nI trying to use Lets Encrypt but same probleme. \nMy client is Google Chrome, this is my code for the connection :\nconn = new WebSocket('wss:########:####');\nHow can i see if the other trust it ?\n. I regenerate the certificate with the adress.\nHere is the debug from server when im trying to connect : https://hastebin.com/fehudavifo.txt\nDo i need a domain or i can use directly my adress ?\nWhen i go to the url (https://ipadress:port), i have this error on the developer tools, in the network tab :\nThe certificate for this site does not contain a Subject Alternative Name extension containing a domain name or IP address.\n. OK thanks, i fixed the error with the SAN, but the https is always broken. How i can see what is missing ?. What do you mean ? sorry i dont understand ?\nI trying my url here https://www.sslshopper.com/ssl-checker.html\nAnd he said all good except :\nThe certificate is self-signed. Users will receive a warning when accessing this site unless the certificate is manually added as a trusted certificate to their web browser. You can fix this error by\nSo, i think i can use my domain ? and use the Let's Encrypt SSL of him ? or i can use his SSL without the domain ? (the domain is link to the same hosting of the WS Application with Apache). Sure, i found a solution with a proxy apache + Let's Encrypt, all works now ! thanks for your help. ",
    "wilddylan": "\u00b7\u00b7\u00b7\nWebSocketConnectReadThread-33, received EOFException: error\nWebSocketConnectReadThread-33, handling exception: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake\nWebSocketConnectReadThread-33, SEND TLSv1.2 ALERT:  fatal, description = handshake_failure\nWebSocketConnectReadThread-33, WRITE: TLSv1.2 Alert, length = 2\n[Raw write]: length = 7\n0000: 15 03 03 00 02 02 28                               ......(\nWebSocketConnectReadThread-33, called closeSocket()\nWebSocketWriteThread-36, handling exception: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake\n\u00b7\u00b7\u00b7. my question. long long . ago ... tell me timeout . ",
    "meghneelgore": "One workaround is to call WebsocketClient.setConnectionLostTimeout(0);. @marci4 Apologies, I haven't been able to check this out because the workaround works ok for me.. ",
    "szuwest": "I think this happens on the server have close but client not. I met this problem,too. it happens when server is stop(crash), but client does not know.Then client send ping, it crash. ",
    "trashCoder555": "All I'm doing is trying to connect wss.\nAnd first callback is called is onClose.\n{GET / HTTP/1.1\nConnection: Upgrade\nHost: socket.etherdelta.com:443\nSec-WebSocket-Key: WePxYcl8ybLXIBKYzBtd/A==\nSec-WebSocket-Version: 13\nUpgrade: websocket\n}\nDisconnected, reason = Invalid status code received: 520, exit code = 1002. If i'm trying to connect \"ws://socket.etherdelta.com\" instead of \"wss://socket.etherdelta.com\"\nI got this:\njavax.net.ssl.SSLHandshakeException: Handshake failed\nCaused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xdfd0f200: Failure in SSL library, usually a protocol error\nerror:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol (external/openssl/ssl/s23_clnt.c:790 0xeb4580b4:0x00000000). api was broken...\nwith another link it works fine. ",
    "ken-kentan": "added description.. I tested on emulated Android device.\nI could connect to server with old Android (less API 23).\nBut, newer Android (API 23~) did not.\nMaybe, I think the SSL WebSocketServer using not supported cipher suite in newer Android..... ?. Resolved #540 . ",
    "SiKing": "I realize this question is closed (for a while now), but I just ran into the same problem.\nOur entire environment, including the ws server, is hosted in OpenShift. There is some magic redirection based on the URI path.\nI am using just the ExampleClient from your examples. When I try to connect to our server, the initial handshake fails with:\n\nClose connection, by: us, reason: Invalid status code received: 302 Status line: HTTP/1.1 302 Found, code: 1002\n\nAnything I can do about this?. ",
    "mwfrandsen": "Thank you! I'll give the update a try in the morning.. This might be wild speculation but I'll put this here in case related - not sure I have enough to give it as an issue itself. I have about 16 connections coming and going that last a few seconds to a few minutes. Maybe 10 in 6000 of these seems to get a \"disconnected\" message for no reason. (I don't set timeouts but typically is 90-100 seconds after client stops sending and is waiting for server to return all results.) Wild speculation is that perhaps client m disconnects but timer looking over lost connections gives client n the disconnect message while it's still connected(?) (Or, similar, maybe loop of the ping above gets a disconnected client since some data structure changes and it thinks it has a connected client when it doesn't.) I can remove this or put it somewhere else if I learn more.... ",
    "hackermike": "The line numbers have changed but I see the same exception:\nException in thread \"Timer-0\" org.java_websocket.exceptions.WebsocketNotConnectedException\n        at org.java_websocket.WebSocketImpl.send(WebSocketImpl.java:598)\n        at org.java_websocket.WebSocketImpl.sendFrame(WebSocketImpl.java:624)\n        at org.java_websocket.WebSocketImpl.sendPing(WebSocketImpl.java:631)\n        at org.java_websocket.AbstractWebSocket$1.run(AbstractWebSocket.java:142)\n        at java.util.TimerThread.mainLoop(Timer.java:555)\n        at java.util.TimerThread.run(Timer.java:505)\n. I haven't been able to reproduce this except the first time so perhaps I didn't run the correct update on the first try. (?). I will try to send more when I have it. Since this seems related to some close/open mismatch, here are a couple logs from onClose() where isOpen() returned true:\norg.java_websocket.WebSocketImpl@74690a93 id=conn3 isClosing=false closed=false reported as closed but is marked open. Not removing!\norg.java_websocket.WebSocketImpl@908bb2 id=conn13 isClosing=false closed=false reported as closed but is marked open. Not removing!\n@Override\npublic void onClose(WebSocket conn, int code, String reason, boolean remote) {\n    if (conn.isOpen()) {\n       logger.error(conn + \" id=\" + id + \" isClosing=\" + conn.isClosing() + \" closed=\" + conn.isClosed() + \" reported as closed but is marked open. Not removing!\");\n    } else ...\n\n. Thanks again! I started a test with this but it will take a couple hours to run and I won't be able to check it more until morning. I am seeing some errors already, though.\nSo far: two cases show websocket closed that is still marked as open - and then errors later trying to write to it.\nFYI: The other endpoint is JavaScript running through node directly. It sends a stream to the server and reads the results. I don't see anywhere that it would be timing out or closing the connection. The connections are local so shouldn't be getting lost. But, there are a lot of simultaneous connections managed that are coming and going. On the server, I bumped the timeout from 60 seconds to 600 seconds so hopefully any ping/pong issues triggering a timeout can be eliminated.\norg.java_websocket.WebSocketImpl@12ce95da id=conn47 isClosing=false closed=false reported as closed but is marked open. Not removing!\norg.java_websocket.WebSocketImpl@12ce95da id=conn47 Unexpected exception sending message: org.java_websocket.exceptions.WebsocketNotConnectedException\norg.java_websocket.WebSocketImpl@5d4543aa id=conn221 isClosing=false closed=false reported as closed but is marked open. Not removing!\norg.java_websocket.WebSocketImpl@5d4543aa id=conn221 Unexpected exception sending message: org.java_websocket.exceptions.WebsocketNotConnectedException\n. Is there a known issue with websockets in Javascript? I was simply setting a long timeout so I could assume a disconnect was due to a dropped connection instead of a timeout. Or, do you mean to suggest I should set the timeout to 0 to disable the feature entirely?\nIn any case, shouldn't querying a connection in onClose() be marked as closed or closing instead of open?. Example just to give more detail of Javascript websocket endpoint:\nconst WebSocket = require('ws');\nthis._ws = new WebSocket(\"ws://...\");\nthis._ws.on('error', (e) => this.emit('error', e));\nthis._ws.on('open', () => this._ws.send(INT_MESSAGE));\nthis._ws.on('message', (data) => {\n  var message = JSON.parse(data);\n  ...\n});\nthis._ws.on('close', () => console.log('Connection was closed.'));\n\n. Oh, stream of audio via base64 encoded audio chunk messages.\nI don't yet have a small standalone example and will need to work on that. I won't have that right away, though.. Looking better so far! I'm about halfway through (6000+ inputs) and the only logged issues are:\n23:29:46.920 org.java_websocket.WebSocketImpl@75b08bbf id=conn92 Unexpected exception sending message: org.java_websocket.exceptions.WebsocketNotConnectedException\n23:29:47.799 org.java_websocket.WebSocketImpl@75b08bbf id=conn92 has disconnected! code=1000 reason='' remote=true isOpen=false isClosing=true closed=false\n23:58:16.978 org.java_websocket.WebSocketImpl@6f7a7a17 id=conn2609 Unexpected exception sending message: org.java_websocket.exceptions.WebsocketNotConnectedException\n23:58:18.094 org.java_websocket.WebSocketImpl@6f7a7a17 id=conn2609 has disconnected! code=1000 reason='' remote=true isOpen=false isClosing=true closed=false\nI'll need to see if the other end might have timed out though. But, no extraneous onClose calls yet.\nIn the above two cases, I assume it's unknown that the websocket is down until the send (or goes down during the send) and then the onClose is within about a second. So, that's all reasonable if it's the other end closing the connection for some reason.. Thanks! It's looking like those two cases above, processing of stream has ended and client has closed stream. Server just happens to send its periodic status message thinking the connection is still live and might get another audio stream - but fails since client has already closed the connection. So, I wouldn't consider either of those problems.\nI'm not seeing any suspicious onClose() calls but still have other issues to work through.. The extraneous onClose() with wrong state is no longer an issue. So, this part can be closed. Thanks!\nBut, a different issue started that looks like a \"stalled\" websocket that I haven't been able to track down. I haven't seen this before so it could be that some bug was introduced or could be unrelated. (In previous cases, the websocket might get closed for no reason. It seems it might stop responding at a similar point in time which makes me wonder if it's related. If everything is pushed, maybe a code diff would be worthwhile for me to look at.). @szuwest Can you elaborate? The issue that I'm currently seeing is that websocket seems to simply stop responding for no reason. I'm not sure how to submit that as a bug as as I don't have a crash or exception - but it seems to be a new behavior after these recent fixes.. Building from master as of this morning fails with the following on Ubuntu 16.04, java version \"1.8.0_151\".\nRunning org.java_websocket.issues.Issue621Test\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec - in org.java_websocket.issues.Issue621Test\nResults :\nFailed tests:\n  Issue580Test.runNoCloseBlockingTestScenario0 Found 3 zombie thread(s)\n  Issue580Test.runNoCloseBlockingTestScenario1 Found 3 zombie thread(s)\n  Issue580Test.runNoCloseBlockingTestScenario5 Found 3 zombie thread(s)\n  Issue580Test.runNoCloseBlockingTestScenario7 Found 3 zombie thread(s)\nTests run: 118, Failures: 4, Errors: 0, Skipped: 0\n. ",
    "amerp": "Can confirm, I'm also getting exception in version 1.3.6\nFatal Exception: org.java_websocket.exceptions.WebsocketNotConnectedException\n       at org.java_websocket.WebSocketImpl.send(WebSocketImpl.java:598)\n       at org.java_websocket.WebSocketImpl.sendFrame(WebSocketImpl.java:624)\n       at org.java_websocket.WebSocketImpl.sendPing(WebSocketImpl.java:631)\n       at org.java_websocket.AbstractWebSocket$1.run(AbstractWebSocket.java:142)\n       at java.util.Timer$TimerImpl.run(Timer.java:284). ",
    "fagnerng": "I had the same problem when on a poor connection, (hspa connection).\nI \"solved\" this problem calling setConnectionLostTimeout(0) on WebSocketClient. ",
    "Tonacatecuhtli": "Hi @richdyang did you implement this method? because I have the same problem and it would be nice to know how you handled it.. Hi, so as far as I know, it's like this:\nAndroid gives you some lifecycle methods but for example, there is no guarantee that it calls its onDestroy method. \n@richdyang So what you would have to do ist start/stop the WebSocket server onPause/onResume of your App/Activity Livecylce so that it would be removed from the system if the user kills the app. So this is a bit stupid because you couldn't do large file-transfers or keep the WebSocket connection alive. To keep it alive you would have to write an Android Service for your App. How to handle Services is described here Processes and Application Lifecycle \n@marci4  So what I/we would need is the ability to start/stop the server frequently(?) whenever the user pauses the application. I know that's a bit brutal to disconnect everyone when that happens but the App would have to care for that.\nAnd while I'm at it it would be nice if you could actually set the setReuseAddr flag to true but I guess that's also for a reason?. Hi, @marci4 \nthanks a lot for the wiki link ;)\nI have to say that at this point I wouldn't consider it as an issue for your library anymore. It's more of my responsibility to make it work ;)\nBut for your questions:\nWhy not create a new WebSocketServer? Yes, that's what we ended up doing. But then you have to use dynamic ports and implement NSD (Network Service Discovery). At least in our case.\nWhy is this not possible? It's just not possible if you always use the same port. Especially if you don't know that you cans set the setReuseAddr flag to true xD. \nSo you are just looking for a service implementation and reusing a WebSocketServer?  The service implementation is out of the libs scope as well because it would be android specific. Would be nice though ;)\nBest regards\nTonacatecuhtli\n. ",
    "actor20170211030627": "Hi @richdyang I also used in android.I want know what's your proguard rule?  I tried one day yesterday,but failed,Please help me.\nMy proguard rule as follow:\n--------------Begin: proguard configuration for WebSocket------\n-keep class org.java_websocket.* {;}\n--------------End: proguard configuration for WebSocket--------. Thank You!.",
    "chaoyangnz": "@actor20170211030627 you failed what? I don't catch your idea. Is your problem related to this issue? I don't understand for what you configure the proguard. I don't configure proguard rules and I can use WebSocketServer perfectly. The only issue is described in this issue.. Thanks all, that's caused by that Application's terminate method cannot be called when app is killed.\nSo it's not related to WebSocket server. It can be solved by implementing a service by developers.\nPlease close this issue.. ",
    "nik17klika": "Hello @marci4 ,\nthanks for fast response, I guess your changes enough to use Sec-WebSocket-Protocol header. ",
    "Harlber": "Got it\uff0cThanks a lot\uff01. ",
    "jebej": "Yes, it works with the latest version, thanks.. ",
    "jasuade": "Hi @marci4,\nWell, it's something complicated I will try to simplify. I am developing a system (gateway) with two main components that connect to each other through an SDN network, developed and managed by me also, in this SDN network you can manage the traffic attending to this DS field, so that I want to mark the traffic getting out from a component to be treated in a different way depending on the type of data if carries.\nIt was just as question or suggestion but if you do not see it interesting or necessary we can fork the repo and implement it so you can close the issue.\nall the best, \nJasuade. Hi @marci4,\nYes, sure, you can close this issue. I will fork your code as suggested \ud83d\udc4d \nThank you.\nregards,\nJara. ",
    "peace-maker": "Hi @marci4,\nworks good now without any more log spamming.\nThank you!\n. ",
    "VayneKaso": "sorry \uff0cmy English is not very well .I mean is the library can auto to callback  webScoketclient's onClose() and its so immediately when close network by myself on Android phone. thanks for your reply\nI want to know in this lib . there are some frameworks or operates that likely loop pull to check the network state?. ",
    "zhangshaobo87": "@VayneKaso \u8bf7\u95ee\u4f60\u89e3\u51b3\u4e86\u65ad\u7f51socket\u7acb\u9a6c\u65ad\u5f00\u7684\u95ee\u9898\u4e86\u5417. ",
    "ericjs": "Hi @marci4,\nThanks for the reply. If you wanted to make this usable in a web app server I'm not sure I'd be the best person to listen to, as I'm not sure what I want is what most other web app devs want. Your project appealed to me because it was simple and not a \"framework\" like Atmosphere, and I was hoping to do something minimal, without using annotations, or relying on any automagic mechanisms that I don't understand. \nI can tell you that the main thing I got hung up on in trying to use this was that in a webapp one would want to map some specific path under the webapp path as the path to get the socket connect. For example suppose the webapp ran at /myapp on port 80, some specific path that the app was not using for something else like /myapp/socket would need to be used. Also I assume there would need to be some way to have the app container redirect to your code on the http call that establishes the socket connection, perhaps via a class extending HttpServlet that was mapped in web.xml.\nCheers,\nEric. Ok. I've already moved on using the websocket support that comes built into Tomcat (after trying a few other  libraries) for my task at hand. But if you ever come back to it, feel free to ping me again, I'll be happy to offer ideas and maybe try it out. . ",
    "venkateshthallam": "@marci4 Hey! Sorry. Not sure what was the issue. I just had to kill the process the first time and restarted again. The socket connections are working seamlessly. Thanks for checking back.. ",
    "casolorz": "Sure, it'll be a bit before I know as I've never reproduced it but I'll try it with my beta users soon. We can close this and I can reopen it if it doesn't help. . ",
    "ebourg": "The Java WebSocket API 1.1 has the codes 1012 and 1013 which are implemented in application servers such as Tomcat or Jetty. The code 1014 is described on the Mozilla Developer Network.\n. Thank you for the fix!. ",
    "AnandLin": "Think you for your answer,But I tried to use Java-websocket 1.3.1 and 1.3.7 versions, and I found that the message received is incomplete!\nMy data is provided by javaWeb server. I try to get data from java-WebSocket's WebSocketImpl#socketBuffer, get the result data can be received, but subcontracted. I look at the data package processing in java-WebSocket, but it seems to be that the data is incomplete after Draft_6455#translateSingleFrame processing. I don't understand the bottom of the WebSocket very well, and the format of the data I receive is as follows:\n{\n    \u201cmethod\u201d:\"OL_AGENT_RequestUnReadMsgAck\",  \n    \u201cretCode\u201d:\u201dxxxx\u201d,                       \n    \u201cretMsg\u201d:\u201dxxxx\u201d,                        \n    \u201coriginId\u201d:\u201dxxxx\u201d,                      \n    \u201copenId\u201d:\u201dxxxx\u201d,                        \n    \u201csessionId\u201d:\u201dconversation ID\u201d,     \n        \"data\": \"recId\" [{: \"ID\", \"sessionType\" records: \"the session type\",\n \"msgType\", \"information\",\"content\" type: \"content\", \"createTime\": \"the creation time\"}]\n}\nWhen data data is too much, the whole JSON is incomplete!\n. Hello @marci4,\n      I am so sorry!It's quite busy in the previous period.\n      I can't provide the corresponding java-web service.When I try my text data enough, the data is incomplete and the size of the data is estimated to be around 5M. My Android version 4.4 and 5.0 will be in this situation!Do I see you and processing time, source logic is compared with a buffer size to see whether the push end of the message.look draft_6455 # translatesingleframe.I'm not very familiar with the principle of websocket dismantling.\n     . ",
    "MukiA": "Awesome thanks for clearing that up for me.. ",
    "mcourteaux": "I made the effort to add a simple example and opened a pull request. Feel free to merge in.. Ye, I had a terrible day. Frustrations were stacking up and I lost it here. \ud83d\ude1b Any reason why the proposed PR is not accepted?\n. ",
    "lavancfc": "hi @marci4 Thanks for your input. \nI have an issue with setting a Host address for the Websocket address\nCurrent Behavior\nMy client devices(websocket clients)  are connecting to the Websocket server by using a hardcoded websocket address inside the local network as shown below.\n// server address, port and URL\n    webSocket.begin(\"192.168.0.12\", 8877);\nExpected Behavior\nThe client devices should be able to connect to the websocket server without using a IP+port address.\nMore like a DNS method by using a hostname or something like that which I dont mind hardcoding to the client device.\nIs it possible to achieve this using this library\nThanks in advance\n. Client is using https://github.com/Links2004/arduinoWebSockets  client API.\nI hardcode webSocket.begin(\"192.168.0.12\", 8877) to connect to the websocket server. \nI want to know any other method so that I can avoid hardcoding of IP on client device.. I am trying to:\n1. Add the clients to an Array list inside onOpen\n2. Display it on a listview\n3.On user click on the list view send message to that particular client.\nThe below code does the job.\n`\n@Override\n        public void onOpen(WebSocket conn, ClientHandshake handshake ) {\n        // conn.setAttachment(index++); //Set the attachment to the current index\n        // index++;\n        ip.add(getRemoteSocketAddress(conn));\n        wsclientList.add(conn);\n        System.out.println(wsclientList.size());\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n\n\n                ArrayAdapter myadapter;\n                myadapter = new ArrayAdapter<InetSocketAddress>(AndroidListViewActivity.this,R.layout.list_item, R.id.label, ip);\n                ListView lv = getListView();\n                lv.setAdapter(myadapter);\n\n                lv.setOnItemClickListener(new OnItemClickListener() {\n                    @Override\n                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n\n                        final int device=position;\n\n                        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(AndroidListViewActivity.this);\n                        alertDialogBuilder.setMessage(\"1.Toggle the light using ON and OFF \\n 2.Check Visually for reversed Banks. \\n 3.Swap the Banks if necessary\");\n                        alertDialogBuilder.setPositiveButton(\"ON\",new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface arg0, int arg1) {\n\n                                broadcastData[0] = 4;\n                                broadcastData[1] = (byte) 255;\n                                wsclientList.get(device).send(broadcastData);\n\n                                Toast.makeText(AndroidListViewActivity.this,\"You clicked yes button\",Toast.LENGTH_LONG).show();\n                            }\n                        });\n\n                        alertDialogBuilder.setNegativeButton(\"OFF\",new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface arg0, int arg1) {\n\n                                broadcastData[0] = 4;\n                                broadcastData[1]=(byte) 0;\n                                wsclientList.get(device).send(broadcastData);\n                                //Toast.makeText(AndroidListViewActivity.this,\"You clicked NO button\",Toast.LENGTH_LONG).show();\n                            }\n                        });\n                        alertDialogBuilder.setNeutralButton(\"SWAP\",new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface arg0, int arg1) {\n\n                                broadcastData[0] = (byte) 5;\n                                broadcastData[1] = (byte) 0;\n\n                                wsclientList.get(device).send(broadcastData);\n\n                               // Toast.makeText(AndroidListViewActivity.this,\"Check the Light Banks,if found reversed press swap button\",Toast.LENGTH_LONG).show();\n                            }\n                        });\n\n\n                        AlertDialog alertDialog = alertDialogBuilder.create();\n                        alertDialog.show();\n                    }\n                });\n            }\n\n        });\n    }\n\n`\nScenario and Problems:\n1. How do I access the array lists ip, wsclientList outside onOpen.\n2. Is there a API specific method to generate a collection of active websocket clients connected to the server which can be used to display a table view containing client id, Inetaddress, port?\n\nPlease provide some usage examples of the methods onOpen,onWebsocketOpen.. Sorted out using this and a Custom List adapter\n\n`        @Override\n        public void onOpen(WebSocket conn, ClientHandshake handshake ) {\n        conn.setAttachment( index); //Set the attachment to the current index\n        index++;\n        seriallist.add(index);\n        iplist.add(getRemoteSocketAddress(conn));\n        wsobjectlist.add(conn);\n        System.out.println(seriallist);\n\n        final String[] maintitle = new String[iplist.size()];\n        for (int i = 0; i<iplist.size(); i++) {\n            maintitle[i] = String.valueOf(iplist.get(i));\n        }\n        final String[] subtitle = new String[wsobjectlist.size()];\n        for (int k = 0; k<wsobjectlist.size(); k++) {\n            subtitle[k] = String.valueOf(wsobjectlist.get(k));\n        }\n        final String[] serial = new String[seriallist.size()];\n        for (int j = 0; j<seriallist.size(); j++) {\n            serial[j] = String.valueOf(seriallist.get(j));\n        }\n\n        System.out.println(Arrays.toString(serial));\n        System.out.println(Arrays.toString(maintitle));\n        System.out.println(Arrays.toString(subtitle));\n\n       final ListView list;\n        list =findViewById(R.id.list);\n\n\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n\n\n                MyListAdapter adapter=new MyListAdapter(FactoryActivity.this,serial,maintitle,subtitle);\n                list.setAdapter(adapter);\n                list.setOnItemClickListener(new OnItemClickListener() {\n                    @Override\n                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                        final int device=position;\n                        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(FactoryActivity.this);\n                        alertDialogBuilder.setMessage(\"1.Toggle the light using ON and OFF \\n 2.Check Visually for reversed Banks. \\n 3.Swap the Banks if necessary\");\n                        alertDialogBuilder.setPositiveButton(\"ON\",new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface arg0, int arg1) {\n                                broadcastData[0] = 4;\n                                broadcastData[1] = (byte) 255;\n                                wsobjectlist.get(device).send(broadcastData);\n                            }\n                        });\n                        alertDialogBuilder.setNegativeButton(\"OFF\",new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface arg0, int arg1) {\n                                broadcastData[0] = 4;\n                                broadcastData[1]=(byte) 0;\n                                wsobjectlist.get(device).send(broadcastData);\n                            }\n                        });\n                        alertDialogBuilder.setNeutralButton(\"SWAP\",new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface arg0, int arg1) {\n                                broadcastData[0] = (byte) 5;\n                                broadcastData[1] = (byte) 0;\n                                wsobjectlist.get(device).send(broadcastData);\n                            }\n                        });\n                        AlertDialog alertDialog = alertDialogBuilder.create();\n                        alertDialog.show();\n                    }\n                });\n            }\n\n        });\n    }`\n\n. Thank you @marci4 .\nIssue Resolved.\nPlease close. ",
    "cr5315": "Oh goodness, I wasn't aware that there was a difference between Socket and WebSocket \ud83e\udd26\u200d\u2642\ufe0f ! Now I feel like a fool.. ",
    "liuliuabc": "mee too.Have you solved this problem?\n. ",
    "syntrydy": "hi @marci4  i managed to fixed the issue. The issue wasn't from this library. The issue was from gradle build version 3.0.1 and our dependencies .\nThanks. ",
    "liuww111": "Java-WebSocket/src/main/java/org/java_websocket/client/WebSocketClient.java\n\u5728390\u884c\uff0conWebsocketClose\u89e6\u53d1\u540e\u6267\u884cwriteThread.interrupt();\u5bfc\u81f4\u6c38\u8fdc\u4e0d\u80fd\u91cd\u65b0\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u4e0d\u80fd\u91cd\u8fde\u3002   \nconnect()\u4f1a\u629b\u51fathrow new IllegalStateException( \"WebSocketClient objects are not reuseable\" );. ",
    "molaith": "hi @marci4 ,\n I updated my comment.\nhope it can help you to find out the reason of this issue. hi\uff0c@marci4 ,\n i disabled SSL authentication in websocket server.\nthen\uff0cthere is no SSLException. but it still disconnect with 1006.\nthere is the log below:\nonclose_1006.txt\n. hi, @oakkitten,@marci4,\nThanks!\nI implement pinging mechanism, and problem solved.. ",
    "Sdghasemi": "I've read the issue template, I'll provide you as much as info I can so we can spot where the problem is coming from.\nThe problem is obvious as you know. There's a function somewhere which creates new threads without using them.\nBecause the web socket instances are not reusable, I managed to create a retry procedure aside from the library which will retry to connect after timer timed out (delays will increase exponentially based on previous retry counts) until the socket opens. BTW this process stops when application is not focused or when there is no network connectivity and resumes when both of those are on board.\nHere is the code for the retry procedure:\n```\n    /*\n     * Thread executor for web socket retry handler\n     /\n    private ScheduledFuture<?> mScheduledFuture;\n/**\n * Stores previous retry timer as a power of 2 (2^mRetryTimer) to set next retry timer based on\n */\nprivate byte mRetryTimer = 0;\n\n\n@Override\npublic void onConnectionEstablished() {     // websocket onOpen\n    mIsNetworkConnected = Config.isOnline();\n    mIsConnected = true;\n    cancelRetryTimer(true);\n    if (isViewAvailable()) {\n        if (mIsNetworkConnected) mViewWeakReference.get().onConnectionEstablished();\n        else mViewWeakReference.get().onNetworkConnectionEstablished();\n    }\n}\n@Override\npublic void onConnectionClosed(MessagingRequest request, int code, String reason, boolean remote) {     // websocket onClose\n    if (request != mRequest) return;\n    mIsConnected = false;\n    if (isViewAvailable()) {\n        if (mIsNetworkConnected) mViewWeakReference.get().onConnectionClosed();\n        else mViewWeakReference.get().onNetworkConnectionLost();\n    }\n    if (code == NORMAL &&\n            (reason != null && (reason.equals(CLOSE_MESSAGE_TOKEN_REFRESH) ||\n                    reason.equals(CLOSE_MESSAGE_LOST_FOCUS)))) return;\n    if (!Config.isTokenValid()) {\n        mRequest.refreshAuthorizationToken();\n        return;\n    }\n\n    if (mScheduledFuture == null) {\n        establishConnection(true);      // try to reconnect\n    }\n}\nprivate void setupRetryTimer() {\n    long retryDelay = (long) (Math.pow(2, mRetryTimer));\n    if (mRetryTimer < 3) mRetryTimer++;\n    mScheduledFuture = Executors.newSingleThreadScheduledExecutor().schedule(new Runnable() {\n        @Override\n        public void run() {\n            try {\n                if (mRequest != null) {\n                    if (mRequest.isOpen()) {\n                        cancelRetryTimer(false);\n                    } else {\n                        mRequest.close();\n                        establishConnection(true);\n                    }\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }, retryDelay, TimeUnit.SECONDS);\n    Logger.log(WEB_SOCKET, \"Retrying in \" + retryDelay + \" sec.\");\n}\nprivate void cancelRetryTimer(boolean interrupt) {\n    Logger.log(WEB_SOCKET, \"Canceling retry timer...\");\n    if (mScheduledFuture != null) {\n        mScheduledFuture.cancel(interrupt);\n        mScheduledFuture = null;\n    }\n    resetRetryTimer();\n}\nprivate void resetRetryTimer() {\n    mRetryTimer = 0;\n}\n@Override\npublic void establishConnection(boolean forceReconnect) {\n    try {\n        if (!(mIsAppVisible = MainApplication.isAppVisible())) {\n            cancelRetryTimer(true);\n            return;\n        }\n        if ((mRequest != null && !mRequest.isInConnectionPhase()) || forceReconnect) {\n            mRequest = new MessagingRequest(this, mRequest);\n            setupRetryTimer();\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n\n``\nAs you see, the instances disposed properly incancelRetryTimer()`. Is there somewhere in the library which creates threads without disposal?. Since this I'm using web socket as a part of a huge codebase, I'm afraid I can not make a simple sample representing the problem to reproduce (I myself couldn't reproduce it either, but there are a number of crashes tell me this is happening). I'm trying to find out where this crashes might get produced, or maybe there is no way the library could cause it!\nKnowing that I use the issue template as you said if there's any help:\nExpected Behavior\nThere's a function somewhere creating pool threads repeatedly which shouldn't without proper disposal.\nCurrent Behavior\nThe threads memory runs out and a crash happens with this stack trace:\n```\nFatal Exception: java.lang.OutOfMemoryError: pthread_create (1040KB stack) failed: Try again\n       at java.lang.Thread.nativeCreate(Thread.java)\n       at java.lang.Thread.start(Thread.java:1063)\n       at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:280)\n       at java.lang.Thread.run(Thread.java:818)\n````\nPossible Solution\nFind out where is coming from, maybe a result of creating instances of WebSocketClient to reconnect or something else.\nSteps to Reproduce (for bugs)\nA link to the problem: http://crashes.to/s/0915cc05563\nDebug log (for bugs)\nThere is no particular debug log, since the bug is not related to the web socket transactions itself.\nContext\nI'm afraid I have no idea, If I had I could reproduce it somehow.\nYour Environment\nI have provided everything relevant to the issue in this comment and previous ones.\nThanks for your help.. Hello @marci4,\nAfter days of struggle in project and dependent libraries since you mentioned your pattern for thread names I happily managed to find where the pool threads were coming from.\nIt was from a separate advertising library called Adad which has an awful code structure in showing and downloading ads. Using the older version fixed the problem.\nThank you very much for helping me finding out the issue.. ",
    "cstratton": "Hi marci4, thanks for taking a look at this.\nWhat we tried this against, https://github.com/TooTallNate/Java-WebSocket/commits/105e2e0 is actually newer than 1.3.7, for some reason that is unclear git-describe counted it from an earlier tag making it look older than it is, anyway I think the range of applicability is very wide.\nWhat we did to verify this was the problem was essentially to not rewind and flip the input buffer if it it still contained unused data.\nissue_665_crudefix2.txt\n(new version - original was mixed up)\nHowever I don't think that's really safe or sufficient, both as createBuffers() can be called from multiple places, and can create new buffers rather than just rewind the existing ones.\nConnection to #190 is more theoretical essentially a fear that fixing this might reintroduce issues in that related code.  Or maybe not.\nEssentially I think what is needed is a more sophisticated and safe way of accomplishing the preservation of the unused buffer contents, in the situation where it is needed and appropriate.\nReproducing the problem in a portable way may be challenging - we've only tried the library so far in the context of our Android server APK and iOS app.  My guess is that the easiest way to get it to occur in a different context could be the artificial one of putting in sleep delays before the reads.  Is there an existing test case we could maybe fork and extend with that in an attempt to make a somewhat repeatable demonstration?\n. Thanks.  While I didn't think the simple approaching of not rewinding the buffer would be safe or effective without additional wrapping logic to figure out when and how it should apply (or when other means might be needed, for example to copy contents from a buffer being replaced to the replacement), I'd be curious as to how it is failing with firefox.. ",
    "a-ross-cohen": "Hey @marci4 I seem to be running into the same issue as @cstratton. Is there any update on a timeline to a 'correct' fix for this?. ",
    "vsch": "@marci4, yes this is exactly the same issue.. ",
    "WalkerKnapp": "Hi @marci4,\nI'm not the original one to post the issue, but I think the best way to go about addressing the first issue would be to distribute a Fat Jar (Not the most technical of terms, sorry) for those who don't use a build system and to have a fallback logger with System.out (Depending on WebSocketImpl.DEBUG, like currently) if they don't provide a slf4j compliant library. Are there any issues with a system like this?\nI really hope this issue is implemented eventually as it is a really nice feature to have slf4j logging. Thanks!. Looks great in my opinion. Although, there were still some printlns dotted around, so I commented on those in the commit. Other than that, looks perfect and I hope to see it in the next major release.. ",
    "neoedmund": "An unconstructive dissent here.\nWhy not just use java.util.logging.Logger? add 48 classes and 123KB just for a logger? what makes bloatware.. SLF4J maybe popular, but there is no such thing that SLF4J is an industry standard.\nAnd there is also a reason for a library like Java-WebSocket not use any specified logging library, at least because logging is not playing as a must part, it should be totally disabled when it's out of development into a stable release(Java don't have proprocessor like C, or can be easily done).\nAbout the size, in Java-WebSocket-1.4.0-with-dependencies.jar\norg.java_websocket 79 items, 268KB\norg.slf4j  48 items, 123KB\ndozens of lines of logging functions taking up 1/3 of the code size!\nBloatware pollution, at the point of software engineering.. ",
    "gjsbe": "Hi,\nthank you very much, but there's another problem: if I have a proxy pac url how can I use it?\n. Sorry... I found a solution but I have a big problem... It doesn't work:  \n           SSLContext sslContext = SSLContext.getDefault();\n           SSLSocketFactory sslFactory = sslContext.getSocketFactory();\n\n            List<Proxy> proxies = ProxySelector.getDefault().select(new URI(\"wss://server.it:3333\"));\n            Proxy proxy;\n\n            if(!proxies.isEmpty()) {\n\n                if(!proxies.get(0).type().equals(Proxy.Type.DIRECT)) {\n                    proxy = proxies.get(0);\n                } else {\n                    proxy = null;\n                }\n\n            } else {\n                proxy = null;\n            }\n\n            if(proxy != null) {\n                Socket proxySocket = new Socket(proxy);\n                proxySocket.connect(new InetSocketAddress(host, port));\n                ws.setSocket(sslFactory.createSocket(proxySocket, host, port, true));\n            } else {\n                ws.setSocket(sslFactory.createSocket());\n            }\n\nselect method of proxyselector returns DIRECT for wss and ws protocols.\nIf I use https uri inside proxyselector select method returns HTTP Type Proxy, but when I use it inside proxy Socket it gives me Invalid proxy, because Android works only with SOCKS proxy (for sockets).. Hi, the problem, from latest android sdk version, is that you cannot set http proxy for a Socket.\nYou need SOCKS Proxy, but for the ws we need http proxy connection.\nSo I writed my own proxy connection method (native).\nThank you anyway.. `\n        Socket socket = new Socket();\n        socket.connect(new InetSocketAddress(proxy.getHost(), proxy.getPort()));\n        socket.setKeepAlive(true);\n        socket.setTcpNoDelay(true);\n        socket.setReceiveBufferSize(8192);\n\n        String msg = \"CONNECT \" + dest.getHost() + \":\" + dest.getPort() + \" HTTP/1.0\\r\\n\";\n\n        msg += \"User-Agent: APP/1.0\\r\\n\" +\n            \"Keep-Alive: 300\\r\\n\" +\n            \"Proxy-Connection: keep-alive\\r\\n\\r\\n\";\n\n        byte[] outData = msg.getBytes(\"ASCII\");\n        socket.getOutputStream().write(outData);\n        socket.getOutputStream().flush();\n\n        int readed;\n        ByteArrayOutputStream responseStream = new ByteArrayOutputStream();\n        byte[] readBytes = new byte[8192];\n\n        while((readed = socket.getInputStream().read(readBytes)) > 0) {\n            responseStream.write(readBytes, 0, readed);\n\n            if(socket.getInputStream().available() == 0) {\n                break;\n            }\n        }\n\n        String response = new String(responseStream.toByteArray(), \"ASCII\");\n\n`\nIf response is HTTP 200 then you can use proxy socket inside sslSocketFactory... \nThere are some things that I don't like, for example the while with available() if... is not a good implementation in some case.\nbye. ",
    "xmulxs": "Hi,marci4,\n    I test the issue with 1.3.7, and all is ok. but I  find a function named getMacFromIp may blocks callback onOpen as below:\n@Override\n    public void onOpen(WebSocket conn, ClientHandshake clientHandshake) {\n       sleep(4100);// 4.1seconds\n       getMacFromIp(szIp);\n        conn.close();\n} \n  When testing with 1.3.7,I make function getmacFromIp in \"Not block\". So The testing may not explain any problem.\n  I think when getMacFromIp  blocks, It  cause the CLOSE_WAIT phenomenon. What I want to kown is  whether onOpen function blocks cause connect failure? . Hi,marci4,I think I find the problem, The  reason is \" onOpen callback block for a long time cause the connection failure\". When I sleep for 100 seconds in onOpen the next client indeed can't connect to server.. version 1.3.7 has the same problem, if sleep 200 seconds in onOpen\uff0c the next client 100% probability can not connect .. Hi,maric4 Thank you for your answer\uff0c Now I just new a thread in onOpen function  for doing blocking things  instead of  directly sleeping in onOpen that may block onOpen.. ",
    "kimtuitoek": "Thanks. I haven't tried out the new methods but those re-connection methods should solve my problem of trying for reconnection. That was what I was trying to do.\nFrom the way you explained it, let's say the closing handshake is initiated by the WebSocketClient and the client is waiting for the server to respond with a CloseFrame, if the server goes down unexpectedly in the middle of the handshake, will the WebSocketClient detect this and transition to the closed state?. ",
    "haizhiyun": "The latest version solved this problem.. ",
    "Patel32515": "Hello @marci4 ,\nThanks for the suggestion, yes this could help.\nWondering if there is any option to make port configurable in server.xml as Connector port?\nThanks,\nPriyank. No problem, will adapt my implementation accordingly, Thanks for the response... ",
    "xcelder": "Sorry, i create an issue. Unfortunately not, is a private server in the company \nI work on, but we've check the logs and the problem was that. Sorry if I cannot provide more clues... :(. I fixed the typo, sorry I wrote it in the github editor and I didn't saw it.. thank you for answering so fast! \ud83d\udc4d . ",
    "shufps": "In my project I used an extra Thread which acts as watchdog (e.g. connection alive but $x seconds no new data) and to reconnect if the socket is disconnected. It works great so far.\n. ",
    "a13707331174": "@shufps,@marci4,thanks for your help. ",
    "Nirupg63": "@marci4 Hey. I'm willing to help. Get in touch with me anytime.. ",
    "bhaswanth88": "@marci4 : I am happy to help, Please message me . ",
    "mlybarger": "@marci4  i'm intereseted to help with this.. You're right. There's no need for that on the pom.  I do however get\nsporadic errors from the unit tests which caused a problem for me\nbuilding.  I added that, and it built, but it is indeed not needed.  I\ndon't know why I get this random error.  It's very hard to recreate.  I did\nget errors on both windows (java 7) and linux (java 8).\nRunning org.java_websocket.framing.BinaryFrameTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec\nRunning org.java_websocket.framing.CloseFrameTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec\nRunning org.java_websocket.framing.ContinuousFrameTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec\nRunning org.java_websocket.framing.FramedataImpl1Test\nTests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec\nRunning org.java_websocket.framing.PingFrameTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec\nRunning org.java_websocket.framing.PongFrameTest\nTests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec\nRunning org.java_websocket.framing.TextFrameTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec\nRunning org.java_websocket.issues.Issue256Test\nTests run: 20, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.421 sec\n<<< FAILURE!\nrunReconnectScenario4(org.java_websocket.issues.Issue256Test)  Time\nelapsed: 0.019 sec  <<< ERROR!\njava.lang.NullPointerException\n        at\norg.java_websocket.client.WebSocketClient.connect(WebSocketClient.java:270)\n        at\norg.java_websocket.client.WebSocketClient.connectBlocking(WebSocketClient.java:279)\n        at\norg.java_websocket.client.WebSocketClient.reconnectBlocking(WebSocketClient.java:233)\n        at\norg.java_websocket.issues.Issue256Test.runTestScenarioReconnect(Issue256Test.java:119)\n        at\norg.java_websocket.issues.Issue256Test.runReconnectScenario4(Issue256Test.java:200)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at\norg.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n        at\norg.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n        at\norg.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n        at\norg.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n        at\norg.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)\nRunning org.java_websocket.issues.Issue580Test\nTests run: 20, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.51 sec\nRunning org.java_websocket.issues.Issue609Test\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec\nRunning org.java_websocket.issues.Issue621Test\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 sec\nRunning org.java_websocket.issues.Issue661Test\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.138 sec\nRunning org.java_websocket.issues.Issue666Test\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 sec\nRunning org.java_websocket.issues.Issue677Test\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 sec\nRunning org.java_websocket.misc.OpeningHandshakeRejectionTest\nTests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec\nRunning org.java_websocket.protocols.ProtoclHandshakeRejectionTest\nTests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.103 sec\nRunning org.java_websocket.protocols.ProtocolTest\nTests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec\nRunning org.java_websocket.util.ByteBufferUtilsTest\nTests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec\nOn Thu, May 24, 2018 at 1:08 PM, Marcel Prestel notifications@github.com\nwrote:\n\nHello @mlybarger https://github.com/mlybarger,\nthat is interesting since I am using this maven pom.xml to build the lib\nfor the repository.\nAnd I do not understand why the examples should be required for the\nbuild...\nCould you explain this for me please?\nBest regards,\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/709#issuecomment-391789973,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABey1iThCqMqmgoBFW0A4ukA6TbHNEkPks5t1ukfgaJpZM4UK3PP\n.\n. \n",
    "brijsinghdev": "I am happy to contribute. Please ping me... Hey @marci4,\nGlad to be part of the team,  what should I begin as a new member in a team.\nRegards,\nBrij\nOn Thu, Jan 17, 2019 at 9:27 PM kaustavsarkar notifications@github.com\nwrote:\n\nHi @marci4 https://github.com/marci4, Hope you still need a\ncontributor. Eager to work on this\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/691#issuecomment-455224435,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AmtmBB4E10sYnO8ibSQc7kJf6kk1Fh5oks5vEJ1tgaJpZM4THQj7\n.\n. Thanks marci4 for reply\n\nIs that sync object \"synchronizeWriteObject\" required to be static i.e. is one for whole server,  Will work fine if we make it at each connection level  may be a sync  on socket object?. ",
    "kaustavsarkar": "Hi @marci4, Hope you still need a contributor. Eager to work on this. ",
    "badnine": "Thanks @marci4 , I think I know how to do it \n. ",
    "michaeldboyd": "@marci4  Thanks for the quick response!  And apologies for the frantic late night post, haha. \nThat makes much more sense.  I'm testing to see if I can reconnect to a server that dies and goes back online. It works really well, but the reconnect takes about a minute once the server is turned back on. Is there any way to lower this wait? I'd love to have it reconnect in < 10 seconds, but I understand if it can't\nI read something about changing the timeout length, but I couldn't find where to do that. . yep, thank you!\nOn Tue, May 1, 2018 at 11:11 AM Marcel Prestel notifications@github.com\nwrote:\n\n@michaeldboyd https://github.com/michaeldboyd is this issue solved for\nyou?\nBest regards,\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/696#issuecomment-385727338,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVmjDAaw85HHqMpoxW-iEC3WZUyiy0iLks5tuJdFgaJpZM4TZb9P\n.\n. \n",
    "anishlg": "@marci4 ,\nWe create an android sample app for the issue testing. Please use this attached apk and connect to any webSocket server with ping/pong.\nInstructions are provided in the attached ppt. Follow the same to reproduce the issue and please let us know any further queries...\nandroid.zip\nBest regards,\nAnish. @marci4 ,\nAny update on this issue. we already shared the android app which can reproduce the issue. please revert with your suggestions for the same. If any clarification required, please let me know\nRegards,\nAnish . ",
    "Adezking": "Hello @Anish,\nI don't know much about programming and I've been finding it difficult to build my own Binary.com webSocket API connection system.\nPls I'll be willing to pay for your service if you can help me build for PC and mobile.My email is..\nAdezking2007@gmail.com \nTHANKS.. ",
    "Gillardo": "Any idea when this will be available?. ",
    "nysyzp": "hi @marci4 ,\nmy question was how to keep alive between client and server ; not WebSocketNotConnectedException;\nthey can established, but auto closed after 120s;\npls help me ;thank you very much;\n. hi @marci4 ,\nif i use client.setConnectionLostTimeout(0), it worked;it was not auto closed after 120s;\npls ignore it,thank you ;. ",
    "lee-vic": "\u53cb\u60c5\u5e2e\u9876\uff0c\u4e0d\u8981\u6c89. The top of friendship, do not sink . ",
    "zhengxiaosong": "Hi @marci4 , thanks to you.   I didn't pay any attention at the difference between text and binary frame. the sever was only receive text frame,  and when i change the sever to receive a binary frame, it can receive successful. thank you. You've been a great help already.\nThanks @lee-vic too ^_^! . ",
    "stefan-reich": "Sorry, but you are trying to waste my time. I can provide a test program you can run if you like.\nI'm using Java 1.8 on Peppermint Linux 64 bit. Standard stuff.. ",
    "kkopper": "Thank you very much for the hint. I contacted the responsible for the server and after he included the certificate chain, everything works as expected.\nI just changed the title to better represent the actual problem, it is up to you if you want to close the issue or leave it open to provide help for others.. ",
    "algiuxass": "I meant the first one.. ",
    "leokho": "Hi @marci4 ,\nYes, it does happen quite a bit, around 10% of our users experience this bug. We are still trying to see if we find a way to replicate this on our side. \nThe stack trace that I've posted, is the full one.. ",
    "JoanaDFerreira": "Hello @marci4,\nYes, we think our issue is the same as #699.\nCould you please create a new version tag with the updates you did for this issue in master for us to test?\nthank you,\nJoana. ",
    "princrai": "I am trying Netty library to connect to Unix Socket. And getting some good\nresult(latency,throughput).\nThanks,\nPrince\nOn Tue, Jul 3, 2018 at 1:05 PM Marcel Prestel notifications@github.com\nwrote:\n\nIs this issue solved for you?\nBest regards,\nmarci4\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/716#issuecomment-402277030,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AL5Glb0goaEE4LbClNt6UXdutk7Tmqf6ks5uC86hgaJpZM4UT_28\n.\n. \n",
    "theAprel": "Hi, any progress updates on this? Is a branch or test binary available that incorporates marianobarrios's ByteChannel implementation?. I gave it a shot this morning. The largest obstacle is marianobarrios/tls-channel requires Java 8, and this project supports back to Java 6, which likely rules it out as a solution. That aside, I tried it anyway to see if it would fix the WSS problems.\nI didn't get very far, but I'll type out my progress in case anyone finds it useful. I replaced the return statements of wrapChannel in DefaultSSLWebSocketServerFactory.java and CustomSSLWebSocketServerFactory.java with return ServerTlsChannel.newBuilder(channel, sslcontext).build();, but when I tried to connect to the WSS server, my client gives a ssl3_write_bytes:ssl handshake failure error. The java_websocket wss server prints this line Removing connection which is not in the connections collection! Possible no handshake recieved! So I couldn't get past the handshake. I am a bit confused why WebSocketServer doesn't add the connection to its internal collection until after the handshake process (which is what the server error message suggests), so I'm probably missing something.\nI tried to force the handshake to see if that would help. The tls-channel project has a handshake() method for this, so I tried that. I also tried writing an empty ByteBuffer to the channel before returning it from wrapChannel, since I noticed SSLSocketChannel2 does this in its constructor to jumpstart the handshake. Didn't help; same error messages on both sides.\nI'm going to use a reverse proxy to handle the TLS layer and use ws with java_websockets until the issues with wss are resolved.. I'll add one more thing: when I use ws to test the server, it immediately returns EOF. onOpen or any of the other WebSocketServer callbacks are not executed. I'm not sure why changing the ByteChannel implementation causes this behavior.\nAs for my current issue with wss, my wss server arbitrarily fails to accept wss connections from Firefox. One connection can work fine; the next one times out. My team has been unable to replicate in Chrome, but we're seeing it in Firefox. It doesn't help our diagnostic process that Firefox prints so little information to the console on failed connections. They just timeout trying to connect to the wss server. Cert is signed by Let's Encrypt, and the cert looks fine in the developer tools for connections that do manage to connect in FF. If I disable wss, I don't have problems with FF connections. Looking over the issue tracker, I see that SSL issues with FF has come up before. Our wss server also opens and closes WSS connections rapidly, which led me to #665 . I'm tempted to try applying the patch in that issue to see if it helps.. Fixed here: https://github.com/TooTallNate/Java-WebSocket/pull/785. ",
    "han361769045": "How can reconnect when the socket is closed ,the network is off ?. ",
    "yuliangC": "@marci4  thanks for your library,it help me a lot ,while there is a question trouble me ,like the gay says above,How can reconnect when the socket is closed ,or the network is off ?. Yes. Thank you for give me answer , I have seem the method you give,but I don't know what time I should use this method, Can you show me in the sample? Thank you very much! \nBest regards!. ",
    "TestTito": "Yeah I did the customSSL the only protocols left are TLSV1.2 TLSV1.1  and TLSV1\nI did remove some cyphers too, and I tryed every cyphers one by one to see if it could help.\nSo I don't know why it keeps having some SSL exceptions when i am suppose to use TLS?\nI tryed to use SSLSocketChannel and SSLSocketChannel2 both outputs the same error.\nI am out of ideas :( thanks for your reply.. @marci4 Hi, I have tested AndroidAsync from Koush just to know if it wss works well. It is WAY more stable on the WSS then this one I am wondering if we could compare the ssl implementation inside Koush one to find the clue of the exceptions?\n. ",
    "mani2478": "Hi Marci,\nI am debugging this issue further with the help of WireShark on Microsoft Edge 42.17134.1.0. I will come back to you with more findings in another couple of days.\nThanks\nMani\n. Root Cause: Edge Browser allows websocket client to connect with Web Socket Server, only when the WebSocket Client opened from the same window and same tab of Edg Browser. Trying to connect from new Window or New Tab fails\nThis is an implementation issue rather than websocket or browser issue. Now we have resolved this.\nThanks\n. ",
    "cymp": "Well I couldn't find a code style settings for this project Which one should I use for IntelliJ?. Wow sorry.... I tried to import this eclipse profile in IntelliJ, but it is not perfect (it automatically put the @Override annotation left to method declaration for example), so I had to add the tabs myself.. @PhilipRoman \nAre there any snapshot release, how am I supposed to be able to download via maven what I just did ? . ",
    "MuspelWolf": "E/AndroidRuntime: FATAL EXCEPTION: main\n                  Process: com.example.raulgarcia.bsbandriod, PID: 2417\n                  java.lang.IllegalStateException: Could not execute method for android:onClick\n                      at android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:389)\n                      at android.view.View.performClick(View.java:5647)\n                      at android.view.View$PerformClick.run(View.java:22465)\n                      at android.os.Handler.handleCallback(Handler.java:754)\n                      at android.os.Handler.dispatchMessage(Handler.java:95)\n                      at android.os.Looper.loop(Looper.java:163)\n                      at android.app.ActivityThread.main(ActivityThread.java:6396)\n                      at java.lang.reflect.Method.invoke(Native Method)\n                      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)\n                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:794)\n                   Caused by: java.lang.reflect.InvocationTargetException\n                      at java.lang.reflect.Method.invoke(Native Method)\n                      at android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:384)\n                      at android.view.View.performClick(View.java:5647)\u00a0\n                      at android.view.View$PerformClick.run(View.java:22465)\u00a0\n                      at android.os.Handler.handleCallback(Handler.java:754)\u00a0\n                      at android.os.Handler.dispatchMessage(Handler.java:95)\u00a0\n                      at android.os.Looper.loop(Looper.java:163)\u00a0\n                      at android.app.ActivityThread.main(ActivityThread.java:6396)\u00a0\n                      at java.lang.reflect.Method.invoke(Native Method)\u00a0\n                      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)\u00a0\n                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:794)\u00a0\n                   Caused by: java.lang.NullPointerException: Attempt to invoke interface method 'void org.java_websocket.WebSocket.closeConnection(int, java.lang.String)' on a null object reference\n                      at com.example.raulgarcia.bsbandriod.Room.stopVoiceRecognition(Room.java:148)\n                      at com.example.raulgarcia.bsbandriod.Room.ButtonStopEvent(Room.java:102)\n                      at java.lang.reflect.Method.invoke(Native Method)\u00a0\n                      at android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:384)\u00a0\n                      at android.view.View.performClick(View.java:5647)\u00a0\n                      at android.view.View$PerformClick.run(View.java:22465)\u00a0\n                      at android.os.Handler.handleCallback(Handler.java:754)\u00a0\n                      at android.os.Handler.dispatchMessage(Handler.java:95)\u00a0\n                      at android.os.Looper.loop(Looper.java:163)\u00a0\n                      at android.app.ActivityThread.main(ActivityThread.java:6396)\u00a0\n                      at java.lang.reflect.Method.invoke(Native Method)\u00a0\n                      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)\u00a0\n                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:794). Just fixed the error, changed WebSocket to Server class to close the connection.\nThanks for the help.. ",
    "VyacheslavMartynenko": "The link is fine, please check again.. Ah, sorry about this.. This app is excluded from battery optimization rules.\nPossibly the only working way to wake up a device from service is to start an activity with window flags, but it doesn't look like an elegant option. And I'd like to try to find another solution.. Hello @marci4 \nI think, nevertheless, this problem is more relevant to Android than to the library. But you can see my answer to this problem by the same link to the StackOverflow. Perhaps it will be useful to you. \nAnd unfortunately, I can not provide the application in the near future.\nBest regards,\nVyacheslav. ",
    "githubbugzz": "\u65ad\u7ebf\u91cd\u8fde\u7684\u95ee\u9898\u89e3\u51b3\u4e86\u5417\uff1f. \u90a3\u6837\u7684\u8bdd\uff0c\u662f\u4e0d\u662f\u5e94\u8be5\u5728onclose\u4e2d\u5148\u5e72\u6389\u8fd9\u4e2awebsocketclient\u7ebf\u7a0b\uff1f\u60a8\u7684\u89e3\u51b3\u601d\u8def\u662f\u4ec0\u4e48\uff1f\u80fd\u5426\u770b\u4e00\u4e0b\u4ee3\u7801\uff1f. ",
    "sucaiji": "@githubbugzz \u5e76\u4e0d\u662f\u8fd9\u4e2a\u6846\u67b6\u7684\u95ee\u9898 \u53ea\u662freconnect()\u4e0d\u80fd\u548cWebSocketClient\u5904\u5728\u540c\u4e00\u7ebf\u7a0b. @githubbugzz  \u4e0d\u7528\u3002\u3002\u7b80\u5355\u7684\u505a\u6cd5\u5728onclose\u91cc\u9762\u5f00\u4e2a\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u4e86\u5440\n@Override\npublic void onClose(int code, String reason, boolean remote) {\n    new Thread(() -> {\n        this.reconnect();\n    }).start();\n} \n\u6bd4\u5982\u8fd9\u6837. @marci4   No, sorry , It's not a bug, It's my using fault. ",
    "schauersbergern": "Hello @marci4,\nthe debug Snapshot #741 didn't provide org.java_websocket.protocols.Protocol, so I couldn't instantiate the class. When using Draft_6455 without extensions and protocols, I got the same output like\nI got with api 1.3.8 and debug flags.\nI did another test now, with your new api 1.3.8 while the server administrator of our websocket\nserver was listening. He said that he didn't receive any single request.\nThe socket url of dev server is like wss://dev.ourservername.com\nI did 3 Tests again, \n1) Draft_6455()\n2) new Draft_6455(knownExtensions, knownProtocols) \nwith empty Protocol: knownProtocols.add(new org.java_websocket.protocols.Protocol(\"\"));\nOn these tests I got the error:\nClosed draft Draft_6455 extension: DefaultExtension refuses handshake\n3) new Draft_6455(knownExtensions, knownProtocols) \nwith wss Protocol: knownProtocols.add(new org.java_websocket.protocols.Protocol(\"wss\"));\nOn this test I got the error:\nClosed Invalid status code received: 403 Status line: HTTP/1.1 403 Forbidden\nBut also on this test the socket server did not receive any request.\nCould it be, that the new api version 1.3.8 doesn't support echo protocol or TLS anymore?\nHow I instantiate the Websocket looks like this:\nMap headers = new HashMap<>();\nheaders.put(\"Sec-WebSocket-Protocol\", \"echo-protocol\");\nURI uri = new URI( \"wss://dev.ourservername.com\" );\nWebSocketClient webSocketClient = new WebsocketClient(uri, new Draft_6455(), headers, connecttimeout);\nSSLContext sslContext = SSLContext.getInstance( \"TLS\" );\nTrustManager[] tm = new TrustManager[]{\n        new X509TrustManager() {\n            public java.security.cert.X509Certificate[] getAcceptedIssuers()\n            {return null;}\n            public void checkClientTrusted(java.security.cert.X509Certificate[] certs, String authType)\n            {}\n            public void checkServerTrusted(java.security.cert.X509Certificate[] certs, String authType)\n            {}\n        }\n};\nsslContext.init(null, tm, new java.security.SecureRandom() );\nSSLSocketFactory factory = sslContext.getSocketFactory();\nSocket socket = factory.createSocket();\nwebSocketClient.setSocket( socket );\nwebSocketClient.connect();\nbest regards,\nschauersbergern. Hello @marci4 \nsorry for answering late, I just returned from vacation.\nThank you for your support, I could solve the issue with your Sec-WebSocket-Protocol example.\nBut as you stated, that it only works with \"ocpp2.0\" was not the case with our application.\nWhen I changed it to \"echo-protocol\" it worked quite well, but I think that's the issue\nwith our wss server.\nbest regards,\nschauersbergern. ",
    "0xZhangKe": "java.lang.NullPointerException: Attempt to invoke virtual method 'void java.lang.Thread.start()' on a null object reference\n    at org.java_websocket.client.WebSocketClient.connect(WebSocketClient.java:270)\n    at org.java_websocket.client.WebSocketClient.reconnect(WebSocketClient.java:222)\n    at com.xx.websocket.WebSocketThread$WebSocketHandler.connect(WebSocketThread.java:172)\n    at com.xx.websocket.WebSocketThread$WebSocketHandler.handleMessage(WebSocketThread.java:93)\n    at android.os.Handler.dispatchMessage(Handler.java:110)\n    at android.os.Looper.loop(Looper.java:232)\n    at com.xx.websocket.WebSocketThread.run(WebSocketThread.java:60). Model\uff1aMeizu MX6 and OPPO A83T\uff1b\nSystem version\uff1aAndroid 7.1.1\nJava-WebSocke versiont\uff1a1.3.8\nI don't know the steps\uff0cIt`s from  Umeng  analytics. \nMaybe it's because reconnect() calls many times.. @PhilipRoman Yes, only one thread .. Sorry,I have never recovered this bug.. ",
    "egueli": "I see this is related to https://github.com/TooTallNate/Java-WebSocket/pull/570/.\nIf I read correctly the changes, WebsocketListener.onWebsocketMessageFragment() will never be called anymore and neither will WebsocketServer.onFragment()?. Thank you. In my case, there wasn't much logic in onFragment so I could remove it altogether.. ",
    "yangxsa": "This is complete log\nConnection closed by remote peer Code: -1 Reason: \njavax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake\n    at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980)\n    at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363)\n    at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:916)\n    at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)\n    at java.io.InputStream.read(InputStream.java:101)\n    at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:416)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.io.EOFException: SSL peer shut down incorrectly\n    at sun.security.ssl.InputRecord.read(InputRecord.java:505)\n    at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:961)\n    ... 6 more\njavax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake\n    at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980)\n    at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363)\n    at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:916)\n    at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)\n    at java.io.InputStream.read(InputStream.java:101)\n    at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:416)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.io.EOFException: SSL peer shut down incorrectly\n    at sun.security.ssl.InputRecord.read(InputRecord.java:505)\n    at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:961)\n    ... 6 more\n. I am in China,but the url \"wss://www.bitmex.com/realtime\" is  not available in China.\nI used vpn\uff0cso I add a local http proxy,and i am wrong?\nI can't understand why i am faild\nI try to connected \"wss://api.fcoin.com/v2/ws\" just now,i am success,this is available in China\nOriginally, I think is SSL certificate not correct,but now....\nThe server is all others,I need to get others websocket data\nSorry,English is not good\nThanks for your view and reply.. Thanks a lot.. ",
    "StephanWald": "sorry. ",
    "yokey1219": "I was trying the setReuseAddr(true) option,but it's still happened sometimes.Maybe it's caused by some unkown issue, so i need help.. Thanks for your reply. Yes, it only happens when the app crashes. I will try to reproduce this issue and provide more info.. ",
    "nsjames": "I see this also happening ( consistently ) with setReuseAddr(true) when starting a server as the app starts, and then reloading the app in an emulator. . The code is currently closed source but it'll be open source fairly soon.\nI'll be sure to link the repo once it is!. Not going to be able to open-source in time. I'll leave the link here once it is so that we can take it from there. ",
    "Niall7459": "I\u2019m executing an new ArrayBuffer() on the data received in javascript but I\u2019m not sure how to actually send an ArrayBuffer. Il try using simpleframework. ",
    "ihsanhaikalz": "@marci4 Hi. Thanks very much for the info. \nAs for the code I am currently following the SimpleServer and EmptyClient classes mentioned in this library and it works in localhost. Now just the question of how to make the client side to connect to server with public IP address.\nMy server code is something like this.\n```\nimport java.net.InetSocketAddress;\nimport java.nio.ByteBuffer;\nimport org.java_websocket.WebSocket;\nimport org.java_websocket.handshake.ClientHandshake;\nimport org.java_websocket.server.WebSocketServer;\npublic class SimpleServer extends WebSocketServer {\npublic SimpleServer(InetSocketAddress address) {\n    super(address);\n}\n\n@Override\npublic void onOpen(WebSocket conn, ClientHandshake handshake) {\n    conn.send(\"Welcome to the server!\"); //This method sends a message to the new client\n    broadcast( \"new connection: \" + handshake.getResourceDescriptor() ); //This method sends a message to all clients connected\n    System.out.println(\"new connection to \" + conn.getRemoteSocketAddress());\n    long start = System.currentTimeMillis();\n    conn.sendPing();\n    long end = System.currentTimeMillis();\n    conn.send(\"time start= \" + (end-start)); //This method sends a message to the new client\n\n}\n\n@Override\npublic void onClose(WebSocket conn, int code, String reason, boolean remote) {\n    System.out.println(\"closed \" + conn.getRemoteSocketAddress() + \" with exit code \" + code + \" additional info: \" + reason);\n}\n\n@Override\npublic void onMessage(WebSocket conn, String message) {\n    System.out.println(\"received message from \" + conn.getRemoteSocketAddress() + \": \" + message);\n}\n\n@Override\npublic void onMessage( WebSocket conn, ByteBuffer message ) {\n    System.out.println(\"received ByteBuffer from \"  + conn.getRemoteSocketAddress());\n}\n\n@Override\npublic void onError(WebSocket conn, Exception ex) {\n    System.err.println(\"an error occured on connection \" + conn.getRemoteSocketAddress()  + \":\" + ex);\n}\n\n@Override\npublic void onStart() {\n    System.out.println(\"server started successfully\");\n}\n\npublic static void main(String[] args) {\n    String host = \"localhost\";\n    int port = 8887;\n\n    WebSocketServer server = new SimpleServer(new InetSocketAddress(host, port));\n    server.run();\n\n}\n\n}\n```\nThe server code will ping the client once the connection is established using conn.sendPing() as written in onOpen() function, is that correct? \nAs for the client code:\n```\nimport java.net.URI;\nimport java.net.URISyntaxException;\nimport java.nio.ByteBuffer;\nimport org.java_websocket.client.WebSocketClient;\nimport org.java_websocket.drafts.Draft;\nimport org.java_websocket.drafts.Draft_6455;\nimport org.java_websocket.handshake.ServerHandshake;\npublic class EmptyClient extends WebSocketClient {\npublic EmptyClient(URI serverUri, Draft draft) {\n    super(serverUri, draft);\n}\n\npublic EmptyClient(URI serverURI) {\n    super(serverURI);\n}\n\n@Override\npublic void onOpen(ServerHandshake handshakedata) {\n    send(\"Hello, it is me. Mario :)\");\n    System.out.println(\"new connection opened\");\n}\n\n@Override\npublic void onClose(int code, String reason, boolean remote) {\n    System.out.println(\"closed with exit code \" + code + \" additional info: \" + reason);\n}\n\n@Override\npublic void onMessage(String message) {\n    System.out.println(\"received message: \" + message);\n}\n\n@Override\npublic void onMessage(ByteBuffer message) {\n    System.out.println(\"received ByteBuffer\");\n}\n\n@Override\npublic void onError(Exception ex) {\n    System.err.println(\"an error occurred:\" + ex);\n}\n\npublic static void main(String[] args) throws URISyntaxException {      \n    WebSocketClient client = new EmptyClient(new URI(\"ws://publicipaddress:8887\"));\n    client.connect();\n}\n\n}\n```\nClient already connects with the server but it seems that the server could not ping the client as the output given by client is as follow:\nnew connection opened\nreceived message: Welcome to the server!\nreceived message: new connection: /\nreceived message: time start= 0\nWhat I would like to get is how long the roundtrip time between server and client or how long does it take for the server to send the ping message and receive the reply from client's ping response/ client pong message. But somehow it seems that the ping does not work or my code is wrong.\nDo you know what is the problem?\n. Hi @marci4. \nThanks for the code! I have updated my code and now the ping works. \nBut the result between normal ping from client to server using ping command line or psping application (20ms) is much better than the ping using websocket from server to client (100ms). I suspect the problem is when pinging with websocket it actually goes to layer 7 application that will take more time instead of only layer 3 TCP/UDP. \nDo you know any other method how to improve the ping result from websocket?. ",
    "VolodymyrSmolynets": "It is not a defect, just cannot reconnect with socket I want.. 1. I create a ssl socket with my keystore\n2. Set the socked - WebSocketClient.setSocket\n3. Connect\n4. Lose the connection\n5. Try to reconnect - WebSocketClient.reconnect\nOn step 5 I lose my ssl socket because reset() makes it null, than connect() creates a new usual socket.. Yes, it could be a solution.. ",
    "pellyadolfo": "I have been trying to understand some scenarios for a few days but many things are still are unclear to me, e.g.:\n how to transfer an object between client and server with ByteBuffer. Is this possible with serialization?\n how to transfer a map of values between client and server and back in a single message\nI like the project but I need to find out how reliable is accessing a mobile phone by IP, specially when they are behind a firewall (and some ports are closed), or behind an intranet , an therefore with local IPs. I am still unclear about this. Great work anyway.. ",
    "IlyaMyasoedov": "I developed an example app that communcates with  3rd party server and all works without errors. That's why I suppose the issue is connected to our server.. ",
    "martin-g": "Thank you, @marci4 !\nI will test it soon!\nCould you please push your changes in a branch so I can see them ?. I will take some heap dumps and take a look later today!. Hi @marci4,\nEverything looks in today's heap dump!\nThank you!. ",
    "chuntakung": "Thanks for reply. I have updated the scenario. Not sure what you mean by example application. We applied the websocket to bridge our device with a mobile phone. Both of them are running android 6. The issue happened when our device runs in softAP mode with websocket running, and client connect to it as a Wifi station. And then client would start Websocket connection with the server. Is it clear ? Appreciate the response. \nWe guess, probably the immedaite reconnection and manual time alignment (from old past time to current) could cause problem for connectionLostTimer, so that PING was sent out nonstop ? . Thanks, we have fixed it by enabling the lost detection after time alignment. Thanks for suggestion. Appreciate. . Sorry, not elaborate. I am talking about server side. . ",
    "PhuongNguyenETIT": "I use the connected URI(\"ws://192.168.4.1:3232\") to the server. But when I use DNS URI(\"ws://namedns:3232\"), I can not connect to the server. Can anyone help me?. Thank you, 8databit. I'm making a connection from android application to WiFi esp8266 via DNS registered LAN. When I do through IP address then the connection is to WiFi, but when replaced by DNS is not connected to be. \n`private void ConnectControl(){\nURI uri;\n        try {\n            uri = new URI(\"ws://SmartBox11160899:3232\");\n        } catch (URISyntaxException e) {\n            e.printStackTrace();\n            return;\n        }\n        client = new WebSocketClient(uri) {\n            @Override\n            public void onOpen(ServerHandshake handshakedata) {\n        }\n\n        @Override\n        public void onMessage(String message) {\n            final String payload = message;\n            runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n\n                }\n            });\n        }\n\n        @Override\n        public void onClose(int code, String reason, boolean remote) {\n\n        }\n\n        @Override\n        public void onError(Exception ex) {\n\n        }\n    };\n    client.connect();\n}`. thanks everyone. you know mDNS in esp8266. I tried to connect from app to esp8266 with mDNS registered, but not connected to it.\n",
    "BaraHashesh": "I just found a solution to the problem however it isn't really practical.\nI've done the following.\n/*\nwhile loop to wait for data to be flushed\n*/\nwhile (true){\n    /*\n    Check if socket has data in buffer\n    */\n    if(!webSocket.hasBufferedData()) {\n        break;\n    }\n}\n\nHowever now I've encountered a new problem, \nthe connection sockets seems to automatically shut down(close) after a some time,\nis there any reason for this behavior, and how to fix it.. There was no need to include the full template, furthermore i think i made the problem and how to recreate it quite simple, however since it's unclear as you say here's a code to recreate it.\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.InetSocketAddress;\nimport java.net.UnknownHostException;\nimport java.nio.ByteBuffer;\n\nimport org.java_websocket.WebSocket;\nimport org.java_websocket.WebSocketImpl;\nimport org.java_websocket.framing.Framedata;\nimport org.java_websocket.handshake.ClientHandshake;\nimport org.java_websocket.server.WebSocketServer;\n\n/**\n * A simple WebSocketServer implementation. Keeps track of a \"chatroom\".\n */\npublic class ChatServer extends WebSocketServer {\n\n    public ChatServer( int port ) throws UnknownHostException {\n        super( new InetSocketAddress( port ) );\n    }\n\n    public ChatServer( InetSocketAddress address ) {\n        super( address );\n    }\n\n    @Override\n    public void onOpen( WebSocket conn, ClientHandshake handshake ) {\n        conn.send(\"Welcome to the server!\"); //This method sends a message to the new client\n        broadcast( \"new connection: \" + handshake.getResourceDescriptor() ); //This method sends a \n        message to all clients connected\n        System.out.println( conn.getRemoteSocketAddress().getAddress().getHostAddress() + \" \n        entered the room!\" );\n    }\n\n    @Override\n    public void onClose( WebSocket conn, int code, String reason, boolean remote ) {\n        broadcast( conn + \" has left the room!\" );\n        System.out.println( conn + \" has left the room!\" );\n    }\n\n    @Override\n    public void onMessage( WebSocket conn, String message ) {\n        try {\n            Thread.Sleep(1000*60*2);\n        } catch (Exception e) {\n            //TODO: handle exception\n        }\n        broadcast( message );\n        System.out.println( conn + \": \" + message );\n    }\n    @Override\n    public void onMessage( WebSocket conn, ByteBuffer message ) {\n        broadcast( message.array() );\n        System.out.println( conn + \": \" + message );\n    }\n\n\n    public static void main( String[] args ) throws InterruptedException , IOException {\n        int port = 8887; // 843 flash policy port\n        try {\n            port = Integer.parseInt( args[ 0 ] );\n        } catch ( Exception ex ) {}\n        ChatServer s = new ChatServer( port );\n        s.start();\n        System.out.println( \"ChatServer started on port: \" + s.getPort() );\n\n        BufferedReader sysin = new BufferedReader( new InputStreamReader( System.in ) );\n        while ( true ) {\n            String in = sysin.readLine();\n            s.broadcast( in );\n            if( in.equals( \"exit\" ) ) {\n                s.stop(1000);\n                break;\n            }\n        }\n    }\n    @Override\n    public void onError( WebSocket conn, Exception ex ) {\n        ex.printStackTrace();\n        if( conn != null ) {\n            // some errors like port binding failed may not be assignable to a specific websocket\n        }\n    }\n\n    @Override\n    public void onStart() {\n        System.out.println(\"Server started!\");\n        setConnectionLostTimeout(0);\n        setConnectionLostTimeout(100);\n    }\n\n}. Yes.\n",
    "iamchathu": "@marci4 No. This the code I have written.\nThis is the SwingWorker (To run on a sepate thread, since when I use run method it freezes the UI)\n```\npublic class WSSWorker extends SwingWorker {\nprivate String host = \"192.168.1.4\";\nprivate int port = 8887;\n\nprivate WSServer wss = null;\n\npublic WSSWorker(WSListener listner) {\n    wss = new WSServer(new InetSocketAddress(host, port), listner);\n}\n\npublic void sendMessage(String message) {\n    if (wss.getConnectedSocket() != null && wss.getConnectedSocket().isOpen()) {\n        wss.getConnectedSocket().send(message);\n    } else {\n\n// throw error\n        }\n    }\n@Override\nprotected Void doInBackground() {\n    wss.setReuseAddr(true);\n    wss.setTcpNoDelay(true);\n    wss.run();\n    return null;\n}\n\n@Override\nprotected void done() {\n    super.done();\n    System.out.println(\"Stopping\");\n    try {\n        wss.stop();\n    } catch (IOException ex) {\n        Logger.getLogger(WSSWorker.class.getName()).log(Level.SEVERE, null, ex);\n    } catch (InterruptedException ex) {\n        Logger.getLogger(WSSWorker.class.getName()).log(Level.SEVERE, null, ex);\n    }\n}\n\n}\n```\nWhen I try to stop the Worker using\nwssw.cancel(false);\nIt freeze the UI.\n. ",
    "AlanVerne": "reset() is private so i don't know how to reconnect and set up socket now. ",
    "ristodziuba": "Why closed? I have this same error. What info do you need?. ",
    "nbtdev": "HAH! Never mind, it didn't occur to me to look through the closed issues, for example, #777...IntelliJ only implements one of the onMessage methods when you have it do it automatically.... ",
    "SossenSystems": "Hey @marci4,\nI apologize with the statement of the certificate, that has already been done. Since you have done everything right, good work!\nMy problem is that Firefox has problems connecting to the wss server, unfortunately I have to reload the page sometimes, sometimes even rebooting the server to connect the client to the server. I have often tested it with the public wss echo server which connects perfectly every time, so my guess is that the server often rejects connections.\nI thank you for the feedback again :-). Hi @marci4,\nthe problem persists only with Firefox, funny enough the problem is only with the server like that :(\nBest regards\nMichael. ",
    "uncleleonfan": "@PhilipRoman \nThanks, setSocketFactory only found in v1.4.0 from nexus.. ",
    "kiko35": "Yes that's a good idea, thank you.. ",
    "DavidDavid123": "\n\ndownload the file using this command \npi@raspberrypi:~ $ git clone https://github.com/TooTallNate/Java-WebSocket.git\n(the libarry was created - and it in /home/pi/Java-WebSocket\n\n\nopen bluejay software \n3.project-import , selected Java-WebSocket\n\n\nin the blueJ I can see a new red \"folder\" called src \n\n\nTools- preferences-Libaries:\nadd\nselected web-socket \n\nreboot the blueJ \nopen 1 example file \ncompile \nget error  - packege org.java_websocket.WebSocket does not exist \n\nthis is what I have insalled in the PI:\npi@raspberrypi:~ $ dpkg --get-selections | grep jdk\noracle-java8-jdk                install\npi@raspberrypi:~ $ java -version\njava version \"1.8.0_65\"\nJava(TM) SE Runtime Environment (build 1.8.0_65-b17)\nJava HotSpot(TM) Client VM (build 25.65-b01, mixed mode)\npi@raspberrypi:~ $ \n. anything? \n. I will ask BlueJ \nThanks , \n. ",
    "JesusTheHun": "On the other hand I've found a synchronized block that appears to be unnecessary. The queue is thread safe since it's a BlockingQueue.\nThis blocks feeds the outQueue used to write out the frames. See outQueue.add() and outQueue.take(). Thank you for your interest.\nI have broken down the logic and submitted it to a repository : https://github.com/JesusTheHun/ws-benchmark\nEverything is located in the test directory\nThe core content is in WsBenchmarkApplicationTests.sendSamplesToOneServer(). I've run several tests, here are my observations so far :\nThe message size directly affect the delivery throughput but not the bandwidth. Expected.\nPast the number of logical cores, there is no improvement of throughput. Expected.\nPast 80 clients the throughput starts to decline. A test with 500 clients just froze it.\nWith a messageSize = 300KB , a sendPoolSize = 8 and a message every 67 ms\nX = 80\nI would like to reach X = 500.\nAlso every client has a memory footprint of 35-40 MB. Considering 15 messages of 300k per seconds, so 4 MB / s, it means the message survive 10 seconds in \"websocket world\". I browse the lib sources but I can't wrap my head around how I could accelerate the buffer release.\nCPU 4c/8t : Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz \nRAM 16 GB\nVM Options : -ea -Xmx8192m. ",
    "apexJCL": "Sorry, I've been very busy, I'll try to set things up these weekend and\nnotify on any updates.\nEl mi\u00e9., 2 de ene. de 2019 a la(s) 14:34, Marcel Prestel (\nnotifications@github.com) escribi\u00f3:\n\nAny update @apexJCL https://github.com/apexJCL ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/TooTallNate/Java-WebSocket/issues/812#issuecomment-450977113,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AD2cAKhyjS7qTUpBQJ3G0Ihs7MMnmX7qks5u_RfbgaJpZM4YeyF9\n.\n. \n",
    "Medioman92": "this is also affecting version 1.4.0. ",
    "alfree-kr": "@marci4\nThe logic of the server changed and the test program changed.\nWebSocketTest.java.zip\n=================================\n\npackage test;\nimport java.net.URI;\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.java_websocket.client.WebSocketClient;\nimport org.java_websocket.drafts.Draft;\nimport org.java_websocket.drafts.Draft_6455;\nimport org.java_websocket.handshake.ServerHandshake;\npublic class WebSocketTest extends WebSocketClient\n{\npublic static void main(String[] args) throws Throwable\n{\n    Map<String, String> header = new HashMap<String, String>();\n    header.put(\"Origin\", \"https://www.bithumb.com\");\n    WebSocketTest websocket = new WebSocketTest(URI.create(\"wss://wss.bithumb.com/public\"), new Draft_6455(), header);\n    websocket.connect();\n}\n\n\npublic WebSocketTest(URI serverUri, Draft protocolDraft, Map<String, String> httpHeaders)\n{\n    super(serverUri, protocolDraft, httpHeaders);\n}\n\n\n@Override\npublic void onOpen(ServerHandshake handshakedata)\n{\n    System.out.println(\"onOpen :: \" + handshakedata);\n    send(\"{\\\"currency\\\":\\\"BTC\\\",\\\"tickDuration\\\":\\\"24H\\\",\\\"service\\\":\\\"ticker|transaction\\\"}\");\n}\n\n@Override\npublic void onMessage(String message)\n{\n    System.out.println(\"onMessage :: \" + message);\n\n}\n\n@Override\npublic void onClose(int code, String reason, boolean remote)\n{\n    System.out.println(\"onClose :: \" + code +  \":\"+reason + \":\"+remote);\n\n}\n@Override\npublic void onError(Exception ex)\n{\n    System.err.println(\"onError :: \");\n    ex.printStackTrace();\n\n}\n\n}\n\n==============================\n. @PhilipRoman  @marci4 \n - OS \nLinux ?????? 4.11.5-041105-generic #201706141137 SMP Wed Jun 14 15:39:07 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\n\n\nJava \njava version \"1.7.0_45\"\nJava(TM) SE Runtime Environment (build 1.7.0_45-b18)\nJava HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mo\n\n\nError Log\nbuffer.array().length :4483\nbuffer.position()     :4\nbuffer.limit()        :4483\njava.lang.IndexOutOfBoundsException\n    at java.nio.Buffer.checkBounds(Buffer.java:567)\n    at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:187)\n    at org.java_websocket.drafts.Draft_6455.translateSingleFrame(Draft_6455.java:496)\n    at org.java_websocket.drafts.Draft_6455.translateFrame(Draft_6455.java:664)\n    at org.java_websocket.WebSocketImpl.decodeFrames(WebSocketImpl.java:378)\n    at org.java_websocket.WebSocketImpl.decode(WebSocketImpl.java:218)\n    at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:425)\n    at java.lang.Thread.run(Thread.java:745)\n\n\nChange Source Draft_6455.java \n  494 Line\n            try\n            {\n                payload.put( buffer.array(), buffer.position(), payload.limit() );\n                buffer.position( buffer.position() + payload.limit() );\n            }\n            catch(IndexOutOfBoundsException ie)\n            {\n                System.err.println(\"buffer.array().length :\" + buffer.array().length);\n                System.err.println(\"buffer.position()     :\" + buffer.position());\n                System.err.println(\"buffer.limit()        :\" + buffer.limit());\n                ie.printStackTrace();\n                makeDump(buffer);\n                throw ie;\n            }\n\n\nMessage Dump File \nwebsocket_err.data.zip\nwebsocket_err_UTF8.dump.zip\n\n\n. @PhilipRoman  @marci4 \nHi~~ all\nI found the reason for the error.\nThe error occurs if the message is larger than the size of the receive buffer (16,384 bytes).\nIf it is bigger than the buffer, the message is received and received, but there is a problem in message assembly.\nI fixed the error by modifying the source as shown below.\nI hope this error has been fixed in the next version.\nDraft_6455.java.zip\n\nChange Source Draft_6455.java\n632 Line \n\n    @Override\n    public List translateFrame( ByteBuffer buffer ) throws InvalidDataException {\n        while( true ) {\n            List frames = new LinkedList();\n            Framedata cur;\n            if( incompleteframe != null ) {\n                // complete an incomplete frame\n                try {\n                    buffer.mark();\n                    int availableNextByteCount = buffer.remaining();// The number of bytes received\n                    int expectedNextByteCount = incompleteframe.remaining();// The number of bytes to complete the incomplete frame            if( expectedNextByteCount > availableNextByteCount ) {\n                // did not receive enough bytes to complete the frame\n                incompleteframe.put( buffer.array(), buffer.position(), availableNextByteCount );\n                buffer.position( buffer.position() + availableNextByteCount );\n                return Collections.emptyList();\n            }\n            incompleteframe.put( buffer.array(), buffer.position(), expectedNextByteCount );\n            buffer.position( buffer.position() + expectedNextByteCount );\n            cur = translateSingleFrame( ( ByteBuffer ) incompleteframe.duplicate().position( 0 ) );\n            frames.add( cur );\n            incompleteframe = null;\n        }\n        //Add source start\n        catch ( IndexOutOfBoundsException e ) \n        {\n            ByteBuffer extendedframe = ByteBuffer.allocate( checkAlloc( incompleteframe.limit() + buffer.remaining() ) );\n            assert ( extendedframe.limit() > incompleteframe.limit() );\n            incompleteframe.rewind();\n            extendedframe.put( incompleteframe );\n            incompleteframe = extendedframe;\n            continue;\n        } \n        //Add source End\n       catch ( IncompleteException e ) {\n            // extending as much as suggested\n            ByteBuffer extendedframe = ByteBuffer.allocate( checkAlloc( e.getPreferredSize() ) );\n            assert ( extendedframe.limit() > incompleteframe.limit() );\n            incompleteframe.rewind();\n            extendedframe.put( incompleteframe );\n            incompleteframe = extendedframe;\n            continue;\n        }\n    }\n\n    while( buffer.hasRemaining() ) {// Read as much as possible full frames\n        buffer.mark();\n        try {\n            cur = translateSingleFrame( buffer );\n            frames.add( cur );\n        } catch ( IncompleteException e ) {\n            // remember the incomplete data\n            buffer.reset();\n            int pref = e.getPreferredSize();\n            incompleteframe = ByteBuffer.allocate( checkAlloc( pref ) );\n            incompleteframe.put( buffer );\n            break;\n        }\n    }\n    return frames;\n}\n\n}\n\n. @marci4 \nI'm sorry.\nI do not understand your question.\n\n\nTestServerSource\nWebSocketServerTest.java.zip\n\npackage test;\n\nimport java.net.InetSocketAddress;\n\nimport org.java_websocket.WebSocket;\nimport org.java_websocket.handshake.ClientHandshake;\nimport org.java_websocket.server.WebSocketServer;\n\npublic class WebSocketServerTest extends WebSocketServer\n{\n    public static void main(String[] args) throws InterruptedException\n    {\n        WebSocketServerTest server = new WebSocketServerTest(new InetSocketAddress(9999));\n        server.start();\n        synchronized (server)\n        {\n            server.wait();    \n        }\n\n    }\n    public WebSocketServerTest( InetSocketAddress address ) {\n        super(address);\n    }\n\n    @Override\n    public void onOpen(WebSocket conn, ClientHandshake handshake)\n    {\n        StringBuilder sb = new StringBuilder();\n        for(int i=0;i<16400;i++)\n        {\n            sb.append(\"1\");\n        }\n        conn.send(sb.toString());\n    }\n\n    @Override\n    public void onClose(WebSocket conn, int code, String reason, boolean remote)\n    {\n    }\n\n    @Override\n    public void onMessage(WebSocket conn, String message)\n    {\n    }\n\n    @Override\n    public void onError(WebSocket conn, Exception ex)\n    {\n    }\n\n    @Override\n    public void onStart()\n    {\n        System.out.println(\"Start\");\n    }\n}\n\n\n.",
    "ZhaoYidong": "I also encountered this problem\uff1aIndexOutOfBoundsException\uff0cand always is 2 byte.\nThis often happens when the network is unstable. But 1.3.4 don't have this problem.\nWhen I replace Draft_6455.java, it will throw an exception :java_websocket.exceptions.InvalidFrameException: Unknown opcode 4\nor\njava_websocket.exceptions.InvalidFrameException: Unknown opcode 5\nDoes anyone know the difference between 1.3.4 with 1.3.9 or 1.4.0. ",
    "ffand": "I get this happening with about half the servers I try to connect to. The problem is due to a code change in Draft_6455.translateSingleFrame() where some of the code was placed in a separate method ( translateSingleFramePayloadLength() ), changing the behavior. In the block of code that was moved to the new method, two variables were updated (\"payloadlength\" and \"realpacketsize\"), but the new method only returns the updated payloadlength value. So realpacketsize sometimes ends up with the wrong value. The solution is easy. Just move the contents of translateSingleFramePayloadLength() (sans the first line of code: \"int payloadlength = oldPayloadlength;\") back into the calling method.\n. ",
    "robinchew": "I'm still unsure how to solve it on the Android side.. If this isn't a Java-WebSocket issue, but an Android issue, then I'm open to solutions. Unfortunately I haven't found one yet, hopefully someone hitting this same issue is able to provide some insight.. Initially, I thought perhaps it was possible to pass eg. networkInterface as an argument to Java-WebSocket somehow, and you are able to connect to eg. 192.168.1.3 on 1 network and the same IP on another network.. ",
    "Pikachu920": "ah shit, i forgot to set that in my debug environment.\nwhat I meant with the not being able to change the client code is that I'm limited to doing things on the server side because I'm not the host/maintainer of the client.\nthanks @PhilipRoman and @NoahAndrews  \ud83d\udc4d . ",
    "haelix888": "It's a poorer alternative in terms of performance of an application which is otherwise draught designed as single threaded (event driven), because it implies the additional thread switch and somewhat more code.\nCan you please confirm my assumption above? \"It seems on the client-side one is expected to create a thread for the reading.\".  Is that how normally the WebSocket is integrated into apps? Thanks.. That and the latency hit although I admit that is very rare to be latency sensitive at websocket level (you'd use a lower level protocol) AND if you're sensitive the rest of the code in the system would be super fast already. ",
    "rahuls6": "Thanks for the implementation. However, I notice that when tested with 100 websocket clients there are 3x(300) odd threads created. So may be thats the reason as pointed by @haelix888 this implementaion doesnt use nio channel where we can have a single event loop by passing the selector. Honestly, this client choked when the number of client exceeded 1000 since it eats up lot of memory and I/O. It would be great if it was purely non-blocking one. . Well, yes I am simulating more than 100 thousand devices which are websocket clients. But I still wonder why should the implementation be different for server and client. Client could have also used the nio implementation so that it will be efficient from resources point of view.. ",
    "hvoigt": "Thanks. ",
    "bigyShot": "Hello,@PhiliRoman,\nsorry for so late to reply you,and thanks for your reply.these days i'm busy with another thing,I didn't see your reply,I used both chrome and firefox,and i tried other browsers,it's the same situation.\nThe client side just the very normal websocket function,In the server,i define a global variety userId to identify the user who connected.And i build a list to store the list that connect the server,on the close function.I let the current user's status changed,be offline,remove it from the onlineList.I think maybe the server mixed the userId,but i don't know how to fix it.maybe lock the userId?it should be no use and impossible.here is the onclose code:\n@Override\n    public void onClose(WebSocket webSocket, int code, String reason, boolean remote) {\n        //this userId is defined in class,be a global variety\n        User user = userService.getUser(Integer.valueOf(userId));\n       //let this user be offline\n        user.setIsOnline(0);\n        userService.updateUser(user);\n        onLineList.remove(userId);\n    }\n. hi@PhiliRoman,\ni missed something,I start the server class at springbootApplication start class.\nServer server=new Server(20818);\nserver.run();\njust like this,could it caused this problem?. I alredy solved this,thanks. ",
    "Mikey1982": "You can find the documentation for the Maven-Bundle plugin on [http://felix.apache.org/components/bundle-plugin/] and [http://felix.apache.org/documentation/subprojects/apache-felix-maven-bundle-plugin-bnd.html]. It may be a good idea to add / tags though.\n. ",
    "AlexisBrito": "Hi @marci4,\nSorry for the delayed reply. I'm not sure it can, since in my code, I'm already creating a socket factory...\nI can't really look into this at the moment so I'm going to share the whole code and hopefully you know where the issue is (if there is any):\npublic class SSLClientExample {\n/*\n * Keystore with certificate created like so (in JKS format):\n *\n *keytool -genkey -keyalg RSA -validity 3650 -keystore \"keystore.jks\" -storepass \"storepassword\" -keypass \"keypassword\" -alias \"default\" -dname \"CN=127.0.0.1, OU=MyOrgUnit, O=MyOrg, L=MyCity, S=MyRegion, C=MyCountry\"\n */\npublic static void main( String[] args ) throws Exception {\n    WebSocketChatClient c = new WebSocketChatClient( new URI( \"wss://localhost:8887\" ) );\n\n    // load up the key store\n    String STORETYPE = \"JKS\";\n    String KEYSTORE = \"C:\\\\Users\\\\alexandre.brito\\\\Documents\\\\NetBeansProjects\\\\Java-WebSocket-master2\\\\target\\\\keystore.jks\";\n    String STOREPASSWORD = \"storepassword\";\n    String KEYPASSWORD = \"keypassword\";\n\n    KeyStore ks = KeyStore.getInstance( STORETYPE );\n    File kf = new File( KEYSTORE );\n    ks.load( new FileInputStream( kf ), STOREPASSWORD.toCharArray() );\n\n    KeyManagerFactory kmf = KeyManagerFactory.getInstance( \"SunX509\" );\n    kmf.init( ks, KEYPASSWORD.toCharArray() );\n    TrustManagerFactory tmf = TrustManagerFactory.getInstance( \"SunX509\" );\n    tmf.init( ks );\n\n    SSLContext sslContext = null;\n    sslContext = SSLContext.getInstance( \"TLS\" );\n    sslContext.init( kmf.getKeyManagers(), tmf.getTrustManagers(), null );\n    // sslContext.init( null, null, null ); // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\n\n    SSLSocketFactory factory = sslContext.getSocketFactory();// (SSLSocketFactory) SSLSocketFactory.getDefault();\n\n    c.setSocketFactory( factory );\n\n            c.connectBlocking();\n\n    c.send( \"hi\" );\n    Thread.sleep( 10 );\n    c.closeBlocking();\n\n    //Disconnect manually and reconnect blocking\n    c.reconnectBlocking();\n    c.send( \"it's\" );\n    Thread.sleep( 10000 );\n    c.closeBlocking();\n    //Disconnect manually and reconnect\n    c.reconnect();\n    Thread.sleep( 100 );\n    c.send( \"me\" );\n    Thread.sleep( 100 );\n    c.closeBlocking();\n\n    BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ) );\n    while ( true ) {\n        String line = reader.readLine();\n        if( line.equals( \"close\" ) ) {\n            c.close();\n        } else {\n            c.send( line );\n        }\n    }\n}\n\n}. Hey @marci4,\nThanks a lot! It's working :D\nBest regards!. ",
    "jadefountain": "Map httpHeaders = new HashMap();\nhttpHeaders.put(\"Key\",\"Value\");\nand then adding it to WebSocketCline(URI,httpHeaders);\nisn't working for me. My code is:\nMap httpHeaders = new HashMap();\n        httpHeaders.put(\"Some key \", \"Some value\");\n        WebSocketChatClient chatclient = new WebSocketChatClient(new URI(\"some websocket \"),httpHeaders);\n    TrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {\n        public X509Certificate[] getAcceptedIssuers() {\n            return null;\n        }\n        public void checkClientTrusted(X509Certificate[] certs, String authType) {\n        }\n        public void checkServerTrusted(X509Certificate[] certs, String authType) {\n        }\n    }};\n    try {\n\n        SSLContext sslContext = null;\n\n        sslContext = SSLContext.getInstance(\"TLS\");\n        sslContext.init(null, trustAllCerts, new SecureRandom());\n        // will use java's default key and trust store which is sufficient unless you deal with self-signed certificates\n        chatclient.setWebSocketFactory(new DefaultSSLWebSocketClientFactory(sslContext));\n\n        chatclient.connectBlocking();\n\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}. Nevermind, I fixed it!.\n",
    "tarasmytlovych": "Maybe, I am doing something wrong. Currently I try to run server as following:\nString host = \"194.44.201.130\";\nint port = 8887;\nWebSocketServer server = new SimpleServer(new InetSocketAddress(host, port));\nAnd it doent work. Could you say what should I do in addition to run server on provided IP and port?. ",
    "gnations56": "Solved: had not set CN localhost. ",
    "BroHammie": "Comments addressed, simple unit test included.. ",
    "nalizadeh": "Yes I get the same exception with Chrome (version 71.0.3578.98). This is my simple html client side code\n Click to expand \n\n```html\nhtml\n\n\n\n        #messages {\n            text-align: left;\n            width: 50%;\n            padding: 1em;\n            border: 1px solid black;\n        }\n    \nWebSocket Client\n\n\n\n\n\nType a message and hit send:\n\nSend\nSelect an image and hit send:\n\nSend Image\n\n\n\n\n\n    const messageWindow = document.getElementById(\"messages\");\n    const sendButton = document.getElementById(\"send\");\n    const messageInput = document.getElementById(\"message\");\n    const fileInput = document.getElementById(\"file\");\n    const sendImageButton = document.getElementById(\"sendImage\");\n\n    const socket = new WebSocket(\"ws://localhost:8080\");\n    socket.binaryType = \"arraybuffer\";\n\n    socket.onopen = function (event) {\n        addMessageToWindow(\"Connected\");\n    };\n\n    socket.onmessage = function (event) {\n        if (event.data instanceof ArrayBuffer) {\n            addMessageToWindow(\"Got Image:\");\n            addImageToWindow(event.data);\n        } else {\n            addMessageToWindow(\"Got Message: \" + event.data);\n        }\n    };\n\n    sendButton.onclick = function (event) {\n        sendMessage(messageInput.value);\n        messageInput.value = \"\";\n    };\n\n    sendImageButton.onclick = function (event) {\n\n        var reader = new FileReader();\n\n        reader.onload = function() {\n            sendMessage(this.result);\n        };\n        reader.readAsArrayBuffer(fileInput.files[0]);\n        fileInput.value = null;\n    };\n\n    function sendMessage(message) {\n        socket.send(message);\n        addMessageToWindow(\"Sent Message: \" + message);\n    }\n\n    function addMessageToWindow(message) {\n        messageWindow.innerHTML += \"<div>\" + message + \"</div>\";\n    }\n\n    function addImageToWindow(image) {\n        let url = URL.createObjectURL(new Blob([image]));\n        messageWindow.innerHTML += \"<img src='\" + url + \"'/>\";\n    }\n\n\n```\n\n\n\n. specific image file which causes it to fail\n-> any large image causes the error\nserver side code\n-> I just took the ChatServer example and changed each \"broadcast(..)\" with \"conn.send(..)\"\njava version & Java-WebSocket library version\n->jdk1.8.0_72, Eclipse Java EE IDE Neon.3 (4.6.3), this includes the latest javax.websocket library\ncould you confirm that this only affects 1.4.0?\n-> yes. I use the latest repository.\nGood luck with bug fixing! :)\n. Now that's solved for me, many Thanks :). ",
    "Andreas-Bur": "Ok so I've created the test Issue834Test which checks that the the threads are the same before and after instantiating a new WebSocketServer object. I thought this was the cleanest way since the list decoders with the WebSocketWorkers is protected.\nBy the way I have noticed that not all issue tests are being run in the AllIssueTests class (e.g. Issue847Test). Is this a mistake?. ",
    "newsbubbles": "Yes, I will attempt reproduce now... nice answer time an thanks a lot for such great support!. Great it works for me, thanks!. ",
    "L0ks": "\nHello!\nCan you verify that the problem still happens with version 1.3.9?\n\nI tried using 1.3.9, but found out that this versions package org.java_websocket.client doesn't have DefaultSSLWebSocketClientFactory class. Atempts to connect to the server without using trustAllHosts method, I made, resulted in the following error\n\nInvalid status code received: 503 Status line: HTTP/1.1 503 Service Temporarily Unavailable . > @L0ks looks like your server is not correctly working ...\nBy the way it is not recommended to trust all certificates...\n\nWhich certificates should be trusted for the wss connection to work ?. ",
    "liukefeng2008": "Hello, I want to access some websocket resources, eg: (wss://api.fcoin.com/v2/ws).\nIn some countries,The default dns parsing behavior will resolve the wrong ip address, So I want to specify a custom dns resolver.\n\nhow-to-configure-hostname-resolution-to-use-a-custom-dns-server-in-java\nhow-to-override-dns-in-http-connections-in-java\n\nI want to use the second way, but this library(Java-WebSocket) does not support this method. Is it possible to add a custom dns resolver?\n. I can't set the IP directly. Because the server only respond by the host.\nIf url wss://api.fcoin.com/v2/ws, it's work for me.\nIf url wss://x.x.x.x/v2/ws, it's not work.\n@marci4 look forward to your reply. ",
    "pengls": "Sorry, it's my own problem. ",
    "RalryOng": "Hi Marcel, \nthank you for your reply, i will think other way.\nfor issue resume, is other library problem, i already solve. sorry for disturb.. ",
    "konrad-ch": "Could you elaborate? I'm using this example: https://github.com/TooTallNate/Java-WebSocket/blob/master/src/main/example/ChatServer.java (with all broadcast and println functions commented out) and still having a lot of trace logs.. ",
    "rauchg": "@haruntuncay just chatted with @TooTallNate about granting you access to manage this repo. "
}