{
    "JustArchi": "Are you sure that all bots have SteamMasterClanID properly set? There is no logical explanation why something like that would happen, if I see all bots properly joining my Archi's SC Farm group.\n. Yeah, limited accounts can't add as friend or join to chatroom, this is not a bug but intended Valve's mechanism. Closing it then.\n. Steam sets up captcha because of too many logins probably, and I'm not sure if I can do anything with that at the moment.\n. Connected with https://github.com/JustArchi/ArchiSteamFarm/issues/10\n. Thing is, that C# XML parser properly detects and uses encoding stated in the xml document, check if changing encoding in XML file is not enough for your case, also make sure that file is indeed properly encoded, my example.xml uses UTF-8 by default.\nThe thing you want to change is a hack enforcing XML parser to use one and only encoding, rather than deciding on it's own what to use. This is less error-prone.\n. Can't reproduce.\n\n. 00000000000000000 is invalid for int, you should use 0 instead.\n. Also avoid extra newline, it's not needed and breaks styling (line 37).\n. Correct name, it's \"Jessie\"\n. You don't need API key to read badge page.\n. Connected with https://github.com/JustArchi/ArchiSteamFarm/issues/10.\n. I released the most simple solution, we just delay creating bots to 1 bot per second.\nhttps://github.com/JustArchi/ArchiSteamFarm/commit/e8335ac18343f0021dd7f8d39c3a36b194210b00\nTry it. I don't have enough accounts.\n. I took your idea and improved it greatly, so bots now limit steam logins also on reconnects + they're sleeping asynchronously (we should avoid Thread.Sleep() at all cost because it's blocking main thread too)\nPull my latest changes and test if all of your bots still work properly.\n. Still need feedback ^\n. For now I think that we leave 5 sec on, and make it switchable in future.\n. Anyway, fixed for now.\n. This is actually not possible because regardless of what steamguard code you enter, flow is then continued to OnDisconnected() callback, which initiates reconnecting through SteamClient.Connect().\nnew SteamClient -> Connect -> OnConnected -> Login(without code) -> OnLoggedOn -> EResult.AccountLogonDenied -> OnDisconnected -> Connect -> OnConnected -> Login(with code) -> OnLoggedOn -> EResult.OK\nThis doesn't work like typical steam client, we actually initiate second Login, just with same steam client so code is not being sent twice. The only thing I could do is spawning totally new steam client if your AuthCode is empty, but then again, it doesn't fix your situation in any way, as new client will once again try to login, get AccountLogonDenied, then do it twice. You're not saving a request here, but complicating things further.\nTrimming sounds like a good idea.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/10\n. Try https://github.com/JustArchi/ArchiSteamFarm/releases/tag/0.6.0.0 if you're brave.\n. Thanks for pointing that out, but this solution won't fix it, actually it'll cause more semaphore released than acquired, because Semaphore.Release() is called in Farm() function as well.\n. Yeah I'm working on better solution because you pointed me on the right track.\n. You can try latest pre-release to see if it fixed all your issues -  https://github.com/JustArchi/ArchiSteamFarm/releases/tag/0.7.0.0-pre1\nPersonally I can't reproduce anything anymore, so hopefully everything is fixed and thread-safe now.\n. That's a good suggestion. Did you test it, everything worked properly?\n. ASF does not keep track of how many cards are left for drop.\n. There's not even an API for that, but that's not a problem. The thing is - it's not intended to be included in ASF, as ASF farms the game as long as ShouldFarm() returns true. And that function returns true until Steam says \"No card drops\" for given appID.\nIt's not like it's impossible to do, it's just more like whole ASF logic doesn't make use of steam cards left for drop anywhere, and I'd have to add whole new logic just to \"perhaps\" show somebody how many cards are left. The current data - such as appID and total games is used by internal cards farming module, that's why it's included, as it's literally just showing status of internal cards farming structures. Adding remaining cards for drop would mean adding whole new structure to cards farming module, that is not being used anywhere in cards farming logic.\nI'd prefer to not pollute code with things that are not being used, even if they're useful. ASF works so fast and nice thanks to it's code quality.\n. Due to the fact that Valve's algorithm changed, it's pointless to use 2 latter options, as they're inefficient.\nUntil I find any valid reason for spending time on implementing them, this is on hold.\n. So we have a valid reason, but I'm still unlikely to work on something that is working unreliable. There's no way to check which algorithm should be used, and implementing totally optional feature which would be used by like 1% of users doesn't sound good enough.\nIt's a valid feature request, and if somebody creates a pull request I'll accept it, but I'm not going to work on that, at least at the moment.\n. Agreed, putting it on wishlist instead.\n. I added a proper switch already - https://github.com/JustArchi/ArchiSteamFarm/commit/1ff4ed026e3c83b4db49ab4df70252d2c99f0a94\nHowever, implementation still needs to be done. I'll see what can be done.\n. Okay guys, I did it.\nhttps://github.com/JustArchi/ArchiSteamFarm/releases/tag/0.8.0.0-pre1\nEverything you need has been written in the release description.\nI need major feedback regarding new Complex algorithm, so I suggest everyone who has restricted accounts to regenerate configs for them, and set CardDropsRestricted to true. ASF will notice you what algorithm has been chosen for each account upon starting.\nHave fun. Remember to keep an eye on what is going on, as I only barely tested it on my own account.\n. Yeah, algorithm is optimized to maximize profits, and it works like last choice of idle master mentioned in the first post. I see totally no reason to implement the second option.\n. It's experimental so don't get shocked if it won't work like it should, this is the whole reason for doing a pre-release. I must gather feedback from people that it works as it should.\n. That's why I don't update hours played based on steam, but get them once and update according to my own algorithm.\n. It's an option and default behavior will always assume that we're in \"better\" situation and we're not restricted from card drops, unless I find out the way to reliably set it based on actual situation, then the option will get removed, as we'll be able to automate choice.\nUntil then though, and it's unlikely to happen that Volvo tells us if we can get drops before 2 hours or not, default option is that we can get them before 2 hours mark, but one can assume worse situation for one (or more) of his accounts by using proper switch.\n. 1) SteamKit doesn't provide me with option to detect who invited bot to what clan, not going to happen until I find out the way.\n2) Sounds too complex for now. Definitely on hold.\nAlso you should use other issue for that, this one is related to multi-games farm.\n. Note to self, everything looks good so far.\n\n. Remember that cards farming problems may actually not be caused by ASF, but by the steam directly. ASF has no outcome on card drops, I could just add some \"safety-check\" which would stop farming given game and restart the module if it hits e.g. 5 or 6 hours (I don't know if any game requires more than that).\n. @Pandiora https://github.com/JustArchi/ArchiSteamFarm/commit/3e34fabfaf0ea865e034c6734c5392ba4387a66a\nThis is the only thing I can do to prevent such situations.\n. In theory, yes, it's all possible, but ASF can also assume that after non-stop farming of 5 hours in solo mode just one game, it got farmed 100%, even if steam says otherwise (or doesn't say anything because it's down, cough cough)\n. I can't do anything with steam fuckups, I just suggest to add specific appIDs to the blacklist for affected steam accounts. It's not possible for me to blindly guess if something is farmed or not, especially if steam doesn't know it itself, cough cough.\n. Sure thing, which edition?\n. I'll set it 10 hours then.\n. In worst case, farming will resume on next reset / cd-key activation. No need to make it switchable.\n. And it's required for potential steam network crashes, so bot won't farm one game infinitely.\n. @Ryzhehvost\nAs @Haoose pointed, it'll skip to the next game, and assume that currently farming game is 100% farmed. It's nice to note that it's only temporary, so as I said, on next CardsFarmer module restart (e.g. triggered by steam disconnect, or cd-key activation), bot will recheck if assumption is proper, and if needed, farm the same ID further. It's a mechanism which tries to detect that cards don't drop for some reason (steam-related).\n@Sighery \nI also couldn't find any issues, so I assume we can mark complex algorithm stable for now.\n. Auto accept is different than a command to join.\n. After second look into this issue I decided that it's not only an issue without any nice solution, but also not the purpose of ASF since SteamMasterClanID exists.\nClosing as I'm not interested in that anymore.\n. \n. https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.2.1\nIn short, before I add it to the wiki:\nSwitch AcceptGifts to true. When that property is true, ASF will automatically accept (and redeem) all steam gifts that client is receiving. If bot account owns game already, it will be added to the bot's inventory.\nInitially I wanted to make use of only gifts that can be redeemed, but it's too much code for such simple purpose, not to mention that I do not expect people to send bot games that he has already (as you'd need to do that via e-mail, steam won't allow you to send such gift directly). So if bot owns the game already, it'll be added to his EQ, simple.\n. Nope, by a mistake - I was checking if config generator can edit new property and forgot to remove the config after tests are done (and I was too lazy to do it outside of out directory as well). Account credentials were random without any sense, so it's not like anybody could make use of that info.\nFixed, thanks for spotting!\n. Hardest part will be creating trade. Basically ASF must somehow fetch it's own EQ (can be done with API I guess), then I'll also need to reverse-engineer method responsible for creating a trade with given items.\nIt's not specifically hard, just time consuming to actually do the thing, and I'm quite busy + this issue is on wishlist. It will be done at some point, just not now.\n. Bot->Master trades are now ready, mostly thanks to @Ryzhehvost \nPlease feel free to test it in latest pre-release: https://github.com/JustArchi/ArchiSteamFarm/releases and don't forget to report bugs and provide feedback. Yes, \"it works\" comments are appreciated too.\n. I couldn't find any issue regarding Bot->Master trades myself, as well as I didn't receive any signals from other users as well.\nGood job @Ryzhehvost, you coded a really good feature :+1:.\n@truongphamx \nIf you have issue with ASF, open new issue. Do not \"hijack\" other issues.\n. Uh, this code needs a major refactoring to be efficient and clean, maybe later I fix it up.\n. Closing as requested.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/19\n. What was the reason for disconnecting? Bot should print it on the console.\n. Because currently in both EResult.Timeout and EResult.TryAnotherCM scenarios, bot doesn't shutdown, just stops and tries to reconnect.\n. Unable to login to Steam: InvalidPassword / InvalidPassword\nVolvo limits, are you using V0.7+?\n. I'll try to do something with it and release a test version today/tomorrow.\n. I added proper handling of your case in commit above, you can test the changes in latest pre-release: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/0.8.0.0-pre2 (it also has now default 180 seconds timeout for http requests)\nI need to find good delay between a retry, so if you could help me a little bit by finding out after how many minutes Valve turns off captcha, it'd greatly help the ASF. Right now it's random between 20-120 minutes.\nI think it would be enough to just make captcha \"pop up\" e.g. due to many failed logins on Steam website, then see after what time captcha disappears.\nLet me know how it works for you.\n. Thank you for your feedback, I'll implement one more misc time correction then and we consider this issue fixed, until you notice it again.\n. Exactly, this problem is actually trivial to solve.\n. As I said bot will resume farming that appID on next module restart.\nIt's more for games with broken hours reporting, temporary issue we discovered together with @Pandiora , when one game wouldn't drop cards neither update hours played. That was the main reason to implement a module that would skip a game for some time and move onto other ones, and then eventually try the faulty game again on next module restart.\n. Closing it until then, as there's no bug regarding this, and bot indeed does handle stuck games after 10 hours.\n. I don't want to include whole project like SB did, because it has many things which have no use for ASF.\nHowever, implementing automatic 2FA codes is definitely something I'd like to see, but I'll most likely implement it after some time.\nFor now I suggest to leave it as it is, 3-days trade hold doesn't matter that much unless you want to sell cards ASAP.\n. IIRC 2FA works very similar to SteamGuard, and once entered you no longer need to enter it on every startup. Yes, you need to enter 2FA codes for every trade, but for logging in it's just once.\n. Confirmed, 2FA is required on each login.\n. I already started working on it and first results are quite impressive, however from informations I gathered so far, only two situations are possible.\n- You'll keep mobile authenticator and need to enter codes\n- ASF will use it's own Mobile Authenticator module (currently work-in-progress) and automatically generate (and use) those codes for you.\nThere's absolutely no way to register second mobile authenticator, hence we can't have both mobile and ASF active for the same account.\nSo how I see it: You'll still need to keep 2FA for your main account, but it will be possible to turn on (and use) ASF 2FA for all alt accounts, as long as you have a mobile phone (SMS required)\nIt will take some more days, but eventually I think I'll get it working sooner or later.\n. @Ne3tCode \nGood find, this is definitely useful and should be implemented.\n. Implemented above suggestion into work-in-progress ASF 2FA implementation - https://github.com/JustArchi/ArchiSteamFarm/commit/29c4d95b36f2f4b29591850dc2dcdd3e284e3f35\n2FA code needs to be entered only once now.\nThanks @Ne3tCode\nIt doesn't solve my initial 2-situations problem above, but it solves a need to enter 2FA code on each login, which is nice too.\n. Alright guys, I'm more than happy with the results I got.\nThere are currently 2 ways of using ASF with 2FA enabled. As I initially stated above, you can:\n- Use 2FA through your mobile and enter codes as required\n- Let ASF add itself as mobile authenticator for your account, and handle all of that (EXPERIMENTAL)\nCase 1 is obvious and nothing is different, you'll need to provide ASF with 2FA code every time it's needed. One small improvement is the thing suggested by @Ne3tCode, as I added a small modification that stores login key on successfull login with 2FA, so it's no longer needed to enter on every startup (same as steam guard)\nCase 2 is far more complex and interesting. ASF is now able to register itself as Mobile Authenticator provider, and able to generate token for itself whenever it's needed (I call it ASF 2FA). The catch is that you can use only one mobile authenticator at given time, so to actually log in to that account you'll need to ask ASF for token. I added two commands for that, !2fa and !2fa <bot> which gives you temporary token generated right off ASF 2FA, to use e.g. when you want to log in as bot through browser or steam client. In addition to that, there is !2faoff and !2faoff <bot> which removes ASF 2FA and changes account back to steamguard e-mail protected only, which can be used in emergency situations or when you'll want to switch that account to case 1.\nCase 2 is enabled only if:\n- User has 2FA disabled, as if it's enabled we can't add second mobile authenticator\n- User specifies his willing to use ASF 2FA by setting UseAsfAsMobileAuthenticator to true in config file for given bot.\nI tested it and it works really well, in fact, case 2 is just PERFECT for all alt accounts, so they can trade and confirm trades without a need to hold items for 3 days, and if you need to access ASF 2FA to generate token for you, you can do so through steam chat.\nThe catch is that losing both bot.auth file with stored ASF 2FA details, as well as revocation code (printed on console in addition to storing it in file above) will literally lock you out of your account. Additionally, ASF 2FA still requires phone number linked to your account, this is handled by ASF if required.\nI'm going to release some pre3 quite soon, after I'm sure nobody gets locked because of my mistake. And perhaps implement automation for trades confirmation while I'm at it.\nI'm happy so far.\n. It's funny because it worked without. But yeah sure, I'll add it.\n. If you read my post carefully you'd notice that there is already a command to both generate temporary token, and deactivate ASF 2FA aswell. I'll write proper documentation before putting a pre-release.\nHow I see it:\n1) For your primary account, if you're using it in ASF, you keep \"normal\" 2FA. On first ASF startup you're asked for 2FA token, which you enter once. ASF then uses new LoginKey mechanism to store the pre-authenticated session and doesn't ask for 2FA token anymore. You still need to confirm all trades manually on your mobile.\n2) For all your alt accounts, you're turning on UseAsfAsMobileAuthenticator. After logging in to non-2FA protected account, ASF will link itself as mobile authenticator, which after short setup (linking your phone number and accepting through SMS) will result in 2FA-protected alt account by ASF. ASF will then be able to automatically generate 2FA tokens as needed, which includes both steam logins and trades, allowing you to get your steam cards without waiting for 3 days, and without doing anything in particular, same as it was before Escrow days. And if you need to access that account, you can either generate a temporary token for yourself through new !2fa command, or alternatively disable 2FA entirely by !2faoff. In emergency situation you can also disable 2FA through revocation code, which ASF prints on console (and includes in bot.auth file) the time you're linking it as mobile authenticator.\nYour original request in OP is Automatically generate 2FA Auth-Codes, and this is exactly what new ASF 2FA is doing.\nAs I said, there is no way for having 2 mobile authenticators for one account, therefore it's EITHER normal 2FA, or ASF 2FA for given account.\n. No, that's what new LoginKey is for. Do you need to enter 2FA each time you start steam client? No, because of that mechanism, now implemented into ASF, pointed out thanks to @Ne3tCode \n. Now read my post above carefully if you want to fully understand how it works, unless you prefer to read my non-clean-yet source code instead :+1: \n. It's in 2FA branch, as I didn't finish it yet, only some tests and documentation + example.xml left. I'll merge it after I'm done, which will result in release of 0.9 pre3 too.\n. However, as I stated, I think it's really really stable and well made. You can't basically get locked out, as ASF saves everything regarding it's 2FA in new special BotName.auth file, and in addition to that prints on console revocation code for you, which can be used in emergency situation when you need to deactivate mobile authenticator, and can't use more convenient !2faoff.\nBasically you'd need to both remove BotName.auth file, and not write down revocation code, to get locked out.\nIt's win-win for alt accounts, and for your primary one I still suggest traditional way. Not only because you're using it as an user, but also for security. ASF 2FA is a hack which totally kills whole concept behind escrow, and was made just to handle 3-days holds.\n. Good feature request, I'll add that soon.\nIn the meantime I wrote a wiki page about everything consdering ASF 2FA: https://github.com/JustArchi/ArchiSteamFarm/wiki/Escrow\n. I've just released pre3 with ASF 2FA feature included - https://github.com/JustArchi/ArchiSteamFarm/releases/tag/0.9.0.0-pre3\nPlease test this release and give feedback, I couldn't find anything wrong regarding the current implementation, but I want to be sure that nobody gets problems with it.\nASF is smartly coded, so even if something goes wrong, you have BotName.auth file saved with revocation code and everything you need to disable 2FA at any time. I'd say it's impossible to get locked out for anybody who has at least a little of brain, because you'd literally need to delete file, not write down revocation code and unlink your phone number to get locked out.\n. Not possible. That file is too complex to be manually generated.\n. It's nice to note that I released pre4 which fixes some issues regarding adding phone number.\n. V0.9 was released which includes everything made so far, and some bugfixes/improvements compared to pre-releases. I consider this issue closed, if you spot any bug or any suggestion regarding it, please open new one.\n. No, I tested it on the same PC as you can see in the screenshot, that's what made me curious.\n. I'd appreciate if you did, because I want to make sure it works for everybody before I jump onto conclusions. Personally I think it has to do something with recent escrow implemented by Valve, perhaps they needed to change some things to make mobile steam clients work at the same time (same IP), and that affected ASF as well.\n. You don't need new (pre-release) version, V0.8 should work too, but if it doesn't, try V0.9 pre1.\n. That's strange, perhaps you can try V0.9 then. For now everybody confirmed my theory that it works for them.\n. https://github.com/JustArchi/ArchiSteamFarm/releases\nYou don't need to update XML files anymore (since some time already), ASF uses defaults for missing fields.\n. Strange, I have no idea why it doesn't work properly for you then.\n. I released a pre-release 2, and encouraged more users to test it.\nIt doesn't have any crucial fixes yet, because I don't know the reason behind it, but if more users start getting similar issues, perhaps we can use common sense and find out the potential reason.\n. I have in-home streaming turned off, so it's not that which is causing problems for people around here.\n@Sighery nailed it. This is exactly what we're trying to do here, as it magically works for some people out of the box (e.g. me), and some people are still receiving LogonSessionReplaced error.\nIf we could find the exact reason behind that, we could also find the solution and make ASF working for all accounts and for all users, instead of it's current state of \"try, perhaps you're lucky and it works, if not, ASF was not created to work with primary accounts anyway\".\n. This could be actually the answer we're looking for.\nIt still leaves me with question though. Why it works for me, and not for others?\nI'll give it a shot when I find some time. Thank you once again @Ne3tCode \n. https://github.com/SteamRE/SteamKit/pull/217\nLet's wait now.\n. @Ne3tCode\nYou nailed it, setting LoginID to custom one fixed the problem for one of my friends.\nI released pre4 which should work correctly for primary accounts now: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/0.9.0.0-pre4\n. V0.9 was released which includes everything made so far, and some bugfixes/improvements compared to pre-releases. I consider this issue closed, if you spot any bug or any suggestion regarding it, please open new one.\n. Ask steam.\n. InvalidPassword can be result of Steam throttling connections, requirement of entering a captcha, or caused for any other reason unknown to me.\nHence, ASF just tries to reconnect after longer while.\n. Hm, I think I can actually make LoginKey optional then, but I never thought that it will cause any troubles.\n. Or even better, I can actually just remove LoginKey in this situation automatically.\n. Eh, just steam being steam, removing login key is not a solution, making it optional either. We should actually find out the real reason instead of guessing how to fix steam fuckups.\n. Problem is detecting when steam client is being steam client, and when loginkey is expired/invalid.\nI think I'll just assume any invalid password is expired login key, and force removal of login key as I initially wanted.\n. ASF doesn't add phone number unless Steam explicitly tells it that it's required. It's intended.\nI don't know why revocation code doesn't pop up though, that doesn't make any sense. I'm not able to reproduce that, and I'm not sure how it can even work because in order to turn off 2FA you need that code.\n. I can always make mobile phone mandatory when adding 2FA, but revocation code should pop up regardless.\nLet me know if you find out more, it shouldn't be a problem.\n. I'm not sure if there is anything I can do. I analyzed the code and couldn't find anything wrong.\nIf you don't have phone number yet, you're supposed to enter it, if you do have one entered already, no need to do anything.\nThen SMS code is sent on the phone number linked above, either new one you entered in ASF, or old one already linked.\nThere is only one misc thing I can do to handle one more steam error, but that won't solve the issue anyway.\n. Trade confirmations are yet to be tested.\nCode is already here, but untested. Perhaps I need to add some delay between accepting the trade and the confirmation.\n. Can you check if restarting ASF makes confirmation accepted?\nActually it's enough to just !stop <BOT> and !start <BOT>. ASF should parse trades and accept all pending confirmations after logging in.\nEDIT: Or no, wait, it's actually not in ASF, but in ArchiBoT.\n. Initial code works, I sent myself a normal trade, restarted ASF, and ASF accepted all confirmations after logging in. Now I'll only check if delay is required.\n. I stumbled upon the same error before, and re-adding 2FA solved it for me.\nI wonder what is wrong.\n. \nWorks properly.\n. Found out the bug.\n. I still need to think about that, because implementing such command may cause non-optimal situation because of used cards algorithm.\n. Nope, not something that I want to consider right now because of the need for altering card farming algorithms.\n. Fixed in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/0.9.1.0\n. But if you login again it should work.\n. I can't see a reason for that signal to stop farming, as well as I can't think of any possible situation judging from my own code.\nYou didn't mention what changes you did, so I'm not going to look into that issue unless I'll be able to reproduce it.\nThere is only one possible reason for that to happen, very unlikely one, and I'll fix it in a moment.\n. There is no logical explanation as why that should happen, because nickname is ONLY set, if it's non-null: https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/Bot.cs#L759\nMoreover, if that would be ASF request, it would either not succeed, or set your nickname accordingly, and not make it unassigned.\nEven if such situation happened, although I can't reproduce it with neither main nor my alts, it couldn't be caused by ASF, because default SteamNickname is \"null\" and you must define it to use other value.\nConclusion: Steam fuckup, nothing to fix. I see it very often as temporary problem and everything goes back to normal after some time.\n. Unless you can provide steps to reproduce issue, I doubt there is anything to be done.\n. There is no logical explanation why something like that would happen, as there is no method to change your nickname to null or make it unassigned, and even if there is one, ASF simply doesn't use it. Nickname is set ONCE after logging in, and only if SteamNickname is not \"null\". If that would be ASF problem, it would affect all accounts, including mine, and not some random ones for unknown reasons.\n. Possible. Either way, not ASF issue.\n. Closing it until somebody provides some steps to reproduce, or any other clue that would make it possible for fix.\n. > I see one of my bots try to reconnect to Steam and fail login many time.\nLogs.\n. On linux, just redirect stdout. On windows, I don't think so.\nIf there is anything weird happening, I need logs to guess what went wrong. If there are no logs, and I can't reproduce it, it falls under \"won't fix\".\nI'll add independent logging I guess.\n. What I don't like is this:\n20.12.2015 23:41:11 [*] INFO: OnConnected() <botname2> Connected to Steam!\n20.12.2015 23:41:12 [*] INFO: StopFarming() <botname2> Farming stopped!\n20.12.2015 23:41:12 [!] WARNING: OnDisconnected() <botname2> Disconnected from Steam, reconnecting...\n20.12.2015 23:41:12 [*] INFO: OnLoggedOn() <botname2> Successfully logged on!\nTo me it looks like for some reason 2 bots are running and trying to fight with each other.\n. Thing is I have no idea how it's even possible for such scenario to happen, because the only way new bot instance can be created is through ResponseStart() and main Program entry point, and according to @Ryzhehvost it happened out of sudden, without stopping/starting bots, right after start of the app, so it's not possible that there was more than one instance of that bot.\n. 20.12.2015 23:41:07 [*] INFO: OnConnected() <botname2> Connected to Steam!\n20.12.2015 23:41:08 [*] INFO: OnLoggedOn() <botname2> Successfully logged on!\n20.12.2015 23:41:08 [*] INFO: Init() <botname2> Logging in to ISteamUserAuth...\n20.12.2015 23:41:10 [*] INFO: Init() <botname2> Success!\n20.12.2015 23:41:10 [*] INFO: StartFarming() <botname2> Checking possibility to farm...\n20.12.2015 23:41:11 [*] INFO: StopFarming() <botname2> Sending signal to stop farming\n20.12.2015 23:41:11 [*] INFO: StopFarming() <botname2> Waiting for reaction...\n20.12.2015 23:41:11 [*] INFO: OnConnected() <botname2> Connected to Steam!\nIt doesn't make ANY sense to me, why the hell would second connected response happen, something had to call SteamClient.Disconnect() for that previously, and why the hell something called StopFarming() at the same time.\n. @Ne3tCode I doubt it's SK2 issue, I'm more likely to believe that something is really fucked up here regarding ASF flow, some request out of sudden enters in between the call from one and another, and causes a fuckup because of that. I think I'll just add more debug logs to try to understand what exactly is happening.\n. I pushed my extra logging to github, as well as compiled ASF as usual: https://dl.dropboxusercontent.com/u/23869279/Temp/ASF.exe\nI'd be grateful if you didn't do any modifications yourself, so we can operate on the same result with same logic.\nIf that won't explain to me what the fuck is going on, I'll take it easy and blame valve.\n. I know, otherwise I'd find it out myself. I'm trying to guess what could be wrong and it's either Valve that is sending a misleading callback through SK2, or some very rare race condition in ASF flow.\n. I think I was able to reproduce the problem, and indeed as I guessed it is caused by 2 bots running, but not from one ASF but several.\nEither Valve doesn't disconnect old session in time, or you're starting 2 ASF processes.\nI have an idea how to fix it.\n. Yeah, that even further makes me think that I caught the real reason for this incident.\nFor now I think it's because Valve is lazy when it comes to disconnecting clients, and ASF 1.0 uses unique ID per ASF process, so basically every ASF session is different.\nI guess the real reason isn't exactly caused by ASF, but because Valve doesn't disconnect clients immediately, so we actually caused a situation when bot from old ASF closed process still somehow appears \"online\" with ID let's say 111, and then you start another ASF process with new ID 222 connecting to the same bot, Valve's Network is going crazy and sends callbacks that should never happen, adressed to wrong client.\nIf my theory is right, this is now fixed because ASF uses always the same LoginID from https://github.com/JustArchi/ArchiSteamFarm/commit/f484b50ab3632e9934f49de8da2aacb20da0fad6 onwards.\nFeel free to resurrect this issue if it happens in 1.1+.\n. https://github.com/JustArchi/ArchiSteamFarm/releases/tag/1.1.0.0-pre1\n. Pull request merged, awaiting SK2 1.7 release now.\n. You can't \"steal\" ASF, because it's licensed under Apache2 License - https://github.com/JustArchi/ArchiSteamFarm/blob/master/LICENSE-2.0.txt.\n```\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n  (a) You must give any other recipients of the Work or\n      Derivative Works a copy of this License; and\n\n  (b) You must cause any modified files to carry prominent notices\n      stating that You changed the files; and\n\n  (c) You must retain, in the Source form of any Derivative Works\n      that You distribute, all copyright, patent, trademark, and\n      attribution notices from the Source form of the Work,\n      excluding those notices that do not pertain to any part of\n      the Derivative Works\n\n```\nMorever, you do not have a proof that he in fact uses ASF as a part of his infrastructure. You can however ask the user if he in fact uses part of ASF, and if yes, he should state it clearly along with my copyright notice on his website, as license requires.\n. Indeed it is, but it's not my intention to prohibit commercial or closed-source use of ASF.\nMoreover, if somebody is stupid enough to pay 8$ monthly for farming one account out of cards worth 0.10$ each, instead of using ASF, it's his own choice.\n. But it's nice to note that if he does that, then he violates SK2 license, because he must disclose source as ASF is statically linked with ILMerge, along with including original work based on.\n. I'm more than sure that if he doesn't use ASF, he most certainly uses SK2, licensed under LGPL, therefore I suggest to ask the developer directly about that.\nI see no reason to sue him for anything ASF-based, because I don't have a proof that he uses ASF, as @Ryzhehvost stated above - it would actually need some work to make ASF compatible with web interface, and I doubt that he's doing that.\nAnd it's not my intention to restrict other developers from using/changing ASF, in both open-source and closed-source ways.\n. Yep, and that registration date is actually enough to say that the guy started working on it before I wrote first line of ASF, so most likely he doesn't use ASF, or even part of it. No need to rant about it here then.\n(Although he still violates SK2 license, if he uses SK2)\n. Merging works perfectly on both Windows and Linux now.\n\n. Forgot that I decided to accept response in KeyValue format and not JSON one.\n. It won't get messages for sure, and if I decide to implement that feature it will be config-based switch used mostly for primary accounts, so people won't see me online when I'm sleeping and ASF is farming.\nAnd thank you.\n. If SK2 receives any packet telling it that somebody wrote a message while being offline, I can do that.\nBut priority is to make farming work.\n. :+1: \n. @Ne3tCode \n20.12.2015 18:55:13 [#] DEBUG: HandleMsg() <DEBUG> ClientFSOfflineMessageNotification\nSK2 indeed sends a notification, but bot is not able to receive the actual messages, and I'm not sure if I want to add a special hack to make it do (such as fetching them through steam web)\nFor now farming offline = offline for good.\n. I seriously need to ditch inside all valve's requests to learn about all of them.\nThanks :+1: \n. Certainly.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/35\n. ASF should still have independent logging so we can catch issues, at least for last run. I agree it's plain easy on linux, but I'm not even sure myself how to do that on windows before checking google.\n. Just leave API key as null if you do not wish to use trading module.\n. ASF automatically accepts trades whenever it sees new one, what's the problem?\n. As long as it requires. Bot should accept the trade as soon as it sees them, but steam doesn't send notification right away. And there is nothing to be fixed here.\n. ASF supports Master->Bot trades only.\n. Read wiki.\n. Also fixed a misc derp with pre1, pre2 should be fine for testing.\n. You can always compile yourself and add your extra bits. I do not release closed-source pre-releases. The objective is to find root cause.\n. If KnSYS reproduced the issue on \"vanilla\" ASF, most likely your modifications don't have any negative impact.\nI mean, 99% of \"hard to explain\" bugs are directly caused by volvo fuckups, the thing is to add workaround for them. This is how whole SteamKit2 works, and all projects based on that too.\n. Also I still have your pull request in mind, I didn't forget about that. Maybe I'll add those bits even to 1.2, but ASF reconnect loop issue is definitely with highest priority, it literally fucks up things.\n. It would be much easier if I could reproduce that issue myself, or at least find any logical explanation why it happens instead of assuming things out of the blue.\nHowever, in this case most likely I'd fix that issue around V0.2 release, and not 1.2.\nTherefore, the only thing I can do is provide everybody with 1.2 pre2 and suggest to try hard to reproduce the bug, because I'm literally blindly trying to fix thing I don't even know about.\n. Extra logging won't help. I need confirmation if my assumption is correct, nothing else.\n. Please test pre3 instead - https://github.com/JustArchi/ArchiSteamFarm/releases/tag/1.2.0.0-pre3\nI rewrote how cards farming module works now, which should potentially solve this and other issues.\nBasically the most important fact is that if ASF issues SteamClient.Disconnect(), it doesn't try to reconnect in the callback, but if Steam issued Disconnect, it will try.\n. It was removed for two reasons\n- It directly affected cards farming module, and I don't want to do that anymore to make it more reliable\n- It is not necessary anymore, as ASF now automatically resumes farming if it's finished with no drops\n. In other words, I see no use of that command anymore, ASF handles itself all possible problems, including resume of farming after some time if you e.g. activate gift, as well as handling steam network disconnects and other stuff. Having obsolete commands which serve no purpose is pointless.\n. Someone who does can issue !stop and !start if he is in so much hurry that he can't wait 15 minutes.\nBe realistic. If it was 1-day check I'd understand, but not 15 minutes.\n. Also when https://github.com/JustArchi/ArchiSteamFarm/issues/18 is done, handling gifts will restart farming module as well.\n. Leaving it open for a few more days, if anybody reproduces with 1.2.1 let me know.\n. I'm more and more convinced that the real issue was PlayGames request, which because of some Volvo fuckup with certain CM could cause Disconnect in some rare scenario. Since removing it from 1.2+ onwards I didn't hear any complain yet.\nWe can only hope for the best and keep an eye on that.\n. No, this is not that issue.\n. Fingers crossed?\n. Around a week has passed and nobody reported similar issues, I couldn't stumble upon them as well.\nI consider this issue as fixed, thanks for testing.\n. #46 + most likely fixed already in 1.2.\n. You didn't include bots name, so your log is pointless, also it's most likely Valve throttling connections, not a bug, unless one bot doesn't follow mentioned 25 minutes and tries to reconnect regardless.\n. Apparently steam sends extra OnDisconnected callback in addition to OnLoggedOn, that needs to be handled in special way.\n. Reproduced, fix pending.\n. It will eventually connect because Valve will eventually stop throttling, but it doesn't justify ASF trying to connect without waiting.\nFixed and released in 1.2.1\n. The fix doesn't matter for ASF reconneting loop issue which is #46, as it's totally other issue (actually 1.2 regression), but yeah always better to test on latest release (or pre-release), so I'd suggest switching.\n. This is not going to be mandatory. Auto updates is root of all evil. Although I still believe than using up-to-date software should be a \"requirement\", I don't want to enforce that.\n. Hooray for implementing the root of all evil, aka auto updates!\nAs always, I'd be happy for receiving feedback regarding new feature.\nPlease download: https://github.com/JustArchi/ArchiSteamFarm/releases/download/2.0.0.1/ASF.zip\nSwitch UpdateChannel in ASF.json from 1 to 2 and then launch ASF.exe, it should notice new version (2.0.0.2) and proceed with update. After update is finished, app should restart itself.\nIt works in my case, but for sure will not work on Mono (at least yet), it'd be nice to check if it works at least on all Windowses though.\nThanks!\n. Okay, I'm actually shocked that it works out of the box on Mono as well.\n\nSo happy!\n. The screen will terminate because there's no way to issue actual restart within the process itself. What ASF is doing is putting new binary in the place of the old one, then starting new process, and exiting current one (with exit code of 0).\nInstead of running ASF in screen, you should run it in the background &, ASF logs everything what you see on the console to log.txt, including unhandled exceptions, so unless you're trying to record native Mono stacktraces and segfaults, you won't see anything interesting there.\n. It's easy. ASF uses proper error code, and it should tell you when you can restart it, and when you should not. Error code of 0 means that ASF exited by itself, and it should not be restarted, while error code of > 0 means that ASF exited due to an error.\nA script should look like this:\nwhile [[ -f \"ASF.exe\" ]]; do\n  if mono \"ASF.exe\"; then\n    break\n  fi\ndone\nOf course can be edited further to fill your needs.\n. Deprecated by https://github.com/JustArchi/ArchiSteamFarm/issues/147\n. Checking 1 bot sounds better than checking 50 bots only to eventually tell you that all bots already have the game. And we can check if they own it already, it just requires some effort.\n. Done in https://github.com/JustArchi/ArchiSteamFarm/commit/20ea58981d38e52f45e3c5ff4d24aa1305f0b763\n. Bot name should have no spaces.\n. Setting API key, SteamMasterID and other bot-like properties for master is pointless because master is not supposed to receive keys or accept trades, because he's master himself. So it's totally fine to leave those variables with their default values.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/19\n. Every account should have unique API key. It's used for trading functionality.\nCards are locked and you can't trade them on limited accounts anyway.\n. Not going to happen because ASF is not supposed to take any arguments. It's long-running program, like daemon, and arguments don't make any sense.\n. If anything, we could work on something like named pipe to allow inter-process comunnication, but that is also big wishlist.\n. In any case, closing this issue because command line options won't happen.\n. Next time check https://github.com/JustArchi/ArchiSteamFarm/wiki prior to making an issue please.\n. It's done now: https://github.com/JustArchi/ArchiSteamFarm/issues/62\n. https://github.com/JustArchi/ArchiSteamFarm/issues/18\n. I see that botname1 is trying to Stop() all the time, which means that SteamClient.IsConnected and it doesn't react in any way to our SteamClient.Disconnect() call, because otherwise OnDisconnected() would happnen.\nYou know what it is - volvo fuckup.\n. The only thing which comes to my mind for now is adding a way to detect such \"fucked up\" steam client and just create new one, but I feel really sad doing that, ASF code is getting more and more messy because of a need to handle all of those volvo fuckups.\n. Good to hear that, thanks! :+1: \n. Possible thanks to https://github.com/SteamRE/SteamKit/commit/8c43986c6622bd98f6a8b56351f42d71a3cdbb30 merged in latest SK2.\n. ^\n. This looks quite good at first look.\n. We must reuse the same code as long as it's possible. Having Set2FAOff() and Response2FAOff() is wrong. I'll most likely need to rewrite your idea so it can be more portable.\n. If you want to try to fix this pull request, I suggest making one method for each call - e.g. one method that tries to disable 2FA and returns a response (such as string). Then in WCF we can just print that response back, and in standard commands usage on chat we can issue SendMessage().\nYou can push commits directly to your wcf branch, no need to open new pull requests after doing so.\nI'll try to find a moment to fix this.\n. There's no need for both of us to be working on the same thing. Let me try to rewrite what you suggest, and then we can keep testing and fixing remaining bugs. I should have something later today.\n. https://github.com/JustArchi/ArchiSteamFarm/commit/1a96a975f99e912f15b076ed00f86f2681b09054\n2/2 later today.\n. Makes sense. I'll add it later.\n. https://github.com/JustArchi/ArchiSteamFarm/commit/47fdff299336ba34454439443542c49100f2a45a\n\nNow it's just a matter of adapting responses from object-based to static-based.\n. Done, I think WCF should work correctly now.\nI released pre2 and opened new issue regarding tests of new WCF: https://github.com/JustArchi/ArchiSteamFarm/issues/62\nThank you for idea and some code parts which I could reuse.\n. Question is what that config would offer. For now there is nothing that would globally affect how ASF works.\n. Master clanID and steamID must remain bot-based because you do not always run all bots on the same owner.\nListening IP and port can be considered.\nRegarding your command: Not all commands work yet.\n. WCF should work with commands such as exit as well now.\nThere are still some things to improve, but overall WCF should work quite well now.\n. ASF is a console application, which means there is no option from inside the code to minimize it to tray, unless I made it a windows (form) application.\nSo even if I wanted, this suggestion is not possible. But there are solutions for this, some mentioned above.\n. I guess we can change it so !status issues ResponseStatus() on each bot, and each bot responses with what it's currently doing.\n. It's not like I do not want to merge your pull request, I'm grateful for all contributions, but I must make sure that code remains top-quality, so I it won't hurt me later when I implement new things.\nAs I said, I am looking at them, and implementing when I have some time, like I did recently with WCF.\nYou can always split your pull request to smaller independent pull requests, so I can tell you exactly what I think of them, and what to fix.\n. Dividing them makes it easier for both you and me to cover everything, also increases chances that I can issue a merge without an inner feeling to rewrite the pull request. As I said, I deeply appreciate all contributions, but I must also make sure that code remains top quality, at least to me at the time of writing.\nWhich is, even if pull request is not 100% perfect, I'll consider merging it and correcting it, if it's relatively small.\n. Nobody was born with C# knowledge, it's a good way to improve yourself as well, just by analyzing commits made by other people.\n. I can only suggest installing/updating to latest .NET framework. I'm not able to guess what might be wrong considering I can't reproduce it.\nhttp://go.microsoft.com/fwlink/?LinkId=671729\n. Hm, strange, at least I reproduced this problem. I'm not yet sure if it's Volvo fuckup like usual, or they changed something that broke it.\n. ArchiBoT can't connect either, Valve broke something for sure.\n. It's not a problem on your end, but it's Volvo like usual.\n07.01.2016 05:23:22 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:23:22 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:23:27 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:23:27 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:23:32 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:23:32 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:23:38 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:23:38 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:23:43 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:23:43 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:23:48 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:23:48 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:23:53 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:23:53 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:23:58 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:23:58 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:03 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:24:03 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:08 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:24:08 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:13 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:24:13 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:18 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:24:18 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:23 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:24:23 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:28 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:24:28 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:33 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:24:33 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:38 [*] INFO: OnDisconnected() <1> Disconnected from Steam!\n07.01.2016 05:24:38 [*] INFO: OnDisconnected() <1> Reconnecting...\n07.01.2016 05:24:38 [*] INFO: OnConnected() <1> Connected to Steam!\n07.01.2016 05:24:39 [*] INFO: OnLoggedOn() <1> Successfully logged on!\n07.01.2016 05:24:39 [*] INFO: Init() <1> Logging in to ISteamUserAuth...\n07.01.2016 05:24:41 [*] INFO: Init() <1> Success!\nBot connected after many failed attempts, I'd suggest just to wait patiently. If it's intended, SK2 guys should release a new version sooner or later and ASF will follow with an update fixing that issue. If it's temporary and accidental, Valve should fix it sooner or later.\nNothing to be done from my side.\nAnd it's not ASF-specific issue, everything that is based on SK2 gets similar problems - https://www.reddit.com/r/SteamBot/comments/3zsht8/steambots_taking_forever_to_log_in/\nI'm leaving issue open, so other people can see.\n. This should be resolved sooner or later, you just have a real bad luck that it happened to you when you configured ASF for the first time :cry:\n. I added a workaround in V1.3, it should be fixed now. Thanks for report.\n. This has absolutely NOTHING to do with the issue that is 2 years old. Moreover, ASF databases have nothing to do with you being capable of connecting to Steam servers, because login keys are not even used before establishing the connection.. There's no need for that, https://github.com/JustArchi/ArchiSteamFarm/commit/533058aa3fc4c55e6b894eb3a5e3ce41571dc9a5 is enough.\n. This has several drawbacks for now.\n- User may not want multi key redeeming behaviour by default when sending multiple keys.\n- This is non-steam-friendly because it always results in blindly trying to activate a key that might be already activated, instead - we should try to activate on bot 1, wait for response, if already owned -> proceed to second bot etc.\n- Similar to above, if bot returns e.g. InvalidKey response, there's no reason to keep trying to activate that key on every other bot as well.\nIn short:\nDo not use ResponseRedeem() as your main mechanism, instead, for every key, use await curbot.ArchiHandler.RedeemKey(), wait for result, and based on result decide whether mechanism should try to activate on next bot (AlreadyOwned, OnCooldown results), or perhaps it's pointless to do so (OK, InvalidKey, DuplicatedKey).\nAlso if you have any pending message to user, consider firing it instantly after being constructed, as redeeming key takes a while and we want to update user on progress as soon as possible (when we have something), instead of when task is done.\n. > Why would user send multiple keys then?\nBecause he might want to add multiple keys to one bot, check which games he owns already, and keep unused keys for later.\n\nAs well, as redeeming a single key now. As I said, I know the ways of improvement, but this does not means this implementation is bad.\n\nIt's not bad, it just could be done better, and I prefer to accept the code that is ready and complete, there's no need to hurry and accept half-ready implementations. Nobody is standing behind you forcing you to push code as soon as possible.\n\nWell, this have sense, but I'm still unsure this is better. Getting many messages in steam instead of just one can be annoying\n\nAgreed, no need to do that one.\n. Take a look what I meant: https://github.com/JustArchi/ArchiSteamFarm/commit/20ea58981d38e52f45e3c5ff4d24aa1305f0b763\nThis way we at least try to limit spamming Steam network, and in future it can be enhanced by a check if bot owns particular game before trying to issue RedeemKey().\n. What if somebody names his bot all?\nTry to avoid magical strings and magical numbers, instead, I'd suggest just to add command !statusall that would achieve the same.\n. A command that is supposed to accept botname, and accepts magical strings meaning something else is even less user-friendly, especially when somebody names his bot such as all, and he wants to print status of just that one bot.\n. - Clean up ResponseStatus() to remove non-required-anymore additions\n- In ResponseStatusAll() it would be better to call ResponseStatus() on each bot, to avoid repeating the same code twice.\nApart of that looks good.\n. Apart from above, it's OK.\n. Looks good now, do you want to add anything else to this pull request? Did you test it?\n. Consider taking a look at my 2 misc fixes if you want to.\nhttps://github.com/JustArchi/ArchiSteamFarm/commit/13722ca8f889d7ce67e049c41740e5eaaf0baa3d\nhttps://github.com/JustArchi/ArchiSteamFarm/commit/f8c1582aeb0389fc1c13380f1ebaf75f5692acbe\n\nIt would make it slower and less readable. Do you really want it?\n\nAs you can see, it's both more readable and as fast as possible. Thanks to that, code remains clear and nice.\n. Maybe the solution would be to enforce IsValidCdKey() in case of normal message, and skip it when user is sure with !redeem command?\n. I want to avoid spamming steam network with key activation requests when user doesn't fully understand how ASF works and is putting messages that are not cd-keys such as \"hello\" \"help\" \"asdasd\" etc.\nAlso, as I said, the variety of keys is so big that I feel it pointless to add them all to the checker. They're also so rare that user trying to activate them would be able to just issue !redeem instead.\n. It's not possible to send multiple keys with redeem, and I don't want to do that yet as it'd potentially cause problems with telling which part is the key, and which is the botname.\nI think I'll just fallback to more simple mechanism that checks if key contains -.\n. Also from what I see all keys apart from Prey one contains at least 2 dashes, so it would be quite reliable.\n. Yeah, that is the best solution for now :+1: \n. And that's what !redeem is for.\n. Next time consider reading wiki prior to creating issue.\n. Apart from above, it looks OK.\nIf we're sending JSON in POST, we should have a new class with all required fields, and serialize our object to pure string in order to send it through WebBrowser.UrlPost(). Specifying structure in the code dramatically reduces readability, not to mention that I can't even see clearly what properties we actually have.\nCatch the JSON we're sending, put it in http://json2csharp.com/, and if the JSON is good enough, it'll help you generate the class.\n. I just like to have quality code in my projects :+1: \nI'll merge it when I find some time, along with some tests and misc style fixes, thanks!\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Mono\n. mono --version ?\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Mono\n\nAll hard-to-explain issues without obvious cause are automatically ignored, if your Mono version is not latest stable one.\nIt's your responsiblity to ensure that ASF is run in bugless environment, and not mine to workaround all possible Mono issues, in all possible versions, on all possible variants. Latest stable ASF is always tested on up-to-date stable Mono version, and always includes all crucial code changes that are required for working properly on Mono (if needed).\n. And it's well explained how to install latest Mono version, too.\n. Log or didn't happen.\n. Then you screwed up something with your Mono installation, and I don't know what exactly. ASF expects mono to be usable and in latest stable version, if you can't provide it, you can't run ASF.\n. I don't know what OS you have and what you're trying to do, you should know that. Without usable Mono you're not going to run ASF. Mono is supported on ARM architecture, also in latest stable release.\n. Raspberry PI (1) requires some hacks because it's not fully compatible with armhf architecture supported by Mono in the binaries I provided in Wiki. Raspberry PI2 has full support and can use linked packages. Custom OS won't help, Raspbian is your best bet.\n\nHowever, there should be usable Mono for you in testing branch: https://packages.debian.org/search?keywords=mono-complete\nWhat I suggest to do is the following:\n- Install latest Raspbian\n- Switch to testing (nano /etc/apt/sources.list, replace all wheezy and jessie with testing)\n- apt-get update && apt-get dist-upgrade && apt-get autoremove --purge\n- reboot\n- If all of above works, apt-get install mono-complete\nWith a bit of luck, you should have usable Mono 4.2 on your OS.\n. Keep in mind that above will switch you to testing branch, which may not be as stable as stable one, currently \"jessie\". It's possible to install only mono-complete (with dependencies) from testing branch instead, but all of that goes far ahead of ASF support I provide here, so I'd kindly suggest google if you want to learn how to do that.\nIn short, you should have mono --version reporting version 4.2+. I think the solution above would work, but in the end I don't have raspberry pi 1, so I can't confirm my theory.\n. Yep, obviously ASF will also work on other Mono versions and not only one, but only latest one guarantees bugless experience (and only on latest one I'm testing ASF). In other words, you can use any version you want, just be prepared for eventual issues. The more recent version you have, the less issues you will encounter. Anything 3.12+ should work more or less flawlessly (for now), but that can change in future, for instance if I decide that I want to build ASF against .NET 4.6.\n. Glad to hear it.\n. You can't reproduce it because it's Mono-specific issue covered in FAQ @Ryzhehvost linked you above. If you followed my tips you'd never encounter such problem.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Performance\n\nThe primary objective of ASF is to farm as effectively as possible, based on two types of data it can operate on - small set of user-provided data that is impossible for ASF to guess/check on it's own, and larger set of data which can be automatically checked by ASF.\nASF does not allow you to choose the games that should be farmed, neither allows you to change cards farming algorithm. ASF knows better than you what it should do and what decisions it should make in order to farm as fast as possible.\n\nI'm not sure if I want to see option like this in ASF.\n. I'm more likely to accept the command such as !play XXXXX which would stop farming and play specific appID until user tells it to stop rather than something like above altering cards farming algorithms.\nIt's not \"programmer knows better\", it's the fact that you don't use car for cooking eggs on it. ASF has quite clear objective/purpose, and I don't want to put everything and nothing in it, especially if it has negative outcome on already existing things. There's a strong difference between enhancements that make ASF better (such as !loot) and between something that potentially can cause issues when user doesn't know how specific thing works.\nFor instance, in current form there's no way to remove game added to blacklist from current session and this is not acceptable. I'd stick to !play XXXXX idea I posted above personally, as everything else is either non-friendly, or requires massive amount of code and logic to work.\n. Assuming you want to go from point X to point Y, and car has all required information to make all decisions regarding selection of optimal way - yes, car knows better than you how to get to given point in most optimal way, and shouldn't allow you to manually decide whether to go through point Z or A.\nBut as I said, I can find practical usage of suggested feature, I just can't find any practical usage of this pull request in it's current form, because in order to farm game X, you want to farm game X, not skip games Y, Z, A, B, C and D from farming.\nI'm more willing to accept command like !playgame XXXXX which would stop automatic cards farming module, and switch into manual control of game that is being farmed, which doesn't have any side effects apart from you taking responsibility for the currently farmed game.\nhttps://github.com/JustArchi/ArchiSteamFarm/issues/78\n@rebel-000 \nI'd suggest to send new pull request following above idea, if you don't agree with it, please suggest better solution, so we can discuss it together. The major drawback of solution in this pull request is the fact that we need to execute the command multiple times, and that we can't remove games when they're added to blacklist without restart of ASF, which is not acceptable.\nI'm going to implement suggestion above sooner or later anyway, so if you don't feel like sending another pull request, you can just wait for it to happen :+1: .\n. It leads to too many activation attempts because you decided to send unfinished pull request, which doesn't contain suggested by me mechanism that would tell if given bot already owns the game, or not.\nYour previous pull request did not work regarding this either, moreover, it actually caused sending all bots given key, which would lead to too many activation attemps issue even faster than current (better) implementation. I can't see how it was better than current implementation, did you even check that code yourself?\nI have no interest regarding this issue at the moment, so I'm putting it on hold. If you want, you can suggest a pull request that would improve the situation, if not, you can wait till I find enough motivation to do that myself, and I have more important things to do at the moment.\nBTW, nobody here is paid to do anything, if you want a feature - you can either ask for it, or implement yourself. I'm always happy to accept all pull requests that make sense, and improve the program - if you don't agree with my opinion, you can always start your own fork with whatever features you find appropriate, as long as you won't break the license. If I don't consider something proper, you can either follow my suggestion how to make it so (I always state that), convince me that you're right (because nobody is perfect), or use your own implementation. But if you want to contribute to ASF project located here, you're (fortunately or not) supposed to follow some ASF guidelines set by me, which I don't consider bad, as thanks to them you're not digging in one giant pile of mess, but rather quite clear, easy to understand and properly maintained code, which is easy to enhance/improve.\n. > your demands for pull requests are much higher than on every work I had in my life, so maybe that's you who forget about it.\nI don't ask for any pull requests, because I'm not the one who needs the function - you're asking for it in this issue, whether by your own or because somebody else asked you to. If I need something, or I consider something good enough to be implemented - I'm doing it. What you're suggesting here however, is a feature for plain, lazy pathetic abusers, who can't even bother to send key to proper bot. I don't consider it useful neither needed, because I don't bother with such people. However, I can understand a need for such feature, and that's why I suggest you to send pull request, instead of telling \"I don't need it, sorry, issue closed\"\n\nThere is no way to tell if bot already have the game without knowing what the game is, and there is no way to tell what the game is without trying to redeeming it first, so mentioned mechanism is simply impossible, and you know it.\n\nYes, and we can spend 1 request on knowing what game it is. After that one request, we exactly know which bots have that game, and which don't, so we're NOT failing with AlreadyOwned request even once (apart from initial one to discover game name) - we directly send the key to the bot that needs it, instead of current form which is similar, just assumes that every bot has no games. So we do not waste \"slots\" on doing something pointless (trying to redeem key on bot that already has it) - which in fact will result in close to none OnCooldown.\n\nAnd, I implemented exactly what they needed, but you said you don't like it.\n\nMultiple keys redeeming has totally different objective than what you imply. I might have keys from various bundles that I own already, and I might want to send all of them to given bot, so he can redeem them all in one message, instead of in 10 of them. That's what multiple keys redeeming is - writing 10 same messages with different keys in 1.\nForwarding keys also has other objective - it's supposed to redeem key \"somewhere\", and farm cards off it. In this scenario we don't care where it'll actually be redeemed, because we're too lazy to check which bot can potentially redeem it. What matters for us is that some bot will redeem it and farm it, which one - we don't care, we want cards.\nWhat you want is changing multiple keys redeeming to one key per bot redeeming for lazy people that are too lazy to even send proper key to proper bot. In this case, surprise - ASF will still work, because bot 1 will return OnCooldown after 5th or 10th activation (can't remember), and STILL forward key to other bot. So the worst case will be that majority of bots after such multi-redeem will be OnCooldown for like what, 15, 30 minutes? It's fair price for being lazy I'd say, the effect will be the same.\n. And BTW, in neither of above posts I said that I don't want to see such feature implemented - most certainly you can add it, for example in new command such as !redeemsingle, which would accept keys separated by space, and redeem on all bots one-by-one. Just don't confuse general purpose of multiple keys redeeming, and keys forwarding, with feature for key abusers.\n. > Because no bundle have a ready list of keys, so it would be much faster to copy&paste them one-by-one instead of making such list first (either by copying keys to some text file, or at least removing game titles), and then sending it to the bot\nYep, and that's how it should work in the first place - you send key to the bot you want to redeem it on, multiple keys redeeming (on the same bot) is extra to the above, and forwarding keys (to other bots) is an extra as well. Redeeming keys in your given order can also be an extra to already implemented features, if somebody (including me), decides to implement it.\n\nSo, multiple keys redeeming that you made are simply useless, I can't imagine use case that would cover it.\n\nI already pointed you example above, in case you missed it - I find it useful myself because I have many keys lying around and I can activate them all in one message, instead of sending a few. So yes, it's useful for me, and I'm glad you pointed it out, because I make use of it.\n\nEveryone who use multiple accounts to get cards is an \"abuser\" from this point of view.\n\nNo, buying a bundle with games, and activating them on other account is not abuse, while asking for massive amount of free keys in fact is, because a site such as IG clearly states that one person should get only one key. Do not justify abusers by what is generally acceptable for you and your friends, because IG does not prohibit you from buying 10 bundles for yourself and your own use, while indeed it clearly states that asking 20 free keys is not proper.\n\nIf you think your users are too lazy (and I wonder, why users of a bot would be lazy?) and don't deserve good things - it's fine too.\n\nI think that I don't feel inner urge to help key abusers by redeeming keys even faster than it's already possible. ASF is already a heaven for them, and with more and more features being implemented (most thanks to you, which is a good thing), it's plain easy and simple to redeem keys, even for those lazy people who are not willing to select proper bot for key redeeming, thanks to key forwarding feature.\n\nSorry, I won't do this again.\n\nI'm not asking you to. Every user is able to leave valid request, but it's my choice in what order I'll keep up with my TODO list, and how much time I'm actually going to spend on given feature. You sent a pull request with nicely suggested feature, I merged it, but I should rather say \"I took the idea and implemented it in my own way\" (as you pointed out yourself), and now you point out that it's not what you wanted, which is also valid, and once again, same as I said in previous case - if you want to see it in ASF, you can either wait for me to do that, or implement it yourself. I'm sorry that I misunderstood what is the point of your pull request and rewrote the mechanism in the way I consider appropriate, but you could also specify exactly what is your objective in the first place. I didn't do that intentionally.\n\nCalling users of your software pathetic is not really nice thing\n\nIf I invented a gun, and somebody killed someone using it, I shouldn't call the murderer pathetic because he used the gun I made? ASF is only a tool, and you're choosing how to use it. If you decide to be an abuser, it's your choice, but don't expect from non-abuser such as me to follow your ideology and agree with you, that's all. As a developer, I'm always trying to understand all users, even those I do not agree with, but it shouldn't be shocking for you that I don't consider suggested feature that important to spend my time on it when actually good features such as https://github.com/JustArchi/ArchiSteamFarm/issues/77 are also awaiting in the queue. I'd be a d*ck if I said that I don't like something and you should go away, instead, I say that I find the suggestion valid, even if I have no potential use of it.\nInstead, you're saying that the feature that got implemented is useless, and you're more or less ranting about the fact how I hate your pull requests, which is totally not true, because every pull request needs to pass the same guidelines, which is - be well written, regardless of the feature that gets implemented, or who is going to use it. You're not an exception - https://github.com/JustArchi/ArchiSteamFarm/pull/6. If I find some mistakes or things that can be done better, I spot them and clearly give tips, if I have no major objections, I tend to merge pull request, even if it's not perfect - and fix it further if it's needed.\nAgain, as I said above, you don't have to agree with me, neither with the way how I decided to develop ASF, it's licensed under Apache license and you can start your own fork if you for any reason decide that you don't want to contribute to ASF. If you however decide to do contribute, including posting issues (not only pull requests), you should follow basic ASF guidelines, which are indeed set by me, because after all it's my project and I have the right to develop it however I want (which is not equal to being selfish neither \"I know better\" type of human, but more like using proper logic, code quality and practical use, which is crucial for open-source project such as this one, which again - you don't have to agree with).\n. It's OK, although we don't need to complicate our lifes that much. We can just add one bool into the bot, and switch that bool with a command such as !multibotsredeem, although if you think that config property would be better - I'm fine with that as well.\n. This is now fixed/done, thanks to @Ryzhehvost in #87\n. Good idea, that can be added quite easily, as I already have something like that in ArchiBoT. On TODO, with rather short ETA (next version, or one after).\n. Manual mode actually sounds good enough to raise priority.\n. Good suggestion.\n. SteamMasterID + ClanID must be bot-based, because one could want to run also bots for other people. Same with blacklist.\n. Hardcoded blacklist is mandatory because otherwise even up-to-date ASF would be stuck if user defined his own blacklist.\nSo in ASF there are actually two blacklists - one, hardcoded global one, and second one - local, defined on per-bot basis by user in config. Hardcoded blacklist can't be changed, and I don't want to do that, because it should contain always up-to-date list of known \"bad\" apps, so user doesn't have to update all of his configs when some new app gets added to that list.\nHardcoded blacklist has exactly the same appIDs as default value for local one. And it should always be hardcoded. There's absolutely no possible case when you'd want to include globally blacklisted appIDs for farming.\n. Definitely. Good idea.\n. Can be done.\n. Deprecated by #131\n. It's very likely that Valve changed something regarding this, as other projects that are using SteamAuth are experiencing similar issues: https://github.com/Jessecar96/SteamDesktopAuthenticator/issues/193\nNo solution yet.\n. This is supposed to be resolved by now, Volvo pls?\n. This is now fixed for good in https://github.com/JustArchi/ArchiSteamFarm/commit/7ae29aa1228793ba5058c701b9dfdfc92764b927\n. sessionid=XXXXXXXXXXXXXXXX&serverid=1&partner=XXXXXXXXXXXXXXXXX&tradeoffermessage=Sent+by+ASF&trade_offer_create_params=XXXXXX&json_tradeoffer= takes 143 characters, we can round it up to 150. That means that we have around 65370 characters left for JSON contained in SteamTradeOfferRequest trade.\n. Now I just need somebody with big enough EQ to find optimal value for Trading.MaxItemsPerTrade, but that can wait.\n. equipment aka inventory.\nThis is basically pretty easy, we just need to experiment with some values. I'd do that myself but my bots don't have 2FA enabled so it would take a while.\nI think that there should be no problem in sending 500-1000 items in one trade, we need to add a safety measure anyway so if you'll be able to send e.g. 750 items max, we'll need to set something around 600-700 max.\n. I also added my fix from ArchiBoT that instead of crashing process when data is too large, just fails, so watch out for exceptions in log. The one we're looking for is the same one as the one referenced in OP.\nFeel free to experiment with the value however you want, it's only one line to edit - https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/Trading.cs#L31\n. Also changing issue to enhancement, as the bug is fixed already.\n. Strange because it means that Volvo returned non-200 code here: https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/ArchiWebHandler.cs#L464, it always worked in my case, did they change something lately? I'll check that myself.\n. I'll most likely set limit as 150 items then, it seems reasonable and we really don't need more. The difference probably comes from the fact that Mono uses different (old) .NET components, and the limit was lower there, but good - this way we make it compatible also with older structure, and it's not critical that we'll send 150 items instead of 300.\n. BTW, !loot works properly without error for me - most likely you faced typical volvo fuckup.\n. Limit of trade offers, 100%, I stumbled upon that issue previously. It's like limit of 5 trade offers to one account.\n. This is actually a good idea for improvement. I'll add it to the next release.\n. Uh, !play is already implemented, and that sorting mechanism looks both awful and without any practical usage. The only thing I can notice that has some logic is avg_prices, but it requires enhanced steam component and I do not want to base on third-party features. We do not know how long it will work, and it's not crucial to make ASF work.\n. I'm not sure if it's even needed, do not waste your time. I mean, we really shouldn't sort that list or anything, it's supposed to just work, I think we're adding too many fancy things that are not needed by majority of people. Cards price changes all the time, and we need to actually waste time on asking either third-party service or checking all on our own, I'd say this feature is really not needed as eventually ASF is meant to farm everything anyway, and the order of farming does not improve performance.\nAnd you can't check those prices easily. Third party way is actually the best one, still, I'd rather stay away from extra dependencies. It's not like that feature is crucial or even improves anything, let's keep ASF simple and fast.\n. Don't get me wrong, I like the fact that people are contributing to ASF, but I just miss practical usage of that. Of course, you can say that some people might want to farm cards according to their price, but do we really need to complicate whole thing for that? If it was easy, I'd most likely implement it myself, but it's not, and requires either very giant implementation or third-party service, which both should be avoided as long as it's possible. I don't think that sorting by price, because it's the only useful sorting, is that important, if ASF is going to farm everything sooner or later anyway.\nI'm open for discussion and all suggestions though.\n. Yeah, and that's why we should follow our own common sense. The idea is not bad, I just can't find practical usage of it when ASF is supposed to farm everything sooner or later anyway. Sorting by price does not improve performance, in fact, it decreases it because of a need for at least one additional request to third-party service, or bunch of them to Steam, and that's why I'd avoid that if possible.\nI don't know yet, maybe I'll rewrite it and indeed decide that sorting might be useful, I mean it's optional, right? The idea is good. I just don't like to overcomplicate things that are supposed to be simple.\n. The idea is good, thing is - it's rather complicated because ForwardKeysToOtherBots or ShutdownOnFarmingFinished indeed is one-property change and it's done, but SendTradePeriod would need to change timer or create new one, CardDropsRestricted would need to restart farming etc.\nBut the idea is good, I don't have anything against it, as long as it's done properly I don't think there will be any problems.\n. Actually I'm not sure if there is a really need for that. It would take massive amount of actual code, and the usage of that function would be very low. There's not any property currently that would be mean to be switched frequently, and with rather easy-to-edit now JSON configs and !restart command, this is already pretty easy and fast.\nClosing it as I have no interest in it, which doesn't mean that one can't write the code himself and send a pull requets.\n. After rather a longer while, the feature I wanted to see since a long time in ASF is now completed. Go ahead and give it a try: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.3.5\nFast doc before I add proper text in the documentation:\nIf SteamTradeMatcher is true, bot in addition to donations and trades from SteamMasterID will also accept trades that are valid in terms of SteamTradeMatcher.\nTrade is valid in terms of STM if:\n- Both parties receive same amount of items\n- Trade consists only of items from the same game\n- Trade consists only of steam trade cards\nPossible TODO for future:\n- Allow STM integration also for items different than trade cards, that can be done as I have EType of Item implemented already, it's only a matter of adding all possible rules and some checks.\n- Check our own inventory to decide if trade is indeed worth it for us, in addition to checking if it's valid in terms of STM.\nStill, quite a big milestone has been done, so feel free to test it and give feedback. I think I covered all possible steam fuckups, abuses and other unwanted scenarios properly, so bot will not accept trades we don't want, but I can't assure it without tests and feedback - it works for me.\nHave fun.\n. And bugfix: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.3.6\n\nAllow STM integration also for items different than trade cards, that can be done as I have EType of Item implemented already, it's only a matter of adding all possible rules and some checks.\n\nThis is now done with foil cards (price of other items vary and we might not want to trade them automatically)\n. Last one, I promise :+1: \nhttps://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.3.7\nShould be absolutely bugless now.\n. Documentation is always done as last stage, when I'm done with adding logic and precising how it works. You should never expect documentation of things in work-in-progress state, especially if they didn't make it's way to stable release.\n. Final version of ASF STM integration is now ready: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.3.8\nThis is the version I've been testing since some time. It has everything I wanted to see implemented, including not only check if STM trade is valid, but also if it's worth for us. Trades are done for steam cards and foils, as value of other items may vary and we might want to look into those trades manually.\nI think it's bugless for now, I fixed all bugs I could spot. I'm leaving this issue open in case somebody else spots a potential bug or something interesting regarding that feature - issue will get closed with stable release (which will happen when I'm sure everything is working as supposed to, so probably a few more days).\n. I guess it crashed here https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/Bot.cs#L194 because steam API was offline and bot couldn't get list of active CMs.\nI'll correct it in next version, thanks.\n. This issue should be fixed from 1.5 pre1 onwards.\n. It depends on used features. ASF uses .NET 4.5 very heavily and it's possible that your Mono is broken, especially because you're using Arch.\nI never faced this issue, and I use latest Mono on my Debian all the time, therefore, I consider it mono-specific issue and link you to https://github.com/JustArchi/ArchiSteamFarm/wiki/Mono\n. Yes, it is, but package is compiled for \"AnyCPU\", not 64-bit, so it should have no outcome on that. The only thing which I can is to catch every possible exception rather than TaskCanceled one, but that won't fix the fact that the exception is thrown, and ASF won't operate properly, just repeat trying in infinite loop.\n. I uploaded pre2 for you, if issue persists, it's either your Mono or OS fault, the only thing which improved is the fact that ASF will retry instead of crashing - https://github.com/JustArchi/ArchiSteamFarm/releases/tag/1.5.0.0-pre2\n. TaskCanceledException is very common with broken Mono installations, I'd say it's the most common issue even, and it's out of the scope of ASF, because ASF officially is supposed to only support:\n- Latest Windows, natively (my pc)\n- Latest Debian with latest Mono (my server)\nAs I wrote on the wiki page I linked you above, it's literally impossible for me to test ASF on all possible OSes, with all possible Mono versions in all possible variants. Therefore I'm not even trying, it's supposed to work on Debian with latest official Mono version, everything else is more or less optional - it should work, but if it doesn't, it's your OS, you should fix it, or you can always switch to my Debian if you want. It's not ASF responsibility to workaround broken frameworks.\nSo, sorry, this is all I could do. Why SteamDirectory.Initialize().Wait() is failing - it's out of scope of ASF anyway. I can only suggest installing latest Mono directly from their downloads, in order to see if anything changes.\n. Already possible in 1.4+.\n. Looks good to me.\n. :+1: \n. @Ryzhehvost \nI don't have enough bots to test the root case, but if you do, you can test this issue. Personally I think that adding our workaround:\nawait Program.LimitSteamRequestsAsync().ConfigureAwait(false);\nabove https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/Bot.cs#L535 would solve the problem.\n. Question is if this is really enough and not just volvo causing fuckup, you already know how it works so I guess you can determine it yourself. I'd test it myself but I have only 2 bots and can't reproduce the issue.\n. If nobody else can reproduce this bug I consider it either volvo fuckup or user-specific bug, as there's no real reason why Valve would limit requests considering getting steam inventory. I could understand trade requests, but not getting steam EQ.\n. How can I know that the API is rate limited if it's not documented anywhere, neither stated by anybody?\n. In this case we can just invent the same semaphore as we did with steam logins, just for the trading part.\nWhich part is rate-limited? The one that returns inventory, sending trade, or both?\n. https://github.com/JustArchi/ArchiSteamFarm/releases/tag/1.5.0.0-pre3\nPlease check the pre-release, rate limiting is set to 3 seconds now.\n. Good, this issue is considered fixed then. Thanks for your report.\n. Also it's out of the scope of ASF.\n. We should rather ask why we should NOT switch to newer framework, instead of why we should. We should not update to newer framework version only if it's not supported or not stable (yet) on currently supported OSes by ASF, and .NET 4.6(.1) is both supported and stable on both Windows and Mono.\nNew framework brings many new features, bugfixes, performance improvements, stability fixes and more.\narchi@archi:~/ASF$ mono ASF.exe --server\n29/01/2016 15:33:43 [*] INFO: Main() <Main> Archi's Steam Farm, version 1.5.0.0\n29/01/2016 15:33:43 [*] INFO: StartServer() <Main> Starting WCF server...\n29/01/2016 15:33:44 [*] INFO: StartServer() <Main> WCF server ready!\nMono JIT compiler version 4.3.3 (Nightly 4.3.3.148/2c4cb3d Thu Jan 21 19:49:38 UTC 2016)\n. Moreover, the direct reason for your old Mono to fail is because in fact it doesn't support newly introduced optimized and improved WCF, which happened in .NET 4.6. Current Mono does support that correctly.\n. Intentionally? Switching to new framework is always a bad idea?\nI'm not sure if you're actually being serious, pissed off or if you have no idea what you're saying, but no - I didn't break anything intentionally, and the switch is nearly always a good idea.\n. > It was working for me. Now it's not working for me. This means it is incompatible.\nYou're using not supported Mono version, therefore argument \"it was working for me, now it's not\" is invalid, because I do not support old mono versions.\n.NET 4.6.1 is supported in all recent Windowses and Mono, I don't care that outdated Mono might have problems with it, because only latest one is supported.\n\nProgram with new framework does not have new features or improvements. It means that switching was actually pointless.\n\nIf it didn't, you'd not face the problem you faced above, because nothing would improve or nothing would change - but you DID have the problem, which means that something changed - WCF implementation, and it is now better. Another invalid argument.\n\nAll of the above is truth, that's how formal logic works.\n\nNo, nothing of above is truth, you're bringing arguments that don't make any sense because your old mono has stopped and you have to update your Mono now. You don't have any valid logical arguments, you're just ranting about it, bringing up anything you can come up with.\n\nYou are fixing what wasn't broken, if you think this is a good idea - something is wrong with you, not me.\n\nI'm not fixing anything - I'm improving my project. You're free to use V0.1 if you like - I can assure you that it won't change.\n. Glad we sorted it out that I don't care about older Mono versions, I was sure that I stated it quite clearly in the Wiki :+1: .\n. Will check later myself with stable one, as I'm on nightly channel.\n. I checked Win7 and all works fine, as long as you stick to up-to-date setting up instructions.\n. Latest pre-release also works even with older Mono (from Debian's testing branch).\n\n. Yep, doesn't work with --server on my 4.2.1 either.\n. Works fine on nightly channel though, so it's fixed. We can consider it Mono bug.\n\n. It will now stop on !exit, since https://github.com/JustArchi/ArchiSteamFarm/commit/e4189b2bc472006abae9b610d8122164d493698e (not released yet) but yes, ASF in server mode will not exit when no bots are running, as noted in changelog for latest pre-release.\n. This issue is for .NET 4.6(.1) regressions and not Mono fuckups.\nLatest stable Mono (4.2.X) doesn't support newer WCF mechanism, and it's even stated in the 1.5 stable release quite clearly, so I can't see a reason why you repeat what is already known and stated in the affected release itself.\nCurrent mainline Mono (4.3.X) is already fixed for above WCF bug, therefore it's already fixed in not yet released next Mono stable.\nAnd current nightly is broken, as Tasks being waited in main thread are automatically cancelled for some reason - this is Mono regression (aka fuckup), because it does not happen neither in stable Mono (4.2) or in native .NET 4.6.1 framework on Windows.\nSolutions:\n- Use latest stable Mono, change .NET version 4.6.1 to NET version 4.5.1 in 3 files - 2 .csproj ones (ASF and SteamAuth) + App.config, then recompile yourself using Mono's xbuild.\n- Wait up to a week for Mono nightlies to be working again.\n- Do not use WCF.\nThis is Mono-related issue, and not framework-related one, and it's not .NET 4.6.1 regression, but Mono regression that is ALREADY FIXED in current mainline, it's not my fault that current mainline is unstable and doesn't work. Such things happen with nightly releases.\n. Which is mentioned as an available solution as well.\n. OS?\nHave you tried: https://www.microsoft.com/en-us/download/details.aspx?id=49981\n. What first line of exception says? I don't speak Russian, neither can translate it because you put screenshot and not text.\n. I guess .NET 4.6 tries to use new \"socket reuse\" mechanism that is supported since windows 10, for your windows 7, which should not happen automatically. I'll have a new pre-release for you to test later today.\n. Try attached version and let me know if issue persists.\nASF.zip\n. We're not yet done, I must check if it's VS fuckup or .NET 4.6 fuckup. I'll need to test one more release, sec.\n. Let me know if this one works too, and it's all I need from you.\nASF.zip\n. OK, I'll keep compiling final binaries with Mono now for maximum compatibility with all OSes, thanks!\n(Keep using the ASF version which works for you in this thread, it'll be the same as pre4)\n. I'm sad to say it but it looks like something is wrong with your OS and .NET, as exceptions are raised deep in the framework. And pre4 uses Mono assemblies.\nCan anybody else reproduce the same issue with pre4 on Windows 7? If yes, I'll install it on VM and check myself.\n. Okay, I reproduced the issue this time. We got it.\n. Note to self: binaries compiled under Mono don't like Windows environment.\n. Just wait for one-two more test releases. I'm trying to find out if I can solve this issue without downgrading.\n. Test this one firstly:\nASF 4.6.1 + no port reuse.zip\nIf above still doesn't work, test this one:\nASF 4.5.2.zip\n4.5.2 should work flawlessly because it's downgrade, although if first one works I'd be happier.\nLet me know how it goes.\n. If 4.5.2 version crashes for you then I'm afraid that you have much deeper problem, as it's the same framework which is used in 1.4 release. Does 1.5 pre2 works for you?\n. o_o. It doesn't make any sense to me. I'll check it myself on Windows 7. Use pre2 until then.\n. And thanks for reporting this issue, I'm happy it didn't slip to the stable release. I'll make sure Windows 7 works before I release a stable one.\n. I checked and latest pre-release works properly on Windows 7 (SP1) with .NET 4.6.1 installed.\n\n. No, log should contain only latest run, if you need log rotation you should handle it in your own script.\n. You're asking for way too much, in best case I could extend !status so it would show what appIDs bot has to farm, but nothing more.\n. On the other hand doing that would result in a spam, and I don't want that.\nSorry, I'm not going to consider this.\n. No? What's the point?\n. Then go ahead and implement that if it's easy. ASF is supposed to farm cards, not buy games for you.\n. Exception is raised in SteamKit2.AsyncJob1.SetFailed(Boolean dueToRemoteFailure), out of scope of ASF.\n. It's intended, you should setSteamMasterIDproperly to avoid such loop. If you want to activate cd-key on given bot instance, from another bot instance, you should use!redeemcommand as @Ryzhehvost pointed above. There should be only one master for all of the bots, and that property is not global only because you may want to run e.g. your bots and your friend's bots in the same ASF process, as the worst thing that you can possibly do is launch two ASF processes, eating resources and not cooperating with each other. ASF process is supposed to be one, and it should handle all accounts, henceSteamMasterID` property is switchable and not global.\n. This is what steam network sends to steam client, apparently decoding is done on steam client part, and ASF just forwards what it receives.\nBut because it's rather easy to fix, I'll do it.\n. But it doesn't hurt to decode it on our side.\n. Confirmed fixed in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/1.5.0.0-pre7 (although I'm not sure if I didn't cause other regressions while I refactored that part)\n. This is intended - bot is not checking if trade offer got accepted or not. It sends it, and the next time the check (or command) is done, he notices items and sends them again, because there's no way to guess that you got the trade or not - you didn't accept it, items are still here, so bot is trying to send them (again).\nSolution: Disable automatic trade offer send and use !loot instead, so you can control the amount of trades being sent.\n. Already discussed, not the purpose of ASF.\n. 1. Why? You still need to provide SMS auth code, and authentication has to be done only once per account.\n2. It's already saved in auth file.\n. You may not want to use the same phone number on all accounts, and config property as the name defines, should be config property, and not a variable used once for configuring an account. It's a waste of space and causes only a potential confusion for users that might think it's used somewhere else. I'd consider that suggestion if you had to enter phone number more often, or it'd be required for ASF 2FA to operate, but as it's done only once, and only if phone number is not set yet, I think that the cost for you to enter that number a few times is still less than a cost for me to add such rather useless feature. You still need to enter SMS codes, and copy paste works for phone number.\n. The way how ASF 2FA works is not going to be changed, I do not plan on supporting any other data types generated with any other solutions. I suggest to delink your old authenticators and link your accounts in ASF 2FA if you want to use it.\n. It's in freaking JSON format, if that's too hard to access it then I don't know what will be easier and I give up on trying.\nEither way, if you need it then do it, because I'm not going to spend any minute on that - I have no use of that.\n. And closing because I couldn't find any practical usage that would make me think otherwise in last 4 days.\n. RTFM.\n. I'm not yet sure if I like first suggestion though, I need to think about it.\n. AFAIK there's no game that gives away any items or other goodies just because of hours played. Most definitely there'll never be option in ASF to farm actual dota2/csgo/tf2 items, but we're not talking about that, but hours played, and I can't see anything wrong with that. I'm just not sure if I want to see that in ASF either.\n. Valve openly claimed that they don't want to see any software automating steam (game) item drops, and I'm not going to make one either, so it's definitely a \"no-no\" for ASF.\n. JustArchi [at] JustArchi [dot] net\n. No, I think the purpose of ASF is to not farm hours of playtime, I don't want to see such feature in.\n. I'm not paid steam coder.\n. No, apparently you didn't understand that it's a project of ASF and your question is not connected in any way with the project.\nFurther spam will result in a block.\n. Thanks for bug report and especially a working solution right away, should be fixed in 1.6 pre1 :+1: \n. There is already !play command designed for such purpose, and as I said before - whitelist is not going to happen because it's pointless for ASF automatic mode. And manual mode is already implemented.\n. You clearly don't understand the point of automatic mode of ASF - it's not here to farm the games you want, that's what manual mode is for, and not planned to be enhanced ATM.\nASF has clear objective of automatic farming of multiple accounts, and what you want from it does not match that objective.\n. Currently I'm pretty busy and not in the mood of deserializing descriptions so this will have to wait. Especially because it depends on the code that is not yet written, so it's not easy to add it.\nSolution: Send Master->Bot trades, you can then choose exactly what your trade contains of. At least until somebody picks it up.\n. This is no longer on hold as majority of the code was written in #84, but it's still on wishlist, maybe I pick it up later.\n. I decided that it's best for bot to loot steam cards, foil steam cards and boosters. Everything else doesn't pop up there automatically and require human hand, which means that ASF should not try to touch that. I don't want to add extra property for looting boosters, as I believe that most of the people will want to loot boosters too, as boosters are pretty much steam cards and nothing else. And if somebody doesn't like that, he can always send specific trade that bot will accept.\nWith new STM integration everything is easier :+1: \n. There is a strong difference between steam client-based !addlicense and adding game to your account through a promotion on steam store.\nLatter case is not going to happen, at least until somebody else decides to implement it. !addlicense works properly for it's purpose, which is not the same as you'd want.\n. Not my cup of tea, SteamAuth is responsible for that part, and AFAIK it doesn't support parental unlock - ASF does.\nAdding to wiki is good idea though.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Escrow#limitations\n. https://github.com/geel9/SteamAuth/issues/37\n. - To prevent ASF from turning off when no bots are running, you should start it in server mode.\n- To stop farming but not disconnect you can just switch to manual farming mode, although I don't know what is the purpose of that, ASF automatically stops farming when it's needed (e.g. when primary account starts playing) \n. Stopping farming will not help you sort out login issues, because that's how steam behaves when you're logged in in two places at the same time. Very similar thing happens when you use steam e.g. on your PC and on your mobile at the same time - doing action from one device will cause other one need to refresh sessionID and vice-versa.\nYou can however !stop and !start bots on as-needed basis, and that will help.\n. Check out the Commands section for more help.\n. Because you didn't start ASF in server mode.\n. ... I'm not sure if you understood what is the difference between acting like a client and acting like a server.\nI repeat once more that what you want to achieve is already possible and ASF is automatically turning off by design when not running in server mode. Nothing here should be fixed or corrected, therefore the issue is closed.\n. Then create yourself second account just for the sake of sending commands if WCF is not an option for you.\nI'm not going to pollute my code with useless feature which has no point whatsoever, and what you want to do is already possible.\n. I'm not fixing volvo fuckups related to too many accounts being connected.\n. What @Ryzhehvost said above is true and that's why I say that nothing is getting done here. It's not a bug of ASF, and it won't be adressed. There's no way to tell what \"InvalidPassword\" really means (password? captcha? too many failed attempts on acc? per IP?) and I won't be wasting time on addressing such mess. Current mechanism works really well and guarantees that all bots will eventually connect, regardless of the problem (unless invalid password really means that password is invalid, but in this case it's only 1 request per 25 minutes).\n. Your \"change\" would make it impossible for other bots to connect, even if they are not limited, only because one can't connect because of reason X (which is unknown to ASF). This is worse than current mechanism which assumes that block is on per-bot basis and not per-IP, which is much better as it allows other bots to try connecting while one is blocked.\n. Moreover, if somebody actually changed the password and didn't update it in ASF, it would cause all the bots to never ever connect because of that one account, which is UNACCEPTABLE for ASF, which operates on many bot instances at once.\n. Therefore, point stays - not a bug, and won't be fixed, because there's nothing to fix here. Fix Steam instead to provide proper reason for not being able to connect, and we can discuss the issue further.\n. ASF has rate limiter implemented by default, it's not possible that ASF will be sending more than 1 connect request per 5 seconds, regardless of current situation, whether you have 2 or 222 bots, whether they're all connected or not, or whether steam has fuckups or not. Moreover, it was greatly improved in the meantime, and works like a real rate limiter now, rather than an ugly delay added between sending requests.\nSo no, concept is still the same, just implementation is better. Perhaps we should increase the delay instead?\n. If we're talking about steam client (because website is totally different thing), then it's based on LoginID which is always the same based on private IP being used by PC.\nFor now all ASF bots use the same LoginID, so if you start another ASF somewhere else, first one will get disconnected, and they won't interfere with each other.\n. The only thing which comes to my mind is providing each bot with unique LoginID, but that has some drawbacks to consider, as every ASF process should have the same way of calculating the LoginID (same what Valve does with LoginID based on private IP), so it can't be a true random set&forget.\nI think we can base it off steam login property.\n. .bin files didn't change from first V0.1 version up to today, they all use same method of generation and upgrades, but that DOES NOT guarantee that Steam network will accept it, as it's totally possible that it can no longer accept old sentry hash, e.g. due to clicking \"deauthorize all other computers\" in steam client, which effectively kills all ever generated .bin files apart from the one your current steam client uses.\nSo yeah, those files are the same, their generating is the same, and they should work in all ASF versions, but that does not guarantee that they're valid.\n. I'd double check if the increased delay is really needed, because by default ASF uses 5 seconds and it should be enough almost in all cases.\nOf course, there's no real reason why we couldn't increase that delay to something bigger, but the question is if it's really needed and you didn't spot a classical steam fuckup instead.\n. > Also, if Steam raises the connection-limit/time in the future(...)\nUsers in general should not have a choice on that. Things like timeouts suggested by @Ryzhehvost are fine because they vary from user to user, and from one PC to another, but request limiter delay is supposed to be static because we know better what value should be used rather than user who probably doesn't even know what rate limiter is and why it's needed.\nBesides, it doesn't change that often, if at all.\n. You misunderstand two facts.\nThere are config properties which can be configured by user, according to his own needs and what he wants to achieve. All of them are in the bot config.\nAnd there are also variables that should never be touched by the user, because we know better what is being used. It's like you'd give user option to modify maximum number of allowed trades for predefined value of 5 to something else - why? User doesn't know what is it, and making such option configurable means that he should configure it according to his own needs, but in fact it should never be touched because the value is based on Steam and Valve, and not on user needs - it's constant which should never be changed, unless in fact Steam changes something, but in this case update of ASF should be released.\nFor the same reason it's not possible to modify some constants used e.g. in Trading or WebBrowser. User should never touch them, and if you have a strong reason to do so, then you should state that reason here because strong reason also affects other users and not only yourself. For example I can agree that modifying timeout suggested by @Ryzhehvost is OK and should be possible, but I don't consider adding option to change maximum number of allowed connections in connection pool. User should never touch that.\nYou have a strong reason to modify delay - from 5s to 7s, and I agree that it should be changed (I will change it soon), but making that option configurable is pointless and causes only confusion to potential user, who doesn't know what that option is, why it is 7 seconds, and why he should or should not change it. Do not add to configs things which always should have default values, only for the sake of easier change without a need of recompiling. That value is not even supposed to be changed at all, unless Steam forces it on us. And in this case I'll probably want to do more than just changing the value.\n. It's too hard to say what delay you need, it's easier to tell what delay will satisfy all scenarios, and for now it's 7 seconds, therefore it stays.\n. Yep, this is an issue with latest Mono nightly which doesn't work correctly, next release probably should fix this.\n. I'm 100% sure that Valve doesn't want to allow easy drops by playing all the games at the same time, which is why there's no such option in ASF at the moment.\nEven if it is possible, or it did happen, because with Volvo fuckups everything is - it's not intended for sure. Therefore I'm not sure if there is a point in implementing something that won't work in a few days from now.\nOf course, you can always use !play and manual farm whatever you want, including many games at once. Question is whether we should really consider such option, because I'm more than sure that such way of farming is not intended by Valve as the rate drop of steam cards when playing more than one game is nearly 0, if not 0 itself.\n. I've already seen so many different Steam fuckups that I'm carefully testing if what is currently happening is intended, or not, and if not, how often it's happening, to decide if it's worth adding a workaround.\n. If that was just one-time unusual situation, I'd say it was volvo fuckup not worth investigating further, unless you find out a reproducable case when indeed it's possible to achieve good card drop rate with multiple games running, and it'll work in at least semi-reliable way. I couldn't find such case, so for now my opinion is \"volvo fuckup\".\n. Yeah, even if you did see some, because I'm not stating it's impossible - it's because of steam fuckups, most likely some desync happening in internal network between steamcommunity and the client. With recently discovered race condition with cd-keys activation, I don't even want to imagine what is going inside internal steam infrastructure. It can't be reproduced in reliable way.\n. 17:50 - Hewis Lamilton: do you thought bout concatenating all those files?\n17:50 - Hewis Lamilton: all xml into one file and so on\n17:50 - Archi: nope, xml file is being used as a config file\n17:50 - Archi: it should never be written to\n17:50 - Archi: login key, bin file and auth could be merged probably\n17:51 - Archi: but they all use 3 different serializing methods\n. No, that is not going to happen.\n. Deprecated by #131\n. Either mono fuckup or you did something wrong during compilation. Not ASF issue.\nAnd please stop posting issues regarding issues not caused by ASF, this is not a proper place for that and you pollute ASF project with your OS-related issues. GitHub is not a freaking technical support.\n. Yes, polluting, because the issue is not caused by ASF's code, but either by volvo fuckups or Mono framework, and I do not offer neither steam network nor mono framework technical support here. GitHub issues are dedicated to issues, suggestions and bugs related to ASF, not bugs related to your own compilation and OS problems. Wiki can contain listed bugs and workarounds for some problems because that's what wiki is for, but you're creating an issue dedicated purely to your own problem, and your own compilation, not ASF bug. And I have better things to do than wondering what exactly you screwed up in your own setup, if I can't reproduce particular issue and I can't find any logical explanation in my code why it would happen, then I'm not interested in fixing it. Full Mono support means that ASF can be run properly in Mono environment without issues, which does not equal to being aware of all Mono fuckups and quirks in all versions, on all available OSes. The only known Mono-related bug for now is WCF one, which is listed in 1.5 release. ASF is tested only on latest debian (testing) and with latest stable & nightly Mono, and only that setup guarantees bugless experience, everything else is based on \"should be working, but no guarantees\".\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Setting-up\n\nFile should have no spaces in the name\n. Direct dependency: #131\n. > Currently the only way to force a rejoin is to restart ASF.\n\nNo, you can just invite them to chat.\nBots join chat after being connected, but Volvo fucks up sometimes and disconnects the group chat for no reason.\n. Actually leaving it open, because I could add some sort of anti-fuckup command.\n. No, by clicking bot and inviting it to the chat through steam client.\n. Then it means that this app is not available for redeeming via steam client request, but via steam website only.\n. We could, request is probably quite easy, I'm not interested in that myself though.\n. Yes.\nAnd GitHub issues is not Q&A.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/127\n. Doesn't make any sense to me considering that it doesn't detect up-to-date pre-release instead. I'm wondering which part was considered as false-positive.\nI guess I'll just release V1.6 to workaround that issue. Still, doesn't make any sense to me.\n. Probably one of the methods used by ILRepack triggers that, as viruses tend to use repacking methods as well.\n. Leaving it open for eventual further analysis. If for some reason one of the parts of ASF is considered as false-positive, I should find out which one and check what is possible to do, because most likely V1.6 will be falsely flagged as well.\nCode of ASF is open-source, so if somebody for any reason doesn't believe my statements he can analyze the code and compile himself, as stated in the wiki.\n. V1.6 seems to have similar issues - https://www.virustotal.com/file/3219c66e23f449943b26368412a07da4ee6a65a331618c5a798c0c72901c89d7/analysis/1456348367/\n. Non-repacked version has similar results - https://www.virustotal.com/file/3e5a19f1a5a67f9351c02024665fd2db0188f35dbf45f4766cab0ffe093c6460/analysis/1456348526/\n(No reason to avoid ILRepack then)\n. http://stackoverflow.com/questions/33998715/visual-studio-2015-community-trojan-heur-qvm03-0-malware-gen\n. I released 1.6.1, but I doubt that signing app will help in any case. Let me know if up-to-date windows (defender) detects 1.6.1 as a virus as well.\nEdit: Apparently signing in fact helps.\n. Hm 1.6.1 looks good then? No new reports? No weird windows defender false positives?\n. Feel free to post if similar thing happens then.\n. Fixed.\n. Config? DistributeKeys, ForwardKeys ?\n. I'll check that later then, thanks.\n. Can't reproduce, everything works.\n. Moreover, I can't really think of any issue in the code, so unless you provide exact steps to reproduce the issue, I won't be able to fix it.\nIs it steam private chat or group chat?\n. 23:09 - Archi: D9FWF-35AI0-DMFDP\n23:10 - Patchouli Knowledge: \n<patchy> Key: D9FWF-35AI0-DMFDP | Status: AlreadyOwned | Items: [58206, Particula]\n<archi> Key: D9FWF-35AI0-DMFDP | Status: AlreadyOwned | Items: [58206, Particula]\n<flandre> Key: D9FWF-35AI0-DMFDP | Status: AlreadyOwned | Items: [58206, Particula]\nCan not reproduce. And since I can't find any bug in actual code either, I blame your framework or OS.\n. Debug.zip\nReproduce your issue on debug version so I at least can start guessing which part may be a problem. That version should not be used normally, only one time for reproducing the issue to the log and uploading log here.\n. ... I gave you debug version to show me the generated log, not to confirm that you reproduced the bug.\n. It is being generated in the same dir as executable, or if you have config directory somewhere out of your executable directory - next to config directory.\n. I give up.\n. Invalid password means that steam temporarily banned your IP because of too many logins in short period of time. Wait some time, reproduce the issue, then upload log again.\n. I gave you debug version to catch which line is causing the problem, and we got it. The line that is causing an exception is:\notherResult = await bot.ArchiHandler.RedeemKey(key);\nTherefore, either bot or ArchiHandler is null.\nArchiHandler is readonly property which is being initialized with steam client, it's not possible for it to be null. If it was, every request including PlayGames one would cause null exception.\nbot property is taken from Bots.Values collection, and there's not a single line in the code that could cause that to be a null, as every bot adds itself using this keyword at the initialization, and this can't be null.\nSummary:\nI don't know what OS you have, and what you did to cause such fuckup, but I'm not able to reproduce it on my machine using any known to me approach, I can't see how it is even possible from the code being used, and nobody else reported such issue (and I know that many users are using that feature).\nI don't know, remove all your configs, download clean instance of latest ASF (stable release) and regenerate your configs as stated in the Wiki. If that won't help, perhaps format will, because to my knowledge it's physically not possible to create such bug, assuming that the framework is behaving correctly. I usually tend to believe that it's my code which is fucked up, and not the framework, but in this case I can't even think of any possible way how it could be ASF and not framework bug.\nI'm sorry, I'm not capable of fixing that bug, at least with the current information.\n. I'll try to reproduce it then, even if it still doesn't make sense to me code-wise, as even in this situation bot1 should call RedeemKey() method, which should return null.\n. Was a really rare bug, but I was able to reproduce and fix it. Thanks for report :+1: \n. Normally I'd say that probably it doesn't matter, and farming booster packs is not the purpose of ASF, but actually new items notifications are kinda annoying, so I'll actually check if ASF is getting those new item notifications, and if yes - we can make it disappear, implementing your request by the way.\n. I caught packet being responsible for item updates in steam client, and added logic, but I'm too lazy to wait for another item drop tonight, so go ahead and test it in the meantime - https://github.com/JustArchi/ArchiSteamFarm/releases/tag/1.7.0.0-pre1\nIt should work, but it's untested. After item drops, ASF should get notification, and visit it's inventory, which should dismiss notification.\n. Does inventory get dismissed or not in this case?\n. I'll check that later then.\n. Because they're not dismissed at the start, but when new item pops up. Everything is working as intended.\n. ^\n. In this case we can still limit number of files by creating files like Bot.config.json and Bot.database.json, which would cut files from current of 3-5 (average 4) per bot instance to 2 per bot instance, which is still great improvement.\nAlthough I'm not sure if I want to avoid merging all settings together, I need to find rationale. Auto cleanup of ASF 2FA accounts could be prohibited, and this is the only valid argument so far. On the other hand, management of bots splitted to multiple files is also easier, so perhaps it's worth it.\nDefinitely I need to migrate everything we have so far to 2 files - bot's config and bot's database. Now the question is if we should split it, so every bot has it's own config and database, or merge it together to one config and one database.\n. I'm not implementing it so it's easier for you to copy the config files. This is not a reason for this change at all. The reason is maintainability code-wise.\n. For now I decided to keep bots splitted.\n\nAll of that would cut the mess we have now to 2 files per bot, and 2 global ASF files.\n\nWhich is what @Ryzhehvost initially suggested as well.\n. I'll try to write some module that will automatically convert those files into new format, when I get down to that.\n. \n\n\nNot bad :+1: .\n. Sadly Volvo is using their strange partial sentry updates based on offset of file, so .bin files must stay if I don't want to wake up with corrupted steam guard hashes someday.\nStill it looks quite nice for now:\nBot.xml -> Bot.json\nBot.auth -> Bot.db\nBot.key -> Bot.db\nThis results in 3 files per bot instance:\n.json which should be editable by user.\n.db which should never be touched by user.\n.bin which should never be touched as well.\n. I encourage every brave user to test new pre-release: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.0.0-pre1\nConversion should be smooth and without errors for all possible scenarios, make sure to make a backup before trying though, especially because conversion \"back\" is not possible.\nIf something breaks, let me know with proper log. If it works, I appreciate such info as well.\n. Proper documentation is required before releasing stable of V2.0, and is currently top priority - https://github.com/JustArchi/ArchiSteamFarm/issues/140\nDocumentation must include things like explaining new file structure, explaining what every option does, and everything else.\nI think that local blacklist makes little to no sense. I added a \"blacklist\" to current master, so user will be able to define additional extra appIDs to ignore, but those will be defined for all bots and not only specific ones.\nIn fact, I even wanted to remove user-controlled blacklist totally, but found ONE rationale - I want to make it possible for users to define blacklisted apps related to e.g. new steam sale without a need to update to newer version. And this is the only reason why it's still in.\nThat converter is outdated already, and I'm not supporting it officially. I'll most likely remove that page with release of V2.0, unless @Pandiora updates it for new revision. Personally I can't see a good reason to keep it, I find it better to suggest users do a re-linking, because ANY converter is likely to cause issues, hell, I do not trust even my own conversion code in ASF, and I wrote it myself!\nBut I achieved what I wanted in this issue - the new structure is much better and easier to maintain, and the conversion code will be out in V2.1.\n. Blacklisting every game user wants to play is pointless, I'd suggest manual farming in this case anyway, as it gives more control over what ASF is in fact doing.\nI didn't think of it before but actually I could add a code that imports SDA files into new structure, as it's only a few lines. I'll probably do that in a moment.\n. No, actually I'll add proper code there, because it's quite easy, you (or @Ryzhehvost) will only need to test if it works, as I don't use SDA.\n. I couldn't find any use of that, it can easily be added back, but I don't know if it's really needed. Initially I added it with idea in mind so nickname can reflect current status, or whether ASF is running or not, but I abandoned that idea very early as it's not convenient, and I couldn't find any use of nickname after that as well.\n. Above is also a very good reason to abandon that config property.\n. Definitely not, in best case I'll add !nickname command that would change nickname of current and given bot instance to something else.\n. That was already discussed, I intentionally want to have all bots in their own files.\n. I double checked the code, and I couldn't find any potential problems with new format and conversion mechanism. In addition to that, nobody reported any issues as well, therefore I'm closing the issue. If you spot anything weird, including bugs related to this issue, please feel free to post, and thank you all for feedback!\n. !addlicense is steam client-based command, and not every app is being able to redeem through steam client request.\n. It's not the purpose of ASF.\n. It's still possible for this to happen when you'll issue !stop between Stop() and Start() of Restart(), although it should be pretty rare. I'll fix it in another commit.\n. I can't see OnDisconnected() after Stopping..., I blame Volvo.\n. Disconnect does not take 4 minutes to complete. That one was caused by ArchiWebHandler initiating reconnect.\n. Shutdown request marked KeepRunning as false and sent disconnect request. If that request succeeded, then cards farming module would stop. But it did not, so client was still working and got request from cards farmer to restart (stop + start), which apparently did succeed. And I can see that Shutdown() was called, as Start() said Starting... which means that KeepRunning was false at the time of start.\nTL;DR Disconnect didn't go through. Probably if he called !stop once again then it'd work. And I can't really fix that.\n. This will still fail if Valve's CM is unresponsive at the time of request being sent, and I can't really do much about it apart from logging warning.\n. It's not API, it's CM, and it has it's own fuckups and other problems. If there was a solution to those fuckups then I wouldn't pollute my code with workarounds.\n. And if CM is unavailable, then it should disconnect the client, not remain unavailable and temporarily ignoring client requests. That's why it's called fuckup, and not bug/issue.\n. You misunderstand the objective of forwarding keys feature.\nForwarding keys is literally \"I have key X, and I want to redeem it somewhere, it doesn't matter for me where it gets redeemed, just do it and give me cards afterwards\".\nIf you want to redeem key on >given< bot instance, then you use !redeem with given bot instance, and not forward keys option which has totally different approach in mind.\nI can't see a reason for further complicating config only to specify such thing. It's not the purpose of forwarding keys feature.\nBut I won't leave you with empty hands - The algorithm actually prioritizes bots according to their names, so you can set those prorities just by ordering your bot names alphabetically, such as 1MyBot, 2OtherBot, 3YouGetNothing etc.\n. Then just use naming trick to sort your bots in proper order, perhaps I add something regarding that in a little rewritten ASF V2.0 sometime in future.\n. Just rename all related files and it's fine.\n. > I would like to farm trading cards but only for games that I choose\nUse manual farming then.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Commands\n. Everything needs to be added, but I don't add it yet as revolution is not yet finished. You can read from the code how it's used before I write proper documentation.\n. Slowly everything is being written - https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration\n. And around 50% is done ^\n. Done, https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration\n. Derp, https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.0.0-pre4\n. Yep, I fixed scenario1 in pre4, please test again.\nThank you!\n. Yes, because as I said, ASF can't guess on it's own steamID of not-yet-connected account, hence if you go \"lazy\" way with copy&paste only, then you will still need to log in. But if you help ASF by renaming, ASF will pick it up before trying to connect.\n. If you use such combination, then ASF converter will also work, and pick it up before initial stage, so we're not really losing anything now, thanks for tests :+1: \n. Whole escaping is outside of ASF logic, escaping in XML files was needed because of how XML is used, now we use JSON, and in JSON it works in totally different (better) way, so most likely it's not required anymore.\nASF doesn't even know if you escaped your password or not, it sees it how it should be, and whole serialization/deserialization is done by appropriate library.\nSo yeah, while changing the structure we also solved that one annoying issue :+1: .\n. Problem is that ASF can't guess on it's own how you want to launch it.\nFirst problem is args - args are lost when restarting, but that could be potentially fixed with some effort.\nSecond problem is more important - mono. All mono args such as -O=all are definitely lost, and ASF can't even guess on it's own if it should use mono to launch or not. This makes it quite hard also to implement auto-updates, which should work in very similar way.\nIn fact, there is undocumented !restart command, but it's undocumented for a very good reason - it doesn't work more often than it does. Most usual Windows setups should work when you call !restart, but Mono-powered environments will most likely fail, and that command is only there to remind me of finding a better and more reliable way for app restart.\n. In #48 I actually solved both of above problems. Mono args probably will still be lost, but at least ASF is able to restart itself when under Mono, so I can document !restart command and make it more reliable.\n. Agreed, will be done soon.\n. Done, !restart is now documented and should work as intended: https://github.com/JustArchi/ArchiSteamFarm/wiki/Commands\n. It's a problem of Steam servers, and ASF really can't work it around. ASF even has built-in maximum time specified for farming, IIRC it's 9 hours, so if in 9 hours nothing will drop, ASF will give up and move to the next game.\nThere's really nothing to fix from my side, even workaround which should not be there is already in, to hopefully move farming progress forward in case of Volvo fuckup.\n. BTW, because of such issue - non-realtime play time, ASF uses it's own built-in counting of time, and when you use Complex algorithm of farming, ASF will load it's initial state based on what steamcommunity returns, but will count farming time itself and stop right after reaching 2 hours (or very close to that), not when steamcommunity updates it's status.\n. Hm, the file structure is very similar, I'd even blindly say that it should work just by renaming to the same format that SDA uses, and let ASF pick it up. If it doesn't work, attach log with exceptions.\nOf course, that works only on V2.0+.\n. Excellent.\n. This is probably because of missing session object.\nHow @SuperNic333 got it working then? Or perhaps he didn't test usage of such imported authenticator?\nWinAuth integration is not on my roadmap, but if I can add it with rather easy steps then I'll try to.\n. No @Pandiora - if WinAuth is working properly then it's a matter of adding support for such converted format.\nI'll try to add it and release some experimental version soon, stay tuned.\n. It seems that it's doable, I'll check later if my idea will work.\n. Basically what @Pandiora said is correct. We're missing three parts:\n- SessionID\n- DeviceID\n- FullyEnrolled\nFirst and last one can be done easily by ASF, DeviceID will probably be needed to input by the user. I'm testing if my theory works.\n. Hell yeah, it works with just some little fixes!\n. Yeah, generating tokens actually indeed does work fine, but confirmations do not. I just fixed it.\n. Done.\nIf you tried to import WinAuth authenticators before, please remove affected Bot.db, as those imports are half-broken.\nNew pre-release should work nicely: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.0.8\nDon't forget to visit wiki in order to read how to do the import in proper way.\nPlease give feedback, as I only briefly tested it with my own authenticator, thank you!\n. It should not be happening, it's not in my case. Maybe running WinAuth duplicates confirmation.\n. Good to hear that. I'll check one more time tomorrow, if I spot your issue then I'll add proper code that would handle session refresh automatically, as restarting whole process should not be needed. Thanks for feedback.\n. Stable does not support steam authenticator. He did everything properly, but didn't test confirmations, which do not work without some extra steps added in V2.0.0.8.\n. > WinAuth BETA 3.4\n- [3.4.1] This version allows viewing and accepting/rejecting of Steam trading Confirmations.\n. I wonder how WinAuth updates those old files, AFAIK you can't add Device ID after linking is done (?)\n. Bummer, will add to the wiki then.\n. By \"works fine\", did you check confirmations? Because tokens will work fine, confirmations will not.\n. Then I tell you already that it won't work. Device ID must match, I tested it when I was trying to import WinAuth with randomly generated device id (so I wouldn't need to ask user about that).\n. I tested only random (valid) Device ID and the Device ID used during linking. First one didn't work, second one did. I assume that only Device ID used during linking will work (and by work I mean being able to accept confirmations, half-broken authenticators require only shared secrets to be the same)\n. As I said.\n\nIf you tried to import WinAuth authenticators before, please remove affected Bot.db, as those imports are half-broken.\n. As I didn't spot any issues related to WinAuth imports (assuming user follows wiki and explained methods), I'm closing this issue as it's finished.\n\nIf you spot any bugs related to that feature, please don't hesitate to post.\nThank you for feedback!\n. @BlueRaja https://github.com/JustArchi/ArchiSteamFarm/wiki/Escrow#winauth. Start can be used only when bot instance is stopped already, not when it gets disconnected from steam.\nI doubt that it's a valid bug, I'm more likely to believe in your wrong setup or Mono issues.\n. I checked my code one more time and it's not possible to happen. Any valid bot instance adds itself permanently to Bots collection, and stays there for the whole time of running process. This is either some weird Mono issue (trust me, I've already seen enough), or other unexpected situation not caused directly by ASF code. There is not even a single line that removes anything from Bots collection.\nClosing, unless you can provide any logic or reproducable case.\n(And I'm talking about starting/stopping not recognized instance here, as enabled, started but not connected bot can be stopped at started, if needed)\n. No, if that would be the case, you would not be able to start ASF instance at all.\nAND if that's just one bot instance, I'm more likely to believe in volvo fuckup. There's no logical explanation for your issue code-wise.\n. This is already possible, with recently added !2faok command :+1:.\n\nAnother option is to have periodic check for pending 2fa confirmation, but I don't like this idea\n\nI don't like this either, but I also added such option, in newly introduced AcceptConfirmationsPeriod config property :+1: \nQuestion is, if there is a need for !confirmall? I could add !2faokall but is there an use case for that?\n. I just think that nobody uses mass-listing of items on steam market from many accounts at once, I can understand primary account and maybe one-two alts, but that's it, still possible to do with !2faok and given bot instance. And yeah, if somebody asks for it, we can do it, it doesn't cost anything as everything is nicely coded already.\nDon't blame yourself, I'm adding so many updates lately that it's \"hard\" to follow all of that. Just consider creating an issue next time, so I could tell you if it's already possible, on roadmap, or if you can add it if you want :+1: \n. Too late :+1: \nThank you all for tests and feedback, new ASF V2.0 should be excellent release!\n. That's not crash, that's your bad config.\n. You still need to copy new ASF.json into your old config, I forgot to add it to the release.\n. Done.\n\nAlso, please note that you still need to copy new ASF.json into your old config directory for conversion to be successful.\n. Your issue is caused by bad config, and GitHub issues is not technical support how to use ASF.\n\nPlease refer to the wiki if you don't know how new configs work.\nIf you keep spamming ASF GitHub issues with your own problems that are not bugs neither suggestions for ASF, then you'll be blocked from posting. This is not a technical support.\nThe ASF bug was the crash caused by bad config, which is fixed already in V2.0.0.5, but it doesn't change the fact that config is bad and it won't run.\n. No, he's not using conversion at all but making new config without reading how to do so properly.\n. At least I'm happy that you managed to solve your issue.\nRemember that GitHub issues is for bugs and suggestions. Steam group is for technical support, as stated in the wiki.\n. Or just !farm which would reset only cards farming module.\nThis is somehow obsolete, for several reasons:\n- ASF will restart farming when any key is successfully redeemed\n- In regards of steam gifts, it's on a roadmap to add proper handling of that as well, so it would be handled automatically\n- If ASF is not farming anything, it still checks every IdleFarmingPeriod hours for new games to farm.\nSo I don't know if it makes sense of adding such option when we have those 3 points covered.\n. Agreed.\n. Now when cards farming module got rewrote, it should be easy to add !farm command back, so hold on - I'll do that later.\n. Bad config.\n. @Ryzhehvost \nYeah, it's the same issue. Thing is, it's not hard to actually find people who are affected by it, but the root issue.\n. TeamViewer won't help because I don't know what is the root issue and I don't even know HOW to debug it. This issue doesn't make sense to me, that's why I asked SK2 devs about it.\n. I repeat, even if I was able to reproduce it, I'd still have no idea how to fix it, because it doesn't make any logical sense to me. I'd do the same steps I already suggested to user - record debug log and look inside, but there is nothing interesting there.\n. Got it.\n14.03.2016 20:08:05 [*] INFO: CheckForUpdate() <Main> Checking new version...\n14.03.2016 20:08:05 [*] INFO: CheckForUpdate() <Main> Local version: 2.0.0.10 | Remote version: 2.0.0.7\n14.03.2016 20:08:05 [!] WARNING: CheckForUpdate() <Main> Could not proceed with update because there is no asset that relates to currently running binary!\n14.03.2016 20:08:05 [*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n14.03.2016 20:08:06 [*] INFO: RefreshCMs() <Main> Success!\n14.03.2016 20:08:06 [*] INFO: Main() <example> Not starting this instance because it's disabled in config file\n14.03.2016 20:08:06 [*] INFO: Start() <first> Starting...\n14.03.2016 20:08:06 [*] INFO: Main() <minimal> Not starting this instance because it's disabled in config file\n14.03.2016 20:08:06 [*] INFO: OnConnected() <first> Connected to Steam!\n14.03.2016 20:08:06 [*] INFO: OnConnected() <first> Logging in with default behaviour...\n14.03.2016 20:08:06 [!] EXCEPTION: OnConnected() <first> One or more errors occurred.\n14.03.2016 20:08:06 [!] StackTrace:    at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\n   at System.Threading.Tasks.Task.Wait(TimeSpan timeout)\n   at SteamKit2.HardwareUtils.GetMachineID()\n   at SteamKit2.SteamUser.LogOn(LogOnDetails details)\n   at ArchiSteamFarm.Bot.OnConnected(ConnectedCallback callback)\n14.03.2016 20:08:06 [!] EXCEPTION: OnConnected() <first> The service cannot be started, either because it is disabled or because it has no enabled devices associated with it. (Exception from HRESULT: 0x80070422)\n14.03.2016 20:08:06 [!] StackTrace:    at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo)\n   at System.Management.ManagementScope.InitializeGuts(Object o)\n   at System.Management.ManagementScope.Initialize()\n   at System.Management.ManagementObjectSearcher.Initialize()\n   at System.Management.ManagementObjectSearcher.Get()\n   at SteamKit2.WindowsInfoProvider.WmiQuery(String queryFormat, Object[] args)\n   at SteamKit2.WindowsInfoProvider.GetDiskId()\n   at SteamKit2.HardwareUtils.GenerateMachineID()\n   at System.Threading.Tasks.Task`1.InnerInvoke()\n   at System.Threading.Tasks.Task.Execute()\nThis is SK2 issue, 100%.\n. I released ASF V2.0.1.0 with HackIgnoreMachineID which should solve this issue until SK2 devs fix it in SK2 code.\nLeaving this issue open to remind me of removing my hacks once new SK2 is released.\n. This should be solved for good since 2.1.2.3+.\n. 12/03/2016 01:09:56 [!] EXCEPTION: .ctor() <bot2> Unexpected character encountered while parsing value: o. Path '', line 0, position 0.\nThe error is quite obvious, your .maFile is malformed, and it probably includes some weird character at the beginning of the file.\n. This doesn't look like json to me.\n. I'll look into that later if needed, currently I'm working on something else.\n. Of course you have to, how ASF can possibly decrypt encrypted .maFiles? Lol :+1: \n. Added a notice about that to the wiki\n\nMake sure that .maFile is in unencrypted form, as ASF can't decrypt SDA files.\n\nThanks!\n. Read wiki.\n. > (SDA also fails to parse it, throwing the same error):\nIf SDA can't parse the file then ASF will also fail, and nothing will magically get fixed here. You should poke SDA guys and ask why it fails instead of posting issue here, as your issue is not ASF issue - this is not the intended way of doing import, so it won't get fixed.\nBTW, it might be enough to just change status from null to 1, although I'm not sure if it will be enough.\n. Wiki clearly states that you have to use either SDA or WinAuth for doing import. If those programs don't work, then it's problem of those programs and not ASF. While it's not hard fixing this issue yourself, as WinAuth, SDA and ASF all use very similar formats, it's not the intended way and never was, so your bug issue is related to SDA and not ASF - because it was never stated that ASF can import android files out of the box.\nIf WinAuth works, then good for you, because you can import WinAuth authenticators with ASF V2.0.0.8.\n. No, because ASF can pick up ONLY SDA .maFile and the one generated from WinAuth. Your .maFile comes directly from your android device and ASF does not support this method. If it was claimed to be supported, it would be a bug. But it's not supported, therefore it's not a bug because you're trying to use ASF in non-intended way.\n. Are you using WinAuth V3.4+?\n. In this case your original authenticator on your mobile for some reason had that null status, and it caused problems when importing and exporting to SDA/WinAuth. You should report it to SDA/WinAuth devs, so they can correct this in next version of their programs.\n. The difference is that both SDA and ASF use the same module for interacting with 2FA, known as SteamAuth, while WinAuth does not.\nWhen importing authenticator, ASF tries to parse it as known SteamAuth module, and it adds missing bits in case of non-fully-compatible WinAuth export. In this case, I can only add a line to the wiki stating that status has to be fixed manually if it's there. SDA will not generate incompatible SteamAuth module, because it's the same being used in ASF. WinAuth can.\n. Added proper notice to documentation, that's all I can do: https://github.com/JustArchi/ArchiSteamFarm/wiki/Escrow#winauth-since-asf-v2008\nThanks for your report.\n. No, it's not possible, because confirming market listings requires access to working authenticator.\nAlso please do not use GitHub for questions. This is not technical support - support is available via steam group.\n. If we don't want to use API for that, and we most definitely don't want to, then it's another portion of reverse engineering steam client and searching which part is responsible for returning owned games of given account.\nWishlist.\n. Nice find, although steam community requests are also limited, this will be a good way if I won't find a way to do that from inside steam client.\n. With recent debugging and sniffing tools I added to ASF, reverse-engineering steam client got much easier.\n\nAs I assumed, Steam doesn't send client appIDs it owns. I also can't find any decent way to request them either, so I'll probably need to go with steamcommunity data, sigh.\n. That returns info for specific package(s), not for all of them.\n. I'd need to fire ClientLicenseList, get results, then ask PICS for all of returned packages, which sounds like an overkill.\n. \n:+1: \n. Should be added to FAQ.\n. Added to FAQ.\n. Safer alternative would involve disabling SendOnFarmingFinished and do !loot yourself. ASF 2FA defeats whole purpose of 2FA, and was added purely to skip trading holds, everything else is an extra.\nHowever, the idea is good. If SteamAuth module is capable of checking details such as who is initiating a trade, I might be able to change current approach from accepting all confirmations to accepting only trades involving bot and the master.\n. > At least make it configurable for each bot it you would implement it.\nObviously.\n. From what I see it's not yet possible to get data such as what parties are involved in confirmation, so I improved it only a little:\nWhen we're sending or accepting a trade, ASF now confirms only confirmations related to trading. !2faok and AcceptConfirmationsPeriod still accept all. This ensures that ASF won't accept any market confirmations when dealing with trading.\n. Thing is - confirmations are handled by third-party SteamAuth library which ASF is using. It's a matter of whether that library has functions ASF needs or not. Currently SteamAuth supports ID, Key and Description of confirmation. If description contains enough info, perhaps I could add description parsing module that would work. It's on wishlist though, perhaps later.\n. I've started working on this and indeed, confirmations overview (aka confirmations list) doesn't include the info we need, but there is second call available to fetch confirmation details and there steamID in shorter \"3\" form is included, available for checking.\nIn fact, I even added code for that already, just without actual logic yet. It should arrive with ASF V2.1 :+1: \n. Current mechanism works like this:\n!2faok still accepts all confirmations, because that's what it is made for.\nWhen ASF 2FA is executed in the other way, it depends which one:\n- If confirming received trades, ASF will allow only trade confirmations, and only those with tradeIDs of the ones we parsed (and accepted).\n- If confirming sent trades (e.g. !loot), ASF will confirm only trade confirmations, and only those where we target SteamMasterID.\nTherefore, I don't see a need for more safe !2faok at the moment, as ASF now tries to touch only it's own trades (as long as it's possible).\n. Why? If you FarmOffline then you're shown as offline.\n. I don't think that it'd be a good idea. Bot can't decide whether you want to reply to some user or not. It'd be annoying as hell.\n. I can't see a reason why you want to do that.\nIf you're online or playing, then you should be able to respond.\nIf you're offline and you don't want friends to message you, then you set FarmOffline to true and you're offline (your steam is offline + bot is farming in offline mode).\nI can't see a point for third option.\n. This is not the purpose of ASF.\n. What invites?\n. That's not the purpose of ASF.\n. > I don't see the point of a bot dedicated solely to process invites.\nAnd I don't see a point of adding feature you're asking for to ASF, as it's not ASF objective to process and handle friend invites.\nIf you need such feature, then I'd suggest to write your own bot for that purpose.\n. > So, if this is already implemented, just ignore this\nBot already accepts friend invites from master. And group invites are on TODO list.\n\nHow bout setting up group- and master-id with global-config and remove those parameters from bot-configs?\n\nNo, one might want to run bots also for his friend or other people.\n. ASF is supposed to be a process. If there is any valid case for config property to NOT be global, it should go to bot's config, even if in 99.9% cases it is the same for all bot instances.\n. > 17/03/2016 16:05:42 [!!] ERROR: .ctor() Your config for this bot instance is invalid, it won't run!\n. Then check why, it's explained in the wiki how config should look like, there is even a valid example on bottom of configuration page.\n. Yes, just not your local IP, but remote IP. And remember to secure it as written in config (e.g. with iptables) to limit who can access the ASF port you define, as without doing so, anybody can connect and take over the ASF process with a few commands. It's up to server administrator to secure the traffic, application is responsible only to respond to all requests.\n. Did you change hostname for BOTH client and the server?\nAlso, GitHub is not tech support.\n. \nThen you screwed up something.\n. Point 1: Are you sure that the IP is the remote one? The one you use for connecting to the server?\nPoint 2: Are you sure that there are no firewalls or other things that can disrupt the connection?\nBasically, ASF offers 4 types of binding:\n1. 127.0.0.1 aka localhost - only same machine\n2. 192.168.0.1 or likewise - only LAN\n3. 1.2.3.4 or likewise - internet\n4. 0.0.0.0 aka \"any interface\"\nIf server is not throwing any exceptions, then it's listening for incoming connections. You can check it e.g. with netstat -tulpn\n\nIf netstat is reporting that ASF is listening, then ASF is working, and everything else is related to networking.\n. At least you know what the issue is, so you can now solve it.\n. I'm not using windows server, so I'm not even sure how to help you apart from suggesting Google.\nYou can always use linux :laughing: \n. Hm.\nI somehow like that idea but we'd also have to limit all given bot instance commands to owner as well.\n. \n. Done in https://github.com/JustArchi/ArchiSteamFarm/commit/c88d9bf123a3ef599d138e3776ad5afddf5f9a5d\n. And available for tests in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.1.2\n. TL;DR before I write documentation:\nThere are two access levels now: SteamMasterID and SteamOwnerID. Every bot listens only to his SteamMasterID. Global commands such as !exit, !update and !restart are reserved for SteamOwnerID only. WCF works with SteamOwnerID access.\nIt's nice to note that master of bot 2 can use given bot instance command on bot 1 which relates to bot 2 and get valid response.\n. Actually forgot to disable the old check done at chat msg.\n. But executing commands should still work. I mean broken part was only using bot2 to execute commands on bot1 while not being master of bot2.\n. It's already fixed and will be there in next version.\n. > Because now everyone would need to modify their configs\nNo, you can leave it as it is, only global commands will not work. Also it's modifying one config property, if that's too much for somebody, then probably using ASF is too. Besides, nobody is forcing anybody to update, if you decide to update, then you should also prepare for reading changelog and making required changes (if any) to keep using ASF. All versions are available, and updates are not enforced, you can even use ASF V0.1 if you like.\n\nAnd, mr. @kofe88 told me that commands from Owner does not seems to work via group chat\n\nYep, confirmed, I have a fix ready already.\n. And fixed in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.1.3\n. > Is somebody have like a few dozens of bots - it can be inconvenient\nNo, it can't be inconvenient, because it's global config property, and it's one file.\n. It's a bit different.\nIf you want to execute command considering bot1, then you need to be either SteamMasterID of that bot, or SteamOwnerID of ASF. Commands considering bot1 include commands sent to it directly (current bot instance), and also commands sent to it indirectly (given bot instance), through e.g. bot2. So user doesn't have to be SteamMasterID of bot2 in order to use given bot instance commands considering bot1 such as !stop bot1 or !redeem bot1 key sent to bot2. This is convenient, as you can have a combo of primary1, alt1, and primary2, where you own primary1 and alt1 and your friend owns only primary2, this way he can send to alt1 a command such as !stop primary2 and it will work, even if he's not a master of alt1.\nWCF is executing commands always as SteamOwnerID specified on the server.\nIt's very easy to understand - master has control only over his bots, but can use other bots as \"helpers\". Owner has access to everything, and commands executed by WCF are run always by the owner.\n. ASF does not track that info.\n. Splitting - no. Log file is supposed to be one, as it has a simple purpose of providing me with debug info if needed.\nWhat I could be doing is enable/disable log file in global config, and that's it.\nIf you need separate log files, you can always catch stdout + stderr and apply your own filtering and logic. For example by grepping only for commands containing <yourbot> or [!].\n. And available for tests in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.1.2\n. BTW, Nightly Mono works properly (again). I wonder for how long.\n. Oh boy, it looks like ASF 2.1 will break more things than I wanted initially... :laughing: \n. > if someone after 3-5 hours realize this may be the case !skip could be quite useful\nWe have !farm already.\n\nAnother would be !blacklist that will also update the config file with new appid that is\n\nConfigs shall never be touched by ASF. They're meant to be read-only.\nIn short, you basically ask for implementing a way to skip current game farmed and proceed further. This is not going to happen. ASF is meant to farm \"everything\" it can, and for the same reason why I don't implement any fixed order of farming (such as farm by number of cards, by game names, by appIDs, by cost of cards in the store) I'm not going to add any way to alter the algorithm that is being used.\nYou want to farm specific appIDs? Use !play. You don't want to farm specific appIDs? Use Blacklist. You want third variant? Use another program, as ASF is supposed to farm everything. I don't need to further complicate and alter behaviour of two implemented algorithms only to allow user to choose what should be farmed. This is what manual farming mode is for, and it's already implemented. Don't expect from me to implement something that I have no use for, neither I can see any practical usage, especially if what you want to achieve is already possible with minimal effort.\n. Then you won't only get \"Not going to happen\", but also \"Duplicate\" - https://github.com/JustArchi/ArchiSteamFarm/issues/83\n. And !farm didn't work most likely because you were running in manual farming mode, and of course forgot to disable it, as I read in one of your previous issues.\n. It did for me, should I mark it with \"Can't reproduce\" too? :laughing: \n. Anyway, as I answered your question, linked to duplicate issue considering what you want, and we have !farm already, closing this.\n. SK2 doesn't seem to support connecting to steam via proxy.\nBTW, steam doesn't support that either. So however you run steam in your situation, you should have same luck running ASF in this way.\n. While it's not on the roadmap, it doesn't mean that I'm not interested in helping.\nI've just released latest pre-release with new config property: SteamProtocol. I noticed that steam by default uses UDP protocol, and this is also what you might be using in your proxy program. So while steam client uses UDP only in your case, you can now switch between TCP and UDP in ASF - more in the wiki. Hope it helps, good luck!\n. > Add/Edit/Remove user/config\nThis is already possible with above app.\nAbout 2 other ones, I'll see what can be done.\n. I couldn't find any bugs myself, it seems that config generator works good for now, perhaps in future it can be extended by extra functionality. Thanks for tests.\n. I already reported it to M$, now twice. Blame your AV for false positives.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/83\n. > The operation has timed out\nClient could not connect with Server, be it because of you forgetting to start WCF, providing wrong IP/port, or for any other reason.\n. No, I can see that client sent the command, I can't see in your log that server received it.\n. Actually after double checking that's right, I forgot to return the result and response is awaiting for cards finish instead of returning after executing the task.\n. And done, thanks for report.\n. Should be fixed in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.1.6. If you have AutoUpdates with Experimental channel enabled, be sure to !update.\n. Well, ASF is exiting the process, so it also closes the WCF connection, I should probably exit WCF server before exiting process though. Misc issue.\n. Would make sense if Valve returned any values with point, but they don't, so it's pointless to try to guess what is wrong. Moreover, sometimes even they mislead ASF by returning WRONG error codes, such as InvalidPassword which can mean everything. And I'm not going to confuse user and myself with something that doesn't make sense.\nBesides, if failure is common (and that one is), it's explained in the FAQ.\n. SteamKit has nothing to do with what you're asking as it's HTTP part, and it's out of scope of SK2.\nAnd if you're referring to InvalidPassword, then yes, it's the same error code for: invalid password, invalid login key, requirement of captcha, rate-limiting and more. Hence, sometimes ASF is even forced to guess what it is, such as removing login key before being sure that it's rate limiting.\n. I meant part instead of port.\nSK2 is responsible for steam client, accepting trades is happening in ArchiWebHandler - a code written by me which interacts with steamcommunity. Anything based on web-browser is out of the scope of SK2, and it's impossible to accept trades from client itself. Therefore you get zero support from them regarding steam trades.\n. Then you're searching in wrong place because you won't get any useful information from Valve.\nYou can check DeviceID of _SteamGuardAccount saved in BotName.db. If it's null then linking didn't end properly and has to be redone.\nIf it's non-null, then good luck because you're on your own - volvo fuckup.\n. Not CellID, _SteamGuardAccount, sigh. In your bot database.\n. Faceplam.\nHow many times I need to repeat that it's inside bot database? Why are you searching in ASF.db?\n. > You can check DeviceID of _SteamGuardAccount saved in BotName.db\nDo we have different githubs?\n. Then perhaps you should refresh the site, because I corrected that mistake like 20 minutes ago.\n. No, that object is the only one that is being responsible for ASF 2FA.\nYou can use any JSON parser online to format that \"condensed\" stuff that ASF is using into something more human-readable.\nIt's Volvo, get used to steam fuckups, I'm already used to that, and instead of getting pissed off at GabeN because of Steam throwing nonsense errors, I just laugh loudly.\n. https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.1.8\n\n\nDebug mode now logs extra info about failed requests.\n\n\nThat is all I can do, good luck.\n. That's not the purpose of ASF.\n. Ask Steam.\n. BTW, based on log it looks like SteamClient could not disconnect itself, I can see that Disonnect request timed out. Are you running ASF on Windows or on Mono?\n. Enable Debug mode and try to reproduce the problem, then pack whole debug directory together with log.txt and send it to my e-mail: JustArchi[at]JustArchi[dot]net.\nKeep in mind that debug directory contains sensitive information, so don't upload it in any public place.\n. Got it. I still suspect that it's your network/firewall or Steam directly cutting the connection, but I can look into that issue.\n. You forgot to include log.txt, which is also crucial. If you still have the log from last run when debug log was recorded, please send it, otherwise reproduce the issue again, this time sending both debug directory and log.txt, thanks.\n. 23.03.2016 21:55:48 [!] WARNING: OnLoggedOn() <qwerty> Unable to login to Steam: ServiceUnavailable\nSteam is experiencing some problems, try again later.\n. https://travis-ci.org/JustArchi/ArchiSteamFarm\n. Besides, something is killing your process, I suspect because of lack of RAM or similar, are you REALLY reporting that issue here?\n. I don't know \"what\", maybe OS limitation, maybe Mono bug - I have set up compilation of ASF via both travis and appveyor, building on both Windows and Linux/Mono + Mono latest and weekly (nightly).\nIf build was not passing, I'd get a notification about that. That's the whole purpose of setting up continous integration, you can check anytime if build is (or should be) passing.\n. At the moment build is passing on both Windows and Mono, including latest stable and nightly Mono version, which you can check on the main ASF page under appropriate badges. Build status is public for everyone and build is scheduled on each pull request, commit and release, so if there is any code mistake or something that breaks the build (be it under Windows, Mono, or both) - you'll see appropriate notification.\n. Yes, you didn't set SteamOwnerID.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration\n\nDefault value of 0 specifies that there is no owner of ASF process, which means that nobody will be able to issue global ASF commands.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/WCF\nWCF is always executed with SteamOwnerID permissions, which is 0 by default. In order to use it, you should set SteamOwnerID to the same non-zero value both on server and client machines (if they're not the same).\n\nI added above just now, as I forgot to put that note when I was implementing SteamOwnerID\n. You either renamed ASF.exe, or you're using self-compiled ArchiSteamFarm.exe which is not supported by the update. As a security measure, ASF refuses to update because it can't be sure if currently running binary in fact should be updated.\nAlso your Mono is very old, and it's almost guaranteed that you'll run into errors.\n. Glad you sorted it out.\n. You're hitting Valve limit of connected steam clients per IP, nothing will help you with that.\nYou can try increasing LoginLimiterDelay, althogh I doubt that it will help much with such massive amount of bots.\n. > Why can I connect with the other asf instance from the very same network?\nAsk Volvo. There is no limit inside ASF that would enforce you not being able to connect. There is no bug and nothing will get fixed - it's steam prohibiting your bots from logging in, not ASF.\n. Not \"now\", it's like that since always.\n3 possible ways:\n1. mono ASF.exe &>/dev/null &. The core change is & sign which tells shell to run command in background. &>/dev/null is an extra so it won't spam your console and be quiet.\n2. screen -dmS ASF \"mono ASF.exe\". This way you also start ASF in background, but you still have logging to console on. You can switch to screen with screen -r and from screen with CTRL + A + D\n3. mono-service mentioned by @v3rg above.\nPersonally I suggest first one. You can read the log from ASF logfile, and it doesn't require any extra things, such as screen or mono-service. Even though both of those should be already available for you.\n. Raspberry Pi is non-standard ARM device, and you can't use Mono from Xamarin, as your device doesn't fully implement the standard of ARMv7.\nYour best bet is switching to debian testing branch and using mono from there, and remember to use raspbian and not debian because it's exactly the same story.\n\nArchi will tell you this isn\u00b4t the Mono-Support\n\nAlso this, while I'm always happy to help with Mono issues, potentially helping solving problems, this is out of the scope of ASF as you should be the one who ensures that Mono is working on your system. Raspberry PI is special case, as you're indeed trying to use latest Mono, but you can't because of your device.\n. So, in short\n1. Install clean latest Raspbian for your Raspberry Pi\n2. Switch \"jessie\" to \"testing\" in /etc/apt/sources.list\n3. Do apt-get update && apt-get dist-upgrade && apt-get autoremove --purge\n4. If you didn't break anything yet and your system works properly after reboot, do apt-get install mono-complete\nThe mono you will get from testing branch is NOT the latest Mono, but it's recent enough to run ASF without problems. Last time I checked it was version 4.2.1.\n. Log or didn't happen.\n. Also I'm more likely to believe that your config is wrong, rather than it doesn't work.\n. 1. !statusall doesn't work because you didn't set up SteamOwnerID in ASF.json properly.\n2. AcceptGifts does not exist in ASF 2.0.1.9, but 2.0.2.1+.\n. Until it's solved, support for UDP protocol is experimental - https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration\nWhich means that I'm not accepting any bug report related to networking when running in UDP mode, especially bugs with stacktrace very similar to the one posted by me above.\n29/03/2016 23:36:04 [!] EXCEPTION: UnhandledExceptionHandler() <Main> Unable to decrypt incoming packet\n29/03/2016 23:36:06 [!] StackTrace:\n   em SteamKit2.NetFilterEncryptionWithHMAC.ProcessIncoming(Byte[] data)\n   em SteamKit2.UdpConnection.DispatchMessage()\n   em SteamKit2.UdpConnection.ReceiveData(UdpPacket packet)\n   em SteamKit2.UdpConnection.ReceivePacket(UdpPacket packet)\n   em SteamKit2.UdpConnection.NetLoop()\n   em System.Threading.ThreadHelper.ThreadStart_Context(Object state)\n   em System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   em System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   em System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   em System.Threading.ThreadHelper.ThreadStart()\n29/03/2016 23:36:06 [!] EXCEPTION: UnhandledExceptionHandler() <Main> O comprimento dos dados a desencriptar \u00e9 inv\u00e1lido (Translation: The length of the data to decrypt is invalid).\n29/03/2016 23:36:06 [!] StackTrace:\n   em System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount)\n   em System.Security.Cryptography.CryptoStream.FlushFinalBlock()\n   em System.Security.Cryptography.CryptoStream.Dispose(Boolean disposing)\n   em System.IO.Stream.Close()\n   em System.IO.Stream.Dispose()\n   em SteamKit2.CryptoHelper.SymmetricDecrypt(Byte[] input, Byte[] key, Byte[]& iv)\n   em SteamKit2.CryptoHelper.SymmetricDecryptHMACIV(Byte[] input, Byte[] key, Byte[] hmacSecret)\n   em SteamKit2.NetFilterEncryptionWithHMAC.ProcessIncoming(Byte[] data). This should be fixed by now.. Correct, I didn't test this option in long-run yet.. SteamOwnerID is not set or does not match between server and the client.\n. It might be, but this is security measure, as random user can't type a command to some bot via steam chat and get response such as \"not authorized\" which would tell him that the account is using ASF.\nOf course, I could add a hundred of extra code lines, just to respond with appropriate message via WCF, but I like to keep my code clean and simple.\n. Possible - yes, but that's not the purpose of ASF. There is a thin line between being useful and coded in good faith, and between a tool making it easier for abusers to keep taking all free keys offered in a promotion.\nI don't see a need for such feature to exist in ASF. ASF already makes it a lot easier by allowing farming multiple accounts, redeeming multiple keys, automating trading and doing hell lot of other things. There's really no need to simplify it even further.\n. GitHub is not a place to ask for ASF support.\nCheck http://steamcommunity.com/groups/ascfarm/discussions/1/405693392916924930/ and especially http://www.steamgifts.com/go/comment/otxfhRH for more help regarding your issue.\n. This command is for games that client is capable of redeeming. Games you listed are redeemable through steam store only.\n. It doesn't have to work, the purpose of that command is to send client request, whether that request is accepted or not is up to Steam.\n. Also !owns doesn't list free games IIRC.\n. Yes, if you played them they should be listed, API works the same way. That doesn't change the fact that command works as supposed to, which doesn't match what you want from it to do.\n. \n. \n. Everything works like it should.\n. No, it's Valve killing chats every once in a while.\n. One of the reasons why !rejoinchat command exists.\n. Notice: You might need to perform manual update if you used experimental versions of ASF 2.0.2.8-2.0.3.0, there was a bug making it impossible for ASF to perform auto-update, which was fixed in ASF 2.0.3.1. Stable users are unaffected (as they're doing 2.0.2.4 -> 2.0.3.1 switch).\n. You didn't set up SteamOwnerID.\n. You probably screwed up something with your config because it's working perfectly fine here.\n. https://github.com/JustArchi/ArchiSteamFarm/commit/e9d8f271a2b5f468498853747e954464a668fe92\nYou might want to try latest pre-release :+1: \n. Looks good to me, for sure there are lots of things that could be improved, I'll try to integrate it a bit better with my build process and ship in ASF.zip :+1: \n. I don't know either but it definitely won't hurt to improve the check.\n. I was wondering if I should add a check for SteamMasterID in this case, but in the end decided that I don't want to deal with steam fuckups at all, it's better to ignore broken trade and don't bother with it, who knows what could happen if we accepted it.\n. Causes crash when run via final output binary, cirno.ico can not be found. Not merging until it's fixed.\n. I removed the GUI app from final zip until it's ready and fully working. It's throwing too many exceptions everywhere, not only icon but also unhandled situations which are not properly caught. I don't need people spamming me with issues I'm not interested in. I'm fine with the project staying in ASF repo for other devs and you to fix it, but I'm not shipping it until everything is done, I hope that you understand why I'm forced to do that.\nFeel free to improve your app, and perhaps we can release it when it's ready to do so.\n. You're free to work on your app in order to improve it and send pull requests every once in a while when you feel like you've reached some milestone. I don't want to distribute it myself as it increases number of general issues and questions people are having.\nHowever, that doesn't mean that I'm not happy to help you. Feel free to create a thread on SG, and also thread in my steam group if you like + distribute your binaries there. If you ever need any function from ASF then you can suggest it or implement and send back in pull request, as it's not my intention to make your work harder. I just don't want to see people getting confused and reporting issues I have no intentions to fix, as I already have enough to do with ASF itself.\nI integrated your GUI app into ASF build process, using ILRepack back is uncommenting two lines I added in recent commit. I'll be happy to ship it officially when app will be in more usable state - refactored, being less prone to exceptions and errors, you know what to do :+1: \n. Probably it has something to do with an exception. Latest version?\n. I think I know what's the root cause.\n. Just restart it, I found the culprit already. It's ultra rare though.\n. Thanks for reporting :+1: \n. Should be fixed in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.3.3\n. It was intentional. Using keys forwarding is bad idea in general when distributing keys, but if that's the case, ASF tries to use as little keys as possible by keeping them unused.\nFor example, if we had 3 keys and only 2 bots with missing game. Only first two keys would be used instead of third one, as last bot would have the game already from one of the previous ones.\nLikewise, if one of those keys would be used, and forwarding keys was on, eventually that bot would get the game, because last bot would try to activate last key, notice that it has the game already, then forward it to the bot that was unlucky to receive duplicated key.\nIt works similar, just with a bit different way, but goal will be almost the same, with one major difference - you can now keep unused keys for later, as they're redeemed in order instead of leaving potentially unused keys in random places. That comes with a cost of altering that behaviour a bit, but in the end I think that advantage is good.\n. Also side effect, ASF is now less likely to get block from duplicated keys, if you provided 5 keys to 5 bots, and all of them would be used, bot 1 would try to redeem all keys (and get potential lock), while with current mechanism, ASF will switch both key and the bot, making bot 2 trying to redeem next key, resulting in every bot getting only one hit from duplicated key instead of first bot taking all 5.\nThis is also very good imho.\n. So the only thing which is bad in current logic is the fact that bot switch is also done on duplicated key, while it should switch the key only, can be done.\n. That should make you happy, feel free to confirm if it works the way you want now :+1: \n. Basically what I changed is the fact that if key is invalid or dupe, bot is not changed (only key), if key is OK, both bot and key are changed.\nForwarding keys is not altered as bot will not try to forward dupe or invalid key, so there's no way that dupe or invalid key will hit keys forwarding mechanism (unless bot already owns the game or is e.g. on cooldown, but in this case it doesn't matter anymore anyway)\n. I double checked if current logic works the way you want and it seems OK to me (according to your explanation), but feel free to further explain if it doesn't work the way you want.\n. I'm glad to hear it then :+1: \n. There is no option currently because there is no reason why you'd be talking to the bot without wanting anything from it. The purpose of ASF bot is to receive commands and respond to them, not smartly guess what is a command and what is not. The behaviour you listed is intended and was created for the simple purpose of copy-pasting keys to the bot without a need to specify command or specific ASF syntax for separating keys. I even wanted to treat every message that doesn't start with ! as a cd-key for !redeem, but in the end decided that people probably would not understand the meaning of that, so I added a validation that checks if your text message could be cd-key, and if yes, tries to proceed as with !redeem.\nThat behaviour exists since first version of ASF, and many people including me are used to that. There is no logical reason why you'd want to keep bot receiving your messages and NOT responding to them, ASF gives you option to define both SteamOwnerID and SteamMasterID in order to fine-tune to which steam accounts ASF bot is even listening. This works very well because it doesn't sacrifice convenience, while removing of smart auto-redeem does. For example previous way of being able to copy-paste list of 20-cdkeys separated by a newline, will now result in a need of transformating all of that into !redeem key1,key2,key3...keyN command, which is far less readable, not to mention that you need to put more work in sending such command.\nI'm open for discussion of other devs and users what they think about current behaviour, and if it should be changed, especially people who know the principals of ASF such as @Ryzhehvost. Removing the current mechanism is as easy as commenting out one line, the question is if we want to sacrifice convenience for potential \"sacrificial\" need of accepting the fact that you could be talking to the bot without expecting any response. I'm neutral towards that, and my neutrality means that I'm actually against doing the changes, simply because people are used to old ways and we should ask why we should change something that already exists, and not why we should keep it the way it is now. If there is not enough benefit for favoring the approach which changes things, it should not be followed.\nAs above, I'm open for discussion, especially discussion which considers more devs and users, as it's very crucial to see other point of view when deciding upon such thing.\n. I improved the way how keys are detected, thanks to @GUiHKX - this should decrease amount of false-positives with 2+ dashes greatly, while still catching all valid cd-keys for redeemption. Thanks!\n. ASF is not able to smartly guess when your space means a separator for arguments in command, and when it's your own mistake that should be corrected.\nAdding a fixup logic would mean also adding hidden bugs and unintended behaviours such as ASF ignoring valid whitespaces that could be used in future for separating more arguments.\nAlthough I have an idea that could work, let me check.\n. Bash is shell interpreter, and not C# programming language. It works in totally different way and doesn't split on spaces, instead, is using getopts.\n. \n. That should fix your problem, while still not breaking the way how everything works :+1: \n. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ\n. Game reported by cd-key activation can be totally different than the one owned by the account. Sometimes it doesn't make any sense and ASF is not able to check if account owns specific game or not. I already activated packs reporting as \"Unknown PackageID XXXXX\".\nBesides, it'd dramatically increase memory usage if ASF was about to check all it's owned games before trying to activate the game, I bet you didn't try !owns command for 3k games account - I did.\nIf you want such thing, then do it yourself with !owns command instead of expecting from !redeem to know better when to activate key and when not.\n. > The system detected an invalid pointer address in attempting to use a pointer argument in a call\nAsk your OS why your .NET framework is not working properly.\n. http://support.savance.com/index.php?/eioboard/Knowledgebase/Article/View/215/22/winsock-error---the-system-detected-an-invalid-pointer-address-in-attempting-to-use-a-pointer-argument-in-a-call\nI don't know what else you need to do, because it's your system that is broken and not ASF. If nothing helps I suggest to either reinstall Windows and try again, or install Linux. I simply don't know what is wrong because I've never seen similar issue and as you may guess, nobody before had similar issue as well. Perhaps installing latest .NET as pointed out in wiki could help, but that's only a blind guess.\n. !pause simply causes ASF to switch to manual mode (and do nothing more), it's exactly the same as executing !play 1337 or other invalid appID. So I can't tell you if bot is paused, but I can tell you if it works in manual mode :+1: \n. As @Ryzhehvost pointed above, you have given bot commands for that purpose, and you don't have to include all your bots on your friendlist. If you decided to use WCF, you don't need even one.\n\nPS I have donated you today.\n\nIf you expect me to do something only because you donated, then please don't donate anymore. Donation is supposed to be a reward for what you already have, not a payment for what you want to achieve. ASF is a free project and I'm not being paid to develop it.\n(Which doesn't mean that I'm not grateful for that)\n\nPSS Why u don't want add me?\n\nIf you read my profile description on steam, then perhaps you would know.\nBecause of no practical use case, this enhancement is not going to happen as what you want to achieve is already possible with alternative built-in methods.\n. > How to give gifts without adding to friends?\nIf you don't want to or can't have all of your bots on your friendlist, then use another bot for that purpose, and it doesn't require even changing SteamMasterID, as ASF bot accepts gifts from everyone.\n. > I have tried to use SDA or ASF for autoconfirm, but it don't work\nThen perhaps you're doing something wrong because it works perfectly fine for all of my accounts, and for many other people as well.\n\nI can buy gifts on a single account, then I have trade to another bot, and then i should gift from this bot to another bots, but it is very inconvenient\n\nIndeed, that's why I don't know why you're making it so hard for you. Removing a bot from your friend list and sending friend invite to some other bot (which ASF accepts instantly) doesn't require much effort - it requires far less effort than buying a game for that account. Maybe instead of suggesting non-practical things and making your life harder you could make more room on your friend list, because I can't believe that you're having more bots than 300, which is minimum friend limit.\nIf you decide to not having a bot on your FL, because of any reason, then it's your choice and you should not expect from ASF, cards farming program, to manage your friend list. Friend limit is not a valid case, because you're starting from 300, and likely you have at least double of that with some steam level. You're trying to workaround a problem that doesn't exist, so don't expect from ASF to help you in that. ASF already helps you a lot by automating million of things, while it should stick with cards farming only. There is a point where I simply say \"no\" because it goes greatly out of the scope of ASF, and that's exactly this point.\n. > why can not you add some features to order\nThen I'll leave you simple answer - because that's not the purpose of ASF. Why you won't add rocket engine to the car? Because car is not supposed to fly.\nThat's it from me. As I can't see a point for further discussion, I'm leaving this issue here.\n. Great, so now that you decided to look for a programmer, go look somewhere else.\n. https://www.steamgifts.com/go/comment/FHFNqIy\nMy point stays.\n. Consdering point 2 and 3:\n\nEnable foil trading cards or not\n\nWhile I agreed that profile backgrounds and emoticons in fact vary in terms of price, and ASF should not automatically decide whether you want to do a trade or not, foil cards are supposed to be random and every card should have the same value. Of course in practice it's not the case, but while emoticons have different value for everyone - every foil card is exactly the same and it's pointless to add extra logic to that. You could as well state that you don't want to accept normal trading cards trade because your card is worth 0,01 euros more than the one you're receiving. It's the same with foils, and if you want to profit on them, then as I posted above - ASF STM is not for you. And if you do not want to profit from them, then foil card A is not any different from foil card B assuming they're from the same set.\n\nOptions to output verbose / independent logs for trading details\n\nThat's not needed, the logic is very well documented in the code, and there's no need for ASF to explain why it decided to accept the trade. I encourage you to read through my code if you're curious on what factors ASF decides whether trade is worthy or not. If you ask about STM integration alone, ASF is accepting all trades when we're not losing anything, including neutral trades. It's all well documented.\nIn short, ASF is accepting trade if our items to give value is greater than items to receive value. Value is determined by number of cards from that type. If we have 1:1 trade, trader wants from us card A and he wants to give us card B, ASF will be happy to accept the trade as long as our amount of cards A is greater than our amount of cards B. If it's \"only dupes\" trade, then we have value of 2 in A, and value of 0 in B, 2 > 0 -> trade accepted. If it's neutral trade, then we have 1 card A, and 0 card B, 1 > 0 -> trade accepted. The first trade that won't be accepted is if we have cards A and B, trader wants A and wants to give us B, as we'd end up with 2 cards B and 0 A now, so that won't be accepted (1 > 1 is not true). However, if he proposed card C instead (which we have 0), ASF would accept once again (1 > 0).\nAlgorithm works really well and there's no need to tweak it further, as it also considers several other factors, such as amount of items in trade or if the trade is valid before even checking it's own EQ. So it's not possible to scam the bot, in worst case, it's possible to send 2 or more trades at the same time, and because ASF is parsing them asynchronously, you might \"trick\" it into accepting two 1 > 0 trades, which would result in unwanted situation. That's however misc, as you're not losing any real value, only receiving more dupes. Not to mention that it's very hard to achieve. I could make it synchronous, but that would degrade performance, and would not ensure that e.g. you're not accepting other trade at the same time, so it wouldn't be a solution for the problem. Also, even if that did happen, sooner or later some other user will want that now-dupe card, which will result in happy for us situation, so it's not a problem.\n. Feel free to further discuss the case if you want, but as for now I'm not interested in making any of that, for reasons stated above, so I'm closing the issue with \"Not going to happen\" tag, unless I decide otherwise.\n. > but I don't feel like mixing foil cards in it\nWhy? What it so disturbing for you in 1:1 foil cards trade?\n. > cards are supposed to be random and every card should have the same value. Of course in practice it's not the case, but while emoticons have different value for everyone - every foil card is exactly the same and it's pointless to add extra logic to that. You could as well state that you don't want to accept normal trading cards trade because your card is worth 0,01 euros more than the one you're receiving. It's the same with foils, and if you want to profit on them, then as I posted above - ASF STM is not for you. And if you do not want to profit from them, then foil card A is not any different from foil card B assuming they're from the same set.\nI don't care what market prices are - those cards should have exactly the same value in long run, because they're assigned in exactly the same way and for exactly the same purpose. If one card is more profitable for you than the other one from the same set, then ASF STM is not for you.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/186\n. And if you can't connect over TCP then probably you're either behind firewall or other thing that is limiting network access. If you want to get further help please use steam group, as github is for bug reports only, and this one is duplicate, while your TCP issue is not a bug.\n. Then maybe update it instead of using outdated version?\n. This won't optimize in any significant way network usage of ASF, as network usage of ASF is mostly based on badge pages and games pages, those two requests are probably the only ones that could be adapted to use HEAD, and it complicates things further because of need for new methods in my WebBrowser\nWishlist.\n. As I initially suspected, MarkInventory() and IsLoggedIn() are the only 2 methods where such change is even possible, as everything else depends highly either on content of GET, or is using POST messages.\nIt won't result in any significant improvements as those requests are not heavy, but I followed your suggestion anyway as better performance is always nice. I'll need to test it carefully though.\n. Also released new pre-release dedicated to testing if this commit didn't break anything: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.4.1\n. BTW, if you want to reduce your network usage then FarmingDelay is the most important variable as it directly affects the frequency of one of the most heavily used request - the one which checks if all cards are dropped already. Increasing it from 5 to e.g. 15 should result in much less bandwidth usage, for the cost of being less-precise and wasting up to 15 minutes after game is fully farmed, of course.\n. /my also works with several other things - ASF uses it in various places, and when we expect to land on profile it should be stated, just in case Valve decides to change default link to something like home or whatever.\n. I can't notice anything abnormal, everything seems to work properly, both session refreshes and inventory marking, which is good :+1: \n. Web API requires api key, and I want as little dependencies as possible, current method also works without API key and that's the only reason why I decided to use it instead.\nBesides, I don't even know if API way solves this issue. If it does, I could enhance current way so ASF tries to use API key, if key is available, otherwise falls back to current mechanism.\n. Can you check if API lists your own games even if your profile is private?\n. Then I'll do that as I initially wanted.\n. Yeah, that's side effect of using proper API to do that. If Valve only had such option without a requirement of API key then it would be much easier.\nStill, improvement is there for those who put API keys.\n. This is not the purpose of ASF.\n. ASF is doing that since ever.\n. Or wait, if by manually you mean by yourself, then no, that's not going to happen, you have !2faok for that.\n. Besides, I have no idea why you're doing it that way, if you sent Master->Bot trade, then ASF bot would accept such trade and confirm it automatically.\n. Mono issue, nothing to fix in ASF.\nI don't know what Linux distribution you have there, or whatever you have there, but perhaps newer version of Mono will work, if you have access to such. You can try nightly channel for example, it works (for now).\n. Latest beta for Synology NAS does not mean that it's latest Mono version.\nmono --version ?\n. Nevermind, I noticed above.\nI've seen your issue already in some older versions of Mono, that's why I'm sure it's Mono bug. Besides, your version is not latest one, latest one is 4.2.3.4 - https://travis-ci.org/JustArchi/ArchiSteamFarm/jobs/127521297#L1003\n. And what to report? To Mono team - nothing, to your maintainer of providing you binaries for your Synology NAS - that Tasks are broken. As stated in the wiki, you're the one who must ensure that ASF is run in bugless environment, I'm not even able to help you because I'm not Mono developer and I don't know why one version is broken and another one isn't. You need to find out yourself, or live with buggy ASF, which may, or may not, work correctly. Your issue is not caused by any ASF bug, therefore this issue is considered closed - GitHub is not ASF technical support.\n. You can't link ASF as the only authenticator on steam parental-restricted account. You also can't confirm trades with ASF 2FA if your account is restricted.\nThis is not a bug - https://github.com/geel9/SteamAuth/issues/37, this is missing functionality that should be added in the library that ASF is using, but I'm not maintaining that library myself, so there's nothing I can do.\n. I'll correct wiki a bit though, so thanks for that :+1: \n. Corrected wiki to be more precise on the limitation.\n\nCurrently ASF 2FA doesn't work well with accounts restricted with steam parental PIN. You won't be able to link ASF 2FA as new authenticator if that feature is enabled, you also won't be able to confirm trades or market listings. Therefore, it's not recommended to use ASF 2FA with steam parental together, although if you're extremely determined then you might be able to use half-broken authenticator, as generating tokens works fine. Still, I strongly suggest to disable steam parental if you want to use ASF 2FA. Perhaps this limitation will be solved in future releases.\n. If you ask me, I'd suggest to decide whether you want ASF 2FA or SteamParental. ASF will work properly with SteamParental accounts, only ASF 2FA doesn't, so it's not a problem for ASF but SteamAuth module being used by ASF 2FA.\n\nPersonally I think that it won't hurt to use something like SendOnFarmingFinished and confirming manually with your phone, but I don't know your use case - you need to decide yourself.\n. Done as a part of #252.\n. Your Mono doesn't support .NET 4.5, and you won't be able to compile ASF without proper .NET 4.5 support, as the entire project relies heavily on it.\nAs stated in the Wiki, only latest version of Mono is supported. If you can't get it, you also can't run ASF, not to mention compiling it.\nI don't know your platform well to state what you can do in order to solve this issue, but until you get Mono and xbuild capable of compiling and running .NET 4.5 targets, you won't succeed.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ#issues\nAnd no, I have no solution for steam fuckups. You can try relinking account by removing bot.db and repeating the process, but the best solution is importing your authenticator and using ASF 2FA, this way ASF can automatically generate tokens.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Escrow\nAnd if you don't want to do that, then deal with the problem yourself.\n. Perhaps you should increase LoginLimiterDelay or HttpTimeout. Nothing changed between that version and current one apart of some default values for those two.\nThere's also nothing to fix as ASF is on Steam Network's mercy.\n. https://github.com/JustArchi/ArchiSteamFarm/compare/2.0.1.2...2.0.1.3\nNothing considering ArchiWebHandler changed.\nProbably it's either temporary Steam problem, or they changed something recently that broke API call for more accounts.\n. You could make use of ForceHttp and check yourself with Wireshark or Fiddler if there is anything different between those two calls that would make it more prone to problems.\nIf the API was handled by my WebBrowser, I could point some possible culprits, but because API is entirely built-in SK2, there's no reason why it should suddenly start failing. I didn't hear from others users about similar problems as well.\nAs I said, consider tweaking LoginLimiterDelay and HttpTimeout. It's quite possible that Steam just got more restrictive since last time.\n. Probably it freezes here - https://github.com/SteamRE/SteamKit/blob/master/SteamKit2/SteamKit2/Steam/WebAPI/WebAPI.cs#L295\nI suspect it might be because SK2 devs are not setting proxy - https://social.msdn.microsoft.com/Forums/en-US/a00dba00-5432-450b-9904-9d343c11888d/webclient-downloadstringasync-freeze-my-ui?forum=ncl\nThis makes sense because it's not request being slow, but logic before sending it.\nHowever, that is out of the scope of ASF, because method is used properly and logic relies on SK2. You might want to test it further in your own SK2 projects and report to SK2 devs if you think it's a bug that should be fixed. I couldn't reproduce that problem, neither got similar calls from other users.\n. As a side note, even with that issue, it should be enough for you to increase HttpTimeout to something higher like 90 if you don't want to bother with finding the real culprit in SK2 code.\n. Most bots stay connected because in older version failure of refresh sessionID was non-fatal, while now it's considered fuckup (if failed 5 times) and bot instance is reconnected in order to refresh session entirely.\nEven if it's non-fatal in older version, it doesn't mean that it's working - it's not. Bot can't check status of farmed game, and will keep farming it until it reaches 10 hours of timeout. This is NOT appropriate, as it's fuckup that should be caught (and corrected) earlier - this is what is happening with new code.\nI don't consider it a bug - it's probably one of Valve limitations, and unless somebody finds out what limitation it is exactly I'm not interested in finding myself as I don't have that problem. If it's something easy such as X API calls per Y seconds, I could do that the same as I did with login limiter delay or inventory delay. Although it seems kinda silly to me that login limiter delay doesn't help, because it should considering session refreshes are limited to 1 initial one + as many needed ones due to primary account support (which is 0 in case of unused alts).\n. Another possible solution would probably involve ditching built-in SK2 way of accessing Steam API (which is not that great) and moving logic to ASF WebBrowser but that should be rather last thing to do, after finding out about Valve API limitations AND reporting bugs back to SK2 guys. If it's Valve API limitation - there should be proper ASF logic limiting API access (and I can do that if you find out what the limit is), if that's WebAPI SK2 bug - it should be reported to SK2 devs. If nothing else works, we could try to move that one API call to ASF WebBrowser to see if that helps, but I'd prefer to keep it as it is considering it works.\n. That has nothing to do with your issue. The above is for connecting to steam CM and has been resolved since ages.\n. ASF already uses that - it uses CellID of 0 for first login, then stores CellID Steam network sends to it in ASF.db and uses that value for all future calls (starting from next ASF launch).\n. Of course it does, according to what Steam returns\n. FacePalm, I really forgot to make use of that?!\n:cry: \nThank you!\n. Now it's truly fixed :+1: \n. There's no need to make CellID specific for every bot, as it should be global. I'll fix it, thanks for showing me the issue.\n. Another random idea: I'm wondering if it's possible to get allowed steamIDs for family sharing from steam client itself, this would be even better as there would be no need of extra property. I'm not sure if that's possible though.\n. This doesn't help at all, it requires not only steamID but also appID, totally opposite of what I'm trying to achieve.\nThanks for heads up though.\n. It should not be possible.\n. ... Unbelievable.\n. And this is definitely Volvo fuckup because ASF doesn't include code for forcing reclaim of game session (which your steam client does when you want to launch a game while ASF is farming). If ASF tries to launch a game while you're playing, it will get disconnected, same as it happened with older versions before I moved to event-based scheme.\n. Why do you need to do that? You can have ASF and real steam client running at the same time on the same account, even from same PC.\n. Then it's Volvo fuckup once again, and ASF can't even detect when it happens, because it's impossible for it to guess the difference between farming a game and farming a game that made you disconnect because of fuckup. Nothing to fix on my side, even if I wanted.\nBesides, this is not the right issue for such discussion, as it has nothing to do with family sharing.\n. Bump priority due to non-hold issue that is being open for nearly 4 months now.\n. https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.5.5\nFeedback and tests welcome, I tested it only briefly and it looks OK to me \ud83d\ude00 \n. Log?\n. Issue is caused in SK2 codebase, so it's out of the scope of ASF, but it should be partially fixed in https://github.com/JustArchi/ArchiSteamFarm/commit/0c872b17e20ce15aa5a9f4226ea923a4dd3f2805\n. Let me know if you'll be able to reproduce this issue in ASF V2.0.4.3+\n. Nice to hear that, thanks :+1: \n. Since when GitHub is technical support?\n. It was never meant to.\n. > I decided to disable the auto-updates because since I use Mono, everytime there's an update I first go to Travis CI and see if it compiles OK using Mono.\nWhy? Auto-updates are always working with binary, and if you're using self-compiled build then you should have auto-updates completely disabled as you're compiling yourself.\nTake a look at cc.sh and run.sh scripts - instead of relying on auto-updates you could simply put those two in a loop, so when ASF exits (e.g. by !exit command) - script would automatically pull latest changes, compile, and run (with run.sh).\nI can understand the override with !update, and it's valid suggestion that I +1, but it's most likely not what you want for your own purposes. Self-compiled build should have auto-updates disabled, that's one of the reasons why ASF will refuse to update if you run self-compiled (and recommended) ArchiSteamFarm.exe binary instead of ASF.exe dedicated for consumers.\n. Travis and AppVeyor are there to watch the build process, which means if ASF compiles in given environment, and if it passes tests, but as ASF doesn't have any yet, only compilation process is checked.\nSo no, it's not equal to being able to run. There can be a binary that doesn't compile with Mono, but runs with Mono properly (e.g. because xbuild in given Mono version is broken), and there can also be build that compiles properly with Mono (xbuild), but doesn't work because Mono of given version is broken (very often case).\nTravis and AppVeyor can be used to check if build is passing, which means if ASF is able to compile (and work) in current state. This is true nearly always, as I tend to avoid any build breakings (unless accidentally). But it's not reliable way of telling if such ASF is working properly.\n. Don't blindly trust Travis as well, build can fail very often due to things such as networking issues, packages being broken on Debian and many other cases - if build failed then it's wise to check why, because it could be a pure coincidence that e.g. mono repo was down at the time of the build due to networking issues.\nSo in the end, my suggestion remains same. If you're consumer and you don't want to bother with that stuff, you can't go wrong with auto updates being enabled. Of course, in very rare cases such as pre-releases or bugs slipping to stable releases, it's still possible of getting \"broken\" ASF, but such \"broken\" ASF is corrected quite fast (ASAP), and you can always download older binary from GitHub, disable auto-updates and keep using that version - I don't remove any version from GitHub, you can even use version 0.1 if you want to.\nAnd if you're developer or user that wants to compile himself because of one reason or another - you shouldn't be using auto-updates at all (AutoUpdates equal to false and UpdateChanel set to 0), and instead handle updates manually with cc.sh and run.sh scripts, or whatever that suits you.\n. Also keep in mind that you don't need to compile in order to use ASF - official releases should work on both Windows and Mono. You can compile if you want to, but you're also good to go with wget ASF.exe and mono ASF.exe.\n. systemd expects service to be a daemon, and ASF (in default settings) acts as a program, not service.\nIf you want to run ASF as a service, consider setting AutoRestart to false, as stated in the wiki - this way ASF will only exit itself, instead of proceeding with the restart.\nWhen that happens, systemd should be smart enough to notice that process exited, and if you configured your service properly - systemd should restart new ASF.\nAnother option is to avoid systemd, and instead use e.g. /etc/rc.local and your own script, for example the one I wrote in wiki link above.\nAlso, if you're low on RAM, you might be interested in fine-tuning Mono for lower memory needs, e.g. by using --desktop option, which should perform garbage collections more aggresively (for performance cost of course). There are also MONO_GC_PARAMS and other things which you can find in man or on Mono website. ASF code-wise tries to be as low on resources as possible, but garbage collector is controlled by runtime and not ASF itself.\n. You've tried to redeem key on offline instance, so you got an exception - it's obvious.\nShutdownOnFarmingFinished set to true must exit also instances started with !start, otherwise your bots would not automatically shutdown after farming is done.\nThe only thing which seems logical to me is waiting up to X seconds, and it nothing happens - shutdown.\n. You can't redeem cd-key to an offline bot, because when bot is offline it's not connected with Steam. That's why exception is thrown.\n. BTW there is no need for --gc=sgen as SGen is default garbage collector since some time already in Mono.\nAlso I do not recommend Restart=always, you don't want to restart ASF when it crashes or suddenly file disappears, right? Use Restart=on-success instead - ASF uses proper exit code.\n. In this case I suggest catching Mono OOM exit code (I don't know which one it is) and using RestartForceExitStatus, which is still better than restarting on every problem.\n. You're free to test - I don't know. I'm happy to update wiki with any valid theories if you find out something interesting, but I'm not going to become detective Archi trying to find out the reason of restricted card drops. Not to mention that the restriction can change without any reason as well (as stated).\n. Also check https://github.com/JustArchi/ArchiSteamFarm/wiki/Performance#what-is-the-best-way-to-find-out-if-your-account-is-restricted\n. BTW, I spent some time writing https://github.com/JustArchi/ArchiSteamFarm/wiki/Low-memory-setup - you might be interested in order to decrease memory usage of ASF and avoid Mono's OOM. More tricks and improvements are welcome.\n. ASF is already doing it automatically if you decided to use ASF 2FA, and it's not planned to add e-mail support (because nobody is using that anyway since trade holds).\n. Then read FAQ, GitHub is not technical support.\n. Use offline farming. You can't stop connected client from receiving notifications/messages.\nUnless you're talking about offline messages - those have config property switch.\nAnd GitHub is not a technical support.\n. Yeah but those are not all, for example they're missing https://steamdb.info/app/425280/subs/\n. We should blacklist this instead: http://store.steampowered.com/app/485890/ :laughing: \n. http://steamcommunity.com/id/ArchiPL/gamecards/480730/\n. Yeah.\n. You lack mono-complete or similar package providing one of needed assemblies.\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Mono\n. You can't drop cards if you depleted random drops. At least Dota 2 worked in \"classical\" way first - allowing you to drop first X cards by playing only, but then every other one is assigned for spending cash in the game only.\nThere's nothing to fix, because you won't drop any card by playing a game that you farmed already, INCLUDING dota 2 and cs:go, as well as other F2P games and those with similar mechanism.\nYou're asking for impossible. If you want to, you can put dota 2 and cs:go appIDs in GamesPlayedWhileIdle to check yourself that it does nothing apart from bumping hours. Your idea doesn't make any sense.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ\nAnd ASF already supports run properties, --server and --client are best examples of that.\n. ASF can only politely ask steam network to add license of given appID to current account, nobody said that the request will succeed.\n. Volvo fuckup.\n. Keeping used keys in memory is a waste of memory, you're supposed to make sure to provide valid keys, it's not ASF job to test if perhaps master lost his mind and is trying to redeem the same key for the second time. It already has steam quirks to handle.\nRedeem command was never meant for anything but steam keys, but if you send me a sample key on JustArchi[at]JustArchi[dot]net then I'll look what is wrong. But chances are, if it requires another function to reverse-engineer, then it won't be on ASF roadmap. The only exception will be if current method works but just misses a field or two.\n. Redeeming those keys on Steam results in exactly the same behaviour, nothing to fix. Tell Volvo to fix their network.\n. !redeem redeems game cd-keys, not wallet codes, by definition. And adding another command just for wallet codes seems redundant to me, I don't think it's on ASF roadmap.\n\nBTW, not sure if you are still doing it this way, but just checking key.split(\"-\") length is 3 and for each split length is 5 is not a real sufficient way.\n\nI dropped that pretty quick, and I have even more powerful regex than you posted.\n. No it can't, because !redeem function executes ArchiHandler.RedeemKey() and that function is communicating with steam network, not steam store through HTTP requests. The end result of you trying to redeem wallet code with it will be exactly the same as you trying to redeem that key as game code in steam client, nothing changes, I tested it back 3 months ago.\nI have no idea if Steam includes any function or feature that will be able to tell from key itself if it's game code or wallet code. I didn't find any when I looked into that, so unless somebody proves me wrong I will assume that it doesn't exist. If it doesn't exist, I'd need to add another command purely for redeeming wallet codes. I try to minimize number of HTTP reverse-engineered functions to bare minimum, because ASF already includes too many of them. I don't think that redeeming wallet codes is that important for ASF to operate, that's why I'm not interested that much into implementing it myself.\nIf you reverse-engineer legit steam network request (not steam store HTTP) that is being used for wallet redeems, same like I did with game keys redeems, feel free to send PR and I'll be happy to include it. If you find a way to distinguish game key from wallet key - even better.\nAnd yes, my regex is more powerful, because it handles many more valid patterns. Plus, !redeem doesn't even test if key is valid, as there is no need to regex in-place if user intentionally executes the function.\n. Yes, exactly the same as Steam client drops non-ASCII characters in passwords, so a password like aaa\u0105\u0142\u0107\u00f3 is the same as password aaa, but user doesn't know that. I didn't know either until very recently.\nSo if user is writing a cd-key, from an old retail box for example, and he includes \"invalid\" character that is being substituted by steam network to something else, ASF should NOT assume that it knows better, because it just doesn't. ASF tries to know better, but when it can't be 100% sure with something, it just assumes that user knows what he's doing. That is what is happening with status codes, trading, or user intentionally executing !redeem on those rare Prey keys ASF regex doesn't have support for, because it's simply not needed.\nI'm not that much against a function that redeems wallet codes, especially because it doesn't sound that bad, but we should ensure that there is no better steam-network way of doing that, before we start adding another poor steam store HTTP post request. ASF should have as many steam-network functions as possible, because only them ensure stable and not-changing API that I can at least semi-reliably trust. Valve can't change them easily without dropping support for all older steam clients, that's why I love rewriting those awful HTTP requests into steam network ones.\n. > Actually, they can.\nNo, they can't. There are too many things depending on exact behaviour, steam client is only the most basic one. Too many internal/external APIs, games, engines, and whole lots of stuff. HTTP requests can be easily adapted and changed, because nobody sends them blindly. Steam network is frozen - if there is a need for another request, it's implemented as another function, and old one keeps working. That's how I managed to implement redeeming of steam gifts via network, EVEN THOUGH it's NOT supported this way at least since a long time, because Valve moved that part to steam store entirely.\n\nCould you at least look into ASF's behaviour when trying to redeem a wallet code?\n\nI checked how steam client recognizes that it's a wallet key, and surprise, there is a way that doesn't make me feel uncomfortable:\n\nWe don't have result 50 defined, therefore it results in Unknown. I think I can add support for that, and eventually try to redeem key blindly as wallet code when steam network returns code 50. I just don't know if 50 is used for anything else, there are no official names, I'll just name it something like SteamWalletCode until I hit some other place it's being used in.\n. If my theory is right, I could improve !redeem in a way that it automatically tries to redeem steam wallet keys through another request if steam network tells ASF that it is indeed a wallet key. I'll probably have some build ready for tests in a few minutes.\n. It looks like it works nicely:\n23:00 - Archi: RWNFQ-90K07-MP82Q\n23:01 - Fred Flintstone: \n<2> Key: RWNFQ-90K07-MP82Q | Status: DuplicatedKey\nI went one step ahead and I also propagate the result from wallet redeem request, so it should result in \"OK\" if the request succeeded.\nI'll release a pre-release for tests.\n. Available for tests and should be working: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.5.9\nJust beware of other experimental stuff, that pre-release has more features that I didn't carefully test yet.\n. If you expect me to look into it then the least you can do is show current ASF output and explain what is wrong with it.. Thanks for report :+1: \n. Probably because your campus blocks TCP connection to Steam ports 27015+, I had several of such cases. You can switch SteamProtocol to UDP, but that is currently experimental and issues might happen. Nothing to fix on ASF side.\n. GitHub is not technical support.\n. Can't reproduce - https://virustotal.com/pl/file/714915fd039b08cfdf43070c3f8ccce6107cc2ea30e87ebe694344fe0857ddbc/analysis/1465508528/\n. Check if ASF.exe binary from https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.5.5 works for you, as I can't reproduce the issue. If it does, I'll release it as next stable release.\n. Sigh... I think I'll need to start looking elsewhere as ILRepack is more troublesome than expected, thanks.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/209#issuecomment-214378437\nhttps://github.com/JustArchi/ArchiSteamFarm/issues/209#issuecomment-222369517\n. Considering foils are pretty rare I might just exclude them from STM alltogether, and treat the same way as emoticons or backgrounds. Let's say you convinced me :+1: \n. Done in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.0.5.7\n. GitHub is not technical support and your issue is not a bug.\n. Thanks, you've just lost ability to report anything here anymore.\n. ASF is ArchiSteamFarm, not ArchiGleamAbuse. What you're asking for is against Gleam ToS, and out of the scope of ASF as a project. While it should be possible to automate group joining to some degree with SteamMasterClanID, definitely ASF won't make it any easier for you to abuse the free services.\n. > bots accepting requests from SteamMasterID\n\n. I could, but that would potentially degrade performance and Steam is talking so much crap that I don't want to even dig inside those errors - often they're misleading, and I don't need people asking me why they're receiving error X that doesn't make sense. Generic failure is better in this case.\nBesides, that case is covered in FAQ, and I assume you even read it considering you enabled Debug mode to check out the error yourself. You could simply trust my text and assume 7-days without doing that :smile: \nWTF error can mean only two things - either timeout, or Steam. If Steam, then the case should be carefully evaluated considering steam fuckups and other quirks. The reason that steam states might be totally wrong, and generic error is much better than caused confusion for people who are not aware of how poorly steam network works. ASF doesn't have any special power to handle such error anyway, so it doesn't really need to handle it in special way, unless you enable Debug mode - but in this case you should know exactly what you're doing. Therefore I don't really see a reason for causing potential confusion - I prefer smart users finding out in the FAQ why something is happening, rather than masses following blindly reason that ASF states, which might not be even real.\nBut feel free to convince me if you think otherwise. Maybe you have an argument that I overlooked.\n. ^\n. I've just released first version with entire feature set ready for tests: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.0.0\nI'd really love some feedback before pushing it as stable release. I didn't find any bugs so far, but I'm not sure if I didn't miss anything, especially considering Steam fuckups. Even \"it seems working\" helps. Thanks! :+1: \n. No, it is still possible to import from WinAuth and SDA to new ASF V2 format.\nIt's more the fact that SDA has format X, WinAuth has format Y, and ASF also had format X. Now ASF has format Z which is pretty much stripped-down format X, so it's still possible to import X (or Y) as Z, but not possible to re-create X or Y back from Z.\n. > Not to mention that for my alts I only have ASF set as the authenticator, and losing possibility to export it would make me sad\nPossibility is here, ASF includes exactly the same format as SDA, so you can import it to SDA from ASF V2.0.X, and this is what I strongly encourage, because from ASF V2.1 onwards though, it will no longer be possible.\n\nWhy it is not possible to re-create other formats?\n\nDesign change - not enough information. New format includes only fields that are crucial for making ASF work, instead of everything what authenticator contains. That's because ASF is no longer \"general purpose\" authenticator as the one from previous versions, but imported set of data from authenticator - just enough to make set of authenticator features to work in ASF. For example, new format doesn't include revocation code, so it's not possible to revoke authenticator based purely on new format data - you'd need original data, either from SDA or WinAuth to do so.\nThat has two main purposes. First one - It improves security. If somebody somehow snatched ASF data, he won't be able to e.g. deactivate authenticator, as he doesn't have revocation code. So it's not possible to deactivate authenticator, and activate other one for instance. You can still do that with your original data.\nSecond one is simply the fact that we don't need that data. Sure, I could save it because why not, but I don't want to do that - mainly to force users into the scheme of general purpose authenticator of SDA or WinAuth, and importing set of data from those into ASF to enable extra features. ASF 2FA was never supposed to work as general authenticator, and there is no need to keep those properties anymore, same as there is no need to keep outdated no-longer-used bot config properties as well. They were there before, because I used the same format SDA uses, both because it was easier to work with, as well as the fact that I didn't know much about compatibility back then.\nYou can compare the data old authenticator has with new one. New one has barely 3 fields from the old one.\nPersonally I like it this way. It creates less problems, and maintanibility hassle, plus enforces good practices. If something breaks, it can be easily fixable, as opposed to explaining how to export ASF authenticator data back in order to e.g. import it to SDA.\n. Somehow - yes, it's not possible to code something without adding at least a bit of personal preferences. Development doesn't have fixed scheme of assembling, making decisions is vital part of it.\nOn the other hand, I like the minimalistic approach of https://github.com/DoctorMcKay/node-steam-totp much better than approach of SDA. Same as I like more how WinAuth manages to do things rather than SDA, which seems more or less abandoned development-wise, as well as their original library.\nI wouldn't call it bad news though. Sure, there is a change and the change affects backwards-compatibility with the format SDA uses, but on the other hand ASF didn't make use of those fields before either, only revocation code was being used as part of !2faoff, it was even dangerous as I had at least one case of user who accidentally turned off his imported authenticator, without knowledge that it will also turn off his main one.\nThe only real downside of all above changes if the fact that users of 2FA \"solo\" mode before should export the data into SDA for general-purpose authenticator (or at least save revocation code, if they have no use of it). There are several advantages over old code though, from improved security through new features (such as SteamParental support), finishing with being less error-prone to steam fuckups, and especially that is important from ASF - I no longer rely on not-even-finished logic coded half a year ago, but I have my own code so it's easier to maintain and find bugs.\nEvery change has good and bad sides - I can't satisfy everyone, I'm not even trying. I aim for general population of ASF users, mixed together with my personal preferences, as in the end the program is supposed to work for me :+1:. That doesn't however mean that I don't care about what other people think, it's actually the opposite - that's why I'm creating an issue instead of coding it silently.\n. > ASF 2FA solo is very useful when you setup bots on a remote server (even if it's the Pi2 sitting on my desk) as you only have to enter a phone number and the SMS response from the command line once.\nThat's not really any different from SDA + ASF, or WinAuth + ASF, as you're essentially copy pasting JSON that either SDA or WinAuth generates for you, and you put it into new file named Bot.maFile. There is no need to even do anything with ASF console, as the whole import is done automatically. It's really not a much hassle when it comes to import, and it's much more likely that you'll encounter less problems with adding authenticator through SDA or WinAuth first, instead of relying on ASF link feature.\nFor instance, you were not able to link your authenticator from inside ASF with SteamParental-enabled accounts, and it's a restriction that got lifted with new format.\n. > as long as it keep generating tokens and automate confirmations which seems to be the intention\nI'm not removing ASF 2FA, I'm rewriting it. If I wanted to remove it completely, it'd be a huge step back.\n\nOnly downside is that the files remains unencrypted in SDA (seems only possible when configuring a new account?)\n\nYou did everything correctly, whether SDA can encrypt existing authenticator or not is the question to devs of SDA, not me. There is no physical barrier that makes it impossible, the data is the same as you'd get from your steam-enabled android phone, or new SDA authenticator being linked. In fact, ASF V2.0 and SDA uses exactly the same way of adding new authenticator.\n. ASF doesn't track name of the game, we also have no real use of it so we shouldn't keep it in memory purely for the fact that user might want to display it. You can check what appID in fact is yourself, through various different ways - it's not like that information is crucial for farming.\nIndeed, year as well as month could probably be omitted, but it's not that easy - ASF uses C# DateTime object and ToString() implementation of it varies from OS to OS, from country to country and from version to version. It does display it for you in format A, but for USA people, the format is totally different (B). Getting rid of year in every case can have bad side-effects, I say we shouldn't really touch it unless we have a very good reason. Getting 5 characters less from every display is not good enough.\nINFO is important, as ASF has many different logging levels, including infos, warnings, errors, exceptions, WTFs and even debug (only in debug builds). You can actually consider yourself lucky that you don't see anything but infos. This is important for me, as I can quickly tell where is a problem, as well as I can filter results through grep in a matter of second.\nFor me function name is much more important than bot name, and logging is mostly for debugging (but also informational) purposes. Although it makes sense putting it after the date, but before the tag, so why not :+1: \n. > I have to search every time to find the name of the bot, which is very annoying\nWhy not grep the output then?\nroot@archi:/home/archi# grep \"<1>\" log.txt\n20/06/2016 08:26:28 [*] INFO: Start() <1> Starting...\n20/06/2016 08:26:28 [*] INFO: OnConnected() <1> Connected to Steam!\n20/06/2016 08:26:28 [*] INFO: OnConnected() <1> Logging in...\n20/06/2016 08:26:31 [*] INFO: OnLoggedOn() <1> Successfully logged on!\n20/06/2016 08:26:31 [*] INFO: Init() <1> Logging in to ISteamUserAuth...\n20/06/2016 08:26:31 [*] INFO: Init() <1> Success!\n20/06/2016 08:26:35 [*] INFO: IsAnythingToFarm() <1> Checking badges...\n20/06/2016 08:26:35 [*] INFO: IsAnythingToFarm() <1> Checking first page...\n20/06/2016 08:26:37 [*] INFO: StartFarming() <1> We don't have anything to farm on this account!\nI like the current scheme much better, because related bot name is an extra to the log, not the core of it.\n. Sorry, should I fix what is not broken in my program because you don't have grep tool on Windows?\nhttp://www.wingrep.com/\nhttp://superuser.com/questions/300815/grep-equivalent-for-windows-7\n. 1:1 bot functionality is already available under SteamTradeMatcher.\n. In this case it's true, it's out of the scope of ASF to act as typical bot, as ASF STM is supposed to help you rather than sacrifice you for the community.\nIf there will be enough demand I could potentially add it, as it's plain easy, but I don't want to go too much out of the scope of ASF, maintaining too many things can get out of the hands easily.\n. > I don't know how, but my booty.db became 0-size file.\nI don't know either because it's impossible for ASF to generate empty bot database. I'd blame OS or your AV for refusing to save life.\n\nAnyway, I think it would be better to keep at least 1 backup of all important files and load them from backup in case of error.\n\nThat would be the case only for 2FA-enabled accounts, as normal ones don't contain any important info there. Secondly, such data would be outdated pretty fast, unless I coded whole logic of keeping backups and using them. Lastly, I'd need to add plenty of overhead for checking if perhaps your OS saved file properly instead of breaking it, and I can't assume on every step that something can not work - I already have Steam for such baby steps.\nASF intentionally refuses to load corrupted db to let you fix the problem, as it can't smartly guess what happened and assume that it knows better. I prefer to make it user responsibility to make backups, same as he's supposed to make backups from time to time by his own, especially considering major ASF version bumps. Adding extra logic seems unnecessary.\n. If ASF crashed then you should provide log so I can fix the issue. ASF crash is unwanted in any case and it should be corrected.\nIf ASF crashed due to your OS, out of memory, or any other non-program reason, then you should be the one correcting it.\nASF never restarts itself in case of crash, the eventual restart is responsibility of a service that maintains ASF, for example systemd or bash script on Unix. I don't break single responsibility concept.\nASF under no reason could generate invalid content or invalid file, but since you do not have log from the broken (previous) run, I can't guess what happened. Saving/updating file can fail due to many reasons, but all of them are caused directly by your OS, such as lack of permissions, file in use or many other reasons which are out of the scope of ASF. ASF is aware of them, and if exception is thrown, it's as usual written to the log (if possible), but not retried, as if OS denies writing the file, then it's not like such deny is random and caused just once - it indicates some serious problem with OS flow, such as too aggressive AV or similar.\nIf writing to file failed, then moving the file as backup, writing to backup file, or even doing anything with it will lead to similar problems. Your solution would make sense if ASF could potentially generate corrupted database (by itself), then indeed previous file would make it work - but that's not the case, the exception is most likely thrown on OS level, and in this case nothing will help because your OS physically prohibits ASF from operating, you can't blame ASF for that, and any smart logic added to overcome this problem is defeated by definition - because whatever ASF does, your OS won't allow if it doesn't allow to update the file.\n. > Do you save a crash lot to log.txt ?\nYes, but if ASF was unable to save to file, then I wouldn't be shocked if it was unable to write to the log as well.\n\nStrange, I don't have a service to keep it alive.\n\nBecause there is no service bundled with a program, service such as autostart, systemd or Unix script should be provided by you, if needed.\n\nActually no, if attempt to rename a file fail then nothing will happen to a file content since OS doesn't make a copy of it with a new name and removes old file or opens it for write and resets it to 0 size. Also, ASF will know that something went wrong even before attempting to write anything.\n\nWe're talking about OS fuckups here, and not program fuckups. Any OS fuckup is OS problem and should be corrected on OS level, not added as a workaround to ASF, regardless of the reason. For the entire run of my program, on my server and PC, since version V0.1, I didn't encounter any database corruption, and ASF is running 24/7.\nMaking a backup of database is pointless because it's either:\na) Outdated, and if you want outdated backups, you can make them yourself right after first DB creation.\nb) Requires same permission as saving original database when database is updated, if we want to keep backup relatively recent.\nTherefore, adding any extra logic to ASF in regard to OS fuckups is not only stupid because of the fact that OS should be fixed (or environment), but also because there is no even a way for ASF to do that, if OS forbids it from saving a file, be it database, log, or anything else being used.\nI'd suggest to start looking at your environment and finding out yourself why ASF is having problems working on your machine, eventually discussing it further when you have a log to explain what happened. I'm not fixing stuff that is not broken.\n. There is a major difference between unhandled exception (program) crash, and between runtime crash. ASF has routine added to write any unhandled exception to the log as well, because runtime is still operative even if program itself is forced to quit because of missing logic. If it's runtime crash, then we're talking about OS level once again, and in this case runtime should be fixed, not ASF.\nI don't want to add super-complex log handling because it's supposed to be simple and provided after ASF crash, not provide you with super-verbose information about each ASF run. There's no need to maintain older log than last run, because if ASF crashed you know exactly that it did, because you didn't turn it off yourself.\nThanks to the above it's really easy to write a simple bash script or systemd service that will automatically save log.txt for later evaluation if ASF exits with non-zero error code, without forcing me to look after all the logs that ASF gathered in order to search for the right one. This is what is happening on my server.\n.  @hombrepac It's not possible currently, as ASF always switches to it's home directory for searching the config directory, but I might add extra arguments such as --path= that would override it.\n. It's done already in https://github.com/JustArchi/ArchiSteamFarm/commit/0714c4e575d7168a2f17c6720e6e02ef4ef7e8e8 but I must test it a bit more before releasing another pre-release.\n. It should be working nicely: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.3.0\narchi@archi:~$ mono ~/ASF.exe --path=$HOME/.asf\nCan be used with anything, but avoid ~ character as it's bash-ism and ASF won't be able to follow it. $HOME environment property works nicely though.\n. .NET 4.6.1 missing.\n. No, and it's not planned to as it goes out of the scope of ASF. You can use !loot when you feel like it.\n. The server stopped the handshake.\nThis indicates either Mono bug, or Steam server bug. You could potentially decrease likeness of such errors by Forcing HTTP, although that is not recommended - you should instead try to search for real cause.\nIt doesn't look like problem with certificates, I'm more likely to believe in runtime or Steam in this case. Or even in your network.\nIf it doesn't happen too often, I'd say just leave it, ASF is smart enough to handle it.\nIf it does, perhaps the Mono you've got has a bug. Can you try with other one? I'd try latest Mono from your Raspbian Testing branch - it's in version 4.2, but it should run ASF correctly: https://packages.debian.org/stretch/mono-complete\nOr if you can try latest stable from Mono directly - the one I recommend in Wiki, it's in version 4.4 and should work best. I don't know if it's compatible with Raspberry though, definitely not with 1, perhaps with 2+.\n. It's nice that you found out it's Mono bug in the end :+1: \nYes, such issues happen - Mono is not perfect. If the issue still exists in latest master Mono, perhaps it's worth it reporting to bugzilla, so it can be dealt with.\nIn general, if you're looking for stable Mono to compile, I suggest going to http://download.mono-project.com/sources/mono/ and picking up latest version. GitHub version sometimes works, sometimes doesn't, and you really shouldn't count on it that it does. Stable version is at least a bit tested, and should work in most cases.\nI'm using my own self-compiled latest master on my server, so I know exactly Mono quirks and that it's not always as stable as it's supposed to - even small change can have dramatic effects, that's why I'm used to such issues. If you don't want to use binary packages, yet you don't want to experiment much with Mono framework and own self-compiled versions, it should be good enough to pick up latest stable sources and use them :+1: \n. That's not the purpose of ASF.\n. That's right - https://github.com/JustArchi/ArchiSteamFarm\n\nAutomatic farming of available games with card drops using any number of active accounts\n. https://github.com/JustArchi/ArchiSteamFarm/issues/259\n. GitHub is not technical support and your issue is not a bug - everything works as intended.\n. You have steam group chat for that. Because ASF is meant to also handle accounts with different SteamMasterID, !lootall is not appropriate for everyone.\n\nBut sure, I don't have anything against that.\n. When you were posting issue there was a big yellow notice.\n\nPlease review the guidelines for contributing to this repository.\n\nYou did not.\n. Version? Used command? Bot options?\n. And what was the command, and sent to which one of those 3 bots? Command as in !redeem with what parameters.\n. Weird, what is the result of !statusall ? It looks like Dictionary contains Bots that are null, which should never be the case, unless ASF logical issue. Can you show me the full log with the crash? It's important.\n. 26/06/2016 19.33.43 [!!] ERROR: .ctor() Bot database could not be loaded, refusing to start this bot instance!\nAs I initially thought, thanks for reporting this!\nYou should fix your bot database, while I'll fix the issue that can happen when ASF adds Bot with broken database to Dictionary.\n. The bug should be fully fixed since V2.1.1.1 - https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.1.1\nIt won't magically fix your broken database, but ASF will no longer crash when bot with such database is used.\nThank you for report! :+1: \n. I'm not even sure how it's possible under normal conditions to catch broken database - I'm using ASF since version V0.1 24/7 on my server and I'm yet to face this issue. My theory is mainly about too aggressive AV scanning files being written on the go, and OS denying ASF permission to write. It's not possible under normal operation to catch it, it takes less than 100ms to write the file. You'd need to be super lucky to catch power outage or OS crash, and even in this case, the data that has to be written is so small that it should fill fully in the I/O buffer, so you'd end up with either old data or new one, not corrupted one.\nI also can't believe in JsonConvert generating invalid JSON when ASF saves the file, this is not possible, because we had to use different structure for loading and saving to cause incompatibility, which is not the case with current code. Serialized object with given set of properties and settings must load properly from the same data.\nSo that leads to the question, what is the exact reason for ASF to catch such problem? No clue, I'm not even entirely sure how to harden it a bit, I think I'll just add some extra retry logic to file saving, because that is the only thing which crosses my mind.\n. This is the only thing which is possible for me to do. If despite our 5 tries and verifying that json is not-null, we will fail, there is really nothing more we can do. ASF can't operate without write access.\n. Volvo didn't bother to respond to ASF, so ASF didn't have answer for you either. Nothing to fix.\n. > anyone who has some knowledge can decrypt it\nExactly. ASF is open-source and if ASF is able to decrypt given data, then anybody can read it as well using the same code/implementation/passwords.\n\nIf someone (for example a friend) just go on my PC and open a json file, he will know my password.\n\nTrue, but if he manages to get to that file, and read the encrypted data it's not any more secure than plaintext, as stated above. Secure password is a password that can't be easily cracked by an attacker, in our scenario we add only extra insecure layer to that.\n\nSo could you please encrypt the password somehow, that it will take some effort to find it out or just can't be remembered.\n\nASF already offers you a solution - using password of null. You don't have to store your password in the config - if you prefer to type it on each ASF run. Your password never leaves ASF memory, therefore it's as secure as it can be.\nHowever, I agree. I could add extra function that would support using e.g. AES-encrypted password with generally-known secret for users that would prefer to store it instead. As I said, this is not any more secure and I don't want to make users believe it is, that's why ASF won't have any function for encrypting data (because it's nonsense), however, it can support reading encrypted data and decrypting it.\n. Can be done, why not.\n. I'll do that, I just think of a good variable name, --cryptkey crosses my mind for now. You got any better ideas?\n. --aeskey indeed is smaller but in future it might be reused in other places, hell, even currently it's used for salt in ProtectedDataForCurrentUser algorithm, so it'd make more sense to use one for all, I doubt that anybody will ever want to have two different algorithms for two different bots, and in addition to that with different keys, that is overkill.\n--cryptkey it is, I can always change it if somebody comes up with better idea until stable release.\n. Done, but it will have to wait for next version, unless you want to compile yourself - I have enough for today :smile: \n. Should be working in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.1.4 but I didn't test it yet, I have other stuff to do right now. Feel free to give it a try and report back if everything works as supposed too (or not) :smile: \n. > I have choose 256Bit on aesencryption.net and encrypted my password. Copy & paste the base64 string to config.\nThat won't work, the algorithm that ASF is using is far more complicated and not possible to reproduce using any online AES website at the moment. You should launch your ASF with PlainText password and the cryptkey you want to use first, then generate your AES password using !password command. Then copy paste that into bot config, change password format to AES, and restart with the same cryptkey.\nThis is because IV must be included (prepended) into the encrypted byte array for ASF, and I didn't see any website doing that so far. ASF IV is unique and always generated randomly, that's why every !password call, even with same cryptkey will always result in different encrypted password, even though all of them are resulting with same string. aesencryption.net for instance, is always using the same IV, so if you encrypt the same password two times using same cryptkey and bitness, it will be the same. If you do it in ASF, those two passwords are guaranteed to be different, unless generated IV would be the same, which is not possible with current implementation, chance is too low.\nThanks to that, cracking your password without knowing your cryptkey will take millions of years if not more.\n. CG doesn't have required SK2 dependency, and I don't want to include it only for that part. Besides, this feature is more like for geeks and people who actually prefer to put extra effort into extra security, definitely not for everyone. 99% of users won't even bother with it, while the rest 1% won't have a problem using !password.\n. It is, that's why I decided to make it easier for maintenance. ConfigGenerator is a nice tool for people with no general IT knowledge, as it's supposed to \"make things work\", but the more things I add to it, the harder it will become to set it up, and for people with enough knowledge it is actually easier to manually maintain configs. When CG becomes too hard to set up, we could as well just use manual configs from the beginning.\nMore advanced people will be happy to e.g. being able of writing a script asking ASF through WCF for !password of each account and automatically putting it in the config, and not being forced to do that with GUI. Less advanced people will appreciate that CG doesn't require more than needed to set up ASF. In fact, it still requires too much, but tutorial helps a bit.\n. That would be indeed nice, but the first rule I set for ASF is the fact that configs must be read only. ASF should never modify them. Configs are fully provided by user, and ASF should work the way user wants, not decide that it knows better what user wants. The only exception from this rule is if configured setting is invalid, but even then the option is ignored, not overwritten.\nBesides, not everyone likes full JSON structure. I personally use only core minimal settings for keeping my config small. ASF can (re)generate only full structure, and this is something I don't like. It would make much more sense to define in config only variables we want to adjust, and that's impossible to do with CG. That's also one of the reasons why ASF never regenerates configs with new properties.\n. > Actually you can keep json small, without serializing the full object\nOf course you can, but that would include deep analysis of what config file provides, and serializing only those fields. Even in this case I don't want to create potentially harmful situation such as ASF generating wrong configs or corrupting them. Lack of touching them ensures that they'll be valid.\n\nIMO it's our duty to make users life simpler and get sure to protect them\n\nThat's true, but I'll never do security at all cost - something what Valve did introducing 15 days holds. It's up to user to decide how secure his ASF usage should be, and not me. Default ASF config is based on simplicity, it requires changing from 1 up to 3 fields (depending if user wants to skip asking for login/password). Introducing encrypted password by default would rise problems such as expecting user to provide cryptkey, or running into issues such as \"why my ASF no longer works on new PC\", because using AES with default cryptkey is not really any more secure than using PlainText. I don't want that, I want to make program that targets both new users and advanced ones, allowing newbies to easily make ASF working without digging too deep inside, while at the same time allowing advanced users to tune ASF in whatever way they wish.\nI do understand that security is important, and that's why I spent time coding this feature instead of saying \"meh, not really needed\", but I also have to keep things in balance, ASF is getting more and more complicated with each version - targetting encrypted passwords by default will only make it harder :smile: \nMaybe I consider adding this option later, but for now this feature is too new to consider it. I didn't even test it carefully yet for regressions and possible issues, hence pre-release. I also prefer to base CG on simplicity and easy use, as advanced users are able to handle configs manually anyway.\nAnyway, let me know if you (or anybody else) spot any issues related to recent encryption. To be honest I don't expect any bugs, but I didn't test it carefully yet either. It should work decent enough to be called stable :+1: \n. Looks good to me, apart from misc code style which I'll fix myself.\nDoes everything work fine? :smiley: \n. Great, thank you :+1: \nDon't hesitate to send further pull requests or issues regarding the service. I'll need to test how it works on Mono, but there shouldn't be any incompatibilities.\n. Thanks :+1: \nI tried it out and it indeed works fine, only shutdown was kinda broken, so I fixed it.\n. Feel free to test pre-release with all changes included: https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.1.3\nIt should work nicely, as I tested it and it did. I'm only not sure how well Windows handles AutoUpdates and AutoRestart of the process. AutoUpdates should not cause issues, but AutoRestart might make Windows believe that ASF died, and restart it, resulting in 2 processes running, which is bad.\nOn the other hand, disabling AutoRestart globally when ASF is running as a service is not nice either, as somebody might want to add service as one-shot and expect ASF to restart itself if needed, as opposed to adding service logic. This is easier and useful especially on Linux, when somebody prefers to use Unix-like autostart (rc.local) instead of registering ASF as systemd daemon.\nFor now it's good enough, but if you have any thoughts let me know :+1: \n. That means that AutoRestart should remain configurable to user and be false when ASF is supposed to run via service. ASF can't know better what user / environment user expects, so it can't make decisions for him.\nAlso it broke Mono as Mono doesn't seem to support Environment.UserInteractive properly, so I'll need to make a fix :smile: \n. Ye, I should be going too :smile:. Good night.\n. Console.In was even decent at first but totally ruined simple redirect of stdout and stderr + running in background (&) on Linux, so I gave up for now. For now I just set it to always return true on Mono, and it's back to working.\nHowever, that's my problem. I'm responsible here for making ASF work with Mono, not you. Your code is valid and works properly on Windows, which has best C# support at the moment, everything considering Mono including hacks, workarounds, fixes or bugs is my job, so don't mind me and feel free to contribute further :smile: \n. Yep, confirmed, and I have no idea for now how to solve it in a way that will satisfy everyone. I'll probably end up building ASF-Service.exe with old ILRepack method (as I need it anyway for Mono) and provide as an extra to every release. I didn't manage to make current Fody/Costura solution work with it.\n. It's not only paid, but doesn't even guarantee that WD will stop yelling about ASF. I'm definitely not going to make you spend money on this bullshit, neither force myself to do the same. I'm more likely to drop Windows support than paying for a workaround method - it's Microsoft fuckup, and they should be fixing it, not we. Besides, ASF-Service.exe idea doesn't have any disadvantages for now, even updates will work. I could as well name it ASF2.exe.\n. https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.1.9\nThis should work for now, until I find better solution or devs behind Fody add proper support.\n. https://github.com/Fody/Costura/issues/164\nThat's all I can do for now.\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n. You can enable Debug mode to see exact reason of request failing, but from my observation those are either networking problems with Steam, or broken Mono, which is neither a problem of ASF.\nYour Mono is decent enough that it should work properly. So maybe Debug will tell you more.\n. > Aside that ASF opens 2 sessions and I have to ctrl+c one, ASF gives me this error:\nThat is also not possible, ASF can only launch extra process (and exit current one) if you have AutoRestart set to true, and even then first process is killed, you're starting second one, or your script.\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n. @igromanru Yep, added.\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n. It looks good at first glance.\nDo we really need LogToEventFile defined? Don't we want this option always enabled when ASF is running as service, and always disabled otherwise?\n. LogToFile has a purpose because some people, such as me, prefer to catch stdout/stdin which they receive already to file, so extra file logging is pointless for them, but it's still important for normal GUI users that should have extra logging for debug/informative purposes.\nASF already knows when it should start the service and when it should start the main app, therefore I think that this property is a bit redundant, we should ask if there is any possible case when you'd want to run ASF as a service, yet disable event logging - I think there is never such case, and even if somebody really wants to do that, he should do it higher. If ASF is started as a service, it should act as one.\nI'll merge this pull request and give it a try when I'm done with some recent ASF issues, which hopefully should be tomorrow.\n. I decided to switch to NLog for entire ASF, it doesn't only pollute code less by avoiding reinventing the wheel, but also allows to add many more log targets in future.\nI also decided to enable event log logging always when ASF is running as a service, as this is what we want. I'll include that info when I finish writing wiki page about running ASF as a service.\nI'll release another pre-release soon to allow you to test it :+1:.\n. \nEvent logging now works nicely :+1: \nI'm wondering if I can somehow beautify it, but I doubt it.\n. Layout can be changed, as in removing date and level, but eventID seems to be tied to logger, and creating multiple loggers only for different eventIDs is not going to happen, at least not with default config (you can still use custom config with NLog, without even recompiling the program, I'll describe it later).\nRest comes mostly from aliasing. If I make NewLine then I lose left part of the message in new line, and duplicating it is even worse in this case, so that probably won't happen.\n. This is the part that can be done, rest is too tied with logging module to modify, even with NLog it seems rather hard to impossible to achieve. But feel free to visit https://github.com/nlog/NLog/wiki/EventLog-target and suggest enhancements to EventLogTarget, if you have any.\n. This is possible with custom configuration of NLog, but default settings should be suited for most-general \"casual\" use of ASF as a service, and logging to application log is more preferable than custom/system log.\n. Custom configuration is now finished - https://github.com/JustArchi/ArchiSteamFarm/wiki/Logging\nThis should make everybody happy.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ#issues\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n. I feel exactly the same as @Ryzhehvost but I didn't drop this suggestion right away, as it could be beneficial and I could tune ASF code-wise to spend extra time only if user wants that, as in - if appropriate config property (which will be named PreferredFarmingOrder or similar) is set.\nWishlist for now.\n. > Also parsing card price data from Steam or 3rd party site and you could have option like farm most valuable cards first.\nParsing card price data from Steam is too expensive to even consider adding to ASF, and I won't include any mandatory dependency such as third-party Enhanced Steam API (which is not even documented) that Idle Master uses only to add such extra optional feature.\n. This is now done starting in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.3.5 thanks to @stackia \nAs always wiki page will come later - FarmingOrder bot config property with byte value.\n0 - Unordered,\n1 - MostCardDropRemainingFirst,\n2 - FewestCardDropRemainingFirst\nFeedback welcome.\n. Notice: actual values might change as I'll be probably adding more options later, so until stable release keep an eye on updates.\n. FarmingOrder is in wiki now - https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration - it affects latest version (2.1.3.6) as of now. Values changed between 2.1.3.5 and 2.1.3.6.\n. Oops, fixed links for 2.1.3.6. Thanks!\n. Final version for testing is https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.3.7 - stable candidate.\nThis issue will get closed with stable release, so it's final time to verify that new feature works OK, I couldn't find any bugs myself. Thanks!\n. I consider this issue implemented and tested, but let me know if you spot anything weird in terms of farming order. Thanks for feedback!\n. NLog is much better, and considering recent PR, which I don't like that much https://github.com/JustArchi/ArchiSteamFarm/pull/274 I can see that it actually offers Event logging, which would solve the problem.\n. ASF now uses NLog for all currently supported targets - console, file and event log (#274).\nPre-release should come up soon, once I test it on Mono.\n. Sure, once I find how to detect at runtime if NLog managed to load the file or not.\n. This should be enough to satisfy everyone, including custom logging targets, yet not break ASF input reading.\n. Okay, I think the new logging module is now ready for pre-release, and has been included in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.2.0\nIt should support both built-in hardcoded ASF rules, which are used by default, but also custom NLog config, which can be placed next to ASF binary. I'll document later on the wiki how to use that option, for now - https://github.com/nlog/nlog/wiki/Configuration-file\nWhen configuration file is found, it overrides default ASF rules, which means that ASF won't put it's own rules anymore. This way you can define your own loggers and also disable default ASF ones in whatever way you wish. It's a very powerful tool.\nFeedback is welcome.\n. Notice: File/EventLog logging was broken in 2.1.2.0 (accidentally).\nIt should work nicely in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.2.1\nCustom NLog configs were unaffected.\n. I released current RC which should have everything related to logging finished for this milestone - https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.2.2\nI also finished writing wiki section about new logging - https://github.com/JustArchi/ArchiSteamFarm/wiki/Logging\nThat's should be it, thanks for suggestion :+1: \n. I think it will be better to just rename main logging facility to use already reserved \"ASF\" string instead of \"Main\". This way we don't need to add it to the new ignored list.\n. Yup, which is weird because ASF was fine writing to a log a moment ago :fearful:\nI screwed up something and I don't know what, hm.\n. Ha, solved it.\n. Please don't hijack other issues and post in appropriate place - https://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\nYou're not reporting ASF bug.\n. Process will be started, but service will show as ended, because physically process A run by service S started process B and exited, so S doesn't know about B. There is no way to restart ASF in fact without creating new process and exiting current one, that's also why AutoRestart is a config property.\nI'll add that info when I'm done with describing how to run ASF as service, which hopefully should be before next stable, unless there are more service bugs to fix.\n. In general guidelines for this are the same as guidelines for running ASF with systemd or bash scripts on Linux/OS X - set AutoRestart to false and handle restarts yourself on higher level - https://github.com/JustArchi/ArchiSteamFarm/wiki/Mono#usage\n. I'm not sure because I didn't test that, but if it doesn't work then most likely it's Windows limitation of not being able to Process.Start().\n. This should now be well explained in https://github.com/JustArchi/ArchiSteamFarm/wiki/Running-as-Service\nFeel free to post suggestions if you feel like something else should be included in the article.\n. There is nothing in !loot that can fail due to not being 2FA-enabled. You're not reporting a bug, so don't use GitHub for that.\n. It looks good, did you test it?\n. :+1: \n. ^\n. > Since there's no option to enter the PIN manually or specify it within a config file\nAnd SteamParentalPIN is for what purpose?\n. No problem, you'd just save some time if you did check the config first :smile:\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n. > !idleall - this command will force each bot to idle all games that are on the account. this is good to gather playtime\n\nThere is already !play for that, and GamesPlayedWhileIdle, both having limit of ~32 games played concurrently. Not only already done, but also not possible to implement in your way, because of above limit.\n\n!farmandidle - this command will force all bots to farm all possible cards first and to idle all games that are on the acc after\n\nThere is already GamesPlayedWhileIdle for that.\n. I'm not interested in creating service installer - running ASF as a service should be done only by advanced users, and it's offered as an extra instead of core functionality.\nI'm accepting PRs regarding this if somebody is interested in making it happen, but I won't implement it myself due to no interest.\n. Weird because it should not happen, but good to know that you solved it.\n. Aug 04 14:54:58 myself mono[4590]: exception inside UnhandledException handler: Access to the path \"/log.txt\" is denied.\n. ASF falls back to classic log file when it crashes before NLog initializers, and because it crashed before moving to it's home directory, it tried /log.txt, as systemd probably initialized with home directory set to /. That's misc though.\nIf you really want to solve this issue, you should report it to NLog devs - https://github.com/NLog/NLog/issues\n. $HOME might be, but current directory is /.\n. No, as I said - that issue is misc. https://github.com/JustArchi/ArchiSteamFarm/commit/eb886e8ca88a78188de4138d52e3291f007e01d7\nIt won't solve NLog issue though, only misc ASF one.\n. BTW, this issue is fixed since ASF V2.2.2.8 - no workaround in form of custom NLog.config is required anymore.. No, for several reasons.\n1. Doing so will drastically increase memory usage. I did some tests with my 3,6k games and the memory increase was significant. Moreover, for no actual gain, as !owns is fast and efficient enough.\n2. App list can change, and it can also change without Steam notifying us. Making sure that list is up-to-date is pointless, as it's the same as calling !owns several times.\n3. Cd-keys are binded to packages and not appIDs. You can't check which package cd-key relates to before trying, and keeping entire list of packages and connected appIDs is something that I won't be doing for sure, that's out of the discussion.\n4. ASF's primary objective is farming steam cards, not redeeming cd-keys. If I can add cd-keys redeeming feature for no cost - sure, it's great addition, but I definitely won't sacrifice precious resources on that.\nSo sorry, but you need another program with different objective - this is out of the scope of ASF.\n. ASF will play GamesPlayedWhileIdle only if:\na) You own specified games on your account (as in, you can use !play with those appIDs and they work properly)\nb) ASF is not currently farming anything (as in you're receiving a message stating that we don't have anything to farm on this account)\nc) You're not using ShutdownOnFarmingFinished\nThis feature works correctly, I even got confirmation yesterday that it does regarding further enhancements. If you're still not sure where is the problem, try !play with your appIDs in order to see yourself if it works or not. Remember that ASF only sends request with your specified appIDs - whether Steam accepts such request, or not, is out of the scope of ASF as a program.\nBecause this is not a bug neither a suggestion, GitHub is not proper place for this issue.\n. Ah yes, and if you use FarmOffline feature then you won't actually see those games as being played, but you will notice them on your recently played list in your profile, and hours being increased from time to time (when Steam Network updates). If you want to see the status instead, you must not farm offline.\n. Also the reason is probably the fact that you set CustomGamePlayedWhileIdle. You can't use CustomGamePlayedWhileIdle and GamesPlayedWhileIdle at the same time - this feature is available since ASF V2.1.2.6 - any version prior to that will use only one of those properties, with CustomGamePlayedWhileIdle being with higher priority than the other.\nTherefore, you need to either update to pre-release, or switch CustomGamePlayedWhileIdle back to null. Considering you're farming offline anyway, this property doesn't make sense to you in any case.\n. Thanks for heads up @aleksasavic3, this is now done and works nicely at least for me, I'll release pre-release later, I like this method much better than old one.\nSadly there is still no way to get multi-confirmation details, but Valve at least doesn't restrict this option to be synchronous, so ASF can launch tasks in parallel, as opposed to confirming, which was (and still is) forced synchronous, so multi-confirming makes stuff much faster and more efficient.\n. > System.OutOfMemoryException\nRuntime, not ASF bug.\n. It doesn't work yet, that's why there is not even a pre-release of that. I'm currently trying to find out what is wrong.\nCould you post your modified version of HandleConfirmations in ArchiWebHandler? I'll take a look.\n. That will fail for more confirmations than one :cry: \n. Valve implemented it in really awful way as they duplicate POST fields for different values instead of using something they did much better with trades - either serializing to json and putting as field, or using in-field separator such as ,. This is typical result of spaghetti code.\nI'll need to refactor my WebBrowser methods to allow duplicate fields :cry: \n. This should hopefully fix all cases, let me know if it works for you now :smiley: \n. Glad to hear it, and thanks for report :smile: \n. I added special note to configuration in wiki.\n\nPlease note that ASF cannot guarantee the actual display order of Steam Network, therefore this is only a suggestion that may, or may not, display properly\n\nThat should be clear now :+1: \n. ASF stops login process at Console.ReadLine() call - if your runtime is not working correctly and automatically skipping this part, for one reason or another, then of course this will happen, but this is not ASF fault.\nUpdate your Mono.\n. Worthy reading: https://bugzilla.xamarin.com/show_bug.cgi?id=12552\nSeems like redirected stdout/stdin causes the bug in the Mono. Solution: don't use redirect.\n. https://github.com/JustArchi/ArchiSteamFarm/commit/8cbda098dee1596c8b0c3e56696b394b028a3168\nThis should help a bit - it's still bug in the Mono, but this way ASF at least won't attempt to instantly reconnect due to invalid token from Mono.\n. https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.2.8\nLet me know if this one works better.\n. Thanks for report.\n. Thanks for report.\n. This will be breaking change then, and I'll definitely postpone it until later, when I actually start working on this.\n. Update: once .NET Standard 2.0 gets released, that will be a good moment to start working on this. I'm already moving my projects together with ArchiBoT to it, ASF will be the last in the queue.\nThis will definitely justify bump of version to ASF V3.. https://github.com/JustArchi/ArchiSteamFarm/pull/582. Can you reproduce it with the Debug version so I can see which line causes the issue?\nThis is based on 2.1.3.0.\nArchiSteamFarm.zip\n. Oops, sorry for lack of instructions. No, no, VS is not needed - simply extract ArchiSteamFarm.exe from the zip archive I attached above, and use it for reproducing the issue - if you catch the bug with this version, log.txt will be more verbose, as in - it will include more information in the stacktrace, including the crucial for me info which line hit null reference exception. Simply paste that log and I'll see where exactly the culprit is.\nOnce you reproduced the bug and recorded the log for me, please don't use that release in production, as it's debug version which is far slower than usual ASF.\n. Well, I can't reproduce it either so feel free to let me know once we'll have something to work with.\n. > Please review the guidelines for contributing to this repository.\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n. Fixed. Misc packaging issue.\n. That's not the purpose of ASF, and fetching game name is making another unnecessary request.\n. In upcoming version there is CustomGamePlayedWhileIdle with similar purpose. Apart from that you can FarmOffline to show yourself as offline to your friends, so they know that you're not in front of the PC. Anything apart from this is duplicating already existing functionality for no reason.\n\nAnd I don't want to implement any sort of messaging for anybody but the SteamMasterID.\n. >  i was looking forward for something like extend ASF to a usual Steambot by changing the Name or responding to Messages automaticly\nThat's not the purpose of ASF, I'm sorry. You should create your own steam bot if you want something like this.\n. They won't if you use custom LoginID that is different than the one ASF is using. Refer to the source, in particular to https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/Bot.cs#L49 if you want to take a look how ASF is doing everything.\nGood luck.\n. Is there any reason to make it switchable through config property? Any case of user not wanting to make this enabled by default when WCF is enabled?\n. LGTM, thanks for contribution!\n. The only case I found  is when redeeming massive amount of keys all at once, but in this case only one (initial) bot would be locked anyway, and then the next one in the queue would be used for getting packages information.\nDistribution also has a downside, because if some of the bots already own the game, then we will try to redeem them and waste requests anyway, which would NOT happen with new improvement, as we'd firstly check if they own the package already, and save potentially wasted requests. This leads to the fact that distribution really works only when we know for sure that no bot owns particular game, and that all games are same.\nI don't like this assumption. I'd opt for more fair and universal solution that works always, as opposed to solution that tends to work better in situation A, but is dramatically worse in situation B.\nEven in extreme distribution case of X keys for the same game, we can send only X failed requests, and lock only X / 20 bots (assuming 20 is lockdown value). Question is if this improvement is sufficient enough to ditch DistributeKeys, or not. DistributeKeys could be better if user had like multiple \"waves\" of massive list of keys for different games, but in this case he could simply send 20 keys per one forwarding bot, and that would lead to even better distribution than with DistributeKeys.\nIn general, if we can ditch DistributeKeys for ForwardKeysToOtherBots while at the same time not making people dramatically unhappy, then it's win-win, as less config options are always better, but we're making a tradeoff of potentially worst \"best case\" for much better \"worst case\", making algorithm more fair in all cases.\n. > we still need to try all keys on first bot, to find out it's ID?\nYes, but if bot gets lockdown, then second one will be checking data, then third one and so on.\n\nit should use the benefits of recent improvement to skip bots that already have the game if both DistributeKeys and ForwardKeysToOtherBots is true.\n\nI added that, but due to complexity of using both DistributeKeys and ForwardKeysToOtherBots it's only partially improved, as in - after bot gets the key, it will use enhancement and forward the key to other bot without trying to redeem it second time if that bot owns the game already, but even if that succeeds, if that bot will be next in the queue of distribution then he'll still try to redeem that key on his own account, as he won't know to which game key relates to without trying.\nI think that DistributeKeys can stay for now after second reevaluation, as it still makes sense for some cases and the current code already works nicely with it. It's simply the fact that with new enhancements we can sacrifice one chosen by us bot for lack of failed tries on other ones, which can be beneficial if we're going to redeem more codes soon.\n. I'll keep this option in then, as I don't know how to do that better at the moment, and I doubt it's possible at all to satisfy those both cases.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ\n. Then you should pay more attention because it's first item in \"Issues\".\n. Ouh, sorry for that many comments :smile:. In general code is good, most things are ASF-specific. Thanks!\n. Only thanks to that this shit can work at least semi-reliable, when it comes to Valve you can trust noone :+1: \nAll good, I think that only updating CardsRemaining is left, can you do that in ShouldFarm()? Should be pretty straight-forward.\n. Oh, indeed, sorry, let me do final review...\n. Looks good, I'll probably do some more misc things that ReSharper will suggest and then release another pre-release for testing, thank you for contribution! :+1: \n. Yeah I'm not a big fan of microsoft guidelines, during all this time I created my own \"ArchiStyle\" that I use for majority of languages... Probably not best coding example to ignore guidelines and create yet another style... :sweat_smile: \nIndeed there is https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm.sln.DotSettings for ReSharper, but major code style is in https://github.com/JustArchi/ArchiSteamFarm/blob/master/docs/CodeStyle.vssettings, I should probably move this file to root of the repo for better visibility.\n. Weird, I've just checked and my resharper config is exactly the same as generated one. I guess that resharper uses defaults based on your VS CodeStyle, and that's the reason why those aren't exported. Still, won't hurt to add them, I just hope that my resharper won't override it. Thanks!\n. I did some changes and made sure that relevant options are being exported in CodeStyle.vssettings now, together with ReSharper settings file it should match the code style 1:1. Feel free to send further pull request if after importing both you'll still notice some code style suggestions. Thanks.\n. ForwardKeysToOtherBots\n\nKeep in mind that there is no fixed order of keys redeeming and it's up to ASF implementation which bot will receive forwarded key\n\nThis is not going to be corrected due to being required in much more efficient algorithm that is coming soon. If you expect from ASF to redeem key on bot X, then you should redeem it on bot X and not use ForwardKeysToOtherBots. It was always like this - the order was never guaranteed.\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration\n. I'm afraid that if you want those options then you'll need to implement them yourself (and send PR if interested), as what you're asking for is on the edge of ASF scope, and those are things I have absolutely no use for.\n\nAdd/remove bots on the fly\n\nYou can do that by initializing new Bot instance, and you can remove bots by calling Stop() then removing them from Bots map.\n\nChange configs on the fly\n\nToo complex to consider implementing, unless you want to rewrite everything and add every callback for adapting to the change, which will be massive amount of work in current project status. It's easier to put new config, remove old bot, then re-add it (see above).\n\nNotification on cards drop\n\nThere is no reliable way to detect card drop, the best you can do is adding some event in ShouldFarm() method that would somehow notify you that bot dropped a card (as in, old CardsRemaining > current CardsRemaining).\n\nNotification on game change\n\nLike above but in StartFarming().\n\nNumber of cards drop of each game in this session\n\nThere's no such thing as \"session\" in ASF, because ASF dynamically adapts to situation, can start/stop bot on as-needed basis and network issues and so on. Your best bet would be probably recording that information and putting in BotDatabase, but as ASF has no use of this, I don't think I'd like to see this included in main project. If you do both suggestions above, you can easily calculate this out of cards being dropped and games being switched, so this should be above in your app.\n\nStatus of specified bot, instead of all\n\nThere is !status already, and if you mean !api then I'd prefer to put that thing as different WCF function call. HandleCommand() is very limited and not the best way to execute anything at all - it's just a very simple way of pairing server with a client using command line arguments - for normal (advanced) usage there should be function for every WCF call.\n\nIn general everything you've asked for is on the edge of ASF scope and I can't see how it would be beneficial to any user or myself, so if you want to have such functionality, you'll need to code it yourself.\nPersonally I think that least intrusive way, and at the same time PR-like would be extending already-existing WCF class with methods that you'd like to add. This will allow your application to call those WCF functions without much hassle, while at the same time not polluting ASF codebase with out-of-scope features. You could even subscribe to channels and receive callbacks on your events. I think that would be mostly OK, as it won't hurt ASF too much to check if WCF is active, and forward some events if it is, while at the same time providing you with the functionality you want to add without rewriting majority of stuff. Just don't use HandleCommand() - instead add your own methods that will be more efficient and reliable. Commands should be avoided by anybody but endusers.\nOf course, that's what I suggest if you want to enhance ASF to fit your usage. ASF is licensed on Apache License and you can fork it and do whatever changes you want, but it will be troublesome to maintain such fork in long-run, assuming you don't want to stick forever with one version.\nIn general I'm open for all PRs, even those I don't consider that useful for neither me nor users, as long as they're done nicely and don't affect existing codebase that much. What you're asking for is mostly a bridge between your ASP.NET app and ASF, so WCF class is a perfect place to implement everything you need, while at the same time minimizing ASF codebase edits to bare minimum.\nLet me know what you think about that.\n. It could be, but ASF was never coded with modularity in mind, even WCF was added much, much later. Rewriting entire codebase to be more pluggable is something I'd like to avoid because I spent much time on making it at least partially stable and reliable in a way that there are no major bugs and I can leave it turned on for weeks without crash or something bad happening. This is impossible to do even with Steam client, not to mention Steam network, and ASF slowly manages to achieve that.\nNobody forces you to use WCF - you could rewrite existing WCF into something more modern and .NET core supported - REST API for instance. There is no major obstacle that makes it impossible to do so, as WCF is only a tool being used in a process, that can be exchanged for something else. However, rewriting entire ASF to allow modularity and better integration with third-party tools is not really that high on my list, as there is still lots of low-level work that has to be done and maintained, not to mention that I won't attempt to rewrite stuff that works excellent for no reason. There are thousands of happy users finally able to use something that works decent thanks to months of hard work on improving this little thing, and I'm sure that it would take another half of the year to achieve something like that in rewritten version.\nDon't take me wrong, I'd love to make ASF good for everybody, but have you seen those excessive error handlers everywhere in the code? Every single one of those was added because at some point somebody got error due to Steam not acting appropriately, and I'm still adding more of them because the bug hunt never ends.\nIf I have to choose between something stable and reliable that works in the way I want, and between something that will take another half of the year to mature and cause excessive bug hunting only to improve codebase for no actual gains for the users, you know what is my choice. It's simply the fact that you can't really start rewriting ASF like this, even smallest change can lead to issues, because Steam's spaghetti-code constantly tries to infect ASF - it took literally a few hours to code ASF in a way that it works, and more than half of the year to ensure that it works for everybody in every case, and not for me only. If ASF was small project with only a few features, probably it wouldn't hurt to restructurize everything, but it reached the point where I'm sure that the modification won't affect anything, yet Steam proves me wrong.\nFeel free to investigate and take a look if you want to - as I said I'll be happy to accept any PRs, also those which don't affect me that much, as long as they also won't affect other ASF things. We could probably slowly add things you'd like to see, but it definitely has to be done carefully and one-by-one, any major rewrite will lead in a mess that will be no longer possible to handle.\n. Alright then, thanks! I'll close the issue then as I have no plans on working on this myself, but I'll be happy to accept any appropriate PRs.\n. Last time I tested this it didn't work properly on Mono, let's see if it does now.\n. Still broken on Mono, I don't even know what is broken to be exact, server seems to be responding but client never gets response.\n. Yeah :cry: \n. Can you show me all log lines of this bot instance instead of just selected few?\nUse something like grep or even Notepad++ for showing only lines containing |buggy_bot|.\nI'm pretty sure this is Steam fuckup and nothing worth investigating, but I can take a look at the log at least.\n. Did you modify logging layouts? Those errors should have message with them, ASF prohibits logging of null or empty messages.\n. Remove NLog.config if you use default settings, there is no need to override them if you don't have a reason.\nJudging from the fact that it was in ArchiWebHandler, most likely it was some kind of networking problem - steam didn't announce end of connection, so SteamClient probably is trying to end it gracefully while not receiving any response.\nThis would make sense as SteamClient.Connect() should always disconnect the old session and initiate a connect, instead, it's stuck in your case, and SK2 still reports that SteamClient.IsConnected.\nI'm not sure if there is anything that ASF can do in this case, it should be handled in SK2 library, preferably implementing a timeout and force reconnect instead of something like this. I've already experienced this problem - it's very rare, but it looks like SteamClient simply freezes and it's not possible to make it reconnect even with SteamClient.Connect() - that's why your keys redeeming requests are failing, because ASF properly tries to send the request, but Steam network never responds back, as SteamClient is frozen. It became frozen the moment it tried to log in to ISteamUserAuth the last time (and failed) - that initiated a reconnect request that was never fullified.\nIt's probably best to ask SK2 devs if they have any clue why SteamClient can reach such state of being unable to operate, and if perhaps it's possible to do anything to overcome this problem apart from throwing away old object and creating new SteamClient(). Maybe @Netshroud could say something about that.\n. If SteamClient is frozen then no request can reach ASF, even if you do make it reach ASF, through other bot instance (like you did), then redeem request will timeout anyway as SteamClient is non-operative. Thing is, during normal and even faulty operation SteamClient should NEVER reach such state, as SteamClient.Connect() should always force a reconnect, and ASF has routines to initiate reconnect if it's needed - it did initiate reconnect in your case.\nThis is somehow problematic as the workaround for this issue would require throwing away currently coded nice way of SteamClient.Disconnect() and SteamClient.Connect() and instead initialize new object on each reconnect attempt. I don't want to do this as this doesn't make any sense - SteamClient should be reusable and there should be never a need to throw it away, unless we're done with it for good.\nSo for now I don't have any real workaround for this, I might need to look into SK2 code and check how the whole connection is being handled to spot the deadlock/issue we're seeing, but hopefully @Netshroud or other dev from @SteamRE/SteamKit2 can at least confirm if my assumptions are right.\nBecause this is the only possible reason why SteamClient.Connect() freezes and doesn't return any callback - neither OnConnected() nor OnDisconnected(). If it did, then ASF would react accordingly, but the callback never arrived, so ASF is still waiting for SteamClient.Connect() to do something.\n. Sorry @Netshroud, I'm mapping it for you right now.\nIt's TCP - the current web session expired, so ASF called ISteamUserAuth dynamically here with proper nonce. That request failed here so ASF initiated SteamClient reconnect here.\nWe reached Starting... in the log, so ASF's last call was SteamClient.Connect() here - after that no callback arrived - neither OnConnected() nor OnDisconnected().\nThat's what I can read from the log posted by @GUiHKX, but that already happened to me in ArchiBoT IIRC - it's basically SteamClient becoming frozen, any request results in timeout. You can't attempt a reconnect neither do anything with it, the only solution is doing new SteamClient().\nThis issue is very rare, so I suspect it's specific TcpClient issue or something like this, but I didn't look carefully in SK2 code yet so this is only my guess for now.\nLet me know if you need any more info.\n. BTW, @GUiHKX can you double-check there is no exception thrown around 2016-07-30 12:58:04.6885? I have unhandled exception and unobserved exception handler, so if there is anything weird in SK2 code or anywhere else we should take a look at this.\n. This can be true as I didn't spot any exception back when I had this issue for the first time in ArchiBoT as well, thanks for checking.\n. Update: It seems that this can be also triggered with going into Windows hibernate mode. @Netshroud\n(As in, after waking from longer hibernation lasting > 10 minutes, SteamClient becomes non-responsive)\n. I'll notify you once we have something to work with.\nNotice for everybody facing this issue: enable ASF Debug mode in order to record debug log from the freeze. After you notice freeze, let ASF work for at least ~10 more minutes in such state. Once recorded, pack whole debug directory together with log.txt to zip and send it on my e-mail: JustArchi[at]JustArchi[dot]net, as it can contain sensitive information.\n. Also it's interesting because when SteamClient goes into such freeze state, it seems that all async jobs are failing instantly:\n2016-08-06 16:37:58|INFO|MrMousePT|RefreshSessionIfNeeded() Refreshing our session!\n2016-08-06 16:37:59|ERROR|MrMousePT|RefreshSession() SteamKit2.AsyncJobFailedException\nThe above is happening with await SteamUser.RequestWebAPIUserNonce();.\n. I noticed something very similar to this issue, but with new HeartBeat I added recently it seems to at least cause SteamClient to be \"unstuck\":\n2016-08-23 05:51:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 05:51:41|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 05:51:41|INFO|archi|StopFarming() Sending signal to stop farming\n2016-08-23 05:51:41|INFO|archi|StopFarming() Waiting for reaction...\n2016-08-23 05:51:41|INFO|archi|Farm() Stopped farming: 463150 (BARRIER X)\n2016-08-23 05:51:42|INFO|archi|StopFarming() Farming stopped!\n2016-08-23 05:51:53|INFO|archi|OnConnected() Connected to Steam!\n2016-08-23 05:51:53|INFO|archi|OnConnected() Logging in...\n2016-08-23 05:52:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 05:53:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 05:54:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 05:55:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 05:56:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 05:57:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 05:58:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 05:59:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:00:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:01:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:02:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:03:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:04:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:05:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:06:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:07:41|WARN|archi|HeartBeat() Connection to Steam Network lost, reconnecting...\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnDisconnected() Disconnected from Steam!\n2016-08-23 06:08:19|INFO|archi|OnConnected() Connected to Steam!\n2016-08-23 06:08:19|INFO|archi|OnConnected() Logging in...\n2016-08-23 06:08:19|INFO|archi|OnLoggedOn() Successfully logged on!\n2016-08-23 06:08:19|INFO|archi|Init() Logging in to ISteamUserAuth...\n2016-08-23 06:08:21|INFO|archi|Init() Success!\nSteamClient \"died\" for more than 15 minutes, and all scheduled requests including their callbacks got frozen for that period - it's clearly visible with HeartBeat() trying to SteamClient.Connect() every minute to finally wake it up. Then finally after long timeout (probably TCP socket internal one) all callbacks are immediately returned.\nReally strange :confused:\nI set up ArchiBoT with DebugLog and I hope to reproduce complete freeze eventually. It looks like some general issue with TCP socket rather than SK2 itself. Something low-level that prevents SteamClient from operating, and not SK2 code itself.\n. Feel free to check - I didn't spot any issue related to this function, recently I even added extra check that makes sure to run this function while SteamClient.IsConnected. KeepRunning is set to false only in Stop() function, but that one requires somebody to call !stop and results in appropriate Stopping... result in a log, so I'm sure that my callback loop was working properly. The loop is created here the first moment my bot instance is started.\nBesides, if that loop wasn't working then I'd not get \"unfreeze\" after 15 minutes, because there is no place of re-creating that loop apart from Start(). My HeartBeat() was only calling SteamClient.Connect()``.\n. BTW, I'm very grateful you're trying to help us Netshroud, I appreciate that. I'm also doing my own research regarding that, including running my bots withDebugLog` so I can potentially check if there is something weird going on.\nMy main suspect for now is TCP socket that somehow \"blocks\" for given timeout during network issues or malfunctions, preventing CMClient from communication. That is however only wild guess based on logs and situations, I hope to reproduce it with debug log and proper log soon, but as noted this is quite rare issue that is very hard to reproduce - I can only set up a trap and hope for the best.\n. Finally after nearly a week of hunting I think I managed to reproduce this issue, and while socket timeout after ~15 minutes is another one, this issue is mostly caused by very rare situation of concurrent calls to SteamClient's Connect() and Disconnect(), which should be fixed in https://github.com/SteamRE/SteamKit/commit/330fe9bea8b80b3cf484ba09611b2e53948eefb3.\nI wrapped ASF calls in lock() statements for now before fix above lands in SK2 release, and I consider this issue as fixed until somebody will be able to reproduce this on ASF V2.1.4.6+ (which will be released soon). I'm still actively watching this to ensure that the fix indeed works, but due to nature of the bug such thing can be stated semi-reliably only after longer period of tests.\nThanks to all who spent their time on trying to help and find the culprit, especially to @Netshroud for offering his helpful hand despite of not being directly connected with ASF project :smiley: \nI consider this issue closed until somebody (including me) will be able to reproduce it once again in ASF V2.1.4.6+.\n. No.\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration\n\nKeep in mind that there is no fixed order of keys redeeming and it's up to ASF implementation which bot will receive forwarded key.\n. There was NEVER any fixed order, it was always up to ASF implementation. Dictionary has no order. Stop confusing implementation with your expectations.\n. Now there is a fixed order - alphabetical.\n. Sure, why not.\n. You didn't follow Setting up guide.\n. > If my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n. This was already fixed.\n. @Luckz \n\nIcon can't be easily configurable, it's always built-in, and I must eventually decide which one I want to stick with. I also like current one, but it's not only placeholder that exists since V0.1, it's also an icon I don't have full rights to use.\nI'm always open for suggestions and solutions that satisfy majority of people, but icon can be only one, and I'd almost always want to use exclusive icon, simply because original image creator might not be aware of using it for ASF, or he might not be fine with it (even though it's very unlikely to happen).\nIssue will be open for a few more days, and I think that eventually @stackia's icon will be used, as I don't have anything against that, neither I have any other contributions to choose from. If somebody is not happy with that outcome, he can always submit his own work for evaluation as long as this issue is open.\n. The idea looks nice. Could you prepare one version with ASF text like @quappo pointed above @stackia? I'll then organize short voting whether people want clean version or with ASF text version and finally decide which one to use :smile:.\n. I don't see any error apart from Steam being unavailable.\n. Not ASF bug.\n. I'm not here to decide which unzipping program is best, and I'm not even trying to make such choice. I mentioned some popular apps widely used by both Windows and Linux/OS X users. Whether you want to choose  one or another is up to you and there will be nobody enforcing specific one to disappear from the list simply because it's worse, or better (in your opinion) than the other one.\n. > I'm not here to decide which unzipping program is best, and I'm not even trying to make such choice.\n. You reached MaxFarmingTime, where is the \"issue\"? I'd say that actually everything is working as intended and ASF worked around steam fuckup.\n. Steam can fuckup in any single request being sent to it, and ASF is supposed to smartly detect the fuckup sooner or later and react accordingly. It's actually very, very rare to spot ASF bug, and 99% of those cases are due to steam fuckup I didn't think about when coding that routine.\nSo yeah, I'd suggest to take every ASF issue with grain of salt, or even better - simply stop caring and leaving it in background doing it's job. The more you look at ASF, the more issues you will find, and noone of them is fixable.\n. Yep, help button should be available in top right corner, next to [X], but it seems to not be a case with Mono. To be honest CG was never tested on Mono, and I'm shocked that it even works properly - if you want to suggest a fix for this issue, your best bet is informing Mono team at https://bugzilla.xamarin.com/ because this is definitely Mono issue and not ASF one, the only thing which ASF could potentially do is replacing old valid method with the one that works on Mono.\nI'll keep it in mind when designing new ASF GUI app with CG-like features, and perhaps even correct CG a bit in future, but that's wishlist and not a bug.\n. Why? You have keys forwarding feature that automatically sends key to bot that doesn't own given package. What !ownsall achieves in this case?\n. You don't hit cooldown with new forwarding keys enhancements introduced in 2.1.3.9 - https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.3.9\n. > Anyway, it'd be nice to have that kind of error (the certificate error) shown, at least when the debug flag is up.\nAsk Mono team for that. ASF has no way to tell when you're using it with --debug, and if you run it with Debug mode then you'd see that.\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nFAQ\n. > Is it possible for ASF to check if 5 trades were sent to masterid and to delete them if they are the same or its items are unavailable?\nProbably yes, but this is out of the scope of ASF, as ASF will not attempt to interfere in any way with trades being sent already - this is too agressive and leads to unwanted behaviour, e.g. by cancelling trades not being sent by ASF. On normal ASF run you should be the one evaluating those trades, and trades in \"no longer available\" state do not block ASF from sending more of them. If you're however not reacting to trades that ASF sent to you - it's not ASF to blame. Consider setting up your primary account for Trading so it can automatically accept donations from your bots, this way you can be sure that no trade will be pending for accept, and nothing will block.\n. > and i sent 6 of them, just one got accepted\nAnd you seriously wonder what might go wrong? :disappointed: \nThere is no such thing as \"delayed\" ASF - looting is expensive request and it takes a while. If you intentionally force ASF to act in such way, then I don't really see any bug here - ASF only does what you tell it to do.\n. Not fixing steam fuckups.\n. Why? Is there any limit enforced by Valve? Because to me this can happen even with 3-4 and has nothing to do with number, although obviously the higher the confirmations, the more chance.\n. Also IIRC I already tried with 10-20 and it didn't help, I'm not going to wonder what Steam fucked up.\n. No, it's not temporary. It's steam fuckup that is happening constantly with more confirmations to accept than 1, and nobody including me managed to find any real reason for Steam randomly rejecting to accept some confirmations and returning an error. It happens also with normal steam authenticator and there is nothing to fix in ASF.\n. We already had tests with 30 and 5 ~3 weeks ago in https://github.com/JustArchi/ArchiSteamFarm/commit/fac5e6503516270eb0dc287b9403f1ce2d68ee03. Neither 30 nor 5 helped in anything.\n. Should be a bit better in https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.4.4\nI pretty much adapted @Ryzhehvost idea, just in a bit improved version, thanks to which performance penalty happens only in case of Steam fuckup and not always.\n. Try with https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.4.3 - it should be now fixed. If not, I'll take a second look.\n. > It would also be cool if you could reproduce your issue on latest pre-release (and not stable) version, as this is most recent codebase that might include not-yet-released fix for your issue already.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/336\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n. https://github.com/JustArchi/ArchiSteamFarm/commit/e6d4304ca155baab8f0fd1440c51d021dba74f70\n. That's why I always suggest testing latest pre-release :smile: \n. > 2016-09-14 13:35:01|ERROR|Tsunami|Init() System.Net.WebException: The remote server returned an error: (504) Gateway Timeout.\n\nThis is never ASF issue, and the commit you linked fixes totally different thing and doesn't help with this case. As you guessed right, this is because Steam API is down.\n. https://github.com/JustArchi/ArchiSteamFarm/issues/341\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ\n(Login keys part)\n. > Sometimes the issue also magically solves itself after some time, ask GabeN.\n. If you ask me, just ignore that quirk - if you have all required credentials, which is login, password and ASF 2FA, then ASF is able to handle that issue itself and doesn't require assistance - this problem will solve itself sooner or later anyway. You can try to solve it earlier, but due to nature of Steam fuckup it doesn't have to succeed, in any case, it's not ASF bug.\n. As I wrote:\n\nI've already seen such issues not only with ASF, but with regular steam client as well (a need to input login + password on each run, regardless of \"remember me\" option).\n\nSorry, ask GabeN \ud83d\ude2d \n. Out of the scope of ASF - you have !pause for that, and ASF's main purpose is to farm games, not redeem keys, I see no reason to add such functionality.\n. Although on the second look, it might make sense as people wanted to start bots in paused state, mainly for manual farming, so I'm going to reconsider this.\n. > JustArchi closed this in 96dc324 on 1 Oct 2016. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n. > This option serves the purpose of \"I have key X, I want to farm cards off it, and it doesn't matter for me on which bot the key will be redeemed\". When you switch this property to true, bot will firstly try to redeem key on it's own account, and if it fails for any reason (such as bot already owning the game), bot will forward the key to other bots, so they can redeem it instead.\n\nI don't see any logical reason why you'd want to use forwarding and stop in case of timeout. It's very clearly stated that it should not matter for you on what bot the key will eventually be redeemed, and the actual order and logic explanation is done for convenience of users, so they can know what's going on.\nIf you want to redeem key on specific bot, this is what !redeem (and newly introduced !redeem^) is for.\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n. > GitHub is NOT technical support.\n\nI'm not sure how it's even possible to miss info you were initially looking for, that is included in at least 3 different places over the wiki, and I'm also not sure why you still don't follow contribution guidelines, but you won't get any answer to your technical questions here. If instead of writing you'd spend 20 seconds and read the wiki as I suggest in every single possible place on GH, then you'd solve both of your issues right away. Instead, all you did was a waste of both your and my own time.\n. As per the wiki:\n\nThis option serves the purpose of \"I have key X, I want to farm cards off it, and it doesn't matter for me on which bot the key will be redeemed\".\n\nThis is important - implementing a mechanism that will allow you to choose which bots are being considered for forwarding defeats the whole purpose of this option to exist, because the whole point is to drop a key and don't bother with where it lands. So no, I don't see any real need of such feature to exist, but ASF offers you several workarounds that are possible to achieve the result you want:\nFirstly:\n\nThe actual redeeming order is alphabetical according to names of the bots.\n\nWhich makes it possible for you to set your main account as _main.json or similar in order to put it last on the list. This way all other accounts will get the game firstly, but your main will still get the key if all other bots already own it. So it helps, but not entirely.\nThe second workaround, and the one that truly addresses this issue is executing !stop main or whatever you called your main bot account - instance that is stopped is temporarily excluded from keys forwarding (logically, it's not connected), so this way you can temporarily shut down given account, redeem your keys, and turn it back on.\nBoth workarounds have their usages, and I'd personally stick with first option, unless you have a strong reason against it and still want total exclude that is possible with second one.\n. > i.e. one extra boolean option in config\nExactly, one extra boolean that is not really needed for 99.9% of the people. I'm more interested in !redeem& command or likewise, which would simply force forwarding excluding the bot that initiated the redeem. I think I can add it myself.\n. Feel free to test https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.6.0 - I gave it a brief look and it seems to work properly, but the whole redeem function got so complicated that I'm slowly stopping understanding it, which is not a good sign \ud83d\ude06 . Hopefully there are no bugs and it works as it should.\n. I can't see any reason for that, as you have access to your trades history and you can easily check all donations there. Also you can disable trading alltogether if it annoys you.\n\nnow you cannot verify what he sent anymore\n\nTherefore, that statement is false. Is there any other reason apart from missing a notification? In current stadium I'm not convinced enough.\nBTW, notification problem is also so-so, as ASF states clearly when it's accepting trade, so you can tune logging module to notify you on each trade being accepted, but let's assume that it's not what you want.\n. Done, please give https://github.com/JustArchi/ArchiSteamFarm/releases a try. Check out the wiki in order to learn how new TradingPreferences works. Let me know if it works properly for you.\n. Yes, None trading preferences disables trades alltogether. Perhaps I should correct it.\n. On the second look no, it's working as intended because your bot can't easily guess what is trade sent from one of your bots and what is a donation sent from somebody else. Making a guess purely based on existance of given bot config won't work in multiple ASF instances scenario, and also if we assume that donation from bot account is possible.\nSo everything works as intended.\n. > I don't really understand what you mean with your last message. I would expect that trades sent to SteamMasterID from a bot would be accepted.\nWIthout AcceptDonations - no. You don't understand the case.\nAssume every bot is run in it's own ASF instance. Bot1 sends to Bot2 a loot trade. How Bot2 can tell if Bot1 is ASF bot or a stranger? You can't determine it, because you do not control that bot from this ASF instance. ASF should always work without any instance assumptions, as in - we can't say if account is ASF bot or not based purely on trade being sent, unless we'd have that account in ASF instance, but that would bring instance dependency I want to avoid at all cost, as it should NEVER matter which setup you use.\nThe only thing which needs fixing is outdated descriptions, so thanks for pointing that out.\nI'm yet to decide if I want to bring instance dependency by allowing steamIDs that are being used by bots to be accepted with disabled AcceptDonations option.\n. AcceptDonationsFromSameInstance doesn't make any sense, I can't see any use case when somebody would want to intentionally set it to false, yet intentionally issue !loot and alike. That's definitely out.\nIn the end my initial idea of checking if any of enabled bots has the same ID as the one sending the trade seemed to be best one. I definitely won't introduce extra properties of who to accept donation trades from, even this issue is already on the edge of ASF scope. Adding extra config property is out, but adding extra optional trading logic should not hurt in long-run.\nSo currently, ASF will:\n- Accept all trades from SteamMasterID\n- Accept all donation trades if AcceptDonations is set\n- Accept all donation trades from all bots, even if AcceptDonations is not set. Account is considered bot account only if it's available in the same ASF instance, enabled and connected (otherwise SteamID can't be checked).\nThat should be appropriate for majority of use cases, and all use cases that ASF wants to cover.\n. If people read changelogs, it'd make my life much easier - https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.1.6.2\n. So what exactly you're reporting? Because this issue currently does not fit neither bug nor suggestion.\n\nPlease review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n. Normally I'd say \"out of the scope\" and close the issue, but this time due to the fact that ASF already includes excellent logging utility that could be improved and split on per-bot instance, I think I could add chat messages on special low level such as TRACE, which would allow you and other users to later catch specific logger from specific bot on specific level and redirect it to file of your choice.\nThat however will have some limitations, and I'm definitely not going to bother with exclusive logging, as this part is already on the edge of ASF's scope.\nWishlist for now.\n. \nNow ASF nicely logs those messages, you'll be able to redirect them to the output of your choice as described in logging section of the wiki. This is best I can do without going greatly out of the scope of the program.\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nIn addition to that, UseAsfAsMobileAuthenticator was removed so long ago that I don't even remember in which version to be exact. Read Escrow part to learn how to use ASF 2FA.\n. > Is there a chance that ASF could more closely check whether trades are really successfully sent?\nNo.\n\nOptionally ASF could try to remove pending ASF trades before sending another\n\nNo. ASF should never decide which trades to cancel only because it believes that something should be cancelled.\nASF is just a tool, not a fool-proof solution to solve all your problems. If you decide to !loot, and you forget to accept 2FA confirmations afterwards, or you schedule ASF to !loot for you and you don't remember to accept it, then it's your own fault of configuring/using ASF in a wrong way, and not the fault of the program to know better what you want, and fix your fuckups. ASF already has steam fuckups to work with, and I don't really need to add another layer of complexity fixing intentional user fuckups too. Working with Steam is painful enough to ensure that those trades are even passing through, I won't even bother adding extra logic ensuring that user knows what he's doing.\nSolution: Use ASF 2FA, or remember to confirm manually. If you can't do any of that, don't use !loot.\n\nI only want to say that it would be better if the message sent by the bot would be correct\n\nIt is correct - if ASF can't send trade offer, it returns an error. If trade offer is sent successfully, it returns success. Whatever extra logic you have to do next such as accepting confirmation, e-mail or petting your cat, is outside of ASF scope/logic to keep eye on. ASF is supposed to send trade offer, and confirm it (if ASF 2FA is enabled), not ensure that you or something else confirmed it later on.\n. Also see https://github.com/JustArchi/ArchiSteamFarm/issues/333#issuecomment-241017765\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n. Your attemped usage of ASF is semi-wrong. Things such as adding delay and executing client in another process should be done on script or OS level, and not in the application.\n\narchi@archi:~/ArchiSteamFarm/ArchiSteamFarm/bin/Release$ mono ArchiSteamFarm.exe --server &>/dev/null & sleep 10; mono ArchiSteamFarm.exe --client \"status archi\"\n[1] 10854\n2016-11-13 15:42:44|INFO|ASF|Init() ASF V2.1.6.8\n2016-11-13 15:42:44|INFO|ASF|IsRuntimeSupported() Your Mono version is OK. Required: 4.6 | Found: 4.9.0\n2016-11-13 15:42:45|INFO|ASF|ParsePostInitArgs() Command sent: status archi\n2016-11-13 15:42:46|INFO|ASF|ParsePostInitArgs() Response received: Bot archi is not connected.\nThis is how you should do that, and it was always possible to do it this way. But sure, I improved WCF a little and made it possible to use --server --client \"command\" combination too.\narchi@archi:~/ArchiSteamFarm/ArchiSteamFarm/bin/Release$ mono ArchiSteamFarm.exe --server --client \"status archi\"\n2016-11-13 15:53:06|INFO|ASF|Init() ASF V2.1.6.8\n2016-11-13 15:53:06|INFO|ASF|IsRuntimeSupported() Your Mono version is OK. Required: 4.6 | Found: 4.9.0\n2016-11-13 15:53:07|INFO|ASF|StartServer() Starting WCF server...\n2016-11-13 15:53:07|INFO|ASF|StartServer() WCF server ready!\n2016-11-13 15:53:13|INFO|archi|Start() Starting...\n2016-11-13 15:53:13|INFO|ASF|ParsePostInitArgs() Command sent: status archi\n2016-11-13 15:53:15|INFO|ASF|HandleCommand() Answered to command: status archi with: Bot archi is not connected.\n2016-11-13 15:53:15|INFO|ASF|ParsePostInitArgs() Response received: Bot archi is not connected.\n2016-11-13 15:53:30|INFO|archi|OnConnected() Connected to Steam!\n2016-11-13 15:53:30|INFO|archi|OnConnected() Logging in...\n2016-11-13 15:53:31|INFO|archi|OnLoggedOn() Successfully logged on!\n(...)\nHowever, if you require to execute command on a bot instance that is connected, then you should still stick with proper (first) approach and adding delay long enough to wait for bot to get connected (or do something better such as asking for bot status in a loop every X seconds, and executing command once it's up).\n. > First of all, I use it on Windows so PowerShell is kinda pain in the ass but I see what you mean.\nThere is nothing in above example that is impossible to do on Windows.\n\nSecond, the first approach you recommended is wrong, it never should be based on a actual delay because if for some reason process launch/execution [to the point where command can be executed] takes more than specific delay it will fail.\n\nAnd that's why you should code your own logic of try/retry, such as starting ASF, and in a loop, waiting for it to start listening on given socket, then attempt to send a command. Only this guarantees reliability, everything else is prone to errors.\n\nIdeally, best way to parse the bot stdout for the status message that WCF is up and bot is ready to receive commands\n\nNo, best way to parse the bot stdout is to not parse it at all and instead use excellent and reliable logging that ASF offers.\n\nI will stick to manual approach because amount of glitchy execution through windows script[s] usually ends up in manual resolution anyway due to often \"something did not work as intended due to bullshit Windows reasons\".\n\n\u00af_(\u30c4)_/\u00af\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n. This indeed looks like application bug, but without more info I won't be able to do anything with it - nobody reported such problem, ever, and I also never faced anything similar, not to mention that I obviously can't reproduce it.\n\nI can't notice any part in the CG app that could yield to such freeze, as this is typical problem when app is doing too much on UI thread, but CG app does not. Are you sure that your .NET framework is working properly, and you're not having issues with other apps?\n. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\n(It's intentional)\n. > The references to SteamTradeMatcher in the Trading section and others do not indicate that it is a sub-option of TradingPreferences\n\nApart from that, you can also extend ASF trading capabilities by enabling SteamTradeMatcher in your TradingPreferences.\n\n?\nIt's very clear to me. If there is some other place in which it's not mentioned that SteamTradeMatcher belongs to TradingPreferences, then please link it.. If you spent 5 minutes on the wiki, then you'd find out that it's already possible.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. If you checked out commands, then you'd instantly notice what has changed.. Personally I'm against this command. ASF already includes auto-reload of configs modified on-the-fly, and I see absolutely no reason for anybody to use a command instead of config edit. Config is not supposed to be modified on daily basis, but written once and being used all the time.\n\nMoreover, due to the way how complex ASF is, this command would be equal to bot restart in order to apply a change, as there are many properties you can't easily edit without a bot restart. I'm not convinced enough \"why\":\n\nSome users find it difficult to edit a json file \n\nThat has absolutely no point - ASF-ConfigGenerator already exists, and you can implement easily another GUI which acts as a frontend for user in config generation/modifications.\n\nExternal apps can use this managed way to read and change a bot's configuration without messing with the real files.\n\nExternal apps should not affect config properties being used at all - that's what ConfigGenerator is for, and user configuring ASF.\n\nIn the future it would be awesome for ASF to configure itself through command line, even add/remove bots and configure them on-the-fly. \n\nASF can already add and remove bots/configs on the fly (without program restart), and I see absolutely no reason for it being able to configure itself from command line, if you've just said that users have difficulties editing JSON config, I can't even imagine how they'd be able to edit ASF via command line.\nUnless you can convince me that this has at least one valid usage that I can consider worthy, probably it won't happen anytime soon. Right now I consider this suggestion entirely useless, probably for some specific third-party app usage that is touching things it should not, as ASF config can be edited during runtime, and it's already possible - through a file change. Whether it's user, app or OS doing the change, doesn't really matter for ASF, and temporary edits are discouraged.. > I'm confused here. Aren't we supposed to edit bot.json by ourselves? Can we use notepad or not? How is it better to use any unauthorized app/tool/editor to edit bot.json and not use an internal !config command?\nASF is supposed to read your config, parse it, and act the way you want. It is better to use app/tool/editor for that, because it can ensure things your notepad can't, e.g. proper JSON structure, ensuring you won't input invalid types etc. This is what ConfigGenerator is doing, and I'll always suggest to use something more capable of fitting particular tasks than anything you can think of - there is a reason why you program in Visual Studio or any other IDE and not plain Notepad - this is also the reason why you should use ASF's CG or any other tool for editing config files, and not just anything.\n\nNow let's think, is it more logical for me as a developer to build my own way to edit json files -which would be easy, we totally agree- , and possibly make a mess of them, or should i use the already official way to change those options?\n\nThere is no already official way. Both ASF and ASF-CG has hardcoded valid structure for given version of ASF to use. Exposing that hardcoded structure to you in API or command is pointless considering the fact that your app is not ASF V3 that is supposed to edit configs.\n\nLet's see something else: I've starting building a shell/GUI app to access ASF while it is running. I want it to be more user-friendly (or should i say noob friendly) so that ASF would be used by far more people in the future. That way i need to advertise more of some ASF's options like FarmingOrder which is awesome and many users don't even know -considering the recurring questions in SG forum.\n\nGUI that I started working on a while ago has fundaments ready, missing only actual structure of the APP and using everything that ASF backend can provide. Want to help? PRs are welcome - backend is ready.\n\n\nFinally, having a developer's notion over everything, I'd like to consider ASF as a class or a DLL that i can access through a service / WCF server option. Considering that, i would love accessing ASF's public properties and methods that would ensure me authorized access and data validation. This, imho, would make ASF even greater, like a big class implementing the perfect encapsulation.\n\nWith one difference - I'm not building a class library - I'm build a program with given set of features. Any extra third-party integration, such as WCF, is entirely optional and not actively worked on. The objective of those extra bits is to make it more or less possible for third-party integration, such as e.g. redeeming keys via php script, or easily checking status of the bots without a need to parse log file. WCF is not designed for ASF configuration during runtime - it never was.\nIf you really want to make a nice ASF frontend that would encourage newbie users into using ASF, possibly make it very easy to use with only a few actual clicks, then you're in massive luck, because GUI app I started working on has everything you need in terms of the backend, and is missing everything you want to add in terms of frontend, so you can simply start integrating CG things, and then entire user ASF frontend you have in mind, with the backend that you have access to (and is shared with main ASF executable). If you on the other hand want to create something entirely different, then you're out of luck as I don't consider any third-party non-ASF app as in need to access internal ASF things, such as config structure.. > Anyway, i've mentioned all the above in a rather theorical level of discussion. You know better than me what you should do with your baby. Thanks for stealing away your free time, anyway. \nI'm always open for discussion and enhancing ASF, if I can spot advantages of doing so. I can't see any advantage for a !config command that would allow users to edit config temporarily during runtime, and I can see massive disadvantages in terms of code, complexity, bugs and overall structure if I allow to do that. Your only argument so far is that you'd want to create a nice frontend for ASF and you need to allow config edits - that's fine, but it has nothing to do with ASF being capable of doing so via a command, as your argument would be very strong if I was building a class library, and not an actual program. Your enhancements are more fitting into enhancing ASF itself and not creating another program that would try to fix what is not broken.\nIn fact, if you truly want to do what you advertise, then enhancing that GUI app should be much better for you, as it doesn't use some awful WCF way that is supposed to execute ASF commands, but entire ASF structure, for example (as you can see above), providing you with avatar hashes out of the box after initialization that can be displayed. You can't make independent frontend app without strong support of backend base, and in this case backend base is not developer-friendly by definition, as it's a program and not class library. That's why I'd be happy if you decided to improve existing GUI which is in early development, instead of doing the same in much worse way by using WCF and re-implementing everything only because ASF doesn't expose it as a typical library. Of course, decision is up to you, I can't force anybody to contribute to ASF. You can even entirely disagree with me, tell me to begone, fork ASF and release your own fork - license permits you to do so. I just can't see a reason why fix what is not broken, instead of improving the base project.. > just because you're programmed to invalidate anyone else and argue with anything that comes before you.\nThat's entirely wrong, at least 80% of ASF features right now were suggested at some point by users, and I can also spot a few that were coded entirely by somebody else, without even asking me first if it can be considered useful (FarmingOrder or entire !loot are just two examples). It's true that I don't want to accept anything somebody could come up with, because it's not a \"grant me a wish\", but \"improve ASF\", and when talking about features and enhancements actual priority is usefulness and completness. I'm not making tradeoffs here of \"do X for cost of Y because maybe somebody could eventually, with a bit of luck, find X useful\". There is either \"do X because I have strong arguments why we should do that for cost of Y\", or nothing gets changed. If there are no disadvantages, I usually have nothing against, and that was the case with 99.9% of enhancements, even those I had absolutely no use of.\n\nI'm still confused here, which one of the above is valid?\n\nBoth. I can't even understand how a need of bot restart contradicts ASF ability of auto-reload. Are you trying to point out anything you can come up with, or you mixed up something?\n\nThe external ConfigGenerator can change settings safely and internal ASF could not, because? \n\nBecause internal ASF first rule is, it does not, under any circumstance, edit initial .json files. You can set them as read-only, only for ASF user, and code must ensure that this scenario can work properly. Any RW data is contained in .db (and .bin) files. Initial configuration is never edited by program directly. Only user is able to edit it, with optional help from CG.\n\nKeywords here are: Small set, safe options.\n\nSmall set of safe options, incomplete, prone-to-error solution, that nobody has any use of because you can already do the same with CG and config edit, in addition to that - make change permanent, as opposed to temporary one. Give me at least one strong reason why I should waste time implementing something inferior to already existing solution - because I can't find any.\n\ni'm still confused on how a third party shell/gui can be obstuctive or offensive or to anybody, or even to your program which in fact would advertise and promote its use.\n\nThose are your words, I never said anything like that. Moreover, I even actively promoted third-party solutions, especially those that are more powerful, e.g. CG over Notepad.\n\nI did't see any GUI per se, or functions, only some code downloading the avatar and resizing the image, right? \n\nYep, because that gui is in very early alpha phase, but it has everything what ASF console edition already offers + extras. I wanted to finish backend before coding frontend, so right now it just waits here for hooking up to appropriate functions. I'm not that motivated to working on it though, neural networks in ArchiBoT are much more interesting.\nIn general, if you expect me to code a feature you want to see, you must convince me why I should do that. Usually just one single reason I can understand is enough, especially if something is rather easy to do, as I linked you above - even if I have absolutely no use of that thing. In your case however, I simply can't understand why I should waste my time doing something that is possible already, and in much better way. If I can't understand that, and you can't find any more arguments supporting your idea, then there is no reason for anybody to add it to ASF, especially because all 3 categories of users will find it useless - newbies will prefer CG over any command, intermediate will just launch notepad instead of memorizing command and syntax, while experts will simply sed the change.. It's nice to hear that you understood my reasoning, and not thought that I'm attacking you or trying to find arguments against at all cost \ud83d\udc4d . As a good ending, I'm happy to tell you that GUI ASF has planned config edition at some point (integrating current CG functionalities), so there definitely will be a way to do so in the future, and much easier too. At current point though, I don't want to bring that dependency to ASF itself, because ASF is simply supposed to work in programmed way, not do too much such as configuring itself. If you take a look at common UNIX pattern found in GNU/Linux, you'll notice that configuration part is done entirely outside of the daemon that is running, and noone offers ability to edit it's configuration files from itself.\nTherefore, I'm closing this issue at the moment, as it's out of the scope of ASF, but I'll for sure add config edit option to ASF GUI, eventually (when I get enough motivation to work on it).\nThanks for your input and feedback regardless, I prefer much more people suggesting even potentially out of scope features, rather than complete silence \ud83d\udc4d .. I don't have anything against those 3 extra properties, why not. I'll probably add them soon.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Indeed it looks like BasicHttpBinding() is for some reason too stupid to handle even 127.0.0.1 case properly, I'm not entirely sure why but I confirmed it with MS docs, therefore I switched WCF to TCP binding instead, and that one listens correctly on 127.0.0.1 interface if you specify 127.0.0.1. For some reason it doesn't work with specifying localhost, therefore I also renamed property appropriately and enforced 127.0.0.1 instead of localhost from now on.\n\nThanks for report.. Invalid suggestion, ASF does not have any window to minimize.. Your scenario is intended - this is how it's supposed to work, as this is the scenario of bot acting like a middle-man (e.g. donate bot) that will automatically re-send everything back to you if it gets anything. Very useful if you need such setup e.g. because you don't want to share your main account trade token just like this.\nThis is actually valid suggestion, I just don't know what to do about this yet. Wishlist for now. Of course, until I decide what to do about this, you can simply !stop bots you want to temporarily disable.. That's out of the scope of ASF.. > This should not happen as I want to be able to that manually.\nThen set IsBotAccount appropriately.. No. And I really hope that I do not need to explain why. If you want to abuse greenlight system, you do it without me helping you.. It has nothing to do with ASF, but with Steam returning wrong servers for ASF to connect. Removing ASF.db manually usually solves this.. Should be \"fixed\" since V2.1.8.2, even if the culprit has nothing to do with ASF but Steam Network.. @Tsunamical I don't want to make assumptions what might be steam network issue, and what could be ASF issue. It's very sensitive subject, as what today is steam network quirk might in future be ASF incompatibility with some Steam change that will be falsely assumed to be steam issue, when it's ASF that should be corrected and not Steam. I'm used to people not reading FAQ or giving any useful feedback, that's why those errors/warnings are crucial for me to see what is happening, as I am able to tell what should be corrected and what is intended - if ASF had extra logic of guessing itself which case it is, there is too high chance it could guess wrong in the future, and that could lead to ignoring issue that should potentially be solved by me. So it's easier for me to yell at people to go read FAQ rather than expecting them to report things when ASF tells them to \ud83d\ude06 . The way it's now I can at least clearly see what is wrong.. No, if your account is bot then by definition you should have no extra items there as those are not generated automatically.\nThere are many cases where you do want to keep emoticons and backgrounds even on bot accounts, e.g. I have such situation with ArchiBoT. The way it is now satisfies me, but I might want to separate it later on into some kind of byte flags, so you can decide what you want to loot per each account.. Thanks for very detailed bug report.\nBased on this, it seems like I need to drop args provided by the service start, and instead get args from the environment. That's quite weird that official docs state something like this, but I guess there must be a reason for that.\nI closed this issue as it should work, even though I didn't check the fix myself. Feel free to download latest automated AppVeyor build if you want to confirm that it solved your issue. Remember that you will need to re-install ASF service with new executable.. Also if everybody reported bugs like you did, we'd already be around version V17.7.3.0. I'm very happy to see that there are still people that put serious effort into making it easier for me to locate the culprit, even if it's very trivial like in this case (assuming the fix works). Double thanks for that! \ud83e\udd47 . No, ASF won't automate your TF2 or CS:GO items.. ASF has only basic functionality related to group-management. ASF bots will join SteamMasterClanID group and chat, if you configured that option AND your bots are not limited. Everything else related to group-management is out of the scope of the program.. No, that's what ASF 2FA is for. Besides, you don't need 2FA to log in, it's required only once, until login key disappears.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. The HH:MM format is very limited, it does not cover seconds or days, and is fixed, which means that ASF will state 02:00 instead of 2 hours alone.\n\nIndeed, I missed minutes in my new human-readable format, so thanks for that, added in the commit mentioned above.\nBut no, I'd like to keep new format, as it also unifies the way how ASF is printing all timespans across the program, as recently I added time approximation for farming cards, and printing that one in one way, and actual time spent the other way is non-consistent, and being consistent is the primary thing when writing clean ASF code. HH:MM does not cover scenario of hours exceeding 24, meaning that if it for some reason took longer than 24 hours to farm, ASF will cut all days, and yes there are many various cases when this can happen, e.g. if you had 24 hours in the playtime before even cards were added for that game.\nI don't consider new format that hard to parse either, it's very consistent. Yes, a bit harder to parse, but the change is justified, not only for the fact that now more than one thing depends on displaying TimeSpan, but also because previous format was in fact bugged and didn't work properly in the first place.\nIf you can find some other argument, we can discuss it further, but parsing one loses with consistency and the fact that ASF log is mainly for humans, not for machines. Machines have API, and TimeSpan included there is as expected in a format easy to serialize and deserialize.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. If badge page states that there are cards available, ASF farms them.\n\nIf you think that badge page is wrong, you have Blacklist for that.\nAttempting to fight with this issue is not only impossible, but deemed to fail as well.. If you really think that this is the only indicator that you're using ASF, then you're deeply wrong. I openly claim that ASF is ASF, not hiding that fact. Changing trade message won't change anything, if Valve wanted, they'd ban you right away on steam network login made by ASF alone. They do not need such a thing like trade message, besides, everybody could write it, it's not any legit proof that trade was sent by ASF.\nAnd if you already know that, then you also know that message is available only to you, so it's pointless to change it.. Of course I can, you can start from removing SK2 dependency and building your own fake steam client that doesn't clearly state it's a bot but official Steam Client.\nIf you're skilled and lucky, that will keep you busy for next 2-3 years \ud83d\ude03 . ASF sends request as expected, whether steam network honors it or reacts in particular expected way is out of the scope of ASF.. Thanks for report! \ud83d\udc4d . - We're farming games, not cards. And when farming multiple of them, we're not farming cards at all, but farming playtime.\n- Time prediction is made for entire farming queue, not a single game, because it's also affected by chosen farming algorithm. Predicting a single game is not possible, unless you entirely ignored the actual way of farming the queue, but then your prediction is incorrect by definition.\n- ASF prints current status, and total status. Nothing guarantees you that it will be the same, which defeats correctness of your last 3 statements, as it's entirely possible that ASF can be farming 4 games, and have a total of 5, or any other combination. Assuming implementation detail in printing status is the worst you can do, as that implementation detail can change at any moment, e.g. when Valve alters the most optimal farming way. Additionally, total statement should be total, not excluding what we printed previously as current moment.\nBot 0 is farming appIDs: 430080, 552030, 550440, 453100 and has a total of 5 games (10 cards) left to farm (~6 hours remaining).\nThis makes most sense to me, as it's also the most correct way of saying what ASF is in fact doing.. Bot 0 is farming 3 cards from(...)\n\nBot 0 is farming playtime from(...)\n\n\nAssuming implementation detail in printing status is the worst you can do, as that implementation detail can change at any moment, e.g. when Valve alters the most optimal farming way.\n\nThat's why ASF is stating what it is doing - playing games, not what is the purpose of playing those specific games in given moment of time.. Exactly, change CardsFarmer implementation detail, and not the way how ASF prints status of the bots.. farming 12 cards from appids\n\nWe're farming games, not cards. And when farming multiple of them, we're not farming cards at all, but farming playtime.\n\nSorry but I do not agree with this, your suggestion incorrectly displays what ASF is currently doing.. Bot 0 is farming appIDs: 430080, 552030, 550440, 453100 and has a total of 5 games (10 cards) left to farm (~6 hours remaining).\n\nBot 0 is idling appIDs: 430080, 552030, 550440, 453100 and has a total of 5 games (10 cards) left to idle (~6 hours remaining).\nTo me both statements are the same, but if you don't like farming word that much, idling is fine too.. \u00af\\(\u30c4)/\u00af. Thanks for report! \ud83d\udc4d . Thanks for report! \ud83d\udc4d . Sorry but this is definitely out of the scope of ASF. ASF does not track used keys, and it should not to - extra logic relies on higher level, such as you telling ASF which keys to redeem.. It can be reused only if I spend my time reverse-engineering steam client routine responsible for it, and as it's going out of the scope of ASF as a program, I'd like to avoid doing that.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. I actually wanted to put it on TODO list at some point, but I'll probably be too lazy to implement it anytime soon, so it's wishlist for now.. ASF 2.2.1.0 is the first version which includes this feature - if you spot any errors related to API key, let me know. Big thanks to @il-marc for initial implementation! \ud83d\udc4d . That is one request per account login, and 100x cheaper than a single badge page we're asking for. Plus it's not made always, but when API key is actually required. I made sure that it's optimized and not spammy - there is no need to keep SteamApiKey property, even for cached data.. If you decide to use pre-release, you must keep an eye on breaking changes. And yes, error comes directly from the fact that your config is invalid, as in - it has some invalid values that no longer exist.\n\nI'm not even sure if there is anything to do in this case, as deserialization is happening semi-automatically and exception can't be easily caught (looking at stacktrace). I'm marking it as not a bug, because it's in fact not a bug, but intentional thing happening, but I'll look into source code some later today to check if I can catch this error instead of throwing exception like this.\nThanks for report in any case \ud83d\udc4d .. Merging initially to create file structure.. Thanks for report!\n(For explanation what is going on check localization section of the wiki). I might want to re-check all translations and remove ! from strings that are not printed in warning/error context.\nUnless you want to do that and send PR, which is welcome too. Only that file needs editing. Although keeping ! is desired in serious cases.. Fixed, thanks for report!. Eventually everything should be localized, that's just the first step (you have to start somewhere).\nGUI app that is planned and in-development will include ASF core output, that's why it's also crucial to localize it right away. I'll add language override global config property in one of the future versions so everybody will be able to change ASF back to English if he doesn't want ASF to follow his OS language.\nI'll see what can be done about the wiki. Fact is, crowdin is awesome platform and once I stick with some decent idea, it'll be very easy for everybody to translate wiki as well. I'm just not sure what I want to do yet, as I somehow want to keep everything in one place, and GitHub wiki seems like the best one. Maybe I include some descriptions in the GUI program that will connect ASF core + ConfigGenerator + GUI for management, as I plan to code that one in a self-dependent way and reading wiki won't be needed in the first place, as all strings and help will be integrated into the program itself.. @Shmurdik This is now possible via CurrentCulture since ASF 2.2.0.9.. ASF is not a tool for abusing gleam giveaways.. Unless you want to explain to me how it can be useful when you already have SteamMasterClanID.. If it's one-time only then you can either do that much faster via standard browser, or use already mentioned SteamMasterClanID for joining specific group, then changing it into other one.\nGroup management is kinda out of the scope of ASF.. Little price to pay for using ASF \u00af\\(\u30c4)/\u00af. It's not like you must leave that group in the first place.. Valid suggestion, wishlist.. @Ryzhehvost This is actually a suggestion that should be done before I decided to add !lootall. Targetting multiple bots is what is truly useful, while !lootall is brainlessly spamming Steam network with expensive requests, made by users who don't know how SendOnFarmingFinished or SendTradePeriod works. I'm not sure yet, but I might remove !lootall after this suggestion is implemented, every single usage of this command I've seen was done wrong.. I won't remove it unless I'll truly have a bad day, but it annoys me a lot that people do not realize how expensive it is to send a trade, and !lootall executed on crapload of bots could result in Steam community ban in notime. I tend to not remove things I already added, unless I have strong arguments against them and something that fits practical purpose much better, be it code-wise, network-wise or community-wise.. @il-marc explained very well why this suggestion is invalid.\nAnd I don't feel like adding another contexts to loot, this is out of the scope of ASF. Even LootableTypes is, but I can justify it by being \"by the way\", as we need to send that request and parse types anyway.. Looks good at first, but I'd probably divide this into 2 functions like RegisterApiKey() and GetApiKey(). Name of the function is counter-intuitive, as it should not automatically register the key if it doesn't exist. Logic what to do (get, then if it doesn't exist, register, and get again) should be somewhere else (likely in Bot.cs) - ArchiWebHandler is only a set of functions to execute, but in which order and what to do is defined elsewhere.. In general if this works, I'll be happy to remove API key bot config property, so I think that after ArchiWebHandler.Init in OnLoggedOn, there should be another async function like InitApiKey() that will call GetApiKey() from AWH (ArchiWebHandler), and if it returns no key, execute SetApiKey(), and then GetApiKey() again if there is no way to return registered key from previous function.\nYou must distinguish no key vs timeout. I use null typically for timeouts, so it's a good idea to return string.Empty when request succeeded but no key is set.. Also I have no idea how this works for limited accounts that can't get API key, we must add proper fallback for them too, as probably GetApiKey() does have some indicator that you can't register API key, so it should also be returned, as we have no reason to call SetApiKey() in this case.\nYou'll probably need to declare return class/struct that will indicate whether request succeeded, timed out, or succeeded with permanently disabled way to get API key.\nIt might also be wanted to not use InitApiKey() in OnLoggedOn(), but rather call it on as-needed basis every time function that requires API key is executed, like RefreshSessionIfNeeded(). This is because account might change from restricted to unrestricted during runtime, and it also solves temporary failures in getting API key that could happen after logging in, but be solved later on when bot is already working.\nHell, I know why I didn't want to grab it so early \ud83d\ude01 \nNo need to hurry, take your time and use my notes above for testing various different cases. If we want to implement it then we must make sure that it works for everybody, or at least for those cases I mentioned above (handle timeouts, handle restricted accounts, handle no key set). Apart from some misc refactoring I'll be doing, it looks fine. Thanks a lot! I'll merge it when I have some time to improve it, probably in a few days.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > logic for accepting and sending steam trades is outside of the ASF, as stated in the FAQ, and there is no bug related to that because it's up to Steam to accept such request, or not\n\nIt does not matter at slightlest point what Steam said.. Intentional ASF behaviour when running in Debug mode.\n\nYou should not run ASF in Debug mode, unless asked by developer.\n\n\n\nIf you're not sure if you're encountering ASF bug or technical issue, please use ASF chat or Steam group and avoid GitHub issues.\n\nPlease note that I have fixed patience and I won't be closing invalid issues forever.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Fixed, thanks for report! \ud83d\udc4d . Valid suggestions, but I'm not going to touch CG myself as I plan to deprecate it when ASF-GUI is finally released with CG functionalities built-in.\n\nI'm putting it on hold if somebody else is interested in adding them to current version of CG.. So what is the exact purpose of having rewrite all button? Why such option should even be available, what it achieves? ComboBox is a valid suggestion but for GUI, I stopped updating CG as I plan to deprecate it like stated above.. Closed due to lack of follow-up and interest.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. https://github.com/JustArchi/ArchiSteamFarm/issues/410. Note to self: ArchBoT already has a way to determine if game was not released yet, forwarding that one seems like a best idea for now.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Once stable release is out, this property is too important to remove it right away.. There is separate branch for localization entries - l10n. I do not have a direct choice how pull requests are handled, as that part relies on Crowdin without many options, basically GitHub integration or not.\n\nAnd GitHub integration is very important for me, as it allows me to develop program, add new strings and ensure they all land in strings to translate, without my helpful hand or manually updating them every once in a while. I didn't go crazy from all of that yet thanks to that fact and how it's all done - I develop ASF as usual, and I only merge ongoing pull request when I'm about to make a release or just feel like it. It's perfect, if I had to remind myself to update strings and translations every once in a while manually, I'd probably drop this idea entirely.\nSo while I can't really do much with l10n branch and PR itself, as that would mean abandoning GitHub integration and making more hassle for me, there is still something I can do - picking merge & squash option instead of merging only in PR, which will result in a history like this.\nI must check how exactly squashing affects integration, but if it doesn't cause any problems, then it solves your problem in 100%. I'll close this issue once I'm sure this can work.. Squashing won't do, it breaks entire history later on, and causes me more trouble, which is what I want to avoid in the first place.\n\nHey!\nI'm working with you translation platform and it's great, I'm enjoying it very much and the fact that you support open-source projects really makes me happy!\nI'm currently using GitHub integration for syncing my project, and it works really great for syncing strings, but I have some issues with automatically generated pull requests. In general every single crowdin action results in a commit - if I keep this PR open for several days, it's entirely cluttered with commits, and merging it later to the target branch clutters it as well. I could squash that PR, but then l10n branch that is being used for Crowdin commits is out of the sync with main branch (has conflicts), and dealing with entire situation is even worse.\nCould you please consider adding a setting that would allow to \"bundle\" Crowdin changes together, in a single commit, in given time interval? For example, I could pick \"1 day\" option, that would limit Crowdin into 1 commit per day, bundling all changes done in the meantime automatically. It would delay some changes, but thanks to that keeping history clean, as merging such PR later on won't result in merging 300+ commits made across 2-3 days.\nAlternatively, if above is too troublesome, maybe you could add an option of disabling creating/maintaining localization branch + sending PRs, so I could still use GitHub integration for synchronization of strings, but update outcome localizations myself in a single commit. Currently it's either \"all\" or \"nothing\", and I don't want to drop it entirely only because Crowdin is too \"noisy\" when it comes to sending PRs :). If it's possible for you to implement bundling suggestion, that would be great, but I'll be also very happy if I can simply disable localization branch and maintain localizations myself, while still using strings syncing provided by you for translation on the platform.\nSincerely,\n~\u0141ukasz\n\nBut I sent an e-mail, so we'll see if it will be possible to save me hassle in the future. Currently it has to stay like this if I don't want to go crazy doing everything manually.. > Hello \u0141ukasz,\n\nI will forward your suggestion to our devs team and ask whether it is possible at least to add an option of disabling creating/maintaining localization branch + sending PRs as you mentioned.\nHopefully, I will update you today on the matter, thank you!\nHave a great day :). > Hello \u0141ukasz,\nI just want to update you regarding our conversation about branch localization.\nI forwarded your suggestion to our devs and they really consider to be a great idea although it is not planned to be implemented in the near future since it's a kind of time-consuming procedure. It is included in our list of future improvements, but unfortunately, I can't guarantee it is implemented in the short run.\nThank you again for a suggestion, it does make sense, so hopefully we can put it into life someday!\nHave a lovely weekend!. And add myself extra work I want to avoid in the first place only to allow people viewing commits more easily? No thank you.. I'm not against this suggestion and I also hope that they add it sooner than later, but you should also understand my reasoning - I want to minimize maintenance work I have in ASF, not add myself extra one. There is little difference between merging translations from other project and maintaining strings fully manually. The way it's right now makes it much easier for me to manage them without much hassle, which doesn't automatically mean that I can't see a problem, as I'd appreciate less clutter in commits history as well. Therefore, we're waiting until something better happens.. Eventually I got annoyed enough myself to drop GitHub integration until it'll have an option to spam less. I'll update translations periodically myself until then.. I even managed to get best of both worlds \ud83d\ude00 . I do not see any point of this, care to elaborate when it can be useful?. - Why would you need to switch account?\n- Multiple looting is not valid argument, there is already #412 about this.\n- Still waiting for practical use of allowing more than 2 people (SteamOwnerID and SteamMasterID) to be able to execute commands, as well as bots joining more group than one.. And I could also create new ones such as who is main master that should receive !loot trades - no thank you.\n\nThat is at least one argument after multiple masters though that I can understand, but I still don't consider it important enough to justify complicating ASF permissions logic.. I gave this idea second fresh look and I still didn't find enough arguments after one suggestion or the other.\nNot even a single argument after multiple groups, and as it could be used for abuse purposes, that's out.\nMultiple masters has at least one usage that can be deemed valid, but I still don't think that it's strong enough to justify increased complexity - you can easily overcome this problem by having one owner, and several masters controlling different bots. Owner can execute all commands, and master can execute command at least on one bot, and if that bot has e.g. forwarding/distributing then it should be enough for redeem scenario, I don't want to allow anything else anyway.\nClosing due to not enough reasoning, let me know if there is something else that could vouch after this suggestion.. Too expensive request, out of the scope, would kill Steam when redeeming 50+ keys, ASF automatically starts farming anyway, and if you need it you can restart module with !farm and check status with !status.. I'm not sure if you're being serious or not, but this is definitely out of the scope of ASF, and is against Steam ToS as well.. THIS IS ALREADY POSSIBLE\nIf you make next issue that I'll close in 10 seconds then you'll be locked from making more.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md. No. ASF already has built-in runtime caching for API key, if you didn't notice yet. And due to the fact that key might get changed, it's not possible to cache it for any longer period of time anyway.. Closed by https://github.com/JustArchi/ArchiSteamFarm/commit/fc4574d143e7004d088788ad629534bd236287d2. No, people might want to use different versions, such as old CG with old ASF structure, enforcing AutoUpdates would mean that I'd automatically drop all older versions of CG, and that won't happen. Everybody has a freedom of choice which version he wants to use.. This will still cause problems if somebody opens CG with AutoUpdates that finds new version, and there is old ASF binary that wasn't updated yet. And ASF should never touch any other binary but itself, same as CG should never touch any other binary but itself.\nThe only thing which does come to my mind is CG automatically downloading version of itself that matches version of ASF binary, but that still has nothing to do with auto-updating CG together with ASF based on config property. And I'm not that happy with that idea either as it brings lots of unnecessary dependencies and tries to out-smart user based on such stupid and arbitary string as ASF version being read from binary, which might not even be correct if somebody uses self-compiled versions. The way it's right now solves all of those problems that will be brought. I don't think there are enough arguments to justify all of that.. I can see your reasoning and this is one of the reasons why I plan to release ASF GUI version which includes ASF core + CG + more together, which will automatically deprecate old CG, but that won't happen anytime soon, and CG should stay as simple as possible until then. The fact that it notifies you about not-matching versions is already the thing that it should not do in the first place, but people are apparently not aware of that fact and I had to add it to solve questions such as \"why there are no XXX in ConfigGenerator?\".\nEventually ASF GUI will solve this problem, but when it happens - maybe even this year, assuming I'll have willings to finish current fundaments of it.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. I'm not super happy with this, but it's valid enhancement so I'm putting it on wishlist.\n\nIt'd be best to drop SOAP and instead execute ASF.exe with --client parameter and commands to execute, you can do this with exec().. Why you won't use forwarding? ASF is smart enough to forward the game to the bot that doesn't own it yet automatically.. No, one AlreadyOwned should be enough to guess which account has which game, unless you're using some outdated ASF version that doesn't support this enhancement.. Which means that for some reason with that particular game there is a mismatch between packageID reported by key and packageID that bot owns. Happens, but it should happen rarily.. You can't match appID, as key is tied to packageID, and you can't match name of packageID either, as it can be anything, including \"Humble 100% Salt Bundle 2015\" instead of game names.. In order to answer that question we'd need to check content of OwnedPackageIDs of given bot. If you have programming knowledge, you can just dump all packageIDs from it and check if it's there (probably not), and if not, as which packageID.. Done and it looks like all 3 work on both Windows and Mono.\nNetTcp binding is still recommended due to additional extra security, I'll add proper notice to wiki when I decide to document this property.. Since when metadata publishing is required to use ASF WCF? Yes, that option was removed, because metadata publishing is not required to make a connection, it's an extra that allows discovering endpoints, but not a core feature.\n\nIs that problem inside the ASF? Or in my work?\n\nCan you connect to ASF --server from ASF --client? Then there is no problem in ASF. You're referring to extra feature that is not needed to make ASF WCF work - this is what typically happens when you connect to ASF WCF service from a client that doesn't know how to communicate with it, e.g. your browser.\nI might want to add metadata back anyway, as long as it works on Mono.. Let me know if latest appveyor build with basic metadata bits fixed the issue for you - this will tell me if this is enough or I need to add mex bindings as well. Current version works flawlessly on Mono.. Good to hear it, I'm keeping this code then, after a small cleanup. Thanks for testing!. http://steamcommunity.com/groups/ascfarm/discussions/1/133255957991279804/. That part relies on website, not user reporting. It should be website checking inventories and making appropriate marks, but ASF can pre-filter those as well, so leaving it on wishlist.. Done in https://github.com/JustArchi/ArchiSteamFarm/commit/89a36beeaeba0df5fc97a9cd17df4926cce532f0\nThere is still backend website part that will be verifying whether client doesn't lie, but pre-processing is already here and will be active since next stable ASF, which will also disable reporting of older ASF clients, effectively removing them from listing.. No, there is no restarting on fatal error - fatal errors should be corrected and fixed, this indicates serious problem in the app that should be adressed, not worked around.\nIf you have full log with stacktrace then I can take a look at actual reason of this, log above doesn't say anything.. Sorry, as stated in README, PRs regarding translations are not directly supported. Please use Crowdin for that, thanks!. Sounds good at first, although it will probably have some limitations as I couldn't find any managed C# way to do it - I'll probably need to use P/Invoke, and that will mean this feature will not be available on Mono.\nStill, I already have some Windows-only code, so it's OK to add it. I'm also not sure if I want to make it switchable, but for now I believe that if somebody is intentionally using ASF, then he means to keep using it, and if he wants to shutdown his PC when ASF is idle, then he has ShutdownOnFarmingFinished for that.. Having extra code on top of already existing one, with proper check for currently running platform won't hurt Mono or making ASF impossible to run on Linux, so it can only get better, not worse.\nI'm testing how it works right now, you can expect a pre-release with this feature soon, so you'll be able to tell me yourself if it works the way you want to.. BTW since this change landed in pre-release since some time already, feel free to let me know how it behaves. It should work nicely, but I only barely tested it - some feedback would be greatly appreciated.. When the process exits it should no longer have any effect, since the thread associated with power setting is terminated. Do you refer to ASF being idle or ASF process exiting?. Yes, and in this case it's intended that ASF still prevents PC from going to sleep, since it's still active and working - check out release notes in latest pre-release regarding this.. So? Since when ConfigGenerator should be affected by ASF config or capability of auto-update?. A bit longer explanation: CG is supposed to help you generate configs, it does not include complex code of version matching, auto-update, or anything else. In fact, it should not even include code that checks version of your ASF but I added it because apparently people do not realize that it's not being automatically updated.\nAuto-update of CG is not planned. ASF-GUI will auto-update and include CG functionality once it's done.\nI should probably add it somewhere in the FAQ.. No, CG development is EOL, as stated in #421.\n\nQ: Why ASF-ConfigGenerator states version mismatch between ASF binary and CG binary?\nA: Because ASF-ConfigGenerator intentionally doesn't include auto-update function, as auto-update is a feature of ASF, not CG. CG is not required for ASF to run, therefore it's not part of ASF auto-updates. If you attempt to use outdated CG with ASF, then it'll refuse to start as config structure might not match given ASF version, leading to broken/invalid configs being generated. It's not planned to add auto-update feature to CG, as CG functionality should be included together with ASF functionality in ASF-GUI binary, once it's finished. Until then, you need to update CG manually if you wish to use it.. This is entirely wrong - you're not supposed to load new configs, but use existing ones from MainTab.TabPages when user clicks that button.\n\nAlso I do not see what is the purpose of this at all, care to elaborate? When this can be useful for enduser?. The above is much more correct but it still creates new configs instead of using existing ones loaded in MainTab.TabPages. Also I still can't see a purpose of this, why such option should even be available, what it achieves? I might rewrite it myself if I see a point in doing so.\nBTW you can update your pull request by pushing to the same branch you want to issue PR from.. Closing the PR then.. What next? Steam gifts? CS:GO items?\nI really don't think this is on ASF scope. Soon people would ask for looting all games and types ever created. Current LootableTypes are justified only because it's part of the same request that ASF has to do - if that wasn't the case, ASF would not have them either. Even if what you ask can be considered practical and useful, I don't really believe that it justifies another inventory request, not to mention that it's not on ASF scope at all. LootableTypes already went over the scope by introducing everything apart from trading cards and booster packs, I do not want to go above it, sorry. ASF is not inventory management tool.. > Uh, this needs a separate API-Call? (https://steamcommunity.com/id/[bot]/inventory/json/753/3/?trading=1)\nNo, this needs a separate request, and ASF is not an inventory management tool to execute it in the first place.. I do not document many things in the changelog, because otherwise my changelog would need to have 200 lines that not only nobody would read, but also nobody would write - there are commits for exact history.\n\nMajor code improvements, optimizations and bugfixes.\n\nThis usually indicates stuff being fixed, but without specifying what exactly. It's enough to say that every new ASF version fixes something, even if it's not visible right away because you specifically didn't run into that fatal condition (yet). It's a good idea to always run latest stable, even if you believe that you do not need changes explained in the changelog - there is always lots of stuff \"under the hood\" that is being improved/fixed/worked on.. \ud83d\ude15 . Firstly, it's clearly stated in the FAQ that this is out of the scope of ASF. I asked you in contribution guidelines to read it.\nSecondly, ASF already includes that feature, at least a version that worked in previous sale, but detecting sale magically is very flawed, it's best to enable it on-demand, like I did it with last sale.\nTherefore your suggestion is invalid. It's not only already possible, but out of the scope as well.. You don't, I do.. If Valve states that there is 1 more card to drop, then ASF will follow that. If Valve lies, then there is nothing we can do anyway.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Then switch AcceptGifts appropriately when you need to temporarily turn on automatic gifts redeem. There is no need for any manual command for doing this.. My opinion is not more valuable, I'm in charge of choosing what fits ASF and what not because it's my own project - if you do not like it then fork it and add changes yourself.\n\nIf you ask for what is already possible and I can't find enough of reasoning for adding yet another way to achieve this, then I'll tell you to use what is already available as doing otherwise would be useless and pointless. You don't have to agree with me - I stopped trying to please everybody when number of ASF users reached more than 2, it's not possible by definition.. Against Steam ToS, there is nothing even to discuss.\n\nYou may not use Cheats, automation software (bots), mods, hacks, or any other unauthorized third-party software, to modify or automate any Subscription Marketplace process.. BTW, @frwrks - I'm happy to code features that I do not need myself, in fact - I do not make use of at least a half of everything I coded, so it's totally fine to ask for functionalities that somebody would like to see in, even if I wouldn't use it myself.\n\nI typically disagree only with:\n- Features that are already implemented in one or another form, and I do not feel like there is enough reasoning to do the same thing in other way. Sometimes there is a decent reason I can agree with, but I won't try to think about one - usually it's up to the user to convince me.\n- Features that are going out of ASF scope which is supposed to automate steam cards idling and basic bots management. This is very subjective and evaluated on practical/moral basis - how much this feature fits ASF, how much actual coding effort is required to make it happen, how useful/wanted this feature is and likewise. Some good examples include chat logging feature that I coded in #354 (out of the scope, but ASF already had everything that is needed, so very little coding effort, why not) but also Steam discovery queue (I was in general strongly against that, but considered it due to the fact that many people would appreciate it).\n- Anything that goes against Steam ToS in my opinion (nothing to discuss here).\nFirst 2 points can be discussed to some degree, last point is insta-out and there is nothing to discuss, as nobody here is Valve lawyer that can explain terms better than Steam ToS, if I feel like something goes too much out of the gray zone, I do not take the risk.\nThis feature goes out of the scope of ASF, but I could probably allow it if it didn't conflict with Steam ToS, which makes it insta-out.. BTW, regardless of my opinion about particular subject, first two bullets can be always sent via pull request that I will accept unless I have a very strong reason against it (and I'll always state what I want to see fixed instead of closing it right away). A \"very strong reason\" is usually only a feature that is against Steam ToS, or something that doesn't make any sense to me (but people sending PRs already have a reason to code them in the first place, so usually they already have a reason I can consider practical). This is also why issues are different from pull requests - in issues you're asking me to code something and convincing why, while in PR you're asking me to review the change and accept it, unless I have a reason against it. So it's like \"give me a reason to code it\" vs. \"give me a reason against what I coded\", which works in a bit different way. Very often I won't have a reason to code it, but I also won't have a reason to reject it, which makes it possible to happen via PR.. > I think that someone would have a little bit of relief when he would know that there is only 49 out of 50 active bots, just before going to buy 50 games.\nThis is what !status ASF is for. Nothing guarantees you that other 49 accounts will log in successfully, regardless of their account flags.\nI don't understand this suggestion at all - basically you want to stop bots in case of being limited, lockdown and disabled. For what reason? I can probably understand being disabled and in lockdown, as that could be permanent, but without data that backs up my theory I won't touch those flags as I don't know what they're responsible for. You shouldn't assume anything based on names alone - what matters for ASF is when and why those bits are being set, not the fact that they can be set. The fact is that being limited does not affect ability to log in, and it's absolutely inappropriate for ASF to force logoff in case of being limited, as there is crapload of people using limited accounts for executing commands to ASF, not to mention that being limited does not make it impossible for ASF to operate.\nSo the main question lies in - do you have any account that triggers lockdown/disabled bit and you can explain to me how that flag relates to account, and if it's permanent? Only then I can add support for it and decide how I want ASF to react to it - I don't agree at all with stopping bot in case of limitation, as it does not prevent ASF from working (such as receiving and answering to commands). If you for some reason don't want to use limited account in ASF, then simply don't enable given bot instance until you lift the restriction.\nThe entire logic in case of being limited was implemented only to solve questions like \"why ASF doesn't idle my new account\" and \"why ASF idles my main account and doesn't drop cards anyway?\". Since it's impossible to idle those accounts anymore, and we can check if account is limited in a nice way, I can also skip idling as it doesn't have a point, and people not aware of that can read the reason from the log. Even without that logic, ASF would work properly, with some features not working (like idling, hence I prefer to give a warning and stop trying instead of giving user false hope).. > ASF logs in without problem, just like in a regular account.\nThen why you want to Stop() it? The only reason for stopping a bot would be a situation in which logging in is in fact impossible, to avoid infinite reconnect loop that is not going to get us anywhere. From what you said I assume that account in lockdown works like normal one (but probably has some features limited). Since we don't have any disabled account to test ASF behaviour, like I said, you can't assume anything without testing, which means that you can use that info for saying if account is limited/locked/disabled in status, but you shouldn't make a decision whether to Stop() it, unless you carefully tested the outcome and you have a reason to do so (such as infinite reconnect loop). This is what is happening with IsLimitedUser - I don't start idling such account only because I know that it won't get us anywhere.\n\nI could code it and make a pull request in a few days. Don't mind if i try? :)\n\nI don't mind it at all, in fact, I'm rather happy that people want to contribute, as stated in guidelines. Just remember to handle this state in the same way as I handle IsLimitedUser. In fact, if we want to catch several different EAccountFlags, then it'd make sense to get rid of IsLimitedUser and create AccountFlags variable instead (but that is for PR itself, I'll respond with requesting changes if I need them).. @il-marc Log from ASF attempting to log in on disabled account would be nice, same to that one in lockdown.. Basically the only thing I want to do is checking which case requires to Stop() given bot, and which case can work, but requires extra logic (like current limited account).. Thanks a lot @il-marc, I'll add one more thing to test for you, sec.. @il-marc If you could check both of those accounts with this build then I'd have everything I need.\nIn case of first account, I disabled shutdown, which should lead to infinite reconnect loop (ASF getting account disabled, OnDisconnected(), reconnect attempt, same result). You can stop after 2-3 tries, since this is intended and what I want to test. If by any chance ASF won't get OnDisconnected() or likewise (won't attempt to reconnect), let me know.\nIn case of second account, it should log in properly, and ASF will print debug message in the console with account flags for it - save those if you can and let me know what ASF returns. As an extra it'd be interesting if you could try to !redeem something on that second account which can log in, and let me know what Status of that try ASF outputs in chat message.\nRelevant commit for both: https://github.com/JustArchi/ArchiSteamFarm/commit/c85de9ce9a94a97a8fd7cc087205c8c7379dafb7\nThat should be everything, with extra info I'll be able to add some misc bits to ASF logic, so ASF will be aware of those possibilities.. Ah yes, it won't reconnect because I returned from my call, I should disable that too in addition to Stop(), but yes this is what I needed - there is OnDisconnected(), which means that failure is permanent. Thanks a lot! Let me add some extra bits.. In the meantime feel free to check !redeem.. I don't know what will happen, it depends what logic Valve uses first - if keys get denied due to being invalid first, or due to account being in lockdown first. Best thing to try all cases -> invalid key, duplicate key, valid key as last resort if you won't trigger anything unusual with 2 previous attempts.. This is actually pretty freaking nice way to check if given key is valid without redeeming it... It'd be possible to check for what game given key is without triggering activation by accident \ud83e\udd14 \nThanks a lot!. Yes, this is why I asked you to test this in the first place, because it's another valid case that is currently not being handled, and with extra info I can add proper logic for handling it, such as marking AccountLocked redeem response as \"available for forward/distribute\", same as AlreadyPurchased.\nBasically ASF has several places where it's basing its logic on status, and the logic is \"available\" only for statuses that I know about, so I do not handle a Steam glitch or something unusual in \"generic case\" by accident. Because you verified how AccountLocked works, I can now add it to the list of statuses that ASF can handle, and react accordingly \ud83d\udc4d .. Mystery of the day: can accounts in lockdown actually farm cards? I mean for sure you can play, but I'm wondering if it yields in any card drops, since I could also disable CardsFarmer like in LimitedUser case.. I'm however not sure if you can test this, since you can't redeem keys and you'd probably need to spend actual money in Steam store for \"science\", but if you have some cards available for farming already, or you could buy something cheap and do \"science\", then it'd be interesting discovery and ASF could also benefit from this, whether there is a point in farming such account or not, @il-marc \nUp to you though, I can't really expect anybody to spend his time/money only to help ASF development, especially because you already helped me a lot! \ud83d\ude03 . I thought it's for keys only, my bad. I guess you don't have any games with cards still available to drop then? I mean, it's not like it matters, since you probably can't do anything with them, but it'd still be interesting to check.. Second part goes too far out of ASF scope, first thing is OK.. @Ryzhehvost I planned to add another value to RedeemingPreferences, why do you assume right away that I'll change existing behaviour? I do not change existing behaviour without a very good reason, and forcing everybody to stop forwarding in case of OnCooldown doesn't have any reason, not to mention a good one. I'm not short-minded and I can see how both ways can be useful for different groups of users - if I wasn't, then ASF would have 2x less commands and 3x less config properties, as I'm not using even half of all of that \ud83d\ude15 .. What if I have a key that I want to forward only if my primary account owns given game already? This is the main reason why I decided to implement this, as I might even make use of this myself. It will basically disable forwarding from all statuses where we can't be sure if given bot account doesn't own the game already, so cooldown, timeout and base game required, if I didn't forget about anything.. And no, adding that won't complex the function as much as you think it will, it's very small change, I just didn't look into it yet as I'm too busy with Darkest Dungeon \ud83d\ude00 . If Steam says that account is restricted, it is. If Steam says that account is not restricted, it isn't. Trying to out-smart this mechanism will lead to people being falsely marked as limited.. There is no workaround for this if we still want to assume that limited account can get limitation lifted. We could make limitation logic permanent, but that would mean that account will be limited at least until ASF restart, and it's not good - I prefer users to set Enabled or Paused properly instead of marking accounts wrong only because Steam told us that account is limited a month ago when ASF was booted for the first time.. I'm not quite sure what you expect me to do. Did ASF drop any card from it or not?. It looks like Steam registers the game properly, thus there is no reason for card drops not triggering - I'm pretty sure that you won't be able to drop them either, but prove me wrong by idling manually.\nThis looks like blacklist case to me, not ASF bug.. Yes, this is the information I need - different appIDs for different movies. And this is where the problem is.\nCan you give me a list of all appIDs with their names, including the base package that doesn't trigger any card drops? This is how I might be able to connect pieces together and find out how steam client decides which movie to launch, maybe fixing this issue.. Also marking as not a bug, since this is Steam fuckup that should be investigated if possible to work around.. This doesn't help me, DLC appIDs are usually not being played, I need information about which appIDs are exactly being played when Steam shows user as \"playing XXX\".. If this is too problematic to find, somebody with that movie can always add me on friend list, tell me to start recording my Steam packets, and start a game once I'm ready \ud83d\ude00 . In the meantime I wasn't able to find any way how to get \"videos\" from \"series\" type, Steam doesn't list those as DLCs in the store API, I might want to poke @xPaw - could you be so kind to tell me how you got DLC info from 402590? I suspect due to analyzing all appIDs and linking them back to 402590 parent, but if there is a way to discover DLCs based on 402590 appID alone, this might be what I need to find out any \"video DLC\" that matches given appID of \"series\" and play that one instead.. Nevermind, I found it in PICSGetProductInfo() call when asking for non-public properties, nice how DLCs are not considered \"public\" by Valve \ud83d\ude15 . This was probably the most hacky thing I wrote yet in ASF, and I'm not entirely happy with this solution, but at least it works reliably and should cover this specific issue of \"series\" app not being possible to play. ASF will try to discover DLCs of given app and use first one that is not \"Series\". In the meantime while I'm adding missing case, go ahead and test if latest AppVeyor build fixes this problem - ASF should state clearly with a warning in the log that another appID is being used.\nConfirm that not only different appID is being used, but also that it yields in card drops, since I can't check if it does.. Good, I released new pre-release marked as 2.2.2.8 that has fix for this issue built-in. We should pay attention if this new logic doesn't break something else - it should not, but if Valve suddenly starts reporting games wrong then who knows what might happen.\nIn any case, if ASF decides to farm some other appID instead of what Steam reports on badge page, a warning will be printed on the console, so it should never be hard to check what is happening.. Receiving/accepting confirmations is entirely broken when deviceID is wrong, and I'm pretty sure that nothing changed in this regard since I checked it for the last time. The fact that you can't find proper file might indicate that Steam app improved and now reads deviceID from android itself instead of saving it to a file.\nBut go ahead, check if you can receive/accept confirmations with your ASF 2FA, I'm 100% sure you won't be able to.. I won't update the wiki only because you can't find proper file and you suspect that Steam app no longer generates it - poke WinAuth/SDA devs, once they change their instructions, ASF will follow.. Unless of course I verify it myself, but I'm not going to generate new authenticator anytime soon. If somebody else could confirm this, such as @Ryzhehvost or @Pandiora then I'd appreciate it a lot.. Changing it into evaluation until then, since this might be worth updating the wiki. Basically I need another confirmation from somebody who imported his authenticator from android in the past, so I'm sure it's true and not a coincidence.. As expected \ud83d\ude15 . Thanks for report \ud83d\udc4d . What is the planned use case of this, if we have ASF 2FA already?. Why e-mail protected accounts can't activate ASF 2FA?. Somebody who wants to automate everything and not enter activation code in the console should not use e-mail protection for Steam account, so it kinda contradicts planned usage.. But overall I think that it's a good idea, even if I can't really find usage for this at the moment. It'd be best to implement as !set command with syntax !set <PropertyName> <Value> where PropertyName maps to ASF.EUserInputType.\nIf you want to do that as a part of PR then don't forget to use Enum.TryParse() so we don't have dirty switch with strings there, if you don't want to - that's fine, I can put it on my todo list since I don't have anything to do ASF-wise at the moment (apart from GUI, but that one is with ETA for year 2021 \ud83d\ude06 ). Or even better, !input instead of !set as set sounds too generic.. You don't - this command same as other ones will accept <Bots> parameter, and set given variable of given bot appropriately, then user can !start that bot again.\nI think it'd be mandatory to require GlobalConfig.Headless to be set to true when using !input - otherwise it doesn't really make sense and can introduce crapload of bugs.. So planned use case will look like this:\n!start Bot1 - bot starts, gets request for e-mail code, shuts down because of Headless\n!input Bot1 SteamGuard ABCDE - sets variable responsible for code to appropriate value\n!start Bot1 - bot is logging in with code saved in variable\nThis can work thanks to the fact that this is how Steam network works - there is no difference if you do normal input with start -> disconnect -> input -> reconnect or start -> disconnect -> stop -> input with command -> start\n. You don't get code until you attempt to log in, so you can't know it in advance. Besides, this won't work if user would like to use other auth, such as 2FA token instead of steamguard code, or password, or steam parental, or login, or anything else. What if you need to set login + parental + steamguard from e-mail? Exactly.. Why? ASF will turn off the bot when Headless is on and input is expected, what's the problem in this?. We could work it the other way but like I said - you will need to log in anyway to trigger e-mail code, and after getting error from Steam network that we need such code (and it was sent), we get disconnected also anyway, so it doesn't matter if we wait for input and reconnect, or stop, get input, and start again - the final effect will be exactly the same, while not blocking queue and causing potentially unwanted and hard-to-code behaviour.. I like this approach especially because it's already working like this in ASF since the first version - there are variables being used all the time, and when ASF gets request for input, such variable is simply being set and reconnect attempt is done, so you get all the stuff like handling variables, clearing and using them out of the box, you just need to code parsing and setting \ud83d\udc4d .. Since this is now merged and further improved, feel free to test if it works properly.\nhttps://ci.appveyor.com/project/JustArchi/ArchiSteamFarm/build/artifacts\nExpected usage, like I initially suggested:\nHeadless: true\n!start MyBot -> Get token on e-mail, bot will shutdown due to being in Headless mode.\n!input MyBot SteamGuard ABCDE -> Replace ABCDE with your code.\n!start MyBot -> Bot should use AuthCode you entered automatically, and clear it once you log in.\nAnd thanks a lot for help! \ud83d\udc4d . This is other case - every failed attempt to log in will trigger Valve anti-bruteforce, and failed in this context, like with !redeem context, is everything that didn't result in logging in. 20s of delay here doesn't matter since you're not hitting rate limit, but anti-bruteforce, as in you're trying to make too many accounts to log in at once, and all of them are failing with AuthCode request.\nNo delay will help here, if you make start instant or disable delay for AuthCode/2FA then you'll only make it worse. There is also no workaround for this, apart from starting bots slower if you expect from them to fail at their first try.\nAnd yes, ASF logging in semaphore tries to be fair and allows bots to log in according to date of their request.. It is, some cases were missing a break; after Stop(), already fixed.\nAnd that also closes the issue, since it's tested and ready for release, thanks a lot! \ud83d\udc4d . PR because I don't want to update the same string 20 times and reset translations on Crowdin each time I fix misc grammar issue - it's also a good moment to review those strings and propose better source strings, although I'd prefer to leave them as they are and leave review part to some native English speaker. Current corrections are not even done by me, but by my friend, who wanted to help and proofread original strings, since he's a native speaker. More to come, might be a gigantic batch, but I want to do it one time and do it effectively, so we won't need to jump from string to string in the future and reset work for every translator several times per day, only because I added missing \"the\".\nOnce everything is ready I'll squash & merge.. I meant something like this \ud83d\udc4d . > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ. P.S. If you want to avoid forwarding then you have !redeem^ for that.\nThis is still valid idea, since we record PackageIDs already, but even if I add support for this, then it might not result in solving your particular issue. Steam is a gigantic mess, I've already seen many situations in which subIDs do not match, or Steam doesn't report given subID as owned, so !owns can still lie regardless.. Done in https://github.com/JustArchi/ArchiSteamFarm/wiki/Running-as-Service#issues - thanks a lot! \ud83d\udc4d . BIN file contains data received from Steam Network in terms of SteamGuard machine file - you can't generate it without logging in. And LoginLimiterDelay works properly and is there for a very good reason, in fact - 2FA code is valid for around 15 minutes since generating, I found it out recently, and it should go through limiter as well - I'll commit it later today.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. This should be enough, I could simply ignore the limit entirely by pushing it to int.MaxValue, but I intentionally don't want to do that, as stated in the comment.\n\nI do not recommend loading a single ASF instance with more than 255 bots, regardless.. It might be a good idea to add !api <Bots> instead.. @Luckz There is no such limit in current ASF version, current limit is 262144 characters and it should be enough. If it's not, that's what !api <Bots> is for.. No, shouldn't be the case, copy paste full ASF log from crash if you want me to look into that.. @Luckz Try latest AppVeyor build and let me know if the issue is solved - if not, post new log \ud83d\udc4d.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. \ud83e\udd15\ud83d\udd2b Maybe not like this \ud83d\ude06, just revert it and I'll fix it.. No problem, probably because you changed encoding - just git revert yourLastCommitID and it'll be fine.. https://help.github.com/desktop/guides/contributing/reverting-a-commit/. But alright, I can cherry-pick it as well on my side, thanks for PR regardless!. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Before reporting a bug you should carefully check if the \"bug\" you're encountering is in fact ASF bug and not technical issue that is answered in the FAQ or in other place on the wiki. Typically technical issue is intentional ASF behaviour which might not match your expectations, e.g. failing to send or accept steam trades - logic for accepting and sending steam trades is outside of the ASF, as stated in the FAQ, and there is no bug related to that because it's up to Steam to accept such request, or not.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md. > Q: ASF seems to freeze and doesn't print anything on the console until I press a key!\nI should probably add mandatory questions such as \"Write 4th word in 139 line from FAQ\" as pre-captcha before allowing anybody to post an issue \ud83d\ude15 .. It doesn't matter at all to me what is the side-effect if you have quick edit mode enabled.. A reminder that you were supposed to read before creating this issue exists in a FAQ at least since a year.. I'll just disable quick mode permanently for ASF process, so people will stop asking about this once for good.. Thanks for report \ud83d\udc4d . > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nChangelog of latest release, I should also add it to FAQ.. Added to FAQ.. Why you won't create new bot, name it preset or anything and simply copy paste in config directory as many times as you need? ASF-CG is supposed to be simple for users that need extra help, for any excessive/automated configs generation you should write your own script/tool, or in worst case do it manually which is still much faster than when using CG.. Also CG is in EOL state so I'm not accepting any suggestions for it apart from required bugfixes - if anything, ASF-GUI should have it.. @Ryzhehvost SK2 added reverse-engineered headers from Steam client, and this is how Valve named all statuses. Previously ASF would have barely 9-10 recognized statuses based on my own tests, so they were also named after me. Now ASF switched to \"official\" types specified by Valve, which isn't only crucial compatibility-wise, but also far more complete, since those headers include over 100 different statuses, while ASF had barely 9-10 previously.\nIf I change something, I always have a very good reason behind it. I don't like this generic NoDetail either, and I could \"patch it up\" to return something better, but I intentionally don't want to do this, since ASF should return status as compatible with Valve status as possible, instead of what I think \"looks better\".. Be my guest \ud83d\udc4d . > Please forgive me if this functionality has already been added.\nFirst and the last time, since I'm in the good mood today \ud83d\ude00 \nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Escrow. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Sorry, too much out of the scope to consider this. This is not connected with ASF in any way.. This is a good suggestion, that text could indeed indicate that connection is in progress \ud83d\udc4d . I personally don't like that suggestion that much due to introducing yet another bot config variable that has little to no point. In addition to that, currently referencing a bot by his name is O(1) operation due to hash-map, with your approach it'll immediately become O(n) where n is number of bots that need to be checked (so all declared instances). In addition to that you can have issue of multiple tags for multiple bots, and non-intentionally executing command on multiple of them.\n\nWhat is the problem in naming bots accordingly? <Bots> syntax doesn't require from you to have bots named with digits.\narchi\nmygroup_john\nmygroup_matt\nmygroup2_ann\nmygroup2_miku\n!status mygroup_john..mygroup2_miku works as supposed to. If you don't like mygroup there, you can get rid of it, and just exclude your most commonly used account with _ or whatever.. This is once again something that is already possible and done much better - you already can log specific messages from specific bots on specific levels, why would you need account name/nickname provided by Steam if you already have bot names available, that are even being used as logger names?\nIt's not the question of \"is something possible\" or \"how hard it is to add\" - those questions are secondary and usually evaluated by me. The primary question is why something should be added, and for now I can't find any scenario where it'd be needed, since name of the bots covers all of that, also like @Ryzhehvost pointed out above. If you expect any form of tagging to be added to ASF, then you need to explain why, because tagging already exists in form of bot name - bot name is in fact your tag that tags specific bot reference used by ASF.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nLack of good reasoning is the main reason why it's hard to convince us into doing something, as we know our code better than anybody else, including everything that is possible to do with it, so if you can't tell us why your solution works better than the old one, then there is not enough reasoning to change/improve it in the first place.. Still nothing is stopping you from renaming your bot47 to your_login_here, and it also doesn't prohibit you from using <Bots> syntax in commands, neither makes it impossible or in some way hard, since there is no issue in naming your bots 1_myname, 2_myothername if you care about the alphabetical order. \n\nYou're trying to workaround issue that doesn't exist with duplicating already existing bot name with yet another bot name, and it doesn't matter if that bot name would be given by you or generated from login. We'd have this feature long time ago if indeed there was no way to give short easy to remember names to bots, but they do exist since first release of ASF, in a form of a bot name that is fully customizable and nothing is stopping you from using your steam login in that place.\nSorry but I don't see any valid reason for such feature to exist, at least for now, so I also don't see a reason to code it.\n\nbut me jumping through hoops to convince you for the necessity of this, it feels like we're discussing details how to send a rocket to space.\n\nNo, we're discussing whether it makes sense to add X feature to ASF. If you think such discussion doesn't make sense then let me get rid of half of the features that ASF has right now, and instead add 2x more things somebody came up with, such as math calculator, grammar-correction of your texts, showing weather in your city and calculating your disk space - I'm sure all of those are very impotant for ASF as a program. Oh yeah, and I'd appreciate a reminder from ASF when to feed my cat while I'm at it.. First of all, I used analogy to explain my reasoning, not to offend anybody, especially people suggesting how to make ASF better.\nBut at the same time, like written in contributing section:\n\nCreating an issue means that you're asking us to do given thing, so you must have some valid arguments that would defend our main question \"why?\" - if you can't answer it, we won't answer it for you.\n\nYes, suggestions are strictly subjective because you're asking me to code specific thing in ASF - if I don't see a reason why I should be doing that, I ask.\n\nif you can't tell us why your solution works better than the old one, then there is not enough reasoning to change/improve it in the first place.\n\nYes, I see ASF as kind of complete, since it's in development for past 2 years and has 4x more features than I ever planned it to has. However, that doesn't mean the code is frozen and not being updated with any additions or changes, and I'm quite sure that you're capable of reading changelogs and finding out yourself how much is actually being done each version.\n\nYou say the bots can just be named in any fashion one wishes but that does leave the possibility that a master ends up with an inconsistent or unmemorable relationship or schema.\n\nThat's up to ASF user, not me. I offer him a way to name his bots, and explain various way how to make it efficient - if he can't stick to it or make use of it, then I don't see a reason why I should bother with adding yet another way for doing that either.\n\ni make a guess tags would be useful\n\nI can't see any advantage of using tags instead of naming your bots properly. Saving keystrokes is not any valid reason, since you can already save keystrokes by naming your bots appropriately. And if you don't, then even if you used tag you'd be left with the same issue, as the only problematic thing might be alphabetical order used e.g. by !redeem commands, but in every single one of them it's clearly stated that you don't care which bot redeems a key, and actual logic is provided for convenience only - previously order was 100% implementation detail that was being changed from version to version, now it's standarized only so users will understand it better, but point still says - bots order should not matter when using !redeem command. If it does matter to you, you have !redeem <Bots> instead. But even then, if you care that much about the order, then it's not problematic to have 1_archi, 2_bob, 3_john, daisy, donald, matt and otherBotIDontReallyCareAbout. You can even group them and do whatever you wish.\nNobody was rude to you, @Ryzhehvost is also trying to understand better what is the reasoning for it, and is also suggesting things that already exist and solve your issue. Don't feel \"bullied\" because your suggestion was rejected due to already being possible in one way or another - you're asking us to code something, so yes you do need to convince us why, or code yourself and go through review process if you feel like you know better how to solve all limitations I mentioned above for no real gain.\n\nOf course no. Who need thousands of people? At least one person who need this, and can explain why he needs it (and why all other ways don't satisfy him) is more then enough.\n\nThe only argument you provided right now why bot names are not enough is because of redeem order, which should be implementation detail and not matter for !redeem command at all.\n\nI've also suggested a simple log renderer for nlog to bypass all this drama, which i doubt you ever noticed.\n\nAnd that also didn't make sense as bot name is already used as logger name and can be easily filtered, and I explained you why.\n\nAll in all, I should have been more of an ass and less of a friend to the whole honeypot situation.\n\nAnd I should simply reply with \"No\" instead of putting effort into asking and understanding better the suggestion, so we can evaluate possibilities and decide if such feature is wanted. After all, you're acting like it's up to me if I like the feature or not, so I don't need to explain why, right?\n\nNO it's not for me, it was a suggestion for generic use\n\nOr maybe, you should simply stick to what is stated in contributing guidelines yet again:\n\nWhile everybody is able to create suggestions how to improve ASF, GitHub issues is not the best place to discuss if your enhancement makes sense - by posting it you already believe that it makes sense, and you're ready to convince us how. If you have some idea but you're not sure if it's possible, makes sense, or fits ASF purpose - you have Steam group discussions where we'll be happy to discuss given enhancement in calm atmosphere, evaluating possibilities and pros/cons. This is what we suggest to do in the first place, as in GitHub issue you're switching from having an idea into having a valid enhancement with general concept, given purpose and fixed details - you're ready to defend your idea and convince us how it can be useful for ASF.\n\nBecause people keep forgetting that GitHub is for development part of ASF and here we're using technical and logical arguments, for \"maybe it makes sense\" ideas, it's clearly written to use the Steam group.. And yes, nobody here is attacking you, and I'm happy to listen to both valid suggestions and valid ideas. Even if I don't like specific feature, or don't feel like it's useful for me, I still put it on todo list or add right away, simply because somebody would find it useful - this is the case with more than 50% of all features ASF currently includes, I don't even use half of the features I added into my own program, so argument that I reject the idea only because I don't like it or because I feel like ASF is complete and nothing needs to be changed is painfully wrong, since I could stop development on version V1.6.1 when I felt like the program is already complete. This means that for the last year I'm implementing features that people are asking me for, yet you're claiming that I don't care and I reject 99% of suggestions claiming they're out of the scope. Maybe if I actually did like you said then people would notice why it's not the case right now, since I definitely spoiled my users with too many features and too rapid development, that they forgot that this poor human is trying to satisfy everybody and implement everything, yet don't ruin his own project.. This discussion is going to nowhere, core points were already stated and discussed.\n\nYou keep explaining how you can use this feature, but without a word about why someone may want to use it in the first place.\n\n\n\nCreating an issue means that you're asking us to do given thing, so you must have some valid arguments that would defend our main question \"why?\" - if you can't answer it, we won't answer it for you.\n\nIf somebody is not happy with the way we're accepting suggestions, he can fork ASF, add changes himself and submit them in PR, as stated in contributing section.. I'm not sure what to think about that.\nI can definitely see advantages of it being available, but at the same time I'm pretty sure that gifts management is kinda out of the scope, same like I said with keys management - ASF does not manage keys/gifts, it only redeems them (and optionally, forwards further). I'd like it to stay like this, since gifts management same like keys management should be done in some other tool.\nI'm putting it on hold for now, as I'm definitely not sure if I want to see it in, while I probably wouldn't have anything against if somebody sent it in PR.. @Ryzhehvost Yes, friend argument doesn't really work here, but I can see how one could want to send gifts to bot 2 and keep all bots as friend of only that one bot without a need of logging in, since you already can send gifts via trade request.\nAnd yes, it also might be the first suggestion that I'll reject purely based on how complicated it is and the massive amount of work that has to be put into making it happening. Gifts management is not easy 3-liners that could be added on top of what already exists, it's a giant feature that would result in at least bumping ASF from 2.2 to 2.3, if not to 3.0 (which I'm keeping for netcore, if it ever happens).\nThat's why I put it on hold for now, since I don't think it goes out of the scope that much, and I also can find it useful, yet I don't really want to code it at the moment due to the fact that it's complicated a lot.. You don't need any !opengift - ASF is already capable of automatically accepting (and redeeming) received Steam gifts directly, and e-mail handling is entirely out of the scope ASF. OP is asking for sending items from his inventory to specific bots, so he doesn't need to click \"send gift\" on each item one-by-one. Yes, that could be done with mass-sending to e-mail, but that wouldn't really be any different since he'd have to do that anyway.. > And yes, it requires e-mail handling (but as @TheSergiooo said he made a parser, so it is possible, right? :D)\nEverything is possible, and it does not matter whether somebody already achieved that or not - email handling is out of the ASF scope, and such feature won't be included in the program, like @Ryzhehvost pointed out above.\nI'd also appreciate if people did not mix this issue with #505. This issue is based on being capable to send gifts from inventory to other bots, while #505 is based on claiming gift based on its token. In noone of those issues there is any e-mail factor included, and in noone of those issues it should be included, because it's out of the scope of ASF.. Due to recent gifting changes from Valve there's no point working on this anymore, if nobody coded anything regarding this yet. Therefore I'm closing this issue, at least until it is possible to make use of it for newly bought gifts.. Overall I feel positive about this change, and code itself also looks nice. I can marge it right away or let you add missing bits I noted in comments - let me know if you'd like complete your PR with them (if not, I can easily add them myself so no problem). Thanks for the contribution! \ud83d\udc4d . According to Travis I'll need to put it on hold until next version of Mono arrives, as latest stable does not support C# 7.0 syntax yet, while current weekly already supports it nicely. I'm not quite sure how long it takes but based on my experience next mono should arrive in maximum of a 1-3 months.\n(Normally compilation passing on latest Mono stable should be a requirement for Travis step passing on PR, but it's currently in \"allow all failures\" mode as it's not 100% reliable yet and there is no reason to fail the build if Mono simply crashed during the test).\nIn any case, thanks a lot for the PR, I'll merge it when new Mono arrives :+1: .. I'm merging this - releases are being built on Windows via AppVeyor, and latest weekly Mono already supports this syntax, there is no need to wait for stable, since it doesn't bump required Mono to use ASF, but only required Mono to compile. Thanks a lot!. Fixed in 2.3.0.2, thanks for report!. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. That's not ASF issue.. Ask GabeN why it didn't respond to ASF request. ASF properly marked it as an error.. Command-wise I don't see it as an issue, but you should definitely check if you can't achieve what you want already with reverse-engineered ArchiHandler.RedeemGuestPass() which is being used for implementing AcceptGifts in ASF. Using AWH for web-based commands should be the last thing to do, once we're sure there is no better way to do this from within Steam network.\n\nRegarding any kind of forwarding and distributing - this will be only possible if gifts include information about what packageID they're about to add. If they lack that info, don't even bother. I don't know if it's possible to get that info from the gift itself - you tell me.. Bot name is not important, every command supports n arguments, and n + 1 with bot name included - this is no different. Yes, there are many commands which can't make use of <Bots> and would be fine with <Bot> alone, but actually implementing exclusive support for <Bot> syntax when <Bots> is already implemented is waste of time - both machine during compilation, and your own one as a programmer.\nI don't like this idea that much either and I definitely won't accept half-broken behaviour - if we ever want to add command like this, we must answer following mandatory questions:\n- Is it possible to use ArchiHandler.RedeemGuestPass() for redeeming? If not, there is a very good chance this should not be added in the first place, unless there is practical example for this (I'm not sure how ackgift works, if it just uses token and then forwards gift to guest passes that AcceptGifts can parse, then it's OK, since we have logic for that already, and it's just adding one more gift to the queue).\n- Can we read packageID from the gift? If not, any forwarding/distributing is out by definition. And if we can, are we able to keep gift unused and forward token further? If not, any forwarding/distributing is out of the definition as well, unless we added #499 before, and adding that is not on TODO list at the moment.\nAnd definitely this is out of !redeem function that is already 3x longer than it should be. If anything, this should be another command.\nBTW, @Ryzhehvost - #499 has nothing to do with it, since if we even implemented that, it would be simply sending gifts through direct gifting, and ASF already has support for it in AcceptGifts - those two issues are mutually exclusive, and do not depend on each other.. Then solution proposed by @TheSergiooo is fine by me - we'll have a command that requires AcceptGifts to be set to true and allow to \"claim\" gift with given token for bot account, which will be automatically redeemed. This is the whole point of this, and it sounds good to me, definitely a lot better than implementing #499 - and a lot easier too.. And due to complexity of this, there is no forwarding included whatsoever - if we ever want to implement any forwarding, it should be implemented in a function that is dealing with AcceptGifts natively - this command would just \"claim\" the gift and add it to the parsing queue.\nBut I do not recommend starting any work on forwarding, unless you want to reverse-engineer yourself. A command for claiming gifts is OK though, since it's only a bridge to ASF logic that is already implemented, but forwarding/distributing would require a lot of work which I don't even want to do myself, and in this case it's usually too much to bother yourself with (which doesn't mean that I wouldn't accept such PR of course).. > Now i will try to clear my code and make a PR with !getgift\n:+1:. I think !ackgift command would be better, but that's misc naming though. Remember to requrie AcceptGifts in this command, same like !input requires Headless.. Due to recent gifting changes from Valve there's no point working on this anymore, if nobody coded anything regarding this yet. Therefore I'm closing this issue, at least until it is possible to make use of it for newly bought gifts.. Can't reproduce.\n\nIt's only possible to create a situation like you explained if you intentionally closed ASF process during import when it asked for deviceID.\nASF does not have to ask for deviceID if it's already included in maFile. This is the case with SDA import, but also manual one where you include device_id property yourself, like stated in the wiki. Function evaluating whether deviceID needs correction or not is the same one that is refusing to handle requests later on, so it's not possible that ASF did not ask for correction if it now states that deviceID is invalid.. Bot already states whether it owns a game or not, what you're asking for is a summary which is not possible to implement without a major rewrite of the function, and I don't feel like there is a need for that since you can just filter response in whatever way you want.. Executing any command on group-chat when there is more than one bot is considered a flaw and you don't know what you're doing. Even if @Ryzhehvost ports your suggestion and creates a PR with it, it won't work for your case regardless, which is why I tagged it with \"not possible\" instead of \"on hold\".\nWhat you're asking for is not possible because you're using ASF in a wrong way.\n\nPlease note that sending a command to the group chat acts like a relay - if you're saying !redeem X to 3 of your bots sitting together with you on the group chat, it'll result in the same as you'd say !redeem X to every single one of them privately. In most cases this is not what you want, and instead you should use given bot command that is being sent to a single bot privately. ASF supports group chat, as in many cases it can be useful source for communication with it, but you should almost never execute any command on the group chat if there are 2 or more ASF bots sitting there, unless you fully understand ASF behaviour written here and you in fact want to relay the same command to every single bot that is listening to you.. While badge level can be read from badge page, which is good because it's basically free request, I don't see cards number anywhere, and I'm definitely not going to fetch inventory just to see how many cards given user has. Is there any place on badge page where you can read how many cards you have?. Yes, but this won't return number of cards if badge is ready to be crafted. You can't know if you have 30 cards or just 5 required for badge.. Nice, so it is possible from that page, but I doubt this info is anywhere on badge page, and asking for 200+ pages if somebody has 200 games to idle is not going to end good.. The difference between parsing 7 badge pages and 700 pages if somebody has 700 games to idle is quite huge and totally not worth the network overhead, but since that info is there and it's still better than asking for inventory, I think both can be added as valid enhancements, since people don't really need to pick that option if they don't want to.. (Which is even worse due to rate-limiting and crapload of inventory issues that ASF is dealing with since at least a year, if there was no info on the badge page then I'd reject the issue already).. Since ReadyCrafts actual progress is impossible to check without querying game badge page, I decided to reject that one, as ASF has no way of knowing cards progress from just main page - only if badge is ready to be crafted or not, and that information alone is useless. BadgeLevels is OK though.. After second look it seems that Mono is missing required WinForms functionality to edit that property.\n\nSince it's not ASF bug but missing Mono functionality, I suggest to report it to Mono team if you care. And until then I recommend to edit json manually, examples can be found on the wiki in config section.. The response is empty when you don't have enough permission to execute a command (unless it timed out, but then you get an exception as well).. The issue was the fact that pause command wasn't taking in account Owner permission. It's now fixed, thanks for report \ud83d\udc4d.. No need to wait that long, next pre-release will arrive soon. You can also add your SteamOwnerID as Master of given bot to work around this issue temporarily.. Of course it didn't, because SteamMasterID doesn't exist anymore. Still, that has nothing to do with this issue - GitHub is not technical support of me reminding people to read changelogs.. ASF will never modify your starting json file - you're responsible for generating/maintaining it.. Closing as obsolete due to .NET Core port.. What is the purpose or reasoning of that? What is supposed to be blocked? Why?. How you can \"abuse ASF mechanics for profit\"? ASF logic does not allow that.. Out of the scope but let's say that it can be added, since many people are asking for that feature and it's not that heavy to implement. Should also make Menels happy so he doesn't have to maintain his own custom build.. @Ne3tCode  Command > manual logging in and blocking, especially since you can use <Bots> syntax for adding to all bots.. Yes, but I intentionally don't want to block people in ASF, but only to ignore trades from them.. Because it should be possible to add/remove people during runtime, config properties are meant for more-or-less static things you change rarily. This is the one you can change often (for people that decide to use it of course).. This could be added, but I don't want to implement it for a few good reasons:\n\n\nThere is no native way to do this in C#. If I wanted to implement it I'd need to write a bunch of extra comparator code and use it - current code is based on simple LINQ OrderBy() query.\n\n\nYou automatically assumed that everybody uses numeric order - this is not the case. In addition to that, ASF is multi-culture app and some cultures might use different meaning what is \"natural order\" for them - current order is universal as it's the same on every OS. I don't want to bring more culture differences, ASF already had tough time solving Turkish \"i\".\n\n\nYou can solve this yourself by adding 0 to first few of your bots, while if I changed sorting to your proposed one, one could no longer return back to previous one, and this is definitely not a candidate for config property.\n\n\nProbably most important point - order should not matter when using any commands. !redeem command for a long time had no fixed order and it was up to ASF as an implementation detail to decide how to forward keys, and I liked it this way, but users wanted to have a way to tell what order bots will follow - this is why I added alphabetical order on top of that, only to have a common order that I could put in a wiki, not a customizable way to choose which bots will get a key - I already said it in the past and I'll keep repeating it, order should not matter, if it matters for you, use given bot commands instead. Order is there for your convenience and explanation, not for a customization.\n\n\nI'd probably be like \"sure why not\" if I had an easy way to do this, since I already have sorting in place, but point 1 and 4 are killing this issue for me, since I'm not only fan of order being an implementation detail, but also strong fan of having clear and nice code without too many fireworks that are not relevant.\nSolution: Append 0 to your bot names, so bot05 is in front of bot10.. No, it's not possible to add any forwarding/distributing for addlicense - I'm not sure if you understand how that command works in the first place, and if you're trying to execute addlicense on 300 bots at once, then I suggest to stop doing that, unless you want to get a ban from Valve for DoSing Steam servers, as stated in the wiki.. https://github.com/JustArchi/ArchiSteamFarm/blob/master/ConfigGenerator/Localization/README.md\n\nThis directory contains ASF strings for display and localization purposes.\nAll strings used by ASF can be found in main CGStrings.resx file, and that's also the only file that should be modified - all other files are managed automatically and should not be touched. Please visit localization section on the wiki if you want to improve translation of other files.\n. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. ASF is already doing that if you edit your global config, not remove it. ASF CG should never remove global config (it does not on Windows at least), and if your editor in order to edit the file firstly removes it then re-creates it, then ASF properly will shutdown because you should edit it, not remove it.. I added extra logic that should improve things even in your custom editor case, but it's still very weird to me that your editor decides to delete file in order to edit it. Anyway, with above commit it should work nicely.. What? What do you mean by that?. No, ASF is not friendlist management tool.. I'm putting it on hold since I'm not interested in doing that at all, and there is a lot of work connected with it. Don't expect it to happen anytime soon, unless somebody sends a PR for it.\n\nThere is no easy way to determine when you bought certain appID, as even if you parsed your entire licenses/packages tied to your account available here or here then you still wouldn't be able to always determine if given base game is contained e.g. in GOTY package you bought, or likewise. I'm not even 100% sure if what you're asking for is possible - it can definitely work for simple cases, but probably wouldn't work at all for the entire packages/subs mess that Steam operates on, and I'm not interested in having an option that works 50% of time.\nOn hold for now.. That's a good catch @Ryzhehvost, indeed - I didn't think about that. I might look into it later and determine if what I'm looking for is impossible from licenses that Steam network sends to ASF client, if yes, this could be added much more easily, and maybe even I could implement it rather sooner than later.. ASF is a tool, not a library to have support for plugins. You could code your own third-party tool capable of that, using ASF !api interface.. What do you mean by vulnerable? Nothing stops you from restricting access to ASF port only to your own machine.. Yes, it is possible with logging module.. ^. As @Logerfo pointed out above, ASF is now using C# 7.0 syntax, which Mono 4.8 (mcs) does not support when compiling the code. You need 4.9 or later (in fact, I'll correct it to 4.9.0+ and not 5.1.0+, but it won't help with your 4.8 anyway). This is not equal to Mono version required to run ASF, as that one is still set on version 4.6 and it doesn't look like I'll need to bump it anytime soon, but if I will, that bump will never go above latest stable.\nSolutions are easy - you can either use already pre-compiled binary (stable, pre-release, or AppVeyor latest), or update your Mono to latest weekly/nightly which is already in version 5.1.0+. Pre-compiled ASF binary is compatible with both Windows and Mono, and all releases are compiled by AppVeyor, so you can be sure that they're compiled from original source.\nUnless you're adding your own changes to ASF, then indeed you need to update your Mono, or revert C# 7.0 changes and maintain your fork yourself.. (Also, for future reference, refer to Travis that is compiling and testing ASF on Mono. This way you can quickly see what is current status of Mono in ASF.). Like I said, already compiled binary can be run with any Mono 4.6+, but for compilation you need 4.9+. Your SSL issues are probably connected with BTLS and the fact that your cert-store is not synced (nothing to do with ASF).\n\nI'll probably have to stick to binaries going forward if I need to update (or simply wait for Mono 5 to go stable).\n\nActually no, Mono is now using roslyn compiler (and not mcs like in Mono 4.8 and before), which is the same compiler that is being used on Windows, so compilation-wise it will not be required to bump Mono past version 5.0+ (unless there will be new C# syntax version, but in this case Mono should get it immediately, and it should be available before Windows adopts it).\nRuntime-wise, Mono must support .NET framework version ASF is currently targetting, and that one is required to be supported by latest stable version of Mono, as otherwise I'd need to expect from my users to run weekly/nightly Mono version, and that is definitely out.\nWe're just coincidentally in very bad moment when Mono is changing from mcs compiler (Mono 4.8-) to roslyn compiler (Mono 4.9+), and because C# 7.0 syntax does not affect runtime but only compilation, I decided to use it right away because it improves ASF code quality and does not affect released binaries.\nSo running ASF binary must be always possible with latest stable Mono available the moment given ASF release is available.\nCompiling ASF might require tools that are not marked as latest stable yet, but they're planned to be stable pretty soon. This is because ASF code is more important than compatibility with older compilers.. Any integration with OS and startup scripts is out of the scope of ASF due to not only being responsibility of system administrator / package maintainer, but also due to various possibilities of init packages (such as sysvinit, upstart, systemd).\nArch package is a nice example of that.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. https://github.com/JustArchi/ArchiSteamFarm/wiki/Mono#compatibility\nASF is officially compatible (and supported) only with latest stable and nightly versions of Mono.\n\nBut good catch that Mono 4.6 no longer works, bump is even more justified in this case \ud83d\udc4d.. https://github.com/JustArchi/ArchiSteamFarm/wiki/Mono#compatibility\n\nASF is officially compatible (and supported) only with latest stable and nightly versions of Mono.\n\n\n\nIt's your responsiblity to ensure that ASF is run in bugless environment, and not mine to workaround all possible Mono issues, in all possible versions, on all possible variants.\n\n\n\nRan the same binary on mono 4.8 and nothing wrong happened.. Mono 5.0 is unlikely to be RC'd, nightly is already on 5.3, so 5.2 is the one that will most likely be released.\n\nStill it has nothing to do with ASF and nothing will be done here - it's not ASF bug in the first place. Even if Mono releases broken version then I'll say exactly the same thing - use 4.8, because 5.0 is broken.\n\nIt's your responsiblity to ensure that ASF is run in bugless environment, and not mine to workaround all possible Mono issues, in all possible versions, on all possible variants.\n\nNothing changes above point.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\n\n\nin GitHub issue you're switching from having an idea into having a valid enhancement with general concept, given purpose and fixed details - you're ready to defend your idea and convince us how it can be useful for ASF.. ASF is not Steam license management app.. Not ASF bug, but runtime one (.NET or Mono). You're running out of memory on the host machine most likely, or running into runtime bug. In any case, this is not ASF issue.. Low-memory setup might help prior to adding more memory.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. ASF is not Steam free license abuse app.. Of course.\nPlease review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md. Log?. Not ASF bug, you attempted to check ASF version too often (e.g. by launching excessively under one IP/machine).. This will cause all ASF to synchronize in global DDoS on given date - no, we don't want anything like that. The whole point of periodical check is the fact that it has random start and not fixed delay, this way everything load-balances itself and also doesn't stress GitHub server.\nI think you can imagine what would happen if 200k ASF instances asked for new ASF version at fixed hour. No, this is not a joke that can be ignored, this can be a massive botnet in wrong hands, or with wrong code.\nSo no, there is no fix for that - the failure doesn't result in critical crash, and ASF will automatically try again in 24h.. You're trying to work around an issue that doesn't exist. If there are so many ASF instances on a single IP to even cause that block in the first place, then this is already greater than 1, and greater than 1 is already DDoS. No synchronization should ever be done between any ASF instances, regardless of how ineffective it would be. And if you want to see what would happen otherwise then start 100 bots in 100 ASF instances and wait for Steam maintenance - you'll know why there should be no synchronization between ASF instances - maintenance forces one.\n\nall instances that hit rate limit today would hit rate limit again after 24 hours, and would never actually get response.\n\nYour suggested solution is more likely to hit the limit because of synchronization rather than ASF instances being non-synchronized and trying once per 24h at their own pace. Block doesn't last more than 1 day, so your solution wouldn't differ in any way from current one trying 24h later, apart from being less effective because it'd miss one day for no real reason.. They're not started at the same time, so they're not synced. You don't understand why your solution doesn't work the way you think it does. Check how random apt daily timer is propagated in Debian-based OSes and why it was coded this way, you have 100+ pages of discussion between devs about making it the least stressful for the server, while not missing periods for end-users. This does include rate-limiting reply.\nI'll repeat once again, no block lasts more than 24h. If you do N + 24 then you skip one period for no real reason, because N is less than 24, and we check again not sooner than in 24 hours. The fact that we don't use the header at all is actually beneficial because no ASF instances are synced over it, so they're not adding extra time on top of N, but they maintain internal counter that is independent of N.\nI already wasted more time explaining the issue that doesn't exist, than I should - this is my last reply regarding this. Checking header would only make sense if end of rate limiting was later than our next scheduled check.\n\nAnd then all of them try again in 24 hours, and 60 of them get response again, and the rest get rate limit again.\n\nAnd this is not true in terms of how Internet and networking works - you assumed clients are static, which is never the case. It's easier to have non-synchronized network which works most of the time, rather than synchronized network being broken when one or more clients change their state. One more read for you, this time about time synchronization.. Yeah, next time you post something stupid I'll not answer at all, why waste time explaining if you call it \"stupid excuse\" \ud83d\ude42 . On the edge of ASF scope, but I think it wouldn't hurt to add a command like that, since I already have ArchiBoT function doing this. Wishlist.. I'll check that later.. Sorry, this is out of the ASF scope, ASF is not a trading bot to have such function.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Same thing is happening to me, and I reproduced it also with offline steam client, not ASF bug and nothing to do - Steam fuckup.. https://github.com/JustArchi/ArchiSteamFarm/issues/531. I can't see how distributing of keys is supposed to be one-time exception like !r^ or !r&, can you provide practical example of that?. I can't see how enabling distributing would affect your single key redeems on specific account, therefore why you'd need to switch that option on/off constantly in the first place.\n\nIf you're using distributing then by definition you should have at least 3 bots, so also 3 configs. Why you won't use given bot command targetting distribution to another bot and not your main?. Fair enough, although I think I'll rewrite that part into redeem with options, so something like !r <bot> <key> and !r^ <options> <bot> <key> instead of adding another alias. Wishlist for now.. > Could you add !craft command to craft badge for bot?\nASF is not crafting bot, and don't hijack issues that aren't related in any way to your suggestion.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. The best I can do is runtime-based priority queue that would prefer to idle given <appIDs>, if they're considered same performance-wise by chosen idling algorithm. Wishlist for now.. > Sadly i can't provide anything more than that.\n\nNo log + no reliable way to reproduce the issue -> no reason to keep issue open. Answer to this issue when we have something to work with. Until then I mark it as can't reproduce.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Next invalid issue will result in you not being able to create any issues anymore.. It's clearly stated in the wiki that HandleOfflineMessages is required. The fact that it worked before due to Valve's fuckup doesn't change that.. For more info why the change was needed - http://steamcommunity.com/groups/ascfarm/discussions/1/1326718197203694645/. > Please note that ASF cannot guarantee the actual display order of Steam network, therefore this is only a suggestion that may, or may not, display properly.. > 2017-05-08 04:40:40|mono-sgen-2224|INFO|ASF|IsRuntimeSupported() Required version: 4.8 | Found version: 5.0.0\nASF is officially compatible (and supported) only with latest stable and nightly version of Mono.. Warnings related to Valve fuckups are not worth reporting.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Compilation. LGTM, thanks for your contribution!. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. I'm abandoning this idea, Valve stated quite clearly they don't like fake playtime and ghost players.. > When all accounts are stopped and process is not running in --server mode, ASF will shutdown as well.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/Events.cs#L32-L40. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ#issues + https://github.com/JustArchi/ArchiSteamFarm/releases\n\nFixed ASF attempting to start broken (config/database) bots.. Thanks! \ud83d\udc4d . > We recommend to set exactly one user as Master, and any amount you wish as Operators and below. While it's technically possible to set multiple Masters and ASF will work correctly with them, for example by accepting all of their trades sent to the bot, ASF will use only one of them (with lowest steam ID) for every action that requires a single target, for example a !loot request, so also properties like SendOnFarmingFinished or SendTradePeriod. If you perfectly understand those limitations, especially the fact that !loot request will always send items to the Master with lowest steam ID, regardless of the Master that actually executed the command, then you can define multiple users with Master permission here, but we still recommend a single master scheme - multiple masters scheme is discouraged setup that is not supported.. > I sometimes end up having to log into the main bots account manually to accept trades because ASF decides to ignore those trades.\n\nASF is not a trade bot, and if you don't know why ASF ignores given trade then perhaps you should read the wiki instead of suggesting out of scope features and not following issue template.. ASF is not Steam friends manager either, I recommend you to read contributing guidelines, as you're clearly missing ASF purpose.. Kinda out of the scope, but idea is good enough - ASF already keeps in memory list of owned packageIDs for each bot, so it can be extended by allowing you to query how many bots own given packageID.\nHowever, this is not going to fall into !owns command, as owns by definition allows to query any number of appIDs and names, and gets that info from Steam community / API, while this one would work only for packageIDs - wishlist.. This is once again out of ASF scope, ASF is a tool for farming steam cards, not for inventory management.. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ\n\nQ: Can ASF automatically idle each game for X hours before cards are added?\nA: No, the whole point of Steam cards system change was to fight with false statistics and ghost players. ASF won't contribute towards that more than necessary, adding such feature is not planned and won't happen.. I literally added that point a few minutes before your issue, so no hard feelings, I'd miss it myself if I was you \ud83d\ude42.\n\nAutomation is important everywhere, thanks to that my day is 40 hours long \ud83d\ude0f.. As stated in FAQ, nothing to fix in ASF, report ASF to devs of your AV instead.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: not a bug, explained in the FAQ.. I have better stuff to do than fixing third-party fuckups, so no, I won't spend any minute trying to out-smart broken third-party software and fix anything else than my own program. Since ASF doesn't have any virus, there is nothing to fix, and if you expect me to intentionally downgrade functionality of my own program only because some AV is horribly broken then you're in the wrong place.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: not a bug, explained in the FAQ.. Thanks for detailed bug report, I should be able to reproduce it later this day.\n@Logerfo ASF should always crash if something that should never happen happens, to indicate fatal errors like this one that should be corrected in the code, not ignored. If something is intended, proper ignore routine for that specific segment is added instead (e.g. logic for Steam quirks).\nBTW this looks like ILRepack-specific bug to me, it probably ignores some humanizer parts.. This is caused as I thought by the fact that ILRepack can't evaluate embedded resources, so it's the same as ASF would be compiled without any support for language strings, leading to crash.\nPersonally I suggest slowly abandoning ASF-Service, since ASF is moving to .NET core and there is no service equivalent in .NET core yet. I only dirty-patched it for now since I plan removing ILRepack step entirely in the future, which would automatically solve this in proper way.\nThanks for report.. Because ILRepack is being used only for creating ASF-Service, as Costura is not capable of being run as service - https://github.com/Fody/Costura/issues/164. Once ASF-Service stops being a thing, ILRepack will not be used for anything anymore.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. https://github.com/JustArchi/ArchiSteamFarm/issues/572. 2017-06-16 15:36:05|mono-sgen-1935|FATAL|ASF|UnobservedTaskExceptionHandler() System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. ---> System.NullReferenceException: Object reference not set to an instance of an object\n  at SteamKit2.TcpConnection.TryConnect (System.Object sender) [0x00094] in <f740b1bfddfa4ddb95d88fffe3231fb2>:0 \n  at SteamKit2.TcpConnection+<>c__DisplayClass19_0.<Connect>b__0 (System.Threading.Tasks.Task`1[TResult] t) [0x000b2] in <f740b1bfddfa4ddb95d88fffe3231fb2>:0 \n  at System.Threading.Tasks.ContinuationTaskFromResultTask`1[TAntecedentResult].InnerInvoke () [0x00024] in <73ee1b14c2fa4d61b481096ff3d8d6d7>:0 \n  at System.Threading.Tasks.Task.Execute () [0x00010] in <73ee1b14c2fa4d61b481096ff3d8d6d7>:0 \n   --- End of inner exception stack trace ---\n---> (Inner Exception #0) System.NullReferenceException: Object reference not set to an instance of an object\n  at SteamKit2.TcpConnection.TryConnect (System.Object sender) [0x00094] in <f740b1bfddfa4ddb95d88fffe3231fb2>:0 \n  at SteamKit2.TcpConnection+<>c__DisplayClass19_0.<Connect>b__0 (System.Threading.Tasks.Task`1[TResult] t) [0x000b2] in <f740b1bfddfa4ddb95d88fffe3231fb2>:0 \n  at System.Threading.Tasks.ContinuationTaskFromResultTask`1[TAntecedentResult].InnerInvoke () [0x00024] in <73ee1b14c2fa4d61b481096ff3d8d6d7>:0 \n  at System.Threading.Tasks.Task.Execute () [0x00010] in <73ee1b14c2fa4d61b481096ff3d8d6d7>:0 <---\nAs well as:\n2017-07-21 02:51:53|dotnet-19313|FATAL|ASF|OnUnhandledException() System.ObjectDisposedException: Cannot access a disposed object.\nObject name: 'System.Net.Sockets.Socket'.\n   at System.Net.Sockets.Socket.Poll(Int32 microSeconds, SelectMode mode)\n   at SteamKit2.TcpConnection.NetLoop()\n   at System.Threading.Thread.ThreadMain_ThreadStart()\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state). You didn't report anything new - first one is websocket hiccup https://github.com/JustArchi/ArchiSteamFarm/issues/612 and second one is not even an error. Reporting what ASF marks as a warning is generally pointless.\nLast NRE is in fact this issue.. This issue should be completely solved in V3.0.5.0+.. > Perhaps it could limit key redemption based on the value of \"GiftsLimiterDelay\"?\nThis is a good idea, I didn't know that mass-redeeming could lead to issues. I'll add it ASAP, thanks!. Why suggesting a valid enhancement that can benefit entire program and all users could end in sarcasm? I never wanted anything bad for my users or my project, sticking with ASF scope is (against common opinion) also beneficial for both.\n!addlicense suggestion is also a good one, it wasn't suggested back in #517, user instead wanted to add forwarding which didn't make any sense in terms of how !addlicense in fact works.. Yes.. A proper function is already implemented and will go public soon.\nUntil then my patrons are testing it - https://www.patreon.com/posts/asf-v2-3-2-3-w-11943277. Closed in https://github.com/JustArchi/ArchiSteamFarm/commit/2c2c365cd22a99639d9aeb04eaf20f4bc2e508ea. Unless you can convince me how it's possible for ASF process to have two owners at the same time, this is out as a logic flaw. We already have SteamUserPermissions.. Closed due to lack of activity.. @light444 It does not matter to me what is your legal stance on auto discovery queue. Your post is nothing more but spam totally unrelated to this issue or development, and I ask you to refrain from doing that. If you don't want to discuss the issue, then do not post.. As for the issue itself, I agree that this option should be possible to toggle, preferably with default value of being set to true.\nHowever, I'm in the middle of porting ASF to V3, so most likely this will make it into ASF V3 stable and not V2 anymore. V2.3.2.4 will most likely be final V2 release, having stable of V2.3.2.0.. No.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug. Most likely caused by not having .NET 4.6.1+ installed.. ASF flavours done for now - https://ci.appveyor.com/project/JustArchi/archisteamfarm/build/4322-master-afqkhuav/artifacts\nI still have no clue how I'm going to support all of that in auto-updates, it'll be true pain to develop something that would satisfy me.. Note to self: auto-updates need really deep testing on all sort of crazy configurations. So far it works better than I initially thought.. Thanks for report.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug. You supplied invalid ASF 2FA credentials.. Confirmations in WinAuth won't work either. And !2fa will work for you too.. ASF GitHub is not technical support. If you want to receive one then move onto proper channel.. ASF is not a trade bot and will not make assumption what is \"maybe-good\" for you, STM module is responsible for accepting neutral+ trades and rejecting everything else, whether reject will end with ignore or true reject is controlled by entirely different flag. What you describe as uncertain is already happening for IsBotAccount: false bots, and there is no \"half-bot\" account, such account would be a trade bot that is out of ASF scope. Especially because STM operates only on good+ trades, and there is no such thing as \"extras\".. @yashendra2797 https://github.com/dotnet/corefx/issues/21435\nThanks for taking your time to submit feedback, it's important that such issues are found before I roll 3.0.0.0 on stable channel.\nJudging from the issue itself it could be possible that older OS X (10.12?) would work fine, you can test if you want to. It's a bug in .NET Core itself, so it'll be fixed sooner or later.\nIf it works fine then I'll add special note in upcoming compatibility wiki section about that.. @bartonjs Thank you a lot for answering! I see it got merged to 2.0.0 branch so it should be available in preview3 already, that's great! At least we helped to close one outdated issue then \ud83d\ude42. Thanks a lot!. Mass-edits are done better via scripting, not a tool. No tool will offer you powerful regexes or complex conditions - ConfigGenerator is mainly for less advanced (newbie) users that just want to tweak ASF to their liking.\nSure, it's definitely a valid enhancement suggestion that can be added to TODO list, but it's not a priority, and definitely not for V3 release. Since now CG will be javascript-based, perhaps people will contribute to improve it in the future - possibilities are endless.. Android is not GNU/Linux.. .NET Core requires libssl in version 1.0.X to work properly (1.0.2 IIRC). You have only 1.1. Get libssl1.0.2 or equivalent.. @4679 Also https://github.com/dotnet/core/blob/master/roadmap.md#net-core-20---supported-os-versions. > it would be pretty useful if you can modify the bot's config by commands in --server mode\nYou can already edit config files and ASF will automatically pick them up and reload after edit.\nASF as a program should never edit config files itself. This includes IPC.\nAlso your update error got fixed in V3.0.0.3, thanks for report.. There's no way how socket would survive process termination, if that indeed happens then it should be reported to .NET Core folks as a bug. There's nothing to fix in the process if process is killed already.. Regardless, I added extra routine that should close IPC as last call before process shutdown, even if it should not be required, it's there just in case now.\nASF V3.0.0.3 should be available soon.. Correct, you'll miss that file when doing self-build, intentionally, as I don't want to enable any auto-updates for you. Maybe I just convert it into warning instead, or use a variant that would disable auto-update but keep notifications, that's best probably. For now you'll have an error, but it'll be fixed before stable release.. https://github.com/JustArchi/ArchiSteamFarm/wiki/Release-cycle\n\nPlease note that newly introduced features and changes might be undocumented (e.g. on the wiki) until some time later, as documentation is usually written once final code of given feature is ready (to save us time rewriting documentation each time we decide to modify the feature we're currently working on). Due to the fact that pre-release might contain work-in-progress code that doesn't have a final form yet, documentation might arrive at later stage of the development.\n\n\n\nIn long run all foils from the same set should have exactly the same value. I'm fine with setting MatchableTypes back to ASF V2 default (so only trading cards), but you should not make assumptions how everybody wants to use ASF. STM is supposed to help badge completion, not game the market.\n\n\nYou can \"lose a non-duplicate unique item\" only for other \"non-duplicate unique item\" that you're currently missing, unless you're using MatchEverything but then everything works as you configured it. I don't see any need of logic enhancements here, nobody forces you to set foils, backgrounds or emoticons as matchable types - if you want to decide yourself what is worth for you, then do that, ASF as stated on the wiki won't make smart guesses. It's supposed to help you complete the badge and all collectibles, and if that means trading 4 out of your 5 rare emoticons, for 4 common ones, then that helps to reach that goal, regardless of their market value. If you don't want to do that, then don't set emoticons as matchable types.\n\n\nASF currently doesn't even have logic for rarity, and I'm not sure if I want to bring it in the first place.. > For the 2nd part I said I don't care about rarity, just that one shouldn't trade away a unique crafted item if TradingPreferences is 3.\nCan you give me a link to an example unique crafted item you're talking about? I'll fetch inventory and see if I can add a logic for that.. You're missing a point here.\nIf someone offers any dota background for a dragon, indeed you will get it accepted, as there is no way how it'd end as a bad trade for you.\nHowever, if someone offers you something for a tidehunter, then ASF will accept such trade if and only if it's neutral, which means that the other person MUST offer you another background that you do not own yet. In this case you're trading your \"last unique item\" for another \"first unique item\" that you do not have yet. You're not losing anything, you have 1x A 2x C and you're doing A -> B swap. This is not a bad trade, this is neutral one, and overall count of items on per-unique basis remains the same. Moreover, if that person offered you another dragon for tidehunter, obviously it'd be a bad trade and get denied.. Warnings are not errors and typically are not worth reporting, unless they happen on usual basis while your configuration is fine.\nI reported last one in https://github.com/SteamRE/SteamKit/issues/400 - alpha5 probably won't improve things just yet as https://github.com/SteamRE/SteamKit/pull/402 is still WIP.. You didn't install .NET Core prerequisites. As a pre-release user you should know how to read wiki.. @Smankusors https://github.com/SteamRE/SteamKit/issues/420\n@MrMarble Steam not answering to ASF is not ASF issue.\n@MikeLund Added to TODO.. @MikeLund Reproduce the crash with V3.0.0.7+ please, I added some debug routines.. Good, now I know where the issue is, thanks. This is caused by lost auth (session) and will happen if you have something that conflicts with ASF web session, such as your steam client or steam on your mobile active at the same time.\n\nIs it possible to change this functionality, or must I just learn to use a different config directory?\n\nASF copies ASF.json over to config directory (same as everything else) only if ASF build file is newer than existing one. This indicates change of default values and if you're building ASF yourself then this should be a signal for you to take care of changes and re-evaluate your main config. If you don't want that signal then simply copy your ASF.json over each time after compilation. This process should not be changed, and ASF V2 worked exactly the same.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/ArchiSteamFarm.csproj#L57. @Janniqz Thanks, yes this is caused by lack of permission on new binary and should be corrected, I'll take a look.\n@MikeLund Yes, I'm waiting for SK2 with https://github.com/SteamRE/SteamKit/issues/420 until I re-enable it back. Your issue is also worth reporting to SK2 folks. https://github.com/SteamRE/SteamKit/issues/422. Auto-update issue should be fixed since V3.0.1.0 onwards, some unhandled winsocket exceptions are also handled in 3.0.1.0+.\nKeep reporting crashes and other weird errors, this is getting pretty stable by now.. I'm not sure if update code in 3.0.0.4 worked correctly, better reinstall. This is faulty install issue.. Actually no, I can't use my newly introduced library on Windows, I need to fix it in follow-up 3.0.1.1 release.\nYes, just config folder is everything you need.. Just wait for 3.0.1.1 to get built and released.. That's very nice to hear. Thanks.\nYeah 3.0.1.1 had bugfix for Windows only, otherwise it works the same as 3.0.1.0.. ASF is not Steam mobile authenticator. I suggest to use another tool for that.. (BTW, you could in theory set bots as Enabled: false and execute appropriate command through IPC/WCF. Still, not ASF purpose.). I'm not interested in any GUI for ASF. At best somebody could code simple HTML form and make use of newly-introduced IPC interface, but that won't be me either.\nBesides, everything you linked doesn't work on .NET Core, and last one is experimental proof of concept I definitely won't base on when developing ASF. This is on top of lack of interest in it in the first place. If you need GUI for ASF - code it yourself and send PR. IPC is a great fundament for that, as ASF could totally expose nice user-friendly interface over http - I'm just not interested in coding it myself.. 3.0.1.2 is first release candidate.\nPersonally I believe that this version is stable and complete enough to replace ASF V2. I'll give it a few more days for you to test - in the meanwhile I'll update all remaining wiki pages and if everything looks good, release stable in a ~week from now.\nLet me know if you find any issues.. Are you seriously wondering why ASF is not able to idle a game that is not yet even released on Steam?. Correct, that is unhandled at the moment, thanks for pointing it out! I'll add support for it soon.. Not a bad idea, I'll see what can be done with it, maybe add another endpoint for that or something.. Yes, it's included in every response by definition. This is happening since every command accepts plural <Bots> argument now.. I had a plan to somehow re-write that part in order to still return bot config but without all available properties, I'll see what can be done about that.. Version 3.0.1.4 is supposed to be final release candidate. All wiki pages also got updated. I plan a release in a few following days - if you spot anything wrong please let me know. Happy testing & reading, thanks \ud83d\ude42.. apt-get purge libssl1.0.0.\nhttps://github.com/dotnet/corefx/issues/8951. That has nothing to do with ASF.. Exactly. Steam closing your connection due to you executing crapload of heavy requests is not ASF issue.. Release tomorrow, last few hours for eventual feedback, also in terms of wiki. Thanks!. ASF V3.0.1.6 just went stable, huge thanks for all of your support and feedback.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: not a bug.\ns1: !redeem asf RQFPG-W7LZV-LD5WJ, W5XHV-F2WF0-0IT8J\nI suggest to understand better what ASF as target bot name does and how you told every single of your bots to redeem the same key.. I corrected wiki a bit.\n\nPlural arguments, such as <Bots> or <appIDs> mean that command supports multiple arguments of given type, separated by a comma. For example, !status  can be used as !status MyBot,MyOtherBot,Primary. This will cause given command to be executed on all targeted bots in the same way as you'd send !status to each bot in a separate chat window.\nIn addition to that, there is a special ASF keyword which acts as \"all bots in the process\", so !status ASF is equal to !status all,your,bots,listed,here.. You put a space in ,, and space is used as arg delimiter.\n\nGitHub is not technical support, if you want to get help then move onto proper channel - this issue is not a bug.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: not a bug, explained in the Configuration.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: not a bug, explained in the FAQ.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Thanks for detailed issue report.\n\nThis is not a bug, files are compiled on Windows and there is no such thing as unix permissions being set right away. This should be noted in setting up wiki page instead.. Thanks for report \ud83d\udc4d . https://github.com/JustArchi/ArchiSteamFarm/wiki/Trading. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Looks like Steam just didn't work properly at that time - if the issue persists then it could indeed be some Mono bug. Otherwise it should not be reproducible anymore.\n\nAnyway, since we're moving to ASF V3 on .NET Core, there is nothing to fix in master in terms of Mono. Refer to https://github.com/JustArchi/ArchiSteamFarm/wiki/V3-Migration and https://github.com/JustArchi/ArchiSteamFarm/issues/586 for more info.. Mono crashes were out of ASF scope, even during ASF V2. If you care about fixing them then report to Mono devs.\nI recommend migration to V3 since I'm no longer fixing ASF V2, especially when it comes to Mono issues. Refer to https://github.com/JustArchi/ArchiSteamFarm/wiki/V3-Migration and https://github.com/JustArchi/ArchiSteamFarm/issues/586 for more info.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\nFull log is mandatory, I'm not even looking into the issue without it. If you get a full log while reproducing your issue, you can post it here and I'll re-open the issue.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nAlthough it's a bit connected with the development so I'll answer - you should not rename ASF binary regardless if it's possible or not. If your program does not work with original naming then find better one or another solution. Your issue is not ASF issue.. Please verify if 3.0.0.7+ helps with this once its released, or you can grab latest AppVeyor build, thanks!. Then enable debug mode, only that one single affected bot and reproduce your issue including:\n\n2017-07-31 19:09:54|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n\nPack whole debug directory together with log.txt and send on my e-mail: JustArchi[at]JustArchi[dot]net.\nRemember debug directory contains sensitive information, as stated on the wiki and should not be put in any public place.. Got it, thanks. Wait while I'm trying to guess what is wrong with Steam network, you'll have a bunch of appveyor builds to test next.. Once AppVeyor finishes build, try to reproduce your issue with https://ci.appveyor.com/project/JustArchi/archisteamfarm/build/4410-master/artifacts. If issue is still not fixed, once again enable debug mode and send new log + debug directory on my e-mail, thanks!. Note to self: Steam network can go crazy on as stupid thing as asking for several product infos at once, or asking for appID that doesn't exist.\nThanks for help. I consider this issue closed and will release next pre-release soon. \ud83d\udc4d . https://github.com/SteamRE/SteamKit/issues/400#issuecomment-316973714. Or in other words - known issue, supposed to be fixed in near future, and doesn't belong as ASF bug.. > 2017-08-10 12:22:04|ArchiSteamFarm-20224|INFO|ASF|InitASF() ASF V3.0.0.9\nhttps://github.com/JustArchi/ArchiSteamFarm/issues/586#issuecomment-319523179. If you updated from old version that didn't have the fix then obviously chmod +x didn't happen automatically.\n\n. Correct, there is another issue triggering it in old 3.0.1.9 code, I noted it in the release notes. New code doesn't suffer from this mistake.. Pro tip in case you didn't know - you can push changes to this pr by just pushing changes to the repo you want to pull from. Most of the requested changes are misc, so you should easily be able to correct this PR a bit. Otherwise LGTM.. Also you should probably add handling of SteamTradeToken. Luckily you have everything you need already - I suggest checking if target steamID to transfer is friend with SteamFriends.GetFriendRelationship(), and if not friend, you have ArchiWebHandler.GetTradeToken() of given bot you want to transfer to.. LGTM, let me know if you want to further improve/test it or you're good with merging it already. Thanks for contributing! \ud83d\udc4d . Then ASFui should be updated to match new structure - it was clearly stated in V3 migration article that current way of accessing IPC is considered to be temporary until a good idea of a proper API is ready. I don't plan supporting obsolete and much more problematic to execute ways such as /IPC?command=version if user can just call /Api/Command/version instead.\nNow the API is ready and I do plan to keep it as compatible as possible in future versions, but I don't want to hold on obsolete temporary dependencies that were announced to be temporary in the first place.. It'd be a good idea to make use of extra time the version still being in pre-release and let @alvr correct the URL, since the change is really misc.. > OK, would be nice if you could update the wiki then to include the changed IPC endpoint.\nWould be nice if people read \ud83e\udd14 . Nope, that would require from ASF server to have valid SSL certificate and add extra overhead.\nIf you need ASF IPC interface over SSL then I strongly recommend to use reverse-proxy. Nginx can be a very good solution for that.\nlocation / {\n    proxy_pass http://127.0.0.1:1242;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n}\nThen you can just set your website to use any protocol and port you want to, including securing it with SSL and certificate.. @GUiHKX You have your error clearly stated in the response:\n< HTTP/1.1 411 Length Required\nYou can't send POST request without specifying Content-Length. Refer to HTTP RFC if you're confused - https://tools.ietf.org/html/rfc7231#section-6.5.10\nAs for the exception it's good that you reported it, will cover it in V3.0.5.2.\n@Benman2785 Nothing is broken, thanks for your concern.. @GUiHKX You can continue hunting bugs in V3.0.5.2, especially all IPC-related exceptions \ud83d\ude42. I just told you what you're missing - read again.. The example on the wiki doesn't require request body \ud83d\ude42. > Okay I got it now. I must send Content-Length: 0. I didn't know that header was required when I'm not sending anything. It just seems a bit weird for me... But it's working. Thanks.\nhttps://tools.ietf.org/html/rfc7230#section-3.3.2\nA user agent SHOULD send a Content-Length in a request message when\n   no Transfer-Encoding is sent and the request method defines a meaning\n   for an enclosed payload body. (and POST request does ~archi)\nDoesn't matter if it seems weird to you or not - RFC states how HTTP protocol works, not me neither you.. > Yes, but the fact that is is a standard doesn't make it less stupid. lol. I also don't agree with the request design. If we're using POST, then why don't we send the command in the request body rather than in the URL?\nBecause of yet another set fo rules, this time RESTful URLs one - http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api#restful. If you got 404 then it means that your URL is wrong. Since you didn't say anything but \"it's broken\", you can only get a response \"it works for me\" \ud83d\ude42. > But we're not adding new information nor modifying them into ASF when we use POST, at least that's my understanding of why the article recommended its use. A GET would make more sense in that case. At least  I've never seen POST requests being used to send an empty request body. But who cares, this discussion is pointless...\n@GUiHKX Then your understanding is wrong once again, RFC 2616 this time, section 9.1.1 - https://www.ietf.org/rfc/rfc2616.txt\nIn particular, the convention has been established that the GET and\n   HEAD methods SHOULD NOT have the significance of taking an action\n   other than retrieval. These methods ought to be considered \"safe\".\n   This allows user agents to represent other methods, such as POST, PUT\n   and DELETE, in a special way, so that the user is made aware of the\n   fact that a possibly unsafe action is being requested.\nIssuing command is not safe retrieval of data \ud83d\ude42\nYou're free to agree or disagree with this, but like I said above - you're not defining how HTTP protocol should work, neither I do. RFCs were defined and written exactly for this reason, and I won't break a set of commonly-accepted and established standards only because somebody thinks he knows better - including my own person.\n@Benman2785 \n\n\"Works for me\" \ud83d\ude42 . > @JustArchi I think you're misunderstanding the usage of GET and POST requests. Let's get into the \"safeness\" matter of using POST in this case. What does it keep you safe from if we're sending all the data in the URL?\n@GUiHKX\nYou're interpreting safeness in entirely wrong way - safe in context of RFC means that the HTTP server's state doesn't change when issuing a command. Whether you issue GET /Api/Bot/ASF one or 100 times, it'll not result in any specific action altering the state of the ASF as a process, hence data retrieval. Nothing is being updated in a way that the next GET request will be unavailable or have data altered.\nPOST indicates that action is unsafe, as in - it can alter HTTP server's state. For example !exit command will do that, as first !exit command will make ASF close, making HTTP server no longer accessible, which will make all other requests fail due to that, hence being unsafe by altering server's state (and the rest of the process).\nThe security of the actual data is completely irrelevant since including key in POST body isn't any different from including it right in the URL for potential attacker - it's exactly in the same place, in the message of the packet. If you want to secure this message over the internet then you should use HTTPS protocol, for which I already gave a solution above. And in this case once again it does not matter whether you use POST or GET because it's still in the same place, but this time the message is entirely encrypted.\nIf you don't have anything apart from \"I think it's stupid\" reason for violating RFC standards, REST guidelines and HTTP protocol definition, then it'd probably be best if I could stop wasting time proving you that you have no idea what you're talking about \ud83d\ude15\n@MrBurrBurr \nI love it \u2764\ufe0f. When you consider your design more or less finished, pack everything into zip file and upload on GitHub - I'll be happy to integrate this, so you as well as all other people can further improve it in pull requests \ud83d\ude42. With new API endpoints you can do far more - not only getting rid of probably dirty parsing of !api or !status ASF with finally proper GET /Api/Bot/ASF, but also you can add basic bots management, as new API endpoints allow you to create/update/delete bot configs.\nTake your time \ud83d\ude42. > but it does make a difference if we use badly designed POST requests for commands like: !version, !2fa, !bl, !ib, !iq, !password, !help, !stats, !status, which simply read stuff from memory and don't change anything in the ASF process?\nIt's the potential of a request that is considered safe or unsafe, not specific example. /Api/Command is designed as POST because it has potential to be unsafe, but without a requirement of being used in unsafe context all the time. I guess that part was obvious.\n\nI suggested you to put the actual command in the body of the request\n\nWhich violates RESTful way of creating URLs.\n\nOR, I suggested using GET requests instead\n\nWhich violates RFC 2616, section 9.1.1.\n\nSending a POSTrequest with an empty body and sending the actual data in the URL as a query-string?\n\nUnbelievable, right? This situation is so uncommon that it's even mentioned in the RFC.\n\nBecause of the design of that request, you're creating conflicts with already defined URL standards (since you seem to like them so much) when you can have absolutely every character in your bot's name.\nNow people will have to adapt their bot names because of your crappy design choice.\n\nIf only you could read the RFC you linked fully \ud83e\udd14 \nIf data for a URI component would conflict with a reserved\n   character's purpose as a delimiter, then the conflicting data must be\n   percent-encoded before the URI is formed.\ncurl 'http://127.0.0.1:1242/Api/Bot/archi%23smart'\n{\"Message\":\"OK\",\"Result\":[{\"BotName\":\"archi#smart\",\"KeepRunning\":false}],\"Success\":true}\nBut it's fine, you tried really hard, I appreciate the effort \ud83d\ude42\n\nIt's not the first time I saw you being rude to people and assume you're right about everything\n\nIt's not the first time I'm seeing somebody who can't accept for a second that he actually might be the wrong one, even when presented with bunch of rules, RFCs, standards and protocol implementations used worldwide. The best thing is how you used your last possible argument with being impossible to use # in URL encoding, which isn't only completely wrong, it's even more funny when you realize that according to this I should make all requests POST-based with a body, because user could always use some special character in a query \ud83d\ude42. And with your prime example of even fetching bot status as a POST request, now THAT would be just lovely, I'd expect at least a dozen of folks asking me if I got hit in my head when deciding upon this.\n\nI'm done with you, I won't make any further comments regarding this issue anymore.\n\nMe neither, and I'll actually remove any further comments to this matter from now on, just to enforce it in case you change your mind, since it doesn't contribute anything to the development - but you're more than welcome to suggest enhancements that bring more advantages than disadvantages, assuming that you still want to do that of course. And I know you won't hold grudge in a few days when you realize your mistake and feel embarassed for it, happened to me more than dozen of times \ud83d\ude0a.\nHere is a peace dove for you \ud83d\udd4a . And now back onto development \ud83d\udd27\n@MrBurrBurr I added one new API endpoint, GET /Api/Structure/{Structure} which might help you with generating configs for bots. In general you must keep in mind that BotConfig returned by /Api/Bot/{Bot} lacks sensitive details, which is wanted scenario. This is why I added a new endpoint, so you can make updating bot configs possible.\nThis is how I see it:\n- GUI asks for BotConfig structure with GET /Api/Structure/BotConfig - it has full structure.\n- GUI asks for BotConfig of given Bot with GET /Api/Bot/{Bot} - it gets bot structure, which is almost full but lacking sensitive details.\n- For every field in full structure, if bot has it defined update it to bot's value, if not set it to null (alternatively use bot structure, detect which fields are missing and assign null value for them)\n- Now apply user edits to fields he changed on the website, pretty straightforward. Keep in mind to not re-define sensitive details from null values if user is not changing them.\n- Send POST /Api/Bot/{Bot} with updated config, default value of KeepSensitiveDetails: true will change your nulls for sensitive details into proper values on ASF side.\n- Config updated! \ud83c\udf89\nA bit much, but it should work just awesome. Normally you could just skip entire 3rd point and modify current bot config as it is, and missing fields would be assumed automatically, but this sadly won't work for SteamParentalPIN, as it has default value of 0 and not null, so if user is using custom pin then your \"just edited bot config\" would re-define his value back to 0. On the other hand if I assumed that default value of sensitive detail == keep, then re-defining that PIN from custom value like 1337 back to 0 would not be possible with KeepSensitiveDetails: true. This is why I decided to stick with this way and make KeepSensitiveDetails: true make all nulls defined for sensitive details to inherit, I think it's quite good approach, unless somebody has better one.\nSince you're the main user of the API, you're free to suggest possible improvements and changes as you see fit. In other words - if you need something, just ask, and I'll try my best to solve the issue in one way or another, depending how it's appropriate. For now I consider API enough to make basic bots management with bot statuses and sending commands, once we have that we can think about future improvements \ud83d\ude42 . @MrBurrBurr That's up to you, you can post it if you want more people to work on it and eventually send PR, or finish it yourself. When it comes to me I'm just waiting for somebody to send a PR and start a thing, it's natural that other people will improve it once it's merged.. > The GUI folder needs to be located inside of ASF folder\nWhat do you mean by that? Physical location of files doesn't matter for functionality.\nJust create Website folder in main ASF directory and put all html/css/js files there (in your wanted structure), then send a PR. I'll glue it with IPC server when I find some free time.. Closed by #731. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: not a bug, don't use pre-release features if you're not able to do so without proper documentation.. This issue should be fixed since ASF V3.0.2.0 onwards (which implementes alpha7 version of SK2 2.0). If you want to help, please ensure that you're using ASF V3.0.2.0 and your SteamProtocols setting in ASF.json is set to 4 (websocket). If you spot any unhandled exceptions related to networking or websockets, especially similar to above, please let me know. Thanks!. Bug hunting continues with 3.0.2.3.\n\nIf you want to help, please ensure that you're using ASF V3.0.2.3 and your SteamProtocols setting in ASF.json is set to 4 (websocket). If you spot any unhandled exceptions related to networking or websockets, especially similar to above, please let me know. Thanks!. @K4r0qtuYNE5G4qgZ That bug was fixed long time ago, and existed initially in ASF V2 too. If you have something like that on latest stable then open new issue - websocket protocol is not default for ASF V3 and nobody is forcing you to use it, you should be glad we're trying to fix it and improve it rather than leave bugs around, not to mention that you can't run into this issue with default settings. If you're not happy with updates, then use V0.1 version.\n\n@GUiHKX Can you tell me ASF variant and the OS you're using? Including OS version please. I see that you're running ASF in generic variant, so just copy paste output of dotnet --info. Thanks.. Also please confirm version of  SteamKit2.dll library next to ArchiSteamFarm.dll. You can open properties of that file and switch to details tab.\n. That dotnet --info is incomplete. It's missing OS information, as well as CLI version.. This is unsupported officially build which means I'm not sure if it's going to be accepted. I'd prefer not to bother dotnet devs with possible unsupported bugs.\nCan you reproduce exactly the same issue on Windows or any officially supported OS? It's important that you do it on latest ASF with latest fixes, even if you were able to do it in the past.. It doesn't necessarily have to be anything connected with custom build itself, as the issue seems generic enough to not look like a fuckup, but I prefer to fill missing details so we confirm that it's indeed corefx issue.\nI'll report it to corefx guys, while you should still ensure that you can reproduce it on Windows, thanks.. That one is totally different one, on different ASF version. SK2 guys patched many of them, this is why I say that it's important to reproduce the crash on latest ASF and not basing on outdated data, so yeah I'd be happy if you could reproduce it on some official build.\nDoesn't necessarily have to be Windows, you can pick Linux as well, but one of the official ones (Debian/Ubuntu for example).. Looks like that won't be needed as Windows uses different implementation. Let's just wait for corefx devs response now.. Your issue has nothing to do with this issue and is actually technical problem that is not even ASF bug in the first place to be discussed on GitHub. I'd appreciate if you didn't confuse everybody with unrelated stuff, thank you.. Read what the issue is about.\n\nFATAL errors on websocket hiccups\n\nWebSocket protocol is enabled only when you set SteamProtocols to 4. Latest stable ASF V3, V3.0.1.9 has SteamProtocol set to 1, which uses only TCP protocol.\nCan you explain to me how are you getting websocket crashes if you're not using websocket protocol?\nReporting issues without backing them up with mandatory log is automatically ignored, you're probably not realizing what you're talking about despite of \"having a knowledge\", by taking ASF log lines out of the context and incorrectly matching bug with technical issue. What you're doing right now is spamming without any constructive development feedback. Like I told you above, if you want to report an issue, then back it up with log, or don't waste your time and continue doing \"more important things\" if you can't follow this simple tip.. It crashes the sockets because you're using experimental unsupported configuration, which is hitting exactly the issue we're resolving here. If you're expecting stable experience then don't use pre-releases and pre-release settings. If on the other hand you want to help the development, then don't complain and provide constructive feedback, like @GUiHKX is doing all the time, helping me greatly to solve all remaining ASF issues.\nPre-release is not \"faster stable\". Either you want to help the development, or you should not use it. And if you want to help, then you shouldn't make it harder for me. A simple \"I've encountered the same issue on ASF V3.0.2.4\" would be enough.. If you could post full exceptions instead of half-cut then that would be great \ud83d\ude42.. Yep, looks like same already reported issue. What OS?. Thanks, added that info to already opened ticket.. There is not even a stacktrace, I'm not sure from where that one happened but if there is no extra info related to that then I can't guess anyway. Ignore.. This issue should be completely fixed with next .NET Core release, which is 2.1. ASF will follow once it goes stable. Ref: https://github.com/dotnet/corefx/issues/24002\nThe issue remains open until it's fixed in ASF.. Websockets are also being used in IPC GUI now, and your issue was already been resolved by .NET Core team.. > Websockets are also being used in IPC GUI now, and your issue was already been resolved by .NET Core team.\nWhich part of the above message you didn't understand @JadynWong?. @w-victorique Stop spamming with stacktraces in entirely unrelated issues. You don't have even a single instance of websocket namespace. Ask in appropriate place for that (and GitHub is not appropriate place for technical issues).. Fixed by #799. Thanks for report \ud83d\udc4d . > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nhttps://ci.appveyor.com/project/JustArchi/ArchiSteamFarm\nhttps://travis-ci.org/JustArchi/ArchiSteamFarm\nAs a side note, this looks to me like lack of connection or other reason for which dotnet restore checks fallback folder instead of online resources.. Then we should probably use something like localhost instead, no?. Alright, I'm asking because I'm not an expert in HTTP headers either, then you should probably only move it to WriteAsync() so it gets appended to all requests.. @Efreak Wrong listening address, 0.0.0.0 worked in WCF times, in IPC HttpListener it should be *. I could probably add local mapping for that, so this issue is silently fixed on ASF side.\nOf course that's assuming you truly want to bind to all adresses and not just localhost.. > I had also tried 127.0.0.1. I know it's not required, but I like having the configuration setting in the file in case I wish to change it eventually, for example to allow access to my LAN.\nAnd that's fine - 127.0.0.1 should work, as well as 192.168.0.1 or any other local IPv4 address to enable listening on lan. It even goes as far as being able to use domains, for example home.efreak.net in place of IPC host. https://msdn.microsoft.com/en-us/library/system.net.httplistener(v=vs.110).aspx\nWhen talking about permissions standard rules apply - on unix ports below 1024 are for root only, on Windows listening on * is available only for administrator from what I recall. You'll get access denied exception in this case. This means that you don't need to run ASF as root (and you should never do).. GitHub is not technical support, if you want to get help then ask in proper place.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. https://github.com/JustArchi/ArchiSteamFarm/wiki/Compatibility\nGeneric package is platform-agnostic build that doesn't include any machine-specific code. This setup requires from you to have .NET Core already installed on your OS in appropriate version.\n\nAlthough sooner or later ASF will be built with stable version of net core 2.0.. 2.0.0 will become default runtime since ASF 3.0.1.6 onwards.. This could be possible for saying when ASF is refusing trade due to lack of permission, trade hold or invalid items, not when it's doing STM neutrality calculation. Code quality would suffer a lot if instead of very efficient and clean:\n// Calculate final neutrality result\n// This is quite complex operation of taking minimum difference from all differences on per-game basis\n// When calculating per-game difference, we sum only amounts at proper indexes, because user might be overpaying\nint difference = itemAmountToGivePerGame.Min(kv => kv.Value.Select((t, i) => (int) (t - itemAmountToReceivePerGame[kv.Key][i])).Sum());\nreturn difference > 0;\nI'd need to rewrite and split the entire line into foreach, ifs and returns just to satisfy stating the exact card/game that caused neutrality to be bad.\nNot to mention that this option would be also disabled by default anyway. ASF is not a trade bot, if you require this information then most likely you'll need to code solution on your own.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nhttp://steamcommunity.com/groups/ascfarm#announcements/detail/2784768184297210777\n\nIn comparison with previous updates, ASF V2 won't automatically update to V3, you'll need to update manually reading V3 migration guide.. https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/Localization/README.md\nAll strings used by ASF can be found in main Strings.resx file, and that's also the only file that should be modified - all other files are managed automatically and should not be touched. Please visit localization section on the wiki if you want to improve translation of other files.. Stop launching the same bot in ASF several times and you won't get this issue.\n\n2017-08-24 17:00:35|INFO|archi|IsAnythingToFarm() Checking first badge page...\n2017-08-24 17:00:40|INFO|archi|IsAnythingToFarm() Checking other badge pages...\n2017-08-24 17:00:49|INFO|archi|StartFarming() We have a total of 1 games (3 cards) left to idle (~1 hour, 30 minutes remaining)...\n2017-08-24 17:00:49|INFO|archi|Farm() Chosen idling algorithm: Simple\n2017-08-24 17:00:49|INFO|archi|FarmSolo() Now idling: 473740 (Crystal City)\n2017-08-24 17:00:51|INFO|archi|ShouldFarm() Idling status for 473740 (Crystal City): 3 cards remaining\n2017-08-24 17:00:51|INFO|archi|Farm() Still idling: 473740 (Crystal City)\n2017-08-24 17:00:53|INFO|archi|ShouldFarm() Idling status for 473740 (Crystal City): 3 cards remaining\n2017-08-24 17:00:53|INFO|archi|Farm() Still idling: 473740 (Crystal City)\n2017-08-24 17:01:13|INFO|archi|OnLoggedOff() Logged off of Steam: LoggedInElsewhere\n2017-08-24 17:01:13|INFO|archi|OnDisconnected() Disconnected from Steam!\n2017-08-24 17:01:13|INFO|archi|OnDisconnected() Reconnecting...\n2017-08-24 17:01:13|INFO|archi|Farm() Stopped idling: 473740 (Crystal City)\n2017-08-24 17:01:13|INFO|archi|Connect() Connecting...\n2017-08-24 17:01:13|INFO|archi|OnConnected() Connected to Steam!\n2017-08-24 17:01:13|INFO|archi|OnConnected() Logging in...\n2017-08-24 17:01:14|INFO|archi|OnLoggedOn() Successfully logged on!\n2017-08-24 17:01:14|INFO|archi|Init() Logging in to ISteamUserAuth...\n2017-08-24 17:01:14|INFO|archi|CheckOccupationStatus() Account is currently being used: ASF will resume idling when it's free...\n2017-08-24 17:01:14|INFO|archi|StopFarming() Idling stopped!\n2017-08-24 17:01:14|INFO|archi|Init() Success!\n2017-08-24 17:01:29|INFO|archi|CheckOccupationStatus() Account is no longer occupied: idling process resumed!\n2017-08-24 17:01:29|INFO|archi|IsAnythingToFarm() Checking first badge page...\n2017-08-24 17:01:35|INFO|archi|IsAnythingToFarm() Checking other badge pages...\n2017-08-24 17:01:42|INFO|archi|StartFarming() We have a total of 1 games (3 cards) left to idle (~1 hour, 30 minutes remaining)...\n2017-08-24 17:01:42|INFO|archi|Farm() Chosen idling algorithm: Simple\n2017-08-24 17:01:43|INFO|archi|FarmSolo() Now idling: 473740 (Crystal City). Exactly what it says - you have another ASF, bot, script or something else trying to log in on that account at the same time as your affected ASF instance.. Then tell me why my ASF is working properly when doing your reproduced steps.. Although I might have an idea why, going to check regardless.. Like I guessed it has to do with GamesPlayedWhileIdle.. It's good that you reported this issue, I found the other one while fixing it, so 3.0.1.9 is on its way. Thanks!. Of course it doesn't, because you're telling every bot to redeem the same key.. If you understood what the command you're using doing, then you'd not ask. I suggest to read wiki in this case, and start from something easy such as !version bot and !version ASF, maybe then you'll understand.. I'm sorry that ASF GitHub is not the proper place to explain to you why you're using ASF wrong.\n\nPlease review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\nWhat you're trying to achieve is already possible if you only cared enough to read or ask in appropriate place if you have issues despite of reading instead of not only suggesting invalid thing, but even showing inside the issue that you clearly have no idea what you're doing if you're asking why every bot is trying to redeem the same key if you've just told ASF to do that in the command.. https://github.com/dotnet/cli/issues/3267. That's not ASF bug, for technical support you should reach other channels.. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ\n\nQ: Can ASF automatically idle each game for X hours before cards are added?\nA: No, the whole point of Steam cards system change was to fight with false statistics and ghost players. ASF won't contribute towards that more than necessary, adding such feature is not planned and won't happen.\n\nThis considers farming playtime in advance for not only your own games, but any shared games as well.. This is upstream NLog issue that is apparently already fixed, thanks for report.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: not a bug, explained in the FAQ.. This is already possible through disabling statistics.. i386 architecture is dropped, for the same reason there is no win-x86 OS-specific package. x86 architecture is obsolete since at least 13 years and it was intentional behaviour to not support it right away.\nHowever, as @Ryzhehvost pointed out above, you can still run ASF in generic variant if there is .NET Core runtime for your platform. This goes regardless of what ASF decides to build OS-specific package for. If there is .NET Core runtime for your toaster, your toaster can run ASF too.\nWhether there is .NET Core runtime for i386 linux or not, is entirely out of ASF interest though. I know that .NET Core guys are working on this (like @CHT5 pointed out above), but even if they release it officially, don't expect OS-specific package anyway, as I decided to not support this platform.\nI don't know what hardware you have there, but all CPUs from 2004 year onwards support 64-bit, so you might want to re-evaluate this. There is a reason why more and more linux distros are dropping support for i386.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Before linking (B)   After linking (B)    Size decrease\n-----------                                                  -----------          -----------          -----------\nTotal size of assemblies                                     51\u00a0860\u00a0680           24\u00a0464\u00a0584           52,83%\n-----------                                                  -----------          -----------          -----------\nArchiSteamFarm.dll                                           747\u00a0008              745\u00a0472              0,21%\nHtmlAgilityPack.dll                                          137\u00a0216              137\u00a0216              0,00%\nHumanizer.dll                                                212\u00a0008              212\u00a0008              0,00%\nHumanizer.resources.dll                                      15\u00a0400               15\u00a0400               0,00%\nMicrosoft.Extensions.PlatformAbstractions.dll                16\u00a0384               16\u00a0384               0,00%\nMono.Posix.NETStandard.dll                                   182\u00a0272              182\u00a0272              0,00%\nNewtonsoft.Json.dll                                          639\u00a0488              639\u00a0488              0,00%\nNLog.dll                                                     433\u00a0664              433\u00a0664              0,00%\nprotobuf-net.dll                                             192\u00a0000              192\u00a0000              0,00%\nMicrosoft.CSharp.dll                                         1\u00a0098\u00a0240            393\u00a0728              64,15%\nMicrosoft.VisualBasic.dll                                    461\u00a0312              0                    100,00%\nMicrosoft.Win32.Primitives.dll                               8\u00a0192                4\u00a0096                50,00%\nMicrosoft.Win32.Registry.dll                                 51\u00a0712               0                    100,00%\nSOS.NETCore.dll                                              45\u00a0568               0                    100,00%\nSystem.AppContext.dll                                        4\u00a0608                2\u00a0560                44,44%\nSystem.Buffers.dll                                           4\u00a0608                2\u00a0560                44,44%\nSystem.Collections.Concurrent.dll                            200\u00a0192              31\u00a0744               84,14%\nSystem.Collections.Immutable.dll                             650\u00a0240              0                    100,00%\nSystem.Collections.NonGeneric.dll                            87\u00a0552               24\u00a0576               71,93%\nSystem.Collections.Specialized.dll                           79\u00a0872               15\u00a0872               80,13%\nSystem.Collections.dll                                       324\u00a0608              33\u00a0280               89,75%\nSystem.ComponentModel.Annotations.dll                        140\u00a0288              0                    100,00%\nSystem.ComponentModel.Composition.dll                        4\u00a0096                0                    100,00%\nSystem.ComponentModel.DataAnnotations.dll                    5\u00a0632                0                    100,00%\nSystem.ComponentModel.EventBasedAsync.dll                    25\u00a0088               0                    100,00%\nSystem.ComponentModel.Primitives.dll                         40\u00a0448               8\u00a0704                78,48%\nSystem.ComponentModel.TypeConverter.dll                      665\u00a0600              67\u00a0584               89,85%\nSystem.ComponentModel.dll                                    6\u00a0144                3\u00a0072                50,00%\nSystem.Configuration.dll                                     8\u00a0192                0                    100,00%\nSystem.Console.dll                                           181\u00a0760              56\u00a0832               68,73%\nSystem.Core.dll                                              11\u00a0264               0                    100,00%\nSystem.Data.Common.dll                                       2\u00a0832\u00a0384            68\u00a0608               97,58%\nSystem.Data.dll                                              11\u00a0776               0                    100,00%\nSystem.Diagnostics.Contracts.dll                             5\u00a0120                3\u00a0072                40,00%\nSystem.Diagnostics.Debug.dll                                 9\u00a0728                3\u00a0072                68,42%\nSystem.Diagnostics.DiagnosticSource.dll                      56\u00a0832               20\u00a0992               63,06%\nSystem.Diagnostics.FileVersionInfo.dll                       27\u00a0648               0                    100,00%\nSystem.Diagnostics.Process.dll                               176\u00a0128              49\u00a0152               72,09%\nSystem.Diagnostics.StackTrace.dll                            23\u00a0040               3\u00a0072                86,67%\nSystem.Diagnostics.TextWriterTraceListener.dll               22\u00a0016               0                    100,00%\nSystem.Diagnostics.Tools.dll                                 6\u00a0144                3\u00a0072                50,00%\nSystem.Diagnostics.TraceSource.dll                           114\u00a0176              17\u00a0408               84,75%\nSystem.Diagnostics.Tracing.dll                               11\u00a0264               3\u00a0584                68,18%\nSystem.Drawing.Primitives.dll                                85\u00a0504               19\u00a0968               76,65%\nSystem.Drawing.dll                                           4\u00a0608                0                    100,00%\nSystem.Dynamic.Runtime.dll                                   5\u00a0632                3\u00a0584                36,36%\nSystem.Globalization.Calendars.dll                           5\u00a0120                0                    100,00%\nSystem.Globalization.Extensions.dll                          5\u00a0632                0                    100,00%\nSystem.Globalization.dll                                     5\u00a0120                3\u00a0072                40,00%\nSystem.IO.Compression.FileSystem.dll                         4\u00a0096                0                    100,00%\nSystem.IO.Compression.ZipFile.dll                            24\u00a0064               4\u00a0608                80,85%\nSystem.IO.Compression.dll                                    256\u00a0000              104\u00a0448              59,20%\nSystem.IO.FileSystem.AccessControl.dll                       18\u00a0944               0                    100,00%\nSystem.IO.FileSystem.DriveInfo.dll                           48\u00a0640               0                    100,00%\nSystem.IO.FileSystem.Primitives.dll                          4\u00a0608                3\u00a0072                33,33%\nSystem.IO.FileSystem.Watcher.dll                             76\u00a0288               30\u00a0720               59,73%\nSystem.IO.FileSystem.dll                                     179\u00a0712              52\u00a0736               70,66%\nSystem.IO.IsolatedStorage.dll                                67\u00a0584               0                    100,00%\nSystem.IO.MemoryMappedFiles.dll                              56\u00a0832               0                    100,00%\nSystem.IO.Pipes.dll                                          104\u00a0960              0                    100,00%\nSystem.IO.UnmanagedMemoryStream.dll                          4\u00a0608                0                    100,00%\nSystem.IO.dll                                                5\u00a0120                3\u00a0072                40,00%\nSystem.Linq.Expressions.dll                                  1\u00a0613\u00a0312            456\u00a0192              71,72%\nSystem.Linq.Parallel.dll                                     1\u00a0309\u00a0696            61\u00a0952               95,27%\nSystem.Linq.Queryable.dll                                    164\u00a0864              0                    100,00%\nSystem.Linq.dll                                              420\u00a0864              69\u00a0632               83,45%\nSystem.Net.Http.dll                                          700\u00a0928              208\u00a0896              70,20%\nSystem.Net.HttpListener.dll                                  361\u00a0984              88\u00a0576               75,53%\nSystem.Net.Mail.dll                                          469\u00a0504              0                    100,00%\nSystem.Net.NameResolution.dll                                70\u00a0656               28\u00a0672               59,42%\nSystem.Net.NetworkInformation.dll                            142\u00a0336              22\u00a0528               84,17%\nSystem.Net.Ping.dll                                          87\u00a0552               0                    100,00%\nSystem.Net.Primitives.dll                                    190\u00a0976              66\u00a0560               65,15%\nSystem.Net.Requests.dll                                      335\u00a0360              101\u00a0888              69,62%\nSystem.Net.Security.dll                                      418\u00a0304              121\u00a0856              70,87%\nSystem.Net.ServicePoint.dll                                  23\u00a0552               5\u00a0632                76,09%\nSystem.Net.Sockets.dll                                       542\u00a0720              134\u00a0144              75,28%\nSystem.Net.WebClient.dll                                     148\u00a0992              0                    100,00%\nSystem.Net.WebHeaderCollection.dll                           50\u00a0688               19\u00a0456               61,62%\nSystem.Net.WebProxy.dll                                      16\u00a0896               0                    100,00%\nSystem.Net.WebSockets.Client.dll                             141\u00a0312              50\u00a0688               64,13%\nSystem.Net.WebSockets.dll                                    25\u00a0088               11\u00a0264               55,10%\nSystem.Net.dll                                               6\u00a0144                0                    100,00%\nSystem.Numerics.Vectors.dll                                  231\u00a0424              27\u00a0136               88,27%\nSystem.Numerics.dll                                          4\u00a0096                0                    100,00%\nSystem.ObjectModel.dll                                       75\u00a0776               22\u00a0528               70,27%\nSystem.Private.DataContractSerialization.dll                 2\u00a0014\u00a0720            0                    100,00%\nSystem.Private.Uri.dll                                       231\u00a0936              77\u00a0824               66,45%\nSystem.Private.Xml.Linq.dll                                  369\u00a0664              37\u00a0376               89,89%\nSystem.Private.Xml.dll                                       8\u00a0108\u00a0032            1\u00a0096\u00a0192            86,48%\nSystem.Reflection.DispatchProxy.dll                          58\u00a0368               0                    100,00%\nSystem.Reflection.Emit.ILGeneration.dll                      5\u00a0120                3\u00a0072                40,00%\nSystem.Reflection.Emit.Lightweight.dll                       4\u00a0608                2\u00a0560                44,44%\nSystem.Reflection.Emit.dll                                   5\u00a0120                3\u00a0072                40,00%\nSystem.Reflection.Extensions.dll                             4\u00a0608                2\u00a0560                44,44%\nSystem.Reflection.Metadata.dll                               1\u00a0060\u00a0864            0                    100,00%\nSystem.Reflection.Primitives.dll                             5\u00a0120                3\u00a0072                40,00%\nSystem.Reflection.TypeExtensions.dll                         19\u00a0456               5\u00a0120                73,68%\nSystem.Reflection.dll                                        5\u00a0632                3\u00a0584                36,36%\nSystem.Resources.Reader.dll                                  4\u00a0608                0                    100,00%\nSystem.Resources.ResourceManager.dll                         5\u00a0120                3\u00a0072                40,00%\nSystem.Resources.Writer.dll                                  33\u00a0280               0                    100,00%\nSystem.Runtime.CompilerServices.VisualC.dll                  7\u00a0168                0                    100,00%\nSystem.Runtime.Extensions.dll                                478\u00a0208              89\u00a0600               81,26%\nSystem.Runtime.Handles.dll                                   4\u00a0608                3\u00a0072                33,33%\nSystem.Runtime.InteropServices.RuntimeInformation.dll        14\u00a0848               5\u00a0632                62,07%\nSystem.Runtime.InteropServices.WindowsRuntime.dll            12\u00a0800               0                    100,00%\nSystem.Runtime.InteropServices.dll                           34\u00a0304               6\u00a0656                80,60%\nSystem.Runtime.Loader.dll                                    4\u00a0608                2\u00a0560                44,44%\nSystem.Runtime.Numerics.dll                                  165\u00a0888              35\u00a0328               78,70%\nSystem.Runtime.Serialization.Formatters.dll                  285\u00a0184              12\u00a0288               95,69%\nSystem.Runtime.Serialization.Json.dll                        5\u00a0120                0                    100,00%\nSystem.Runtime.Serialization.Primitives.dll                  16\u00a0896               5\u00a0632                66,67%\nSystem.Runtime.Serialization.Xml.dll                         6\u00a0144                0                    100,00%\nSystem.Runtime.Serialization.dll                             5\u00a0632                0                    100,00%\nSystem.Runtime.dll                                           38\u00a0912               27\u00a0136               30,26%\nSystem.Security.AccessControl.dll                            56\u00a0320               12\u00a0288               78,18%\nSystem.Security.Claims.dll                                   82\u00a0432               13\u00a0312               83,85%\nSystem.Security.Cryptography.Algorithms.dll                  262\u00a0144              37\u00a0888               85,55%\nSystem.Security.Cryptography.Cng.dll                         44\u00a0032               0                    100,00%\nSystem.Security.Cryptography.Csp.dll                         92\u00a0672               9\u00a0216                90,06%\nSystem.Security.Cryptography.Encoding.dll                    61\u00a0952               23\u00a0040               62,81%\nSystem.Security.Cryptography.OpenSsl.dll                     88\u00a0064               18\u00a0944               78,49%\nSystem.Security.Cryptography.Primitives.dll                  70\u00a0144               28\u00a0160               59,85%\nSystem.Security.Cryptography.X509Certificates.dll            434\u00a0688              126\u00a0464              70,91%\nSystem.Security.Principal.Windows.dll                        28\u00a0672               7\u00a0680                73,21%\nSystem.Security.Principal.dll                                5\u00a0120                3\u00a0072                40,00%\nSystem.Security.SecureString.dll                             4\u00a0608                0                    100,00%\nSystem.Security.dll                                          6\u00a0656                0                    100,00%\nSystem.ServiceModel.Web.dll                                  4\u00a0096                0                    100,00%\nSystem.ServiceProcess.dll                                    4\u00a0096                0                    100,00%\nSystem.Text.Encoding.Extensions.dll                          4\u00a0608                3\u00a0072                33,33%\nSystem.Text.Encoding.dll                                     5\u00a0120                3\u00a0072                40,00%\nSystem.Text.RegularExpressions.dll                           269\u00a0312              95\u00a0744               64,45%\nSystem.Threading.Overlapped.dll                              6\u00a0144                4\u00a0096                33,33%\nSystem.Threading.Tasks.Dataflow.dll                          478\u00a0720              0                    100,00%\nSystem.Threading.Tasks.Extensions.dll                        18\u00a0432               0                    100,00%\nSystem.Threading.Tasks.Parallel.dll                          98\u00a0304               0                    100,00%\nSystem.Threading.Tasks.dll                                   5\u00a0632                3\u00a0584                36,36%\nSystem.Threading.Thread.dll                                  31\u00a0232               7\u00a0168                77,05%\nSystem.Threading.ThreadPool.dll                              4\u00a0608                2\u00a0560                44,44%\nSystem.Threading.Timer.dll                                   4\u00a0608                2\u00a0560                44,44%\nSystem.Threading.dll                                         67\u00a0072               16\u00a0896               74,81%\nSystem.Transactions.Local.dll                                340\u00a0480              0                    100,00%\nSystem.Transactions.dll                                      5\u00a0120                0                    100,00%\nSystem.ValueTuple.dll                                        5\u00a0632                0                    100,00%\nSystem.Web.HttpUtility.dll                                   34\u00a0816               0                    100,00%\nSystem.Web.dll                                               4\u00a0096                0                    100,00%\nSystem.Windows.dll                                           4\u00a0608                0                    100,00%\nSystem.Xml.Linq.dll                                          4\u00a0608                0                    100,00%\nSystem.Xml.ReaderWriter.dll                                  11\u00a0776               8\u00a0192                30,43%\nSystem.Xml.Serialization.dll                                 5\u00a0120                0                    100,00%\nSystem.Xml.XDocument.dll                                     5\u00a0120                3\u00a0072                40,00%\nSystem.Xml.XPath.XDocument.dll                               6\u00a0656                0                    100,00%\nSystem.Xml.XPath.dll                                         5\u00a0120                3\u00a0072                40,00%\nSystem.Xml.XmlDocument.dll                                   5\u00a0632                3\u00a0584                36,36%\nSystem.Xml.XmlSerializer.dll                                 7\u00a0680                3\u00a0072                60,00%\nSystem.Xml.dll                                               13\u00a0312               0                    100,00%\nSystem.dll                                                   41\u00a0472               0                    100,00%\nWindowsBase.dll                                              4\u00a0608                0                    100,00%\nmscorlib.dll                                                 47\u00a0104               34\u00a0304               27,17%\nnetstandard.dll                                              96\u00a0768               50\u00a0688               47,62%\nSystem.Private.CoreLib.dll                                   10\u00a0742\u00a0784           10\u00a0742\u00a0784           0,00%\nSteamKit2.dll                                                5\u00a0888\u00a0000            5\u00a0888\u00a0000            0,00%\nSystem.Security.Cryptography.ProtectedData.dll               24\u00a0880               24\u00a0880               0,00%\nSystem.Threading.AccessControl.dll                           26\u00a0008               26\u00a0008               0,00%\nSystem.Xml.XPath.XmlDocument.dll                             118\u00a0680              118\u00a0680              0,00%. Thanks for report, fixed in 3.0.2.2.. Log?. Doesn't matter if program displays anything or not, log.txt is always being written.. In this case it's technical issue and not ASF bug, therefore it doesn't belong to GitHub.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. I don't understand your issue at all, and you didn't decide to use template either so we now need to waste extra time for you to provide one.\n\nConfig, log and actual/expected behaviour at minimum - including a definition whether you're referring to config or ASF sending data to Steam servers.. It did because you supplied invalid JSON configuration file, this is not a bug. It's clearly stated that you should validate your JSON if you're editing it manually.. I think this should be already fixed with https://github.com/JustArchi/ArchiSteamFarm/commit/d4684d123a08874b49eef678a80595c24668311c, can you check latest AppVeyor build?. Feel free to verify if 3.0.2.4 works better, it should give just one message about file being changed (or created, depending what happened last).. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Steam not answering to ASF is not ASF bug.. Thanks for report \ud83d\udc4d.. It'd be good idea to verify with V3.0.2.4 if I didn't break anything while rewriting the function to fit this.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. Start from enabling Debug mode and showing what ASF stumbles upon in general log when this issue happens.\nAlso you'll need to do research and check after what period of time the captcha disappears.. Also note to self: since this issue seems to be hitting only /my/inventory and not API or other general ASF functionality, I believe we could decrease likehood of issues by switching to new inventory endpoint - https://www.reddit.com/r/SteamBot/comments/5he94k/psa_there_is_a_new_endpoint_for_fetching_user/.. Yeah but that's not everything, you lack status error code for instance, this is why I'm asking.. Thanks, I'll probably have some test version for you soon.. Check latest AppVeyor build and let me know if situation improved (if you're still hitting the empty inventory error).\nIf the issue still exists, enable debug mode and reproduce the issue once again, thanks.. Then fix yourself because that URL doesn't even exist in the source anymore. Download url looks good, but you probably launched outdated version.. It will automatically update to 3.0.2.6+ according to your UpdateChannel. It won't automatically update to \"final\" 3.0.2.5 though.. As a side note new endpoint is much better even if it doesn't fix rate limiting issue, due to being able to fetch 5000 items at once (compared to old limit of 2000), which results in less overall number of requests. The only remaining question is how rate-limited that endpoint is and if InventoryLimiterDelay will be enough to not stumble upon it.. Take in account Steam quirks and the fact that it never works 100% of time. Question is if your issue of captcha and constant requests failing while Steam is in fact working properly is solved or not - random hiccups are expected regardless of how good ASF is coded.\nSo keep testing and let me know if you stumble upon the same issue in long-run. From your message I assume that situation improved, which is great.. I can't reproduce your issue, besides, you can control inventory requests with InventoryLimiterDelay if they're happening too often.\nAre you sure you don't have other bots and tools that are specifically sending crapload of requests to Steam inventory/community? This doesn't look like a normal thing for me, since ASF asked for just one inventory across last 3 minutes, this is not normal to get rate-limited at this point, I'd receive a dozen of similar bug reports if it was a normal thing for everybody.. No, there is no issue. It's clearly stated on the wiki that there will be crapload of new exceptions that do not mean anything.\nWell, I can add forced cooldown in case of null response, I guess there is not a lot to do besides this.. http://steamcommunity.com/inventory/76561198024968498/753/6?l=english&count=5000. Download latest AppVeyor build once again and reproduce your issue (debug mode not needed).\nASF temporarily outputs all JSONs received by the program, catch the one responsible for inventory is empty error and paste it here together with full log.\nhttps://ci.appveyor.com/project/JustArchi/archisteamfarm/build/4568-master/artifacts. Use officially released 3.0.2.5 if you want to continue bug hunting (once it builds). You should not use AppVeyor builds for anything but confirming fixes, and especially not rolling back to them.. I consider this issue at least improved, if not fixed (due to new endpoint and less requests being sent). If you stumble upon the same problem with 3.0.2.7+ then feel free to open new issue, thanks!. You're not using !redeem command.\n\nRemoved obsolete and undocumented ASF V0 command-less method of redeeming keys.. This is out of the scope of the program.. FAQ.. Because ASF is telling you what is happening, not silently trying to outsmart you and hide from you situations that can be probably safely ignored.\n\nIf you don't want to receive warning log level, then disable it in your ASF logging module.. Out of the scope of ASF. ASF is not wishlist manager tool.. Personally I like this idea but I'm totally missing the point of this.\nWhy would a guy message one of your alts instead of you directly? This doesn't make any sense, especially if he's aware that it's just your alt and you won't respond if you're online on your main.\nLogging is already available, so that one is out of the suggestion.. All of that is fine but I still don't get it why you won't add those people on your main if you're interested in talking to them, or at least getting information when they're messaging you. Enhancement itself is alright, but I often search for practical use case, as in current situation I'd just say \"tweak your logging module to inform you when somebody messages the bot you want to monitor\".. I've decided to close this as it's on the edge of ASF scope, and currently available solutions - mainly logging module that you can already tweak in a way to send you notification, can already achieve your original intention.\nI want to keep ASF sending messages only to people defined in SteamUserPermissions.. Thanks for your contribution! \ud83d\udc4d . > Removed obsolete and undocumented ASF V0 command-less method of redeeming keys.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. ConfigGenerator was never generating encrypted passwords, it's explained in the security wiki section how to encrypt it properly.. > even though it's clearly a bad trade\nNo, bad trade is determined by your inventory state, this trade absolutely has no premise of being bad by trading 3 of your unique cards for 3 identical ones.\n\nSteps to reproduce\nUnfortunately no idea how to do so, but I'll be glad if you double-check trading logic.\n\nTrade logic is already tested in each release and until you can bring out a reproducible case following with ASF log that I can reliably reproduce, I'm marking this as can't reproduce and closing the issue, since I don't believe ASF could accept such trade if it was indeed a bad one. Probably you had other cards in your inventory, or ASF was not the one that actually accepted that trade.\nI'm receiving a lot of different offers, some are clearly STM like, some are neutral from my friends that want to help themselves finish their sets, and some are clearly bad trying to make use of the fact that I'm listed on ASF STM listing. In all of those cases ASF acted appropriately for me, never denied the right trade, never allowed clearly a bad one. And I do check it a lot as it's very important that my logic works the way I want to.\nLet me know once you have something that we can actually verify. I double-checked the code and there is no sign of any possible issue, not to mention that this code didn't change since quite a while. Since I'm not able to do anything with it, and I don't actually believe in this (you probably had overflow of those 3 unique cards and underflow of your 3 identical ones), I'm closing it.. BTW, I've just asked my friend to send me similar trade and it got ignored properly, so yeah, at this point I'm 99% sure you're totally ignoring state of your inventory during trade and you make an assumption based on trade items alone, which is wrong and not how ASF works.. Then get those 3 you've lost, send your 3 dupes to one of your friends and ask him to trade them with you, in the same way how that guy did it. This time reproducing it with proper log, and ensuring your friend is not master/owner of the ASF or a bot in the process, because in this case obviously ASF will auto-accept this trade without even looking inside inventory.. Then reproduce this with any other game, any other scenario, or anything we can actually verify and look into - you're reporting the bug, you're in charge of making reproducible case \ud83d\ude42.. I think I actually reproduced your case, although it's very unlikely to happen which is probably why I didn't stumble upon this previously, investigating.. Thanks for report, the test that was previously missing and failing with the old code was SingleGameQuantityBadReject and involved a very rare situation of receiving multiple same cards when you didn't have even one of those before. This incorrectly mapped 1, 2, 3 <-> 4x3 trade into the same as if it was 1, 2, 3 <-> 4, 5, 6.\nFix is already applied, test for your edge case added (so it never happens again) and ASF 3.0.3.0 on its way.. Compressed size of all the language files is around 560 KB, which doesn't come even close to the overall size of 30 MB in OS-specific variant, and around 2.80 MB in generic variant, where localization is less than 20% of entire archive.\nMaking your solution possible would also mean making it even more complicated to install and use ASF, as now user would also need to explicitly download his native language files instead of just running a binary. +400 folders argument is invalid as this has no implications neither to performance nor actual usage, as it's the standard pattern that all localized programs are following, with Steam, .NET Core and Windows being prime examples.\nIn short, you didn't provide any counter-argument for cauing extra hassle not only for me to develop such feature (as that can be often skipped when discussing enhancement), but also for people to manually download your locale on each update, only because you don't want to see them. Like it's impossible to create shortcuts to ASF binary and config directory in some folder above.\nI'm firmly denying this suggestion.. @Indexyz I've done general cleanup to CG source after your PR #674, here is a summary:\n- I've decided that label property should always match ASF config property name as stated on the wiki. This will make it easier for users to read documentation.\n- If we want to add translated help for given property, it should be done with description of it, this way user can have both - name of the property as stated in documentation, and friendly short description of that property in his own language. I like this approach.\n- All translations are now hooked into Crowdin, I also rewrote some English strings to sound better. Please visit our localization section if you'd like to add zh-CN strings (or just wait and community will handle it sooner or later anyway \ud83d\udc4d)\n- It's no longer needed to handle anything else than xx-zz format, since Crowdin will always export files in this one.\nWhat is the most important thing is the fact that for maximum Crowdin integration we must add extra handling for strings exported by the platform, as currently it'll probably show as empty.\nWhat I mean is, we have a file like this one:\n{\n    \"app.name\": \"ASF Config Generator\",\n    \"button.advanced\": \"Toggle advanced settings\",\n    \"button.download\": \"Download\"\n}\nCrowdin skips untranslated strings, so the zh-CN.json untranslated file will initially be exported like this:\n{\n    \"app.name\": \"\",\n    \"button.advanced\": \"\",\n    \"button.download\": \"\"\n}\nCould we add some way to handle that and fallback to original version of given string if it's empty? This is kinda priority for now as otherwise I'll need to manually delete languages that are not translated fully.\nThank you in advance if you could take a further look and help solve at least this one issue. If you have extra energy you can also take a look at other tasks that are listed above. I like a lot how we can localize also ConfigGenerator, it just needs a few more fixes to make it fully automated and powered by the community. In any case, thanks a lot for your help! \ud83d\udc4d. No need to hurry, it's perfectly fine! Take your time, I'm already grateful you've decided to work on this \ud83d\ude42. Thank you!. Another note: it'd be wise to check why only IE works with current code, I can't get my Polish language to work on neither Chrome nor Firefox.. Then we should find a correct behaviour to map this to pl-PL. Maybe there is some other way to get it from the browser, perhaps @Aareksio can help us with that :).\nWhile I could use 2-letter code and simply export pl from Crowdin, this will not be correct behaviour as there are languages that are NOT the same and we need to handle them differently. Your own zh-CN and zh-TW is the best example here, since our Crowdin platform translates both and if we sticked with 2-letter only then you'd have a conflict. This is also why you can't use any smart guess, because zh given to you by browser does not specify whether it's zh-CN or zh-TW.\nIn other words, we should make it work with xx-ZZ locale code, I'm sure there is a way to do this, I'm just not experienced enough in this to point out what is the correct way. @Aareksio will \ud83d\ude00. Looks good to me, although I'd add only one more logic line - before point 1 and 2. If we're given xx code and xx-XX exists, then use xx-XX. Otherwise use xx-*. This is because you might have de-AT and de-DE. If browser returns generic de then we should map it to \"original\" german, which is de-DE and not de-AT which would be the first otherwise. When we don't have such generic mapping (e.g. there is no zh-ZH), then we'll just use first possible match like your point 2 and below (zh-CN in this case).\nThis is the best that comes to my mind for now. And I can't notice any situation in which such mapping would be wrong. It'll be wrong only if we include 2 or more variants of one language and browser returns generic one to us, but in this case we lack the info of choosing proper one, so there is nothing to fix but just a guess.\n\nIf browser gives language tag found in languages, use the language file.\nIf the language is without country code, such as xx, try to load xx-XX if possible.\nIf the language is without country code, such as xx and our load of xx-XX above didn't work, try to fuzzy match the country code (load first xx-*).\nOtherwise use the default language. Issue moved to https://github.com/JustArchiNET/ASF-WebConfigGenerator/issues. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. I've never created a docker image before, but I like this idea, I'll see what can be done about it \ud83d\udc4d.. I pushed first experimental automated build to my docker repo - https://hub.docker.com/r/justarchi/archisteamfarm/tags/\n\nLet me know if it works and if you have any suggestions how to further improve it. There will be 3 kind of tags - \"master\" tag that will work as current experimental AppVeyor build, \"latest\" tag that will point to latest release (including pre-releases), and a tag for every specific released version. For now there is only master, latest will happen since ASF V3.0.3.2, once I'm sure Docker build works the way we want it to work.\nI also added wiki entry - https://github.com/JustArchi/ArchiSteamFarm/wiki/Docker. You're using pre-release version that has its own issues. And for headless mode you can use !input.. You can't, latest stable is 3.0.3.0, and that one doesn't have docker support that was added in 3.0.3.2. I've pushed 3.0.3.3 though that addresses #665, my CIs should be already building it so just wait for it to arrive - https://hub.docker.com/r/justarchi/archisteamfarm/builds/. Well, yeah, pre-release is not stable 100% of time \ud83d\ude09.\nAlthough docker builds starting with 3.0.3.5 are stable enough to me, I only need to test if auto-updates in latest tag work properly, but that won't happen before 3.0.3.6. https://github.com/JustArchi/ArchiSteamFarm/wiki/Docker. ASF schedules badges page refresh on each license being added to the account. Number of outstanding parsing tasks can never exceed two though - one already working, and second one in the queue. This works completely independent of what you do with ASF commands, steam client, steam web, or your hamster. Thanks to this mechanism ASF can schedule automatic badges parsing the moment you're e.g. redeeming new game via steam browser.\nIf all your IDs were redeemed at once, there would be one task. If all your IDs were redeemed across 1 second, assuming one badge parsing task takes longer than 1 second, there would be a total number of 2 badge refreshes.\nAssuming you're redeeming 50 licenses across 50 seconds with badge parsing task taking 5 seconds, there will be more or less 10 checks, not 50. And this is why there is nothing to fix - ASF already is smart enough to balance number of checks with what is happening. There won't be any extra logic of \"don't parse badges at all when user is executing !addlicense command, because he could've been adding 50 licenses\". If there was a valid game being added in the middle of your !addlicense madness then it'd be skipped at least until end of that command being executed, and that is sub-optimal for performance.\nThis is not a bug and not a valid enhancement, if you don't want to meet with this, then this is what !pause ASF is for.. Log? Reproduction steps? Screenshots?. If you're asking about internal ASF structures then it won't, and for a very good reason. If you're asking about Steam hours played then it does, but not in real-time as stated on the wiki. This is because Steam community doesn't update hours played in real time.\nBut that has nothing to do with your original issue.\n\nAfter automatic farming has started, the !play command doesn't work. Automatic farming doesn't stop and the game requested to !play doesn't idle.. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ\nQ: Can ASF automatically idle each game for X hours before cards are added?\nA: No, the whole point of Steam cards system change was to fight with false statistics and ghost players. ASF won't contribute towards that more than necessary, adding such feature is not planned and won't happen.. Forwarded to https://github.com/SteamRE/SteamKit/issues/464. 3.0.3.3+ should address this but I'm keeping this issue open as the underlying issue should be fixed in SK2 and workaround reverted in ASF.. On what OS you managed to run into this issue? If Windows, what version?. Thanks, I'm investigating this issue with SK2 devs now. 3.0.3.3 should work flawlessly, but it's just a reverted commit for now. Issue will be open until we address it properly.. > 2017-10-07 09:11:32|ArchiSteamFarm-8840|INFO|Farm|IsPlayableGame() L'idling di 384490 (Necropolis) \u00e8 temporaneamente disabilitato, poich\u00e9 ASF non \u00e8 in grado di eseguire questo gioco al momento.. At first I was sceptical to this as I always wanted to keep premise of making config files possible to be read-only and ASF never managing config files by itself, but indeed it could be nice for web-based admin panel.\n\nI'm thinking about API to create new bot config file, remove existing bot config file and edit bot config file, all 3 would accept JSON-serialized BotConfig object. In addition to that we might also add endpoint to edit global ASF config file, that one would accept GlobalConfig object.\nYeah, I like this way, on the wishlist.. It's a good moment now to evaluate if I want to keep this awful low-level HTTP interface I wrote by myself in V3 or move to some general framework that would make it easier to maintain our HTTP API. An obvious candidate for that is something like EntityFramework but I hate how huge it is and how many dependencies it has just for a simple way to create a web server, that's definitely out.\nIf somebody has some C# package in mind that could help us with creating HTTP API then feel free to suggest one, I'll probably evaluate myself available solutions and decide upon something in upcoming week.. This might be exactly what we need, thanks!. https://github.com/JustArchi/ArchiSteamFarm/wiki/IPC\nHave fun \ud83d\ude42 . https://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nPull requests are a bit different compared to issues, as in PR you're asking us to review the code and accept it, unless we have a reason against it. Very often we won't have enough arguments to accept given suggestion and code something, but we also won't have enough arguments against given suggestion, which makes it possible for you to code it yourself, then send a PR for review, and hopefully include your feature in ASF, even if we wouldn't code it otherwise.\n(...)\nIn general any pull request is welcome and should be accepted, unless there is a strong reason against it. A strong reason includes mainly only things we directly do not agree with, such as features that are against Steam ToS (like explained above), greatly against ASF scope, or likewise.\n\nI don't see how such functionality is greatly against ASF scope considering basic bots management is inside ASF scope as well. I've never ever rejected a single ASF PR yet, and I hope to keep it this way. Sure, ASF reminder to feed your cat is not necessarily going to be accepted, but I don't see how this is going greatly out of ASF scope, considering we have all needed tools to achieve this already.\nAlthough it'd be better if you coded it as !transfer^ command or likewise, as it's advanced transfer, just like !redeem^ is advanced redeem.. Closed due to inactivity.. Once docker hub finishes building you can test if tag master-arm works properly for you. Other tags will follow later once master is confirmed to work. Docker support for multi-arch images is still work in progress, so I prefer to do that in old-fashioned way for now by adding another set of tags.. You didn't provide full log as stated in contributing section, neither reproduction pattern, so I'm marking it as not a bug until you do. https://github.com/JustArchi/ArchiSteamFarm/wiki/API. That's not in ASF scope, ASF is not a program to make third-party utilities be able to send trades.. > Currently once ArchiSteamFarm is running it will deny any friend request that comes in\nthis is quite an issue because you basically can't use the account for anything social related\nIf you configured ASF to do that, then it will do that.\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration. https://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md#issues\n\nGitHub is NOT technical support - it's a place only for ASF bugs and suggestions. It's not proper place for technical issues, general discussion or questions (unless related to development). Waiting for @Aareksio review \ud83d\udc4d. Thanks for your contribution! I'll try to hook those parts into our crowdin platform for further localization.. What is the issue with passing --user flag to docker run?. It's good to know it works as expected, I'm closing this issue and adding example to the wiki. Thanks!. Done in https://github.com/JustArchi/ArchiSteamFarm/wiki/Docker#volume-permissions. Yep, that can be easily fixed, I just changed the command to docker exec -u root asf chown -hR 1000:1000 /app \ud83d\udc4d . > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. Those localization files are automatically generated, please visit https://github.com/JustArchi/ArchiSteamFarm/wiki/Localization if you'd like to help. Thanks!. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. Works perfectly fine on clean install, I've just checked. I suggest to ensure your installation wasn't screwed up. That variable is declared on top of the file so there is no way it could be unbound later on.. After further investigation this looks like outdated bash issue, I'm opening this issue to remind me to add a workaround for this in 3.0.4.3. I don't consider it a high priority bug since it only affects outdated bash versions. Issue is not possible to reproduce with at least bash 4.4.12 and above.. > Bug: ASF do not recognize or respect previous (deprecated/changed) settings.\nNot a bug -  https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration#compatibility\n\nAlso adding new settings \"example.json\" with offline https://github.com/JustArchi/ArchiSteamFarm/tree/gh-pages/WebConfigGenerator/dist for every update on local files (not HTML Link) would be good like old ASFs used to have offline configuration interface.\n\nYou can already use CG offline if you wish, by downloading dist folder and running index.html. I don't see a need of making it any more explicit.\n\nAs additional request, ASF could check card drops after idling at time mark of 1:59 (or 58) to ensure refund capability stands for those who seek it.\n\nASF checks card drops not only in fixed intervals that are actually anti-fuckup settings, but on each item being dropped event, which is why it does not matter what FarmingDelay you set. You can as well set it to 255 and have a game finished in 2 hours. Refunds logic is possible with IdleRefundableGames and entirely out of the scope of cards farming module.\n\nAlso noticed another thing that if the ASF card farming is to be stopped before all cards drop, some games even after ASF is closed and no other Steam game is running, grant single card drop within :15 time frame after stop. Meaning this can be used in combination of 1:59 mark to ensure refund. Like farm the game up to 1:59 and stop farming but still wait for card drop to happen within set amount of minutes. If last card is granted, finish farming within refundability, if not continue farming as usual.\n\nASF is not a tool for exploiting Steam refunds policy.. As of the actual CardDropsRestricted change I agree that ASF could make use of this and set new HoursUntilCardDrops appropriately, but ASF will never modify user configs automatically, and adding handling for old long-deprecated settings would degrade overall ASF stability and the code itself. I don't consider this change important enough to add special handling, since people would not read ASF warning in the console anyway, same as they don't read changelogs and are acting once something breaks - it does not matter whether it'd break already in 3.0.4.1 or in 3.0.5.9. In fact, I prefer people to act immediately and fix their configs rather than reminding myself what happened 20 versions later and what exactly was modified, not to mention that people might skip several versions and not be aware of the changes at all.\nSo in short - as stated on the wiki, users are expected to read changelogs if they're updating ASF, does not matter if through auto-updates or manually. ASF does not guarantee any compatibility of old deprecated config properties with new versions, and thanks to that program doesn't have to stick with wrong decisions and obsolete settings, and instead can adapt flexibly to the always-changing Steam platform, which is why majority of users are using it in the first place. You're exaggerating an issue that doesn't really exist - if this \"change\" is that important to you then you can simply disable AutoUpdates and keep update notifications only, then read changelogs and upgrade manually (or not). I don't see any problem with it, this is why this setting is available in the first place.. And !input command serves what purpose?. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. Good catch, thanks, you can check if latest AppVeyor build addresses this properly.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. > Please review the guidelines for contributing to this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.. \ud83d\udc4d . \ud83d\udc93 . That's not deadlock - that's ASF getting unexpected and unhandled error code, which properly shuts down the bot to make you report it and add missing logic, since ASF does not know at this point what to do with it.\n\nFirst step is making me reproduce this bug, because as you already guessed yourself, you're the first person getting and reporting it.\n\nAre you trying to use the same account in more than one ASF instance, or you're using some third-party badly coded tool that uses the same LoginID of 1242?\nIs your affected account using SteamPassword of null or empty?\nAre you using ASF 2FA?\nWhat did you do to run into this bug?\n\n\nIf you followed bug issue scheme then I'd already know answer to at least two of those questions \ud83d\ude15. No, ASF should not restart itself when unexpected scenario happens - that should be reported and corrected so it never happens again. We're not writing spaghetti code here to have a need of restarting the program because we can't fix the underlying issue and we have no clue what is broken.\n\nIt also does not matter whether machine is running ASF alone or not, what matters is other activity on the same account in different sessions. This is the only case that can even create such issue in the first place.\nReproduce your issue with Debug mode enabled, pack entire debug directory together with log.txt to a zip file and send on my e-mail: JustArchi[at]JustArchi[dot]net. Remember to read the wiki regarding Debug option, as it records potentially sensitive information.. I decided to patch it for now with just another retry attempt, but I'm pretty sure we're missing some important detail here how that error code is being generated and used.. What did you expect? It's stated quite clearly in the wiki that it's not normal mode for operation \ud83d\ude42. > Please review the guidelines for contributing to this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue, please close my issue immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. Thanks for report \ud83d\udc4d . ASF will continue checking the trade if its state is deemed as temporarily rejected, e.g. because it matches STM rules but it's not neutral+ at the moment. This is because that trade might get neutral+ in the future according to your inventory changes. Trades that are deemed as permanently rejected will be added to ignore list.\nNot a bug.. No, the problem is that you enabled SteamTradeMatcher but didn't read trading section:\n\nIt's highly recommended to use ASF 2FA when you enable this option, as this function loses its whole potential if you decide to manually confirm every trade. SteamTradeMatcher will work properly even without ability to confirm trades, but manually confirming everything defeats the whole purpose of this option.\n\nI only re-worded it a bit to be even more explicit:\n\nIt's highly recommended to use ASF 2FA when you enable this option, as this function loses its whole potential if you decide to manually confirm every trade. SteamTradeMatcher will work properly even without ability to confirm trades, but it might generate backlog of confirmations if you're not accepting them in time.. And in other words - ASF has no ability to check if the trade that it accepted actually arrived in a confirmation or not when not using ASF 2FA. Because we're working with unreliable and crappy Steam network here, trading module must assume that if you're not using ASF 2FA and something didn't get confirmed/rejected, then it means that this confirmation didn't arrive in the first place. This is wanted scenario in order to fight with massive amount of issues that are related to trading module in general.\n\nYou have several possibilities here. You might accept those confirmations in time, since ASF trading module evaluates trades only when new one arrives, so a confirmation for a single trade won't be generated more often than once per new trade offer arrival. Second option is simply importing your authenticator as ASF 2FA and using it - you have security that ASF 2FA includes of accepting only confirmations generated by ASF, and nothing else, so even if somebody would take over your account, ASF 2FA would not accept a confirmation of sending your entire inventory to somebody else, you can verify it yourself. Last solution, and probably the worst one is setting up WinAuth or other SDA to auto-accept everything each minute - this no longer offers security that ASF 2FA offers, and is far worse solution due to polling mechanism done every minute, as opposed to ASF 2FA that fetches and accepts its own confirmations only when it knows that they're generated e.g. by trading module. Definitely inferior solution compared to ASF 2FA, but a solution nonetheless.\nChoice is up to you. I don't see any issue with current ASF mechanism - you're intentionally limiting ASF to lack of data.. > I'm not receiving new trades. You can see from the log that the same trade is evaluated (and accepted) only a bunch of second the last evaluation of the same trade.\nThat doesn't matter either since it's Steam Network sending to ASF a notification about new trade offers arriving, therefore scheduling trade offers parse afterwards. IIRC this notification is also sent when state of some pending offer changes, but it doesn't matter at all, since there is no way to limit this notification to new trade offers only, neither influence when Steam Network has no idea what it's doing and sending ASF fake notifications.\nI prefer instant ASF response to new arriving trades rather than artificial and stupid limit of parsing trades only once per minute, so that won't be changed either. Solutions are limited to what we can do in terms of Steam Network, and solution to this problem is using ASF 2FA, unless you have better programming experience than I do and you can come up with a solution that I'm not aware of.. I don't like to force anybody into using ASF 2FA, because it's as optional as I could make it possible, but in this case there is simply no way for ASF to know whether confirmation arrived but wasn't dealt with yet, or didn't arrive at all (Steam Network screwup). I prefer to let ASF accept that trade and generate potentially unwanted extra confirmation in each parsing batch, rather than believing Steam that the confirmation arrived only because trade got accepted with 200 OK status. Having 4 out of 7 confirmations for one trade is better than having 0 out of 1.\nSo sadly, yes, if you want to get rid of this issue then you must either accept in timely fashion, or use ASF 2FA, since ASF can't know the actual state otherwise, neither can take care of that confirmation for you.. While multiple evaluations of the same offer is not a bug itself, notification and scheduled parsing I mentioned in https://github.com/JustArchi/ArchiSteamFarm/issues/697#issuecomment-344960894 is, so I took a look and corrected it in https://github.com/JustArchi/ArchiSteamFarm/commit/2d767c41aacb33dda35a98fa4b41efb7d33f5ffe - thanks for report.. Application developer currently has no say in generated app's published structure. What you're asking for is impossible with existing dotnet tooling.\nhttps://github.com/dotnet/cli/issues/991\nhttps://github.com/dotnet/cli/issues/8060. > I also do not understand why bot names are case-sensitive. We can not create several config-file as BOTname.json and botNAME.json. Why not fix this restriction?\nOf course you can, if your filesystem allows, for example ext4 on Linux does. It's your decision that you're using NTFS.\n\nSuggestion itself is alright but I completely don't get it why you'd need that info if you still need to manually check balance, inventory or anything. Steam login is out of sight as sensitive detail in terms of security, for the same reason it's out from bot config in !api and I don't plan exposing it for no good reason - this is not a good enough reason.\nThe rest is on the edge of ASF scope, and normally I'd say \"sure why not\", but I don't really see a need if ASF already exposes to you SteamID in !api response, allowing you to construct http://steamcommunity.com/profiles/{SteamID} link yourself. If you absolutely need that info then you can probably just use it as part of bot's name (why name your bot Bot137 instead of bob1999 right away?)\nIn the end I don't really see a need of this, since you can already keep your bots on your friend list, and if you decided not to, you can always get SteamID from !api response. Moreover, this would not really help with anything since you'd still need to check e.g. wallet balance manually, and for inventory management you have !loot as well as SendPeriod and SendOnFarmingFinished - anything else is out of ASF scope anyway, while login or vanityURL could be easily used as bot's name instead of generic meaningless values you're using for no real reason.\nCan you elaborate how it could be useful, considering above points?. Closed due to inactivity.. It's totally new to me that HttpListener actually disposes itself on HttpListenerException, I have no clue who thought that it'll be a good idea to disregard all standard disposing patterns and just invent a shit like this, I'll probably fix it later today and have a new version for you to test.. Thanks for report, you can verify if https://ci.appveyor.com/project/JustArchi/archisteamfarm/build/4798-master/artifacts fixed your issue.. cc @KlappPc - I'm not sure if this won't break your stuff, since you added it the last time. Let me know if changing null to IPCHost suits you.. That's also my understanding.\nI feel like just specifying * and calling it a day, since somebody else might come up with a server A and clients B and C. Anything wrong in this?. That's a wrong solution then, but so is everyone else \ud83e\udd14.\nI'm wondering if we can't under any circumstance make it automatic. I thought about specifying client's IPv4/IPv6 in that header but then it wouldn't be any different from your security standpoint either. If nobody comes up with any clever solution then I guess I'll just make it configurable.. I like this solution since it can also benefit normal usage as an extra step, but I'm still not sure if I want to make CORS * by default when IPCPassword will be empty, oh well, gonna add a note to the wiki I guess.. You can check if V3.0.5.0 addresses this properly, as well as if IPCPassword works, since I didn't even bother testing my code before release, I'm that lazy \ud83d\ude42. Agreed, I'll change it before stable.. What do you need to restart bot for?. > In some rare cases !farm does not lead ASF to refresh the number of available card drops.\nKey word right here - rare cases, because most of the time it results in exactly the same action.\nAnd the only situation where it might not result in exactly the same action is Steam web sending us temporarily cached response, because of one reason or another. In this case, forcefully invalidating this cache with a new session is definitely not being considered as an enhancement - if Steam decides to send us cached response, then it has a reason to do so, and ASF should not try to outsmart this mechanism for one or two checks less. In this case I'm closing this enhancement as no longer valid.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: not a bug - https://github.com/JustArchi/ArchiSteamFarm/wiki/Commands. ASF properly forwards error it got from Steam network - it might just make more sense to not believe Steam network in this case, since it's pretty common that the request fails even if it in fact succeeds on Steam side.. No.. No, as long as Valve doesn't change anything it should work for every upcoming event (but in practice I'll be shocked if it works even for this one without extra corrections).. Because Valve likes to break things, even smallest change might make entire module not possible to work, despite of my attempts to make the code as generic as possible.. Creating real progress bar is imho too much for a simple action of ASF downloading binary, but I included extra info printed every 10% on Debug level while downloading ASF binary, which should be enough for now. Thanks for suggestion! \ud83d\ude42. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: not following changelogs is not ASF bug.. https://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nGitHub is NOT technical support - it's a place only for ASF bugs and suggestions. It's not proper place for technical issues, general discussion or questions (unless related to development).. >   \"IdleRefundableGames\" : false,\n\nSelf-explanatory, game's age doesn't matter, only when you bought it.\nShow me a screenshot of your badges page or gamecards page where Steam clearly states that you're eligible for X more cards from it. Screenshot of the links you mentioned above will do.. > Strangely enough, all of a sudden the Stronghold games started idling.\nWhich confirms that there is no bug in ASF regarding this. Probably Steam sent ASF cached response as stated in the FAQ, which is not a bug in the first place, nothing to fix in ASF regarding this.. Well if you truly believe it's the issue with actual parsing and not Steam simply not sending ASF this game as even available, then you can save http://steamcommunity.com/my/gamecards/651660/ and http://steamcommunity.com/my/badges (on appropriate page where it's listed) as .html files, pack to zip and send on my e-mail - JustArchi[at]JustArchi[dot]net. Better don't post it publicly since some personal details are likely to be included there.\nI'll check myself if it's possible for ASF to not parse it properly under some specific circumstance.. No. Verify twice if you put proper e-mail since it's not in spam either \ud83d\ude42.. Nope, and I'm sure my inbox works properly since I'm getting e-mails all the time.\nWell you can use my spam e-mail: archipl33@gmail.com.. Got it, I'll post an update once I analyze it.. Everything is in order and nothing is exceptional. ASF also properly parses both html files on my end, which means that it's cached Steam reply as I initially stated.. Well, this is entirely different case, the bug is not in HTML parsing code but IdleRefundableGames like I initially stated. It's good that you debugged it, I might now think of proper solution to that.. BTW, we wouldn't need to waste 2 weeks debugging this issue if you only put full log.txt like stated in issue template in the first place \ud83d\ude15. Done, the issue was indeed with ASF not updating packages data once fetched initially. This worked for majority of use cases, as apps rarily get added to existing packageIDs that we already asked for, but this particular case proved that it's possible.\nNew code should work much better regarding this since it now also stores ChangeNumber and updates it appropriately, in addition to other improvements I did.\nThanks for report.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.. Already done in V3.0.5.6, my 10$+ lifetime patrons will get a version with this feature in earlier as a thank you, and ASF V3.0.5.6 will arrive to public with this feature included after sale ends (for future sales).. Right now you can't, since early access to that ASF release is for people that already supported me in last half of the year, but if you'd like to support me regardless, for example for the next sale then you can find patreon support option under every release, as well as on the main page \ud83d\ude42.\n\nThis has nothing to do with ASF development though, you should track our Discord server and Steam group for updates regarding that. Very likely I'll enable alternative option for access to that version through PP/Steam donation soon.. > This has nothing to do with ASF development though, you should track our Discord server and Steam group for updates regarding that. Very likely I'll enable alternative option for access to that version through PP/Steam donation soon.. > You're actually going to effect voting results with this.\nWrong, vote is totally random, there is no way for it to affect outcome of voting process, apart from increasing overall voting userbase. I'm always doing my best when coding ASF, now is not an exception.\nBut of course, everybody is free to use his ASF as he sees fit. If somebody decides that he doesn't want to use given ASF functionality, he doesn't have to - everything is switchable. If there will be any actual fallout of this, then everybody should be prepared for that, as stated in the FAQ. Everybody is using ASF at his own risk, and everybody has also free will in deciding how he wants to use ASF.\nPersonally I don't believe anybody could be annoyed by this, but of course I can't give any guarantee, only my own of doing my best code-wise in implementing it.. As stated in announcement - http://steamcommunity.com/groups/ascfarm#announcements/detail/1568807608761815746. If Steam says that you have no more cards to get from the queue then you have no more cards to get from the queue. Ask GabeN to fix Steam instead, there is no issue in ASF regarding this.\nhttp://steamcommunity.com/groups/ascfarm/discussions/1/1620599015872633547/. Out of the scope of ASF as a program. ASF should not reply to anybody but users specified in user permissions.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.. What a time to be alive \ud83d\ude42. https://github.com/JustArchi/ArchiSteamFarm/wiki/Release-cycle\nDue to automation and lack of any tests, those builds are NOT supported in any way, and typically are available only for developers that need to grab most recent ASF GitHub snapshot in object form, so they won't need to compile themselves. Nothing guarantees that ASF in master state will work properly.\n\nBuild from a tag that was properly marked as a release, such as 3.0.5.5.\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Compilation#tags. Suggestion itself is alright but I completely miss a point of this. ASF already states to you exact title of the game that is being farmed for cards. Doing so also in hours case would be simply-put a spam of titles that doesn't mean much, since it shouldn't mean much to you what 32 games ASF decided to bump hours for at the moment.\nMoreover, if you need that info then you can already query IPC's /Api/Bot/{Bot} interface that will state full data about entire CardsFarmer module.\nBut sure, I think it won't hurt to include that info on Trace logging level. Adding a command for that is totally wrong and would serve no use, but if user truly wants that extra info spam, then he should be able to enable trace logging level for that. Wishlist.. Even better - I can just add it to !status.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.. No, that's not ASF purpose. AutoDiscoveryQueue is supposed to be 100% automatic and there is no need for any manual override for it. It's working as intended.. And why does that matter in the first place? What matters for you is that it triggers every 6 hours, exact time is not important, ASF has load-balancing to do and will never fire all queues to be done at the exact same time, therefore providing that time is useless since it's not precise in the first place.. > And why does that matter in the first place?. You still didn't explain what you're trying to achieve in the first place - I see it completely useless, but maybe you have a valid use of this and you just don't want to say why. When asking for a feature you do not just say what functionality you want to see available, but also what is its final purpose. So once again, what is the final purpose of knowing how many hours are left until queue will be checked again?\n\nAnd of course happy new year \ud83d\ude42. That doesn't need any extra command then. ASF starts going through the queue in around 1 minute since program start, and load-balances that time across all bots so they won't do the queue all at once. Then it's 6 hours since last check.. This is .NET Core runtime issue that is unrelated to ASF in any way, but ASF should not crash over it, therefore it's a bug that needs to be corrected, thanks for report!. While I don't have anything against this suggestion and I believe it could be added, I took a quick look and there is no case-insensitive variant for common C# actions like File.Exists() or File.ReadAllText(). It'd require entire rewrite of this function into getting all files in the directory and enumerating over them, picking first one that matches what we're looking for in case insensitive way. Another solution would be to use native kernel32.dll Windows calls, but this is even worse and not multi-platform.\nI don't like how each non-ASF 2FA account will now need to scan entire folder just to make sure there is no file to import. File.Exists() is very fast call, enumerating over entire directory, even if just file names is much, much slower. This is why I'll need to reject this suggestion, at least for now, even though I don't have anything against it. Sorry.. If you've read the FAQ then you'd already know that you neither can farm family sharing games, nor ASF has any dependency on Steam client, therefore your suggestion is invalid in the first place.\nBut on top of that, if you expect me to add support for cracked Steam clients that are not just breaking ToS but are illegal first and foremost, then you're in the wrong place.\n  . Then good for you, I don't know why you're asking about it here then.. Already reported and fixed in https://github.com/SteamRE/SteamKit/issues/506, thanks!. I don't necessarily agree with everything you said:\n\nHaving it as a command line parameter allows the possibility that other users on the system are able to see it.\n\nThis is wrong, only if you allowed it in the first place, since you can mount /proc with hidepid of 1 or 2 and hide ASF existance together with its cmdline. Still, even despite of that it'll be a good idea to add config alternative, so wishlist.. On the other hand I don't see a point of this.\nEither:\na) You use shared directories, in which case other users have access to all of the files, so cryptkey in config wouldn't make any sense. In this case, assuming cmdline is safe, you can use --cryptkey. If it's not, then cryptkey in file won't make a difference either.\nb) You use exclusive directories, e.g. ASF config folder chmoded 600, in this case you don't need encryption in the first place, since nobody else but you can access those files anyway.\nWhat practical purpose is achieved with cryptkey in config file?\n. > Say my system is compromised as a non-root user.\nDoesn't change anything. If user has access to files but not cmdline, he can read the cryptkey from it in the exactly the same way. If he doesn't have access to files, then it doesn't matter whether you use encryption or not since even if he'd know the cryptkey then he can't do anything with it anyway.\nI don't see any point of it. It's not a preference in this case - it doesn't make any sense. You either assume that attacker has access to config files, but not cmdline, or you assume that attacker has access to cmdline but not to files. In first case you use cryptkey, in second case you don't use anything since nobody but you can access ASF config directory in the first place. And if user has access to both then cryptkey in file wouldn't make any difference, because cryptkey is supposed to protect those files in the first place. Do you protect your house with keys in the door's lock? It's not a preference to leave keys in your door, it's just pointless in terms of security.\nUnless I skipped over something important, I'm closing this issue as it doesn't make sense to me. However, if there is something I forgot about, please let me know.\n. > it was about user preference to have things in a config file opposed to command line.\nAnd that's fine, but all this could do is give user false hope of security, since leaving cryptkey in the config file that is supposed to protect that config file in the first place is not a preference, it's just foolish since it doesn't offer its core functionality in the first place - protecting something.\n  . I don't agree with this, because when your account gets to L8 you automatically get all missing cards you earned before, therefore ASF can greatly help in this case. Moreover, if you know that your account is not L8, and you actually don't want to earn those missing cards later, then why do you enable this option in the first place? It's disabled by default.\nWarning with account being under L8 could be nice, but since this info would require another request (and isn't available as account flags just like the restriction you mentioned), I don't consider it a good addition, especially because it's not needed for majority of users, and those that would make use of it already know that their account is not L8. ASF prints current warning only because it's delivered as account flags when logging in anyway, and in this case we only have an option to either ignore it, or make use of it, so it doesn't cost us anything at all.\nUnless you have some argument that I missed, I'm rejecting this idea as I don't consider it good enough to be implemented in the first place. The only thing that would be good is wiki update regarding this to mention L8 requirement.\n. Wiki part is done, as of the first question I don't know, you need to test yourself.. Because very likely it's connected with card drops for Steam sale being active, now they're no longer happening, as the sale ended. Doesn't change anything in this regard, since what I said was confirmed working by hundreds of people.. I don't know and this is not a proper place to ask for that in the first place.. Thank you! \ud83d\udc4d. Actually forget about that initial command suggestion, I have a better idea.\nEither we do it through !loot^, which would be advanced loot, or !transfer^ which would be advanced transfer.\n!loot^ <Bots> <AppID> <ContextID> <Modes> would work like loot, except it'd allow user to specify appID, contextID and modes, which would be exactly the same as !transfer modes. All would work here.\n!transfer^ <Bots> <AppID> <ContextID> <Modes> <Bot> would work like !transfer, except it'd allow user to specify appID and contextID. You have code for <Modes> already, so nothing more is needed.\nPersonally I'd suggest going with !transfer^ since it makes more sense and allows specifying target bot. Adding yet another take keyword to already huge list of commands is not needed, as well as two variants that only differ in omitting contextID. It's just one number anyway.. Actually it's up to you, both would work. In !loot^ case we can also omit <Modes> entirely since it's out of the scope to add some specific items looting, so just !loot^ <Bots> <AppID> <ContextID> would probably be perfect. In fact, now that I think of it it'd be better since we don't want to add some specific mods for out-of-steam-items looting anyway, so a need of specifying All wouldn't make any sense.\nSo sure thing, !loot^ <Bots> <AppID> <ContextID> seems the best in this case. This would be one command with 2 variants (one for bots defined, one for no bots defined, usual pattern). Just make sure to improve existing function in AWH (ArchiWebHandler) instead of adding new one, and actually make it accept uint for appID and byte for contextID - Bot.cs should do initial parse of what user inputted. AWH is backend function that accepts only already valid values, strings for appID/contextID are invalid and shouldn't be accepted. Refer to parsing e.g. appIDs in !play for reference.\nAnd of course thanks for contributing to ASF \ud83d\udc4d. I'll be happy to review your PR again once you push updated code. In case you're not familiar with GitHub PRs yet, in order to update PR just push extra commits to your HarryS/ArchiSteamFarm:master branch.\n  . In general when it comes to such things I tend to follow simple scheme of not omitting values that are not always working in default variant. Take !redeem <key> and !redeem^ <key> <modes> for example. !redeem <key> will always work, but !loot^ <appID> will not, because <appID> might have no contextID of 2. Even if right now I can point out just one of such scenario - you stated it yourself, it's not guaranteed that it'll stay like that, and even one is already one too much to consider it.\nOf course this is only my general pattern, nothing that should be 100% respected in all scenarios, but in this case I don't consider the cost of adding/memorizing contextID of 2 as big enough to consider yet another command that just adds contextID possibility. This is because memorizing structure of yet another command is much bigger than just adding 2 into the command after appID. In general more generic commands are better, but sometimes simple variants are also needed.\nFor the same reason I'm suggesting adding !loot^ and not changing existing !loot - because !loot will always work with default settings, when not specifying appID/contextID explicitly.\n. Apart from some misc things I'll cover myself all of this looks good, does it work as supposed to after those changes for you?. Thanks for your contribution! \ud83d\udc4d . > It appears, that after 15 confirmation requests being sent successfully Steam servers block all the further ones. So that it'd be more reasonable to add a timeout between every request or every 15 request (seems to be a constant value) instead of retrying each request, which leads to even longer block of requests\nThis needs deeper analysis, I've not seen anything like that in ArchiBot during Steam sale, and it had an average of 2 offers per minute, so also confirmations being accepted each 30 seconds. I also couldn't trigger anything like that when accepting more than 4 confirmations per minute related to listing of my items, so for now everything you've said is a mystery to me.\nIf there is indeed some rate-limiting introduced then we can implement another MobileAuthenticatorLimiterDelay, but only when we know exactly under what conditions that rate-limiting is happening. This also means that I need to reproduce it reliably - there is no place for making a blind call based on nothing but requests failing.\nTherefore, if you want to see this feature implemented then you need to do some testing in clean environment that would confirm what exactly is rate-limited and under what conditions.\n\nIs fetching confirmations rate limited? Try !2faok on clean confirmations queue, firstly with one bot, then with multiple ones.\nIs accepting confirmations rate limited? Try !2faok or !2fano, again, this time on full queue of confirmations, firstly with one bot, then with multiple ones.\nIf yes to any of above, what is exact rate-limiting? We need to know that to make a sane default value. If you can get away with 1 confirmation each 10 seconds but not 1 confirmation each 5 seconds then this is what we need to know.\nIf yes, is rate-limiting fixed to a given Steam session (bot) or global? Can we get away with doing that 1 confirmation each X seconds on 10 bots at the same time? We need to know that when deciding upon scope of new rate-limiter.\n\nOf course you can also do tests above with any other authenticator of your choice, WinAuth preffered. It might even make more sense to do it this way when testing just one bot at a time.\nLet me know once you gather those extra details. Since everything ASF doing is asynchronous, I don't consider this issue important enough to push forward without those details, as InventoryLimiterDelay already balances loot requests, therefore also indirectly 2FA requests - if user is smashing ASF with excessive !2faok command then it's not our problem. If we know about those details though, then there is no reason for not adding it in order to make things better.. Thanks, this is almost everything we need.\nThe only remaining thing to check is whether limit applies only to fetching confirmations, or fetching as well as accepting them. You said that you got block after around 7th !2faok command, try to repeat that with 5 full queues for 5 different bots (like 5 pending confirmations per each queue will do, this is 25 confirmations total). Then execute !2fano (or !2faok) on all of those 5 bots at the same time !2fano bot1,bot2,bot3,bot4,bot5. Check if you get the block - if not, only fetching is limited, otherwise (probably) all 2FA requests. Personally I hope it's the first case, but very likely it's the second one instead.. Also one more thing:\n\nFollowing my tests it's limited per IP (I didn't have any tries on different PCs though), because other bots run on another ASF instance got the same warning after each \"!2faok\"\n\nBlock is global, no doubt about that, but the question is whether we can get away with 20 bots fetching their confirmations 10 seconds each (so 20 requests, 1 request from a single bot per 10 seconds), or we need to rate-limit all bots globally (1 request per 10 seconds instead, regardless of active bots). This is also important to check.\nEDIT: I've checked this one myself, limit is per-IP request and not per-session, so global scope.. That's good, we have all details we need now, so implementing this with proper code will be a piece of cake. Thanks a lot for your help.. Half of what you asked for is already available through various different commands and the other half is entirely out of scope. You didn't provide any reasoning for any of options, you skipped specifying purpose (no, \"making asf better\" is not the purpose) and I otherwise don't see anything on your list that is even remotely worthwhile to be included in the program. Moreover, the fact that you're asking for things that are already available proves that you didn't even examine what ASF is capable of before making a suggestion, which is mandatory as stated in contributing article. Since I don't see anything interesting here, I'm marking it as not going to happen.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md. FarmOffline bot config property specifies whether bot is idling online or offline and I do not plan to implement yet another way to do exactly the same thing. If you need a switch then you can as well call IPC API in order to update bot config remotely, assuming you can't do that right away in files themselves.\nMoreover, !play command should have no premise of modifying online status whatsoever - that's not what the command is for. This comes in addition to pointless redundancy - any of those two reasons alone would be enough as a strong argument against this suggestion. I don't consider this enhancement beneficial at all, it'd only further degrade consistency of the program while giving no direct benefits of making something previously impossible happen.. I'm merging it for now so other people can contribute, I'll glue it at later time though since I'm out of time at the moment. Thanks a lot for your contribution!. @MrBurrBurr You shouldn't use any ASF strings being used for display purposes - this includes e.g. parsing log.txt or commands output. It's not only because your GUI won't work in any ASF language other than english, but also because original english strings can change anytime as well, together with their structure. That's what API calls are for, and that's what my first 2 points are for.\n\nDo you think it would be a good idea to add some kind of IPC Api where I can read the current state of bots? Or is there already a way for it I didnt see?\n\nThat's what /Api/Bot/{Bot} is for.. Version yes - there is no endpoint for that yet. I'll add it once I get some time. You can open a separate issue so I won't forget.. There is no sensitive info in any API call, if by sensitive we understand passwords or other login details.. /Api/Bot/ASF already exists.. What stats?. That's not Bot info, that requires another API endpoint.. >  IPC GUI should not do any parsing of output of /Api/Command. No, you should use /Api/Bot/ASF.. Everything that !status gives is already available through various pieces of /Api/Bot/ASF - redundancy is unwanted, not needed and would degrade API quality. Instead, analyze more deeply what data you have, and make use of it.. You're designing the web UI and what exactly it provides. You don't have to use all data that API provides, you can cherry-pick the information you're interested in. Personally I see no reason for doing that - I'd instead add basic overview of active bots in the panel, like now, and provide more info (e.g. about currently farmed game/games, and remaining ones, even with fancy banners or anything) when user asks about that, e.g. on-hover as a popup, or some detailed bot info.\nIn any case, that's your choice.. @MrBurrBurr Time remaining doesn't work when TimeSpan exceeds 1 day. It's then encoded as e.g. \"TimeRemaining\":\"16.21:00:00\" (for 16 days and 21 hours). You might want to correct it. The default format is [-][d.]hh:mm:ss[.fffffff] - https://msdn.microsoft.com/en-US/library/1ecy8h51(v=vs.110).aspx. @MrBurrBurr Also games redeemer doesn't work since you encode data as gameName:cd-key and not cd-key:gameName. From user we expect input as GameName Cd-Key because it's more natural, but for ASF data we expect cd-key:gameName, since cd-key is unique and serves as a key in the dictionary - you can't have two same cd-keys, while you can totally have 2 different cd-keys for the same game. You must construct dictionary from arg[1]: arg[0].. Also the textbox should be much bigger, I can barely input things.\n\n. Other than that the feature works OK after my fix from https://github.com/JustArchi/ArchiSteamFarm/commit/2b67138b7296274ddcffe8b6441132bce7596b99 - thanks a lot \ud83d\ude42. @MrBurrBurr Also I noticed that you show the user number of games that were successfully added - this is nice, but improper since ASF's IPC API explicitly says that invalid entries will be removed during import process, so you can't actually state how many games were added based only on API success response.\nFor this reason I added final collection of the games to the ASF response, so you can actually make use of it now, or even tell user which keys were invalid and rejected by ASF - https://github.com/JustArchi/ArchiSteamFarm/wiki/IPC#post-apigamestoredeeminbackgroundbotname \ud83d\ude42. @MrBurrBurr Priority right now would be to make IPC GUI comply with https://github.com/JustArchi/ArchiSteamFarm/commit/082fedfa0b9f5971e36198e97dae525a0fb33d47\nASF will block all /Api requests for full hour if you fail to authorize properly in 5 consecutive tries. Right now IPC GUI is sending requests like crazy and totally doesn't respect ASF returning 401 after user inputs his IPCPassword, which means that instead of giving user 5 tries, you get block after first one. Moreover, you don't have even one try, since ajax function in background tries to send requests regardless all the time, before user even has a chance to input his password.\nYou might want to correct this - the fact that IPC GUI kept sending requests after getting first 401 was unacceptable from the very start, but right now ASF treats those attempts as bruteforcing attempts, and blocks you entirely.\nSuggested solution - send one /Api/ASF or whatever request you want on website being opened. If it returns 401, offer user IPCPassword to input and try again after user inputs it. If request succeeded, then you can assume that password is correct and call API on usual basis according to your logic, by starting all background functions that are currently called unconditionally. If it didn't, repeat ask for password, and do not send excessive requests that will trigger ASF anti-bruteforce mechanisms.\nYou might also want to handle new 403 response by showing user some friendly tooltip that he failed to authenticate too many times and is blocked for an hour.. @Benman2785 GitHub is not technical support, refrain from asking questions unrelated to development.. @MrBurrBurr\n\n\nStrings that aren't supposed to be translated shouldn't be included in strings.json file, such as global-github.\n\n\nYou should never compose final string out of various string parts, since it gives imprecise and very often incorrect translation. For example I see stuff like global-changer and it makes no sense in Polish language to include that word alone. Even if that word is indeed used alone, it should be configuration changer or likewise, never changer alone because configuration changer and bots changer can have entirely different translations. Even in ASF I try to avoid concatenation as much as possible.\n\n\nRemember to update that file not only for new strings but also in terms of strings you no longer use (such as removing global-github once it's no longer needed).\n\n\nAs you already know, never change files other than strings.json since they're updated automatically. I added proper disclaimer in the structure for that.. But this is not IPC GUI support page, this is IPC GUI development. You already reported your bug, it's pointless to spam about it.. @MrBurrBurr Can you open new issue on ASF GitHub as lead IPC GUI developer, so you could keep track of IPC GUI todo list and edit it accordingly without a need of my help? I can edit the issue if needed anyway. Thanks.. Thanks! From now on please use https://github.com/JustArchi/ArchiSteamFarm/issues/773 issue instead for IPC GUI development.. Let me know once your PR is ready \ud83d\udc4d. (And even better, use [WIP] in the title before it is, so my CI can automatically catch it). > When the PR is done should I just remove the WIP?\n\n\nYes.. Not sure if this was fixed yet or not but IPC GUI should not ask for log.txt, currently it's 404 loop in the console.\n(I'll take a look if NLog provides something we could use instead)\n. (And same for ASF.json and all files from the directory - IPC GUI is supposed to be served by ASF HTTP server, and user's javascript should not ask for files directly, ever). Sync yourself with master (there should be a button somewhere here in the PR for that) and once you push your next commit then AppVeyor should nicely build for you first \"prototype\" version of ASF with IPC GUI bindings, which would allow you to run it in proper HTTP environment.\n\nIt's probably bugged like hell, since the entire HTTP server in ASF is built from scratch - I'd use something that already exists but there is no library that satisfies me in terms of dependencies and functionality. ArchiHttpServer V0.1 has to suffice for now. Let me know if you find any HTTP bugs with that, although there should be none if browser just asks GET for files.. Next objective will be trimming vendor directory since it takes whole 5 MB out of 8 MB of total ASF generic build, which is unwanted. All public domain scripts like jQuery should be just linked from public CDN instead of being included in the IPC GUI itself, that will hopefully trim this further \ud83d\udc4d. > I dont know how to get the IPC Host and IPC Port because I cant use the IPC API.\nThe answer is simple - you don't \ud83d\ude42. Check URL of my last screenshot. User defines that, you don't need to know it whatsoever. Just call /Api/WhateverYouNeed directly, it's on the same HTTP server.\n\nI cant find it :s\n\nJust execute git pull https://github.com/JustArchi/ArchiSteamFarm master on your repo and branch then.. That's good \ud83d\udc4d\nNow merge my changes with git pull command above and you can test how entire thing runs inside ASF process.. Ctrl+Shift+P should work, then just input the command I gave you above, then push changes.. And if it still doesn't work then just install GitHub desktop, it's much easier - https://desktop.github.com/\nClone your MrBurrBurr/ArchiSteamFarm repo, open command line (right click on repo), type command, and push changes \ud83d\udc4d. All correct \ud83d\udc4d\nYou synced your branch with upstream (my) changes.\nNow you can wait a bit more for AppVeyor to finish compilation, then click on details, change to artifacts, download the one you want and test your changes.. In order to test your IPC GUI just launch IPC server like usual with --server, then navigate to http://127.0.0.1:1242 in your browser (or whatever IPCHost and IPCPort you specified).\nOnce you test how ASF HTTP server works with IPC GUI you'll know why you don't need to know IPCHost and IPCPort from within IPC GUI \ud83d\ude42.. Once you finish having fun with testing we'll need to slightly rework how IPC GUI is handling config, since right now it won't work properly with IPCPassword.\nFirst and foremost you need to stop depending on ASF.json as well as log.txt, since those files are unavailable and they're not going to be exposed in the first place.\nAs of actual authentication it's rather easy the way it's implemented right now:\n- File serving HTTP server part is unrestricted (since commit above), so user is always able to request index.html together with all css and js files, regardless of IPCPassword.\n- If IPCPassword is set, all /Api requests require authentication. You can check if that's the case by executing starting /Api/ASF request and checking if it returns 401 status code. If yes, ask user for IPCPassword and e.g. save it in his cookie, this way he won't need to input password again until it's changed.\n- IPC GUI should use authentication headers and not ?password query, as stated in IPC section on the wiki.\nSo in short, remove all references to ASF.json and log.txt, and slightly rework IPC authorization by changing authentication method to authentication headers, and making it possible for user to specify password.\nIn the meantime I'll take a look how I can nicely expose ASF log for you.. I added logging stub under /Api/Log so you can start having fun with it already. This one is a bit more advanced since it's WebSocket - the idea is quite easy, after you connect to /Api/Log endpoint through a websocket, then ASF will push you all log updates as they arrive, including initial \"push\" of last 10 log lines, so output is never empty.\nFor now it's just a stub, I'll add actual logging later. You can already test connection and receiving messages. https://www.tutorialspoint.com/html5/html5_websocket.htm\n. Works for me.\n\nAnyway, this is not appropriate place to ask for ASF compilation support, especially because the thing you want to test didn't even make it to any pre-release yet.. I'll take a look, since I reproduced it at least on Linux, thanks.. This can happen if you have IPv6 support on your Linux, since default IPCHost is 127.0.0.1, while localhost can map to ::1. You can change IPCHost to localhost (to enable only that endpoint) or * (to enable all endpoints). I should probably allow more than one prefix to be used, that's for another issue.. Keep in mind that you need to set ASF authentication header for all /Api requests, not only /Api/Log. I'm not sure if you're already doing that or not - if yes, disregard this.. > With $.ajaxSetup it should set the header for all future ajax requests. So I think we should be good or do you have any concerns?\nYou're coding in javascript here, not me. Don't expect code review from me, I wouldn't even be able to code half of what you did \ud83d\ude42\n\nI think I got it working for all /Api requests except for /Api/Log since I dont know how to add the authentication header for it.\n\nThat's limitation of javascript API, not the protocol itself. You can append ?password= query string in this case.. Yes, IPC GUI should follow ASF icon, you can find resources for it in the resources folder - https://github.com/JustArchi/ArchiSteamFarm/tree/master/resources\n\nOn ASF's side, I might be wrong on this, but some ASF commands don't work properly if a bot has a white space in its name, so ASF should completely prohibit that or change the command syntax (better approach IMO).\n\nThat's because whitespace is used as argument separator, and actually I want to keep it this way - it makes things much easier, and I doubt somebody has some irrational urge to use spaces in bot's name, if he can just use _ character. I could change it, but I don't consider this change to be justified enough to bother with it.\nLocalization will be priority once some basic version is ready. We have a lot of resources in our ConfigGenerator, including javascript code for language detection, so we'll for sure make use of it. Moreover, I must finally find out a solution to wiki, because in perfect world wiki should be translatable as well.. I finished /Api/Log implementation, you can pull latest changes and test it, including adding appropriate logic.\nInitially I wanted to expose to you all logging properties like Level and such, but this would create huge mess and would drive you into hardcoding one given layout that users have to follow, which is suboptimal. Instead, I made it possible for users to define their own layout for logged messages, just like with all existing ASF logging targets.\nThis also means that it's possible for you to define default ASF GUI layout, e.g. with highlighting rules in simple HTML tags that you'll display as it is. This approach will also allow users to alter this logging layout without changing source, just how they can change existing ASF console logging layout. For example, you could create highlighting rule that would print all errors in red, and users could without issues change it to let's say purple, without even touching source code in the first place.\nThis also means that you should not do any parsing of /Api/Log apart from displaying it. User can modify default layout by e.g. removing bot names, messages, dates or anything else, including adding extra elements that are normally not printed. If you want to do any default parsing steps, you must do it in ASF default layout.\nCheck logging section on the wiki for more info, and NLog wiki for layout definition if you're interested.. On the other hand I could also get rid of providing layout for IPC GUI logging and instead give you raw JSON data about logged message, so you could do parsing and displaying on your own. Advantages are that you have full control over all logged properties, so you can e.g. make it dynamic based on chosen IPC GUI theme, disadvantage is that users no longer will be able to modify e.g. colors or logged info without touching website source (or you making it possible to turn off/on).\n\n{ \"time\": \"2010-01-01 12:34:56.0000\", \"level\": \"ERROR\", \"message\": \"hello, world\" }\n\nLet me know whether you want one layout-rendered string like now, or message object with properties inside.. > I think it would maybe be better for the first push to include the whole log. I was testing it a bit yesterday and would like the whole log to be displayed since sometimes I want to see more than the last 10 lines. What do you think about that?\nUnacceptable. Memory is finite, and if ASF kept in memory all logs ever recorded then you could quickly get OOM condition, not to mention that at some point you'd simply run out of CPU to parse all of it, and out of bandwidth for ASF to transmit all of them. Maximum size is flexible and can be changed (even in NLog.config, without ASF recompilation). I could change default to a few lines more, but every additional entry log consumes memory, and serves little to no purpose.. > Would be nice if you could change from 10 to maybe 20-50 (depending on memory consumption).\n20 is OK, but anything more would probably be unwanted.\nKeep in mind that you still can't assume that you'll always be provided with 20 lines - user can increase/decrease this number as he wishes through NLog config. You're guaranteed at least a single log line though, so output is never 100% empty.. Ah yes, and that's assuming history target is active, because user can also entirely turn it off in order to save memory (e.g. when he doesn't need/want logs in IPC GUI, or he's not using IPC GUI at all), so keep in mind that you still might get no output.\nConnection to websocket will be established properly though, as NLog configuration can change dynamically during runtime, and in this case ASF would push logs once the target becomes active.. No need for another API endpoint, we already have /Api/Bot for that purpose.. So? Those two collections are not equal, so I'm not sure why this behaviour is weird to you.. Because GamesToFarm is filled all the time until all badge pages requests finish, then ASF chooses proper algorithm and starts idling process. If Steam website decides to go down in the middle of checking badges then you can as well have GamesToFarm ready with a 5 minutes wait before CurrentGamesFarming is filled. I don't know what is difficult to understand here.. @felipe19930 Try to use it on Linux and you'll know why. Besides, since GC is tweakable, providing user with process memory could falsely make him think that ASF needs that much, which is false. I prefer to give user real data about how much ASF truly needs and makes use of, instead of telling him how big heap GC allocated for future use.. I'm merging current state of this since I need to release new stable ASF ASAP. Since I'll be squashing the changes, you'll need to resume from clean branch.\ngit fetch https://github.com/JustArchi/ArchiSteamFarm master # Fetch current state of master branch from me, which will be entirely different than the one you're operating on right now once I squash the changes, due to rebasing.\ngit checkout FETCH_HEAD # Change current working directory to the one you fetched\ngit checkout -b ipcgui # Create new local branch called ipcgui, or whatever you want to name your branch, and switch to it\ngit push https://github.com/MrBurrBurr/ArchiSteamFarm ipcgui # Push your ipcgui branch, or whatever you decided to name on your GitHub repo.\nThen you can switch to your branch on GitHub website and open new PR from there.\nThank you a lot for your ongoing work on this.. Steam doesn't provide a disconnection reason and if OnLoggedOff() happens then it's already printed even without debugging.\nWhat you're asking for is impossible.. It doesn't matter to ASF if Steam is disconnecting all of your bots or not - it's out of the scope of ASF logic. If you have an idea how we can improve it then you can post a detailed analysis like done in #728 - until then I assume that code works properly, and doing !loot ASF is wrong to begin with.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. Done, refer to updated wiki for syntax.. !play command is for manual farming, and manual farming as the name implies is outside of the scope of any user management, since it's 100% manual interaction, including data about it.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. You can also do git remote add upstream https://github.com/JustArchi/ArchiSteamFarm and afterwards just git pull upstream master \ud83d\ude42. Likewise when you push you can do git push origin master.. Random idea: it'd probably make sense to change changelog link to https://github.com/JustArchi/ArchiSteamFarm/releases/tag/{version}, since user can then navigate between ASF versions, and it's far more readable than my commits mess. Up to you though.. Let's hardcode comic sans \ud83d\ude06. I wonder if we could hook game banners on detailed bot view somehow, so user could see what exactly is idled. Since there is a gurantee that only up to 32 games there will be, I think it could fit somehow. Just a random suggestion though, you're designing GUI here.. I'm absolute ass from any UI/UX design, I don't even have any idea how to display it nicely. Perhaps something similar to Steam grid?\n\nSince you have guarantee of only up to 32 titles being displayed, we could somehow make use of it. For example smaller images when idling multiple, and a bigger banner when idling solo. Even better if instead of hardcoding we could make size of images dynamic so it fits into given div.. Maybe later I add more, since right now I'm out of games as well, not to mention my account uses simple algorithm in the first place.\nI'm sure somebody can test it for you, just push your updates (I see that you did already) and maybe somebody will grab latest AppVeyor build and test the thing - https://ci.appveyor.com/project/JustArchi/archisteamfarm/build/4961-master-bbrossai/artifacts. @MrBurrBurr I added ASF's IsPlayingPossible property to API.. To elaborate more on this - ASF farming X games in CurrentGamesFarming will not specify how much time would be needed for a single game. For example, we could have 10 games with 3 cards each, and maximum amount of hours played in all would be 1. Now, should that game have time remaining of 90 minutes (for 3 cards), 150 minutes (for 3 cards + mandatory bumping), 330 minutes (for 3 cards + mandatory bumping, then 6 cards more from other games before this game starts being idled) or who knows how much, because in 15 minutes from now a game you already idled for 2 hours will get cards added and ASF will switch to that one instead?\nLike I said, non-predictable. TimeRemaining of GamesToFarm is predictable because ASF doesn't have to take in account all nifty details like games order, priority queue, things getting changed dynamically or other things. We can say how much we expect for the entire queue to take (based on sum of all remaining cards, amount of hours from all games and HoursToBump bot config property), but we can't precisely say when given game finishes farming without taking in account not only all of the above, but priority queue, FarmingOrder, then priority based on hours of those games and so on. It'd be totally inefficient to do all of that. ASF doesn't even know itself what will be idled next, because user could e.g. add a game to priority idle queue while games are being farmed already. See how that doesn't affect TimeRemaining of entire queue at all? This is why current TimeRemaining makes sense, and per-game TimeRemaining would not. Telling user that this game will finish being idled in 2 hours when he adds priority idling of another game, redeem 20 keys and entirely change FarmingOrder would only provide entirely false data. All of that doesn't affect global queue, because TimeRemaining will only be increased accordingly.. > Unfortunately there's no way of adding custom headers in WebSocket requests as of today standards.\nI don't see how you couldn't add header the moment you do first initial request asking server to upgrade your request to websocket in the first place. It's silly javascript limitation at best, because RFC doesn't forbid in any way usage of custom HTTP headers on initial websocket request. It's same old HTTP/1.1.. It's alright, ASF also supports authentication in query string and we don't need to work around an issue that doesn't exist. It'd be cool if we could use auth headers everywhere, but if we use it everywhere but in websockets only because they can't support it properly then it's alright trade-off for not spending hours re-inventing the wheel only because somebody missed a crucial for us feature. It's OK as it is.. I see you removed WIP tag, so I guess it's ready to be merged.. > Disable DPAPI password generation when ASF is not running on Windows.\nThis is what ASF is already doing by handling this exception appropriately and not crashing over it. You can't assume that linux will never get support for DPAPI and just disable it globally, since it might at some point, and then the rest of the logic will work properly.\nThe only thing that I see as worth correcting is changing this error into a warning, according to ASF logic where error is worth reporting (unless it's you causing it), and warning is to be expected.. At the same time you missed the point that DPAPI is only implementation detail, and a proper multi-platform API is considered - https://github.com/NuGet/Home/issues/1851\nDoing a pre-checks if given feature is supported and deciding to not use it based on silly and possible-to-change premises is far worse than attempting to use something, and adding logic if it's not supported. For the same reason ASF checks if platform supports websockets through trying to create one, instead of assuming that everything but windows 7 supports it.. And this is especially important considering proper support for websockets on windows 7 platform is actually being worked on and with due for .NET Core 2.1, which would make previous silly platform-based check entirely wrong in the first place.\nLikewise here, you don't know if the method ASF is using right now won't be a wrapper in future .NET Core versions that will use different implementantion for different platform, without breaking consumer API that ASF is making use of. Yes, DPAPI won't happen on Linux, but DPAPI is implementation detail, not the method ASF uses (trying to encrypt data with currently logged user credentials).. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. GitHub is not technical support, and I can't help when user is reporting a bug that is not a bug in the first place, so issue gets closed as being invalid. If he instead reported his technical issue in appropriate place for that purpose, then I'd be happy to take a look and find a potential solution myself.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. I/O error regarding console/pty access is OS-layer issue, not application-layer issue. GitHub is for reporting ASF bugs, not technical issues.. Yes, AutoRestart configuration misuse is also a technical issue. ASF bug to me is something that needs to be corrected in ASF code, in this issue there is nothing that qualifies as such.. If there was any issue regarding this then I probably fixed it by the way while refactoring FileSystemWatcher for games redeemer in background. I can't reproduce your issue neither on Windows nor Linux with latest ASF code.\n\n. Sure thing, thanks a lot for everything.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. The wiki was outdated on that one, since it still remembered V2 times before ASF switched to NLog logging. ASF itself no longer has any say in log.txt or if it's even being generated, since NLog is in charge of that now.\nReview logging section if you'd like to modify path of log.txt. I've corrected the page you mentioned to get rid of outdated stuff, thanks.. If you're interested you could also add new API endpoint - https://github.com/JustArchi/ArchiSteamFarm/wiki/IPC#post-apigamestoredeeminbackgroundbotname\nI'll write documentation how it works soon under https://github.com/JustArchi/ArchiSteamFarm/wiki/Background-games-redeemer but all you need to know for now is to somehow accept from user map of cd-key:gameName and send appropriate request.\nEverything that is needed on the page with this feature is a huge textbox where user will copy-paste list of keys, delimiter selection (e.g. drop-down list) from the list of available ones (tab character, , and similar, tab being default), and a button to send a request. This way user could choose tab delimiter, copy-paste following list into a textbox:\nSuper Trench Attack!    12345-67890-ABCDE\nTwisty's Asylum Escapades   21345-67890-ABCDE\nGhost Files: The Face of Guilt  11345-67890-ABCDE\nBeach Bounce    22345-67890-ABCDE\nYou Deserve 31345-67890-ABCDE\nGulu    33345-67890-ABCDE\nThen hit button and easily submit list of keys for background redeemer \ud83d\ude42. All you need to do with the input is to split it on user-selected delimiter, then create a map from arg2 (cd-key) pointing to arg1 (gameName), then just send it as json via API endpoint.\nIt'd probably be best if this feature was included somewhere in specific bot view, unless you want to make it static and add bot selection next to delimiter selection (but IMHO it'd be super cluttered when user has hundreds of bots, it's easier to select one from the list and send from there, up to you though, maybe even both?).. We can go ahead and add option to bot like you suggested for now, I like that.\n\nNo, any initialized state. If bot appears on /Api/Bot/ASF, then it can receive that request.\nThis will be written to .keys.owned, so user knows what the key is for. Steam doesn't need to report game name on key redeem attempt, this can be as well some user identifier. More about this will be in doc later.. I'm going to merge it then for now, thanks a lot!\n\nAlso I added global config management to /Api/ASF for you \ud83d\ude42. Thanks a lot!. \n. Doesn't matter to me, ASF properly stops HttpListener prior to restarting with !restart command, and ensures it's stopped before it spawns new restarted process in the first place. There is nothing in ASF code to improve regarding this, because HttpListener is already not listening before we even attempt to move forward. Whether underlying socket is freed or not, that's up to .NET Core runtime, not ASF.\nInstead, it should be properly fixed with https://github.com/dotnet/corefx/pull/24809. Program shutdown routine is exactly the same regardless whether program exits or restarts, and regardless whether you use a command, get done with auto-update or click [X] button. The underlying issue is sockets not being freed, not ASF not releasing them.. If you start reading ASF code, at least do it properly. This function executes before exit and restart, and ASF already stops IPC entirely prior to even calling Process.Start() in the first place. If you think you know better, feel free to fix ASF and send appropriate PR that I'll evaluate. Or consider the fact that ASF has no outcome on third-party runtime bugs and it's better to wait for fix in .NET Core 2.1 rather than wasting your time for something that will get obsolete in 3 days from now. Up to you of course, just don't expect me to do the second myself.. I'm not entirely sure if you're doing it on purpose or you don't understand at all what I'm saying.\n\nThis is ASF bug\n\nThis is .NET Core bug that ASF is running into. ASF bug implies that the bug should be fixed inside ASF, while this bug should not be fixed inside ASF. This bug should be fixed in the runtime. Whether ASF should work it around or not is entirely different matter.\n\na) application should not continue run if configured behaviour can't be reached\n\nApplication should always attempt to recover from errors, unless they're severe enough to justify termination. Your issue is not.\n\nb) unhandled exception is bug, even if it's ignored and logged.\n\nUnhandled exception causes ASF to terminate instantly, your issue is not unhandled exception.\n\n\"Not my job\", old as a world\n\nDo you even realize what you're saying or you're using random sentences without any context? I said that I'm not going to work it around because it's already reported, already acknowledged and already fixed in appropriate place. Do you realize that? Do you realize that it doesn't make any freaking sense to workaround a bug that won't exist in a week from now? Do you realize that what you're suggesting makes no freaking sense from any coding standpoint and you're talking without any point? Or maybe you want to argue that I'm refusing to fix a bug that doesn't exist anymore?\n\nAbout proper code reading. I've did it properly enough, but it doesn't mean I could read all the ASF code, especially if I see ASF's code (and C# .NET Core code as well) the first time in my life.\n\nThen perhaps you should make less assumptions and ask more questions, because you've assumed that ASF does not stop listener at all and you know better what it should do, which is wrong. You didn't analyze the code, you've noticed bunch of asynchronous functions without even checking how they're called, what is the general flow and what is the cause of your issue. In other words, \"I know nothing but I'll tell you what you should do\".\n\nWhy I won't do it by myself. It will take several hours to get into the development of .NET Core, write the code and test it before sending pull\n\nIt'd take you several days only to confirm that everything you've said until now doesn't make any sense. Runtime bugs should be fixed in the runtime, not in the ASF. Your solution wouldn't work because of TCP fin timeout on Linux that holds socket in TIME_WAIT state that you didn't even think of being possible, since you're so centered about what you think is right that you don't even understand where the root cause in fact is. You don't realize that on Linux incorrectly set socket will stay in this state for whole 60 seconds after process exit, and you don't understand how ASF waiting those 60 seconds and retrying to raise IPC interface is wrong, because it should not be happening in the first place. You also don't understand how the workaround should be done only where absolutely necessary, e.g. where I can't fix the runtime myself - this case does not apply here.\nI swear this is the last time I'm wasting my time trying to explain things when I should simply comment with \"No, you're wrong\".. > I looked into this problem and discovered that browser now sends a session ID using name sessionID in the POST request, but ASF uses sessionid instead, so I think that UrlPostRetryWithSession should be rewritten to send sessionID, not sessionid.\nThanks for that, you have prime example of Volvo fuckups and inconsistency right here. I love how half of community uses sessionID and other half sessionid.. As usual thanks a lot for your contribution! \ud83d\udc4d. I'm not answering questions that are unrelated to development on GitHub.\n\nCan we get background games redeemer log to know, what happend with keys after sending keys to bot? \n\nThat is already happening.. Full log?. > My bad, I thought it wouldn't be necessary\nIt's useful to ensure nothing fishy is going on. The actual key is far more useful since I could reproduce it, thanks!\nAnd yes, the way how you execute a command doesn't matter since it's ASF's internal responsibility to decode stuff like that before it's even passed further. It's entirely your choice in this case.. Value of the package is originally encoded as {ItemDescription = Demolish &amp;amp; Build 2017} and properly decoded to Demolish &amp; Build 2017 after HtmlDecode() pass. This is not a bug and actually contrary to your statement it's not reproducible with other packages that have & character because ASF is already decoding them prior to saving (unless, of course, they're broken like this one is).\nIt's simply a fuckup of developer/publisher - http://store.steampowered.com/sub/104120/ - nothing to fix in ASF.. Nothing to be sorry about, I was puzzled myself since I knew that ASF already includes proper html decoding pass since #99, so either I had to accidentally break it, or (like I suspected) Steam is sending us garbage. Proper \"solution\" would be to decode it twice, but this is not appropriate, as that would break actually valid names.. You might want to check how it's done in our web config generator - https://github.com/JustArchi/ArchiSteamFarm/tree/master/docs/WebConfigGenerator/src/locale\nIt's especially important to make localization compatible with our crowdin platform. This includes ability for IPC GUI to load appropriate .json translation based on user's browser language, as well as handling null/empty entries. Especially https://github.com/JustArchi/ArchiSteamFarm/blob/master/docs/WebConfigGenerator/src/i18n.js might come useful.\nOnce you're done feel free to also add your path to ASF's crowdin.yaml - https://github.com/JustArchi/ArchiSteamFarm/blob/master/crowdin.yaml. Also I didn't tell you previously - I really like that new IPCPassword authorization box, and it seems to work perfectly. Thank you for that \ud83d\ude42. Side note: you might also want to fix sending command for using proper POST method, since GET method was obsolete since months and finally removed with V3.1.1.6.\n\nEDIT: Nevermind, I see that you changed it already \ud83d\ude42. https://github.com/JustArchi/ArchiSteamFarm/wiki/Command-line-arguments\n\nAlso keep in mind that this command points to new \"ASF home\", so in other words - the directory that has the same structure, with config directory inside, and NOT config directory itself.. (which is why I updated wiki with example \ud83d\ude42). > Before you open an issue please review the contributing guidelines for this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.. > This can help users to start the checking on saleEvent in chat or with API for specific bots in needed time. We know, that steam servers sometimes have downtime and it will be better if users who have big amount of bots can better control the AutoSteamSaleEvent action.\n\nThis is not an argument at all. AutoSteamSaleEvent feature is supposed to be transparent and it doesn't require any manual interaction whatsoever. Having \"big amount of bots\" or \"steam servers downtime\" doesn't introduce any condition under which current solution would not work as intended. The logic was designed in a way to not only load-balance requests across bots in a way so they won't ask all at once, but also to keep in mind Steam downtimes and try again in reasonable period in order to not miss a single day.\nVoting on specific appID is not only out of the scope but also opens entirely new abuse ways, there is no way in the world I'd agree on something like that. ASF's module is not meant to vote on the apps you like, you're free to write your own tool that will vote on your behalf entirely independently of ASF, since ASF will not change your choices.\nI don't see any situation in which current solutions would not be sufficient and manually executing a command would be. Unless you have one in mind and I skipped over some important detail, this suggestion will not happen.. You didn't post any core details which would make this issue possible to evaluate.\n\nWhen exactly is the block triggered, by which actions, globally, locally, is it the amount of requests, amount of open connections, concurrent connections, specific resource or maybe some other matter considered?\nAfter what time the block disappears, is it fixed time since last request? When should ASF retry after hitting first 403?\nWhat resources are blocked? Does the block affect only steamcommunity part, or maybe steam store, steam API, steam network too?\n\nWithout answer to those 3 questions I can't even consider this issue in the first place since I don't know what ASF is supposed to do - saying \"it should not send requests\" does not specify any details. Do you want to globally stop all bots once first 403 is received? Because I guess not, and if not, then I must know the details in order to find the best solution.\nThe issue itself is OK and I guess we could further enhance ASF's logic in this case, but once you provide all details that are crucial to code it in the first place. At worst, time of the block and scope (steamcommunity, steam store, maybe both? If not both, are they independent and logic should be applied independently for one and another, or maybe just steamcommunity suffers from this?).. > Run this once or twice, and then you will get a nice AkamaiGHost IP block from all SteamCommunity links: for i in {1..20}; do curl -sS \"https://steamcommunity.com/market/listings/578080/MILITIA%20CRATE\" -o/dev/null & done;\nI tried to reproduce your akamai block and didn't succeed. Instead, steamcommunity replied to me with 429:\n<h1>Sorry!</h1>\n                        <p class=\"sectionText\">\n                                An error was encountered while processing your request:<br><br>\n                        </p>\n                        <h3>You've made too many requests recently. Please wait and try your request again later.</h3><br><br>\nUnless you can come up with reproducable ASF pattern that brings the block you're talking about, I'll consider it out of scope since I don't see how ASF could run into your problem by its own actions. ArchiBoT once parsed like 50 trades at once and didn't get any block, I've also never experienced what you're claiming, and I tried to reproduce it not only by following your own method but by following mine own ones as well.. OK, took me some serious DoS but I reached what you claim:\nroot@debian:~# curl -I \"https://steamcommunity.com/market/listings/578080/MILITIA%20CRATE\"\nHTTP/1.1 403 Forbidden\nServer: AkamaiGHost\nMime-Version: 1.0\nContent-Type: text/html\nContent-Length: 317\nExpires: Fri, 13 Apr 2018 03:52:34 GMT\nDate: Fri, 13 Apr 2018 03:52:34 GMT\nConnection: close\nI still don't see how ASF can reach THAT big amount of requests, considering there is global limit of 10 open connections at any given time, I'll need to check if the same hammering while maintaining 10 outstanding jobs at a time leads to that.. After deeper analysis:\n\nBlock happens based on number of requests sent across given time period, which isn't connected with number of active connections.\nI managed to send over 500 requests with 200 ms delay between each without triggering the block, while clearly getting one after ~50 requests with 100 ms of delay.\n\nBased on the above, ASF received an enhancement that ensures better compatibility in regards of above rate-limiting. The code is good enough in order to:\n- Limit 3 services (API, store and community) independently, since as you found out yourself and I confirmed, they're calculated (and therefore blocked) within a local scope. This means that they can be all accessed (and counted) in parallel.\n- Queue requests and never allow to spawn more than one per 200 ms.\n- If we reach maximum number of connections to given ServicePoint (which is currently 10), wait for open connection before queueing the next request. Thanks to that we won't cause a backlog of ongoing requests, therefore hammering Steam in case of it being unresponsive (as we could create 50 requests across 10 seconds and execute them all at once because Steam wasn't responsive during those 10 seconds and weren't able to catch up with us).\nThanks to that ASF alone is not able to trigger rate-limiting that you described above, which is how it should be done instead if trying to workaround the issue that should not happen in the first place. If you have other services accessing the same limited resources then you should double WebLimiterDelay and use similar method for all other tools, so e.g. using ASF alone with default of 200 ms, or using ASF and another tool of your choice, both having a delay of 400 ms.. 2018-03-17 13:42:19.0765 Error Parsing configuration from C:\\Users\\Archi\\Desktop\\ASF-win-x64 (1)\\NLog.config failed. Exception: NLog.NLogConfigurationException: Exception when parsing C:\\Users\\Archi\\Desktop\\ASF-win-x64 (1)\\NLog.config.  ---> NLog.NLogConfigurationException: Cannot access the constructor of type: ArchiSteamFarm.SteamTarget. Is the required permission granted?\n   at NLog.Internal.FactoryHelper.CreateInstance(Type t)\n   at NLog.Config.Factory`2.TryCreateInstance(String itemName, TBaseType& result)\n   at NLog.Config.Factory`2.CreateInstance(String name)\n   at NLog.Config.XmlLoggingConfiguration.ParseTargetsElement(NLogXmlElement targetsElement)\n   at NLog.Config.XmlLoggingConfiguration.ParseNLogElement(NLogXmlElement nlogElement, String filePath, Boolean autoReloadDefault)\n   at NLog.Config.XmlLoggingConfiguration.Initialize(XmlReader reader, String fileName, Boolean ignoreErrors)\n   --- End of inner exception stack trace ---\nLooks like https://github.com/JustArchi/ArchiSteamFarm/commit/9e886176cba95fb39410b8fcda0746f335f96f6b regression, thanks for report.. > Can't different MobileAuthenticator instance GetConfirmations in parallel?\nCorrect. This has to be a global semaphore.. And you're right, nobody said that you can't fetch confirmations in parallel. That semaphore is limiting number of requests over time, not their pure existance. Refer to issue #769 and configuration section on confirmations limiter delay. I checked personally that part during implementation and I also know how it works - if you think I'm wrong then try to fetch confirmations 10 times in a very short time, one after another. You'll get a block after 5 or 7.\nASF is working properly regarding that. There is only small improvement done as part of https://github.com/JustArchi/ArchiSteamFarm/commit/2a5a60e0943be4d9d56adddbd4621d08b88d833f in terms of this.. > Time saving. When only 1 game was added, it's a time wasting to farm only 1 game for 3 hours, for e.g., instead of this a bot can collect, let's say, 4 games, and then start auto farming them.\nThis is already happening if chosen farming algorithm takes multiple games into account.\n\nThose 3 hours which are spent for farming a single game could be spent for gaining hours in a preferable game (GamesPlayedWhileIdle).\n\nNot an argument at all. GamesPlayedWhileIdle, as the name implies, are games played while cards farming module is idle. Cards farming module is not idle when there is just 1 game in the queue, so there is not a single reason why GamesPlayedWhileIdle should trigger.\nASF is not any sort of \"hours booster\" and there is no any \"time wasted\" when idling just one game. ASF is already smart enough to optimize its run when you add consecutive games to already ongoing idle queue in terms of chosen algorithm, and any sort of \"hours boosting\" is out of ASF scope.\nGamesPlayedWhileIdle is extra addition that is supposed to work on top of well-defined cards farming logic, not as its primary function. If you don't want cards farming module to be active, then don't start it in the first place, we already have Paused bot config property for that. Either you want to idle cards in most effective way firstly, then idle your selected games, or you want to idle your selected game only. There is no third way about that, ASF is not the right tool to decide through some crazy heuristic what is \"more profitable\" for you, because the only logical heuristic to make is that cards always take precedence over empty hours.\nI don't see anything worthwhile in this suggestion to implement into ASF. Everything you asked for is either already possible or entirely out of the scope of the project. Moreover, even if we entirely ignore ASF scope for a second, then this is not going to happen anyway as per FAQ entry. Even current behaviour of GamesPlayedWhileIdle is already in contradiction with that entry, extending it further is simply not going to happen.. BTW you don't need to merge my master branch all the time, only when you need some changes that happened in the meantime, for example you want to test new functionality or ensure compatibility if I changed some IPC-related things.\nIt's good to do it every once in a while to ensure you're working on latest development code of ASF, but since IPC GUI is entirely independent of ASF, just ensuring everything works once you're about to finish WIP state is good enough. Up to you of course, just saying if you weren't aware.. As usual thanks a lot for your contribution! \ud83c\udf89. Thanks for your contribution! \ud83d\udc4d. Random suggestion - it'd be nice if BGR keys importer offered also a switch that would change order from name<delimiter>key into key<delimiter>name. Even better if it could automatically detect that based on regex (so \"order\" dropbox with 3 options - auto-detect, key-name and name-key, default to auto).. BTW, #799 should also solve lack of websockets on Windows 7 - runtime uses managed implementation in this case \ud83d\ude42.. It could be done as part of GET /Api/GamesToRedeemInBackground/{BotName} and DELETE /Api/GamesToRedeemInBackground/{BotName}, both should return/delete used and unused keys files. You can send a PR if you want to.. You should return 2 objects of Dictionary<string, string> - one for unused keys and one for used ones.. IMHO no need to explicitly divide it, user will want to get/delete both files 100% of time.. Personally I like @TrAnn3l suggestion but I leave it up to you, I'm awful at designing any type of GUIs.. @MrBurrBurr Can you check BGR after your changes to IPC GUI? I'm wondering whether this is some cache issue or code issue.\nUncaught ReferenceError: currentdelimiter is not defined\n    at Object.doneFunction (bots.html:689)\n    at h (sweetalert.min.js:1)\n    at g (sweetalert.min.js:1)\n    at HTMLButtonElement.u (sweetalert.min.js:1). Suggestion itself is alright but the cost of this feature working is too big, as ASF would need to fetch inventory on each item being dropped, and that is too huge to consider. If Valve included item type in notification, then I'd consider it. Besides, !unpack feature is already on the edge of ASF scope and I do not plan to extend it further.\nI recommend creating one stash bot and executing !unpack command periodically on that account instead. I don't see a need of any automated boosters unpack solution in ASF.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. https://github.com/JustArchi/ArchiSteamFarm/wiki/Localization. Not sure how it slipped through, thanks.. > I have a program that falls and does not write any logs.\nIf ASF is not able to initialize core logging module to even tell you what is wrong then why do you assume that it could print anything on the console?\nEntirely invalid suggestion.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. No need to look inside the source code, it's in plain sight on the wiki - https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration#auto-reload\nThis is not a bug, this is working as intended. Changing main ASF config triggers program restart due to loading new global config.\n\nASF ignores AutoRestart and shuts itself down after I edit ASF.json\n\nAnd this is not a bug either, even if the above was unintended. AutoRestart explicitly states that it controls whether the program is permitted to restart, and if it's not, it'll shutdown with error code of 0 instead. It does not affect program's routine in the slightest, only forbids it from spawning childs since user is in charge of doing that (very likely in script that executed the program in the first place).\nI don't see anything to fix here, neither to improve. If you do not wish ASF to restart/shutdown itself on config edit then do not edit its config (which a lot of programs explicitly forbid you from doing in the first place by holding write locks). If you want to have a playing ground for your configs and edits, then copy ASF.json to .ASF.json or other file that starts with a dot - ASF ignores dot files by default. When you change ASF's config directory during runtime then ASF properly will read the changes and commit particular action that is required, including program restart on global config edit.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.. https://github.com/JustArchi/ArchiSteamFarm/wiki/IPC\nIPC GUI is currently in preview state, which means that officially it's unsupported and we're also not accepting bug reports (standalone issues) for it.. > Before you open an issue please review the contributing guidelines for this repository.\n\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/.github/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.. Hi @felipe19930, thank you for taking your time reporting valid ASF issue.\nTrade is rejected\n\nTrade is not rejected, trade can't be accepted:\n2018-05-07 06:56:46|dotnet-27995|INFO|bot1|ParseTrade() Accepting trade: 3186822472\n2018-05-07 06:56:52|dotnet-27995|ERROR|bot1|GetConfirmations() Received unknown value for type, please report this: 5\nThis is a very important detail as it means that Valve added new confirmation type that ASF is unaware of, and it can't possibly know what it should do in this case.\n\nCan't reproduce with the same config and ASF v3.1.2.4\n\nNothing changed in terms of ASF 2FA between those two, it's a matter of reproduction, not a matter of fixes, but I'm very happy to see that you already attempted to help me \ud83d\udc4d\n\nSteps to reproduce\nI'm not sure.\n\nMe neither but I can speculate it has something to do with recent hold upon CS:GO items. In any case, here is what you can do:\nDownload latest ASF pre-release version (currently V3.1.2.4) and enable Debug mode (global config property). Reproduce your issue, simply make ASF state that value to report, and close ASF. Open log.txt generated by ASF and find the end of the log where ASF stated unknown value to report. Above that log line there will be unique link generated by ASF, starting with GET https://steamcommunity.com/mobileconf/conf?l=english&p= (this will happen only in debug mode). Copy-paste full URL and go under that link in your browser that is logged in as affected bot (it won't work without established session, so ensure that you have a browser or session logged in as given affected bot that tried to accept the trade under steamcommunity). Also be swift, since it's 2FA link that expires in around 5-15 minutes since being generated, so you can't hold that for later.\nIf you succeeded, you'll see a web page exactly the same as the one you'd see on your 2FA phone, with confirm/reject buttons and all details. Don't click anything there, right click on the page and \"save as\" - name your file however you want, e.g. 2fa.html, this will be the most important reproduction bit.\nNow create a zip file out of full log.txt that you recorded and used, and your 2fa.html file that you saved, and send that zip file on my e-mail: JustArchi[at]JustArchi[dot]net. Remember to NOT put it in any public location, such as this GitHub issue, because both files might contain sensitive information, as stated on the wiki of Debug description.\nThat will help me a lot since it's everything I need to check what the issue is, and what ASF should possibly do in this case. It might be a trivial fix or extra logic, depending on what Valve came up with.\nThank you in advance.. Thanks for your help! \ud83d\udc4d. Nothing to do with ASF - https://steamcommunity.com/games/593110/announcements/detail/1667896941884942467. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/.github/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/.github/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: technical issue is not ASF bug.. > Before you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/.github/CONTRIBUTING.md\n\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\n\nReason for closing: ASF's GitHub is not a proper place to ask questions unrelated to ASF development.. > It's your job as the developer of this program\nI'm not being paid for working on ASF. Your presence here is a privilege, not a right. You're free to move elsewhere.\n\nA neglectful dev isn't one I'd want to support with my money.\n\nPlease don't, I don't want any money from people that are unable to read and intentionally break the rules upon which I'm offering my support. Accepting it would make you feel like you have any right upon anything that is offered here, which you don't. You're a guest here, not a reason why ASF is created. ASF was not created for you. You either accept the rules or use it, or you do not accept it and you move along.\nSince this is your second invalid issue, be advised that the next one will be your last. ASF's GitHub is not the proper place to discuss how issues are being dealt with either - it's place only for ASF bugs and suggestions, which you're not capable of understanding. Technical issues are solved elsewhere, and it's clearly stated that if you're unsure whether you're encountering technical issue or a bug, then you should not use GitHub for that. I understand that you could be unaware of the fact whether your issue is a technical issue or a bug, which is why it was closed, but being mad about it when it's stated clear as day that invalid issues will be closed immediately and won't be answered, is outright stupid. If you don't know what ASF's GitHub is for, then you shouldn't use it. This is not a technical support, and your issue is not related to ASF development in any way - it does not benefit the program, it does not include anything to improve in the ASF code, and it does not belong here, regardless if you agree with it or you do not.. I'm also wondering if we can implement something more clever than 6-digit code but for now it makes the most sense I think, so we can keep it like that, unless somebody has some better idea.. Another option I thought of would be making it accept 6 different settings ,-delimited instead, which would be !privacy bot 1,1,1,1,1,1. The advantage of this method is the fact that once you move to Enum.TryParse, user will also be able to use Public,Private,FriendsOnly,Public,Public,Private. In addition to that, parsing is more simple with splitting for ,, I'd recommend going this way, it's the one that makes the most sense.. Rest looks good, thanks for considering fixes.. Did you do a final test if everything still works fine after your modifications?. Thanks for your contribution!. Thanks for report! \ud83d\udc4d. As @MikeLund stated above.. Could you include all docker commands that you used for setting up ASF docker container? This includes port forwarding arguments, thanks.. Worked fine for me when using http://*:1242/ prefix instead, on both 127.0.0.1 and 172.17.0.2.\nIt also worked fine with http://172.17.0.2:1242/ prefix when querying 172.17.0.2.\nYou could also do other magical tricks such as setting http://172.17.0.3:1242/ as prefix and connecting to 127.0.0.1 anyway with curl -H \"Host: 172.17.0.2\" http://127.0.0.1:1242/.\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Docker#ipc is explicit in this regard:\n\nAssuming you set IPCPrefixes properly to something like http://*:1242/, the above command will make IPC client examples work from the host machine.\n\nWhy exactly docker struggles with ASF listening on 127.0.0.1 only - no clue, because it works with using nginx as reverse proxy, which shows that there is no issue on ASF side for that. Perhaps it has difficulty of proxying loopback-only internal container interfaces, as the connection never reaches the bridge in the first place.\nIn any case, this is not ASF bug. I recommend setting IPCPrefixes appropriately, either to http://172.17.0.3:1242/ or http://*:1242/. There is nothing to do on ASF side regarding this.. BTW, 404 NotFound happens when your Host does not match any of ASF IPCPrefixes. If you have ASF set up like you claim that you do:\n\"IPCPrefixes\": [\n    \"http://172.18.0.2:1242/\",\n    \"http://127.0.0.1:1242/\"\n  ],\nThen you can reach ASF with Host: 172.18.0.2 or Host: 127.0.0.1, regardless of internal docker proxying. Natural way of doing that would be connecting via http://172.18.0.2:1242 or http://127.0.0.1:1242, but you could also connect through anything, as long as you supplied proper Host header which indicates which network resource you want to fetch. This is why \"magical trick\" above mentioned by me still works, even though ASF no longer listens on 127.0.0.1 at all.. I digged a bit more, and I kinda confirmed my initial thoughts: https://forums.docker.com/t/network-param-for-connecting-to-127-0-0-1-in-container/2333/4\n\nI just tried, I don\u2019t think you can expose loopback, you are going to need to expose your service on eth0\n\nSo yes, you can't have your service listening on 127.0.0.1 only, you have to expose some extra interface, even if it's going to be 172.17.0.2 - ASF can't listen on loopback only, unless you're accessing it from the same machine (reverse proxy or not). This is why nginx with reverse proxy of 127.0.0.1 works - because it connects through loopback, docker does not - you're reaching docker container through non-lo interface.\n\nI don't know if you have seen my curl request examples but I indeed did issue exactly that request.\nI got to admit that I have overlooked the option to set * as host. That worked for me now. But it is still strange that the setup I intended did not work (maybe it is a bug but just obscured?).\n\nUse docker inspect for getting IPAddress of your machine, then use it as the only IPCPrefixes:\njson\n{\n  \"IPC\": true,\n  \"IPCPrefixes\": [ \"http://172.17.0.2:1242/\" ]\n}\nRun your ASF docker container, I explicitly forward 127.0.0.1 only:\ndocker run -it -p 127.0.0.1:1242:1242 -v /tmp/test/config:/app/config --name asf justarchi/archisteamfarm\nAll of below work for me:\ncurl -H \"Host: 172.17.0.2\" http://127.0.0.1:1242/Api/ASF\ncurl -H \"Host: 172.17.0.2\" http://172.17.0.2:1242/Api/ASF\ncurl http://172.17.0.2:1242/Api/ASF\ncurl http://127.0.0.1:1242/Api/ASF alone doesn't, even with 127.0.0.1 inside IPCPrefixes. This is because even if you input 127.0.0.1 in IPCPrefixes, this is still loopback interface only.\nHowever, if you docker exec -i -t asf curl http://127.0.0.1:1242/Api/ASF, execute curl from inside the container, you get proper response, which means that regardless what is happening inside linux networking, there is no bug in ASF regarding this.\nIf you ask me, Linux lo interface is special in this regard and you can't claim -H \"Host: 127.0.0.1\", even if you can make a connection (probably because docker internally doesn't use loopback, and ASF refuses to handle 127.0.0.1 request that doesn't come from loopback).\nWhen you use IPCPrefix of *, situation is different because ASF doesn't do any checking against interfaces being used, * stands for all. This is because ASF doesn't listen on loopback anymore in this case, it listens on 0.0.0.0, so regardless which way you connect, you will succeed. With 127.0.0.1 alone you won't, because 127.0.0.1 alone would restrict 127.0.0.1 to loopback only. Even if you define both 127.0.0.1 and 172.17.0.2, 127.0.0.1 is still restricted to loopback only, while 172.17.0.2 to eth0.. In short tl;dr, if you want to access 127.0.0.1:1242 from host machine, then ASF inside docker container has to listen on http://*:1242 because only then 127.0.0.1 is accessible through something else than loopback interface. You can't fake non-lo connection as lo, even if you fiddle with headers. This does not apply to non-lo bind addresses, such as 172.17.0.2.\n\n. As long as you restrict access yourself, there should be no problem with that. You could also go crazy and set up nginx inside ASF docker container as reverse-proxy to it, as long as nginx doesn't mind receiving 127.0.0.1 requests on non-loopback interface. This would potentially work, because nginx would still communicate with ASF through loopback, so ASF could be configured as 127.0.0.1 only.\nHowever, this is very silly if you ask me. It's much easier to use *:1242 and just restrict yourself, you have docker for a reason \ud83d\ude42.. > Yep, I know, no support for IPC.\nYou got it wrong, no support for IPC GUI, not IPC itself, because IPC is entirely within ASF scope and support.\nAs of the rest - https://github.com/JustArchi/ArchiSteamFarm/issues/754#issuecomment-370865690. Let me know if this issue won't disappear after we're done with https://github.com/JustArchi/ArchiSteamFarm/issues/799. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: IPC GUI is out of support, as stated on the wiki.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. AppVeyor is waiting for https://github.com/appveyor/ci/issues/2373. Travis is waiting for https://github.com/travis-ci/travis-build/pull/1397. Like @Abrynos said above, if you want to improve ASF's code, please open a pull request instead.. I'm going to regret this \ud83e\udd14 . @MrBurrBurr please review.. @MrBurrBurr Monthly bump.. git fetch https://github.com/JustArchi/ArchiSteamFarm master\ngit checkout FETCH_HEAD\ngit checkout -b feature-805\ngit cherry-pick 2f91ce17d32e5ace3e435a141bfddffecfddd38a\ngit push origin feature-805\n\ud83d\ude09. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nASF has rather strict scope - idling Steam cards from Steam games + basic bots management. ASF scope is very subjective and evaluated on practical/moral basis - how much this feature fits ASF, how much actual coding effort is required to make it happen, how useful/wanted this feature is by the community and likewise.\n\nIn particular, we've found out your issue to be out of the scope of ASF project, but we wouldn't have anything against a PR implementing such functionality.\nPlease check out suggestions for further explanation.\nHave a nice day!\n~Archi. Thanks!. People that would like to test this earlier can download AppVeyor build available in \"Details\" of CI checks below. It's in artifacts tab. Just be sure that you know what you're doing if you decide to do so, as documentation is not ready yet (and won't be ready until I merge this).. . Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. The current limitation is due to POST request size, as stated in the source. In addition to that, Steam servers are awfully badly coded for trades with huge amount of items, and even current limit is far above what we decided upon initially (150). I do not plan to make this configurable, it's not something the user should set because it doesn't depend on user preferences - it's the maximum value that was decided as sane enough to not break major functionality such as checking history of your trades, or sending them in the first place.\nThe only thing which I'm willing to accept is you doing your own tests with manually increasing this value in your own self-build and confirming that higher value of X doesn't cause any of 3 outstanding issues:\na) Doesn't make your trade history impossible to fetch (Steam is coded poorly).\nb) Doesn't cause ASF to timeout during accepting the trade (trade must be accepted within 60 seconds, in practice should be 50 or less).\nc) Doesn't cause exception in ASF's internal WebBrowser due to POST limit size (least of your issues with .NET Core).\nIf you do all tests above, you can send a PR with new default value.. > An alternative would be to send/confirm/accept just small trades consequtively, until the inventory is empty or all lootable Items were transfered.\nYou assume that second side of the trade is automatically accepting them in timely manner, which doesn't have to be true. This is why ASF has outstanding limit of sending maximum 5 trades at once. I prefer people to send !loot several times rather than sending it once and sending Steam to space at the same time, sorry.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. @MrBurrBurr please review when you can, thanks.. The above can be part of another PR, going to merge this one for now, thanks!. Offline mode is 0, not 7. Most likely it doesn't work because ASF doesn't support new beta chat yet.. Out of the scope of mainline ASF version.. You don't have the same problem, this crash does not happen on ASF launch.. Exactly, you have the same issue that #825 and #827 (both invalid) are already about, so can you kindly start reading FAQ before I lose my patience and proceed to banning for disregarding contributing guidelines? Thank you kindly.. I took a look and couldn't reproduce your issue. You most likely corrupted your ASF install by removing core files/folders, as ASF is not able to localize \"1 day\" in ASF update info.\nNothing to fix, technical issue.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: you clearly disregarded our notice to read FAQ.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. > Your remark about the lock should also apply to the function ResponseAdvancedLoot, doesn't it ?\nYes, you can change it as part of this PR, or I'll change it myself afterwards.. It's OK, I'll change advanced loot myself since I also have some refactoring in mind, thanks for your contribution!. https://github.com/JustArchi/ArchiSteamFarm/issues/825. First thing is OK since indeed null check is done above, so that one is redundant. Although second thing is up to debate since in theory yes, we'll never have more than one loop pass there, but the fact that we expect just one packet is ASF logic, and while loop on established connection should be in-place IMHO. I don't know what your static analyzer says about that one but I'd rather keep this one as it is. C# compiler is smart enough to optimize it properly while code-wise while loop is far more appropriate and allows further enhancements without wondering why we're waiting for first packet in if only.. Thanks for your contribution!. https://github.com/JustArchi/ArchiSteamFarm/wiki/Logging. https://github.com/dotnet/coreclr/issues/18486. Heroku doesn't support .NET Core environment officially.. The suggestion itself is totally alright and I'd probably even consider it if there was automatic way to detect unmarketable cards, there is no such way. The best ASF could do is check if the card that has just dropped in inventory is marketable and stop farming afterwards, but at this point it's already wasted effort and saving mere hour is totally pointless, on top of extra inventory request which I try to avoid at all cost as those requests are already pretty limited.\nMaintaining global unmarketable games blacklist is not going to happen either, nobody has time neither willings to do it, and it's simply not worth it just to have an option to avoid farming those games. I'd rather suggest contacting with somebody who maintains such list of unmarketable games (barter.vg comes to mind) and asking kindly to maintain Blacklist for ASF to use, it's very simple to generate it based on existing data, but fetching that data and updating it is far above ASF scope.\nIf by any chance I missed some detail and you have an idea how to detect your game in automatic and programmatic way before even farming it, feel free to tell so I'll evaluate, or send appropriate PR. Most importantly - NOT relying on any third-party sites or APIs, we most definitely won't increase ASF's dependencies on third-party APIs for optional feature.\nThanks for valid suggestion.. Illegal according to Steam ToS, not going to happen.. https://store.steampowered.com/subscriber_agreement\n\nYou may not use Cheats, automation software (bots), mods, hacks, or any other unauthorized third-party software, to modify or automate any Subscription Marketplace process.\nAn example of a Subscription Marketplace is the Steam Community Market.\n\nNothing to discuss.. ToS is not up to discussion, as stated in contributing guidelines that you've read.. I very much doubt that you can tell a difference between delisted game with marketable card drops and delisted game with unmarketable card drops using above APIs @Pandiora.. I must admit that this is better than I expected, I might indeed make use of that info, wishlist.. Making unmarketable cards skippable is pretty useless and stupid, but adding another farming order by marketable cards makes total sense and this is what got implemented - not a filter.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: no support for outdated mono versions.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: you clearly disregarded our notice to read FAQ.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Not a bug - this is current limitation of HttpListener and should be solved by the way while working on https://github.com/JustArchi/ArchiSteamFarm/issues/761.. Feel free to send appropriate PR if you want to get it fixed earlier. I'll add proper notice in the wiki about this in the meantime.. This is now possible to achieve from version 3.3.0.7+.. Implemented by @Abrynos in https://github.com/JustArchi/ArchiSteamFarm/pull/843. As stated on the wiki, usage of AutoSteamSaleEvent is transparent and no command for manual activation will happen. It's completely useless and counter-productive, on top of being out of the scope of ASF to do it unconditionally.. This is what I was about to bring up next \ud83d\ude1b - yes. And you can remove empty line as well. Don't forget to save it in a variable like string botRegex so you don't calculate substring every time in lambda.. Thanks for your contribution! \ud83c\udfc6. I think it'd be a very good idea to sort all of those lines under [*.cs] for easier future edits.\nIs there a full documentation what we can use for *.cs files? Is there similar documentation for other files ASF makes use of, such as *.sh?. I found one - https://docs.microsoft.com/en-US/visualstudio/ide/editorconfig-code-style-settings-reference#example-editorconfig-file\nBasically we want to do three things starting from this one:\na) Adapt all rules for ASF - you have CodeStyle.vssettings and ArchiSteamFarm.sln.DotSettings that specify the convention.\nb) Remove all rules that are the same as default ones, we don't want to clutter the file with default settings\nc) Sort entire document and add a new line between each category (such as dotnet and csharp)\nOn top of that remove all comments since they're not needed. Things like tab indent could be used for all files.. My full convention is in R# .DotSettings file, you can install Resharper (trial will be enough) and look it up in R# settings - this is what I use as it's the most complex coding convention plugin, so you have literally everything there, even order of modifiers.\n\n\n. Adapting above to .editorconfig will be the best - I don't expect .editorconfig to have everything that R# offers (impossible), but everything that we can write in it, should be there, with potentially more to come in the future \ud83d\udc4d.. Just get rid of all tabs there IMHO, we don't need extra spacing, it always looks bad. name = arg is enough.. I see no reason why we couldn't apply universal settings to all files ([*]) and the rest only to [*.cs] ones. Also I see no reason why we need to split pascal and camel case into two blocks instead of splitting it into naming_rule, naming_symbols and naming_style, or even doing just one.. It'd be a good idea to specify severity of suggestion and above for all violations of code style, as none is same as being disabled. An example of that would be dotnet_style_qualification_for_field which is false:none by default, but we'd like it to be false:suggestion instead.. I don't know, we'll either go with suggestion for all or warning for all, I don't see any of those rules \"more severe\" and \"less severe\", everything needs to be fixed in exactly the same way. Suggestion probably makes more sense since I don't consider convention violations to be emitted as \"compiler warnings\", compiler warning should be reserved for something that doesn't make sense, not writing in capital letters or using spaces.\nSo I recommend to go with severity of suggestion for everything.. And does it work when you intentionally violate the rule? Is suggestion displayed, and error emitted with changed levels?. You don't need permission for that - it's you stating whether it's work-in-progress or not, when you finish working on it and remove it then I know that I can merge it \ud83d\ude42. Thank for your contribution! \ud83c\udfc6. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this question is not related to ASF development in any way.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. @MrBurrBurr Please review.. As per above. Thanks for review @MrBurrBurr . Except you still based it off your master and not my master, so effectively your PR is in exactly the same state as it was \ud83d\ude00. As per above. Thanks for review @MrBurrBurr. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nASF has rather strict scope - idling Steam cards from Steam games + basic bots management. ASF scope is very subjective and evaluated on practical/moral basis - how much this feature fits ASF, how much actual coding effort is required to make it happen, how useful/wanted this feature is by the community and likewise.\n\nIn particular, we've found out your issue to be out of the scope of ASF project, but we wouldn't have anything against a PR implementing such functionality.\nPlease check out suggestions for further explanation.\nHave a nice day!\n~Archi. Before I even start analyzing the code itself, I want to analyze the concept, because I can't see how automating this could be beneficial to literally anybody.\nSets do not work based on the same amount of items. Say I have 5 dupes of the same card that could make a full 5-cards set after matching. Suddenly the next day I find out that 4 of my dupes were traded for 14-cards set heaven island vr mmo or some other game with considerably more cards. Suddenly I have 1/5 and 4/14, how is that condition ever wanted by any user? Why ASF should decide for user what is beneficial and what is not? Why it should even trade those items in the first place?. IMHO this is going too far out of what ASF wants to automate. There is no sets logic, no cards in sets logic, no badge level logic and literally anything. Enabling this flag would open user to all kinds of abuses, such as ruining his unmarketable sets just because he has 2 or more ready in \"favour\" of getting trash cards he doesn't want to or he already has maximum level into.\nThere will be crapload of users asking why this option doesn't do what they want it to do, those that will ask why this option is ruining their sets and your change being in direct contradiction with entire trading logic that ASF established, where neutral+ will no longer mean \"progress or doesn't change\", it'll actually mean downgrade even when user owns just a single set.\nSaying \"you don't have to enable this if you don't want to\" doesn't solve any problem with this change, it's not whether user wants to enable certain activity or not, it's whether ASF should support certain activity or not first and foremost, and I see so many of possible abuses and so many issues I'll need to deal with it if I agreed to do this that I honestly don't want to see anything like that in ASF.\nJust because a set is unmarketable doesn't make it equal with all other unmarketable sets - STM setting works with STM logic, both neutral+ that works with user bots and any that works with trade bots. Since the option does not benefit the user in any way, and ASF is not a trade bot, this commit brings nothing good to the project except increased burden for me to maintain it, and I'm not going to maintain a thing I see no reason to keep up in the first place. This type of trade is not supported by STM in any way, I don't believe any user could benefit in any possible way by being exposed to this logic.\nI don't consider any cross-set trading to be inside of ASF scope, neither as an enhancement, nor as a PR. This is mainly because there are too many edge cases and too much of user-logic needed to implement this properly, and ASF is cards farming program, not a cross-set trade bot. ASF should first and foremost help its own users, and only if they have nothing to lose, try to help others, never help others for its own cost, even if user agrees to do so. I do not implement bitcoin miner in ASF and say that \"you can disable it if you don't want to mine\". Even with all potential fixes that would take 5x as much code as you wrote, ASF still wouldn't be the right project for this feature to exist. I have no choice but to reject this PR as a project maintainer on grounds of maintenance, flawed logic, possible abuses and no benefits for anybody running this setting. I strongly recommend to run your own trade bot next to ASF that would handle those types of trades yourself, if you want to.. It's simple - MatchEverything just disables existing bit of logic that SteamTradeMatcher already uses. In addition to that it fulfilles STM's trade bot status, but that is only done by the way. Both option are supposed to work with STM, not define their own set of arbitrary rules.\nIn addition to that, this option does not open user to any kind of abuse your suggestion would. This is because cards from the same set have exactly the same value in long-run, so even if you exchange 5 x 5 finished sets for 25 dupes of the same card, you still lost only potential of making sets and matching time, but not any sort of value, neither now, nor in long-run.. > In addition to that, this option does not open user to any kind of abuse your suggestion would. This is because cards from the same set have exactly the same value in long-run, so even if you exchange 5 x 5 finished sets for 25 dupes of the same card, you still lost only potential of making sets and matching time, but not any sort of value, neither now, nor in long-run.\nI do not agree with what you said above. In addition to that, even if it did, the pure existance of this option in no way justifies implementing another similar feature - all features are independent.. > any pull request is welcome and should be accepted, unless there is a strong reason against it.\nI've explained to you above my strong reasons why this feature is not going to get accepted. Several of them. Just because you do not agree with my reasoning doesn't make my arguments contradict with what I accept in PRs. This PR is not going to happen due to at least several entirely different reasons out of which you can't fix at least a few outstanding flaws in logic that your feature is based on. Just because you don't see them as logical flaws does not cause my strong reasons to disappear.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nASF has rather strict scope - idling Steam cards from Steam games + basic bots management. ASF scope is very subjective and evaluated on practical/moral basis - how much this feature fits ASF, how much actual coding effort is required to make it happen, how useful/wanted this feature is by the community and likewise.\n\nIn particular, we've found out your issue to be out of the scope of ASF project, but we wouldn't have anything against a PR implementing such functionality.\nPlease check out suggestions for further explanation.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour and not a bug. It's you who misunderstood how this property works.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. The way you activate this functionality has no outcome on whether it works or not, and it works for me. Your issue is not a bug.. Pro tip: if you didn't make a typo in BotBehavior then you wouldn't have this problem. Pro tip 2: if you used config generator then you wouldn't make this typo in the first place.. It is possible but it'd be even more confusing as of how this works and why this alias exists in the first place. You do not make typo in JSON properties because you either use config generator and can't generate invalid json in the first place, or you use example.json and never rename properties. Adding aliases in order to foresee what mistakes users can do is entirely counter-productive.. Feel free to remove WIP status once it's ready to merge \ud83d\ude42. As usual thanks for your contribution! \ud83c\udfc6. Much better \ud83d\udc4d. I'll review the rest tomorrow - try to take a look at your own code once done and see if it's written in a way that is proper before pushing it for review \ud83d\ude09. I feel like you're trying to fix stuff too fast and you're only making more mistakes because of that instead of taking my advices and slowly implementing them in a way that makes sense. For example that last commit made things actually worse than they were before \ud83d\ude02.. I'm not entirely sure if that parallel execution in GET will work the way we want to. Add:\nc#\nArchiLogger.LogGenericDebug(\"Executed\");\nawait Task.Delay(10000).ConfigureAwait(false);\nIn GetUsedAndUnusedKeys(), then execute GET with ASF as an argument (and multiple bots defined) and check if all of them print above \"Executed\" at once. (and also if the request takes 10 seconds for all and not e.g. 30 seconds for 3 bots).. After you do above test and verify that parallel execution works like it should you can do Cleanup file in R# on each file you modified so it has proper order of functions and fields, on top of all other changes \ud83d\ude42. Alright, that should be everything then. Thanks for your contribution! \ud83c\udfc6. No and this is not planned, entirely out of the scope of the program.. ASF github is not a place to ask non-development oriented questions.. @Abrynos you want to send PR for this one? \ud83d\ude42. Implemented in #860. > Rewrite IPC.cs to utilize a dictionary mapping strings to functions and optionally other data in either a second dictionary or mapping to a tuple/triple/custom type in the first one, which would be better overall as we would only have to search one dict then.\nThis is entirely wrong approach. Instead, replace current switch in ASF commands with a dictionary that maps commands (string keys) to appropriate functions responsible for them (values). Each function should be static and take same amount/types of arguments, and do appropriate parsing inside. This way you're not duplicating the work and forcing future updates to cover both existing switch and new dictionary.. Also descriptions are out, ASF is not in charge to explain what a command does, that's what wiki is for.. ASF is not in charge to explain what a command does - Abrynos told you this above.\nThis doesn't mean that IPC GUI can't do this, but I see no reason why ASF should be bundled with some obsolete commands page instead of fetching current one via web.\nIn fact, I'm not even sure if this API endpoint is appropriate, I think that IPC GUI should just parse wiki instead.. My current idea is to bundle our entire wiki folder to www and just make it possible for @MrBurrBurr to parse whatever he wants in whatever locale (!) he wants, so in addition to solving commands we could also do other things such as showing descriptions for properties. And that would be fixed to build, so not even a remote request to github wiki required.. This has one huge downside though, entire compressed wiki takes 5 MB, and I don't consider it good to bundle ASF with 5 MB of extra unnecessary documentation to download for people that do not need it. I'd rather use revisions on GitHub to automatically fetch given page at older date.\n(In comparison: entire compressed www folder is just 100 KB). Yep, this is what we're going to do @MrBurrBurr :\nThere will be no bundled wiki together with ASF due to its size. There will also be no commands endpoint as I don't believe it's required - that's what wiki is for.\nMy recommendation is to parse Commands wiki page and based on its structure extract available commands for quick usage. This is simple, effective, and the very same approach can be used for all other parts, such as showing descriptions of properties available in config editor/generator. This also allows you to use appropriate ASF locale, showing help/descriptions in native language, which is something ASF would not offer due to its scope.\nIf you absolutely need/want to extend it to fixed point of time (which I do not recommend, as the wiki is often updated with fixes after the release), then you can do it like this:\n- Get ASF version via API, what you're already doing\n- Fetch GitHub info about that version via their own API - parse and save created_at property from this.\n- Get revision history of your commands article and pick ./td[@class='commit-meta']//a[@class='commit-id']/@href of the //tr that has td[@class='date']/relative-time/@datetime closest to your created_at - for example the last revision before your created_at.\nOnce again, I find it wrong due to various different factors, but it's your call. If you want to implement something that works at least semi-properly, then in addition to date of your release you can check date of the next release and if it doesn't exist, use latest revision, otherwise use revision with date prior to that release. This at least makes sense in my head this time, as I never update wiki with stuff before pre-release arrives, so any wiki updates after pre-release probably are already fixed for that one, while all wiki updates that happened after our release but before next one, are almost guaranteed to be related to existing version and not upcoming stuff.\nTherefore the most correct and middle ground is taking a revision with date earlier than created_at date of the next ASF release compared to currently running one. This sounds like something that can even work properly most of the time (although I'd still fetch latest document and call it a day).. Take a break for a week or so (I expect hotfixes in master regarding #810) and then rebase against master, thanks.. So definitely NOT 3.3.0.0 \ud83d\ude09. Nothing stops you from naming your bots the same as your vanity URLs. This was added mainly for enhancing debugging experience where I can check some public account details before moving forward. Since ASF categorizes bots by botnames everywhere, I don't see any need for further confusion - you have IPC API if you'd like to categorize bots by SteamIDs.. ASF is not hours booster - GamesPlayedWhileIdle is already on the edge of ASF scope and no further automatic additions are planned. You can implement your own logic via IPC if you care enough about getting rid of manual approach - idling games based on custom set of conditions is outside of ASF's scope - ASF's scope is to idle Steam cards, not hours.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Quite important bug to the collection:\nRight now IPC GUI assumes that it's always running on the root domain, for example on 127.0.0.1 or example.com.\nThis assumption will no longer work with ASF 3.3.0.7+ that introduces Kestrel http server (#898) that fixes missing functionality asked in #840. Moreover, this assumption should never happen in the first place since users could already run reverse proxies before ASF with url rewriting and use whatever URLs they wanted, but let's assume this was rather rare until now.\nUser might now run ASF's IPC server with custom base path, such as 127.0.0.1:1242/IPC or example.com/ASF. IPC GUI is hardcoded in a lot of places to always ask for /Api/XXX which is wrong, as in this case /Api/XXX will not work, correct usage would be /prefix/Api/XXX, or just how it should be done in the first place: Api/XXX. Same goes for other parts, e.g. /locale/strings.json.\nPlease consider it one of priority fixes for new update, thank you in advance @MrBurrBurr.\n. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this question is not related to ASF development in any way.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. ASF doesn't work on user-application level. You do not add logic that will listen to faceit launchers and stop the process. If you absolutely have to stop/pause given bots then you can use IPC for that by making a shortcut to sending a command remotely. Afterwards you can add this action as a pre-action to launcher, and a post-action that will unpause/start bot again. All of that though is on you, as ASF is not (and should never be) in charge of making decisions based on the state of your OS. ASF only abides to Steam network, and if Steam network doesn't claim you playing, then ASF is free to idle. If Steam network claims otherwise, ASF is already patiently waiting for the session to be released. ASF doesn't even care if you have Steam or CS:GO installed, it's entirely irrelevant for Steam network process.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. > Also, this feature is NOT a replacement to !owns, at all. That's why I proposed a new command, !ownscache or whaetever.\nIf you sticked with this then I'd tell you that this feature is also entirely out of the scope of ASF, as ASF as a program does not have a purpose of keeping local database of owned games for you to fetch, but to idle Steam cards.\nThe proper way to go about this issue is to make use of the fact that we're already listening to game events for idling process, so we have the ability to say precisely when our games owned change. And thanks to that we can cache our owned games response until that event arrives, effectively avoiding sending consecutive requests until it's required - and precisely this got implemented, not some \"file cache\" or other \"ownscache\" command that is entirely counter-productive on top of being out of the scope of the project. You will not be able to query all bots right away after ASF startup, but once-queried bot will keep its cache for as long as it makes sense, allowing you to do consecutive queries without overhead.. Process management of ASF is not inside ASF's (program) scope, that's what system's service daemon (such as systemd, upstart or sysvinit) is for.. @MrBurrBurr please review.. Hey there! Thank you for contacting our development team at GitHub.\nAs stated on the wiki, IPC GUI is out of support and no standalone issues for it are being accepted.\nHave a nice day!\n~Archi. \n. @MrBurrBurr Please review.. Scheduled rework does not conflict with merging the fix for existing behaviour considering it's already done, as long as it doesn't break anything I'd like to see it in.. Closing PR then, thanks for review.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this is intended ASF behaviour / technical issue / not a bug.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Pending to check if https://github.com/JustArchi/ArchiSteamFarm/commit/c9f90da805cc53e4a4fecce6dc0d3190b385c501 solved this issue.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: you've clearly disregarded our notice to read FAQ.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Apart from those 4 last misc fixes everything else looks good, thanks \ud83d\udc4d. After those very last changes you can do a final check if everything works as supposed to \ud83d\udc4d. Science requires sacrifice \ud83d\ude42. Also I'm pretty sure that the web request will still trigger for normal steam gift as well, I'm wondering if we can somehow avoid checking for digital cards in this case.. Perfect, merging in a second once my CIs are done building and testing, thanks a lot! \ud83c\udfc6. Yeah, the function will return no gids to redeem, which is why it's correct as it is, but we could hack it around further with checking when no guest passes callback arrived in order to check available gifts over web.\nHowever, that would be very hacky as events are asynchronous and can arrive at any order, so assuming that we'll have notification -> guest pass or guest pass -> notification is prone to issues, as well as assuming that those events arrive in timely manner, as they can also entirely desync themselves or not arrive at all. This is why it's as good as it can be, considering we have no more data to work with (sadly).. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this question is not related to ASF development in any way.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Already possible, invalid enhancement.. Hey there! Thank you for contacting our development team at GitHub.\nAs stated on the wiki, IPC GUI is out of support and no standalone issues for it are being accepted.\nHave a nice day!\n~Archi. Winning a key from a giveaway is not a valid argument for intentionally degrading performance of BGR at all times. You can add your key on the end of the queue also after the keys file is deleted, because nothing stops you from adding more keys while existing queue is running.\nBeing able to activate key in the meantime is also not an argument for degrading BGR's performance - there is no reason to not activate keys all at once when you have just 10 or so because you're not able to get hit by RateLimited in any possible redeeming scenario. Even if you have more keys to redeem, you can still add them at the end of the queue, and if you require a priority queue then BGR feature is not for you, use your own tool and redeem command.\nASF uses the keys file for import, not for maintenance. You can use IPC API and write your own tool for feeding ASF keys to redeem if you have a particular need of achieving your own type of queue with your own logic and rate-limiting. Artificially limiting BGR for convenience is not a valid argument.\nAnd this is on top of already available solution - GiftsLimiterDelay which you entirely skipped over.. There is nothing to think about, ASF is mainly a program with intention to idle cards. Since we don't know which keys are for what games in particular (and even if we did we would still have non-reliable information), redeeming as many games as possible in as little time as possible is beneficial for ASF as it can choose more optimal idling algorithm and not waste time in between consecutive redeems, as it can operate on whole picture for at least an hour of being rate limited. This is especially visible with hours-limited accounts that would have a full hour in 20 games after such batch compared to much less optimal multiplication of 3 minutes in each game.\nASF is not the right tool to implement artificial limiting for no good reasons - if some user needs it then he can do it himself with existing solutions, especially IPC API, as compared to no way of reaching raw performance without 4x as many switches and config properties. All existing limiters and settings were implemented because those restrictions are enforced by Steam itself. Redeeming 20 keys in 10 seconds is valid and not restricted, this is why such limiter does not exist. Just because adding one could make sense doesn't mean that ASF as a program should have one, as ASF is not keys redeemer, it's idling program.. @Ryzhehvost of course I'd happily extend GiftsLimiterDelay from byte to ushort if only need arises, there is not a single reason in the world why I should refuse such request, it'd be outright stupid if not even harmful.\nBut people don't want to understand the point I make, they think that the program should serve them the way they think is appropriate and how come some arrogant programmer dares to disagree with their totally flawless glorious idea. Luckily I don't have to explain that the program isn't dedicated to them but to the person mentioned in the program's title - something people are not used to hearing.. Don't open meaningless issues, this is not any issue that we want to track, send PR instead when appropriate.. Thanks! \ud83c\udfc6. > An additional application for keys with easy activation via ASF\n\nDoes your suggestion fall into ASF scope? Yes\n\nI'm not sure if you have your own definition of what the program's scope is, but your \"suggestion\" is as far from it as possible to ask. No, creating additional keys management application is not within ASF's application scope.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this question is not related to ASF development in any way.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. I'm going to move linux-arm back to netcoreapp2.1 sooner because of another segfault related to new IPC code that exists on 2.0 but not 2.1. Since this issue was rather rare and is already fixed in upstream, I can keep 3.3.0.7+ prerelease until this gets fixed for good.. Won't be a problem anymore in new UI.. ASF-ui stuff has been moved to https://github.com/JustArchiNET/ASF-ui/issues.. Since you didn't include any details that you were kindly asked for, based on your lack of information I can state that this is not a bug and won't be fixed as new items notification should not be cleared by ASF after farming.. This is not a full log recorded while reproducing the problem, please provide full log as recorded by ASF, not the half that matters.. I didn't find anything suspicious in your log or configs, and can neither reproduce your issue myself with such. Can you reproduce it reliably or it was just one-time thing?. Are you sure this is new items notification and not something else? Because new messages being stuck is a common Steam screwup and nothing to fix on ASF side, while new items notifications are automatically cleared by ASF with your BotBehaviour and that step is entirely independent of cards farming module and should always work correctly.. Well there is no reason for the last card to not get cleared because you're not using ShutdownOnFarmingFinished and ASF routine responsible for that executes always, entirely independent of cards farming state, which is why what you're explaining so far doesn't make sense, at least from code perspective.\nBut at the same time I'm not saying that it's impossible, if you reproduce it again and still state that it's new items notification and not unread messages or other comments then I'll give you instructions to reproduce it with debug build which will clearly state whether ASF is doing what it's supposed to do or not (and why).. Closed due to inactivity.. Redeem command has a single scope, forgetting to specify bot name as an argument is not an excuse for overcomplicating existing logic and providing extra features that shouldn't be included as part of a command. Redeeming is not a primary purpose of ASF program and existing redeem logic already goes far out of the scope of what ASF should provide. If anything, this request might make sense as an extra feature in the ASF UI, not ASF itself.. Hey there! Thank you for contacting our development team at GitHub.\nI'm sorry but we're not able to consider your enhancement to the project.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nASF has rather strict scope - idling Steam cards from Steam games + basic bots management. ASF scope is very subjective and evaluated on practical/moral basis - how much this feature fits ASF, how much actual coding effort is required to make it happen, how useful/wanted this feature is by the community and likewise.\n\nIn particular, we've found out your issue to be out of the scope of ASF project, but we wouldn't have anything against a PR implementing such functionality.\nPlease check out contributing suggestions for further explanation. As we have no interest in implementing this functionality ourselves, this issue will be closed.\nHave a nice day!\n~Archi. I suggest to make it compile next \ud83d\ude09. Thanks for report \ud83d\udc4d . Nowhere on the wiki you have information that file extensions are case insensitive, and Linux uses case-sensitive ext4 FS by default. Not a bug.. #\nHey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. \n\nIf it is supported currently, pls help me, thanks.\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.. Hey there! Thank you for contacting our development team at GitHub.\n\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. > require modifying Steamkit\nPost a suggestion or send a PR directly to SK2, only then ASF will consider this - https://github.com/SteamRE/SteamKit. This is not going to happen, MarkReceivedMessagesAsRead already marks received messages as read. New chat API does not allow to specify invidual messages as read, only all read until specific timestamp. Since user might receive important message before trade message, it should NOT be marked as read if he doesn't have MarkReceivedMessagesAsRead enabled, and if he has MarkReceivedMessagesAsRead enabled then this property achieves nothing in particular.\nSide note:\n\nIf you still have willings to make it happen then proper way would be to fetch last read message (I'm not sure if volvo even returns that, but it should if you know about new messages), analyze all messages from that point onwards and only if all of them are trade messages, then mark as read.. Hey there! Thank you for contacting our development team at GitHub.\n\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. >  Some people (maybe its only me) want to keep track of .keys.used file\nThen you should make a copy of that output yourself because ASF is not the right tool to keep persistent history of activated keys using BGR - API endpoint is supposed to clear the output files in order to prepare them for next batch of keys, not provide you with persistent database of all past BGR activations. Both files are considered as one BGR output, they're fetched and cleared as one.. As stated in readme:\n\nAll strings used by ASF can be found in main Strings.resx file, and that's also the only resx file that should be modified - all other resx files are managed automatically and should not be touched. Please visit localization section on the wiki if you want to improve translation of other files.. Can you reliably reproduce this, e.g. on each ASF run?. Closed due to inactivity.. Thanks @nopara73, yes I'm already using rcedit in my appveyor script and it works good enough, but if dotnet SDK is capable of doing that automatically now then there is no particular reason to bring third-party dependencies and complicating the build process.\n\nFrom what I understand, dotnet on Windows since 3.0 SDK will be able to automatically embed icon into resulting exe in -r win-x64 build, which will allow me to remove rcedit from post-compilation steps in this case.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: suggesting enhancements that are already possible is invalid.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Overall good catch though, just link it to proper action instead of reinventing the wheel \ud83c\udfc6. Thanks for good catch! \ud83e\udd47. > If this is not possible close the issue\nIt's not possible, ASF would need to somehow claim inventory events entirely for itself and make your Steam client not receive them at all, which isn't only impossible, but it'd likely be against what most of the users expect.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this question is not related to ASF development in any way.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Could you do a final check of your code if it still works like you expect it to? I mean no-arguments command, arguments-command and wallet refresh (if you by any chance can initiate wallet refresh by selling/buying something and you don't consider it a huge hassle for you, for science! \ud83d\udd2c)\nThanks!. @MisakaDev thank you a lot for your contribution! \ud83c\udfc6. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. This is not ASF-ui repo, if you want to report ASF API error, then define exact API call that you're making, exact response that you're receiving, what you think that should happen, what happens and all other details that you were asked to fill. Showing some ASF-ui screenshot with error popup is invalid.. Thanks! \ud83c\udfc6. There is a chance that wiki could be nicely automated thanks to https://github.com/dependabot/feedback/issues/301. Hey there! Thank you for contacting our development team at GitHub.\nI'm sorry but we're not able to consider your enhancement to the project.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nASF has rather strict scope - idling Steam cards from Steam games + basic bots management. ASF scope is very subjective and evaluated on practical/moral basis - how much this feature fits ASF, how much actual coding effort is required to make it happen, how useful/wanted this feature is by the community and likewise.\n\nIn particular, we've found out your issue to be out of the scope of ASF project, but we wouldn't have anything against a PR implementing such functionality.\nPlease check out contributing suggestions for further explanation. As we have no interest in implementing this functionality ourselves, this issue will be closed.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nI'm sorry but we're not able to consider your enhancement to the project.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nASF has rather strict scope - idling Steam cards from Steam games + basic bots management. ASF scope is very subjective and evaluated on practical/moral basis - how much this feature fits ASF, how much actual coding effort is required to make it happen, how useful/wanted this feature is by the community and likewise.\n\nIf you've read the FAQ, you wouldn't need to waste your time suggesting an invalid issue.\nHave a nice day!\n~Archi. Thanks for your contribution! \ud83c\udfc6. Thanks for contribution! \ud83c\udfc6. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: ASF-ui/IPC GUI issues are not handled here.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Fixed, thanks!. Good catch, thanks for report! \ud83c\udfc6. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Also I retract my original suggestion about splitting AWH into several functions, this looks good as it is, splitting it would have no point.. If by any chance a-d will not end with the expected result (CannotRedeemCodeFromClient for a, OK parsing and execution for b, BadActivationCode for c and DuplicateActivationCode for d) you should investigate why exactly.\nIf there is no situation in which you need to guess the PurchaseResultDetail from the redeem itself, you can add a hard check against it being a null with another log null error and fail the routine. Remember that redeem bit is in two sections right now - commands (redeem), and Bot (BGR).. Yes, and that bit probably should be right in the AWH as it's fixing a particular Steam fuckup.\nif (result.EResult == EResult.OK && result.PurchaseResultDetail != EPurchaseResultDetail.NoDetail) {\n    result.EResult = EResult.Fail;\n}\nUnless there is some situation I'm unaware of that also should return OK.. The difference here and why we're putting it into AWH and not somewhere else is exactly because we're aware of this and fixing it intentionally for userspace to match expectations. With null PRSD before this was not the case, as there it was userspace guessing what null should mean and not AWH in charge of putting what it thinks is right. Here the situation is different because we can safely say which results are wrong (or rather which results are right, because those are much less common).. The above is the last misc fix in the PR itself, everything else is testing and fixing only if tests prove wrong. There is no hurry and we can wait with the merge until you test everything out, thanks a lot for your contribution! \ud83c\udfc6. As usual thanks a lot for your contribution, now you know that even trivial fix can include a devil in the details \ud83c\udfc6\n. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. @Pandiora You could take advice from @Ryzhehvost and evaluate your ASF version, configs and the changelog, because I'm 99.9% sure that you're either using outdated ASF version or outdated configs, on top of the fact that you're not reading changelogs.\nThis is issue is invalid to begin with anyway since you did not submit full log and full configs as asked, if by any chance despite of my reply you still believe that it's you who is right and everybody else is wrong, then provide all missing details that you omitted and I'll prove you where exactly you're wrong, or without any issues reproduce your issue and correct it, since it sounds like I should run into it without problems, yet I don't.. Probably the same applies to tradable, you can correct that in AWH (and maybe somewhere else too, ctrl+f). Can you send a PR for english language? Thanks! \ud83d\udc4d . @dependabot-bot merge. @dependabot-bot merge. @dependabot-bot merge. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\n\nI've tried to confirm manually and called !2faok on group chat but this didn't confirm the trade\n\nhttps://github.com/JustArchiNET/ArchiSteamFarm/wiki/Two-factor-authentication\n\nverify that confirmations work in authenticator like WinAuth prior to importing that data to ASF!\n\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. (and SteamAppID while you're at it). Thanks as usual! \ud83c\udfc6. > ASF tries to accept trade offers, that were accepted a moment ago by ASF itself.\nASF does not accept the trades that were already accepted and confirmed by ASF 2FA because they're no longer available after fetch, and ASF limits trades parsing queue to maximum of 1 pending task that starts only after all previous trade offers were accepted and confirmed, not earlier. Your enhancement solves an issue that does not exist under normal circumstances, and the workarounds you presented would not work correctly if we assume that what you're claiming happens abnormally, since ASF already checks the status of the trade offer and intentionally skips trade offers that aren't in pending state.\nSince your issue doesn't suggest anything new that I didn't think of, I'm closing it as won't fix.. If you read my response carefully then you'd realize that your screenshot is worthless because ASF can't know better when Steam tells it that the trade offer is still pending, and ASF also can't know better whether the request to accept it before just timed out or is still being processed. If you've read the wiki then you'd know that you can make ASF more patient by using ConnectionTimeout appropriately, and your proposed solution does not make any sense in regards to the issue you're describing.\nI didn't doubt in your story, I told you that your workarounds do not work in abnormal conditions, and in normal conditions they do not apply at all because your issue does not happen due to existing ASF logic.. You didn't bother me that much, it's just the fact that I hate myself enough for being helpless as it is, and if the issue was so \"easy\" to fix, then I'd have appropriate code in ASF years ago, not people telling me that ASF is missing crucial Steam logic after 3 years of active development.\nHappy new year \ud83d\ude42.. @dependabot-bot merge. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. > I know you're going to probably say \"No\" because you're stubborn af\nI say no because I'm stubborn af. For more serious answer, see above.. https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Compatibility\n\nThis also means that ASF has no specific OS requirement, because it requires working runtime on that OS and not OS itself. As long as that runtime is executing ASF code properly, it does not matter whether underlying OS is Windows, Linux, OS X, BSD, Sony Playstation 4, Nintendo Wii or your toaster - as long as there is .NET Core for it, there is ASF for it.\n\nAnd if there is no .NET Core for your platform, your platform is not capable of running ASF.. Good catch, thank you! \ud83c\udfc6. I can't reproduce your issue, care to show full log with latest V3.4.2.0?. There is no V3.4.2.1 yet and your commit is included in V3.4.2.0, as can be seen on GitHub:\n\nAlso I asked about full log, not problematic half.. You don't need any debug, you need to provide full ASF log.txt, as written by ASF, not the half of it.. Custom builds are not supported, generic-netf is not supported on Windows 10 platform. Reproduce your issue with win-x64.\nAlso I don't see any problems with first 4 accounts.. > Why would net framework build not work correctly anymore? It used to work just fine on WS2019.\nhttps://github.com/JustArchiNET/ArchiSteamFarm/wiki/Compatibility\n\nPlease refrain from using it if you can use any .NET Core package instead, as generic-netf is missing a lot of functionality and compatibility compared to .NET Core versions, and it'll be only less functional as the time goes on.\n\nBesides, this is still Steam telling you 403, not ASF's code, the fact that at least one account succeeded means that the code works fine, why exactly Steam is telling you to go away is no longer ASF's concern (unless you know better than me and you want to send a PR with your suggested enhancement, and as you can see from the commit itself, there is nothing besides usual update and maintenance).. > I have no log or any additional info\nThen post your issues on yahoo questions if you're not capable of providing development information.. Good, now we have something to work with.\n\n2019-01-04 17:27:06|ArchiSteamFarm-7952|ERROR|01|GetConfirmations() Refusing to execute this function due to invalid DeviceID in ASF 2FA!\n\nSend me your 01.db on my e-mail: JustArchi[at]JustArchi[dot]net so I can check what's wrong. Alternatively you can post your DeviceID publicly if you're not afraid.. Thanks for report! \ud83c\udfc6. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this question is not related to ASF development in any way.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. @dependabot-bot merge. https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Compatibility\n\nASF has no specific OS requirement, because it requires working runtime on that OS and not OS itself.\n\n\nhttps://github.com/JustArchiNET/ArchiSteamFarm/wiki/FAQ#can-asf-work-on-my-androidsmartphone\n\nVastly out of the scope of the program considering we support only Windows, Linux and OS X. But regardless:\n\nASF is open source, feel free to port it to mobile and send a PR.. Here are my impressions so far:\n\n\n\nThis is definitely out of the scope of ASF even as a PR if ASF was expected to craft booster packs automatically based on configuration property. ASF is not booster packs creator, and that feature has nothing to do with Steam trading cards or basic bots management.\n\n\nI might be alright with converting this into a command such as !booster <appID>, but I'm not yet sure if I want this in ASF to begin with. Let me know if you'd be interested in converting this PR into a command first, then I'll make a final decision whether we should put it into the program or not. If you're not interested in any of that, this is fine, let me know and the PR can be closed.\n\n\nThe code itself looks good to me, except for a few misc fixes.\nIn any case thanks a lot for your contribution! \ud83c\udfc6. Then sorry but this is not going to be considered due to being out of the scope of the program.. I took into account all the ASF methods you've used, once I'm done with https://github.com/JustArchiNET/ArchiSteamFarm/pull/1020 you'll be able to implement your addition as a plugin without a need of maintaining a fork yourself.. This is your second invalid issue, if you create another one you'll be blocked from creating ASF issues permanently. You were already told in your last issue that this is already possible, and we'll not answer where and how exactly, because that's not what GitHub issues are for - your enhancement suggestion is (and remains) invalid. This is your last warning.. @dependabot-bot merge. Have you tested that the logic works properly in both inventory calls (like loot) and trade offers received?. Thanks for your contribution! :trophy:. @dependabot-bot merge. Thanks for report! :trophy:. And why you can't use ASF.IsOwner()?. > The only way at this moment to send commands not by using Steam chat is to use IPC /Api/Command call\nBot.Commands.Response()?. There should never be a case where you want to execute commands as SteamOwnerID. Your plugin should have its own mapping of whatever-to-steamID and actual permissions system. IPC is the only valid exception from this rule, as its internal process-wide system exposed by ASF for process-owner usage.. Alternatively you should make your own PluginOwnerID and execute as that one if proper permissions system is not appropriate for your case. I might still decide to open it for other reasons, but this one is not the expected use case.. > If all status checks pass Dependabot will automatically merge this pull request.\n\n16 hours ago\n\n@dependabot-bot don't sleep on duty \ud83d\udca4. @dependabot-bot merge. @greysteil I wonder why it didn't merge it right away considering all other submodules updates are handled nicely, CIs were all green, probably some hiccup, maybe you want to check why exactly, up to you \ud83d\ude42. Implemented in https://github.com/JustArchiNET/ArchiSteamFarm/commit/5ca35d0db434635cf5cc432d013eea7727a78fe7. @dependabot-bot merge. Thanks for report! \ud83c\udfc6. TBH I'm shocked ASF is not doing that yet, I could swear that I've implemented this around the moment I added trade token fetching for ASF STM purposes \ud83e\udd14.\nGood idea, thanks! \ud83c\udfc6. @dependabot-bot merge. @dependabot-bot merge. @dependabot-bot merge. @dependabot-bot merge. https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Plugins#plugin-dependencies\nhttps://github.com/JustArchiNET/ArchiSteamFarm/wiki/Plugins#native-dependencies. If your plugin works in generic build, then it means that you're missing native dependencies. If you tried to run your plugin in official ASF generic build, then it'd also work fine, and if you did the same in your own OS-specific build then it'd also fail to work. Wiki is very clear on that.. @Abrynos what do you think? \ud83e\udd14. I'm putting this on hold until we get a grasp on what is actually a correct approach in https://github.com/SteamRE/SteamKit/issues/641\nSteam's API is so crazy that it might actually make far more sense to depend on SK2 handling this madness rather than me adding yet another features to WebBrowser, this time for sending binary POST content.. > Please add the ability to select a region for steam, so that the program immediately tries to connect the IP of my region steam.\nASF automatically will prefer to use region of your machine and connect to the closest CM server available. It's not planned to modify this behaviour, as you should never want to change this, in the same way how Steam client does not allow you to have any say in this either. In other words, already possible, and not configurable.\n\nOr tell me where / in which configuration file this can be done?\n\nIt's not expected use case to have permanent block on outgoing traffic. IPs of Steam servers can change at any given point of time and you can't hand-pick the server ASF connects to, as ASF will always ask Steam network for list of servers first, then choose the best one. Like stated above, it's not planned to ever add such functionality, as ASF should non-negotiably follow Steam client behaviour in this aspect.\nIf you want to get a list of all current servers that ASF can try to connect with, then you can execute curl https://api.steampowered.com/ISteamDirectory/GetCMList/v1?cellid=0 from the same machine in order to get IP-personalized list of servers. Afterwards you should either start fresh ASF or remove ASF.db manually, let ASF pick the server and establish connection, after which ASF will cache the list of servers to use in ASF.db, together with CellID that is assigned to this IP.\nAt this point you can purge your previous list of IPs, cat ASF.db and add all fully-personalized servers that ASF keeps in its cache, which should be very similar to the one with ?cellID=0, but has a potential to be even more accurate than just an IP check. Just like I said, IPs, servers and all settings can change at any given point of time, so it's you ensuring that ASF can connect with the servers that it saved, and it's also you ensuring that any updates to that list are handled by your firewall. If you can't make it happen and you depend on ASF connecting with one particular IP of your choice then this goes against expected Steam client behaviour, therefore won't be implemented by ASF and you should either fork ASF and add such feature yourself, or adapt your environment to match expected ASF use case.. https://steamcommunity.com/groups/archiasf/discussions/1/3203652426704407588/. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development. In addition to that, any changes to ASF source by definition exclude you from GitHub issues and our support.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. If new product key results in a possibility of efficiency change in currently used idling algorithm then ASF should always restart the idling.. It's not possible for ASF currently to check the queue without stopping the idling first, and due to the negligible benefits of making it possible I don't consider it important. Feel free to send a PR if it is for you.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this question is not related to ASF development in any way.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Archi. @dependabot-bot merge. Hey there! Thank you for contacting our development team at GitHub.\nI'm sorry but we're not able to consider your enhancement to the project.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nASF has rather strict scope - idling Steam cards from Steam games + basic bots management. ASF scope is very subjective and evaluated on practical/moral basis - how much this feature fits ASF, how much actual coding effort is required to make it happen, how useful/wanted this feature is by the community and likewise.\n\nIn particular, we've found out your issue to be out of the scope of ASF project, but we wouldn't have anything against a PR implementing such functionality.\nPlease check out contributing suggestions for further explanation. As we have no interest in implementing this functionality ourselves, this issue will be closed.\nHave a nice day!\n~Archi. @dependabot-bot merge. I've fixed only expected behaviour:\n\nKey has to be forwarded to all possible bots\n\nBecause change of order in distribution is intended and documented in the changelog.\nThanks for report! \ud83c\udfc6. > If im adding a game key to the background redeeming process and i dont own the required base game, ASF should activate the key automatically after i activated the base game.\nNo, it absolutely shouldn't.. BGR's or redeem's purpose isn't to activate base game of the keys you do not miss. It isn't ASF's purpose either.. Thanks for report! \ud83c\udfc6. return above exits function already, else is pointless and only increases nesting, which results in decreasing code readability.\n. This is not needed if we have !statusall\n. Consider using StringBuilder instead of string here.\n. No need to declare result as string, because we return only one string always, instead, just fall back to returns as initially coded.\n. Avoid using \\n, not every OS has same line endings. Instead, use Environment.NewLine\n. Same here.\n. Should be in it's own file.\n. I'd suggest creating new class similar to current ones (such as SteamTradeOffer.cs) and using Serialize/Deserialize instead of specifying fields like that.\n. UseWebBrowser.UrlGetToJObject() instead of content + parse.\n. List<T> is not thread-safe and CheckPage() is executed by many concurrent threads at the same time. Consider using ConcurrentHashSet<Game>.\n. You should do sorting the moment before KeepFarming = NowFarming = true; instead of at the end of CheckPage() - the order will be wrong if you have more badge pages than 1.\n. Consider making AppID readonly and use constructor that ensures it's non-0, like TradeID in https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/Trading.cs#L46\n. Misc: make class sealed\n. If you're inventing such property, make sure to update it. I think the proper place would be in ShouldFarm(), and done similar to updating HoursPlayed.\n(This is because we report status in !api, as well as making decisions based on saved status without checking all badge pages again)\n. :+1: \n. You can't create new ConfigPage when user clicks button - you should use ones that are already loaded, not create new ones.. What is the purpose of this here? Did you copy-paste code without even reviewing what it does?. I don't like this, maybe it'd make much more sense to restructurize this into Bot function that sets given Bot field based on ASF.EUserInputType (HandleUserInput()?), and change all current calls from Bot->Program.GetUserInput() in a way that we'll ask for value like usual, but then call the same HandleUserInput() with given ASF.EUserInputType and value, then in the same way we'd call it in !input command.\nThen the overall flow will be better because:\n- one Bot function sets variables with a single switch with ASF.EUserInputType\n- command calls that function directly with type parsed from user and value parsed from user too\n- normal calls call Program.GetUserInput() like usual, but then instead of assigning this value to a field, they call the same set function that is responsible for that.\nWhat do you think? I can do that if you don't want to or you're confused about what I mean, because overall this PR is good, it could just be done a bit better so we don't introduce a Dictionary queue, but set variables directly.. On the second look it even must be done like I said, since we don't control at all to which bot we actually assign given input, and it must be possible to control. Otherwise we might accidentally assign some input to some other bot, only because that other bot asked first for that. My solution would solve that issue.. It's fine, wait a moment and I'll show you what I meant \ud83d\udc4d . This should be (Required = Required.DisallowNull).. We're missing default entry in example.json, as well as addition in ConfigGenerator/BotConfig.cs.. You should use ResponseUnknown(), like in !redeem^ case.. Once above is done, remove this entirely, there is no need to define such wrapper.. Since you can have only one target, you should not use GetBots() here, instead just Bots.TryGetValue().. I'm not sure if it wouldn't be better to use bytes instead that could be mapped to Steam.Item.EType directly. I think string version is more readable though, so this is OK for now.. Naming of this variable is awful, even types or transferTypes would be better.. Same here, why this doesn't follow convention from other multi-commands?. botNameTo is OK, but botNameFrom should follow convention and be botNames like everywhere else.. This must be verified for not being 0 which would indicate that target bot is not being connected. Otherwise you'll hit null error in ArchiWebHandler.SendTradeOffer().. This can be simplified, you can set token as null and change it from null only inside SteamFriends.GetFriendRelationship(targetSteamMasterID) != EFriendRelationship.Friend then pass that token (modified or not) to ArchiWebHandler.SendTradeOffer() always. If token is null or empty, it's not being included. This is why that field is optional and set to null by default. This is misc though.. If you're adding dots everywhere then you should add it here too \ud83d\udc4d.. This is defined twice.. Can we somehow get rid of this hardcoded array and just try to load language during runtime? This would help with pushing languages to/from our crowdin platform.. You shouldn't define another function that does exactly the same thing as current one. Instead, just make it accept custom appID and contextID that would default to current hardcoded settings.. This is wrong on so many levels - Utilities.GetArgsString() should always point to the last argument, not any argument in the middle.. > This is wrong on so many levels - Utilities.GetArgsString() should always point to the last argument, not any argument in the middle.\nSame here.. I don't see any point of defining a new command for exactly the same thing. Why not add one !transfer^ <AppID> <ContextID> <Modes> <Bot> instead. There is already All mode that would fit perfectly in case we don't want any extra logic when not transfering steam items.\n  . Hardcoding current properties of botconfig is absolutely unacceptable, this is what /Api/Structure and /Api/Type should be used for and entire thing should be fully dynamic.. I'd suggest to query against *.json instead.. Or even better, change output translations to strings.%locale%.json and query against strings.*.json.. Your call but I suggest strings.*.json instead since it clearly declares strings.json as being source file, while en-US.json is no longer clear whether it's automatically generated or not.. I'm not regex expert but wouldn't strings(.[a-z]{2}-[A-Z]{2})?.json be better?. Use switch instead.. No need for trailing /.. Use Steam.NonZeroResponse instead, dynamic json should be reserved only for cases that you can't strong-type, I don't see such case here. Also do not convert yourself in the first place, this is what ToJsonObject<>() functions are for, in AWH and WebBrowser.. Stick with ASF convention, Exception e.. You don't want to print debug content by default, WebBrowser is in charge of that, this is wrong on many levels, delete it entirely. Strings.WarningFailed is OK.. You shouldn't delimit by , because you're not accepting ,-delimited string, use the same parsing as in nickname command instead.. Instead of unsealing it from readonly, implement custom constructor like done in TradeOffer. All fields should be readonly after their creation, unless absolutely crucial to edit after their creation/deserialization. I don't see such case here, we're not a library to allow free management of fields because we know their exact usage.. You should use IReadOnlyCollection instead of IEnumerable here.. This is entirely unacceptable, you should use InternalPost, modifying it to match your requirement if needed. Only InternalRequest should ever access HttpClient object. Your request will fail entirely for redirections, lost sessions and everything else that you're not handling.. This is wrong on so many levels - byte.Parse is unacceptable since you're not handling potential exceptions that don't come only from invalid characters, but a lot of other sources. Moreover, explicit cast doesn't handle invalid numbers, even if you can assume underlying type.\nInstead, use the same method as used in ResponseInput - Enum.TryParse + Enum.IsDefined right on the digit.. Once above is done, this should be right in that foreach loop, in a switch that will handle all invalid settings at-once.. Likewise here.. It'd be better to define ECommentPermission type somewhere in Steam.PrivacyResponse and use it instead. This parsing is good, but you should parse it to ECommentPermission and not to a string.. Move this below for parsing loop and add yourself constructor to solve readonly issue, like done in Steam.TradeOffer.. This still stands.. Did you check if your request can't work with FormUrlEncodedContent, even if Steam uses multipart? If yes, this is fine, but maybe we can avoid all this mess and just use what we have everywhere else instead.. If it requires multipart and can't work with encoded content, then it'd make sense to change type of data right to HttpContent and do appropriate parsing in functions called earlier.. This if is redundant since the switch above guarantees that you'll have at least 2 args.. Should be ResponseLootByRealAppIDs. Stick to your convention - should be appIDTexts. foreach (string appIDText in appIDTexts) looks better.. Empty line after control block.. You don't need LootingScheduled because LootingSemaphore already guarantees maximum of one request, scheduled looting is needed only if the command can be executed by events, this one is not. All locks should be removed.. Add this to } else if (botName.Contains(\"*\")) { instead or in some other way activate regex, for example by checking if botName starts with r!, then parsing everything after as a regex. We don't want to accidentally use regex matching for bots with names that are used as regex features, r! or something similar as activation looks much better to me.. Would be cool if you could fix those spaces into tabs.. Especially here.. StartsWith() accepts StringComparison method, there is no need to convert it to upper firstly.. If you want my convention then else if should be on the same line as } \ud83d\ude1b. ToList() call is wasted performance since UnionWith() accepts IEnumerable. Instead just remove it and make regexMatches IEnumerable.. Also, since you're using ignore case already, stick with r! instead.. \ud83d\ude15. This should be true (default).. This is same as default.. All of csharp_style_expression should be when_on_single_line.. This is missing suggestion severity, also we can probably use default (public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async) - the difference between this and mine is misc since the order of groups is the same.. You should probably add all other csharp_new_line conditions with false:suggestion, this one sets open brace only and we're missing stuff like csharp_new_line_before_else.. Should be true.. Invalid, you have false below.. Missing suggestion.. Then correct line below this \ud83d\ude09. Use official public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async instead, like I pointed out above, keeping suggestion severity.. Actually I wonder if this is even right, I should look it up in my R# manually, this doesn't seem fine.. \nAh right, it's per-line and not per-file, then it's right, we want defaults like I said above, R# defaults are very close to them since the groups match.. Yes, but we should still use C# defaults for that and not R# defaults - https://github.com/JustArchi/ArchiSteamFarm/commit/2a1d5d1e60a7e72198fda4aafe01d5eb56dbd21c. Rename public_members_must_be_capitalized into all_members_must_be_capitalized, since it's more appropriate.. Change severities to suggestion as we agreed above.. Missing newline.. What do we need it for? ASF does not expose System.Net.WebProxy anywhere in API IIRC.. Interesting, indeed ASF under the hood uses that object for its own operation but IPC should return that one as string, I might want to correct this.. Done, it's string now, as it should be in the first place.. Used keys have no particular order, you should use generic Dictionary<string, string> instead of this awful OrderedDictionary that I had to use for redeeming process.. What does it do and why? You should just include name alone, no need for status. If you want to include status then include it as one string next to the name, just how ASF would if you supplied this .unused keys file for another bot BGR.. DRY. Again, don't use OrderedDictionary for that.. NEVER use .Result for async tasks!!! \ud83d\ude21. If you name your main property UsedKeys then for consistency this one should be usedKeys. Also you shouldn't declare Required for objects we're going to serialize ourselves.. This should return null.. This should also return null.. There should be no newline between } and catch, everywhere.. I don't like this block at all, it's trying to do too much at once. Instead you should have one single function in Bot called GetUsedAndUnusedKeys(). There should also be no logic in this call, you should have foreach loop over results next.. Don't use Required for objects intended for serialization only.. Still overcomplicated, it should be just bot => bot.GetUsedAndUnusedKeys(), nothing else in this call. I told you to put extra logic below.. This should be run in parallel using standard ASF optimization mode pattern.. Results are definining what above tasks are returning, not what you want to do in this function. It should be standard ICollection<(Dictionary<string, string> used, Dictionary<string, string> unused)> and not some response.. Also used and unused should be pascal case.. Yes, we need it, below, because multiple calls of Task<(Dictionary<string, string> used, Dictionary<string, string> unused)> return multiple results of (Dictionary<string, string> used, Dictionary<string, string> unused), not a json response.. use bots.Count for list initializer as you know exactly how many results there will be. You already used it in delete method.. No need for extra () here.. This should not be object as it can't be strong-typed. Instead you should probably use Dictionary<string, (Dictionary <string, string> UsedKeys, Dictionary<string, string> UnusedKeys)> where first key will be name of the bot. Right now your array is entirely useless as it doesn't specify which response is for which bot.. This still needs parallel execution.. This hurts my eyes, just Task<bool> task1 = GetKeysFromFile(file1) and Task<bool> task2 = GetKeysFromFile(file2), then you can insert 2x await in min memory patern and Task.WhenAll(task1, task2) in second one.. Actually even that 2x await is useless, you can just do new List<bool> { await task1, await task2 }.. Actually now I noticed that this won't be lazily evaluated so it won't work if you leave it like that. Use something like tasks = new string[] { KeysToRedeemUsedFilePath, KeysToRedeemUnusedFilePath }.Select(file => GetKeysFromFile(file).. Useless comment, you never explain what the code does, only why it does things. People can read what the code does on docs.. Yes, then in tasks creation above you can do something like bots.ToDictionary(bot => bot.BotName, bot.GetUsedAndUnusedKeys()).. Although you need to be smart about this as ToDictionary is not lazy-evaluated, so it might make more sense to instead do something like bots.Select(bot => (bot.botName, bot.GetUsedAndUnusedKeys()).. Like I said, use Select instead of ToDictionary so you'll have IEnumerable<(string, Task<(Dictionary<string, string> Used, Dictionary<string, string> Unused)>. Then you can just make an array of them and get it done, while in the next step you can generate proper response out of both parts.. Once again you put too much logic in this optimization block - I told you, this is the place only for results execution logic and nothing else, not even association. results should ALWAYS be ICollection<whatever> where tasks should always be IEnumerable<Task<whatever>>.. You've just killed everything you've been working on by this ToArray() call, this is not lazy evaluated again \ud83d\ude02 . Make an array of them during execution in optimization block (either List in sync or array in parallel), come on, you have examples of how this works literally everywhere - I told you multiple times now that you should have tasks and results where tasks must be lazy-evaluated (so IEnumerable) while in optimization blocks you generate results, either synchronously (min memory) or all at once (default). Only THEN you add whatever logic you need further outside of optimization block.. Now you can rename it to tasks and results like it should be everywhere else.. I've just told you how <whatever> needs to match between tasks and results, why you don't listen \ud83d\ude44. And because you didn't listen now you're doing a total crap code like this which hurts my eyes in every single possible way \ud83d\ude22. You should NEVER access tasks once you get results.. This won't work for more arguments than 4, you should instead use parsedArgs[parsedArgs.Length - 1].. You enumerate over tasks here with that Count() call, entirely killing the lazy-evaluation again. Use bots.Count instead like you already did. No clue why you changed that in the first place, it's not like suddenly the number of tasks changed.. Use descriptive variables, change x into task. Instead of Item2 go name your task and result above and use that instead.. When deconstructing variables you should always apply camelCase.. Refrain from using Append() when you know that your results is a List - use Add() instead.. This is a single response, s is misleading.. Deconstruct and use camelCase.. Then name it jsonResponse or result or look up what I did in all other functions if needed.. See how much better this looks now? \ud83c\udfc6. !File.Exists(filePath) is not non-intended - you should instead either add another condition below without logging (just return null) or keep it like that but add proper logic for skipping non-existing files in the caller. Also make it private because no other code accesses it.. If you have to access by index then change ICollection into IList and access by index instead.. Empty dictionary in json output would suggest that file exists but is empty, not that it doesn't exist.. ASF is not the only process in the world permitted to read/write those files, users can also screw them up. Although in this case returning empty dictionary is valid when file doesn't exist, so you can use it if you want to.. Missing space.. Use 0 as a capacity to indicate that this dictionary will never be updated.. Between foreach and (.. Do we need both? \ud83d\ude02. Use the same order as arguments + use string.IsNullOrEmpty() for strings.. I'd name it BuildVariant instead, generic is not OS variant.. Missing nameof(globalConfig).. Who said that ASF code is flawless? \ud83d\ude09. Missing space + use null or empty for strings (nearly always, unless it matters for you whether you have null or empty).. Same here. And you missed return too, so it'll crash instead \ud83d\ude09.. Do not blindly copy paste, LogNullError() should be used ONLY for UNEXPECTED errors, null response is entirely expected when the user doesn't have permission to interact with the bot and therefore generates no response.. This is wrong on so many levels. Why do you even put args number there, didn't I just tell you to make static version for each command and in that static version do any kind of arguments parsing? Why do you put lambdas here instead of JUST a pointer to a function that you will await/execute in Parse() function? You didn't just kill old working functionality, but you did it for absolutely no reason - this is unacceptable.. Name it the same as parent function, so ResponseStatus. This one accepts less arguments anyway.. Wouldn't it be better to fetch raw non-parsed .md file, extract from it appropriate table and parse? I'm not sure how parsing markdown looks in javascript - https://raw.githubusercontent.com/wiki/JustArchi/ArchiSteamFarm/Commands.md. I mean both approaches are correct and will work, but by doing it raw you skip all html related to GitHub and all things that need to be loaded and rendered. This is your choice, but it'd be great if you checked out if raw way isn't more effective (because it's definitely faster).. I found something like that - https://github.com/showdownjs/showdown / http://demo.showdownjs.com/ (they have CDN too).. The least you can do is probably to just fetch raw, put it in markdown -> html converter and extract via xpath, this doesn't look too problematic compared to what you have right now, but once again your call.. Alright, thanks for everything like usual \ud83d\udc4d. This is unacceptable, you're going to throw null error (aka what we need to correct) on the most common request timeout. I don't know why you didn't pick up convention from literally everywhere else, but this needs to be corrected.. This is going to be expensive, how the sample HTML looks like? Isn't there a better way to narrow this down?. Navigating further with LINQ over HTML is inappropriate, this is what xpath should be used for. I'm not sure how exactly the html looks like (waiting above for sample), but even blindly I can state that //div[starts-with(@id,'pending_gift_')]/div[starts-with(@class,'pending_giftcard')]/@id looks 10x better. Also you have excessive number of nullable attributes here, you do not just go around and add ? to every single object, for example node can't be null in any possible case, so I have no clue why you mark it as nullable.. Every fatal error that is supposed to be corrected by ASF devs should end with return, not a continue.. See above.. This function does far too much and accesses internal bot structures. Instead I'd like to see only requests in AWH (returning either HtmlDocument or already parsed HashSet<ulong> with gift IDs) and the rest of the logic with checking and handling gifts in main Bot.cs. AWH should not be used for excessive logic, AcceptDigitalGiftCards() is Bot feature, not web handler feature.. Yes, but in this case //div[@class='pending_gift']/div[starts-with(@id,'pending_gift_')]\" is at least ten times better as you're doing Equals() checks and not much more expensive StartsWith() on all possible divs.. Once you split this method into two parts (AWH and Bot, like I explained below) you should just return null in place of HashSet<ulong>. Failed requests already carry the appropriate warning returned by WebBrowser, so there is no point in duplicating it. Check other functions of AWH for an idea how to handle it - GetInventory() for example.. Assign this dictionary to data like everywhere else, keep convention, make it single line, it's very unreadable in its current form.. Do not call WebBrowser directly, use UrlGetToHtmlDocumentWithSession() instead. This will entirely fail if your session is outdated or bot is disconnected, UrlGetToHtmlDocumentWithSession() takes care of that, and web limiting too. See other functions.. This is expected and WebBrowser already prints a warning, we don't need second one.. I don't see any reason for getting inner div just to return to outer one... Why not //div[@class='pending_gift']/div[starts-with(@id,'pending_gift_')]/@id?. Despite of xpath guarantee, you should still use GetAttributeValue(), it handles edge cases for you. See other functions.. It'd be a good idea to rename this variable into idText or gidText, ASF has convention of having *Text variables that indicate data types saved as strings.. Despite of xpath guarantee, you should still use GetAttributeValue(), it handles edge cases for you. See other functions.. It'd be a good idea to rename this variable into idText or gidText, ASF has convention of having *Text variables that indicate data types saved as strings.. This function can be called multiple times due to multiple events generated by Steam network. You should implement appropriate semaphore + queue, check ArchiWebHandler.MarkInventory() or Trading.OnNewTrade() for examples how to achieve that.. This makes sense then, isn't there ID somewhere inside? If not, it'd be a good idea to add appropriate comment stating that pending_giftcard_leftcol indicates gift card and why we're jumping to outer div from it. I'm also wondering if there is no xpath trick to just check if div has a child with that without moving to it, I'm not xpath expert myself either, so just a comment will do.. You don't have that guarantee, user could set GiftsLimiterDelay to 0. No limiter guarantees critical section, in fact, limiter explicitly doesn't guarantee that as it just load-balances enters, not synchronizes threads.. XPath guarantees you that ID will start with pending_gift_ so this is correct as it is, but I'd rather have just GetAttributeValue() here, then below null check as it is, and then another check if length is greater than 13, and then substring call. This way you won't call substring if ID has just pending_gift_, and knowing Valve and Steam, I'd not be shocked if it decided to do such stuff at some point. You could take substring idea from AWH GetApiKeyState().\nLogically you'll achieve the same result, but you won't waste CPU instruction if ID is just pending_gift_ and nothing else.. Add comment stating why dictionary is initialized with count of 3 (session slot, just copy-paste from other AWH function), switch accept and giftcardid with each other to maintain alphabetical order.. I like this a lot, just add some spaces if possible, after @id, and between >. You can use nameof(gid) here to make it more obvious for eventual debugging.. Don't forget to add it to Dispose() call.. Also it should be LogGenericError() as we do not expect this to happen.. This should also be generic error as we do not expect gid to have length less than 13.. One last space in @id,'pending_gift_' and it should be good to be merged.. No need for empty line here.. Just name it request imho, like everywhere else.. Like above.. Rename to htmlNodes to keep up with convention around.. No need for newline.. You're not making use of HandledGifts here, add .Where(gid => !HandledGifts.Contains(gid)) to the gids so you skip handling the same one several times in a row.. Misc: add logic for checking if gid is 0, like everywhere else.. One last request: add && BotConfig.AcceptGifts to this if so ASF doesn't redeem gift cards automatically. I'll update wiki to cover this. And you can add that check against 0 gid while you're at it so we're done.. System entries always go first, revert this.. If you want to sort something then sort this, it should be above SendPost \ud83d\ude42. You should not log this, user can provide empty or no parameter and it's not ASF issue, just 400.. non-empty markdown can result in empty string, such as ****, entire if should be removed, null != empty in this case.\nAlso name it either result or plainText to keep convention with input.. Alternatively leave it like that but apply text == null condition instead. This is probably even better.. Avoid non-descriptive names n is absolutely not acceptable, same for GetNLatestReleases. Use GetReleases(byte count) instead (and not latest because you're using per_page which is not restricted to stable).. Space between if and (.. Space after if.. Space after if.. Space after if.. Space after if.. No newline with else.. You're logging null error on remote failures, this is invalid, error is for us and needs correction, remote failure does NOT need correction from us. Remove logging here.. Be careful when you edit existing code and introduce potential regressions. This will cause ASF to crash on remote failure because releaseResponse can be null. Add appropriate if and include appropriate Strings.ErrorUpdateCheckFailed that you happily removed.. Same here.. This is included twice, remove it and keep only MarkdownBody.. This should be DateTime and PublishedAt, not PublishedDate (DateTime is self-descriptive).. No need to waste memory for keeping reference to ReleaseResponse, just generate all your fields in the constructor.. This is unacceptable, you should not provide IEnumerable of changes, but just pure body, and in HTML, not plain text.. HIT THE SPACE \ud83d\udcaa. HARDER \ud83d\udcaa BETTER \ud83d\udcaa FASTER \ud83d\udcaa STRONGER \ud83d\udcaa. Replace this with ChangelogPlainText that should work similar to ChangelogHTML, also cache MarkdownDocument with changelog only so call to ChangelogPlainText after ChangelogHTML would only render MarkdownDocument as string and skip expensive MD evaluation.. StringWriter is IDisposable, add using() { }.. This doesn't make any sense, just use [FromQuery] byte count = 10.. Add check against count.Value being 0 which would cause ASF to log null error once again because of wrong user input.. Replace ElementAt(0) with FirstOrDefault(). You'll get exception when ASF returns non-null but empty List. You still need existing null check.. This is pointless since you're not doing anything anyway, just return objectResponse?.Content.. Always add newline after control block.. I think it'd be a good idea to rename this to ChangelogHTML so it matches.. Also it's a good idea to remove else since you have return above and do var response = first before further null call.. Missing null check, you introduced NRE.. WE'RE BACK BOYZ \ud83d\udcaa. https://www.youtube.com/watch?v=GDpmVUEjagg \ud83d\udcaa . This should be static.. This serves no purpose, just remove this alias and update references.. \ud83d\udcaa. \ud83d\udcaa. \ud83d\udcaa. \ud83d\udcaa. Having A() that just calls B() doesn't make sense unless A() is action/event on its own and B() is subroutine. If SendTradeOffer() doesn't make sense then instead of doing it like you did, rename it so it makes sense for all codes calling it, instead of making pointless alias of A() -> B().. So why exactly did you decide that extracting code from a single function and duplicating it in 4 different places was a good idea?\nPrevious approach was fine and much better than your existing one. I still have no clue why you won't write a generic action responsible for sending a trade and call it with different arguments from different loot/transfer commands. Right now this code is worse than before a PR.. Move this block to appropriate place as it was done in old function.. Since targetSteamID is non-mandatory (can be 0), while appID and contextID can't, it should be declared as 3rd argument.. Not sure why you're lazy-initializing it if you're guaranteed to ask for that during kestrel initialization. Why not a simple variable that is set in Start() if not set before?. Prive write modifier + init to default dir and eventual correction to custom in if.. Paying attention when doing code edits would be a good idea \ud83e\udd14. Now you can check if kestrel requires absolute path here, because Directory.GetCurrentDirectory() is almost never needed, you'd just use relative www, ASF already switches to given directory when --path is given.. What do you mean it doesn't work? It worked before, so it'd be wise to check why exactly it doesn't now.. That's better, it means that Kestrel needs that, not SharedInfo. I'd suggest keeping shared info as it was before and instead doing Path.Combine() magic in kestrel directly, while adding a comment why you're doing Directory.GetCurrentDirectory().. And it also means that default www directory doesn't need HomeDirectory there, so there is no reason to edit SharedInfo.cs at all.. And like I said above, you don't need absolute directory here because HomeDirectory is already default for kestrel, so just use relative.. Now add comment describing why absolute path is needed and test if everything works, including your GET /Api/WWW/Directory that you modified in other file.. Try to avoid changing original encoding.. Try to avoid changing original encoding.. suggestion\n    <PackageReference Include=\"Microsoft.AspNetCore.Cors\" Version=\"2.2.0-preview3-35497\" />. suggestion\n                // We want to apply CORS policy in order to allow userscripts and other third-party integrations to communicate with ASF API. suggestion\n                // We apply CORS policy only with IPCPassword set as extra authentication measure. suggestion\n            // Add CORS to allow userscripts and third-party apps. \u2468. You've noticed this redirects to wrong action, and you didn't think for a second that just redirecting to proper Restart() action that already exists is the right way to go about it? \ud83e\udd14. Use enum here, call ToString() when needed instead, 4 bytes is cheaper than 4 bytes per character. Also rename to WalletCurrency.. Rename to WalletBalance.. Do we really need this? I'd just display 0 in currency instead.. Add newline.. Bot doesn't need to be connected for this.. This will not show decimal digits, use / 100.0 instead.. You can check what ECurrencyCode of 0 is, if it's unknown, you can use that info for no wallet, if it's not unknown (but something like USD), you can make WalletCurrency ECurrencyCode? instead and check for null.. @MisakaDev Very good! Then simply remove the bool you've added and use this for no wallet, the message can stay.. If there is Balance64 (likely ulong) then you should use that one instead.. Although on the second look it's good to have it in place so leave it be, people won't get false impression or outdated balances this way.. Yep, they didn't add 64 field I've seen in mine dump, this is fine, then keep it as it is.. Still rename to WalletBalance left.. You forgot about version with no <Bots> argument. You have case defined above.. You have enum, so use != ECurrencyCode.Invalid instead.. Balance: alone might not be descriptive enough, rename to Wallet balance:. Add balance to make it more descriptive as well.. You're right, this sounds better, I don't know why \"bot has no wallet balance\" sounded better in my head, I apologize.. @Abrynos VS doesn't always respect this, but it's fine, I can fix it myself.. Stick to the convention of other similar calls and name it body.. ASF has convention of using HasValue on nullable types, use it instead of == null.. Use level.Value to indicate that it's no longer possible to get null here.. Using Task.Run() here is inappropriate since target method is already async Task, check other calls to async methods.. Stick to the convention and  remove blank line from here.. I'd appreciate if it was more obvious, something like \"Bot has {0} level.\". account -> account's and period on the end.. This should be on the same line as ending } in try. You can't assume that this string will always be together with bot name, so no, this is invalid. Use Bot has level {0}. which works always.. Remove old AWH way of getting token entirely, we never expect AH to fail, this routine should never be executed.. With new AH way of getting token, you should not cache it as it may still change during runtime and there is no longer a reason to do so, as trade token is not used often enough and AH responses are instant.. This will ask for token before it's deemed as needed, previous way asked only if ShouldAnnounce().. As stated in the JSON itself, this property is not required, so it can be a null value. Removing nullable type from here is wrong.. You entirely removed the logic responsible for guessing proper purchase result detail if it's unavailable, this is also wrong.. This is required only on accounts without wallet created, and in its current form is awfully wrong as being executed on already-walleted accounts. This should be its own function and available only when EResult explicitly states that the wallet is not yet available, not by definition in all conditions.. The previous code worked properly without this bit, so either you should claim that current code doesn't work under any circumstance (wallet created or not), or you're wrong. If it's the first case, this should be reverse-engineered from the grounds up by checking which function is required to be called, and not which functions are called from the browser in shitty Steam's javascript code (which always communicates with the backend in the worst possible way).. And if it really changed (which I heavily doubt), at the minimum you should record whole traffic (for people with wallets and without) in order to spot a difference (because there should be something) and add proper logic for that.. For reference: https://steamstore-a.akamaihd.net/public/javascript/redeemwalletcode.js?v=OsL8Jt8oANiA. From what I see and based on my gut with working with Steam's crap, just executing confirmredeemwalletcode should do the trick for walleted accounts, while those without wallet would need to execute createwalletandcheckfunds firstly, and since that one might require extra details (such as city, country, address), it probably shouldn't be implemented by ASF.\nIt'd probably work if instead of whole this PR you've just changed the request address. Valve probably also moved it there, and re-implemented old endpoint as extra validation (but not redemption). It's interesting, since it allows to check if codes are valid without redeeming them \ud83e\udd14. I asked my friend and he said that they use validate endpoint for determining whether user haswallet so the JS code knows whether it should create wallet or redeem wallet code next.\nVALVE COME ON YOU REALLY COULD DO THAT BETTER.\nIdea for now: skip whole validate mess, check if user has wallet via our recent Bot additions, if he doesn't have wallet during redeem, throw the error right there (keeping original \"can't activate from client\" would do), if he has wallet call confirmredeemwalletcode which is current implementation, just with changed request address.\nIf the above solution works, this is most likely what ASF should stick with. ASF should not create wallets on its own, and the AWH endpoint should not be executed with no wallet available, to not run into the error to begin with. The remaining bit (once this is confirmed working) is to check whether detail is always available in new endpoint (valid/invalid/dupe key), and if yes, update JSON definition accordingly.. > ASF should not create wallets on its own (...) since that one might require extra details (such as city, country, address). Yes, I've checked the code and it looks like you could create wallet (omitting address/city/everything else) but only if user already has existing wallet available.\nSo in this case, proper order is:\na) When AH finds out about wallet key, check if user already has wallet (Bot already knows that)\nb) If not, keep original error and do not enter AWH at all\nc) If yes, call that crappy validatewalletcode and do the same as JS:\nif ( result.haswallet )\n        {\n            if ( result.currency == result.wallet.currencycode )\n            {\n                                RedeemWalletCode(); \n            }\n            else\n            {\n                                CreateWalletAndCheckFunds( false );\n            }\n        }\nd) Notice how create wallet response decides whether to create new wallet in given currency or convert, you should use the same logic and send confirm only if currency matches (unless that page redeems wallet code as well further below):\n```\n        if ( result.currency != result.grant_currency )\n        {\n            $('code_amount').innerHTML = g_sWalletCodeAmount;\n            $('code_exchange_amount').innerHTML = g_sExchangedWalletCodeAmount;\n        DisplayPage( 'redeem_amount' );\n    }\n    else\n    {\n                    RedeemWalletCode();                     \n    }\n\n```\ne) If no new wallet is needed, just call RedeemWalletCode as snippet above. You need proper JSON structures for all above details, also with proper nullable types if the endpoint is not returning some field (e.g. due to invalid session). AWH should also have 3 functions for this, while logic should be somewhere in Actions probably, or another AWH function.. > unless that page redeems wallet code as well further below\nYup.. You should not assume EPurchaseResultDetail here. Return null.. There should be a null check above failing entire function, we do not expect to not have a wallet here (even if it can be null in the response). This should be probably logged as ASF null error, unless you can find an expected situation where you have EResult.OK and null wallet while ensuring that wallet is not null before in Bot.. You sure this property name is correct?. I like to call classes InternalWallet in this case and use Wallet as the name of property. If there is already such thing in Steam.cs, stick to it.. Wallet here is redundant. This is already RedeemWalletResponse.. Or even better, return whatever responseCheckFunds has, if available.. It also conflicts with Wallet.CurrencyCode since it's not supposed to be the same. Maybe you meant CodeCurrencyCode?. Or something to indicate what that is, KeyCurrencyCode also sounds good.. But you set currencycode to be a Wallet class, this doesn't look right.. What Wallet.CurrencyCode stands for then? One should be KeyCurrencyCode and other should be AccountCurrencyCode, right now I have no clue which is which.. And it also doesn't help that one would be called WalletCurrencyCode, hence I suggest to explicitly name them key and account.. Wait, so key currency code is inside wallet? Did Valve really came up with crap like this?\nRename InternalWallet to InternalKeyDetails, rename KeyCurrencyCode to CurrencyCode (since now it's obvious). Rename KeyRedeemingWallet to KeyDetails, rename AccountWalletCurrencyCode to WalletCurrencyCode and finally we'll have it how Valve should make it to begin with.\nGod damn it who the hell alright with his mind put key details in wallet property, probably the same person who put wallet info in key validation.. When using ?, prefer to have expected case first and second one after, so change order here to have != null.. You still shouldn't assume EPurchaseResultDetail here. Return the one that the function returned, you have it available now.. IIRC we're not making use of this anywhere, so it can be safely removed.. This bit of logic should be also applied in Bot.cs in BGR.. A plugin that does excessive amount of async work (aka can block) is supposed to have async void return which will not block the calling code.\nBut regardless it's a good idea to start them all at the same time.. > when a bad coder writes bad code inside his plugin\nNo longer our concern.. > but still\nStill you're not going to stop bad coder writing a bad code of setting all internal ASF properties to null via reflection and causing fatal ASF crashes during runtime.. JArray is absolutely unacceptable in types that can be statically defined. Provide full and static JSON structure definition.. int as droprate is unacceptable, it should be reverse-engineered Enum that maps to Common, Uncommon and Rare at the minimum, perhaps more needed. Since Steam reserved 0 value, it should be a nullable type to distinguish unknown rarity.\nIt should also be named rarity, as it's stated by its internal name.. http://json2csharp.com/\n```c#\npublic class Asset\n{\n    public int appid { get; set; }\n    public string contextid { get; set; }\n    public string assetid { get; set; }\n    public string classid { get; set; }\n    public string instanceid { get; set; }\n    public string amount { get; set; }\n}\npublic class Description2\n{\n    public string value { get; set; }\n}\npublic class OwnerAction\n{\n    public string link { get; set; }\n    public string name { get; set; }\n}\npublic class Tag\n{\n    public string category { get; set; }\n    public string internal_name { get; set; }\n    public string localized_category_name { get; set; }\n    public string localized_tag_name { get; set; }\n}\npublic class Description\n{\n    public int appid { get; set; }\n    public string classid { get; set; }\n    public string instanceid { get; set; }\n    public int currency { get; set; }\n    public string background_color { get; set; }\n    public string icon_url { get; set; }\n    public string icon_url_large { get; set; }\n    public List descriptions { get; set; }\n    public int tradable { get; set; }\n    public List owner_actions { get; set; }\n    public string name { get; set; }\n    public string type { get; set; }\n    public string market_name { get; set; }\n    public string market_hash_name { get; set; }\n    public int market_fee_app { get; set; }\n    public int commodity { get; set; }\n    public int market_tradable_restriction { get; set; }\n    public int market_marketable_restriction { get; set; }\n    public int marketable { get; set; }\n    public List tags { get; set; }\n}\npublic class RootObject\n{\n    public List assets { get; set; }\n    public List descriptions { get; set; }\n    public int more_items { get; set; }\n    public string last_assetid { get; set; }\n    public int total_inventory_count { get; set; }\n    public int success { get; set; }\n    public int rwgrsn { get; set; }\n}\n```\nExtract and implement what you need.. Valve uses droprate_0, droprate_1 and droprate_2 for common, uncommon and rare, so it's safe to assume that it should be byte enum extracted from droprate_*.. And I specifically said that Steam reserved 0 value so it can't be used as unknown and you should make that enum nullable for that exact reason.. ",
    "Pandiora": "I\u00b4m generating the XML with PHP and the group64id is a hardcoded variable. Anyway, I looked at 20 configs now and its the same groupid everywhere. Also I mean theres one client connecting w/o any problems and all others are online. I will test it later with Debian Mono and give you some feedback.\n. I was able to connect all bots now. It looks like only unlimited accounts / bots connect to chatroom. I can reproduce this behaviour everytime.\n. Test, and you\u00b4re right. You can join chatroom with master (if master invited one of the limited accounts) but you can\u00b4t open group-chat.\n. Ok this guy has the same problem: http://steamcommunity.com/groups/ascfarm/discussions/1/490124466466536339/\nTheres a limit for 20 or 25 logon-attempts. I can\u00b4t find an EResult (SK2) that returns an Error-Message if Steam asks for captcha. I also can only think of doing a pause between every logon. 3 logons in just 1 second is just to much. A delay of 5 seconds might help. Will test it now.\n. Thats why you should accept this only if needed. Changing the encoding for config-files doesn\u00b4t seemed to work for me. Just use this if someone other reports the same problem.\n. Okay. Back to topic - we need an option to let bots stay connected. I tested again with 40 bots/configs and only 20 bots stayed connected. The highest amount of connected bots I saw today were ~80 bots. All of these 20 connected bots didn\u00b4t farmed any game - tested with Debian and Windows.\nEdit: Tested again now. With Windows all bots (40) stay connected and some start farming cards, but the behaviour is weird:\n- 5 bots are farming cards (more then 30 bots definitely have cards)\n- 3 bots join the chatroom\n- 1 bot that joined the chatroom is farming cards\n- console says \"farming finished\" for bots that definitely have cards\n. The delay is to short. I changed the delay to 5s first and was able to connect 80 bots, then I got the \"Invalid Password\"-Error again. Now I modified the delay to something random between 5 and 10 seconds and nearly all bots connected and started farming! I will update program.cs with a delay of 5 - 15 seconds. I think then it would be possible to connect over 200 bots. I know it will take long until all bots connected and this isn\u00b4t as fast as in the beginning, but its the best solution so far.\nEdit: The delays has to be added for reconnects also. Just add this here so I won\u00b4t forget.\n. I would say it works now with the 5s delay but I\u00b4m getting some errors with debian(mono) after ~110 bots connected:\n- EXCEPTION: UrlToHttpResponse()  The Task was canceled\n- WEB API Call timed out\nThere are 5 users trying to reconnect at the same time. With Windows it looks like its working, there were 188 bots connected at the same time. But ~20 bots were missing and didn\u00b4t connected for some reason. The log is gone so I can\u00b4t figure out what happened. Also there are no messages that those bots tried to reconnect, so dunno.\nMaybe its better to read the delay from config? I think it would help if someone has more bots then me. Its like there is a limit per minute or hour like you said and this way everyone could use its own delay depending on how much bots he owns. A user like you with 5 bots don\u00b4t need a 5s delay.\nUpdate: Tested it the second time now with debian and I have still the same problem. htop shows me spikes in cpu-usage - maybe my server can\u00b4t handle it. I\u00b4m having 2 cpu\u00b4s and 4 GB RAM, thought that would be enough. Curious this problem occurs again for 110 connected users. Last time when I tested with Thread.Sleep this was also a wall I hit and after I used random delays it worked. So maybe its the same problem again.\n. Update to 0.6 first, maybe this fixes some problems for you. Are you sure those accounts which aren\u00b4t idling games have card-drops left? How much bots are you using?\n. Just saying: I can\u00b4t confirm you have to wait 2 hours for card-drops on every game of your smurf-accounts. Even if @Sighery claims that he never had a refund on those accounts there must be another reason, When did you created your accounts? Maybe theres a difference between this 1 account that is working w/o a problem and those accounts that needs to idle every game for 2 hours or maybe Volvo changed the algorithm again. I tested it now and added some games to my alts > Idling works w/o a problem like before and w/o using the 2 hours mass-idle and some of those accounts are only 6 months old.\n. Don\u00b4t get me wrong, I just want to know why this happens for you. There are only a few things I can think of that could be different:\n- How old are those accounts that doesn\u00b4t work?\n- Are those accounts limited or unlimited?\n- Are those accounts verified (email)?\n- Are those accounts protected by SteamGuard?\nMaybe you can tell if there are some irregularities.\n. @Sighery Thanks. I can tell that doesn\u00b4t matches me or my accounts and some of them are limited. Hm, do you have to wait 2 hours on every game of those restricted accounts? \nHowever, even if we can\u00b4t find the reason I can tell you Volvo behaves weird in some more cases. It\u00b4s Off-Topic but I can tell that I have one unlimited account that can\u00b4t trade cards to master-account for no reason. There\u00b4s nothing wrong with SteamGuard, the Trade-Window opens but no items being shown and all cards are untradeable like when you bought an item from market. (but theres no 7 days restriction) I tested this behaviour with my browser, ASF and Steam-Client > everywhere the same and all are using different cookies.\n. @Sighery Ok I double-checked everything now and at first there are problems with idling games. Some accounts were stuck at idling \"Super Distro\" (over 60 hours played) and there were exactly one game left that wasn\u00b4t idled (\"Overcast - Walden and the Werewolf\").\nIf I talk about unlimited accounts I mean you spent min. 5$/5\u20ac in the past on this account. Now I saw this one account that can\u00b4t trade cards, but is unlimited, didn\u00b4t spent money on the shop and has the limitation because I didn\u00b4t bought anything at the store. But now I compared this account to 3 other accounts which are completely the same (unlimited, created and unlimited at the same time, money already as balance and so on) and on those accounts I traded cards to my main-account w/o a problem. So maybe this untradeable restriction is the normal behaviour and doesn\u00b4t work all the time.\nTo answer your other questions: All of these accounts were created ~6 months ago (after the 5$-limitation-rule), all of them have SteamGuard activated, public profile, and on most of them I spent 5\u20ac to unlimit them. The only thing I could think of is that I accidentally used a vpn or proxy with this account and Steam limited it for 30 days.\n. @JustArchi Yeah, now I just found out theres a bug with Steam displaying the hours played.\nExample (\"Enclave\"):\n- an unproblematic account displays no hours for idling Enclave, but I\u00b4m sure I traded the cards to my main-account\n- the problematic account displays the hours but also didn\u00b4t idled \"Overcast - Walden and the Werewolf\"\nAnd now to totally confuse you: I can now trade with the problematic account if I send the trade-request from the master-account. So my first problem solved itself but I found out ASF doesn\u00b4t idle Overcast. :/\n@Sighery Excluding wouldn\u00b4t help because ASF doesn\u00b4t tries to idle this game.\n. @JustArchi Don\u00b4t do this. Like I said there\u00b4s a bug on Steam depending the displayed game-time.\nEdit: Oh okay you count the time client-side?! Well then it would be okay.\n. Or just add it to the config too and use 10 hours as Standard-Value.\n. Okay. I will test now why Overcast isn\u00b4t working and report back in another issue if problem still exists.\n. Just to be sure I don\u00b4t forget it, an example how to implement 2FA with C#:\nC#\nSteamAuth.SteamGuardAccount authaccount = null;\nauthaccount.SharedSecret = \"yourcode\";\nif ((int)callback.Result == 85)\n{\n    long steamtime = SteamAuth.TimeAligner.GetSteamTime();\n    string code = authaccount.GenerateSteamGuardCodeForTime(steamtime);\n    log.Interface(\"Entering two factor auth code... (It is \" + code+\")\");\n    logOnDetails.TwoFactorCode = code;\n}\nif (callback.Result == EResult.TwoFactorCodeMismatch || (int)callback.Result == 89)\n{\n    long steamtime = SteamAuth.TimeAligner.GetSteamTime();\n    string code = authaccount.GenerateSteamGuardCodeForTime(steamtime);\n    log.Interface(\"Code expired, entering new two factor auth code. (It is \" + code+\")\");\n    logOnDetails.TwoFactorCode = code;\n}\nSource: https://www.reddit.com/r/SteamBot/comments/3udhkd/everything_related_to_escrow/\n. Proof me wrong, but with 2FA enabled you have to provide the code each time you start ASF or lose connection and so on. ASF then asks for the code for every account and this isn\u00b4t nice if you have a dynamic ip like me. Depending the 3-days escrow-bs it is important to not have to wait 3 days especially during holiday-event. You will lose all cards at the end of the event and either use them before it ends or sell them. Otherwise I wouldn\u00b4t care about the 3 day delay. Currently I\u00b4m doing it manually, but like I said before - its a pain.\n. Well I asked some friends and they also say they have to provide a new auth-code on each login. Now I\u00b4m confused.\n. Hm, not what I wanted but I\u00b4m fine if I only have to enter the auth_code one time for every account and forget about it. Otherwise generating the key for login and trade-confirming by secret- and identity-secret would be nice.\nYour approach by including 2FA into ASF sounds nice but like you wrote, you can\u00b4t use a second mobile-device. If you wanna stay with implemented 2FA then we need a command to retrieve a 2FA-Code via chat or to export the needed data, so we can use them for login via Steam-Client/Browser. Anyway, I don\u00b4t need it and I\u00b4m not crazy enough to add a new mobile-authenticator for all accounts.\nBoth options sound good, I will test it later. Thanks for your work.\n. Oopsie. But if I understand this correctly using the old session only works if you let ASF run all the time, right? So in the end if I don\u00b4t use the implemented 2FA-Auth and shutdown my pc I have to provide the auth-codes on every startup / new execution of ASF. :/\n. :D currently testing it\n. Ok, now found out why the client is asking for Auth-Code on every startup:\nI\u00b4m using my AccountSwitcher-Tool that is starting the steam-client with password and username parameter but doesn\u00b4t uses the \"remember password\" option because there isn\u00b4t an parameter for this function. So in the end it is using a new session everytime. I will test your approach further tonight and hopefully this is it.\n. good good\nAdded: The option for accepting trades via email must be activated\nReason: Some people on reddit complained about delayed (3 days) trades and found out its this option that has to be activated, even if you\u00b4re using the mobile-authenticator. Maybe Steam will fix this, but for now this is essentially to get everything to work as expected. For people who didn\u00b4t changed this option at any time in the past it doesn\u00b4t matter.\n. @JustArchi Can you give me an example of this file? I wanna modify my already generated files so they fit your approach.\n. If everything fails, just use sandboxie as an alternative. The free version let you set up exactly one sandbox but it would be enough for this case.\n. Just my 2 cents: If you use a lot of accounts you can get the \"Invalid Password\"-error sometimes and maybe the problems get solved if you wait a lil bit. I dunno exactly when steam stops to ask for captchas, I think it was 45 minutes. Also if you use a lot of accounts, make sure that every of your alt -accs is connected. If this isn\u00b4t the case, delete the specific bin-file and add this account again until all clients are connected. Maybe this helps you.\n. Why closing? If there is an error-message needed, maybe it could be implemented to avoid further opening of issues regarding this problem.\n. Eh did you take a look at the watch. :D I test it now.\n. Mkay, looks like the update from 2.0.1 => 2.0.2 worked. I\u00b4m running ASF in a screen, so when ASF tries to restart, the screen  @terminates, but restarting ASF is another topic and issue. Additionally all files got converted correctly and all of my bots connected successfully.\n. Also add an option to define the delay between logins of multiple accounts when ASF starts.\n. Just because Feedback needed:\nTest-Environment:\n- Debian 8.4 Jessie / Debian 8.1 Jessie\n- Mono 4.3.3 (latest build)\n- Screen 4.02.01\n- ASF 1.6 pre2\nDescription:\nThe latest Nightly Build doesn\u00b4t work and throws this error: https://github.com/JustArchi/ArchiSteamFarm/issues/116\n\nTest-Environment:\n- Debian 8.4 Jessie / Debian 8.1 \n- Mono 4.2.2.30\n- Screen 4.02.01\n- ASF 1.6 pre2\nDescription:\nLike @Ryzhehvost already menitoned \"--server\" doesn\u00b4t work. \"ShutdownOnFarmingFinished\" is set to false, but bots disconnect with message \"INFO: StopFarming()  Sending signal to stop farming\" (I forgot if this is made by design and because not running with \"--server\"). Also it looks like ASF stopped working after 30 minutes and its freezing for me.\n. Well I read a lot but not every single changelog. If you read the Wiki this error isn\u00b4t mentioned anywhere. I will recompile and test it again, thanks.\n. Like I already said, I have to much accounts to do this task again. It takes like 2 days to link all accounts to new phone-numbers. Also the data saved by ASF in those auth-files can\u00b4t be accessed easily by myself.\n. Yesterday I created a new account and checked the auth-File. Yeah, your right its just plain json and its the same json-file (maFile) that is used for SteamDesktopAuthenticator. If you told me this before when I first asked you about that auth-File, I didn\u00b4t had to find this out by myself. I will add this topic to the Wiki later and after I created a Batch-File to rename the auth-Files from SDA, so they match the auth-Files of ASF. (SDA uses SteamID as filename) \nOh btw ... if you are at the point when Steam is sending the SMS-Code and then exit ASF, the auth-File gets generated and afterward you can logon w/o a problem. If this problem wasn\u00b4t encountered before I could open another Issue, but currently I don\u00b4t care that much about this.\n. Workaround for those who wanna use SDA Auth-Files with ASF added to the Wiki:\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Import\n. Again: Wait 25 minutes globally and don\u00b4t start a neverending loop.\n. Already discussed here: https://github.com/JustArchi/ArchiSteamFarm/issues/46 and here: https://github.com/JustArchi/ArchiSteamFarm/issues/47 The problem was \"fixed\" for single bot-instances. But logically if one bot fails to connect with (Invalid Password) and has to wait 25 minutes, ALL bots have to wait 25 minutes. This should be fixed and has nothing to do with Valve Fuckups.\n. Thats not my experience. Because I\u00b4m using so much accounts the \"Invalid Password Error\" is an indicator for to much bots connecting to fast via same ip-address. In this case it wouldn\u00b4t make sense to connect other bots when other bots right before failed with the mentioned error. I will test another delay, maybe I can get it fixed this way.\n. @Ryzhehvost The problem for me is, first bot gets the error and then the next bot connects within the 25 minutes. It looks like this loop of connecting bots raises the 25 minutes-limit over and over again. Last time I used ASF we solved this by using a delay of 5-10s and it worked for me. Now something changed (I have to look up now) and I have the same problems as in the beginning of ASF again ... Yeah increasing the timeout could also fix the problem. It\u00b4s just time-consuming to test it over and over again. Oh btw: Asking for a captcha isn\u00b4t ip-based. If I connect with a different pc in the same network, I don\u00b4t get a captcha.\n. I think its the delay. I mean this is off-topic, but you can test it yourself with 2 PC\u00b4s in your network. You won\u00b4t get the same error with ASF and you can log in with accounts that throw this error on the other pc. So anyone of you know how Valve detects you\u00b4re using another PC? Maybe this way we could just use another MAC or whatever is send to Valve to circumvent the captcha (if so) or \"Invalid Password\"-Error.\nI\u00b4m using the same files for both PC\u00b4s (.bin and so on).\n. Phew. Okaaaaay, I have to test this shit again. Maybe another reason could be corrupted .bin-Files (again) for whatever reason. When I started using ASF I needed 2 days to generate all .bin-Files step by step. Generate 28 .bin-Files, get InvalidPassword-Error, wait 25 minutes, do it over and over again, until all .bin-Files were generated. Then I found out some .bin-Files were corrupted and it was a lot of work to sort them out and generate them again. I can remember @JustArchi told me the .bin-Files are valid \"forever\", so I thought they should work with every ASF-Version now.\n. Yeah, I never deauthorized an account, so this shouldn\u00b4t be a problem. I tested everything again with a 10s delay and it looks like I can connect with more accounts. Everytime I wait those 25 minutes and start ASF (Debian) again, 20-30 more accounts are able to connect. Example: 28 - 56 - 89 (accounts) and so on. It would be a good idea to implement the global config asap for adjusting the delay between login-attempts.\n. I\u00b4m not sure why Steam is blocking >100 concurrent connections / logged in accounts, but its possible they limited the max connections to 100-110. Now I\u00b4m using 2 instances of ASF on my server with different outgoing IP\u00b4s. So far its working without a problem. Maybe theres a cheaper way by using a vpn or proxy but this method was the fastest and most reliable solution for me. Currently I\u00b4m working with 7s Delay and to my surprise the bots send me trade-offers - not like yesterday with just one instance.\n. Yeah, will check it again now. It looks like to much connections just fucked up everything, so it could be possible its the same with the delay.\n. Nearly all accounts connect - but not all. Last 6 accounts can\u00b4t connect with \"Invalid Password\"-Error. Its reproducable and I changed the delay to 7s now, tested again and all accounts connect.\nAlso, if Steam raises the connection-limit/time in the future, it would be good to have an easy adjustable option for the delay and no need to compile it again.\n. It\u00b4s the same with current configs. Not all settings needs to be touched. This connection-delay would only help users with more then 80-90 accounts, sure.\n. You could do the same as in the normal config-files before and warn the user to change the delay if he doesn\u00b4t owns more then a defined amount of accounts. Anyway I\u00b4m fine with it if the delay stays at 7s now and problem should be solved this way for me.\n. When I have time I will test what @Ryzhehvost mentioned and farm 20-30 games at once.\n. Just in case someone else wants to test how farming multiple games at once works and you need the appids for games where you have card-drops left, here\u00b4s a lil script for your browser-console:\nvar o='';for(i=1;i<=9||console.log(o);i++){$J('.badge_title_stats_drops>span:contains('+i+')').parents('.badge_row_inner').prev().map(function(){o=o+' '+this.href.replace(/[^0-9]/g,'')})}\n. Okay, I think this can be closed. I can\u00b4t see any significant drop-rate in case ASF is farming all given appid\u00b4s at once - like it should.\n. It would be good to find another way of farming cards faster. I\u00b4m farming for 2 weeks in a row and getting 20 card-drops a day. That isn\u00b4t that much, but Idlemaster isn\u00b4t faster at all and since yesterday discontinued. So hopefully we get some new users with new ideas. Today I discovered the same behaviour with less cards again. My server wasn\u00b4t available for some time and ASF-Bots were not online. Then when the server came back online I got like 4 card-drops for whatever reason. It would be cool if someone finds out what causes this card-drop increase, if it isn\u00b4t a by you so called Steam Fuckup and we can speed-up drops.\n. @Ryzhehvost It was meant to combine all xml-configs into one xml-file, all auth-files into one file and so on. Not all files in just one file - that wouldn\u00b4t make sense to me.\n. Or combining .auth, .key and .bin into one file would be another solution.\n. Yeah something like this. The amount of files rly needs to be reduced and to be easier editable. It isn\u00b4t fun at all for me to transfer >1k files just for testing purposes everytime and to be sure I\u00b4m using the most up-to-date files. It\u00b4s possible to reduce the config-files down to 3 files:\n- global config\n- merged user config\n- merged sentry-auth-key-file\n. Polluting? Other people will have the same problem, if they try to use ASF on their servers or linux-machine and it would be a good idea to list those errors and solutions (if available) in the Wiki.\nAlso:\n\"Full Mono support, cross-OS compatibility\"\n. Err, you mean by using !start command? If so, I would have to send this command for every bot, a command like !startall would help.\n. Yeah, would be the same effort - just clicking instead.\nOk !start would be the wrong command - !startall wouldn\u00b4t make sense then. Either checking to join the group-chat with 15 minutes interval or implementeing a !joingroupall are my suggestions.\n. Just zip the zip and then zip it.\n. You better test again later until this \"InvalidPassword\"-Error disappears. If the error comes up everytime check your config-files for wrong passwords! (Remember you\u00b4re blocked by Steam for ~25 minutes until you can try again) Also read the description in those config-files - maybe your passwords contain characters like &, <, >, ... If this all doesn\u00b4t help backup and delete your *.bin-Files and do everything again. If you redeem a product-key and it didn\u00b4t got activated, don\u00b4t forget to remove or alter those keys before uploading.\nWe can shorten your logfile to:\n27.02.2016 2:34:48 [!] EXCEPTION: ResponseRedeem() <bibabot> Object reference not set to an instance of an object.\n27.02.2016 2:34:48 [!] StackTrace:    at ArchiSteamFarm.Bot.<ResponseRedeem>d__136.MoveNext() in \\ArchiSteamFarm\\ArchiSteamFarm\\Bot.cs:line 568\n. How and how long did you tested this behaviour? I\u00b4m just wondering because you can\u00b4t know when you will get the next booster-drop.\n. I logged into several accounts and discovered there are no dismissed notifications. Please check and reopen if you have time. @JustArchi \n. Thats weird because the notifications were for cards, coupons and other stuff.\n. Dafuq. Like I didn\u00b4t tested the new release 2.0.1/2.0.2 and the update-function some days ago.\n. Hm, you could also (if not to much work) implement both scenarios. One with those 2 files for config and database and one with 2 files for every bot. Also I don\u00b4t see where is the problem with copying just 2 files instead of more then 100. If only the enabling of bots is a problem then you could implement a 3rd file where you have a list of all bots and set enable to true or false. I think it would be a good idea to have less files and a converter shouldn\u00b4t be a problem - I could write a lil batch-script if its needed. But in the end I\u00b4m using my database to generate those config-files.\n. Hm, my converter only makes sense if someone is updating from an older release < 2.0 to >= 2.0 and uses the build-in converter to merge those files. I could change it so it will store the data in those db-files, but I don\u00b4t know if anyone except me is using it and if its worth to do so. The only reason to update this converter is, that ASF included 2FA later then SDA and probably ppl like me, didn\u00b4t wanted to link their accounts again.\n. You mean checking for *.maFiles? (* = SteamID64) Yeah, should be possible, as long as you have set the SteamID-Parameter in your config-files before.\n. I don\u00b4t wanna open another issue, but why did you removed the config for Steam-Nickname? This was a very easy way to rename all of your accounts and it needed minimal effort.\n. It is relevant for those who wanna rename their bots like: Bot 1, Bot 2, ...\nFor me it was a good feature that saves a lot of time the more bots you have and when you normally have to log into every account. If some angry users are the problem, add nickname-change to global config and readd this config-parameter to the bot-configs.\n. Steam gives you a 403 (?) if service is unavailable. You could check for the response-headers and if the service is unavailable retry again in a set amount of time and set amount of retrys. I think its possible, but the question is, if its worth it. You could send the !stop some minutes later again, when you know the Steam-Service is available and thats it.\n. Maybe I missed this one, but I dunno what ASF.db is for. Cell-ID? Needs to be added to description.\n. Tested with one account:\nScenario 1:\n- muhbot.xml\n- muhbot.bin\n- steamid.maFile\n\nAsking for 2FA-Code - *.maFile won\u00b4t be removed.\n\nScenario 2:\n- muhbot.xml\n- muhbot.bin\n- muhbot.maFile\n\nBot connets and .maFile gets removed\n. Mkay, Scenario 1 converts the .maFile correctly if you enter the 2FA-Code, otherwise it won\u00b4t remove the *.maFile. Should work now.\n. Yeah and thats why my converter only works if you use botname == login-name.\n. Uh, it looks like you automatically escape passwords?! I will test this with more accounts later, just to be sure we won\u00b4t have any problems with passwords again.\n. Just because this is related to global-config: Remove the statistics-param from bot-configs and add it to global config.\n. I used IdleMaster not so long ago for my main-account (IM is discontinued btw) and card-crops needed as long as with ASF. I would also say its a problem with Valve-Servers. I also posted anywhere in the issues, that I got 40 card-drops at once and since both IM and ASF have the same weird behaviour I would ignore it.\n. Hm looks like it is the same format as for SDA. I will check it now.\n. Ok lets take a look at this:\n\nThis is the SDA-Structure (*.maFile / JSON)\njson\n{\n  \"shared_secret\":\"hidden\",\n  \"serial_number\":\"hidden\",\n  \"revocation_code\":\"R22625\",\n  \"uri\":\"otpauth://totp/hidden\",\n  \"server_time\":1449792086,\n  \"account_name\":\"hidden\",\n  \"token_gid\":\"hidden\",\n  \"identity_secret\":\"hidden\",\n  \"secret_1\":\"hidden\",\n  \"status\":1,\n  \"device_id\":\"android:2657B1780A3C9644485798BDE89C3D56FCB36F41\",\n  \"fully_enrolled\":true,\n  \"Session\":{\n    \"SessionID\":\"hidden\",\n    \"SteamLogin\":\"hidden\",\n    \"SteamLoginSecure\":\"hidden\",\n    \"WebCookie\":\"hidden\",\n    \"OAuthToken\":\"hidden\",\n    \"SteamID\":\"hidden\"\n    }\n}\nThis is the WinAuth-Structure:\njson\n{  \n   \"shared_secret\":\"REDACTED\",\n   \"serial_number\":\"REDACTED\",\n   \"revocation_code\":\"REDACTED\",\n   \"uri\":\"otpauth://totp/Steam:REDACTED?secret=REDACTED&issuer=Steam\",\n   \"server_time\":\"REDACTED\",\n   \"account_name\":\"REDACTED\",\n   \"token_gid\":\"REDACTED\",\n   \"identity_secret\":\"REDACTED\",\n   \"secret_1\":\"REDACTED\",\n   \"status\":1,\n   \"steamid\":\"REDACTED\",\n   \"steamguard_scheme\":\"2\"\n}\nThe complete \"Session\"-Object is missing, except for SteamID, which already exists with the name steamid. Additionally \"device_id\" and \"fully_enrolled\" is missing, which can be set. WinAuth has one more parameter called \"steamguard_scheme\".\nIt should be possible to generate the missing parameters or just using the .bin-Files for storing your session. All you need for 2FA are the identity_secret and share_secret afaik. @JustArchi If you want to implement it, there you have an overview.\n@Gargauth What is the file-Extension for those WinAuth-Files? (.auth, .maFile, ...) Edit: Okay you export them and you can choose whatever format you want - got it.\n. You\u00b4re importing just the 2FA-Data of WinAuth. When did you generated the .bin-Files with ASF? Today I had a closer look into how mobile-confirmations work and normally it would send your sessionId, secureLogin => Cookies, to get the list of pending market-listings. Afaik those cookies are part of the .bin-Files and if you generated them today you can use this feature initially in 30 days.\n. Hm, weird, I thought you definitely need the Cookies to get the list. I tested it with logged in and logged out account and I can only get the list if the Cookies are set. If the Cookies aren\u00b4t set I\u00b4m getting redirected to 'steammobile://lostauth'.\n. Err, are you sure you can\u00b4t use any deviceid that matches an android-smartphone?\nI just tested it with my browser and changed the deviceid-parameter to something else with the same string-length and it works fine.\n. Thats something I can\u00b4t test currently. I\u00b4m just getting the list of confirmations. To accept or decline I need to set up the request-headers and x-forwarded correctly.\n. Ok, good to know. Could you tell me if you tested more then randomly generated deviceid\u00b4s? By more I mean empty strings after 'android:' or something else like hereafter. I already read about how to use empty parameters here: http://stackoverflow.com/questions/14194059/is-it-a-bad-practice-to-use-a-get-parameter-in-url-with-no-value\nNow I tested these scenarios and will test it further when I can set the request-headers:\n- p=android:%00&a=... - shows confirmation-list\n- p=android:_&a=... - shows confirmation-list\n- p=android:&a=... - shows confirmation-list\n- p=%00&a=... - shows confirmation-list\n- p=%&a=... - shows confirmation-list\n- p=_&a=... - shows confirmation-list\n- ...a=anything&p= - returns an error\n- ...a=anything&p - returns an error\n- p=&a=... - returns an error\nEverything indicates there must be at least one character after parameter p (for deviceid) to get the confirmation-list.\n. I encountered the same behaviour after restarting ASF again and only one bot disconnects after some time.(days) I compared two bot-configs and theres nothing special. The essential parameters are the same and the password (which includes a backslash) is correctly escaped (). Then I took a look at the logfile and I can find several connection-retries from this one specific bot and all are succesfull. I have no idea how to debug this. I also compared the db-files - looking fine too.\nI can\u00b4t find the ticket which @JustArchi also reported to SteamKit-Devs, but maybe it is related to the same connection-problem?!\n. Looks like this problem was temporary. I can\u00b4t reproduce it for days now and didn\u00b4t changed anything. It\u00b4s weird only one bot was affected, but restarting the bot regularly solves this problem too.\n. I will test it too in ~1 hour when I\u00b4m home.\n. Maybe its a problem with a third-party program. ASF also fails to connect for me if I\u00b4m using such programs like Fiddler, but I can\u00b4t reproduce this special case. If you have someone with the same issue, just ask him for a list of his programs, network-adapters and other stuff that could cause such errors. If possible the one with this problem could set up a virtual-machine with Linux and test it again.\n. It would be easier to find out if we have a person with this problem and if possible look closer into it with Teamviewer/Anydesk. Also your linked posts @Ryzhehvost date back to 1-4 months. Maybe and just maybe this problem is fixed with ASF v >= 2.0.\n. @JustArchi It looks like you tested this issue locally? (your link) But you marked this with \"Can\u00b4t reproduce\". I know connecting to a user with Teamviewer should be the last step, but if you can\u00b4t find any clues, this could help. Look at this issue 2 days ago and the person who failed to import his *.maFiles. If you connected with Teamviewer and looked into it, you would have needed 10 seconds to find the issue by just opening the exported file and knowing there was no valid json. Anyway I can only guess whats wrong. Lets hope the SK-Devs know how to debug this problem.\n. Double-check if you miss some quotes or if there are weird characters. Otherwise verify your json with the tool of your choice. (if you take the risk verify your files one by one online: http://jsonlint.com/)\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Commands\n\n!2faok\n. Hm. On the other hand it would be good to auto-accept friend- and group-invites from master. I thought this was already partially included but I can\u00b4t remember how. So, if this is already implemented, just ignore this. Oh btw: How bout setting up group- and master-id with global-config and remove those parameters from bot-configs?\n. If you have a master-account connected, just check for the SteamIDMaster != SteamIDMaster or whatever. I don\u00b4t see where your problem is. Also removing the parameters from say 10 bots and include them in the global config is much less work. If you use multiple groups and Master-Accounts then this is a valid argument.\n. How about using multiple ASF-Instances? If someone shuts down his bot, you\u00b4re not affected.\n. Did you even tried to set up two instances? Sounds for me like you didn\u00b4t and even a cheap VPS could handle it. Only the connections per IP are restricted to 100-110, like I mentioned in the Wiki-FAQ. Also my oppinion is that it was never the purpose of ASF to farm cards for other people. It\u00b4s okay if your friends have enough trust in you, but I wouldn\u00b4t say this is common. However, it\u00b4s not my decision.\n. @Ryzhehvost And this is a good example again, why it would be a good idea to set up a database with your bot-data. Then you can use PHP or whatever prog-lang you like and generate the JSON-Files easily.\n. Uh, you need to return to automatic farming manually:\n\n\"Switches to manual farming - launches given appIDs on current bot instance. Use 0 appID to return to automatic farming\".\n!play <Bot> 0\n. If you get \"Invalid Password\" and you\u00b4re sure your config is right, wait 30 minutes and try again.\n. @v3rg Do you use multiple ASF-Instances on the same IP succesfully? Just wondering I wasn\u00b4t able to connect more then 100-110 bots with 1 ASF-Instance for 1 IP.\n. @v3rg Yeah, I\u00b4m also having static ip\u00b4s (dedicated). But since I got the invalid-password error, everytime I tried to connect more then 107-110 bots, I had to run 2 ASF-instances with different outgoing ip\u00b4s.\nWhats a lil bit weird for me: If you try to run the same amount of bots in your browser, you will also hit the same limit, but in this case you will exceed the max. header-size due to every steamMachine-Cookie is set for every of your accounts and your browser sends all of them on every request. (login)\nI didn\u00b4t looked at the code, but maybe we could bypass that limit by sending different user-agents. But if you use different user-agents you get a 30-day tradehold. I don\u00b4t know how this works with those *.bin-Files but there could be a solution to this problem.\nAlso if you need 4(!) hours to connect all your bots, you must get a lot of \"invalid password\"-errors and you\u00b4re spamming the steam-servers. If Steam detects you\u00b4re using so much bots with one IP and abusing their services, this could lead to new protection-mechanisms sooner or later. Even if Steam allows Multiaccounts, your case is extreme. Please think about using more IP\u00b4s if we can\u00b4t find a better solution.\n. @v3rg No, I got me a second IP for my Dedicated Server, added a network-namespace and then started ASF by piping the traffic through this  virtual network-adapter. This is much more stable then everything I tried before. I think it would be possible to use a proxy for this task, but it would be to unreliable due to proxys going offline or if they\u00b4re insecure. So if you want to automate this task you have to write or get a program that automatically gives you a list of actual proxys and restarting ASF if needed. ASF is running for 2 weeks now on my server and I can use my Steam-Client/Browser w/o problems. Also ASF is using other Cookies (*.bin-Files) than my browser/Client and theres no mechanism that prevents you from logging into the same account from multiple locations. (needed for Steam Inhome-Streaming)\nWhat do you mean by \"one-two browser session\"? Using different user-agents to stay logged into multiple steam-accounts with your browser? I don\u00b4t understand what you mean by bots-browser?! Sounds like you coded your own program.\nSo, if you\u00b4re interested I can give you the commands to set up the network namespace. Not 100% sure if this will work for you but here it is (both of my IP\u00b4s point to eth0).\nSet up Network Namespace (Debian):\nip netns add eth0_ns\nip link add v_eth0a type veth peer name v_eth0b\nip link set v_eth0a netns eth0_ns\nip netns exec eth0_ns ifconfig v_eth0a up 192.168.163.1 netmask 255.255.255.0\nifconfig v_eth0b up 192.168.163.254 netmask 255.255.255.0\nip netns exec eth0_ns route add default gw 192.168.163.254 dev v_eth0a\necho 1 > /proc/sys/net/ipv4/ip_forward\niptables -t nat -A POSTROUTING -s 192.168.163.0/24 -o eth0 -j SNAT --to-source YOUR_2ND_IP\nFor testing purposes:\nwget http://icanhazip.com -qO-\n(should return your 1st IP)\nip netns exec eth0_ns wget http://icanhazip.com -qO-\n(should return your 2nd IP)\nThen you could start both ASF-Instances like this:\nscreen -S ASF1 -d -m mono /folder/ASF1/ASF.exe\nip netns exec eth0_ns screen -S ASF2 -d -m mono /folder/ASF2/ASF.exe\n. @v3rg Ok, this really sounds like your different profiles using different browser-agents. I'm glad it works with different IP's for you too now. And to give some feedback: ASF is running w/o a problem for over 1 month now. So it's really stable to use different IP's and avoid all these discussed problems. Currently Archi is stealing :D lots of my thoughts I wanted to achieve with my chrome-extension, but when I'm done it would be a good addition to ASF.\n. Looks like there is a problem with your version of mono. Archi will tell you this isn\u00b4t the Mono-Support. ;)\nI\u00b4m using this Mono-Version:\nMono JIT compiler version 4.2.2 (Stable 4.2.2.30/996df3c Mon Feb 15 17:30:30 UTC 2016)\nAlso have a look here on how to install Mono:\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Mono\n. Can you provide any log-file? Are you sending game-bundles (subs) as gifts?\n. > I couldn't reproduce that problem, neither got similar calls from other users\nWell, same here. If I'm using less bots its working and it looks like Steam changed something lately. Even the 2.0.1.1 I'm using has the same problems with \"WebAPI Call timed out\". Increasing the HttpTimeout or LoginLimiterDelay doesn't help.\nThe good thing about the older versions (2.0.1.1) is, that they doesn't disconnect all bots simultaneously and most of the bots stay connected. But getting cards from bots or redeeming gifts is impossible currently. Um, the MachineIDHack also doesn't help btw.\n. Well I think you know there are lots of bug-reports and there are already 3 issues related to these timeouts: https://github.com/SteamRE/SteamKit/issues/236\nSomeone mentioned to use 1.6.4 or 1.6.5 of SK2. The problem here is that you're using methods that were implemented with 1.7.0, so I can't test this scenario w/o rewriting lots of code.\nCurrently the bot runs stable. Sometimes 1-10 bots disconnect but will connect again after some time.\n(Mono 4.2.3.4/Stable) 2 ASF-Instances are using ~1GB RAM. I can't remember ASF needed so much ressources but with 2.0.1.1 there are less CPU-Usage and -Spikes.\ntl;dr: Farming works and the most of the bots stay online all the time until they try to use the WebAPI. I could try to reproduce this locally later/tomorrow.\n. Hm, just an addition: !loot works w/o throwing errors.\n. https://steamdb.info/search/?a=app&q=sale&type=9&category=0\n. Yeah, I know, but I couldn't find any better search-string to get all Steam-Sales :/\n. wut\nThose cards are dropping now?\n. Nice. thx.\n. Try:\napt-get install ca-certificates # Common CA certificates are needed for ASF to work\nElse:\nmozroots --import --sync\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Mono\n. Well the posted script is rly slow compared to xPaw's\n. @frozenpandaman If you mean this script  then I don't believe this only takes 5s to finish if you load every page and if you have to set agecheck-cookies. I have written a userscript too, which were just using the returned Data from Ajax-Request without the need to change the location for every queue-item and even this was slower then xPaw's.\n. ... use this script\n. This tiny bit of text wouldn't be good visible for small icons. Just sayin'.\n. Thanks :+1: . It isn't about the Amazon-Servers and I'm also running two instances. The reason why the second instance might fail to start is due to failed logins and you have to wait 25-30 minutes between restarts. Had this problem for a long time and it is about the Steam-Servers, not ASF nor Amazon-Servers.\nThe reason why it might run on your home-network is, that this IP probably hasn't gotten any login-errors and you \"start from scratch\" until Steam bans you temporarily for 25-30 minutes.. Uh, this needs a separate API-Call? (https://steamcommunity.com/id/[bot]/inventory/json/753/3/?trading=1). Alright. At least I never needed this feature and never got any coupons for my bots. BTW: Lately you fixed some network-issue which solved SSL-Errors (Mono) for me, just in case this wasn't intended. Thanks anyway :+1: . Okay, just wanted to let you know in case someone else reports the same problem with the latest or previous stable versions and a lot of bots (~100).. Did you checked your badge-page to make sure Steam doesn't returns the wrong value? There were some fuckups today and a minor security-issue, just in case this isn't related to some error in the code.. Thanks, that could be the problem. And yes, I used another Editor.. Editor (Sublime) probably creates a temp-file to edit the remote-file on my server which is accessed via sftp. That doesn't explains why it (probably) deletes the file on my server and then recreates it and I can't test it easily or I would have to add logging. And since these edits doesn't happen oftenly it isn't a big problem. The edits to bot-configs happen on server-side, by overwriting the files with a php-script which creates the needed data from a database and this way doesn't matter also. Also I'm using Nautilus as File-Explorer and I'm not familiar enough with it to know how it works.\nEdit: Also using SublimeText and Nautilus on Linux to work remotely, is very experimental in my oppinion, even if it works out of the box, uncommon behaviour can be expected.. @13xforever  You could've deactivated ASF's Auto-Update and checked for yourself whats new for latest release? Just install a pre-sale-version of ASF and wait at least until 6th July to get the next available ASF-Release.. Yes.. I would say use a grid, like the one from syncfusion or bootstrap, with a bar on top for all possible actions. Then if you want to execute an action on one or multiple bots, just check the boxes before each bot (or just all) and click the corresponding button. A second tab in the menu could show a log. AdminLTE, which uses Bootstrap and could be a nice looking framework.. AppID: 762800\nLink: SteamCardExchange\nEdit: fml, saw that edit to late :D. My bad, filetree would've helped a lot in this case:\n\u251c\u2500ASF\n\u2502  \u2514config\n\u251c\u2500Instance_1\n\u2502  \u2514config\n\u251c\u2500Instance_2\n\u2502  \u2514config\nSo, for future-dummys:\ndotnet ASF/ArchiSteamFarm.dll --path ../Instance_1. Meh, my work was wasted on this filetree :sniff:. I don't think that it is possible to meet your requirements, since ASF already seems to timeout with a lower value and accepting huge trades takes longer than a couple of minutes for me. \nAn alternative would be to send/confirm/accept just small trades consequtively, until the inventory is empty or all lootable Items were transfered. This way it would use less resources but it would need a seperate new command to be implemented.\nIf this also isn't an option for you, I will just use a script to achieve what I want. :lollipop: . No problem, I'm completely rewriting it, since those huge tradeoffers are not necessary for what I'm trying to achieve. It is enough to check the different bots badge-pages and only send the cards needed for craftable badges and this way reduce the tradeoffer size. I think this is out of ASFs scope, so I'm not opening a new issue. :rofl: . Maybe someone can confirm, that such games aren't listed here and here.\nFor the second API it seems there are no details for the chosen appid if the cards of the game can't be listed. Tested this with games like \"Brilliant Bob\" and \"Blood of Old\" now and compared them to \"Barrier X\".. Grouped like:\nGamename, Appid, List-Status, Result 1 link, Result 2 link, marketable \nDiRT 3 Complete, [321040], delisted, true, false, true\nBlood of Old, [596440], delisted, false, false, false\nBarrierX, [463150], listed, true, true, true\nChecked it with the 3 examples above. If I didn't make any mistake and the API is reliable, one would need 2 calls (gamelist is really large, but could be stored locally on a daily basis) and by using both API's it should be possible to find out if the Game is just delisted or banned from Steam.\nIf the game is not marketable success for appdetails will be false and the appid can't be found in the GetAppList. \nEdith: Well it would be enough to check the gamelist then, so only one  call, since ASF only farms game with cards anyway.\nWith result for Link # I mean the two links I posted above.\n. I don't see that this function can be of much use, since you can just wait until you get a full set of the unmarketable cards (booster-drops) and craft a badge on your main or bots. (on Steam Sale - they're even tradable btw) This way one could make some cents and it would be even better than turning all those cards into a hillarious small amount of gems.\nIt was just interesting for me how this feature could be achieved and I can make use of it too. Maybe this needs some more testing with different unmarketable sets. Glad to see it could be done, even if it is an uncommon way.. That's the information I was missing and now this makes sense for sure. :+1: . Like I didn't mentioned reading the Wiki. How about you learn reading. ;). Okok, it is actually called ParentalCode. It is not like no one knows what I mean. https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Configuration\n. Alright, you probably didn't read what I wrote. Please honor another repo with your presence.. ",
    "AP-SpOOkY": "Thanks 0.6 works fine now.\n. ",
    "Ryzhehvost": "True, haven't seen it. But releasing in the end of the StartFarming is still required, because this would occur if nothing to farm.\n. I switched to pre-release now (had to change timeouts again, but that's another issue), if I would meet any issues I'll inform you as soon as possible.\n. well, it works for me, but I didn't have much time so I can't be 100% sure.\n. Sorry for asking, but I don't understand it from code... If one game is stuck and idling for >10 hours, what would bot do? Skip to next game, restart farm process, or just stop farming?\n. Is cj.json intentionally left in the config folder of 2.0.2.1 ?\n. Also, I tested new release, and activating the gift works as intended. Thank you!\n. @Shmurdik with command or not - it's still need implementation of creating a trade offer on bot's side. If you want it - why don't you implement it?\n. Here is a part of a log before shutdown (sadly that's the only one log file I keeped, I'll try to get more if meet this problem again). As you can see it tries to reconnect, and before this moment there is about two hours of the same attempts. After I tried to restart the bot, it try to connect, was unable, and bot shutdown again. After some time steam network become stable and I successfully started the bot. I can provide full log if necessary.\nlog_end.txt\n. Yes, slightly modified for my needs (you have seen changes in my pull-request, it should not affect login process)\n. Switched to pre-release, but unsure if I would be able to test if my problem solved - it seems to occur only when steam has some problems. \nI would also try to measure the captcha timeout.\n. Tested captchas, did about 10-15 tries, every time captcha disappeared at about 20 minutes after last attempt. A few times it was even a little faster, but maybe it's because my time checking wasn't precise - I've tried it from a smartphone, so every reload of page took time. But it's for sure not more then 20 minutes, you can give a little overhead and make it 25.\n. My bot shutdown again this night. Seems like this time this is not captcha. Here is the log before exit:\nasf_disconnect.txt\n. Okay, I'll try to investigate this \"stuck\" games I talking about to find the reasons it happens. Maybe then we'll return to this problem again.\n. Just tried to start my main account in ASF with it logged in steam client. Account in ASF started and connected normally (I have nothing to farm, so it just checked badges and stay online). Even more, I have CS:GO stared while trying it (forgot about it). Seems like no interference between this two logins.\nOh, to be precise - ASF is running on another PC, but with the same external IP (NAT on router).\n. Meet the same (?) problem today, with last version + my changes. But, unlike @v3rg, I wasn't able to login through web, got message \"There have been too many login failures from your network in a short time period. Please wait and try again later.\" Unsure if this important, just wanted to let you know.\n. > I dunno exactly when steam stops to ask for captcha\nThis was checked before, it's 20 minutes, but this time there was no captcha for me, steam just didn't allowed to login, and timeout was more than 20 minutes also. It's either a changes made in steam itself, or it's a different situation.\n. Met the same problem yesterday, but it was after asf restart, so I thought it's because previous instance didn't exit properly. But if it is not only me - then probably it's some problem either with asf or with steam.\n. I would agree that this is steam fuckup, but it seems to affect only to asf users. But if steam would not \"hiccup\" like this again, there is nothing to worry about.\n. I would say it's some incompatibility of steamkit and steam, that only happens once in a while. I thinks so, because when there was infestation of scam-bots, I've seen some bots with [unassigned] instead of name. I suppose those bots were based on steamkit too, because - what else it could be?\nHere, look at my blacklisted users: http://imgur.com/bVv5yUD\n. > On windows, I don't think so.\nOn windows - just redirect stdout.\n. So, I tried to reproduce it. As I recall - the problem happened to me in the past when bot was connected, I stopped it, an started again. I took one config file, set up a copy of asf in separate folder, and tried to start-stop it all over. After about 10-15 retries, I gave up, removed the whole folder with logs (!) and started asf with all my accounts in main folder. Soon after that I noticed that I got [unassigned] on the account I was using in the tests :laughing: So, here is a full log of this start, but sadly no previous logs that were the cause for this :disappointed:\nasf_2015_12_20__23_40_28.txt\nAlso, I replaced bot names for the sake of my paranoia. The bot that got [unassigned] is botname2 here.\n~~And, just noticed another strange thing - in steam profile it's just [unassigned], but in chat he has (8) next to his name, like this: http://imgur.com/8cW9TgJ~~ This is because i have 7 [unassigned] bots in my blacklist, so it's not important.\n. Well, I'll try to reproduce it again with your executable, but as you can see - It's not that easy.\n. I've seen situations when account were showed as online even after disconnection of asf. So I blame Valve for this. And I'm completely sure that for the log above I had only one asf running - I checked it before start.\n. I don't think it's asf, or at least it's very modified version of it - if I understand correctly - they provide web interface for it, you need re-work asf controls to attach it to web. Also, paying 8$ for something I got for free is ridiculous.\n. Started the test, will tell about results in a few hours (to make sure if it's not just long drop delay).\nWhat I can say already - this way bot seems not getting messages from personal chat.\n. It works. Just got first card dropped.\n. If reading offline messages would be implemented, I'd prefer it to be configurable too, separately of \"FarmOnline\". Because this function would mark it as read, and for main account it can be inconvenient - I'd like to see if someone messaged me while I was away.\n. Redirecting stdout works fine.\nASF.exe >log.txt\nI wrote a small script that starts asf every time with a new log name, so I have logs for almost every start.\n. Testing for a few days without my extra commands? Darn. Ok, I'll do this for Aiur. \n. Of course I can. But then we'll never know if it's caused by my modifications.\n. I'm quite agree that this has highest priority, that's why I said I'll do it.\n. Maybe you should have added some extra logging to this release then?\n. Ok. May I ask, why !farm was removed?\n. That would mean a delay upto 15 minutes after gift activation can occur. I'm okay with that, because I rarely buy gifts for bots, but someone who does can be annoyed by this delay.\n. !stop+!start is even better. We need one command for this.\n. Seems like issue is solved, but if you want to closely examine full log of about ~4 days online, contact me in steam, i'm gladly provide it to you.\n. Should we switch to testing 1.2.1 then?\n. Tested it, works fine on mono when ASF started manually. With the script I use I got two instances of ASF running simultaneously, but that's certainly not the problem of ASF, I would need to improve my script if I decide to use auto-update, so far I prefer to update manually anyway.\n. I thought about it already, in connection to the multi-activation feature I send you in pull request. Maybe I'll return to this when I have spare time. \nI like the idea of detection of owned games, but we would definitely have to check the key on at least one bot, because there is no other way to find game id.\n. I was thinking about implementing something like this (to make it a web service). Maybe next year I would have some time for this.\n. Well, I was thinking about named pipes too, so that if asf called with command-line arguments it just send data via the pipe to the running copy.\n. It's (almost) always a volvo fuckup. But if it would happen too often - we would need some bypass. But don't hurry - so far this is first time I met this problem, who knows, maybe it's last time too.\n. The problem didn't reappeared for a long time now, so even if it can occur again because of valve fuck-ups, it's not common and does not need attention. So I would close this issue.\n. seems I messed too much. closing until I clean the mess.\n. I thought about calling those methods from HandleMessage, but was to tired making it work like this to rewrite existing (and working) code. I'll try to fix it after some rest. Thanks for reviewing this.\n. suggestion - maybe when started as a server asf should not exit when all bots gone offline?\n. I could also suggest RBTray or TrayIT! (home site of the latter is down, but you can find places to download it in google.)\n. Already suggested it #20, I made a !status all command, that show what every bot is doing.\n. I like where this all going. Maybe someday I wouldn't need to merge & build own version of asf everytime you make some commits...\n. Better to close this old pull-request, too many changes in master branch since then. I better do new one tomorrow, or even a couple of them, as you suggest.\n. Of course, quality first. After all, I know nothing about C#, so I can do stupid things.\n. That's one of the reasons I'm interested in your project)\n. > User may not want multi key redeeming behaviour by default when sending multiple keys.\nWhy would user send multiple keys then?\n\nThis is non-steam-friendly because it always results in blindly trying to activate a key that might be already activated, instead - we should try to activate on bot 1, wait for response, if already owned -> proceed to second bot etc.\n\nAs well, as redeeming a single key now. As I said, I know the ways of improvement, but this does not means this implementation is bad.\n\nAlso if you have any pending message to user, consider firing it instantly after being constructed, as redeeming key takes a while and we want to update user on progress as soon as possible (when we have something), instead of when task is done.\n\nWell, this have sense, but I'm still unsure this is better. Getting many messages in steam instead of just one can be annoying.\n. > there's no need to hurry\nYou are right, there is no need to hurry if no-one need this functionality. \nAt least next time they ask me I know what to answer.\n. Extra command with same functionality is not user-friendly I believe.\n. Ok, made it statusall.\n. > Clean up ResponseStatus() to remove non-required-anymore additions\nI thought I clean it all. What is excessive there?\n\nIn ResponseStatusAll() it would be better to call ResponseStatus() on each bot, to avoid repeating the same code twice.\n\nIt would make it slower and less readable. Do you really want it?\n. Thank you for pointing this, would fix it. \nI though getting a bot quantity is good, but maybe you are right, and it's excessive here.\n. No, I satisfied with what we have now.\n. I always looking at changes you did when I merge them to my branch)\n. Skip it with !redeem command is a good thing, but that would not solve multiple key redeeming, or would it? Can we send multiple key via !redeem command?\nWell, as you can see there is not very much patterns, we can just check them all (even without last one, as it is for just one game).\n. May I suggest than to check if Key contains \"-\" more then once? That would cover most cases, and would have relatively rare false positives, because words with many dashes are not common.\nLol, you were faster)\n. @Ne3tCode blame volvo for poor documentation. No single notice about such keys.\n. You are more demanding than my boss.\n. @Shmurdik why do we need this? It's a card farming bot, where would it get tf2 or csgo items?\n. I'm just asking too.\n. Actually, I'm using mono 4.0.4 now, and haven't meet any problem. So, probably any 4.x.x would be enough.\n. I'm totally agree that in case of any problem first action that should be taken is upgrading mono and checking if all mono modules installed.\n. Did you read FAQ before writing this issue? Just asking.\n. I dare to tell you my opinion about this.\nWell, people want ability to farm certain game, and I can understand the reasons - sometimes it's important to get cards before price drop. Yes, they can stop asf and use idlemaster instead, but why have two programs that do merely the same, if we could have one?\nThe problem is - I'm unsure if this patch is the best way to achieve this. Skipping games one-by-one till you get what you want can be long enough. So, for this aim a command that skips to the needed appID would be more appropriate (and it should not add games to blacklist, but just skipping previous games, like it happens on MaxFarmingTime)\nBut it can be a temporal blacklist replacement, for those who don't want extra hours in the games they are planning to play on main account (I know enough people who are concerned about it). For example, if asf is running, and user won a game on sg, he could add it to temporal blacklist by this command without stopping farm, and then add it to config-file to always skip it. I would even say it would be nice if result wasn't temporal, and was actually written to config-file, but this would be too excessive feature to implement.\nAnd I strongly dislike \"%programname% knows better\" attitude. That's a way to get very inconvenient and annoying software. But I would say ASF so far does not follow this way - it has enough configurable parameters and commands to make it work the way I like, because I always know better. I hope it would stay so in the future releases too.\n. If you want to use analogy you got to use better ones. Let's see:\nMain purpose of the car is to ride.\nMain purpose of asf is to farm cards.\nAsf know better, how to farm cards.\nYour car knows better, where you want to ride?\nSounds like nonsense for me. Even robo-cars developed by google and other manufacturers going to have manual controls. I believe asf should have ones too. So far I'm quite satisfied with the way it develops. With recent patches I actually have almost everything I could wish for. (Well, maybe accepting gifts would be nice... But I'm unable to find any ready implementation for it, so it's gonna wait).\nI don't say that this patch is the best control we can get. I can't decide if it really useful, we need more people opinions about it. As for farming certain appID - looking at how often it's suggested, I think asf need it (sooner or later, one way or another).\n. No, it leads to too many activation attempts because you decided to rewrite it. My pull request never would lead to too many activation attempts unless you actually would drop invalid keys.\nThere is no way to tell if bot already have the game without knowing what the game is, and there is no way to tell what the game is without trying to redeeming it first, so mentioned mechanism is simply impossible, and you know it.\nMy previous pull request would send only one key to every bot, did you even look at it?\nIf have no interest in it - I'm quite okay with that, I would just tell this to everyone who is interested. I don't have much bots, so personally me don't need this feature.\nAnd as for \"nobody here is paid\" - I did what you say, I ASK for it. I would never ask if it was only for me, but people keep asking me, so I just write here on their behalf. And, I implemented exactly what they needed, but you said you don't like it. And, if you mentioned that \"nobody here is paid\" - your demands for pull requests are much higher than on every work I had in my life, so maybe that's you who forget about it.\n. > is a feature for plain, lazy pathetic abusers\nYou may not like it, but it's a major part of asf users. Calling users of your software pathetic is not really nice thing. Everyone who use multiple accounts to get cards is an \"abuser\" from this point of view. \n\nYes, and we can spend 1 request on knowing what game it is.\n\nWe need one request for every key. So it's in no way ONE request. And there is no way to tell if the keys are for the same game or another.\n\nMultiple keys redeeming has totally different objective than what you imply. I might have keys from various bundles that I own already, and I might want to send all of them to given bot, so he can redeem them all in one message, instead of in 10 of them. That's what multiple keys redeeming is - writing 10 same messages with different keys in 1.\n\nAnd noone, even you, don't need this feature. Because no bundle have a ready list of keys, so it would be much faster to copy&paste them one-by-one instead of making such list first (either by copying keys to some text file, or at least removing game titles), and then sending it to the bot. So, multiple keys redeeming that you made are simply useless, I can't imagine use case that would cover it. As for distributing keys between bots - well, as I already told you, many people that you called \"lazy pathetic abusers\" can find it useful. I have a bunch of text files with free keys sitting there, ready for this kind of redeeming. I had those lists long before ASF was created. Yes, sure, call me  \"lazy pathetic abuser\" again.\nAnd, by the way, I bet you don't even thinked about any way of \"multiple keys redeeming\" before I told you people want it, and now you telling me what it should be. Sure, you always know best.\n\nmost certainly you can add it,\n\nSorry, I won't do this again. If you ever want - you can implement it. If you think your users are too lazy (and I wonder, why users of a bot would be lazy?) and don't deserve good things - it's fine too.\nAnd, by the way, I never said forwarding keys is a bad idea. It's a very nice and useful feature, I just said that it don't covers this issue, because getting a lot of bots in \"too many attempts\" state is unacceptable.\n. I can't understand if @prorusnet suggested the same, but I keep thinking about distributing of keys between bots, and thought - would you agree if we make one more configurable parameter, that determines bot behavior with multiple keys? Something like DistributeKeys, if set to false (by default) - multiple keys redeeming works as it is now, if set to true - keys distributed between bots, one key to one bot. I could try to implement it when I would have some time, but I need your pre-approval for this idea.\n. Well, I'd like to have both config property and a switch, that the reason I start to think about #83, because this in not the only one parameter that can be changed at runtime, and we would have just one command to change any of them.\n. Well, the only disadvantage I see in this is that checking of games bot already have can be very slow if bot have huge library, especially on slow pc or internet. But actually this only means that this feature should be configurable. Maybe you should've made a separate issue for this, so that Archi don't forget about this suggestion?\n. > If library caching is used, I think it would be safe to assume that, while ASF is running, no games would be added to these accounts except through ASF - so there would be no need to sync the library with each key activation attempt, just once on each ASF startup.\nI don't think so. So far ASF can't activate gifts by itself, so if user activate cheap gifts to bot for farming - it would be done manually.\n. Also, just checked what steamAPI offers - there is a way to check if account own certain appID without requesting all owned games, and probably this should be fast enough:\nhttp://api.steampowered.com/IPlayerService/GetOwnedGames/v0001/?key=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&steamid=XXXXXXXXXXXXXXXXX&format=json&appids_filter[0]=XXX\n. @judgegr Summer/Winter sales IDs and similar is already in the program code, and actually can be removed from configs. There is no much sense in putting it to a global config neither, because if autoupdate would be implementet thats the program what gets updated, not global config file. I thought about global blacklist too, but can't imagine any use case in which global blacklist would have advantages over local.\n. While testing inventory I thought about one suggestion. Remember when I asked you to increase the timeout of web operations? I mean this one https://github.com/JustArchi/ArchiSteamFarm/blob/master/ArchiSteamFarm/WebBrowser.cs#L46\nMaybe make it configurable now, if we would have global config file? By default it can be lower than now(to make errors messages appear a little bit faster), but it would be useful for people who want to start ASF on old PC (like my old crappy home server, sigh) or with a slow internet - they could increase it to make things work.\n. I'll try to test it when I would be at home, it would need some time.\nBut I have a question - what is \"EQ\" stands for?\n. So, the results I got: bot sends offer with 202 items, and fall to exception on 203. \nAlso, the error I got was\n\nEXCEPTION: UrlRequest()  Uri is longer than the maximum 32766 characters.\n\nInstead of mentioned above 65520. Unsure, if this is legit or because I compiled it with old mono version (v.4.0.4). Would check it again at evening when I get home, VS at work is too old to compile ASF (VS 2010)\n. Almost forgot about one more thing. On account without 2fa, !loot command returns \"Trade offer failed due to error!\", but trade offer is actually waiting for mail confirmation. Unsure how to fix it, but it's not a big problem I suppose.\n. That's strange, because I still have this error. Would investigate further.\nAlso, made some extra checks, and can confirm, that 202 items limit is not because of a compiler, but because of execution under mono, under windows it works wine. So, limiting to 150 is a good decision for better compatibility.\n. Still unsure about the reasons, but this is how I got this error - I have really A LOT of items in my inventory, so the first five tradeoffers sent without problem, and the next one has error. Either this is a limit of tradeoffers to same person, or something else. Have more ideas to check, stay tuned.\n. Yep, confirmed, it's a limit of 5 trades.\n. Too bad that majority of users are not very active. We can't just make a poll and get statistics, do they really need this or not. I can say that I don't care about sorting, but that does not mean that no-one care, because sorting by cards price sounds like something reasonable.\n. Sorting by price is useful to maximize profits, because cards tends to become cheaper over time. Also, if it's a sale - someone can be in hurry to make money while offer is still valid. The question is -  whether it is worth the efforts.\n. Dupes is not so hard to find, it's just items where classid and instanceid are both the same. More complex problem is to find, if the requested and received cards are from the same game, because for this you would have to deserialize item descriptions too (that I just ignored when making trade offer sending). When you would implement this I would also suggest one more improvement that a few people asked for (because with descriptions it would be easy).\n. Is mono-complete installed?\n. > Looks good to me.\nHa-ha, nice joke! :+1: \n. If your machine or internet is slow enough, and bots have a lot of things in inventory this can cause such problems. After global config would be implemented it could be avoided then by setting a web timeout to higher value (was discussed here).\nBut it can also be some limitation on volve side too, we need to investigate if further. \n. Well, then it's volvo and we need a workaround.\n. @Shmurdik bot can't get inventory, not send trade request.\n. Have only three bots, can't reproduce.\n. Trying to collect items from other games is the fastest way to get VAC-ban. And therefore sending of items from other games is not necessary also. IMHO.\n. But what is the reason of switching to 4.6? Bigger version is always lesser compatibility, and it would not improve anything significantly. Even 4.5.2 was excessive, to be honest.\nAs for regressions - can't start with command line parameters, mono ASF.exe starts, but mono ASF.exe --server gives this exception:\n29.01.2016 10:17:50 [!] EXCEPTION: UnhandledExceptionHandler() <Main> Method 'Array.Empty' not found.\n29.01.2016 10:17:50 [!] StackTrace:   at ArchiSteamFarm.Program.ParseArgs (System.String[] args) [0x00000] in <filename unknown>:0 \n  at ArchiSteamFarm.Program.Main (System.String[] args) [0x00000] in <filename unknown>:0\nMono version is not latest though, maybe with recent version of mono it would work.\nMono JIT compiler version 4.0.4 (Stable 4.0.4.1/5ab4c0d Tue Aug 25 23:10:38 UTC 2015)\n. Nice, so you intentionally made it incompatible. That's why switching to newer framework is always a bad idea.\n. It was working for me. Now it's not working for me. This means it is incompatible.\nYou switched framework, so it's definitely made intentionally.\nProgram with new framework does not have new features or improvements. It means that switching was actually pointless.\nAll of the above is truth, that's how formal logic works.\nYou are fixing what wasn't broken, if you think this is a good idea - something is wrong with you, not me.\n. > I don't care\nnuffsaid.\n. More like you don't care about anyone. Not that I blame you for this, just saying.\n. Upgraded mono, still same error as above.\nMono JIT compiler version 4.2.2 (Stable 4.2.2.30/996df3c Fri Jan 22 00:05:13 UTC 2016)\n. Still doesn't work with --sever on mono.\n. Just checked on win7x64 - works fine with --server (didn't tested it long, but it starts & connects.)\n. No problem, if you don't care about not working program  - why should I.\n. By the way, if started with --server ASF does not stop properly on !exit command - all bots disconnect, but the program keep running. Is this by design?\n. > ASF in server mode will not exit when no bots are running\nIt's good, I was just surprised that it does not exit on command. But if it's just not in the release yet, everything is fine... Well, almost everything, I think I found another trouble, but need to test it first.\n. Solution: recompile asf with .NET 4.5, don't care about what Archi thinks about it.\n. Already implemented, command is !play <appid> to start, !play 0 to stop. Read wiki article.\n. IMHO, it's not a bug, it's working as intended. And actually only way to avoid this is don't return used key in answer, and I don't think it's a good idea. Why do you need a loop between two masters anyway?\n. It's not a bug. There is actually no way to tell if some text is a steam key, so now it's only checked to have two \"-\". You can read discussion about it in #69 if interested.\nAs for activation keys on main account - you actually don't need bot to be master of your main - you can just send a command !redeem <main_account_name> <KEY>.\n. Seems like steam does not bother about it much http://imgur.com/AimSvIK\n. :+1:\n. @v3rg could you tell more about this issue? All trade offers have same items? All five sent at once, or with delays? What options you have set in config files?\n. As it's rarely needed - no need to automate it. You can always send a trade offer from master and bot will accept it.\n. It's possible, but it would require deserializing inventory descriptions and then making a mapping inventory items to decriptions and selecting required items. I was too lazy to do this (even though some people were asking for this too) when I were implementing !loot, so I just made it to send whole community inventory. Archi would need to do this anyway if he plans to do #84, so making an option to send only cards(and boosters) should be easy after that.\n. :+1:\n. Actually, no. If one bot fails to connect because of too many attempts id does not means automatically that other bots wouldn't be able to connect too. When I met this problem one of my bot get  (Invalid Password) while other bots connected successfully. So \"too many attempts for one account\" and \"too many logins from one IP\" is completely separate limitations.\n. @Pandiora If I understand it right, after you got first \"Invalid Password\" rest of account would get it too, and all of them would wait 25 minutes, doesn't it means that after 25 minutes those accounts should connect successfully? If there is too much bots and delay between first \"Invalid Password\" and last bot - then maybe you just need to increase the 25min. timeout?\n. If I remember it right - when I had this issue because of too many attempts of incorrect login for one account (actually this was some volvo fuckup, but who cares) - this account got captcha even when logging in from different IP.\n. We need to test it. If I remember it right - before there was a huge decrease in card drop rate when started simultaneously. If now it's changed - it would be a good improvement. This can be tested in asf manual mode, as !play now accepts many appIDs. Sadly I have nothing to farm now, so can't test it.\n. Actually, I don't think this would be a good idea. Even if we found a way to do this - it would be an exploit. Valve may not like that, so it can be fixed soon if widely exploited, and all work would be for nothing. And also that this could also end up in a ban...\n. Actually I don't like the idea of combining files that user can edit with the ones that user shouldn't touch.\n. Maybe we can implement a command for this too? Next time there would be free game like this I can try to track what web requests steam makes.\n. Just another false positive. ASF 1.5 Already shows as clean on virustotal, and 1.6 has one false positive yet (but not Microsoft). Blame crappy antiviruses for this.\n. So, I contacted @kofe88 and together we were able to reproduce the issue. Here is a steps to reproduce:\n1. Play game on one of the accounts, let's name it Bot1, elsewhere from ASF. ASF would disconnect Bot1 and wait for it to end playing.\n2. Drop key to Bot2, with the game that Bot2 have, and Bot1 - don't. Bot2 would then forward this key to Bot1, and Bot1 would successfully redeem it.\n3. Drop any key(even the same as in step 2) to Bot2, with the game that Bot2 have. Bot2 would then forward this key to Bot1, and Bot1 would catch exception mentioned above. There would be no response from Bot1 in chat.\n. :+1:\n. Did I understand it right that you want to combine all bot's data in one file? I don't like this idea. Sometimes (mainly for debugging purposes, but whatever) I move part of the bots to another PC. Now I can just transfer files with same name and be sure that all bot data is safe. With all bots data contained in one file - I would need to transfer this whole file, which is excessive. And auto-cleanup looks even more dangerous for me... If I remove bot config - it would remove this bot's data from database, and if this bot had 2fa - it would make this bot unusable even if I recreate his config from scratch. Does this really worth implementing?\n. Just switched to pre-release. Converted and running successfully, good job :+1:\nNow we can't have comments in config files, so maybe we should add some readme.txt with installation instructions to the release zip? Maybe this would decrease the number of questions asked on sg forums... Of course after those documentation would be written, it could be just a copy from wiki without formatting.\nAlso, @Pandiora may want to update his converter of auth files from Steam Desktop Authentificater, because now .db files contain not only steamguard data, but also a login key. Am I right that LoginKey there can be empty and would be replaced after successful login?\nSome people may be disappointed because of lack of local blacklist in new releases. Not me though :smile: \n. Converter is not equal to re-linking, because it allows two authenticators to be connected at the same time. For example, on my main account I have connected mobile authenticator, imported to Steam Desktop Authenticator and then imported to asf. This way I can login using any of three. This is only useful when linking main account, but still this is nice to have. Of course, you don't have to support it, it's more then enough that structure of .db file is open and clear.\nAs for blacklists - some people very concerned about not farming games they going to play, and still want to farm card from games they not going to play (free ones, etc). I don't share this point of view, so I don't need separate blacklists, just noticed that someone can be disappointed it's removed.\n. Also, one of my friends was very angry that ASF renamed account because of this option, so it would be less confusion without it. \n. > I'm wondering how did that happen, since the default property is \"null\".\nThis person didn't understand that this value would change actual steam nickname, and set it same as steam login.\n. @kofe88 reported that he met this issue again\n12.03.2016 3:04:17 [*] INFO: Stop() <olyshonok> Stopping...\n12.03.2016 3:08:01 [*] INFO: ReconnectIfNeeded() <olyshonok> Reconnecting because our sessionID expired!\n12.03.2016 3:08:01 [*] INFO: Farm() <olyshonok> Still farming: 294040\n12.03.2016 3:08:01 [*] INFO: Start() <olyshonok> Starting...\n12.03.2016 3:08:01 [*] INFO: OnDisconnected() <olyshonok> Disconnected from Steam!\n12.03.2016 3:08:01 [*] INFO: StopFarming() <olyshonok> Sending signal to stop farming\n12.03.2016 3:08:01 [*] INFO: StopFarming() <olyshonok> Waiting for reaction...\n12.03.2016 3:08:01 [*] INFO: Farm() <olyshonok> Stopped farming: 294040\n12.03.2016 3:08:01 [*] INFO: OnConnected() <olyshonok> Connected to Steam!\n12.03.2016 3:08:02 [*] INFO: OnLoggedOn() <olyshonok> Successfully logged on!\n12.03.2016 3:08:02 [*] INFO: Init() <olyshonok> Logging in to ISteamUserAuth...\n12.03.2016 3:08:02 [*] INFO: StopFarming() <olyshonok> Farming stopped!\n12.03.2016 3:08:03 [*] INFO: Init() <olyshonok> Success!\n12.03.2016 3:08:07 [*] INFO: IsAnythingToFarm() <olyshonok> Checking badges...\n12.03.2016 3:08:07 [*] INFO: IsAnythingToFarm() <olyshonok> Checking first page...\n12.03.2016 3:08:09 [*] INFO: IsAnythingToFarm() <olyshonok> Checking other pages...\n12.03.2016 3:08:09 [*] INFO: StartFarming() <olyshonok> We have a total of 4 games to farm on this account...\n12.03.2016 3:08:09 [*] INFO: StartFarming() <olyshonok> Chosen farming algorithm: Simple\n12.03.2016 3:08:09 [*] INFO: FarmSolo() <olyshonok> Now farming: 294040\n12.03.2016 3:08:10 [*] INFO: Farm() <olyshonok> Still farming: 294040\n. Fifth line:\n12.03.2016 3:08:01 [*] INFO: OnDisconnected() <olyshonok> Disconnected from Steam!\n. Maybe disconnecting should have some timeout, and if it didn't got OnDisconnected it should retry? Or this would be too hard to code?\nAnyway you must be right - looks totally like a volvo fuckup.\n. Seems like I messed with my files at first, but now it works in all scenarios. Tested without db, with db and \"_SteamGuardAccount\"=null, with renamed and original .maFile, all works fine. Thanks Archi :+1:\n. You can always restart it with cron or other scheduling software, especially if you use WCF. \n. Looks like another volvo fuckup. I've met the same (or at least very similar) problem with idlemaster once. If it's not happens often - I don't think it worth efforts to invent workaround.\n. Of course I can't be sure it's server side, just saying that I've met very similar problem once.\n. Well, actually we can re-read what steam returns, and if it does not changes for an hour - restart, but this issue is rather rare, I don't think implementation of such workaround worth it, and also it would make more unnecessary requests to badges page, I doubt it's a good idea.\n. Oh my, I should be more attentive... Actually, I made !confirmall just in case, if you think it's not useful - don't spend your time on it. If there would be any users who need it - it can always be implemented later.\n. Switched to new release. So far seems stable. From the new functionality I tested only !2faok, works fine. \n. I can be wrong, but if @SSadistic says previous version were working, can it be that this is because of config conversion go wrong?\n. Fine then, I was worried that this could cause problem for some users... Because we actually tested conversion only on our accounts, and may have missed some bug.\n. You know, today I added a gift to one of my bots. Let's see:\n- I haven't any key to activate it, so first option would not do the trick.\n- Handling of steam gifts isn't done yet. After it would be done, maybe we wouldn't need this functionality indeed, but for now - we need some other way.\n- Yes, waiting for a few hours is always an option. But people can be impatient, and send one command is much faster.\nIf I understand it right, you were saying that restarting farming module is unsafe, and that's was the reason to remove !farm command. That's why I suggest to restart whole bot - it should be safe, I do it by hands quite often, and that's how I solved my today's problem - just !stop bot and then !start it from other bot. It works fine, but having to switch chats is inconvenient, if we can have one command that would do the trick.\n. :+1: \n. I've heard about that issue a couple of times. This is it, right? http://s020.radikal.ru/i713/1512/4e/f7b55de30d65.png\nSo, despite it's very rare, it's not a problem of one specific user.\nFor some people it mysteriously was solved when switching to next version of asf. For some - not. And I have no idea what could cause it :disappointed: \n. Here is a links to people with similar issues, just in case:\nhttp://www.steamgifts.com/go/comment/ZLOPEk6\nhttp://www.steamgifts.com/go/comment/GJkx59P\nhttp://www.steamgifts.com/go/comment/IbaHmUk\nhttp://gameminer.net/forum/7/39087?page=4 (in the middle of a page, can't link to the comment itself. the image I posted above is from this post).\n. I wish we could get some statistics about what OS and Installed software they all have... Maybe we can find what they have in common, and then reproduce the issue for debug...\n. > Maybe and just maybe this problem is fixed with ASF v >= 2.0.\nIf Archi wouldn't post this issue I would not bring these links. But all points that this is the same issue, it just occurs rarely enough.\n. ASF is a console app. It can't be minimized to tray by definition.\nThere are plenty of apps though, that can minimize to tray almost any window, like http://rbtray.sourceforge.net/ for example. Use it.\n@JustArchi maybe this should be added to FAQ?\n. > change current approach from accepting all confirmations to accepting only trades involving bot and the master.\nAt least make it configurable for each bot it you would implement it.\n. I don't really get, why you don't want to use FarmOffline ?\nAnd, if you really need this - you can easily fork ASF and write your own functionality.\n. ~~Adding to masterid to global config is really bad idea, if you have master account connected it will end up in a dead loop of messages.~~\nNevermind, I was wrong. Don't like the idea anyway :stuck_out_tongue: \n. First of all - I don't like that you changed entities here. You should have leaved Master main account with maximal privileged and add a limited one as Owner. Because now everyone would need to modify their configs, even though not using ASF for multiple people.\nAnd, mr. @kofe88 told me that commands from Owner does not seems to work via group chat - I didn't checked it myself because don't had time yet to test new version, so maybe someone would check if it is so?\n. > No, you can leave it as it is, only global commands will not work. \nOnly? You're an optimist.\n\nAlso it's modifying one config property, if that's too much for somebody, then probably using ASF is too.\n\nIs somebody have like a few dozens of bots - it can be inconvenient. I didn't said it's a disaster, but it was easier to avoid this in ASF, than make troubles for everyone. And I understand that now it's too late, too bad I didn't thought about this earlier.\n. Ok, maybe I overestimate the inconvenience, sorry.\n. If your proxy supports it - you may try to use some proxifying software, as freecap or proxifier for example. I dunno if it works with .net executables though.\nAnd if you have a http-only proxy, only tunneling would work.\n. Building works for me too. Check your environment.\n. First of all - this is not a helpdesk. Issues are dedicated only to bugs and suggestions about ASF.\nAnd about your question - you probably have limited account, you need to spend at least 5$ at steam store to remove limitations.\n. @ZeKraggash forwarding via group chat is a bad idea anyway... Because all bots in group chat would try to do this simultaneously. \n. Send it to the bot with DistributeKeys on (if you mean that the keys are for the same game).\n. Let me explain. With both DistributeKeys + ForwardKeys on, it was working like this:\n1. Trt to activate on first bot.\n2. If key is OK, switch to the next bot and next key and go to 1.\n3. If key if duplicated - switch the next key, and go to 1 (now you have broken this)\n4. If key is already owned - swith to the next bot and go to 1.\nI think it was the most optimal way to activate keys, because it would utilize both keys and bots to the maximal limit.\nActually, I thought about scenario you made now, and decided that this scenario is actually the worst one, that's why I didn't bothered to implement it (also I didn't wanted to make one more config switch, because two is already too much). \nSo, now I'm confused what to do. Probably I would need to fork again, and go to the hell of updating it every time you update main branch, because current build lacks one of the features I use most.\n. Thank you very much Archi, would test if right now\n. At a first glance works perfectly. Thanks again!\n. As a part of discussion - I like the way it is now. I don't see a reason to send random messages to bot, so, in most cases, it's either command or a key. Current check makes sure that if you accidentally sent message to a bot instead of your friend, it will not be handled as a legit command, that's all. Of course it's possible to make a regex to make it even more bulletproof, but it would be big, time consuming (when redeeming multiple keys), and if valve decide to add slightly different key format - we would need to edit it. So, I think using regex in this case is redundant. Of course decision is up to Archi, I would not mind any solution that works and does not bring inconvenience comparing to current state.\n. How about just decreasing consecutive spaces to just one? It should not be very hard to implement, and I doubt we would ever need two or more consecutive spaces in commands.\n. Already done #201 \n. Just tested on Windows 10 Home x64, ASF 2.0.4.0, everything works properly. So it's a problem in your system, not ASF.\n. Are you tested every .net program in the world to tell that there is no other programs with problems?\nTry to determine what .net version you have as described in this article https://msdn.microsoft.com/en-us/library/hh925568%28v=vs.110%29.aspx\nOr just try to reinstall .net of recent version >=4.5.1.\n. Come on, it's you who need this. If you don't want to help yourself - why do I care.\n. Thanks Archi!\n. Why don't you add just one bot and control others via this bot?\n. This could be also just another volvo fuckup. Yesterday steam was very unstable, I was unable to login from web browser.\n. Those are not illegal characters, as far as I know - it's just a substitutes to avoid misread codes. If you take a working steam code with \"5\" in it and change it to \"S\" instead, code should still work.  Same goes for \"0\" and \"O\". And, if steam has this foolproof why should we deny it?\nAs for wallet codes - I don't have an opinion for that, because I actually never used any of that. In many countries there is no shops to buy steam refill cards. I don't know how often users use wallet codes, nor I know how often they do it on bots. Sadly we lack feedback of this kind. If enough users will be interested in it - I don't see why not implement it.\n. > Valve can't change them easily\nActually, they can. Steam client is auto-updated, so they can just update both client and server any time. I just hope that they are to lazy to do it.\n. > Conversion \"back\" will not be possible, and converter will also disappear in a month or two since first release of a new version\nDo I understand it right - it would be not possible to convert from SDA to ASF and vice-versa anymore? Than this is the worst update imaginable. I hope I just didn't understand you right...\n. > but not possible to re-create X or Y back from Z.\nThat's a bad news. I always considered ASF as a backup way to restore my authenticator in  case something happens, and now I would not have it. Not to mention that for my alts I only have ASF set as the authenticator, and losing possibility to export it would make me sad. Why it is not possible to re-create other formats? Would new format miss some information needed? Or it would be actually possible just not implemented within asf? If it's latter case - then I think it's still ok, I could always write a convertor if I need one.\n. > mainly to force users into the scheme of general purpose authenticator of SDA or WinAuth\nI see. So no actual reason, just personal preferences. Well, bad news for asf users. Thanks for the warning though.\n. > Let's suppose I import existing ASF 2.0 format to SDA or winauth, will it provoke the 7 - 15 days restriction period that occurs when linking a new authenticator or will it act as a clone?\nIt should not provoke the restriction, you are not getting new authenticator, just transferring data to another software that would handle it.\nAnd I'm strongly agree with the rest of your post.\n. Well, at least people who use parental pin would be probably happy with this update. \n. Talking about \"should I fix what is not broken\" you mentioned in other issue... Switching to 4.6.1 is still brilliant idea.\n. Any idea about how database can become broken? Any precautions about how to avoid it?\n. I wonder, why people are always able to register on github and post an issue, but never able to read? How is that possible?\nAlso, https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration has all the information you need. If you CAN read, of course.\n. > Ergo small sets are more useful as a short-term priority over large sets which are more often just sold at some point in the future.\nOnly if you plan to craft badges. You'll be surprised, but many people don't. This feature would make ASF slower (because of parsing cards quantity and sorting game list), and I'm not sure how useful it would be for the majority of users.\n. Already implemented, ASF checks steam badges page every IdleFarmingPeriod hours. \n. I don't have now time to analyze new code, but if I understand it right - we still need to try all keys on first bot, to find out it's ID? Then it would be dramatically worse then DistributeKeys in case if all keys are for the same game. I don't like it, as that's the common situation for me. And, as far as I know, lockdown value is 10, not 20.\nI don't see much reason to ditch DistributeKeys also - if someone don't need it - he can just skip it in configuration and thus leave it with default value. I really like how ASF handles default values - it makes configuration more flexible for those who need it, and does not make it hard for people who just want to run ASF.\nMy opinion - DistributeKeys should stay, but of course it should use the benefits of recent improvement to skip bots that already have the game if both DistributeKeys and ForwardKeysToOtherBots is true.\n. > if that bot will be next in the queue of distribution then he'll still try to redeem that key on his own account, as he won't know to which game key relates to without trying.\nI'd prefer in this case that bot don't get the key twice. I see this as two different situations:\n1. Main use case - activating a lot of keys for different games (sometimes may be same, but rare, and considered a degenerate case). If user wants to activate all on one bot - both configuration properties should be false. But if user don't care, to which bot key would be redeemed - he sets ForwardKeysToOtherBots to true. And of course this user don't need DistributeKeys at all.\n2. Main use case - activating a lot of keys for the same game. Opposite to previous, keys for different games is an exception, not a rule. In this case user needs DistributeKeys, and if it to utilize keys to the maximum - ForwardKeysToOtherBots too.\nIf we try to handle those cases similary - it would be not optimal either for one of them, or for both. \nThat's why I believe DistributeKeys needed, this way every user gets what he wants more. Ideal would be a way to use both, or a way to switch between the two without restarting ASF, but I don't have any idea on how to do this convenient.\nSo, to summarize, how I think it should be if both DistributeKeys and ForwardKeysToOtherBots is on:\n1. Get new key from the list. If no keys left - exit.\n2. Activate on current bot\n3. If key is used - go to 1.\n   4 If key activated successfully - switch to next bot and go to 1.\n4. If current bot have it - switch to next bot. Repeat 2 until we find bot that don't have a game (use owned games list here). If no bots left - exit.\n5. Go to 2.\nThis would maximize key utilization and minimize activation attempts for the second use case above.\nIt was merely the same when I was working on it, just without checking owned games, which should decrease activation attempts even more.\n. This is not the right place to ask for help. Go to ASF chat or Steam group to get help.\n. But you can add workaround for this, if it happens often, even though it's obviously steam bug. Try confirm all listings, if error returned - go one-by-one.\n. I would tell you more - right now I have the same issue with my main account... on steam client. Already for a few days steam keeps \"forgetting\" me, despite \"Remember me\" box is checked.\n. > Sorry, ask GabeN\nJust wanted to show that ASF has nothing to do with this, Volvo can't even make their own client to work properly.\n. You know that this is not an issue of ASF, and still post it in ASF issues? Come on, what's wrong with you?\n. And what to do if bot is on timeout? Just stop? I'm strongly against it. Forwarding is meant for keys that you want to activate on any bot, and don't care on which exactly. So it's logical it's forwarded when bot is on timeout.\n. Well, not that I need this, I'm a control freak, so I like to confirm incoming trades by hands, but... If we consider people with 100+ bots - !lootall would generate a 100+ incoming trades (am I right?), and confirming them one-by-one would be a pain... So probably a settings to accept incoming trades from bots is not a bad idea.\n. Y U NO read before you write?\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Security\n\nIn order to use encrypted password, you should firstly log in to Steam as usual, either with PlainText or None option, then generate encrypted passwords using !password command. Pick the encryption method you like, then put the encrypted password you got as SteamPassword bot config property, and finally don't forget to change PasswordFormat to the one that matches your chosen encryption method.. First of all - I hate this idea. It makes code understanding harder, and I don't really think it is very useful - GUI interface would help newbie users much more, and that's GUI interface who needs localization, not back-end. But, oh well, you are the master, so be it. I'm writing this comment with other thing in mind, so this is just a notice.\n\nActual question is - do you plan to localize wiki too? Because, I was checking ukrainian translation, and found this string:\n\nGlobal config could not be loaded, please make sure that {0} exists and is valid! Follow setting up guide on the wiki if you're confused.\n\nIt refers to \"Setting up\" page in wiki actually. So I proposed translation with not-translated article name in quotes, like \"Setting up\". But that's actually makes no sense. If someone using localized ASF, and don't understand something - english article would not be much help for him. And if localized wiki articles planned - then a reference to appropriate localized article should be there. . we already have !lootall, why isn't that enough? !addlicenseall will be a good addition though.. I hope you won't remove it, because it would mean I need to fork and add it back :confounded: . Also, before all those %commandname%all commands existed I tought that all must be a reserved word, and should work with all (or at least most) commands that accept bot name(s). Back then you told me you don't like it, but I still believe that it's much better than having a extra commands for any case, and way shorter to type '!command all' than '!command botnam1, botname2, botname3, botname4, ... , botnameN' whenever you want to address all bots.. Great bugreport. No details, no logs, even no link to the account in question. Way to go.. Actuallly, sometimes it could be useful, because some coupons drop without badge crafting, just because you have some game, etc. But, it is really a different type, so implementing it will clutter the ASF code, and that's not desired (and we already have translations for that). And, the actual use cases are rare, and can be actually handled manually - bot's will accept your trade request, so this is not a lot of hassle, and I doubt you'll need same coupons from 100+ bots. \nTL;DR: I'm agree that this feature should not be implemented.. @HomeFork could you please look, what is shown on the badge page in your profile? If it says \"1 card drop ramaining\" than it's Valve to blame.. @TheSergiooo could you please explain more about those limited accounts... If you'll try to login to such account manually in steam - will it let you in? What will it say, like, any notice, or something?. Great way of checking the keys. We can even find out for what game this key is. Too bad it needs a locked account to work(. What? OK? But why? If you don't want to send keys to other bots - just disable key forwarding. For example, I have forwarding disabled on my main, but enabled on one of the bots. When I want something on my main only - I just send it directly with !redeem %mainaccountnamehere% %key%, and if I want just want to redeem somewhere - I send it to the bot. If this behavior will change - I will be very disappointed, so if you really think it's OK - at least add one more configuration parameter for this.\nAnd redeeming a key in a day or 2 is just ridiculous.. I still don't see why such redeeming strategy is needed. It will make the redeeming procedure more complex (and it is complex enough already), it will add extra configuration parameter, so I just want to understand use case in which it will be useful.. Hmm. Well, maybe you're right, thanks for the explanation. Good luck with Darkest Dungeon :smile_cat: . Looks like one more Volvo fuckup.. Well, using workarounds for volvo fuckups is a good thing to do, but I can't think of any reliable workaround for this. And, after all - nothing bad will happen if ASF will try to farm limited account.. Probably this is the ID's you are looking for https://steamdb.info/app/402590/dlc/ (I'm not sure, don't have this video). I'd bet those \"DLC\" are actually not DLCs, but appIDs played. Someone who have the movie can try to use !play with those appIDs to check if he get card drops this way.. 1) Learn to read.\n2) Read the f* manual.. Well, I liked previous status codes better, but if I understend it right - it's not up to ASF, it's just the codes SteamKit2 returns changed.. Thanks for the explanation! I wasn't aware there are so many different statuses, might want to examine what they got there.. I don't see why this is needed actually. If you have a few bots (as I do) - you probably don't need much group management, and have descriptive names. If you have a lot of bots - well, I doubt you'll need descriptive names for them, and you can just number your bots, and use all advantages of group management. And even if you have a lot of bots, and for some of them you want descriptive names - why not? Those bots are surely something special, so you probably need to handle them separately anyway, and so different naming won't be a problem. Maybe I just don't understand why you need this though.. >Naming bots crazily differently from their steam login, will drop any visible link between the newly named bot and the underlying hidden steam login\nAnd once again - why do you need it? Why somebody will need to name bot and steam account crazily different? And even more - why someone may want to do this and then try to find correspondence in those names? It's kinda contradiction, to do something that will make your life harder.\n<joke>\nPS. I like the idea of reminder to feed the cat. Should I make a pull request for this?\n</joke>. First of all, I have no intention of devaluing your suggestion, I just trying to understand. Yes, I don't see why tagging is useful, but it can be because I just don't have corresponding use cases. That's why I asking to explain your opinion.\nSecondly, Archi is dropping most of the suggestions because they are really not needed. Simple tool is better then complex, and archi tends to keep ASF as simple as possible, and I like it. The reasons for new feature is 1) you can't do it in another way with existing features and 2) this feature is related with purpose of the asf. Cat feeding reminder, as an example, does not comply with second condition - it's not related to farming cards.\nNow, about your example. I don't really understand - if you need to take apart active by your own definition bot from others - why would you want to name them the same as others? And why do you need to name them b1..b5 ? What will you gain from this renaming? Typing a few less characters? I would leave the names as is, if you really need the exact order (you didn't really explained why, you even didn't put \"dummy\" bots to the end of the list) you can use naming 1_Donald, 2_Daisy, etc. The order will be the same, the names will be descriptive. I don't see much sense in using !status b1..b5 in this case too, because !statusall will do the same. If I was in such situation - I would either name bot so that \"dummy\" bots were in the end of the queue, of just disable those bots  until I need them. In case I don't care where I want to redeem the game - I will just drop a key to the bot with forwarding on, and ASF will do the rest. In case I want to redeem game someone going to play - I will use !ownsall command and will see exact names at once.\nIf I understand it right - all those commands with syntax !command <Bots> are only useful for a great amounts of bots. And I have no idea why those bots will have any descriptive names (well, actually I have one - conspiration purposes, but it's too silly and not worth efforts to support it).\n. >So, do you want me to ask thousands of people using asf on how tagging would be useful to them?\nOf course no. Who need thousands of people? At least one person who need this, and can explain why he needs it (and why all other ways don't satisfy him) is more then enough. From your explanation I would suggest you are not the one who need this. Maybe one of your friends? Or you just suggesting it \"just in case\"? If it's the latter - it is a good reason not to do it. . @judgegr please, stay calm. It seems you take this too personally. Once again - I have no intention to insult you in any way. I just want to understand possible usage of this feature, and why it can't be acheived by other means. Excuse me if any of my posts seemed rude to you - I have no such intention.\n\nBut i think you still can imply i need it for myself or a friend, to fulfill a personal request, right? You can do that, for a sixth time. The answers are there, above.\n\nYou get it all wrong. If you need it for yourself or for a friend - it is a good request. Because in this case we know that somebody really needs it, and will use it.\n\nAll suggestions are being made \"just in case\" accompanied with a draft example. \n\nNo. That's not true. Every suggestion I made was either for myself or for my friends. I never suggest anything \"just in case\". I suggest things that at least one person would really use (me, or somebody else - sometimes random people just add me to ask about some features, just because their english is bad and I talk their language, so I can speak in their stead). You say that you're fine without this feature - so clearly you don't need it, right? So, what I asking - is there any friend of you, who need it, and inconvenienced because of it's lack? Someone, who will benefit from it? If no - then it means we have no proof that anyone at all will use it. Why implement something that nobody needs?. >sorry but i won't stay calm when i'm constantly bullied for making suggestions. \nReally? So far only one who bully and grudge around is you, just because your precious suggestion is questioned. You never cared to explain why this feature is useful, and even you say that you don't need this feature, and nobody you know don't need it also. And you dare to tell me about logical fallacies?\n\nThe problem is that I was being asked \"why\" so i answered \"why\"\n\nOh no, you didn't. You was asked \"why you need A?\" and the sole answer was \"to do A!\". Come on, it's a poor explanation. You keep explaining how you can use this feature, but without a word about why someone may want to use it in the first place.\nOnce again you giving explanaiton based on some strange use cases... !pause b1..b5 - really? WHY??? You want to pause all bots? Why would you need it? Why not pause asf in this case? You want to pause a subset of bots? Based on what criteria? If criteria is owners of the bots - then, if for some reason you decided to use short names (Why?) you will have to solve inverse problem - finding a bot name from steam name, and that is not solved by tags in ASF. So, this decision will bring two problems, only one of which can be solved by tags in ASF, and only one benefit - less keystrokes (come on, really? I can only think of one reason for this - arthritis, and if someone have it - do they really still playing games?). So many question, so little answers. \nAnd gitgub suggestions is not the brainstorming. Noone have the aim to implement as many features as possible. Even if it's a very good-looking features. Suggestions have to be something that is really required, not more. \n\nPS1: Moderating the topic without being asked (I guess?) is neither noble nor helping Archi\n\nLol what? Moderating? I never denied you to suggest anything you want, even if it's cat feeding alarm. But discussing any suggestion is good for the quality of project, and that's what I'm really interested in. If  my comments here are unwelcome - I'm sure Archi will let me know, and of course in this case I will stop immediately.. Hmm. That can be useful for distributing gifts among the bots, but it may require a lot of efforts to implement it, and even to find out best ways to do it. It needs a closer evaluation.\n\nThe main advantage that you do not need to add to friends bots.\n\nThat's not true. ASF can only handle gifts received directly in steam, so you'll need bots as a friends (at least one of them, if forwarding is implemented). I believe email handling is out of the scope of ASF.. Just making a note (hope you don't mind).\nThis will need more complex syntax. If user don't use WCF, then probably they send commands to some bot added as a friend. And probably in most cases user would want to buy games on main account and then distribute. So, the command will need:\n1. Bot name to which command is addressed and from which gifts needs to be send.\n2. Game ID (or list of ID) which needs to be sent\n3. Bot name (or list of names) to whom gifts needs to be sent.\n4. Optional - some mark to override forwarding (maybe alternative command with ~ or &, etc)\nOptionally, instead of (or together with) sending by game ID we may want a command dealing with an identificator of a praticular inventory item.\nSo, even in best case scenario we will need (at least) one more parameter than most of commands we had so far.. There is rate limiter of course, but other than that there is no problem to buy any quantity of gifts. But it is anyway out of the scope of asf, so why bother about it.. I was actually thinking of using name of recipient to address a particular bot too, when/if we implement this.\nBut, once again - I believe that email handling is out of the scope. . With recent changes from Valve it's impossible to buy gifts to inventory anymore. So this issue is probably obsolete and can be dropped.. First of all - I'm still not sure if this is the best idea. If we ever implement #499 there will be certainly a better way, but so far we not have it the suggestion sounds legit.\nWhat I wanted to tell - I doubt that forwarding possible without implementing #499 first, because, if I remember it right (you may want to check it), after you try to accept the gift - token gets invalid, even if you didn't actually received the gift. Also, this will interfere with current accepting gifts implementation (it only works for you because of this, because just accessing /account/ackgift/<token> is not enough for redeeming). Because of this I think it's a bad idea to try to merge it with !redeem, in the best case we will achieve different behavior of command depending of what we send as a parameter, and that's not a good way - commands behavior should be predictable.\nI don't even know if we need this command with syntax for multiple bots at all. I just realized I never tried to use !redeem with both multiple keys and multiple bot names, I should really investigate how it works, maybe this will give me an idea about usability of similar command for gift tokens.\nAnd, in any case - then there is one more problem to be solved - regexp ^[0-9A-F]{16}$ can match bot name, if the name is exactly 16 characters. Unlike keys (they at least have dashes) this can cause troubles to users who use descriptive names for bots. Can't say how important this issue, as I have no statistics of bot naming. Maybe @JustArchi could parse bot names with statistics = true and check if we have something that match this pattern?. > #499 has nothing to do with it\nIt has, because \n\nthose two issues are mutually exclusive\n\nAnd #499 is better and more native implementation. If we will have #499 - this function is useless.. But I'm not ready to start development of #499, and if I understand it right - you don't want to implement it in the near time too (and I completely understand why). So, in the meantime we may have this, if @TheSergiooo thinks (at least) he will use it, and when(if) we implement #499 - we can just deprecate this command (or leave it as is, if it does not cause us any problems).\n\nI'm not sure how ackgift works, if it just uses token and then forwards gift to guest passes that AcceptGifts can parse\n\nYes, that's how it work. If you receive the gift by email and follow the link from it in the web browser, where one of asf bots logged in - you will never be able to redeem it, because after the link is opened ASF will see it in the queue and redeem it before you are able to press \"accept\".\n\nAnd if we can, are we able to keep gift unused and forward token further?\n\nNo, we can't. Just checked it, second account gets this error:\n\nAn error was encountered while processing your request:\nThere was a problem redeeming the gift. Please try again later, or contact Steam Support for assistance.\n\n. On a second thought - I'm unsure if this idea will give any profit.\nLet's see, to send gift to the bot this way, one will need:\n1. Buy a gift, and send it to your own email.\n2. Open email, and copy token from the gift link\n3. Send the command with token to the bot.\nWithout this command, one will need:\n1. Invite bot in question to friends.\n2. Buy game and send it directly.\n3. Remove bot from friends.\nUnsure which way is faster and more convenient. Of course, it will be much more useful if you received gift from someone or bought a gift link on some gray market.\n~~Actually, while thinking about this suggestion and #499 I came to one more idea, but I'll put it to separate issue, to not clutter this one.~~\nNevermind. I tried to go into details of it and found it not so brilliant as it seemed.. @KazeZlat asf does not get emails, so it can't parse it contents.. With recent changes from Valve it's impossible to send gifts to email, and thus no way to get token, am I right? If it is so - this issue is probably obsolete and can be dropped.. Counting in group chat is nonsense.\nCounting of positive answer to !owns asf or !owns <bots> actually make sense, but only if parameter is ID, not a game name. I may look at it if I have some spare time and make a pull request if it's easy to implement.. Actually, I took a loot at this function. To implement counter I would need either to do great changes to the logic, or to parse the output string (It's easy, but I don't like this way - it's counter-productive and probably a bad style). So I definitely won't be doing this in the near time.. It works for me.. well, just a wild guess - it seems you didn't received response for pause command, maybe you need to increase ConnectionTimeout ? Or at least test if it works with sending command via steam chat, not wcf, to find out if it's wcf to blame or not.. If I remember it right - list of blocked users in steam is limited, so handling it in asf instead is not so bad idea. But why command and not a config property?. Why don't you use Crowdin?. Steam have some way to get purchase date, it shown in library on game page, but probably it requires reverse-engineering to find out how to get it, I don't know about any public api with such information.. maybe logger module can help with that? I never tried to fine-tune it, but if it's possible to filter message about end of farm to separate file, and track this file from external script - you'll achieve what you want, and even without !api. #188 #424 #410\nProbably no.. Add ``` above and below script text to keep it properly formatted. Refer to to Github markdown guide for more information.. Why do you want it? And why !owns is not enough for you?. >I ususally want to view last redeemed key.\nIt's not an answer to question \"why\". If you redeem a game - ASF will show, what game was redeemed, so no need for extra command to see title. If you want to know if any particular game is on account - there is !owns command for that. Why do you need to know what key was redeemed last?. @Royalgamer06 don't forget to add Blackjack and Hookers!. Well, in some countries internet providers don't give white IP to users, so half of a city can have same external IP. It's not user's fault. Maybe ASF should handle X-RateLimit-Reset header and set update check to this time? If I remember it right ASF can do periodical check for updates, so it would be just re-use of the same timer.\n. This will not sync all ASF instances in global DDoS. First of all, we need to handle this header only if we had error with getting updates, the rest of clients would work as before. And then, if I understand it right, this header would show only time for the specified IP, so quantity of ASF instances synced will be not that big, and will become less with every RateLimit-Reset, because some of the instances would get updated every time, and won't check for updates for the next \"Restet\". Even more,  with this algorythm, in case of every ASF instance from a particular IP running 24/7 over time they would distribute in a way that every time interval there will be less or equal to limit.\nLook, for example we have 200 instances trying to check for updates at once, time is N. 60 of them would get response (and have update timer to N+24 hours), and the rest will hit a Limit, and set timer to X-RateLimit-Reset (less than N+1 hour) . At N + 1 hour we will have 140 instances checking for updates, 60 of them would have response and would set update timer to N+1 hour + 24 hours, the rest would hit limit and set timer to N+2 hours. At N+2 hours  60 more will have response, leaving only 20 who will set timer to N+3 hours. At N+3 hours all bots would be successfully updated. This would leave us with:\n\n60 bots checking for update at N+24 hours\n60 bots checking for update at N+25 hours\n60 bots checking for update at N+26 hours\n60 bots checking for update at N+27 hours\n20 bots checking for update at N+28 hours\n\nIsn't it a perfect distribution?\nAnd, if you leave it as it is - all instances that hit rate limit today would hit rate limit again after 24 hours, and would never actually get response.\nOf course this is based on assume that X-RateLimit-Reset works on per-IP basis. This needs further research to find out if it's so. Because if it resets world-wide it would sync clients from different IPs and bring the DDoS you was talking about. This needs further research.. Don't be ridiculous. If they already hit rate limit - it means they are already synced. Checking for updates have constant period, so they would stay synced forever. What I suggest is a way to break this sync. For now if 200 instances try to check updates - 60 of them get response, rest get rate limit error. And then all of them try again in 24 hours, and 60 of them get response again, and the rest get rate limit again.. Why do you think there is X-RateLimit-Reset header at all, if not for this?. If you just don't care about fixing this - you could as well just say it, without inventing stupid excuses.. https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration. Y U NO READ FAQ?. steam glitches.. Remove Panda Antivirus, it should solve this issue.. Common sense. It's Super Effective!. But going through discovery queue does not interfere with recommendations at all. It's basically just opening game pages, nothing more, it does neither add anything to wishlist nor press \"don't interested\".. So, you admit that you don't know it, but for some reason you believe that it will influence recommendations?. > Of course, even if you don't have OS-specific package available for your OS-architecture combination, you can always install appropriate .NET Core runtime yourself and run generic ASF flavour, which is also the main reason why it exists in the first place. . Then probably this is not the right place to ask about this.. There is no chance to get x32 version until it is supported by .NET Core, so I personally would recommend to stick to ASF v2 until then.. Maybe !farm is what you are looking for?. Well, I/O error occurred because ASF doesn't have input stream after restart, so it's not a technical issue, it will occur on all systems for all users. Am I wrong?. >nothing that qualifies as such.\nWell, ASF can ignore AutoRestart if it lacks some information to start unattended, like, for example, login. Another similar case - is remember, that on startup ASF required 2fa code, but asf 2fa is not configured - then AutoRestart should be ignored too. \nOr maybe do nothing about it, but make a warning about such possibilities in wiki, because now it suggest disabling AutoRestart only in connecting with using custom user scripts.. Out of scope \u00a9Archi. It works as intended. It's your task to give it correct subid. In your particular case, use !addlicense 262718. Your ASF version is out of date. Update to latest stable, it does not have \nthis issue.\nPlub notifications@github.com 13 \u043c\u0430\u044f 2018 \u0433. 6:47:54 \u041f\u041f \u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\n!addlicense asf 272228 (game is currently temporarily free)\nAccessDeniedThis is a common problem.\nThe recent cases have encountered such problems\nBut it worked in the pasthttps://steamdb.info/app/439190/subs/\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n. You can make new branches and cherry-pick commits from here into separate branches, than make new pull request. Just saying.. WHY U NO READ?. pro tip: there is a search box on top of the page.. It's not beneficial for the owner of bot at all, it's beneficial for those who use this bot to complete their sets. Of course, as you said, it can (and will) be exploited, but in case owner have badges for those sets maxed, he can just don't care about those cards, because they can't be sold, and amount of gems obtained from them is ridiculously small. Those who care about benefits already have what they need, and they just won't use this feature. It's disabled by default, so this kind of users lose nothing.\nSo, the answer to \"why asf should trade those items\" is \"to help others\" and \"because those items cost nothing\". \nAn also, even in case of trading cards from 5-set to cards from 14-set it still can be beneficial in case you trade 14 cards from three different 5-sets for 14 cards from one complete 14-set. It looks like not probable if you only have few sets, but for bots with huge inventory it may be of use. But that's not main intention behind this PR, main reason, as I said, is to help other people complete their sets.. Could you please explain, why \"MatchEverything\" option is implemented, and what benefits user gain from activating it.. But MatchEverything has \n\nflawed logic, possible abuses and no benefits for anybody running this setting. \n\nThus leaving only real reason for not accepting is need of maintenance. And that is totally fine by me, but kinda contradicts to\n\nany pull request is welcome and should be accepted, unless there is a strong reason against it.. What if we add parser from wiki to include descriptions on compilation stage? Should not be hard, commands are in table, so structure is regular.\nPS. Oh, and by \"we\" I meant \"someone other than me\".. That's why I wrote it here, so that Archi would consider if this acceptable.. >but I see no reason why ASF should be bundled with some obsolete commands page instead of fetching current one via web.\n\nQuite the contrary, it does not make sense to read online updated description when you use outdated version. And sometimes you add to wiki data about things that only in pre-release, making it wrong for users of stable version. And with my suggestion asf will have descritions EXACTLY for that version. And if it will be build-time script, it will be no extra work to update descriptions, and since wiki can be translated - we can have even international support of inside help.\nDon't bother to answer, I know what you will say, \"not going to happen\". I just wanted to tell you that your argument is wrong.. Actually, we can achieve both if we could measure RateLimited timeout precisely.\nFor example, if rate is 10 key per half of hour - it means one key every 3 minutes. So, if we redeem a key from the list every 3 minutes, we will still activate 10 keys per half of hour (so this in not performance degradation), but without hitting RateLimited. There is a case when activating as a pack is better - is when there is less than 10 keys in a queue (and even this can be considered a degradation only if we don't need to activate key soon after this batch. If we need to - then we still need to wait timeout, so we had no advantage). I'm not saying that you must implement this, and even not saying that this is a better approach, but maybe you will want to think about it a little bit more.. Eric, you know why I reacted to Archi's answer with a \"thumbs up\" ? Because he has a point. You know, when I wrote my comment I haven't thought about farm optimization, just about key redeeming optimization, and from that point of view delayed redeem makes sense. But Archi is right, it can influence farm in a bad way, and that's what really important for a farming tool. I often argue with Archi, but this time he is right. You may not like how BGR works, but you don't have to use it if you don't like it. Main idea behind BGR is to supply bots with games to farm, and it does it best. You can still redeem keys manually, or even write a script that will redeem keys via IPC with the delays you want (it shouldn't be easy with bash or something like that).  And even more, Archi has posted a ready solution for you - you can set a delay between any two consecutive key redeeming attempts with GiftsLimiterDelay. It's limited to about 4 minutes, but it still may be enough. You can try, and if that's not enough - you can ask Archi to change it to change it from byte to int,  if there will be valid reasons (like, for example, steam rate limiting mechanics) I think Archi may change it, it should not be very hard.. I belive this report should go to ASF-ui repo, not here.. Read damn changelogs, and don't forget about the wiki. Inability to read is not ASF issue.. If you have actually read it, you would at least know there is no property SteamParentalPIN at all.. And null and 0 are different for SteamParentalCode, it's intentional and described in the wiki.. Well, you are probably the only one with this issue among thousands of ASF users. Or, more probable that you are using heavily outdated version of ASF and/or configs.. Read the hugging manual!. https://github.com/JustArchiNET/ArchiSteamFarm/wiki. Then maybe start paying attention to what you read, not just blindly try different configurations?. First of all,Github is not a place to seek for support. It was written in issue template, but you failed to read.\nSecondly, didn't you just said \"GUI loads via localhost on the machine running it\", and now you're saying it's not. Negotiate with yourself, either you or you must be wrong.. >looking forward to developers' reply\nThere are no developers of Centos here. You came to the wrong place.. If you can install mono on your platform, you may try generic-netf version of ASF.. ASF is open source, feel free to port it to mobile.. Stop to write and start to read. Already possible.. Well, I could swear I remember this feature too, maybe it's accidental regression after implementation of actions? \ud83e\udd37\u200d\u2642\ufe0f \nThanks you for implementing it!. Thank you, I don't care about the actual order as long as all bots are included in it.. Unsure if this is good idea, but I made it. Actually, the environment where asf running, and the steam client or browser where answer is showed - is too different things. We need to check it, but I think any receiving side would be satisfied with \\n\n. Makes sense. This way it will be safer.. I tried, but I have no idea how to get one named value from an array. Source has a structure like this:\n\"tags\": [\n        {\n          \"category\": \"droprate\",\n          \"internal_name\": \"droprate_2\",\n          \"localized_category_name\": \"Rarity\",\n          \"localized_tag_name\": \"Rare\"\n        },\n        {\n          \"category\": \"Game\",\n          \"internal_name\": \"app_336420\",\n          \"localized_category_name\": \"Game\",\n          \"localized_tag_name\": \"Bloodsports.TV\"\n        },\n        {\n          \"category\": \"item_class\",\n          \"internal_name\": \"item_class_4\",\n          \"localized_category_name\": \"Item Type\",\n          \"localized_tag_name\": \"Emoticon\"\n        }\n      ]\nI'm only interested in \"category\": \"droprate\",, what will be correct way to get it without getting all tags structure too?. It's in the category \"category\": \"droprate\",, so I'm sure steam calls it droprate, not rarity. I didn't just invented it's name.\nAnd clearly steam has droprate_0 as internal name, are you sure 0 value is reserved and can be used as unknown droprate?. ",
    "ghost": "I'd like to suggest another addition to the !status and !statusall commands:\nBot XYZ is currently farming appIDs: 12345 and has a total of 3 games with 13 cards left to farm.\n. Is it a technical limitation on the API side or just not intended to be included in ASF?\n. @Ryzhehvost\n\nAlso, one of my friends was very angry that ASF renamed account because of this option, so it would be less confusion without it. \n\nI'm wondering how did that happen, since the default property is \"null\".\n@JustArchi\nA !nickname command would be really nice. It's certainly faster and more convenient.\n. Tried the method above with winauth 3.4.19 data and got this:\n[*] INFO: CheckForUpdate() <Main> Checking new version...\n[*] INFO: CheckForUpdate() <Main> Local version: 2.0.0.7 | Remote version: 2.0.0.7\n[*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n[*] INFO: RefreshCMs() <Main> Success!\n[*] INFO: Start() <001> Starting...\n[*] INFO: OnConnected() <001> Connected to Steam!\n[*] INFO: OnLoggedOn() <001> Successfully logged on!\n[*] INFO: Init() <001> Logging in to ISteamUserAuth...\n[*] INFO: Init() <001> Success!\n[!] EXCEPTION: AcceptAllConfirmations() <001> Object reference not set to an instance of an object.\n[!] StackTrace:    at SteamAuth.SteamGuardAccount.<RefreshSessionAsync>d__62.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<AcceptAllConfirmations>d__30.MoveNext()\n[*] INFO: IsAnythingToFarm() <001> Checking badges...\n[*] INFO: IsAnythingToFarm() <001> Checking first page...\n[*] INFO: IsAnythingToFarm() <001> Checking other pages...\n[*] INFO: StartFarming() <001> We don't have anything to farm on this account!\n. > How @SuperNic333 got it working then? Or perhaps he didn't test usage of such imported authenticator?\nI was testing with beta 3.4.19 instead of stable 3.3.7, which has a new/different file format.\nTrying to load a 3.4 winauth.xml in 3.3.7 gives me the following error message:\nYour authenticators were saved with a newer version of WinAuth and so cannot be loaded.\nPlease use Winauth 3,4 or later.\nThis might explain why it did not work.\n. Do you mean the latest stable 3.3.7? It does indeed support Steam authenticator.\n. Update for #195650814.\nTurns out when the first time it failed to import WinAuth maFile in ASF 2.0.0.7, the bot.db was bloated with invalid _SteamGuardAccount data (which in turn caused the error message). \nThe bot itself was running fine but ASF 2.0.0.8 couldn't import my maFile until I manually cleaned up said bot.db.\n. you can do it simple without api key going here: http://steamcommunity.com/profiles/76561198177999769/games/?xml=1, just do a search looking for \"<appID>YourGameAppID</appID>\", if found, then account \"76561198177999769\" have the AppID game.\ni hope i can help :)\n. if accounts have an api key, i guess this should work  http://api.steampowered.com/IPlayerService/GetOwnedGames/v0001/?key=XXXXXXXXXXXXXXXXX&steamid=76561197960434622&format=json\nif not i guess you will have to take my first suggest :c, i know requests are limited, but probably this will be used just a few times and should not rearch any limits\nso for now if you have time, if the bot instance have an api key, use then, and if not.you can put bot to search in SteamCommunity, i guess you probably will find a better way latter :)\n. sounds awesome also boring to do :c, great job you are doing bro !\n. So far so good, my suggestion is to position the bot list vertically on the left side instead.\n\n. Ok, so don't know why, but changing one profile to Public helped, however after changing all 10 of them, I am still getting \"List of owned games is empty\" error on 8 out of 10. Tried both using words and IDs.\nAlso, when I repeated the command in group chat, a bot that showed an error before responded with an answer, however another bot that didn't show this error before started showing it. Looks like it's changing randomly.\n. Further testing showed that there's some \"transition period\" from Friends Only to Public profile, so after a few minutes and ASF restart all bots started responding well. But the original request still remains, it would be nice to use !owns without profiles being public :)\n. OK, now I'm getting this: https://imgur.com/tgz7t6O\n. OK nvm. Not very user-friendly.\n. If you're lazy just say so.\n. Winrar is popular because people like you keep on spreading the word of it, 7-zip and peazip support many more archive types, have better compression, are open-source and free unlike winrar\n. And actually you didn't mentioned any BSD, Linux tool since 7-zip GUI isn't available natively on Linux, unlike peazip \n. I don't think it is a good idea .-.. So u will be able to push games like that (really, just look at this) using your bots?. I think since an auto update option is available it should update both if the config generator executable is detected in the same folder of the main one. It would be just a nice QOL feature.\nOr at least the config generator should complain about the version mismatch only if something would break, which I guess doesn't happen very often especially between minor releases.. Ok thanks for the answers. Looking forward to ASF-GUI then. It happened like 3 days ago and i haven't tested it since then.I will run a quick test and if it is alright now i will close the issue.. \nI mined the last card few days ago and it still says that i has 1 left to mine.. That script on SteamDB is one of the most usefull I found around.. https://github.com/JustArchi/ArchiSteamFarm/wiki/FAQ#disconnected-from-steam---i-cant-establish-connection-with-steam-servers. ",
    "Haoose": "On some bots cards fall after 2 hours. Not at all, yes. So I think the function required (optional).\nThx for this nice soft!\n. Sighery\nThx. This seems to be true. I did not buy the game on alternative accounts.\nJustArchi\nVictory! xD Thanks a lot!\n. If there is one game with more than 2 hours, then run it alone?\nThen I'll check multifarm a little later (1 card left)\nAnd thanks for update, ofc! =)\n. Ok. It's work for me. Thanks again!\nP.S. Playtime (on badges-page) is updated every half hour.\n. @Pandiora\nFor this reason it is made as an option. Who wants to - can enable. I need it. Not often, but necessary.\n. @JustArchi \nI have two suggestions:\n1) Auto-accept invitations to groups (From master-account)\n1a) Option: Automatically join to groups that joined master-account\n2) Automatically receive and activate Gifts that sent master-account.\n. \"Also you should use other issue for that\"\nDone, thanks.\n. @JustArchi Add Win7x64 Ultimate to Supported / Tested OS =)\n\n. @JustArchi \n\"(I don't know if any game requires more than that)\"\nIf I am not mistaken, Dungeon Defenders II - over 7 hours / 8 cards. \nSometimes, and we waited for 8 hours. (2 hours + ~6 hours)\n. @Ryzhehvost Skip to next game\n. ",
    "Vrekker": "Hello, I agree that's a top needed feature, because despite their \"new algorithm\" I can guarantee you yet not every account drops any card before the 2 hours, quite the contrary. So if any of your accounts takes more than 2 hours before first drop, every time you're going to add a new game to this account you're going to waste 2 hours per game with the current queue system. This is a huge problem when you have many games with 0 hours played that you have to start idling. Because right now we have to run Idle Master 2h on every games prior to running Archi, and that's a huge waste of time.\nI understand that implementing a check function could be hard, and I'm not sure such a complicated thing is even needed, but here's a better, simpler suggestion for you:\n- Add a new entry to the xml file of any given bot (option that could be defaulted to false) : simultaneously run all games with card drops remaining for 2h and then switch individually in queue (as usual), so those like us won't have to switch from Idle Master to ArchiSteamFarm every time we add one or more games to the total.\nI hope you can add this hotfix easily and thanks a lot for this great program!\n. ",
    "Sighery": "I can say that from my 11 alts, only one of them drops cards before the 2 hours, the same as my main account. And the only difference with the other alts to that one and my main, since I never requested a refund in any, is that in my main and in that alt I've used money to buy games from the store. \nSo the 2 hours mark probably has to do with spending money too, if you do and never requested a refund, you get cards normally, if you didn't spend a single euro, just got gifts and activated keys, then you have the 2 hours restriction. And I'm betting that most of the people doesn't buy stuff from the alt, they just send it keys and gifts from the main.\nBut I understand that this may be a lot of work to implement, so I'm not going to push you to do it, even waiting 4-5 hours to idle each game in all the accounts at the same time is better than waiting less time but with just one account at a time like happens with IdleMaster.\n. Thanks Archi, I would help, but I know nothing of C#, just some C that I'm learning now, and even if they are somehow similar, I'm not sure I have the level yet to do that kind of stuff, not even with C. Though if I can be of any help for testing or anything like that, I humbly offer myself.\n. I just had 2 alts idling right now, and only for one game, so I stopped and disabled them until I buy a bundle or get a key for some game with cards, so I can test if the idling works for two games or more at a time. Thanks for the update though, I will let you know if it works for me as soon as I can.\n. @Pandiora I don't think it's just a single reason that defines whether you get card drops past or previous to the 2 hours mark. The whole \"if you had a refund then you need to wait two hours\" it's just something I read, and what most people are saying, but since I never had a refund in any account I can't say that's the reason.\nIt may be, as I say, multiple reasons. What I did notice is that in the accounts that never bought anything from the store or market or added money to the wallet, I have to wait 2 hours. Or at least that's what I can guess, because on the two that don't have to wait past the 2 hours I did spend money.\nFor more information, in case someone can see a pattern in this. My main account was created the 16th of february of 2012. The alt that doesn't have to wait for the 2 hours to drop cards was created on the 29th of september of 2013. Eight of the other alts were created the 17th of october of 2014. One created the 10th of January of 2015. And another one the 18th of January of 2015.\nI don't think the date has anything to do with them, but they are all protected by Steamguard, the emails are verified, and they are all unlimited. So the only thing different (apart of the date in which they were created) are that in those that don't have to wait the 2 hours I spent money on the store, and added money to the Steam wallet.\n. @Pandiora Yeah, it behaves weird, so maybe there is no actual reason for it, maybe it's completely random, but I doubt it very much.\nAbout the restriction thing... are you really sure those accounts are unlimited? I will try to keep it short, but before Volvo introducing the \"spend $5 in the Store or add them to your Steam wallet to get an unlimited account\" thing, how it worked was: You created the account, you had to activate Steamguard and wait 30 days with it activated until you were able to trade or use the market (also wait 7 days for entering from a new place, but those 7 days were included in the 30 days Steamguard restriction if you activated it the same day you created the account and logged in for the first time), and then after those 30 days you would be able to use the market and trade, but it was tricky because you would get cards, and they would seem fine but unless you bought something, or received a gift from other account and activated it those cards would simply not appear in the trade window.\nI can't tell you for sure that will work for your account, but maybe that's actually the reason since you seem so sure it's unlimited, I would need more info, like the date of creation of that unlimited account, to know if it was created before or after the $5 policy, and to know if you ever bought anything with that account or received a gift and activate it. But you could try activating a gift if you haven't already. Also, it would be helpful if you explain to me what do you mean by unlimited and limited, because I'm not quite sure if we are refering to the same thing.\n. @JustArchi I don't know exactly his problem, but if I read it right, it means that a game got stuck while idling right? And if it idled that long I suppose he got the cards already, if so, couldn't he just close or stop that bot, go the .xml and add the appID of that game to the blacklist so ASF ignores it?\n. @JustArchi tried the complex algorithm twice now and all seems to be working as intended using Windows 7 Home Premium. Thanks!\n. I know you can use ASF with your main, while you are also using your main from the Steam client, but only if they don't share the same IP. You say you run ASF in your server, so maybe the server has a different IP from your computer that you use to run the Steam client?\n. Hmmm... then that's interesting, maybe Volvo changed something. I will log in from one of my alts accounts and then run ASF and see if it let's me do stuff. I will also try the other way around (running ASF first and then the Steam client).\nEDIT: Do I need a new version or the 0.8 works? I'm guessing the old one works\n. Doesn't seem to work for me, logged into my first alt account without having ASF open. As soon as I opened it, my Steam client went to the \"Without connection\" mode. Then I closed both, opened ASF first and then tried to log in, it allowed me to login in Online mode, but as soon as I was logged in I was without connection again (no access to friends, or store, or community features, etc).\nIn case it makes any difference, I'm using the pre-release V0.08, so maybe that's why.\n. Well, if you send me the V0.9 I will update the xml files and try it, but yep, it's weird.\n. Nope, nothing. Tried first having the account opened and starting ASF. Then tried having ASF opened and starting the Steam client, neither of those worked.\n\nEDIT: \"Sin conexi\u00f3n\" means \"without connection\", meaning that I'm not in Offline mode, but in Online mode but without connection.\n. Maybe Steam just hates me xD Either way, will keep an eye on the people that say it's working, maybe I can see some difference between them and me and figure out why is not working for me.\n. And... nothing with my main either. I tried with the pre-release2 V0.9 and still doesn't work. Maybe I'm wrong about the IP thing, I mean, it's not something official, just something that I guessed, because a friend of mine lets me use his account to farm games, and while I'm running ASF in my computer he can log in and play and do whatever, that is why I guessed that if you don't have the same IP then you can have the same account opened.\nBut anyway, as I said, I will keep an eye on this and make a few more tests some of these days to see if using something like Sandboxie works.\n. @v3rg In-home streaming is only useful to run a game into one of the computers and stream the image to the other computer. It has nothing to do with this. And yes, you can log in from different computers in the same network, but that's not the point either, what we are trying to figure out is logging into the same account two times using the same computer.\n. ",
    "Shmurdik": "version 1.4.0.0 (pre1)\nin function:\ninternal async Task HandleMessage(string message)\nafter:\n                    case \"!status\":\n                        return ResponseStatus(args[1]);\nadd:\n                    case \"!joingroup\":\n                        await ArchiWebHandler.JoinClan(Convert.ToUInt64(args[1]));\n                        return \"OK :)\";\nPS I have not added any checks/validations. :)\n. sorry, I misunderstood issue)\n. It may be better add command \"!trade\". Bot after receiving this command send trade to Master. Master accept all trades from bots. Or Master send trade to every bots because now all bots already accept trades from Master. :)\nPS Sorry for my english\n. [suggestion] If you add a variable to the function \"GetInventory\" and \"SendTradeOffer\", you can send traide from any inventory.\nExample for tf2:\n``` c#\nGetInventory(string inventory_name = \"Community\") {\n    switch(inventory_name) \n        case \"tf2\":\n            jObject = await WebBrowser.UrlGetToJObject(\"https://steamcommunity.com/my/inventory/json/440/2?trading=1\", Cookie).ConfigureAwait(false);\n        default:\n            jObject = await WebBrowser.UrlGetToJObject(\"https://steamcommunity.com/my/inventory/json/753/6\", Cookie).ConfigureAwait(false);\n    ...\n}\nSendTradeOffer(List inventory, ulong partnerID, string inventory_name = \"Community\", string token = null) {\n    ...\n    string select_appid = \"\";\n    string select_contextid = \"\";\nswitch(inventory_name) {\n    case \"tf2\":\n        select_appid = \"440\";\n        select_contextid = \"2\";\n    default:\n        select_appid = \"753\";\n        select_contextid = \"6\";\n}\n\nSteamTradeOfferRequest trade = new SteamTradeOfferRequest();\nforeach (SteamItem item in inventory) {\n    trade.me.assets.Add(new SteamItem() {\n        appid = select_appid,\n        contextid = select_contextid,\n        amount = item.amount,\n        assetid = item.id\n    });\n}\n...\n\n}\n```\nAnd add new commands for bot: !loottf2 !lootcsgo !lootdota2 and etc.\nPS This code is just an example. :) need to think how to make the code more elegant...`\n. Ok, I just suggested. :)\n. bot has great potential\nand easy to implement\nArchiWebHandler.cs.txt\nBot.cs.txt\n. If you send a lot of requests simultaneously - steam banned trade requests. Request returns response \"an error has occured sending your trade offer, please try again later (15)\". Code 15 is AccessDenied.\n. Need add property in global config to disable localisation. :). > we already have !lootall, why isn't that enough? !addlicenseall will be a good addition though.\nA simple example for !loot:\nI have 100 bots and I need loot 10, so I should wait until processing 90.... I also think that it is not necessary to delete the command. !lootall did not interfere. :). You're right, I should not share the one-time code.. ```\n        private void button_update_all_configs_Click(object sender, EventArgs e)\n        {\n            GlobalConfig globalConfig = GlobalConfig.Load(Path.Combine(SharedInfo.ConfigDirectory, SharedInfo.GlobalConfigFileName));\n            globalConfig.ValidateAndFix();\n            globalConfig.Save();\n        foreach (string configFile in Directory.EnumerateFiles(SharedInfo.ConfigDirectory, \"*.json\"))\n        {\n            string botName = Path.GetFileNameWithoutExtension(configFile);\n            switch (botName)\n            {\n                case SharedInfo.ASF:\n                case \"example\":\n                case \"minimal\":\n                    continue;\n            }\n\n            BotConfig botConfig = BotConfig.Load(configFile);\n            botConfig.ValidateAndFix();\n            botConfig.Save();\n        }\n    }\n\n```. This attempt to implement: https://github.com/JustArchi/ArchiSteamFarm/issues/421\nPS I deleted forked repository, because I'm too bad programmer. If I have ideas will be better create issue.. ",
    "Kein": "Just leaving a comment expressing my interest. \n. Noice\n. Subscribing to this and mentioning my proposal of inplementation:\n174\n. aka \"friend requests/group requests\" to the bot\n. I don't recall saying it should be a purpose of the bot. ASF clearly already has an established purpose and I don't see the point of a bot dedicated solely to process invites.\nI only said it would be nice to see it as a small optional feature. At least the ability to list current requests/invites.\n. That is not rally rational and/or pragmatic. Especially if you run it on a cheap OpenVZ host. Resources have cost even if ASF east little to none.\n. Well, I'm not here to argue with you. And the request is not about different instances or whatever, there was no reason to drag discussion that way. I also think in general it seems like a good idea to have such vriety even though it may seem redundant. But different people [may] have different tasks. I have no idea why are you so against it, however, it is not my place to judge opinions.\nIt is not a big deal if it won't be implemented.\n. > There are two access levels now: SteamMasterID and SteamOwnerID. Every bot listens only to his SteamMasterID. Global commands such as !exit, !update and !restart are reserved for SteamOwnerID only. WCF works with SteamOwnerID access.  \nOkay, wanna clarify few things, especially the latest part with WFC. So, in order to give any command to a bot, my steamID64 must be specified in masterID for the spoken bot, regardless if I'm listed SteamOwnerID. And, WFC follows the same rules too (sine you said it works with SteamOwnerID-level)?\nIt just confusing because since there is no steamID64 to retrive through WFC - it must work with global privileges regardless, but then it breaks logic of your statement \"Every bot listens only to his SteamMasterID\". Unless you meant the latter part in context of private/group chat.\n. > It's very easy to understand - master has control only over his bots, but can use other bots as \"helpers\". Owner has access to everything, and commands executed by WCF are run always by the owner.\nNow this makes sense, thanks.\n. > Client could not connect with Server\nBut then the bot would not receive command. But it did as you can see from his log.\nit also throws exception on quit command as well.\n. > 3/22/2016 5:58:14 AM [] INFO: HandleCommand() Received command: \"farm bot1\" \nServer (on the bot) received it.\n. Hey Archi? The \"exit' command under WFC still throws an exception:\nhttp://www.everfall.com/paste/id.php?06cna2y62w0y\nIt is not a big deal, just felt like mentioning.\n. Are you sure? SteamKit should have enums.  \nAnd no, it is not a common one.\n. > SteamKit has nothing to do with what you're asking as it's HTTP port  \nQuick-elaboration on this part please?\n. You see, the problem is that I'm trying to understand why bot is unable to confirm trades (receiving just fine). I have enabled 2FA 8 days ago, it was clean start with ASF, not import. All went smooth, I receive tokens, etc. But bot still unable to process trades. I assume Steam returns the usual error that he is not allowed but it does not make sense. Unless ASF does not really save that mobile cookie or failed to  pretend to be a mobile device properly.\nSomething went wrong and I'm just trying to trace it.\n. CellID::7 -- I assume it is the usual value?\n. Are you sure it should be in ASF.db and not in bot.db?\nIn ASF.db I only see the mentioned \"cell\" value but _SteamGuardAccount does exist in bot*.db\n. I'm quoting you:  \n\nYou can check DeviceID of SteamGuardAccount saved in ASF.db. \n. http://i.imgur.com/WhjaDSD.png\n\nThat's what I see so I went to look into ASF.db and as I said it only contains CellID value. But \" _SteamGuardAccount\" is saved inside bot.db and it is not null.\n. Besides SteamGuardAccount anything else to look for? I'm out of ideas.\n. That is not a lack of RAM definitely, I have 2GB free. Unless there is a bug in mono or something in source make mono eat up all 2 and then be killed.\nThanks for the link, though.\n. Yeah, I understand. I will use pre-built until I figure it out.\n. First of all, I use it on Windows so PowerShell is kinda pain in the ass but I see what you mean.\nSecond, the first approach you recommended is not really proper too, it never should be based on a actual delay because if for some reason process launch/execution [to the point where command can be executed] takes more than specific delay it will fail. \nIdeally, best way to parse the bot stdout for the status message that WCF is up and bot is ready to receive commands but as I said it is super painful and buggy to do on Windows. That's why I made request because it is easier  and more correct as internal implementation.\nI will stick to manual approach because amount of glitchy execution through windows script[s] usually ends up in manual resolution anyway due to often \"something did not work as intended due to bullshit Windows reasons\".\nThanks anyway.\n. You mean \"there is no need for any manual command for doing this.\" because you say so? Yeah, I understand, you are right - your opinion is more valuable, you know better what users want or don't want.. ",
    "truongphamx": "I have 8 pages of badges, it's not loading.\nThanks for great work, Archi. !loot so awesome.\n. ",
    "Ne3tCode": "@Ryzhehvost Steam is down for routine maintenance every Tuesday around 16:00-17:00 PST (2:00 MSK) :)\n@JustArchi you forgot about EResult.ServiceUnavailable\n. > two situations are possible\n3) use login_key to not enter auth code on each login (see also)\n. GJ @JustArchi . But as i know you must call AcceptNewLoginKey() to use login_key in the future. See comment.\nI don't know this is important or not.\n. \u00af_(\u30c4)_/\u00af\n. @JustArchi feature request for !2fa command: show to user how long the auth-code will be valid.\nSomething like that:\nC#\nlong timeLeft = TimeAligner.GetSteamTime() % 30;\nSendMessageToUser(steamID, \"2FA Token: \" + bot.SteamGuardAccount.GenerateSteamGuardCode() + \"(expires in \" + timeLeft + \" seconds)\");\n. @JustArchi this ?\n. I had the same problem yesterday (not on AFS).\nI thought my LoginKey has expired (while bot was offline for a long time) or been revoked by Steam Client (wat?? is it possibro??)\nSolution: re-login with password and auth-code.\n. @JustArchi I am looking at it and can not understand how it possible, but I found something.\n1) String [unassigned] is hardcoded.\n2) SteamKit caches real name when SteamUser.AccountInfoCallback comes in to send it with new persona state.\n3) You call SetPersonaState when callback comes in. It is OK, right? But what if SteamUser manager broadcasts this callback before SteamFriends manager caches it? :scream: Or it is impossibro?\nPS: Sorry if my english is too poor for you :(\n. Nooooooo. They stole my idea! :frowning:\nWait... Their domain is registered earlier (August 2015). Damn :disappointed:\nNo, seriously. Steam idler is just an idea. They have web interface, we have ASF. It is good (for us, not for them :sweat_smile:) \n. It is not necessary to set status to Online, but you need to rewrite some code to receive offline messages. Yeah, bot can be offline (and you too), but also can receive messages and farming :smile:\n. @JustArchi Really hax.\nOK \u00af_(\u30c4)_/\u00af\n. You're both wrong.\nI2IAR4F1NMZJV4EWVQ2G3VS5O - Valid key\nI2IAR-4F1NM-ZJV4E-WVQ2G-3VS5O - Invalid key\nI just use RegEx(/^[a-z\\d-]{15,29}$/i) and it covers all my cases \u00af_(\u30c4)_/\u00af\n. @JustArchi Do you know what this api is rate limited as well as others?\n~30 requests/min and you will get an error 429.\n. Requesting inventory is limited.\nI don't know about the limits of trade offers but, if you make offers from bots too often, some of it may be missed on the main account.\n. D'oh! You're slow Archi (\u21c0\u2038\u21bc\u2036)\nLicenseListCallback + PICS\n. Why not to make Control Panel GUI?\n- Start/Stop ASF as server\n- Add/Edit/Remove user/config\n- Send command via WCF\n- something really cool?\n. ASF.json\n\"HackIgnoreMachineID\": true\n. Why don't just 'block all communication' with the 'scammer'?. You could do it in your commit. 1 http request to block, 1 request to unblock.. ",
    "v3rg": "Hey Archi, nice program.\nYou actually can login from the same account on different PCs in one network with steam option called in-home streaming. It can be enabled in steam client preferences.\n. Ok, I'm able to login, when I delete .key files. \nQuestion is, why did it break?\n. Yeah, thought of that. I tried to change my ip (usually helps to skip capcha) and tested just one account i had trouble with. But it didn't work. Only erasing key file helped. \n. Well, my guess is when it skips the sms code enter it also skips revocation code showing, but it still stores it. \nI'm adding more account atm, maybe I'll found out more.\n. So yeah, I've had some troubles with sms being not send to me from steam (probably anti-spam thing) so I entered blank sms code for several accounts and just waited for some time to pass. \nWhen I restarted asf to turn on 2fa it asked me for steam guard code from email as usual and I entered  it. Then I discovered that 2fa had already been enabled but no revocation code again. That happened for 2 of 10 newly added accounts. \n. Well, I've caught and exception after I've added api key in config file. \n\nIt works if I set api key back to null\n. Got the same problem with couple accounts. Nickname is set to null in xml files.\n. I want not to restart asf each time I need to accept trade, that's it.\n. How long does it take to \"refresh\" tradings? Cuz I tried it several times by now and the fastest solution for me was restart. But because I have a lot of accounts it takes time too. \n. Does there rules apply to sent trade offers?\n. Well, bot to master works okay for me too.) When I start asf at least.\n. Got the same problem with several alts(always the same alts). Will test this too.\n. 23.12.2015 11:47:37 [] INFO: Main()  Archi's Steam Farm, version 1.2.0.0\n23.12.2015 11:47:38 [] NOTICE: CheckForUpdate() <> Local version: 1.2.0.0\n23.12.2015 11:47:38 [] NOTICE: CheckForUpdate() <> Remote version: 1.2.0.0\n. Name was hidden by git, I guess. It's the same bot trying to reconnect. I don't understand why it doesn't wait for 25 minutes as it says.\n. Bot connected without fix! It took about an hout and ten minutes to log in. And madness in console have stopped. I wonder how it was able to connect after so many attempts.\n. > 07.02.2016 20:46:30 [_] INFO: AcceptAllConfirmations()  Accepting confirmation: Success!\n\n07.02.2016 22:49:02 [] INFO: IsAnythingToFarm()  Checking other pages...\n07.02.2016 22:49:02 [] INFO: StartFarming()  We have a total of 0 games to farm on this account...\n07.02.2016 22:49:02 [] INFO: StartFarming()  Chosen farming algorithm: Complex\n07.02.2016 22:49:02 [] INFO: StartFarming()  Farming finished!\n07.02.2016 22:36:15 [_] INFO: AcceptAllConfirmations()  Accepting confirmation: Success!\n08.02.2016 0:22:36 [!!] WTF: SendTradeOffer()  Request failed even after 5 tries, WTF?\n\npieces of log\nit deleted bot name, all lines related to the same bot\n. Why can I connect with the other asf instance from the very same network?\n25.03.2016 20:51:33 [*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n25.03.2016 20:51:33 [*] INFO: RefreshCMs() <Main> Success!\n25.03.2016 20:51:33 [*] INFO: Start() <bot234> Starting...\n25.03.2016 20:51:33 [*] INFO: OnConnected() <bot234> Connected to Steam!\n25.03.2016 20:51:33 [*] INFO: OnConnected() <bot234> Logging in...\n25.03.2016 20:51:34 [*] INFO: OnLoggedOn() <bot234> Successfully logged on!\n25.03.2016 20:51:34 [*] INFO: Init() <bot234> Logging in to ISteamUserAuth...\n25.03.2016 20:51:34 [*] INFO: Init() <bot234> Success!\n25.03.2016 20:51:37 [*] INFO: IsAnythingToFarm() <bot234> Checking badges...\n25.03.2016 20:51:37 [*] INFO: IsAnythingToFarm() <bot234> Checking first page...\n25.03.2016 20:51:38 [*] INFO: IsAnythingToFarm() <bot234> Checking other pages...\n25.03.2016 20:51:38 [*] INFO: StartFarming() <bot234> We don't have anything to farm on this account!\n. @Pandiora Got a static ip. It takes about 4 hours to be fully online, but yeah.\n. @Pandiora Well, I've been using 200 bots when I first started using ASF. Plus one-two browser session and steam client. \nWhen I use my bots-browser to accept gifts etc I get \"banned\" pretty fast but it lasts about a minute or so. \nWith ASF yeah, it takes time. I've added another 100 recently and it seems less stable now.\nDo you run your second ASF on other machine or just mask it somehow? \n. @Pandiora Thank you, I managed to set up 3 IPs for my farm. Works great.\nAbout browser, I use 64 version of Firefox called Waterfox along with a lot of profiles and cmd scripts, javascripts to do things. I don't use it much nowadays since ASF can do a lot of cool things e.g. accept gifts.\n. Wrong place to ask, but its mono-service ASF.exe\n. ",
    "mahadi22": "solved;\ni know the problem, in config on steam parental i put wrong code, instead of 9956 i put 9965, and because of that asf throw fatal error. how about give error message if you put wrong parental code, i think steam give feedback if parental code is wrong\n. ",
    "iFantz7E": "Maybe about SteamKit?\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/aa1c1962de069be235744735440cd736ffab2c26/packages/SteamKit2.1.6.5/readme.txt#L308\nI see one of my bots try to reconnect to Steam and fail login many time.\nThen I check my bot profile, I found my bot name is changed to [unassigned].\n. Sorry, I closed window so it has no log.\nHas an option to write log file in your application?\n. It should has an option to sent key by prioritized order.\nSuch as \"bot1,bot2,bot4,bot3\".\n. Can ASF read this example page http://steamcommunity.com/my/gamecards/407750/ ?. Example in my each badge page: http://i.imgur.com/XqPANLC.png\nAnd I think request 200+ pages is not good too.\nMaybe implement BadgeLevels first and hold OwnedCards to find more solutions.\n. May add ReadyCrafts instead of OwnedCards.\nReadyCraftsAscending - Try to farm games that ready to craft and have lowest number of cards remaining first\nReadyCraftsDescending - Try to farm games that ready to craft and have highest number of cards remaining first. Without performance impact. I suggest to add 2 options - BadgeLevels and ReadyCrafts.\nThese can check values just in main badge page.. I ususally want to view last redeemed key.. Ops, I used 2.3.0.3 and forgot to update.\nIt doesn't show sub when redeem.\nLast 2.3.0.5 work fine. So I don't need to use feature.\nSorry.. ",
    "aveao": "Wow, using Apache License is weird.\nGPL is more protective, but whatever.\n. I'd recommend this to be configurable in the config files. While I'm totally ok with this, some people might not be, due to security reasons.\n. ",
    "Papuang": "I'm not sure if you did this as a result of my message to you, but if you did, thank you so much! I'm really  really grateful! :D\n. ",
    "yqp95470": "Hello\nI run into a problem when some bots do not accept trades from master account. In a log it look like: \"INFO: ParseTrade()  Accepting trade: 921054124\" and that's it, nothing else. What I can to do to make bot accept trade? Why it occurs? \nThank you\n. ",
    "judgegr": "I think i had this too, please check my log file to confirm it, in case it's something else and got confused.\nNow, i've just updated to 1.2.1 and put it under surveillance. No problems so far ;)\nlog_bkp.txt\n. It breaks the farming algorithm so It's not going to happen -at least anytime soon.\nSee: https://github.com/JustArchi/ArchiSteamFarm/issues/29\nIf you need farming for just a single game, you may try steam-idle.exe tool which comes with idlemaster. Command line is steam-idle  , leave it running for 3-4 hours and you're done. \n. Blacklist could be both global and bot-based, and may be merged when each bot starts. For example, a global blacklist might contain Summer/Winter sales IDs & known appIDs which would crash or make ASF act weirdly, whereas the bot-based blacklist might contain all other user-defined appIDs.\nIt's just a bit boring for Archi to code the merging of two blacklists, isn't it? :worried: \n. Ah sorry didn't notice a hardcoded blacklist exists. Well in that case, i can't think how a global blacklist would help :+1: \n. Well, farming volvo's babies for items, isn't that a big no-no? :worried: \n. :+1: (was a bit suspicious of the need for farming 3 volvo games at once)\n. Ah i was greatly misunderstood... \ud83d\ude22 \nI'm a bit disappointed you almost instantly threw my idea to the garbage bin but since it's up for discussion, i'll try to explain some things. For starters, although i can honestly understand your attitude for being overprotective against anyone who wants to change your app's config files (i would/have done that too!), i think your answers are a bit controversial and versus each other. See:\nbot.json files are generated by the users and not ASF, so technically they are user's property, not ASF's. ASF is using config files to understand user's will on how to use ASF. That's why you implemented options that reflect user's decisions and options to enable/disable/leave-and-forget, right? So, to be honest here, any third party application may change bot.json files assuming they can do it correctly. You even mentioned it yourself:\n\nand you can implement easily another GUI which acts as a frontend for user in config generation/modifications.\n\nAlthough a few lines later you say that: \n\nExternal apps should not affect config properties being used at all - that's what ConfigGenerator is for, and user configuring ASF.\n\nI'm confused here. Aren't we supposed to edit bot.json by ourselves? Can we use notepad or not? How is it better to use any unauthorized app/tool/editor to edit bot.json and not use an internal !config command? As for ConfigGenerator, this is a really sweet tool, but it is also an external tool, like anybody else's approach to editing those json files. \nLet's see something else: I've starting building a shell/GUI app to access ASF while it is running. I want it to be more user-friendly (or should i say noob friendly) so that ASF would be used by far more people in the future. That way i need to advertise more of some ASF's options like FarmingOrder which is awesome and many users don't even know -considering the recurring questions in SG forum. \nNow let's think, is it more logical for me as a developer to build my own way to edit json files -which would be easy, we totally agree- , and possibly make a mess of them, or should i use the already official way to change those options? Should i pop-up my user to say \"ok, now you wanna change this or that option, start ConfigGenerator, learn to use it and change it yourself\"? LOL maybe i should display a middle-finger gif along with the message instead of giving him a click-wait-done procedure. \ud83d\ude06 \nIn fact, this is not for my only benefit, i think if you implemented some -higher level- functions and easier ways for devs to connect to your tool, more devs would start building on top of your acclaimed tool. Well, maybe not but who really knows. \nFinally, having a developer's notion over everything, I'd like to consider ASF as a class or a DLL that i can access through a service / WCF server option. Considering that, i would love accessing ASF's public properties and methods that would ensure me authorized access and data validation. This, imho, would make ASF even greater, like a big class implementing the perfect encapsulation. \nAnyway, i've mentioned all the above in a rather theorical level of discussion. You know better than me what you should do with your baby. Thanks for stealing away your free time, anyway. \ud83d\ude38. I see. I've locally built your GUI about 10d ago and saw you've cleverly embedded asf into it, good job! I did't see any GUI per se, or functions, only some code downloading the avatar and resizing the image, right? ASF is there though, which made me quite ..jealous. \ud83d\ude1b \nI could jump aboard and start building a GUI like the one i started myself, but sorry i won't -for the time being, that is. The main reason is that i'm 43y old, retired (due to heart problems) mainly VB.NET (partially C#) developer, who only seeks positive thoughts thru coding apps / scripts that might be useful to others. As you may imagine, I have nothing to prove, nothing to gain and also nothing to be afraid of. \nThat being said, i think that your mentality is totally opposite than mine and working together might be catastrophic for my stress levels. If i were 20y younger i might have dropped a couple of different GUIs as we speak, instead of these nonsense but at this age i'm not very keen on throwing out dozens of UIs and styles just because you're programmed to invalidate anyone else and argue with anything that comes before you. Don't get me wrong here, i was quite like you that when i was young, and tbh, not taking things for granted is a gift in this profession. As i honestly wrote before in some threads, i think you're very talented and your code style is immaculate. I still mean that. \nThat's only for the last paragraph of your replies, I won't reply to all above. I didn't like your implications about my might-come-in-future program, my true intentions (?) and i'm still confused on how a third party shell/gui can be obstuctive or offensive or to anybody, or even to your program which in fact would advertise and promote its use. I can understand you have strong feelings against other efforts trying to use your program as a helper tool, although i'm not sharing your concerns. You may know better.\nMy initial plan was for an open-source helper application with 6-8 main functions that i use almost every day myself, one of them would be farming using ASF. Now, I'm coding in free time and on casual terms which means \"whenever i get bored of watching movies & tv shows\" so there won't be any preliminary version soon. Maybe when i'll have something in hand, i'll send it over to give it a try.\nWell, how about that? I think we can agree to one thing today! \ud83d\udc4d \n. ah sorry for this snippet, there's a thing i must answer is that i never suggested a way of changing or exposing the configuration which you claimed twice or thrice, when i've specifically wrote:\n\nThe use should be restricted to changing a small set of safe options like FarmingOrder, AcceptGifts, DismissInventoryNotifications, SendOnFarmingFinished, TradingPreferences, FarmOffline, IsBotAccount\n\nKeywords here are: Small set, safe options. Also, on the same thing you wrote two contradictory phrases:\n1. > ASF already includes auto-reload of configs modified on-the-fly, (..)\n2. > Moreover, due to the way how complex ASF is, this command would be equal to bot restart in order to apply a change, as there are many properties you can't easily edit without a bot restart. (..)\nI'm still confused here, which one of the above is valid? because it's either self-checking & automatic or not. The external ConfigGenerator can change settings safely and internal ASF could not, because? \ud83e\udd14 . > while experts will simply sed the change\nThat's exactly what i was thinking about, at first! But since ASF will not touch .json files, it's out of the question. See below.\n\nBecause internal ASF first rule is, it does not, under any circumstance, edit initial .json files. (...) Any RW data is contained in .db (and .bin) files. Initial configuration is never edited by program directly. \n\nWell now i get it! You have your do's and dont's for your app and this is definitely a don't, that's fair. Probably because your app reacts to bot.json file as reading an input and not loading a configuration. My opposing argument was that every known desktop app has its config file config'ed by itself and not by an external (or 3rd party) app. \nI couldn't possibly try to convince you otherwise because my suggestion breaks your fundamental rule, and i did mean a !config command to impose permanent changes to .json files. So this suggestion is out of the question, by design. \nI could try to counter-suggest individual commands like !FarmingOrder, but THAT one would be a) messy design and b) temporary so not useful at all. \n\nI'm not that motivated to working on it though, neural networks in ArchiBoT are much more interesting.\n\nI would do that too, if i could. \ud83d\udc4d \n. IIRC, it was changed due to some security concerns, check this: #373 \n. Sure np, I was unsure whether to post it or not, but i guess it was worth the note in case you never thought of it. Or maybe for enhancing Archibot instead. :wink:\n. So sorry for the small delay & the following wall of text \ud83d\udcd1\nGuys, my suggestion was as simple as it sounds, tagging things is a pretty common practice made available to nearly everything nowadays, and I find a single, dummy text tag a pretty fresh, cool and easily implemented value-added option to the bot's configuration. However, Archi's recommendation of grouping bots group_bot1, group_bot2 etc is smart and viable solution, and this is what i will do for my bots from now on. \nNow, @frwrks had a similar recommendation which i would vote for, instead of adding a tag option since it seems so useless to you, adding a verbose boolean option for each bot, is quite cheap and would inform asf to include the desired bot's account username in the output formatting. \nNow check this:\nI just had this idea extending @frwrks' suggestion, if Archi could confirm it. Archi could it be that easy to add a custom layout renderer for nlog, say adding a ${accountname} layout renderer to pass the account name to the logger? \nOh boy, Nlog is so powerful and easy to configure and if that's possible, it would save the day. \ud83d\ude00 \n. Ok, i'm not sure what i expected when i suggested that in the first place. \ud83d\ude2e \nI suppose i've tried more than enough to explain my suggestion for an effing tiny 3-byte-long dumb text tag, and frankly, it's not a mind puzzle i have to solve to win some prize. It was only a simple idea shared among net friends who also share the same interests. If you don't like coding it, it's honestly quite fine by me, but me jumping through hoops to convince you for the necessity of this, it feels like we're discussing details on how to send a rocket to space. \n\nThis is once again something that is already possible and done much better - you already can log specific messages from specific bots on specific levels\n\nNot true and not much better, no. You can log messages from specific bots with fake, made-up names. You have to rename bots to either long humanly understandable verbose names which are difficult to handle and send commands. Or you have to use those short, smart, robotic, cryptic names for which you have keep an external correlation table. \nSo if someone wants, let's say, to check why bot47 stopped dropping cards was it some problem or asf just felt stopping it, or he issued the !owns asf command to find which bot misses a game and bot47 was on the list. Then what would he do to find the real name of the bot account, to open the real steam client or web browser to check the badges page, to buy a game or send the key through chat or stop the bot. Well, that's why we use computers! Which account is bot47, asf? Blop blip blop, pebkac found please replace brain. Yeah, funny, but not true at all.  \ud83d\ude06 \nAnyway, I'm always trying to be productive and positive so to wrap this up: Finding which bot is which account, apart from keeping notes, can be hackily bypassed using either:\n issuing the !api command --> console window --> CTRL+F --> Bot47 and then search lower for \"Steamlogin\". \n starting a command prompt in asf folder, and typing find /i \"Bot47\" .\\config\\*.json\" would fetch the matched account name.\nSorry for bringing this issue up. \ud83d\udc4d . I don't understand why you're way too defensive about this, since I've already stated it twice that your naming suggestion suits me well and i'll follow it. \nGenerally, naming habits are just that, habits. If you're forcing users by any way to follow your naming habits, the problem is right there. It's all about options, you don't like to give options to users while i do. \nAll I'm saying is that naming something uniquely and case-sensitively and tagging something loosely and selectively, are two completely different things. Naming is static, tagging can be circumstantial, temporary. Naming is identifying the object, tagging is characterizing the object. It's basic stuff but if you want to deny it, it's with me fine too. \nBut comparing my suggestion to nearly as i was suggesting making asf a weather app... \ud83d\ude06 \u2764\ufe0f \n. Sorry just saw this and need to address it for the sake of the discussion:\n\nWe'd have this feature long time ago if indeed there was no way to give short easy to remember names to bots, but they do exist since first release of ASF, in a form of a bot name (..)\n\nAnd yet, it sounds so thoughtful but also not true. Naming bots crazily differently from their steam login, will drop any visible link between the newly named bot and the underlying hidden steam login. The only way to get a hint for which is which if you haven't kept a list, is to do what i proposed two posts above, internally via api or externally via command prompt.  :wink:. Well it's been a mess now. I've replied to Archi's claim that this function is already implemented from the beginning, which is not what i suggested. Although it solved the problem in the example i gave, but this one example of tagging is just one example out of many possible uses. \nAnswering your question (again) is like doing a merry-go-round of the discussion, but in a nutshell: of course i don't strictly need tagging for my narrow self purposes or my given example. I can do otherwise, I even name my bots like Archi suggested on his 2nd post and that's what i will do and also suggest to others. Though, It's funny i need to write it 3 times that if and still getting asked what i suggested in the first place. Tagging. Not renaming. Tagging. \ud83c\udff7 \nFrom one point forward, the conversation was purely theoretical that my suggestion was infuriatingly irrelevant. It was not. It was just an idea, some might like some might not. Tagging an object can be of many uses, i've thought of one but the possibilities are endless. Whether Archi will code it or not, it's not my decision, i really don't profit from either choices and i never pushed him on doing something, he's not my employee. \nAnd that's one thing. The other thing is, i get easily triggered if the conversation goes marginally into devaluing my suggestion/point of view as almost crazy or trash. Although i understand that this practice would strengthen the existing status of an application/website/anything in discussion as \"complete\", \"perfect\" and \"not needing anything further\", this is not close to fair for all who have an idea or put some effort to think of ways to enhance this app/website/anything they are using. It's not only my notion that 99.9% of the suggestions are being dropped out of the window in less than a millisecond of thought, mainly because Archie is satisfied with the product and everything else if out-of-the-scope. We are satisfied too and even making a suggestion for a new feature doesn't mean we think of asf as less that 100% complete or faulty software needing to be fixed. \nGenerally speaking, If a dev is once responding to my suggestion like i'm pushing it down his throat, i'll instantly stop making them. If this dev does that in a timely manner to all suggestions and requests and bug reports etc, i might think that the dev is using his app/website as a honeypot for arguments, for merely testing his ability to fence off the intruders. I strongly believe that Archi doesn't do that or i would have stopped caring for ASF long time ago, but hell, it really seems like it. \ud83d\ude22 \nMy 2c. \ud83d\udcb0 \n\\\nI've just returned from feeding them monsters, I've 9 of them (6+3 kittens) with very loud meow alarms  when they're hungry. ASF is not needed here. \ud83d\ude38 \n\\. Last try to present my point of view:\n\nLet's say, I have 5 bots, Donald, Daisy, Huey, Dewey, and Louie. I've renamed them to b1 to b5 for quick access and short commands like !status b1..b5 etc. \nBots b1, b4 and b5 are currently active accounts where, b2, b3 once used, now are dummy.\nNow i'm checking for a game that happens to have keys for, with !oa aGameName and it seems that only b3 misses it so I'm sending the key to b3 . No problem here.\nSteam store has a very cheap game which i want to give only to active accounts. So i'm checking which account has it already, !oa cheapgame brings bots b2 and b4 as the possible receivers. But, which steam client should i boot? which one is b2 ? \n\nNow how could i tell which bot is which, which bot is active by my own definition of active and which isnt? You say rename the bots accordingly, so that b1 becomes b_Donald etc. You're right, but this causes the following:\n\nfirst bot in order was Donald (b1) and now it's Daisy (b2) due to renaming them. Donald is third bot so i have to reconfigure my key distribution commands accordingly. \nStill can't tell which bot is active by my definition, but i guess i'd remember that Daisy stopped using this account long time ago. So the game should be bought on account Dewey, not Daisy. Note the 'guess' word here, while using a computer software that could hold and display that info.\nI have to change from short to long commands, from !status b1..b5 to !status b_Daisy..b_Whatever where i have to additionally remember first bot and last bot names too!\n\nAll of that could be avoided by displaying the account name in !status asf or better, by displaying a tag defined by the mood of the user. And yes, i know asf is not notepad replacement or yellow stickies, but having the need to keep notes is a requirement for some users. The word Option is the key.\n. I have nothing against Archi or you, i hope you understand that. I got one idea, wrote it here, Archi didn't like it, that's it. Frankly, who cares about the dumb tag anyway. However, devaluing one's opinion is comparing it to cat feeding reminder or the weather report, just because you don't like it, is not evaluating the suggestion. Suggestions have one and only purpose, to stir things up and then, maybe in the end we get something out of it. If you get a suggestion and act as being offended by it, you don't need suggestions in the first place. I hope it's clear now.\nNow, Archi first and then you, almost asked me to provide you with a feasibility study for an idea. So, do you want me to ask thousands of people using asf on how tagging would be useful to them? Or better, did you asked them and you know the usefulness of the suggestion? No and No. The facts are rather simple, one writes his bs, Archi either likes it or not, case closed. ASF is complex but let's not making it sound like we're discussing rocket science with thousands of parameters. That said, i could list some of asf's functions that are way out of the scope, though they exist, so what now, Archi was blackmailed to code them? I mean, guys it's just a tool for some job, a great tool but not NASA's software that has a thousands protocols to follow and obey to. Provided that we all root for a neon pink command window and Archi loves the idea, we may have pinkcommandwindow option on the next version. \ud83d\ude06 \nSo for the bot part:  Your recommendations are good and rational, we do have a way to tell bots apart. However you're taking apart my phrases, trying to make an argument. eg: \n\nI don't see much sense in using !status b1..b5 in this case too, because !statusall will do the same.\nWhat will you gain from this renaming? Typing a few less characters?\n\nYes !status b1..b5 is useless, we have !sa but !pause b1..b5 isn't. Do you want me to write downall possible commands with all possible combinations, count the keystrokes for each combination, make a table, but then again, wouldn't you just say 'nah, it's a few less characters' ? I mean what's the point arguing that more characters is indeed more typing? Also this,\n\nIn case I want to redeem game someone going to play - I will use !ownsall command and will see exact names at once.\n\nHuh, already mentioned that, in fact i wrote \" No problem here.\". You missed to address the real problem which was on the next line, how should i know which bot corresponds to which account, in order to buy a game to this specific account. Not a key, a steam store purchase. I wouldn't know how to find this info , except the  hacks i mentioned earlier. \nFinally, naming bots b1..b5 you have to remember only lower and higher boundaries (numbers). Naming bots line 1_Donald 2_Daisy, you have to remember the first and last full names of a sorted list of bots , in order to access them as a group. All in all accessing bots sequentially is asf's feature to be used regardless of the amount of bots, and i find that 5 names are way to much typing if you can still access them using b1..b5\nAnyway, i guess we should agree we disagree to pretty much everything here, except cats, right? \ud83d\ude3c . Again. What are you suggesting exactly? For me to start asking thousands of people before suggesting a thing? And again, have you started asking thousands and you have the results back? Afaik, you are one person, i'm one person. You don't know better than me or me better than you, i make a guess tags would be useful, you make a guess tags would be useless. It's 1-1 and your word against mine, deal with it already.\n\nOf course no. Who need thousands of people? At least one person who need this, and can explain why he needs it (and why all other ways don't satisfy him) is more then enough. From your explanation I would suggest you are not the one who need this. Maybe one of your friends? \n\nI get it, you need to be ironic and extra rude to avoid dealing with your thin arguments. So for the fifth time NO it's not for me, it was a suggestion for generic use, and you're plain rude and offensive because you simply don't like it you think you can start implying i have some profit out of it. Good job twisting my words when I've already posted the following:\n\nIf Archi does not like it, is fine by me. \nThank you Archi for suggesting that way of bot naming, i think i'll use it myself.\nYou can find which bot is which, by issuing a find command on the console.\nYou can also find which bot is connected to which account, using !api and a search.\n\nBut i think you still can imply i need it for myself or a friend, to fulfill a personal request, right? You can do that, for a sixth time. The answers are there, above.\n\nOr you just suggesting it \"just in case\"? If it's the latter - it is a good reason not to do it.\n\nAll suggestions are being made \"just in case\" accompanied with a draft example. Requests are being made for oneself. So please explain me: Your argument is that if i made a request, i am wrong. If i made a suggestion i am wrong. So, WHAT exactly were my options here?. Nah, it's not worth it , you're asking way too much i shouldn't be apologizing for writing a suggestion, you should be apologizing for trashing my suggestion like it offended someone, somehow.\nI've been posting suggestions and ideas to other projects for 25 years now, nobody ever treated me like that for trying to suggest a simple idea, I didn't even pushed it , though i could go that way because it's a matter of 3 lines of code for the config and a couple of edits in the output. I've also suggested a simple log renderer for nlog to bypass all this drama, which i doubt you ever noticed. \nAll in all, I should have been more of an ass and less of a friend to the whole honeypot situation. \nHave fun bullying other contributors. So long. \ud83d\udc4b \nPS: I hope Archi is not sharing and liking your uncalled rude attitude, it would be such a disappointment.. @Ryzhehvost , \nsorry but i won't stay calm when i'm constantly bullied for making suggestions. Again, if you or anyone else don't like it or you find it unimaginative or useless, you have every right to say so, I honestly don't ride on my high horse or having any complex syndromes when reading an opposite view. But please don't make it sound like it's an invalid suggestion, cause it's quite simple as a notion and already answered all your questions. Read my answers and answer to them and not according to what you want to achieve (which is, to deny the suggestion) but according to what you asked. Please stick to the facts, you wanted answers for the suggestion you got them, you can answer to them but definitely not by picking out what is easy to laugh about and leave behind what it's difficult to address. That said, you're still not the coder here, so your opinion values equally as others, and that is, regardless of any possible relation you have with Archi.  Thank you.\n\nSo, what I asking - is there any friend of you, who need it, and inconvenienced because of it's lack? Someone, who will benefit from it? If no - then it means we have no proof that anyone at all will use it. Why implement something that nobody needs?\n\nIt's a logical fallacy all that and you know it. One person is proof and zero persons are not? Huh.. Making a suggestion never meant that one should have an army of users in his pocket to back it up and fight for winning. Brainstorming is not about winning. Even then, it's not an open vote suggestion and yet you're claiming that nobody would use it. How on earth do you know that? Heck, even Archi while coding enhancements, he doesn't know it's gonna be popular or totally obsolete. And then you say that If i find someone who like the feature then it would be massively userful? LOL, I can find 5 users that like neon pink command window, do you think it would be a widely accepted idea? Answer is: WHO KNOWS! It's not like there's a voting system like this (pun intended). Thing is, my suggestion is not neon pink or the weather report. \ud83d\ude12 \nAlso, since ASF is quite complete as a software, every suggestion would be a very tiny enhancement and narrow to one's view, it's not like ASF is missing the exit button! So now, i'm caught in the middle, if i'm bringing personal suggestions would be personal agenda and Archi is not coding specific requests for specific persons, he's 'not payed to do so' as he once said and i agree. But if i'll suggest possibly widely accepted enhancements, then i couldn't even back them up because 'nobody needs them'. Crazy, right? It's sounds like a quicksand placed there for reasons irrelevant to the production or enhancement of ASF.\n. @JustArchi, i'm replying to your last comment:\nSorry but I am being attacked for not accepting that my idea is shitty. Even you compared it's usefulness to the weather report and the cat feeding alarm. Problem is that you all are eligible to not like the idea, but nobody is eligible to trash others' ideas -well you are, if you have the right arguments but not liking it isn't a valid argument for trashing. I'll elaborate this later, while answering to your long technical post above.\nAs for the 99.9% , i didn't imply you don't care, i've said that you're satisfied with the product. When someone is satisfied with something is not evaluating other options objectively. Eg. when you're happily married, you may find the hot sexy neighbor boring and unattractive. \ud83d\udc83 Thing is, i totally share your sentiment of fulfillment but i don't share your arguments against the sexy neighbor. Despite my exaggeration of the 99.9%, the general feeling in this area and other places of feedback for ASF is pretty close to that. Most people, smart people, useful people, are afraid of expressing their views or having extensive conversations because they will be trapped in strange long unnecessary and unproductive discussions like this one. It should have been something like that:\n\nJ: Hey, why don't you add tags to bots?\nA: What do you mean?\nJ: bla bla this and then bla bla that.\nA: Hm... don't think so, other options still exist.\nJ: Yeah, true that, why not another.\nA: Meh, i don't feel like coding it. \nJ: I feel you, just check with friends, maybe find it useful\nA: Sure thing, mate. Cheers.\nJ: Ok mate, Cheers. \n\nAnd they lived happily ever after. Like i said i've participated in many projects over my 25 years of professional life, mostly anonymously. Some might find my ideas dumb or biased or unimaginative, it's fine by me, but i'm surely not suggesting adding the weather report. See, If you're comparing my suggestion to the weather report, i'm comparing it to the sexy hot neighbor, problem is that, none of this e-peen contest is very productive. Which brings us to the beginning, if it were any room and desire for enhancement, my 'sexy hot neighbor' would be evaluated on a different view. Hope i made myself clear. :wink:\n. @JustArchi, now to the technical part. Blocks i don't quote consider them as sharing my agreement. \ud83d\udc4d \n\nYes, suggestions are strictly subjective because you're asking me to code specific thing in ASF - if I don't see a reason why I should be doing that, I ask.\n\nCan't agree on that. Suggestions should be objective, though may come from a personal thought or need. Eg. I would love rubber shoes for walking in the rain, hey maybe others need that too. I'll make a suggestion to the shoes department. Hence, the rain boots are invented. Evaluation of suggestions should be objective too, if i may add. \n\nThat's up to ASF user, not me. I offer him a way to name his bots, and explain various way how to make it efficient - if he can't stick to it or make use of it, then I don't see a reason why I should bother with adding yet another way for doing that either.\n\nAgreed on the first part, though It's not \"yet another way for doing\" the same thing. Tagging is an enhancement, a way of loosely define and characterize a group of objects. Please don't make me give you a lecture about tags, you're actively (over)using tagging here in github which makes me extra happy since i'm an organizing addict myself. What i suggested wasn't trying to fix a problem with naming bots, it enhances the bot instance. It's like each bot having its own color in the console output, hey.. that's another trashy idea right now! \ud83d\ude1b \n\nI can't see any advantage of using tags instead of naming your bots properly. Saving keystrokes is not any valid reason, since you can already save keystrokes by naming your bots appropriately. \n\n'Saving keystrokes' is a valid reason since i'm the user and also part of my example-argument, not taking it into consideration due to a personal preference is biased. Eg. I like swimming, you don't. You deny buying me a swimming suite because you don't like swimming. It's crooked logic. So yes, I renamed by bots to 3-char-long names, for easier access and also saving keystrokes. Exhibit A\n\n(...)  but point still says - bots order should not matter when using !redeem command. If it does matter to you, you have !redeem  instead. \n\nAlready wrote twice that there's no problem with !redeem commands in my example. Again, the problem is when i need to find correlation between a named bot and the corresponding account, eg. after issuing a !oa command only to find that b5 is missing the game that's has huge discount in steam store. Which account is b5, which friend/family-member should i nag to buy this, or if all bots are mine, which login should i use to buy the game? Exhibit B\nMy idea of solving this was a tag, @frwrks thought the account name is more useful, fact is, if a user renames the bot name to something cryptic, visual connection to the actual account name is lost. The problem here is having both Exhibit A and Exhibit B , not excluding one or the another. \n\nBut even then, if you care that much about the order, then it's not problematic to have 1_archi, 2_bob, 3_john, daisy, donald, matt and otherBotIDontReallyCareAbout. You can even group them and do whatever you wish.\n\nSo your answer is i should rename bots to having long descriptive names, ooh yes but no matter how that suits me (perfect my bots, thanks \ud83d\ude09), this breaks Exhibit A. Also it makes the !pause b1..b5 command not only longer to type but difficult to remember because now bots are: 1_archi, 2_bob, 3_john, 4_daisy, 5_donald and the command would be !pause 1_archi..5_donald which forces me not only to type more but to remember the whole names for first and last bots. Well, correct me if i'm utterly wrong here but unless this command !pause 1..5 does work, the proposed solution is more confusing and is creating 2 more problems while solving one. \n\n(..) you're asking us to code something, so yes you do need to convince us why, or code yourself and go through review process if you feel like you know better how to solve all limitations I mentioned above for no real gain.\n\nSorry I can't find any limitations above and the gain is obvious, it's adding a 3byte empty config option in the json and an iif() clause on the formating output. Or what @frwrks suggested, a boolean toggle on the json file, and again an iif() on the output. The gain is obvious, and explained extensively, also explained again below. \n\nThe only argument you provided right now why bot names are not enough is because of redeem order, which should be implementation detail and not matter for !redeem command at all.\n\nNot true, in fact i never wrote that redeeming keys is a problem. Guys , are you reading what i answer? Problem is that once a bot name is renamed, visual connection to the account name is lost. I suggested a tagging which i found more flexible to use than the toggle @frwrks suggested, but it's on the same principle. Don't know why you keep denying that there's a gap of reference there, only solved by renaming bot name to include steam account name, which then makes it a static name by design and not an optional field. Also renaming bots breaks Exhibit A and apart from that, you didn't provide me with any other viable solution to know the bot's account name, although i've written some hacks to find it quickly. Either the account name is needed or not, and i've wrote a long argument why the account name is needed (because of Exhibit B).\n\nAnd that also didn't make sense as bot name is already used as logger name and can be easily filtered, and I explained you why.\n\nAlso not true, and this time you know it quite well. \n${logger} shows the named bot, not the steam account name. You're still suggesting renaming the bot to a descriptive name which clearly breaks Exhibit A. If only you'd created this in the past for any other reason, i would have directed myself and @frwrks to edit our nlog.config files to suit our needs. It still would be a workaround but a smart one, betting that the use would be very limited. And if not, it would be upgraded to a config option later on. Win, win. So, this would solve the theoretical problem, would also fulfill both mine and frwrks' requests (although not the issue but we would be glad to have it as an option). Also it would create a precedent that all relevant requests, if you selected to fulfill them, they would be redirected to advanced solution output thus editing nlog.config. \n\nBecause people keep forgetting that GitHub is for development part of ASF and here we're using technical and logical arguments, for \"maybe it makes sense\" ideas, it's clearly written to use the Steam group.\nWell, I mostly respect GitHub 'rules' and i'm trying to post elaborated suggestions and comments, nicely formatted, always trying to check your code changes first, always having the developer's view in mind, which is not obligatory by the way. This part of github is an issue collector and not all people are developers or quite capable computer users, so how can you expect all comments to be are like yours? \n\nAnyway my closing argument is that, brainstorming should be encouraged and not be 'punished', which currently is not happening, no matter how i enjoy spending hours debating the philosophical aspects behind an idea. I don't mind debating for the tiniest enhancement but it's quite tedious to write the same things 5-or-6 times and still having to answer like i never wrote them. \n. @reeporter , it fits pretty good indeed. Let me help you with your concerns:\n\nIn all these projects you participated you havent learned a key part of social skills\n\nWell, truth is I've learned a lot. First lesson i learned was to answer exactly what i'm being asked, and i did that thrice and quite verbosely. After that, It's others' responsibility to reply exactly on what my answers were and not on their agenda. I frankly don't understand what you're accusing me of, perseverance? spending time? Not ducking out? \ud83d\ude32 \nSee, I had no problem accepting \"no\" because i was \"meh\" before suggesting it, and in fact, i accepted \"no\" while replying Archi's first post. Read it, it's up there. The problem is that I was being asked \"why\" so i answered \"why\", then the conversation circled around things i've already answered. Keep answering what i'm being asked is not an offense in your social skills list. Also, saying \"ok\" when confronted or getting a denial is what stops innovation. Feel free to follow your list. \nSo, please read the conversation from the beginning because not doing that and still trying to judge me fairly, is only an insult. Or, you can read what i've answer for a fourth time in my last long answer to Archi, two posts above. You may start participating in-topic by reading it there and pointing out your points of disagreement. \n\nAfter all you can still fork the project and implement the features you are talking about.\nWhen you are ready you can ask again for the feature to get merged into ASF.\n\nWhy forking it, I don't want this feature for myself nor i pushed it to Archi's throat. I was being asked why and answered why. The whole conversation was about the usefulness of the idea (or how it resembles the weather report) and not whether the idea should be included in ASF, Archi made that clear from his first post. The problem i had with the arguments is that the feature i suggested, already exits. It is not and I won't accept that for ducking out or any other \"social\" reason. It's a matter of respect for the opposite party and myself, if the opposite party shows disrespect or lack of sense for a reason, then YES, your list's suggestion comes quite handy. \nAgain, please read the conversation from the beginning. Let's not start this merry-go-round of raising matters already covered and answered. I did that with @Ryzhehvost and didn't go so well, because i have a huge problem myself: When i write something as an answer to a question, i want others to reply to my answer exactly and not to what they wanted my reply to be, or what they prepared to reply in the first place. I'm a strange kind of bear, don't you think? \ud83d\udc3b \nAlso, this: \nPS1: Moderating the topic without being asked (I guess?) is neither noble nor helping Archi, who's perfectly capable of moderating this and also having an extensive conversation with me, we've done that before, actually. \ud83d\ude00 \nPS2: Not everything is a contest. You don't have to argue, just for the sake of the argument or test your reflexes. If anyone has something to disagree with, i'll address it with pleasure. Other than that, please refrain from provoking me with well known social skill lists and fun-facts, thanks. :wink:. Note to @JustArchi : That's exactly why i wrote that comment about the honeypot. \ud83d\ude09 \n\nEveryone has a limited ammount of time.\n\n@reeporter : Though trying too hard to have an argument, it failed epically. If you have limited amount of time, then why are you posting here? It's not something that goes away, the issue was already closed and the conversation kept going between Me, Archi, Ryzhehvost and frwrks. \n\nI dont know archi personally but i am sure that he has a life with work, academic studies, friends and so on.\n\nSo? We all have lives and things to do, it's not a live chat here, nor i forced him to reply in time frame. Why are you advocating for Archi, did he asked you to? You know what you do is quite insulting for everyone, unless somebody asked you to provoke me for a reason. Well? \n\nIs it not enough that you have been told that you can already use a custom Nlog.config to achieve what you want?\n\nOh boy, you just copy/pasting stuff to make arguments, right? You're suggesting me to follow my suggestion to Archi which was refused due to lack of reasoning. Your quote is quite irrelevant, as i already wrote ${logger} rendering parameter displays the bot name not the steam account. This is pretty basic, and if you were part of the conversation and/or had more experience you would know better than this. \nI've extensively and thoroughly explained why steam account name is needed, according to my view. Other people also suggested the same thing. Archi suggested renaming which in turn was causing other problems, as i described on my last long post to Archi. The conversation is still open in this area, all other areas concern many outsiders but not me. Or Archi, if i may say so.\n\nI have the strong feeling that this more about arguing than about making a suggestion for a reasonable feature.\n\nExactly what i wrote above. Now you're copy/pasting me. My suggestion is there, my answers are there. If Archi wanted or felt that i was talking bs he would have said so. My feeling is that he knows i have valid arguments that he doesn't agree with, which is healthy and called conversation. On the contrary what you're doing with your last posts is called bullying and is sick & unproductive.\n\nI know people that can not stop arguing after everything is said.\n\nI know people that are bullying others to quit replying. Bullying doesn't stop me. Stupid people, rude people, arrogant people, that might do the trick. Crazy people too. \n\nJust get to the point and stop wasting (others) precious time.\n\nOh i'm sorry , If you have an appointment, please hurry! Other than that, i'm not sitting on your couch, never asked you to come bully me, please go back to your business. Ah, and stop advocating for others. \nThank you for your offtopic contribution!\n. @Ryzhehvost [just a placeholder, answer follows]. @reeporter , yeah nice one. I've something else to offer, more classical. \nWhat you don't get guys, is that the problem is not my suggestion but the way you're not accepting suggestions and you have built a pattern of denial, first by not reading the other part, then by twisting what others say, and finally by provoking and beating around the bush. But If that's what makes you happy, it's fine by me. \ud83d\udc4d . > Honestly there is no reason to continue this.\nHonestly you must be paying github's server and you care so much about text length, time and stuff. You came here with an offtopic post and you keep moderating the issue from then on. Who voted you king of the jungle? \ud83d\udc12 \n. Not sure if it helps (reverse engineering?), in the official steam client, console mode, there are two commands that can be used to get license info: licenses_print and licenses_for_app <app_id> \nlicenses_print shows all activated licenses, here's a selected sample of my list:\n\nLicense packageID 144451:\n- State   : Active( flags 0 ) - Purchased : Mon Mar 20 23:18:07 2017 in \"GR\", Wallet\n- Apps    : 569970,  (1 in total)\n- Depots   : 569971,  (1 in total)\nLicense packageID 161693:\n- State   : Active( flags 0 ) - Purchased : Thu Mar 30 21:42:08 2017 in \"GR\", CD Key\n- Apps    : 498320,  (1 in total)\n- Depots   : 498321,  (1 in total)\nLicense packageID 157697:\n- State   : Active( flags 0 ) - Purchased : Sat Apr 01 00:58:41 2017 in \"GR\", Complimentary\n- Apps    : 600420,  (1 in total)\n- Depots   : 600421,  (1 in total)\n\n. ",
    "lookerinside": "Damn, thanks, i fogot about it...\n. May be it will be usefull\nhttps://steamdb.info/freepackages/\n. I suggest global option for settings:\nSteamMasterID \nSteamMasterClanID \nBlacklist\nand may be most of others. I think at most of people most settings are similar except strong unicque such as username, password, apikey\n. Let it be if in bot settings used some setting it will have much more priority than global and overwrite it for this bot\n. ",
    "Gargauth": "Solved. It was issues with certificates.\nI needed to run mozroots --import --ask-remove (run as same user as will be used for running asf). Consider adding this to wiki/readme  for other linux users facing same problem.\n. I admit I didn't know --user worked that way, but as long as the config directory is pre-configured it seems to work as expected (running docker run -d --user=1000:1000 -v /home/ubuntu/conf-asf:/app/config --name=asf justarchi/archisteamfarm).\nPerhaps adding it as an example to the wiki/docs would be useful to others. Either way, thank you. Good catch on that autoupdate issue. However I tried your solution with docker exec asf chown -hR 1000:1000 /app and because of -u 1000:1000 that chown command will also execute as 1000:1000, and operation will fail (chown: changing ownership of '/app/': Operation not permitted etc.). I personally am fine with disposing of the container (docker rm -f asf) and getting a new image when I need update, but if other users have auto updates enabled, the container will fail and they probably won't know why.. This works: docker exec --user=root asf chown -hR 1000:1000 /app. ",
    "KazeZlat": "@judgegr actually I am not about the ability to farm single app but just to rearrange queue. Like if I want to go for a rest and see exact game cards in my inv after return.\n. Well I can think one way to \"kinda\" implement this, but not with a command. \nAnd yes, it requires e-mail handling (but as @TheSergiooo said he made a parser, so it is possible, right? :D)\nFirstly let's say we have a ASF config property with mail credentials that ASF can check and a timer setting how often it should.\nThen we parse email for gift mails, parse appID or subID (should I copy that from #505?) from it and a name of recipient.\nIf recipient name is like the name of Bot instance then we redeem it on that bot, otherwise on next bot that don't have this game/sub (same if we can't get appID/subID).. @JustArchi we can get appID or subID from game picture src in <img> tag in email (if it exists)\nJust checked my email with tons of different emails with different games:\nSubID - http://cdn.akamai.steamstatic.com/steam/subs/49788/header.jpg?t=1447456033 (giftmail with Deus Ex Collection)\nAppID - http://cdn.edgecast.steamstatic.com/steam/apps/513320/header.jpg?t=1488452427 (giftmail with Alice VR)\nAnd it always have package name (like Deus Ex Collection (RU/IN/CIS)) in alt attribute.\n\n^[0-9A-F]{16}$ can match bot name\n\n@Ryzhehvost just add /ackgift/ to regex and then remove it from result string.. @Ryzhehvost just take a look of what I wrote in #499 (oh wait, you have already :D)\n. @Ryzhehvost you can still do this for previously bought gifts, but yea, someday it can be dropped.. ",
    "il-marc": "Great work! Bulk keys redeeming works fine for me. Maybe its time to make separate config file for app?\n. Seems \"exit\" doesnt work. Same with \"status\".\n```\n\nASF.exe --client \"exit\"\n04.01.2016 15:23:21 [] INFO: Main()  Archi's Steam Farm, version 1.3.0.0\n04.01.2016 15:23:21 [] NOTICE: ParseArgs()  Command sent: exit\n04.01.2016 15:23:21 [] NOTICE: ParseArgs()  Response received: ERROR: Too few arguments, expected:   (ExtraArgs)\nASF.exe --client \"exit example\"\n04.01.2016 15:23:38 [] INFO: Main()  Archi's Steam Farm, version 1.3.0.0\n04.01.2016 15:23:38 [] NOTICE: ParseArgs()  Command sent: exit example\n04.01.2016 15:23:38 [] NOTICE: ParseArgs()  Response received: Unrecognized command: !exit\n```\n. > Question is what that config would offer. For now there is nothing that would globally affect how ASF works.\n\nip and port to listen, master clanID and steamID, api key.\n. You should run it like service. Try this http://nssm.cc/. Works fine for me.\n. My suggested solution. In ArchiWebHandler.cs:398 replace https://steamcommunity.com/my/inventory/json/753/6 with https://steamcommunity.com/my/inventory/json/753/6?trading=1\n. My bad. There was other steamkit app running at same time.\n. Again same problem. No other steamkit instances was running. Looks like steam bug.\n. Mistery continues. I have removed all bots from config folder (about 130) except 6. And asf starts normaly. After adding one more bot in config folder got \"The WebAPI call timed out\" again.\nAsf 2.0.0.4 works fine\n. I have tested as much versions as can. Last working for me version is 2.0.1.2. Latest versions just freezing on this step. In the luckiest case it recieves weblogin not faster then 30 seconds, in other cases just failing\n. Noticed strange thing\n```\n08.05.2016 18:23:58 [] INFO: CheckForUpdate()  Checking new version...\n08.05.2016 18:23:59 [] INFO: CheckForUpdate()  Local version: 2.0.4.1 | Remote version: 2.0.4.1\n08.05.2016 18:23:59 [] INFO: RefreshCMs()  Refreshing list of CMs...\n08.05.2016 18:23:59 [] INFO: RefreshCMs()  Success!\n08.05.2016 18:23:59 [] INFO: Start()  Starting...\n08.05.2016 18:24:00 [] INFO: OnConnected()  Connected to Steam!\n08.05.2016 18:24:00 [] INFO: OnConnected()  Logging in...\n08.05.2016 18:24:01 [] INFO: OnLoggedOn()  Successfully logged on!\n08.05.2016 18:24:01 [] INFO: Init()  Logging in to ISteamUserAuth...\n08.05.2016 18:24:26 [] INFO: Start()  Starting...\n08.05.2016 18:24:27 [] INFO: Init()  Success!\n08.05.2016 18:24:27 [] INFO: OnConnected()  Connected to Steam!\n08.05.2016 18:24:27 [] INFO: OnConnected()  Logging in...\n08.05.2016 18:24:27 [] INFO: IsAnythingToFarm()  Checking badges...\n08.05.2016 18:24:27 [] INFO: IsAnythingToFarm()  Checking first page...\n08.05.2016 18:24:28 [] INFO: OnLoggedOn()  Successfully logged on!\n08.05.2016 18:24:28 [] INFO: Init()  Logging in to ISteamUserAuth...\n08.05.2016 18:24:30 [] INFO: Init()  Success!\n08.05.2016 18:24:30 [] INFO: IsAnythingToFarm()  Checking badges...\n08.05.2016 18:24:30 [] INFO: IsAnythingToFarm()  Checking first page...\n```\nAccording fiddler, request was send at 18:24:26\n\n. If I enable less bots its freezing less\n. value in asf.db is rewrited after asf starts\n. pls check pull request\n. np\n. According that asf found his ASF.json its possible that there is no bots in config folder. Notice that  example.json and minimal.json are ignoring.\n. Thanks a lot :D. @GUiHKX ASF wont loot even tradeble gifts because gifts are stored under contextID 1. Only contextID 6 is lootable.. Returning string.Empty is great idea. I'm going to fix it in few minutes. Probably shouldn't even try to get apiKey on limited profiles (anyway it returns ESteamApiKeyState.AccessDenied). In other cases seems fine. Except of synchronous calls of ObtainApiKey(). . Got it. Thanks. > Well, i dont know what Disabled mean, but looks like not something i want in my project, so i changed previous piece of code in bot.cs into\nIt's not possible to log in with disabled account. Nothing to worry about.\nAnd I think that logging account notifications from steamsupport can be useful.. In addition \n\nSince we don't have any disabled account to test ASF behaviour...\n\nI can provide dumps if you are interested.. Log for disabled account:\n2017-02-24 00:23:56|ASF-9360|INFO|ASF|InitASF() ASF V2.2.2.8\n2017-02-24 00:23:56|ASF-9360|INFO|ASF|IsRuntimeSupported() Your .NET runtime version is OK.\n2017-02-24 00:23:56|ASF-9360|INFO|ASF|IsRuntimeSupported() Required version: 4.6.1 | Found version: 4.6.1\n2017-02-24 00:23:56|ASF-9360|INFO|ASF|InitGlobalDatabaseAndServices() It looks like it's your first launch of the program, welcome!\n2017-02-24 00:23:56|ASF-9360|WARN|ASF|InitGlobalDatabaseAndServices() Please review our privacy policy section on the wiki if you're concerned about what ASF is in fact doing!\n2017-02-24 00:24:11|ASF-9360|INFO|ASF|CheckForUpdate() ASF will automatically check for new versions every 24 hours.\n2017-02-24 00:24:11|ASF-9360|INFO|ASF|CheckForUpdate() Checking for new version...\n2017-02-24 00:24:12|ASF-9360|INFO|ASF|CheckForUpdate() Local version: 2.2.2.8 | Remote version: 2.2.2.4\n2017-02-24 00:24:12|ASF-9360|INFO|ASF|InitializeCMs() Initializing SteamDirectory...\n2017-02-24 00:24:13|ASF-9360|INFO|ASF|InitializeCMs() Success!\n2017-02-24 00:24:13|ASF-9360|INFO|disabled|Start() Starting...\n2017-02-24 00:24:13|ASF-9360|INFO|disabled|Connect() Connecting...\n2017-02-24 00:24:13|ASF-9360|INFO|disabled|OnConnected() Connected to Steam!\n2017-02-24 00:24:13|ASF-9360|INFO|disabled|OnConnected() Logging in...\n2017-02-24 00:24:14|ASF-9360|ERROR|disabled|OnLoggedOn() Unable to login to Steam: AccountDisabled/AccountDisabled\n2017-02-24 00:24:14|ASF-9360|INFO|disabled|Stop() Stopping...\n2017-02-24 00:24:14|ASF-9360|INFO|ASF|OnBotShutdown() No bots are running, exiting.... other one with account alert\n2017-02-24 00:28:21|ASF-2060|INFO|ASF|InitASF() ASF V2.2.2.8\n2017-02-24 00:28:21|ASF-2060|INFO|ASF|IsRuntimeSupported() Your .NET runtime version is OK.\n2017-02-24 00:28:21|ASF-2060|INFO|ASF|IsRuntimeSupported() Required version: 4.6.1 | Found version: 4.6.1\n2017-02-24 00:28:21|ASF-2060|INFO|ASF|InitGlobalDatabaseAndServices() It looks like it's your first launch of the program, welcome!\n2017-02-24 00:28:21|ASF-2060|WARN|ASF|InitGlobalDatabaseAndServices() Please review our privacy policy section on the wiki if you're concerned about what ASF is in fact doing!\n2017-02-24 00:28:36|ASF-2060|INFO|ASF|CheckForUpdate() ASF will automatically check for new versions every 24 hours.\n2017-02-24 00:28:36|ASF-2060|INFO|ASF|CheckForUpdate() Checking for new version...\n2017-02-24 00:28:37|ASF-2060|INFO|ASF|CheckForUpdate() Local version: 2.2.2.8 | Remote version: 2.2.2.4\n2017-02-24 00:28:37|ASF-2060|INFO|ASF|InitializeCMs() Initializing SteamDirectory...\n2017-02-24 00:28:37|ASF-2060|INFO|ASF|InitializeCMs() Success!\n2017-02-24 00:28:37|ASF-2060|INFO|tos|Start() Starting...\n2017-02-24 00:28:37|ASF-2060|INFO|tos|Connect() Connecting...\n2017-02-24 00:28:38|ASF-2060|INFO|tos|OnConnected() Connected to Steam!\n2017-02-24 00:28:38|ASF-2060|INFO|tos|OnConnected() Logging in...\n2017-02-24 00:28:48|ASF-2060|INFO|tos|OnDisconnected() Disconnected from Steam!\n2017-02-24 00:28:48|ASF-2060|INFO|tos|OnDisconnected() Reconnecting...\n2017-02-24 00:28:48|ASF-2060|INFO|tos|Connect() Connecting...\n2017-02-24 00:28:49|ASF-2060|INFO|tos|OnConnected() Connected to Steam!\n2017-02-24 00:28:49|ASF-2060|INFO|tos|OnConnected() Logging in...\n2017-02-24 00:28:49|ASF-2060|INFO|tos|OnLoggedOn() Successfully logged on!\n2017-02-24 00:28:49|ASF-2060|INFO|tos|Init() Logging in to ISteamUserAuth...\n2017-02-24 00:28:50|ASF-2060|INFO|tos|Init() Success!\n2017-02-24 00:28:51|ASF-2060|INFO|tos|IsAnythingToFarm() Checking first badge page...\n2017-02-24 00:28:53|ASF-2060|INFO|tos|StartFarming() We have a total of 4 games (16 cards) left to idle (~10 hours remaining)...\n2017-02-24 00:28:53|ASF-2060|INFO|tos|StartFarming() Chosen idling algorithm: Complex\n2017-02-24 00:28:53|ASF-2060|INFO|tos|FarmMultiple() Now idling: 395980, 368900, 410590, 432150\n2017-02-24 00:28:53|ASF-2060|INFO|tos|FarmHours() Still idling: 395980, 368900, 410590, 432150\nss of notification\n\n. @JustArchi it doesn't reconnect \n2017-02-24 00:47:38|ASF-3812|INFO|ASF|CheckForUpdate() Local version: 2.2.2.9 | Remote version: 2.2.2.4\n2017-02-24 00:47:38|ASF-3812|INFO|ASF|InitializeCMs() Initializing SteamDirectory...\n2017-02-24 00:47:39|ASF-3812|INFO|ASF|InitializeCMs() Success!\n2017-02-24 00:47:39|ASF-3812|INFO|disabled|Start() Starting...\n2017-02-24 00:47:39|ASF-3812|INFO|disabled|Connect() Connecting...\n2017-02-24 00:47:39|ASF-3812|INFO|tos|InitStart() Not starting this bot instance because it's disabled in config file!\n2017-02-24 00:47:39|ASF-3812|INFO|disabled|OnConnected() Connected to Steam!\n2017-02-24 00:47:39|ASF-3812|INFO|disabled|OnConnected() Logging in...\n2017-02-24 00:47:40|ASF-3812|WARN|disabled|OnLoggedOn() Unable to login to Steam: AccountDisabled/AccountDisabled\n2017-02-24 00:47:40|ASF-3812|INFO|disabled|OnDisconnected() Disconnected from Steam!. @JustArchi \n2017-02-24 00:50:20|ASF-9316|DEBUG|tos|OnLoggedOn() Flags: PersonaNameSet, Passw\nordSet, HWIDSet, EmailValidated, LogonExtraSecurity, Steam2MigrationComplete, Lo\nckdown. should I redeem valid key?\nupd. nm. invalid key\n<tos> Key: WHYVO-LVOXD-DLMAO | Status: BadActivationCode\nsame results for valid and duplicate keys\n<tos> Key: 9___B-N___X-W___R | Status: AccountLocked | Items: [67636, Ruzh Delta Z]\n. @JustArchi btw noticed warnings in log\n2017-02-24 00:57:07|ASF-4192|WARN|ASF|ResponseRedeem() Received unknown value for PurchaseResultDetail, please report this: AccountLocked\n2017-02-24 00:57:07|ASF-4192|INFO|ASF|HandleCommand() Answered to WCF command: !redeem tos 9___B-N___X-W___R with: \n<tos> Key: 9___B-N___X-W___R | Status: AccountLocked | Items: [67636, Ruzh Delta Z]. @JustArchi \n\nPurchasing, gifting, trading, buying and selling items on the Community Market, and cd-key activation have been disabled.\n\nAnyway I tried to buy a game and steam store said:\n\nOops, sorry!\nAn error was encountered while processing your request:\nPurchasing has been disabled for your account.. @JustArchi will try to farm cards and message about results.. After 9h of farming single game I didn't get any card. Seems card drops restricted too. At least for me.. @JustArchi for accounts that receive steam guard codes by email. We already have headless mode so in this mode chat or wcf can be used to enter this codes.. @JustArchi but when asf logging in few accounts, how can we know code for which account we got with input?. Okey got it. The main reason for this issue that automating of receiving and parsing emails is easier (and cheaper) then linking mobile phones.. How about !start Bot1 STGRD?. Also we need to extend Headless property to 'off', 'don't wait for input', 'wait for input from wcf'. Something like that.. Ye right. User setting up all vars, then starting the bot. Got it.. Nice. I will send pull request today.. @JustArchi works fine only while starting bots manually (actually it's enough for me) . But if ASF starts all bots like usual (with \"Enabled\": true,) it will get RateLimitExceeded error after starting bunch (43 with 20s delay) of accounts. I think it's because bot moves to the end of starting queue after sending sg code and !start command and steam count this last login as not successful (brute protection?). It will be fixed if !start will start the bot as soon as possible. \nAnyway, I'm glad that it works! Thank you so much for doing my life easier!. One thing I've noticed while testing:\n2017-03-02 23:23:25|ASF-4524|INFO|botName|OnConnected() Logging in...\n2017-03-02 23:23:26|ASF-4524|WARN|ASF|GetUserInput() Received a request for user input, but process is running in headless mode!\n2017-03-02 23:23:26|ASF-4524|INFO|botName|Stop() Stopping...\n2017-03-02 23:23:26|ASF-4524|ERROR|botName|SetUserInput() inputValue || inputValue is null!\nI don't think that empty input value is an error.. > cs:go/dota/etc trades\nSteamTradeMatcher\n\ny u no read?. Error. Games is null.. I really can't understand how to implement this flow.. ",
    "silentguy256": "Doh, looking at the code, that's exactly how it works, it just was not in the list of commands :P\n. ",
    "Maniaco-C": "Thanks for the answer.\n. ",
    "Arslan30": "Found a temporary solution for it:\nEvery time before starting ASF delete everything except .json files from config folder and start ASF. It would ask for your Auth code and start farming. You have to do this every time you start it or else you'll get stuck in the loop.Hope it helps. I'm having this problem right now with latest version...Sorry didn't noticed the dates..And about DB's that's only way its working for me. ",
    "megablue": "ah, never mind me, got ASF running by running mono from \ndeb http://plugwash.raspbian.org/mono4 jessie-mono4 main\n. ",
    "Thunderoux": "Done that already, Get this error when trying to start the client too (edited the example file) No clue how to make the program work on my raspberry really..\npi@raspberrypi:~/Desktop $ mono ASF.exe --client \"start example\"\n14/01/2016 15:37:36 [] INFO: Main()  Archi's Steam Farm, version 1.3.0.0\n14/01/2016 15:37:39 [] NOTICE: ParseArgs()  Command sent: \"start example\"\n14/01/2016 15:37:44 [!] EXCEPTION: HandleCommand()  A system exception has occurred.\n14/01/2016 15:37:44 [*] NOTICE: ParseArgs()  Response received: \"\"\n. Mono JIT compiler version 3.2.8 (Debian 3.2.8+dfsg-10)\nCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\n        TLS:           __thread\n        SIGSEGV:       normal\n        Notifications: epoll\n        Architecture:  armel,vfp+hard\n        Disabled:      none\n        Misc:          softdebug\n        LLVM:          supported, not enabled.\n        GC:            sgen\n. I followed that guide but now I get Illegal instructions when trying to run mono ASF.exe --server\n. pi@raspberrypi:~ $ mono ASF.exe --server\nIllegal instruction\npi@raspberrypi:~ $ mono --version\nIllegal instruction\n. Maybe the os is not compatible with mono? I will try installing another os and see if that helps.\n. I understand that and after researching a bit I think I found the problem, Raspian is not supported for mono so I will try installing another os.\n. Thank you! Now the program work! :D\n. ",
    "HiveSolution": "Yup, I actually did that and got this problem.\n. Okay. Fixed the Problem. Don't know how the problem appeared. Can't really re-produce it.\nI did the following:\nsudo apt-get -f install mono-devel\nSomehow this was missing, even tho i installed mono-complete.\n. ",
    "rebel-000": "I have some idea, and I will send new pull request but most likely next week.\n. Sorry, I missed that \"!play\" is already implemented. I will try to make sorting by avg_price without third-party services.\n. ",
    "prorusnet": "Why do not you combine the fact that each of you wants? For example, to divide the \"true / not true - taking each key bot\"\n. I had in mind. Let the parameter determines how the keys will be distributed\n. ",
    "jbmccune": "I like where this feature is going, and thought I'd chime in with my two cents.  I'll break it down into the two scenarios:\n1) We have a bunch of keys for a single game. We want one key to go to each bot that doesn't have that game, with as few activation failures as possible. If we could tell the bot that it is this case by switching a flag dynamically just before dropping the keys, even in the same chat message as with \"!samegame {key} {key} {key}\" for example, then the functionality that JustArchi mentions above would also help a lot - where the first activation attempt for the first key would be spent to find out what the game is, and then no more attempts would be wasted on any of the keys because it would know which accounts don't have that game.\n2) I have a bunch of keys for different games. We don't care which accounts get which games, we just want as many to be activated as possible, again with as few activation failures as possible. Again, JustArchi's suggested behavior above then makes a big difference, but to avoid a single account having all of the activation failures, it could rotate through the accounts any time an activation fails.  If the key was AlreadyOwned on that account, it would now know the game and activate it on the next account that doesn't own it, then move on to the next key.\nThe only real difference between the two scenarios behavior-wise is that the first case can be a little more efficient because it doesn't have to test each key, avoiding some possible AlreadyOwned failures.  Because the case 2 logic still works for case 1, but not the other way around, I would actually prefer to have the default behavior be case 2, and only have to specify a command along with the keys to indicate to the bot that it is case 1.  I don't think that would be a big deal to anyone.\nSo I go in, drop a bunch of keys (prefixed with the command if it's case 1), and I get back a simple output indicating which keys were activated to which accounts, ordered by account/game ideally, and which keys were left unused (along with what game they were for).  For errors, if they just landed in \"unused\" along with the last error encountered that would be good enough for me.\nOne other thought/question - can this work in a farming group chat as well, rather than only a private chat with one of the accounts?\n. Well, I'm not sure what's possible via the API in that regard.  Whether it could load and cache the entire library for each account one time, then do a quicker sync of changes at startup, or if it would be possible and faster to query each account for each specific game just before a known key activation is attempted, I can't say.\nIf library caching is used, I think it would be safe to assume that, while ASF is running, no games would be added to these accounts except through ASF - so there would be no need to sync the library with each key activation attempt, just once on each ASF startup.\nI'd be happy to move this to a separate issue - I'm obviously new to the project, and unsure how Archi works.  I saw that this one was still open and in development, so thought it best to add my thoughts here.\n. Yeah, I thought about gifts, but for me they're pretty rare on these accounts so an ASF restart or a !refreshgamecache command wouldn't be a big deal.  I guess that mileage can vary.\nAnyways, with the API capability you found, I think that's pretty much a moot point - on-demand requests, maybe with a short-term cache to avoid repeating the same requests with a single bunch of keys, would seem to be ideal.\n. ",
    "stregkoden": "\"!status\" and \"!statusall\" maybe need to be update.\nthen we use \"Manuel mode\" we will get this msg back:\n\"bot 'zzArchizz' is not farming.\" \nmaybe a small change to: 1 or 2.\n1) \"bot 'zzArchizz' is in manuel mode\"\nor.\n2) \"bot 'zzArchizz' is in game ID: 730\"\n. Thanks! :)\n. Sorry to ask here @JustArchi, But there is an opportunity to get in touch with you privately?\nHave an idea that does not directly concerning ASF.\nBut is still close. And would like to avoid writing on a random location.\n. ",
    "clumba": "\nAdded new bot config property called SteamTradeMatcher with default value of false. As always, you can find more information in the wiki.\n\nDon't forget to add information to wiki.\n. Windows.\n. Done.\n. It's exactly same as log in fisrt post, but many bots, not one.\nI just tried to roll back to v 1.5 (i have backup) and get this:\n23.03.2016 19:33:11 [*] INFO: OnConnected() <qwerty> Connected to Steam!\n23.03.2016 19:33:12 [!] WARNING: OnLoggedOn() <qwerty> Unable to login to Steam: InvalidPassword\n23.03.2016 19:33:12 [*] INFO: OnDisconnected() <qwerty> Disconnected from Steam!\n23.03.2016 19:33:12 [*] INFO: OnDisconnected() <qwerty> Removed expired login key\n23.03.2016 19:33:12 [*] INFO: OnDisconnected() <qwerty> Reconnecting...\nOk, i downloaded and unpacked latest version (2018), maked fresh json config files from example and got this (i tried that new function HackIgnoreMachineID and it all same with and without it, not working):\n23.03.2016 21:55:19 [*] INFO: CheckForUpdate() <Main> Checking new version...\n23.03.2016 21:55:23 [*] INFO: CheckForUpdate() <Main> Local version: 2.0.1.8 | Remote version: 2.0.1.5\n23.03.2016 21:55:23 [*] INFO: CheckForUpdate() <Main> ASF will automatically check for new versions every 24 hours\n23.03.2016 21:55:23 [*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n23.03.2016 21:55:24 [*] INFO: RefreshCMs() <Main> Success!\n23.03.2016 21:55:24 [*] INFO: Start() <qwerty> Starting...\n23.03.2016 21:55:27 [*] INFO: OnConnected() <qwerty> Connected to Steam!\n23.03.2016 21:55:27 [*] INFO: OnConnected() <qwerty> Logging in...\n23.03.2016 21:55:27 [!] WARNING: OnConnected() <qwerty> Using workaround for broken GenerateMachineID()!\n23.03.2016 21:55:27 [!] WARNING: OnLoggedOn() <qwerty> Unable to login to Steam: ServiceUnavailable\n23.03.2016 21:55:27 [*] INFO: OnDisconnected() <qwerty> Disconnected from Steam!\n23.03.2016 21:55:27 [*] INFO: OnDisconnected() <qwerty> Reconnecting...\n23.03.2016 21:55:34 [*] INFO: OnConnected() <qwerty> Connected to Steam!\n23.03.2016 21:55:34 [*] INFO: OnConnected() <qwerty> Logging in...\n23.03.2016 21:55:34 [!] WARNING: OnConnected() <qwerty> Using workaround for broken GenerateMachineID()!\n23.03.2016 21:55:34 [!] WARNING: OnLoggedOn() <qwerty> Unable to login to Steam: ServiceUnavailable\n23.03.2016 21:55:34 [*] INFO: OnDisconnected() <qwerty> Disconnected from Steam!\n23.03.2016 21:55:34 [*] INFO: OnDisconnected() <qwerty> Reconnecting...\n23.03.2016 21:55:41 [*] INFO: OnConnected() <qwerty> Connected to Steam!\n23.03.2016 21:55:41 [*] INFO: OnConnected() <qwerty> Logging in...\n23.03.2016 21:55:41 [!] WARNING: OnConnected() <qwerty> Using workaround for broken GenerateMachineID()!\n23.03.2016 21:55:41 [!] WARNING: OnLoggedOn() <qwerty> Unable to login to Steam: ServiceUnavailable\n23.03.2016 21:55:41 [*] INFO: OnDisconnected() <qwerty> Disconnected from Steam!\n23.03.2016 21:55:41 [*] INFO: OnDisconnected() <qwerty> Reconnecting...\n23.03.2016 21:55:48 [*] INFO: OnConnected() <qwerty> Connected to Steam!\n23.03.2016 21:55:48 [*] INFO: OnConnected() <qwerty> Logging in...\n23.03.2016 21:55:48 [!] WARNING: OnConnected() <qwerty> Using workaround for broken GenerateMachineID()!\n23.03.2016 21:55:48 [!] WARNING: OnLoggedOn() <qwerty> Unable to login to Steam: ServiceUnavailable\n23.03.2016 21:55:48 [*] INFO: OnDisconnected() <qwerty> Disconnected from Steam!\n23.03.2016 21:55:48 [*] INFO: OnDisconnected() <qwerty> Reconnecting...\nI sent debug + log to you.\n. Today my fresh install of asf updated to 2.0.1.9 and it works fine.\nThx for helping.\n. Thx, i thought, that SteamOwnerID needed only for sending commands via steam chat.\n. Ok, i'm not so clever user here, i read that something was changed to IPC and API commands, but didn't get it: is IPC not working with commands via HTTP requests like before? IPC GUI was mentioned in changelogs, but it wasn't released yet.\nSo, i cannot use browser for sending commands now?. > That is already happening.\nWhere it located? Like i said, no log created when i create bot.keys file. I checked all files in ASF folder. log.txt is also not logging anything about it. . ",
    "DeXP": "This error is not about something periodic with steamAPI. The error is very stable. I can't run ASF on my Arch Linux even once... I'm behind NAT. But it's not a problem on Windows, AFS works perfect on my Win10 x64.\n$ mono ./ASF.exe \n25.01.2016 21:43:05 [*] INFO: Main() <Main> Archi's Steam Farm, version 1.5.0.0\n25.01.2016 21:43:06 [*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n25.01.2016 21:43:07 [!] EXCEPTION: UnhandledExceptionHandler() <Main> One or more errors occurred.\n25.01.2016 21:43:07 [!] StackTrace:   at System.Threading.Tasks.Task.ThrowIfExceptional (Boolean includeTaskCanceledExceptions) <0x41dbf570 + 0x0003f> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Wait (Int32 millisecondsTimeout, CancellationToken cancellationToken) <0x41d0c6c0 + 0x000cf> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Wait () <0x41d0c360 + 0x0002b> in <filename unknown>:0 \n  at ArchiSteamFarm.Bot.RefreshCMs () <0x41d92f30 + 0x0004f> in <filename unknown>:0 \n  at ArchiSteamFarm.Program.Main (System.String[] args) <0x41c81400 + 0x002cf> in <filename unknown>:0 \n25.01.2016 21:43:07 [!] EXCEPTION: UnhandledExceptionHandler() <Main> A task was canceled.\n25.01.2016 21:43:07 [!] StackTrace: \n[ERROR] FATAL UNHANDLED EXCEPTION: System.AggregateException: One or more errors occurred. ---> System.Threading.Tasks.TaskCanceledException: A task was canceled.\n  --- End of inner exception stack trace ---\n  at System.Threading.Tasks.Task.ThrowIfExceptional (Boolean includeTaskCanceledExceptions) <0x41dbf570 + 0x0003f> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Wait (Int32 millisecondsTimeout, CancellationToken cancellationToken) <0x41d0c6c0 + 0x000cf> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Wait () <0x41d0c360 + 0x0002b> in <filename unknown>:0 \n  at ArchiSteamFarm.Bot.RefreshCMs () <0x41d92f30 + 0x0004f> in <filename unknown>:0 \n  at ArchiSteamFarm.Program.Main (System.String[] args) <0x41c81400 + 0x002cf> in <filename unknown>:0 \n---> (Inner Exception #0) System.Threading.Tasks.TaskCanceledException: A task was canceled.<---\n. There is no package mono-complete in Arch. \nAnyway, I don't think my mono is broken, for example PabloDraw ( http://picoe.ca/products/pablodraw/ ) works perfectly. It's needs not only mono-complete, but gtk-sharp2 too.\n. The latest official version is 4.2.1.102. My version is Stable 4.2.2.10. It's even newer...\nIs your Debian 64bit?\n. Yep, the issue persists. Ok, I'll try to change my Mono.\n$ mono ./ASF.exe \n25.01.2016 22:15:02 [*] INFO: Main() <Main> Archi's Steam Farm, version 1.5.0.0\n25.01.2016 22:15:03 [*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n25.01.2016 22:15:03 [!] EXCEPTION: RefreshCMs() <Main> One or more errors occurred.\n25.01.2016 22:15:03 [!] StackTrace:   at System.Threading.Tasks.Task.ThrowIfExceptional (Boolean includeTaskCanceledExceptions) <0x40b69640 + 0x0003f> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Wait (Int32 millisecondsTimeout, CancellationToken cancellationToken) <0x40ab6660 + 0x000cf> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Wait () <0x40ab6360 + 0x0002b> in <filename unknown>:0 \n  at ArchiSteamFarm.Bot.RefreshCMs () <0x40b3c630 + 0x0004f> in <filename unknown>:0 \n25.01.2016 22:15:03 [!] EXCEPTION: RefreshCMs() <Main> A task was canceled.\n25.01.2016 22:15:03 [!] StackTrace: \n25.01.2016 22:15:03 [*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n25.01.2016 22:15:04 [!] EXCEPTION: RefreshCMs() <Main> One or more errors occurred.\n25.01.2016 22:15:04 [!] StackTrace:   at System.Threading.Tasks.Task.ThrowIfExceptional (Boolean includeTaskCanceledExceptions) <0x40b69640 + 0x0003f> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Wait (Int32 millisecondsTimeout, CancellationToken cancellationToken) <0x40ab6660 + 0x000cf> in <filename unknown>:0 \n  at System.Threading.Tasks.Task.Wait () <0x40ab6360 + 0x0002b> in <filename unknown>:0 \n  at ArchiSteamFarm.Bot.RefreshCMs () <0x40b3c630 + 0x0004f> in <filename unknown>:0 \n25.01.2016 22:15:04 [!] EXCEPTION: RefreshCMs() <Main> A task was canceled.\n25.01.2016 22:15:04 [!] StackTrace: \n25.01.2016 22:15:04 [*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n25.01.2016 22:15:04 [!] EXCEPTION: RefreshCMs() <Main> One or more errors occurred.\n25.01.2016 22:15:04 [!] StackTrace:   at System.Threading.Tasks.Task.ThrowIfExceptional (Boolean includeTaskCanceledExceptions) <0x40b69640 + 0x0003f> in <filename unknown>:0\n. ",
    "guihkx": "Oops, I'm retarded. Thanks!\n. Nice. Thank you!\n. Funny.\n. Haha, I was just going to open a new issue about this... Hope you add it one day though. :(\n. What can I do? I exported them using SDA and it's even generating the codes properly.\n. Here's the hex data from the beginning of the file: \n\n. Maybe they changed it? I really don't know, I've never used it before. I used the version 1.0.4.\n. Could it be because it encrypted the files? I have to use a password each time I run the program. I also have a manifest.json in the same directory of the *.maFiles. If so, do I have to export all the accounts again but not encrypting it?\n. I didn't really thought about it. Maybe you'd use the same decrypting method they're using. xD\nI'll try again then, thanks.\n. SDA can't parse the file, but WinAuth can. I imported it with WinAuth. So, yeah, both ASF and SDA are parsing the file incorrectly. Setting status to 1 obviously works, but if other people are having the same issue I am, probably they won't know what to do.\n. Ok. But for me it's obvious that this is a ASF issue, since it's ASF who fails to convert the .maFile to its own format. But thanks anyway.\n. Sorry for not being clear enough. I imported the file using WinAuth (I said that the file was copied directly from the phone because in fact it is, WinAuth doesn't change it), and I'm already using ASF v2.0.0.8, which fails to parse the file.\n. 3.4.19 to be more precise.\n. I reported to SDA devs but they haven't replied yet. But I don't think I should report it to WinAuth devs, since they're parsing it just fine:\n\n. Oh that's why! I didn't know that. Well let's hope that just happened to me... It's fairly easy to fix it anyway. Thanks for your time.\n. Thank you for your program! I'll try to report it to the SteamAuth devs later if I remember.\n. I agree. But I'm just too lazy to confirm the things on my phone :-1: Thanks for considering it!\n. Well, I sniffed the requests from the Steam app and I was able to find informations about the parties. So, if you're interested, this is the client request about the trade (you'd need the trade ID first, ofc):\nhttp://pastebin.com/BUTzJz9z\nAnd the server response is in JSON (but the actual relevant data is HTML):\nJSON response: http://pastebin.com/kHNqstRC\nReadable HTML response: http://pastebin.com/VYf4Qby5\nThe relevant information is available at the line n 13, where the value of the property data-miniprofile is the account id of the person you've sent the trade to. That's it... hope it helps.\nAnd just to be clear, I really think that !2faok shouldn't be removed at all, it has been very useful to me. I just want a alternative to it, you know. Thanks!\n. I agree...\n. Yes, it is.\nEDIT: Just to add a little more information, I was playing CS:GO then I redeemed a CD-KEY using !redeem to my main account. Then, ASF started to farm this game I just redeemed. Since I was playing CS:GO, ASF stopped to farm the game and disconnected my account. After that, I tried to redeem 3 more CD-KEYs to this disconnected account, but since it was disconnected, obviously the command didn't work. After 5 minutes, ASF reconnected that account and automatically tried to redeem the CD-KEYs, but I had done it already... After all that I noticed the high CPU usage.\n. So, there is not way I can figure out right now what is causing the high CPU usage? Otherwise I will close it, I have to play CS:GO. xD\n. IMO that's not a big deal. But a simple regex could at least cover the most used CD-KEY formats and reduce the conflicts:\n/[0-9A-Z]{4,5}-[0-9A-Z]{4,5}-[0-9A-Z]{4,5}-?(?:(?:[0-9A-Z]{4,5}-?)?(?:[0-9A-Z]{4,5}))?/ig\nTo test it, first copy this whole page, go to Regex Pal and paste it in the 'Test String' field, then you add the regex above in the 'Regular Expression' field and see how many CD-KEY formats it will match. It is possible to create a \"perfect\" regex, however it would be (even more) gigantic and not worth IMO.\n. Are you sure? If we look at large projects like bash, for example, all its purpose is to write commands, and they ignore extra whitespaces in arguments, unless the argument is between quotes.\n. I'll update it right now and report to you if I find anything unusual.\n. Duly noted. To be honest, probably the most traffic was from accepting things to trade or sell them in the market. Last month I sold and trade a lot of things.\nBy the way, I noticed that isn't necessary to make a request to /my/profile, because Steam will redirect you to /id/blahblah/profile, simply requesting /my/ will redirect \"correctly\". However, It's kinda useless since both requests will work anyway. lol\n. Smart decision.\n. Well, the thing is, this is both ASF and Valve's fault. Valve's fault because their Community Data API does not work as intended. ASF's fault because that API is deprecated and Valve won't fix it. ASF should use the new web API.\n. I've just tested with the new Web API, it works as intended even if your profile is set to private.\nTo add a little bit more information, this deprecated Community Data API indeed does not list your own games if your profile is set to private, even if you are logged in. To test this, open a private window (on Chrome the shortcut is CTRL + Shift + N), login to Steam Community, set your profile to Public (if it isn't already) and open this page:\nhttp://steamcommunity.com/my/games?xml=1\nThe games will be listed as expected. Now, set your profile to private and re-open the URL above (or just press CTRL + F5), you'll see that it still lists your games with your profile set to private. Now, logout from Steam Community and again re-open/refresh the URL above, you will see that it still does work -- Valve's fuckup, it was not supposed to work because we just logged out, but somehow the cookies saved in your browser makes Valve's API \"think\" that your profile is still set to Public and that you are still logged in. So, as long as you don't clear your cookies, it will list your games just fine, and that's the problem:  ASF can't list your games if your profile is set to private, because it's using different cookie values.\n. Yes, it does.\n. Just want to note that now the !owns command runs much faster (as intended) with huge game libraries. Awesome!\n. I just check it on Travis CI because if it doesn't compile using Mono, I imagine it won't even run the binaries compiled on Windows? If I'm wrong I'm sorry, because what I'm asking would be pointless. >:D\nSo no, I don't compile it myself.\n. Oh, interesting! Yeah, a couple of days ago I saw that the Mono build wasn't passing and the Windows one were fine, so I immediately disabled the auto-updates. Anyway, sorry for the misunderstanding and  thank you.\n. I appreciate the advices!\n. Even if I wanted I can't, my VPS server has only 128MB RAM, and right now I don't have any interest in compiling ASF myself. One thing I want to ask you though if you're familiar with systemd. I created an systemd unit file to run ASF whenever the server starts. If I'm running ASF directly from the terminal window and it starts updating, ASF is able to successfully re-open itself. However, if I start ASF using systemd and update it, for some reason that I'm not aware of, ASF can't re-open itself... Is this a mono or systemd issue? Or neither?\n. Thank you very much, I'll be checking it when I get home.\n. Okay, so the first thing I noticed is that my config file was lacking the AutoRestart option. After I added it and set it to false, systemd will automatically restart ASF after an update. Yay!\nHere's my current ASF.service file, in case somebody searches for one... (tweaks are welcome!)\n``` [Unit]\nDescription=Archi Steam Farm\n[Service]\nType=simple\nUser=your_user\nEnvironment=\"MONO_ENV_OPTIONS=--desktop --gc=sgen\"\nExecStart=/usr/bin/mono /path/to/ArchiSteamFarm/ASF.exe\nRestart=always\nRestartSec=15s\n[Install]\nWantedBy=multi-user.target\nAlias=asf.service\n```\nAs I'm running ASF in a low-memory server, I've set ShutdownOnFarmingFinished=true to all bots (I just leave one account online so I can issue commands!) and ASF can free some memory for other stuff I use in the server.\nHowever, when I need to redeem a CD-KEY to a bot that's offline, I run !start bot, ASF starts it normally, but immediatelly shuts the bot down when it realizes it has nothing to farm, and then I can't redeem the CD-KEY.\nIMO, when you !start a bot, it should not go offlinee unless you manually !stop it, overriding the settings in the config file. However, I realized that when I use the !redeem command to an offline bot, when it gets online I assume it tries to redeem it, but I get these errors:\nhttp://pastebin.com/raw/rNFLYLfB\nWhat do you think?\n. I thought it was weird because when I redeemed the CD-KEY to that offline bot, nothing showed up in the console, I only got those messages after I !started the bot. But I guess that's the expected behavior? I don't know, I don't have much knowledge of how ASF works. >:P\n. Gotcha! I liked the new addition. Thanks!\n. Okay, I'll remove the --gc parameter. Yeah, it might not be good to Restart=always, but in my experience, the mono process got killed so many times because it ran out of memory, so I just set it to restart always because it's annoying.\n. I'll definitely check it out. But changing a bit the subject (I know this isn't the right place, but I promise this is the last time hahah).\nDo you know what is the requirement to get the unrestricted cards dropping? I noticed in the wiki page you say there's no obvious answer, but maybe the requirement is to at least have one badge manually crafted? From my observations in my accounts, I never issued a refund to any game I bought and in these accounts the drops are restricted. My accounts which don't have the restriction, have at least one badge crafted. Of course it needs more investigation into it, and people who got tons of bots maybe can verify this easily, but it's just a thought. I'm collecting cards to one game and I'll craft it on my restricted account and then I'll see if the restriction is removed right away or after a few days,\n. Yeah, I've read about this, and none of my bots finishes farming before 2 hours... Anyway, I'll check if my theory is true and I'll give you a heads up. Thank you for your tremendous help,\n. Really useful article, thank you!\nMy ASF setup is pretty much the same as what you suggested on the ASF section, and they do help a lot. My low budget VPS server have 128MB of RAM, running CentOS 7.2.1511 64-bit and Mono 4.2.3 (by the way, feel free to add it to the \"Supported/Tested Operating Systems\" section if you want). And honestly, it suits my needs pretty well at the moment. I can have, for example, all of my 10 bots farming one game and ASF will use only 58.9MB of 128MB.\nFor now I don't intend to try the advanced setup, but maybe in the future when I have more bots or if I run out of memory. I did run out of memory before, but that was because some useless services were enabled. Now that I've disabled them, ASF is running flawlessly. :smile: \nThanks.\n. After some research, I was able to make the service work again. I just added EnvironmentFile=/etc/environment into the [Service] section:\n```\n[Unit]\nDescription=Archi Steam Farm\nAfter=network-online.target\n[Service]\nType=simple\nUser=myself\nEnvironmentFile=/etc/environment\nEnvironment=\"MONO_ENV_OPTIONS=--desktop\"\nExecStart=/usr/bin/mono /home/myself/ASF.exe\nRestart=always\nRestartSec=15s\n[Install]\nWantedBy=multi-user.target\nAlias=asf.service\n```\n. Just want to give an update on this:\nIf you do not have a NLog.config file and you try run ASF as a systemd service, it won't work:\nAug 04 14:54:58 myself systemd[1]: Starting Archi Steam Farm...\nAug 04 14:54:58 myself mono[4590]: [ERROR] FATAL UNHANDLED EXCEPTION: System.TypeInitializationException: The type initializer for 'NLog.Targets.ColoredConsoleTarget' threw an exception. ---> System.UriFormatException: Invalid URI: The hostname could not be parsed.\nAug 04 14:54:58 myself mono[4590]: at System.Uri.Parse (UriKind kind, System.String uriString) <0x41833130 + 0x000ab> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at System.Uri.ParseUri (UriKind kind) <0x41833010 + 0x00023> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at System.Uri..ctor (System.String uriString, Boolean dontEscape) <0x41832da0 + 0x001b7> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at System.Uri..ctor (System.String uriString) <0x41832d70 + 0x00013> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at NLog.Config.ConfigurationItemFactory.BuildDefaultFactory () <0x4182b580 + 0x00133> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at NLog.Config.ConfigurationItemFactory.get_Default () <0x4182b4b0 + 0x00017> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at NLog.Conditions.ConditionParser.ParseExpression (System.String expressionText) <0x4182b460 + 0x0000f> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at NLog.Conditions.ConditionExpression.op_Implicit (System.String conditionExpressionText) <0x4182b440 + 0x0000f> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at NLog.Targets.ColoredConsoleTarget..cctor () <0x4182b110 + 0x0004f> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: --- End of inner exception stack trace ---\nAug 04 14:54:58 myself mono[4590]: at ArchiSteamFarm.Logging.InitCoreLoggers () <0x4182abd0 + 0x000b7> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at ArchiSteamFarm.Program.Init (System.String[] args) <0x417bb3c0 + 0x000cb> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: at ArchiSteamFarm.Program.Main (System.String[] args) <0x417a58e0 + 0x0002f> in <filename unknown>:0\nAug 04 14:54:58 myself mono[4590]: exception inside UnhandledException handler: Access to the path \"/log.txt\" is denied.\nAug 04 14:55:13 myself systemd[1]: ASF.service holdoff time over, scheduling restart.\nI don't know why it happens, and I'm not interested to look into it atm, so if you run into this problem like I did, just create a basic NLog.config from the Wiki page.\n. I saw that, but I don't understand what would I have to do to get rid of it... Creating a NLog.config file worked.\n. Judging by the environment variables in the ASF process created by systemd, $HOME is correctly set, but what do I know... :grin:\nMaybe I'll report to them later, thanks.\n. Mmmm, that makes sense, maybe I can try to set $PWD to see if changes anything.\n. I don't even know if the current dictory can be controlled by an environment variable, lol\n. Okay, so I scrolled up my ASF's log window and I saw this (I have ASF running for about 1 day, btw):\n<...>\n2016-07-30 12:59:04.7139|ERROR|ArchiSteamFarm.Logging|buggy_bot|Init()\n2016-07-30 12:59:04.7139|INFO|ArchiSteamFarm.Logging|buggy_bot|Start() Starting...\n<...>\nAnd after that I didn't receive any information about that bot (about ~8 hours ago).\n. Yup. Here you go:\nhttp://pastebin.com/raw/H5LWHj5G\n. Shit, I honestly don't know. I mean I have a NLog.config that I probably got from the Wiki page (I didn't  read it properly and I thought it was mandatory to have this file :S). Anyway, here it is:\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<nlog xmlns=\"http://www.nlog-project.org/schemas/NLog.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <targets>\n        <target xsi:type=\"ColoredConsole\" name=\"ColoredConsole\" />\n        <target xsi:type=\"File\" name=\"File\" fileName=\"NLog.txt\" deleteOldFileOnStartup=\"true\" />\n    </targets>\n    <rules>\n        <logger name=\"*\" minlevel=\"Trace\" writeTo=\"ColoredConsole\" />\n        <logger name=\"*\" minlevel=\"Trace\" writeTo=\"File\" />\n    </rules>\n</nlog>\nEDIT: Yep, I got it from the Wiki page, I thought I had modified it, but thankfully I didn't.\n. Oh, good to know. So the bots not answering the following commands can't be handled by ASF? Like a 1 minute timeout to \"abort\" if SK2 don't respond or something... Anyway, like you said it's indeed very rare (in fact it happened twice). I'll just restart ASF then. Thanks for your attention!\n. Not sure if you are asking me, but I can only answer the second question: TCP.\n. I checked both ASF console and NLog.txt file and unfortunately nothing showed up...\n. Okay, so I found a fix for this on Xamarin's bug tracker:\n# ln -s /usr/lib64/libMonoPosixHelper.so /usr/lib/libMonoPosixHelper.so\nNow it's working.\n. LoL\n. I thought that something wrong was going on on the ASF side, because it was telling me that it was idling the game, when in fact it wasn't. I didn't knew that Steam could fuck up on this too. Ha. Thanks though\n. You could add an option to confirm about 40-50 listings per request or something like that.\n. It never happened to me before, maybe is temporary then\n. Damn :confused: \n. I'm using my phone atm to confirm the listings; I'm doing 10 by 10 and no errors so far\n. Dang\n. Next time I'll do that \ud83d\ude05\n. Thanks for the fast reply. But all the other 8 bots are working fine (they don't have the same password length), isn't it odd?\n. :(\nI'll keep trying then. Thanks\n. Steam's website must be coded so poorly... I have 2FA enabled and sometimes I have pending trade confirmations that don't even show up on my own phone. And of course, sometimes ASF sends a trade offer and it can't accept it too, generating 5 pending trades that you have to cancel manually... I guess a command to cancel them would be more than welcome.\n. IMO you shouldn't remove the SteamApiKey property. It's okay for ASF to automatically get it if a bot has SteamApiKey set to null or whatever, but I don't see any reason to make an additional request at startup if we've manually set the key.. The issue isn't on the LootableTypes property. ASF is not looting it simply because they will be tradeable only after 30 days.\nIt is possible though to send a gift directly to your main account and then store it on your inventory or redeem it, but you must have the bot holding your gift added to the account you will receive the gift. I personally don't have any of my bots added, so I guess ASF could add the bot momentarily, send the gift and then remove it from Friends. It's doable I guess.... I kinda see a point on the switch accounts argument. I myself play CS:GO in more than 3 accounts, and indeed I had to log-out the account I was playing and log-in to my main whenever I need to use bots. That was before I made a script to work with WCF, because now I don't ever have to use the Steam chat again. I also use two separate instances of ASF, since I have some accounts that I borrowed from my friends, I just like to keep them separated from the \"real\" bots. It's not inconvenient to me though, while I have two master accounts, I just had to point the SteamMasterID of my second master account to my main account. After the farming ends on the second ASF instance, all cards are sent to my second master account and then to my main account.\ntl;dr While I kinda get his point, you could surpass those \"issues\".. Haven't tested trading yet, but then this wiki section should be updated, since there's no steam.uuid.xml anymore. Do you know how to easily get your deviceID?. I decided to test it again on another account, but using an emulator now. And this time the damn file was there, so I don't know, something went wrong on my phone and the file wasn't created. I'll just re-install the app and try again. You can close this now, sorry for the trouble!. Hell, the file still isn't being created on my phone... \ud83d\udc4e I don't get it. I'll just enable the authenticator using WinAuth, it should work. . My internet connection has been really bad lately. I guess I've got two new errors in V3.0.1.4, probably related to this (I'm not sure)\n2017-08-15 20:20:18|dotnet-31362|FATAL|ASF|OnUnobservedTaskException() System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. (The remote party closed the WebSocket connection without completing the close handshake.) ---> System.Net.WebSockets.WebSocketException: The remote party closed the WebSocket connection without completing the close handshake. ---> System.IO.IOException: Unable to transfer data on the transport connection: Broken pipe. ---> System.Net.Sockets.SocketException: Broken pipe\n   --- End of inner exception stack trace ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Net.Security.SslStreamInternal.StartWriting(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\n   at System.Net.Security.SslStreamInternal.ProcessWrite(Byte[] buffer, Int32 offset, Int32 count, LazyAsyncResult asyncResult)\n   at System.Net.Security.SslStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncTrim[TInstance,TArgs](TInstance thisRef, TArgs args, Func`5 beginMethod, Func`3 endMethod)\n   at System.IO.Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)\n   at System.IO.Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\n   at System.Net.WebSockets.ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, Boolean endOfMessage, ArraySegment`1 payloadBuffer)\n   --- End of inner exception stack trace ---\n   --- End of inner exception stack trace ---\n---> (Inner Exception #0) System.Net.WebSockets.WebSocketException (0x80004005): The remote party closed the WebSocket connection without completing the close handshake. ---> System.IO.IOException: Unable to transfer data on the transport connection: Broken pipe. ---> System.Net.Sockets.SocketException: Broken pipe\n   --- End of inner exception stack trace ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Net.Security.SslStreamInternal.StartWriting(Byte[] buffer, Int32 offset, Int32 count, AsyncProtocolRequest asyncRequest)\n   at System.Net.Security.SslStreamInternal.ProcessWrite(Byte[] buffer, Int32 offset, Int32 count, LazyAsyncResult asyncResult)\n   at System.Net.Security.SslStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback asyncCallback, Object asyncState)\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncTrim[TInstance,TArgs](TInstance thisRef, TArgs args, Func`5 beginMethod, Func`3 endMethod)\n   at System.IO.Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)\n   at System.IO.Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\n   at System.Net.WebSockets.ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, Boolean endOfMessage, ArraySegment`1 payloadBuffer)<---\nAnd:\n2017-08-15 20:19:48|dotnet-31362|WARN|tuca|Init() System.IO.InvalidDataException: An internal error occurred when attempting to parse the response from the WebAPI server. This can indicate a change in the VDF format. ---> System.Exception: LoadFromBuffer: missing {\n   at SteamKit2.KVTextReader..ctor(KeyValue kv, Stream input)\n   at SteamKit2.KeyValue.ReadAsText(Stream input)\n   at SteamKit2.WebAPI.AsyncInterface.<CallAsyncCore>d__6.MoveNext()\n   --- End of inner exception stack trace ---\n   at SteamKit2.WebAPI.AsyncInterface.<CallAsyncCore>d__6.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at SteamKit2.WebAPI.Interface.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object& result)\n   at CallSite.Target(Closure , CallSite , Object , UInt64 , String , String , String , Boolean )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass48_0.<Init>b__0()\nHere's the full log.txt:\nhttps://gist.github.com/GUiHKX/baffe602ef531862b553a94c96be7a91/raw/12336f9bb7efafbe42ff618215d21758211ae8ef/log.txt. Question: Is this supposed to work on Android as well? I've downloaded the 32-bit arm build, tried to run the ArchiSteamFarm binary, but it doesn't open:\n$ cd ASF/\n$ chmod +x ArchiSteamFarm\n$ ./ArchiSteamFarm\nzsh: no such file or directory: ./ArchiSteamFarm\nMy phone's CPU architecture is an ARM Cortex-A7. Thanks. What do you think of changing IPC's response to text/plain instead of text/html and then remove the HTML tags from the response as well? I feel like it would work much cleaner when using cli.\n$ curl -s 'http://127.0.0.1:1242/IPC?command=version'\n<bot> ASF V3.0.1.2\nIs better than:\n$ curl -s 'http://127.0.0.1:1242/IPC?command=version'  \n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"></head><body><p>\n<bot> ASF V3.0.1.2</p></body></html>\nAlso, it would make more sense when using !api, so we wouldn't have to strip HTML tags to parse the JSON response.. Thanks. Please add a new line at the end of the response as well so it doesn't mess up the terminal. Hey Archi, thanks for the version 3.0.1.3. I've tested it and it's much better now in cli. I was wondering if the new line at the beginning of the response is intentional?\n```\n$ curl -s \"http://127.0.0.1:1242/IPC?command=version\"                 \n ASF V3.0.1.3\n```\nThanks again. On a related(ish) note, I think it would be nice if ASF could hide the password when you type it / paste it into the terminal, Like su or sudo do it.. I'm not sure if IPC isn't completely ready yet (as of update V3.0.5.1), but issuing commands via POST request isn't working for me. Here's what I'm trying to do:\n```\ncurl -v -X POST 'http://127.0.0.1:1242/Api/Command/version'\n   Trying 127.0.0.1...\n TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 1242 (#0)\n\nPOST /Api/Command/version HTTP/1.1\nHost: 127.0.0.1:1242\nUser-Agent: curl/7.57.0\nAccept: /\n< HTTP/1.1 411 Length Required\n< Content-Type: text/html\n< Server: Microsoft-NetCore/2.0\n< Date: Sat, 09 Dec 2017 18:46:13 GMT\n< Content-Length: 24\n< Connection: close\n< \n* Closing connection 0\nLength Required% \n```\n\nI also got this on ASF:\n2017-12-09 16:40:59|dotnet-16064|FATAL|ASF|OnUnobservedTaskException() System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. (Cannot access a disposed object.\nObject name: 'System.Net.HttpListenerResponse'.) ---> System.ObjectDisposedException: Cannot access a disposed object.\nObject name: 'System.Net.HttpListenerResponse'.\n   at System.Net.HttpListenerResponse.CheckDisposed()\n   at System.Net.HttpListenerResponse.set_ContentType(String value)\n   at ArchiSteamFarm.IPC.<ResponseString>d__23.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<ResponseJson>d__20.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<ResponseJsonObject>d__21.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleApiCommandGeneric>d__14.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleApiCommand>d__13.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleApi>d__8.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleAuthenticatedRequest>d__15.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleRequest>d__17.MoveNext()\n   --- End of inner exception stack trace ---\n---> (Inner Exception #0) System.ObjectDisposedException: Cannot access a disposed object.\nObject name: 'System.Net.HttpListenerResponse'.\n   at System.Net.HttpListenerResponse.CheckDisposed()\n   at System.Net.HttpListenerResponse.set_ContentType(String value)\n   at ArchiSteamFarm.IPC.<ResponseString>d__23.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<ResponseJson>d__20.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<ResponseJsonObject>d__21.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleApiCommandGeneric>d__14.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleApiCommand>d__13.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleApi>d__8.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleAuthenticatedRequest>d__15.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.IPC.<HandleRequest>d__17.MoveNext()<---. I just tried to replicate the request as stated in this section of the Wiki... Am I missing something? I really don't know.. Yes, the Content-Length header, but what should I put in the request body? The example in the Wiki doesn't tell me what.. Okay I got it now. I must send Content-Length: 0. I didn't know that header was required when I'm not sending anything. It just seems a bit weird for me... But it's working. Thanks. If anyone uses curl to send commands to IPC, like I do, you can use this:\n```\ncurl --data '' 'http://127.0.0.1:1242/Api/Command/version'\n{\"Message\":\"OK\",\"Result\":\"\\n ASF V3.0.5.1\",\"Success\":true}\n``. Yes, but the fact that is is a standard doesn't make it less stupid. lol. I also don't agree with the request design. If we're usingPOST, then why don't we send the command in the request body rather than in the URL?. But we're not adding new information nor modifying them into ASF when we usePOST, at least that's my understanding of why the article recommended its use. AGETwould make more sense in that case. At least  I've never seenPOSTrequests being used to send an empty request body. But who cares, this discussion is pointless.... @JustArchi I think you're misunderstanding the usage ofGETandPOSTrequests. Let's get into the \"safeness\" matter of usingPOST` in this case. What does it keep you safe from if we're sending all the data in the URL? What is the difference of these both commands security-wise?\nPOST:\ncurl -d '' 'http://127.0.0.1:1242/Api/Command/redeem 01 ABC-DEF-GHI'\nGET:\ncurl 'http://127.0.0.1:1242/Api/Command/redeem 01 ABC-DEF-GHI'\nIt accomplishes nothing security-wise and it's simply bad design. That's why I said it's more sane to put the command in the request body, to hide any sensitive data from the URL (although I still think this is pedantic, since a MITM attacker would be able to see the request body anyway).\nEDIT: Since we're talking security, passing passwords in query-strings?. Wow, I like it, very good job! I'm not much of a designer myself, but I would love a dark theme too.. I love it how you claim knowing the context of RFC standards as you please, just to fit your speech. And only decides to follow standards to your convenience.\nSo, for you, it does not make a difference if you send sensitive data as a query-string (I somewhat agree, it doesn't in the context of ASF, but it's just good practice to not do so), but it does make a difference if we use badly designed POST requests for commands like: !version, !2fa, !bl, !ib, !iq, !password, !help, !stats, !status, which simply read stuff from memory and don't change anything in the ASF process? Which, according to you, the only reason you're using POST requests for such commands is because they're \"unsafe\"... Interesting.\nAnd for the third and last time: I never told you to stop using POST requests, I suggested you to put the actual command in the body of the request, which would be the most sane usage. OR, I suggested using GET requests instead, since you're simply passing the command in the URL anyway, so it wouldn't make a difference and we wouldn't have to send an empty body request or add the Content-Length: 0 header.\nStill on that topic, the thing I said it was stupid about the standard is having to send a Content-Length when your not sending any body to your POST request. But I mistakenly called that stupid because of your stupid design instead. Sending a POSTrequest with an empty body and sending the actual data in the URL as a query-string? Ugh...\nAnother thing to add about your dumb \"RESTful\" requests. If anyone have a bot named with a # or a ?, requests will simply not work (assuming you have a bot named archi#clueless):\n```\ncurl 'http://127.0.0.1:1242/Api/Bot/archi#clueless'\n{\"Message\":\"Couldn't find any bot named archi!\",\"Result\":null,\"Success\":false}\n```\nBecause of the design of that request, you're creating conflicts with already defined URL standards (since you seem to like them so much) when you can have absolutely every character in your bot's name.\nNow people will have to adapt their bot names because of your crappy design choice.\n\nIt's not the first time I saw you being rude to people and assume you're right about everything, so if you want to keep these garbage requests like they are right now, it's your call. It will not make any difference for me because I'l adapt anyway, but it won't change the fact that it's wrong and bad design.\nI'm done with you, I won't make any further comments regarding this issue anymore.. I've just got a bunch of those.  I know today is maintenance day, but at the time I got those errors, Steam  seemed to be operating fine, I made sure to keep an eye on https://steamstat.us/. Anyway, here's the log.txt:\nhttps://gist.github.com/GUiHKX/6c82462161895a699e0a7744b822a76e/raw/592687b3c1dc7c65c208b3c4a93e982cfe885e6a/log.txt\nMy timezone is UTC-3, btw. And here's my ASF.json:\n{\n  \"AutoRestart\": false,\n  \"AutoUpdates\": false,\n  \"Blacklist\": [],\n  \"ConnectionTimeout\": 60,\n  \"CurrentCulture\": null,\n  \"Debug\": false,\n  \"FarmingDelay\": 15,\n  \"GiftsLimiterDelay\": 1,\n  \"Headless\": false,\n  \"IdleFarmingPeriod\": 3,\n  \"InventoryLimiterDelay\": 3,\n  \"IPCHost\": \"127.0.0.1\",\n  \"IPCPort\": 1242,\n  \"LoginLimiterDelay\": 10,\n  \"MaxFarmingTime\": 4,\n  \"MaxTradeHoldDuration\": 15,\n  \"OptimizationMode\": 0,\n  \"Statistics\": false,\n  \"SteamOwnerID\": <hidden>,\n  \"SteamProtocols\": 4,\n  \"UpdateChannel\": 2\n}\n. I have one more log file to share, thanks to my shitty internet. This one was generated on Windows, so that's why isn't in english... Maybe I've got a new error as well? (At least I couldn't find this message in the previous log I sent):\n2017-08-30 22:59:06|dotnet-7144|FATAL|ASF|OnUnobservedTaskException() System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. (There is already one outstanding 'ReceiveAsync' call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time.) ---> System.InvalidOperationException: There is already one outstanding 'ReceiveAsync' call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time.\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\n   at System.Net.WebSockets.WinHttpWebSocket.<ReceiveAsync>d__27.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.<ReadMessageAsync>d__14.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.<RunCore>d__11.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.Dispose()\n   at SteamKit2.WebSocketConnection.DisconnectCore(Boolean userInitiated, WebSocketContext specificContext)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\n   --- End of inner exception stack trace ---\n---> (Inner Exception #0) System.InvalidOperationException: There is already one outstanding 'ReceiveAsync' call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time.\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\n   at System.Net.WebSockets.WinHttpWebSocket.<ReceiveAsync>d__27.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.<ReadMessageAsync>d__14.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.<RunCore>d__11.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.Dispose()\n   at SteamKit2.WebSocketConnection.DisconnectCore(Boolean userInitiated, WebSocketContext specificContext)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)<---\nHere's the complete log.txt:\nhttps://gist.githubusercontent.com/GUiHKX/1f600e14f6c4826af38e34efe58b618d/raw/49e69d41357ca8ea28cec3dcf4c62beae7b351c2/log.txt\nHope it helps.. It has happened again. I'm sorry for the huge 2MB file, but it took me too long to notice those errors. Anyway, here it is:\nhttps://gist.githubusercontent.com/GUiHKX/822bf93ea5bec76eb3cea72b45a50880/raw/c9458854fd0a060d9e7ea610daa66904c075b40f/log.txt. I share the ASF installation between Linux and Windows (I have them installed in dual boot). Last crash happened while I was using Arch Linux x64:\n```\n$ dotnet --info\nMicrosoft .NET Core Shared Framework Host\nVersion  : 2.0.0\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\n```\nDLL version:\n\nNow being more specific: I have Windows 10 Enterprise 64-bit and Arch Linux 64-bit, both partitioned in the same SSD disk, in dual boot. I use ASF-generic and it lies within the Windows partition, specifically in C:\\Users\\ME\\Downloads\\ASF\\. So, when I'm using Linux, I mount the Windows partition to run ASF.. I don't know what to say, I've installed it using this AUR package. And I'm not lying as well, that's all the output I get:\n\n. That very last crash I wasn't able to reproduce on Windows yet (I don't use Windows that often), but this one happened on Windows. But I could try to reproduce it on Windows next week (assuming it has something to do with Steam maintenance?). I'll set up a VM with one of the supported distros and hope to reproduce it next Tuesday. Thanks!. Is this a new one? Dunno if it's related at all, and I wasn't sure if I should open a new issue...\n```\n2017-10-31 20:57:25|dotnet-2332|FATAL|ASF|OnUnobservedTaskException() System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. (The operation was canceled.) ---> System.OperationCanceledException: The operation was canceled.\n   --- End of inner exception stack trace ---\n---> (Inner Exception #0) System.OperationCanceledException: The operation was canceled.<---\n```\nFULL LOG.TXT\nI just got that on Windows, a few minutes ago. I'm running the generic variant. Here's my ASF.json:\n{\n  \"AutoRestart\": false,\n  \"AutoUpdates\": false,\n  \"BackgroundGCPeriod\": 0,\n  \"Blacklist\": [],\n  \"ConnectionTimeout\": 60,\n  \"CurrentCulture\": null,\n  \"Debug\": false,\n  \"FarmingDelay\": 15,\n  \"GiftsLimiterDelay\": 1,\n  \"Headless\": false,\n  \"IdleFarmingPeriod\": 8,\n  \"InventoryLimiterDelay\": 3,\n  \"IPCHost\": \"127.0.0.1\",\n  \"IPCPort\": 1242,\n  \"LoginLimiterDelay\": 10,\n  \"MaxFarmingTime\": 5,\n  \"MaxTradeHoldDuration\": 15,\n  \"OptimizationMode\": 0,\n  \"Statistics\": false,\n  \"SteamOwnerID\": <hidden>,\n  \"SteamProtocols\": 4,\n  \"UpdateChannel\": 0\n}. It doesn't crash for me on Linux, but I do get the same error:\n2017-08-15 01:06:01|dotnet-23475|INFO|ASF|HandleRequest() Answered to IPC command: !restart with: \nDone!\n[....] All bots disconnecting> [....]\n2017-08-15 01:06:04|dotnet-28583|INFO|ASF|InitASF() ASF V3.0.1.4 (0950b9e6-5f8c-473a-b274-36f99fc2f428)\n2017-08-15 01:06:04|dotnet-28583|INFO|ASF|Start() Starting IPC server on http://127.0.0.1:1242/IPC/...\n2017-08-15 01:06:04|dotnet-28583|ERROR|ASF|Start() System.Net.HttpListenerException (0x80004005): Address already in use\n   at System.Net.HttpEndPointManager.GetEPListener(String host, Int32 port, HttpListener listener, Boolean secure)\n   at System.Net.HttpEndPointManager.AddPrefixInternal(String p, HttpListener listener)\n   at System.Net.HttpEndPointManager.AddListener(HttpListener listener)\n   at System.Net.HttpListener.Start()\n   at ArchiSteamFarm.IPC.Start()\n2017-08-15 01:06:04|dotnet-28583|INFO|ASF|CheckForUpdate() Checking for new version.... >Stop launching the same bot in ASF several times\nI don't get it. What does that even mean?. Except that I'm not, LOL. I just have that account logged on Steam and ASF, and also only one instance of ASF is running.... Please do. Thanks. Great! Please let me know if I you need help testing.. Glad I could help!. Working as expected now, thanks!. ",
    "DemonAk": "I have a good internet connection and a powerful computer. In bots 6-12 cards\n. I will test...\n. Test with 5 sec, nothing happen (no message error or trade succes). Set 1 sec and Trade offer sent successfully. need more testing\n. I came across a limit not accepted offers, for example if you send 30 offers for the main account and do not accept them the 31 offer will give an error\nsorry for my english =(\n. ok, I tested with all my running accounts. All Trades offers sent successfully.\nNeed a delay of 1 second.\n. Tested with 2 seconds, all Trades offers sent successfully. I think optimally would be 1.5 seconds.\n. tested, it works fine\n. I think need to combine all *.xml to one file if possible. It's easier to edit. \nsomething like this:\nbot1\nEnabled type=\"bool\" value=\"true\"\nSteamLogin type=\"string\" value=\"bot1\"\nSteamPassword type=\"string\" value=\"bot1-12345\"\nSteamNickname type=\"string\" value=\"null\"\nSteamApiKey type=\"string\" value=\"12345\"\nSteamMasterID type=\"ulong\" value=\"12345\"\n/bot1\nbot2\nEnabled type=\"bool\" value=\"true\"\nSteamLogin type=\"string\" value=\"bot2\"\nSteamPassword type=\"string\" value=\"bot2-12345\"\nSteamNickname type=\"string\" value=\"null\"\nSteamApiKey type=\"string\" value=\"12345\"\nSteamMasterID type=\"ulong\" value=\"12345\"\n/bot2\nbot3\n...\n/bot3\n...\nor make like in steambot, settings in one file settings.json and auth files in folder SentryFiles\n. Launched ver2.0 and saw 3 file for each bot, why do we need bot.json for each bot, why not make all bots config in one file allbots.json:\n\"Bots\":[\n        {\n  \"Enabled\": enable,\n  \"SteamLogin\": bot1,\n  \"SteamPassword\": bo1pass,\n}\n      ,{\n  \"Enabled\": enable,\n  \"SteamLogin\": bot2,\n  \"SteamPassword\": bo2pass,\n}\n      ,{\n  \"Enabled\": enable,\n  \"SteamLogin\": bot3,\n  \"SteamPassword\": bo3pass,\n}\n   ]\n}\nThat's what I meant when I wrote the first time about merge\nAnd I think you can use one .bin file for all bots, simply copy the ssfn* file from the folder C:\\steam in C:\\ArchiSteamFarm\\config and renaming bot.bin\nand it would be so, if it is possible of course:\nallbots.json - all bots config in one file\n.db\n.bin\n. It is clear, in any case version 2.0pre4 is working and converting xml to json without a problem.\n. ",
    "kofe88": "\u0416\u0430\u043b\u043a\u043e, \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u043e\u0442\u0432\u0435\u0442)\n. <UseAsfAsMobileAuthenticator type=\"bool\" value=\"true\"/>\n<CardDropsRestricted type=\"bool\" value=\"false\"/>\n<FarmOffline type=\"bool\" value=\"false\"/>\n<HandleOfflineMessages type=\"bool\" value=\"false\"/>\n<ForwardKeysToOtherBots type=\"bool\" value=\"true\"/>\n<DistributeKeys type=\"bool\" value=\"false\"/>\n<ShutdownOnFarmingFinished type=\"bool\" value=\"false\"/>\n<SendOnFarmingFinished type=\"bool\" value=\"true\"/>\nOther bots same settings. Sending one key.\n. @JustArchi Thank you!\n. Private chat. 10 bots in my friends, 14 are not in your friends\nI refer to one of the key-bots friends, but for some reason he sends it not all on the list, but only some, and vlogs these inscriptions, here for example is now tried again.\n1:03 - I: MQFVL-2G2KH-*\n1:02 - bot5: \n Key: MQFVL-2G2KH-*** | Status: AlreadyOwned | Items: [72593, Absconding Zatwor]\nIn log this:\n27.02.2016 1:02:49 [!] EXCEPTION: ResponseRedeem() <myalt7_7> Object reference not set to an instance of an object.\n27.02.2016 1:02:49 [!] StackTrace:    at ArchiSteamFarm.Bot.<ResponseRedeem>d__136.MoveNext()\nAnd the key is not sent on, although at least 15 bots do not have the game.\nSorry for my bad English, i use Google translate)\n. very strange (it was good before this all started after I added to the existing 10 bots another 15 bots. Try disabling added bots to them that can not (\n. The problem was repeated (But the problem does not repeat itself if I delete the last 15 added bots. These settings were created on the basis of an example, do not write at startup errors. I'll try to connect them one by one.\n. But where to find the log file? it is not present in the folder.\n. hm, the old version is created, and this does not. And if I create a log.txt file manually, it is removed after the launch ArchiSteamFarm.exe\n. I'm sorry, my mistake now send the file\n. log.txt\nNow i cant reproduce, he say i have wrong password on all my bots, and delete all .key files from directory...\n. well, and then I started to worry)\n. You need last lines or all file?\n. log.txt\nSent key in Private chat to bot oldnew_games2\n. ",
    "Luckz": "On my ye olde Win7 with .NET 4.5.2, the newer builds work for a bit, then eventually lock up after a chat command or two. Why doesn't it outright fail in some way?\n. Stable 1.4.x also has a crash on exit for me:\n2016-02-02 22:51:26 [] INFO: OnBotShutdown()  No bots are running, exiting\n2016-02-02 22:51:26 [] INFO: OnBotShutdown()  No bots are running, exiting\n2016-02-02 22:51:26 [] INFO: OnBotShutdown()  No bots are running, exiting\n2016-02-02 22:51:26 [] INFO: OnBotShutdown()  No bots are running, exiting\n2016-02-02 22:51:26 [] INFO: OnBotShutdown()  No bots are running, exiting\n2016-02-02 22:51:26 [] INFO: OnBotShutdown()  No bots are running, exiting\n2016-02-02 22:51:26 [!] EXCEPTION: UnhandledExceptionHandler()  Object reference not set to an instance of an object.\n2016-02-02 22:51:26 [!] EXCEPTION: UnhandledExceptionHandler()  Object reference not set to an instance of an object.\n2016-02-02 22:51:26 [!] EXCEPTION: UnhandledExceptionHandler()  Object reference not set to an instance of an object.\n2016-02-02 22:51:26 [!] EXCEPTION: UnhandledExceptionHandler()  Object reference not set to an instance of an object.\n2016-02-02 22:51:26 [!] EXCEPTION: UnhandledExceptionHandler()  Object reference not set to an instance of an object.\n2016-02-02 22:51:27 [!] StackTrace:    at SteamKit2.SteamFriends.SendChatRoomMessage(SteamID steamIdChat, EChatEntryType type, String message)\n   at ArchiSteamFarm.Bot.SendMessage(UInt64 steamID, String message)\n   at ArchiSteamFarm.Bot.d__136.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__141.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.b__5(Object state)\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\n2016-02-02 22:51:27 [!] StackTrace:    at SteamKit2.SteamFriends.SendChatRoomMessage(SteamID steamIdChat, EChatEntryType type, String message)\n   at ArchiSteamFarm.Bot.SendMessage(UInt64 steamID, String message)\n   at ArchiSteamFarm.Bot.d__136.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__141.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.b__5(Object state)\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\n2016-02-02 22:51:27 [!] StackTrace:    at SteamKit2.SteamFriends.SendChatRoomMessage(SteamID steamIdChat, EChatEntryType type, String message)\n   at ArchiSteamFarm.Bot.SendMessage(UInt64 steamID, String message)\n   at ArchiSteamFarm.Bot.d__136.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__141.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.b__5(Object state)\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\n2016-02-02 22:51:27 [!] StackTrace:    at SteamKit2.SteamFriends.SendChatRoomMessage(SteamID steamIdChat, EChatEntryType type, String message)\n   at ArchiSteamFarm.Bot.SendMessage(UInt64 steamID, String message)\n   at ArchiSteamFarm.Bot.d__136.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__141.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.b__5(Object state)\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\n2016-02-02 22:51:27 [!] StackTrace:    at SteamKit2.SteamFriends.SendChatRoomMessage(SteamID steamIdChat, EChatEntryType type, String message)\n   at ArchiSteamFarm.Bot.SendMessage(UInt64 steamID, String message)\n   at ArchiSteamFarm.Bot.d__136.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__141.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.b__5(Object state)\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\n. Admittedly it's probably easier to check the badges page with some browser addon. :dart: \n. Why is it pointless for me to make a list of 200 appID's I'd like to sequentially farm?\nAFAIK !play forces a certain appID(s), not intelligent card farming of those games. This is entirely different than having normal ASF automatic operation but only with a subset of the available games.\nI don't see how that is pointless :dancers: \n. Conversion from the default format into the new one could be eased with some regular expressions; do you think you can convert/keep the auth/bin/key files into BOT.database.json though, or otherwise avoid having to re-do 2FA linking? After all it comes with a trade cooldown.\n. https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration still lists this as a blocker; I understand 612 is waiting for the next .NET Core release. I've noticed that about a third of my STM offers are not 1:1 value +- $0.01 but people wanting a card priced 50% higher than theirs. I made myself available to public offers on STM for a day and I've lost $0.25 across some 20 trades, with one person giving me a whole bunch of more valuable cards than he wanted (like $0.08 profit for me in total) and a group of people grabbing cards up to double the value of their own (amusingly bunched together at the same time, so maybe similar time zone). Of course the simple solution while STM profit trading is real is to not be listed to the public and mostly trade with bots.\nIn this light, KuriyamaMari's worry about foil cards seems reasonable, as the price differences can be much higher there than they typically are with regular cards.\nP.S.: Only accepting STM style trades from friends would be another nice option.\n. (I would like the option to keep the current one.)\n. I run into this on a single account because I have more than a thousand games to card.\nThe JSON response is 90-100 KB in a text file.\n(the !api output is amazingly useful and by now there's a whole slew of things I do with it, it's just a bit convoluted to get it because I can't just WCF-grab it and pipe that to a file). Does this require a specific WCFBinding setting (I'm on default) or Win8/Win10 OS (this is Win7)?\nASF V2.3.1.4 / runtime 4.6.2 . Like above:\n```\n2017-05-21 20:00:44|ASF-6044|INFO|ASF|InitASF() ASF V2.3.1.4\n2017-05-21 20:00:44|ASF-6044|INFO|ASF|IsRuntimeSupported() Your .NET runtime version is OK.\n2017-05-21 20:00:44|ASF-6044|INFO|ASF|IsRuntimeSupported() Required version: 4.6.1 | Found version: 4.6.2\n2017-05-21 20:00:44|ASF-6044|INFO|ASF|SendCommand() Sending command: api lkz to WCF server on net.tcp://localhost:21339/ASF...\n2017-05-21 20:00:45|ASF-6044|ERROR|ASF|HandleCommand() System.ServiceModel.CommunicationException: The maximum message size quota for incoming messages (65536) has been exceeded. To increase the quota, use the MaxReceivedMessageSize property on the appropriate binding element. ---> System.ServiceModel.QuotaExceededException: The maximum message size quota for incoming messages (65536) has been exceeded. To increase the quota, use the MaxReceivedMessageSize property on the appropriate binding element.\n   --- End of inner exception stack trace ---\nServer stack trace: \n   at System.ServiceModel.Channels.ClientDuplexConnectionReader.DecodeMessage(Byte[] buffer, Int32& offset, Int32& size, Boolean& isAtEOF, TimeSpan timeout)\n   at System.ServiceModel.Channels.SessionConnectionReader.DecodeMessage(TimeSpan timeout)\n   at System.ServiceModel.Channels.SessionConnectionReader.Receive(TimeSpan timeout)\n   at System.ServiceModel.Channels.SynchronizedMessageSource.Receive(TimeSpan timeout)\n   at System.ServiceModel.Channels.TransportDuplexSessionChannel.Receive(TimeSpan timeout)\n   at System.ServiceModel.Channels.TransportDuplexSessionChannel.TryReceive(TimeSpan timeout, Message& message)\n   at System.ServiceModel.Dispatcher.DuplexChannelBinder.Request(Message message, TimeSpan timeout)\n   at System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)\n   at System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)\n   at System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)\nException rethrown at [0]: \n   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)\n   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)\n   at ArchiSteamFarm.IWCF.HandleCommand(String input)\n   at ArchiSteamFarm.Client.HandleCommand(String input) \n2017-05-21 20:00:45|ASF-6044|INFO|ASF|ParsePostInitArgs() WCF response received: \n```\nNormally I run --server as admin; with --client I tried both admin and non-admin, separate exe and same exe, using > to pipe to file and outputting to cmd window. All explode the same way.. Thanks, that works well now. The client exe needs this fix; I didn't test if an older server exe as the sender works.\npoor ASFui takes a very long while at 100% CPU core load trying to process the entire response :>. If possible not merely for integers (or bytes as you tend to), so that I could !pause& 0.5 too . So if I change my GiftsLimiterDelay to 0, I can more or less have the old behaviour back? :|. For main account usage, a one-click 2faok button would be desirable. I'll probably add a separate !r input box of some form for myself, maybe as a multi-line textarea.\nAs an option, people might not want the #commandReply  and cmdInput automagically cleared before/after commands. For personal usage I made both persist => https://github.com/Luckz/ArchiSteamFarm/commit/e990424357c978ca276fd71284d3ece683cdae46 (one could even go as far as persist output in localStorage)\nNice-to-have would be a command history accessible via keyboard up & down arrows (like this) - this one definitely is a candidate to keep the last 25 commands or so in localStorage.. @MrBurrBurr \nI mean having user-set per-bot \"quick commands\". Some people mainly use ASF to control single bots with one/two/three repetitive commands like key redemption and market confirmation, others have vastly different use cases and desires.\nActually, I think most powerful would be configurable buttons/textboxes stored in localStorage or some additional config file. Config file has the advantage of being \"portable\" for all that access it, localStorage has the advantage that multiple IPC UI users (shared ASF) can have different settings.\nI suppose a \"real\" (beyond people you trust 101%) multi-user setup would require per-ID64 (SteamOwnerID & SteamUserPermissions) IPCPassword in ASF. Don't know if that last one is the best feature to add.\n\nBtw even if one doesn't show more than one reply at a time by wiping the #commandReply between responses, maybe it should still be scrollable (css: overflow-y: auto;?) for users with more bots than lines or who want to redeem more keys than they have available lines.. WebSocket stuff (ASF Log) isn't supported on Win 7 clients. I assume it's that, @MrMarble . > since you're on version 4.7.0, maybe it's worth upgrading.\n\nI will update as soon as its available on cdnjs.com.\n\nSeems like somewhat of a breaking change.\nAppears to be they only updated their GitHub repo in the last hours, so for now it's <script defer src=\"https://use.fontawesome.com/releases/v5.0.6/js/all.js\"></script> or similar (assuming you're brave enough to go the JS way)\nIf you want to give it a whirl, you can always change back to cdnjs when they have it too. Will have to wait until a GitHub release, I s'pose.. forgot the semicolon here and on line 226 :). Seems to work really nicely! \ud83e\udd47 \nDid you see https://github.com/MrBurrBurr/ArchiSteamFarm/pull/1 ?\nbtw you might want to set\ngit config --global core.autocrlf true \nassuming you're on a Windows PC and the projects you use in Git are typically also used by Linux users\nyou can also just set it in the ASF git repository directory, in a cmd window:\ngit config core.autocrlf true . ",
    "Sardge58": "win7 x64, yep tried this https://www.microsoft.com/en-us/download/details.aspx?id=49981\n. The attempted operation is not supported for the selected object type\n. okey, thanks a lot\n. its work! thanks for all!\n. last version not work\n. connected,logged,enter 2auth, again error! f*ck th system \nhttp://s016.radikal.ru/i336/1601/8f/d7d79579ab25.png\n. Object reference not set to an instance of the object.- 1 russian , The end of the stack trace from the previous location where the exception occurred 2,3 - russian\n. but i dont know what to do now :(\n. okey\n. all this 2 version crash with \"The attempted operation is not supported for the selected object type\"\n. 1.5 pre2  works before 2step auth, but after crash. other version crash at start before logining\n. thanks fot help too, you spent so much time for this project/issue\n. http://s020.radikal.ru/i717/1601/34/231f1a15b62e.png\n. THX, now its all work\n. ",
    "BoberMod": "Oh, thx, I have not noticed.\n. ",
    "ttrl": "closed\n. ",
    "lnris2": "the reason i did this, is to activate bundle keys on my main account wich is masterid of my bots and i used one of my bots to send the keys, so this returned in a loop, for now i just disabled the bot who will send the keys, i posted just to see if someone get some idea to work out.\nAnd the tool when parse the keys dont get only the key if the key is set on the mid of a text the tool try to activate all the text i think it is another bug.\n. ",
    "MoonsorrowDSV": "\nYes, but currently i need write Phone number for every account. and i think \"Enter SMS code\" looks better then \"Enter phone number + enter SMS code \" especially if number not changing. Just save time if you have many accounts.\n. \n",
    "Sheerrr": "Why did you do it, if no benefit for you?\n. ",
    "Firestar98": "1.6.1 resolved the issue on my end.  I have a new issue but that'll be a separate bug report, once I investigate it a bit more.\n. ",
    "artemisbot": "The zip for v2.1.2.5 is detected as malware on Windows 10 by Windows Defender. http://i.imgur.com/N2WebxF.png\n. ",
    "Katzenrubbler": "I'm currently running V3.2.0.2 win-x64 and it's been detected as a Trojan.\n. ",
    "Zuelly": "I have had the same thing just before.. ",
    "DkXfS": "Yeah. I got the same message from Win Defender just now. I think we probably need to open a new issue, coz this one is marked as closed.. ",
    "narutards": "I've tested this over the course of about 1.5 weeks and a sufficiently high number of extra accounts. I basically got a booster for every single account but no account got 2 boosters. As soon as I logged into every account with the steam client and clicked the notification I got more boosters within 24h.\nI'll start testing 1.7 today and report back.\n. I'm getting a bunch of \"errors\".\n28.02.2016 16:54:58 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n28.02.2016 16:54:59 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n28.02.2016 16:54:59 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n28.02.2016 16:54:59 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n28.02.2016 16:55:00 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n28.02.2016 16:55:00 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n28.02.2016 16:55:00 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n28.02.2016 16:55:01 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n28.02.2016 16:55:02 [!!] WTF: MarkInventory()  Request failed even after 5 tries, WTF?\n. I still have 4 new item notifications pending on the affected accounts after idling a game with 4 card drops.\n. Havent' had time to test v2.0.x yet, but in v1.7.x or prior this feature was not working. So make sure to use v2.0.x\n. Fair enough.. The trades that get ignored are manually sent trades from a bot that isn't running.\nNo idea what is missing from those trades. Maybe the trade comment?. ",
    "GabrielDuarteM": "Hmm, i guess i can prioritize it by name instead... The reason why i wanted this its because i have some limited accounts, and i want to redeem keys in the unlocked ones first, and then try to redeem at the other ones.\nBy the way, awesome job with this app, in my opinion is waaaay better and years ahead of idlemaster =D\n. Yes, i'll try that way =D\nIt looks like it's using decrescent order instead of ascending, so 6 will have more priority than 5...\nJust one more question, most of my config files use the ASF 2FA, can i just rename the config and all related files? or do i have to recreate them (remove 2FA, etc)?\n. ",
    "dmlemos": "Where is that explained? Sorry I didn't see that on the FAQ.\nThanks\n. ",
    "eltiel": "Thanks for the explanation. If it is certain that the problem is on the server-end and not ASF, then there's probably nothing we can do about it.\nEdit: I'll try to repeat this test with idlemaster when I have the chance. Will revert with results when possible.\n. ",
    "SuperNic333": "@JustArchi Just tested here, it works fine just by renaming to the same format that SDA uses. \n. I'm sorry, i didn't test the Steam Trade Confirmation, since it imported fine, and generating the 2fa code was working right, so i guessed that it would be working fine\n. Just tested the new pre-release, I followed the instructions correctly, and from my tests, accepting confirmations are working fine here.\nHowever, is this kind of behavior normal?\n12/03/2016 02:44:06 [!] WARNING: AcceptAllConfirmations()  Accepting confirmation: Failed!\n12/03/2016 02:44:07 [*] INFO: AcceptAllConfirmations()  Accepting confirmation: Success!\nOn the first try it always seems to fail, than on the second try the request is successful, although it's probably nothing, i'm mentioning anyway.\n. Closing and reopening ASF fixed the issue, now it's working perfectly, so it was nothing.\n. @JustArchi Something you might want to add on the Wiki, Winauth Stable (3.3.7) did not saved the Device ID, so data from pre-WinAuth 3.4 is not supported on ASF\n. @JustArchi They don't update those old files, they ask the user to re-register the Mobile Authenticator\n. ",
    "BlueRaja": "Where are you guys seeing the option to export a JSON object from Winauth?  The main data file in .xml, and the only export option exports a .txt file that consists of some URI.. ",
    "BlackHazel": "Used 2.0.0.2 for two days and updated to 2.0.0.3 today no problem so far.\nAlso tested a mono build on Arch' works perfect.\n. ",
    "SSadistic": "Yeah... It's completely my fault, sorry. I thought the configuration is the same as the old version, but I was wrong. It's working flawlessly now.\n. Oh my bad... I mean when its false, so that its actually showing when you play.\n. Well my idea is to answer to every body once or just loop the message. I know it maybe be a long work and troubles for that.\n. The point is that (and im sure that not only me) want the bot to be online when farming and when someone writes him - he responses with an message, so that the friend knows that this is a bot. For for me is that. I just don't want to search for a message bot, since this bot is perfect, its just im missing only that. :(\n. Okay, thank you for your time. :+1: \n. That's the problem, that I can't, that's why I tried with this thread.\n. ",
    "ZeroMaki": "I read that, also saw your suggestions on the \" \", I admit I did miss that one however after fixing that mistake it still says so\n. Alright think I got it to work, with ACF if I run it on a server of mine, if I set the WCF host from localhost to my servers IP, I'll be able to remotely connect?\n. Whenever I try to send a command It says no endpoint is listening, set it to my remote IP and with or without iptables it won't let me connect to it.\n. Yes.\nEDIT: think I might have a fix.\n. Yes I did, and I'm trying to figure out exactly what. \n. Alright managed to connect to it, disabled the firewall temporarily and was let through. But as soon as I put it back on, it blocks me.\n. Nvm, it was TCP not UDP lol\n. Lol I did, tried it on ubuntu 12.04 didn't seem to go my way so switched to windows. But I got it working and blocks all other IPs but mine :)\n. I kinda like that idea, was thinking about the same but the fact they could control my bot too made me not do it.\n. I set up a bot for my friend and he is master of his and you said that another bot would listen to given bot instances that he owns but won't respond on my bot 2 and his is bot 3\n. Glad I am not a complete failure then xD\n. Yes commands still work, but I have to issue them for him since I'm Master of bot 2\n. Sounds good =)\n. and how many already farmed I personally would like that too.\n. why am I so blind today? thank you\n. You misunderstood what I said entirely. !farm did not work last time I used it, it would respond to me as Done! but console showed NOTHING even happening didn't check badge page or react to it. I know about !play as I said in my post, I am using blacklist but like I said it requires to reboot ALL bots, a !blacklist to take IMMEDIATE effect in the PROCESS not having to restart the bot to read from config again, which was then my suggestion to add !reload for it to READ the config again without restarting\n. Duplicate perhaps, and yes I was running manual mode but even when not it didn't react to !farm.\n. sure might as well get the whole package lol\n. ",
    "StreetDogArg": "Yes Lukas! will be great Have a stand alone version (as WinAuth) of ASF !!! \nregards!\n. ",
    "Giza": "same\n. ",
    "iluwQaa": "Renamed back and update run without errors. Thank you. Topic can be closed.\n. ",
    "MosesHe": "Sorry. I clicked the comment by mistake when I didn't finish typing. Here is the issue.\nWhen I use command \"mono ACF.exe\" on my Raspberry Pi, I got this problem.\nroot@raspberrypi:/home/pi/Downloads/ASF# sudo mono ASF.exe\nUnhandled Exception:\nSystem.TypeInitializationException: The type initializer for 'ArchiSteamFarm.Program' threw an exception. ---> System.IO.FileNotFoundException: Could not load file or assembly 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' or one of its dependencies.\nFile name: 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\n  --- End of inner exception stack trace ---\n[ERROR] FATAL UNHANDLED EXCEPTION: System.TypeInitializationException: The type initializer for 'ArchiSteamFarm.Program' threw an exception. ---> System.IO.FileNotFoundException: Could not load file or assembly 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' or one of its dependencies.\nFile name: 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\n  --- End of inner exception stack trace ---\nWhat should I do?\n. And here is the mono version.\nMono JIT compiler version 4.2.3 (Stable 4.2.3.4/832de4b Wed Mar 16 13:34:50 UTC 2016)\nCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\n        TLS:           __thread\n        SIGSEGV:       normal\n        Notifications: epoll\n        Architecture:  armel,vfp+hard\n        Disabled:      none\n        Misc:          softdebug\n        LLVM:          supported, not enabled.\n        GC:            sgen\n. @JustArchi \nThank you for your patient replies. I will have a try.:)\n. ",
    "gggauravgandhi": "I faced the same issue when updating my Ubuntu machine, thus upgrading mono. \nI did following two steps and solved.\n- [ ]  sudo apt-get install mono-devel\n- [ ]  mozroots --import --sync\n. ",
    "redmarverick": "29/03/2016 09:06:01 [] INFO: CheckForUpdate()  Checking new version...\n29/03/2016 09:06:02 [] INFO: CheckForUpdate()  Local version: 2.0.1.9 | Remote version: 2.0.1.9\n29/03/2016 09:06:02 [] INFO: CheckForUpdate()  ASF will automatically check for new versions every 24 hours\n29/03/2016 09:06:02 [] INFO: RefreshCMs()  Refreshing list of CMs...\n29/03/2016 09:06:03 [] INFO: RefreshCMs()  Success!\n29/03/2016 09:06:03 [] INFO: Init()  Not starting this instance because it's disabled in config file\n29/03/2016 09:06:03 [] INFO: Start()  Starting...\n29/03/2016 09:06:05 [] INFO: OnConnected()  Connected to Steam!\n29/03/2016 09:06:05 [] INFO: OnConnected()  Logging in...\n29/03/2016 09:06:07 [] INFO: OnLoggedOn()  Successfully logged on!\n29/03/2016 09:06:07 [] INFO: Init()  Logging in to ISteamUserAuth...\n29/03/2016 09:06:08 [] INFO: Init()  Success!\n29/03/2016 09:06:10 [] INFO: Start()  Starting...\n29/03/2016 09:06:11 [] INFO: OnConnected()  Connected to Steam!\n29/03/2016 09:06:11 [] INFO: OnConnected()  Logging in...\n29/03/2016 09:06:12 [] INFO: OnLoggedOn()  Successfully logged on!\n29/03/2016 09:06:12 [] INFO: Init()  Logging in to ISteamUserAuth...\n29/03/2016 09:06:13 [] INFO: Init()  Success!\n29/03/2016 09:06:13 [] INFO: IsAnythingToFarm()  Checking badges...\n29/03/2016 09:06:13 [] INFO: IsAnythingToFarm()  Checking first page...\n29/03/2016 09:06:15 [] INFO: IsAnythingToFarm()  Checking badges...\n29/03/2016 09:06:15 [] INFO: IsAnythingToFarm()  Checking first page...\n29/03/2016 09:06:15 [] INFO: IsAnythingToFarm()  Checking other pages...\n29/03/2016 09:06:15 [] INFO: StartFarming()  We have a total of 5 games to farm on this account...\n29/03/2016 09:06:15 [] INFO: StartFarming()  Chosen farming algorithm: Complex\n29/03/2016 09:06:16 [] INFO: FarmSolo()  Now farming: 253980\n29/03/2016 09:06:17 [] INFO: IsAnythingToFarm()  Checking other pages...\n29/03/2016 09:06:17 [] INFO: StartFarming()  We have a total of 2 games to farm on this account...\n29/03/2016 09:06:17 [] INFO: StartFarming()  Chosen farming algorithm: Complex\n29/03/2016 09:06:17 [] INFO: FarmMultiple()  Now farming: 306350, 355150\n29/03/2016 09:06:17 [] INFO: Start()  Starting...\n29/03/2016 09:06:18 [] INFO: OnConnected()  Connected to Steam!\n29/03/2016 09:06:18 [] INFO: OnConnected()  Logging in...\n29/03/2016 09:06:19 [] INFO: OnLoggedOn()  Successfully logged on!\n29/03/2016 09:06:19 [] INFO: Init()  Logging in to ISteamUserAuth...\n29/03/2016 09:06:19 [] INFO: Init()  Success!\n29/03/2016 09:06:21 [] INFO: IsAnythingToFarm()  Checking badges...\n29/03/2016 09:06:21 [] INFO: IsAnythingToFarm()  Checking first page...\n29/03/2016 09:06:23 [] INFO: IsAnythingToFarm()  Checking other pages...\n29/03/2016 09:06:23 [] INFO: StartFarming()  We don't have anything to farm on this account!\n29/03/2016 09:06:24 [] INFO: Start()  Starting...\n29/03/2016 09:06:25 [] INFO: OnConnected()  Connected to Steam!\n29/03/2016 09:06:25 [] INFO: OnConnected()  Logging in...\n29/03/2016 09:06:26 [] INFO: OnLoggedOn()  Successfully logged on!\n29/03/2016 09:06:26 [] INFO: Init()  Logging in to ISteamUserAuth...\n29/03/2016 09:06:26 [] INFO: Init()  Success!\n29/03/2016 09:06:29 [] INFO: IsAnythingToFarm()  Checking badges...\n29/03/2016 09:06:29 [] INFO: IsAnythingToFarm()  Checking first page...\n29/03/2016 09:06:32 [] INFO: IsAnythingToFarm()  Checking other pages...\n29/03/2016 09:06:32 [] INFO: StartFarming()  We don't have anything to farm on this account!\n29/03/2016 09:11:17 [] INFO: FarmHours()  Still farming: 306350, 355150\n29/03/2016 09:11:22 [] INFO: Farm()  Still farming: 253980\n29/03/2016 09:16:17 [] INFO: FarmHours()  Still farming: 306350, 355150\n29/03/2016 09:16:25 [] INFO: Farm()  Still farming: 253980\n29/03/2016 09:21:17 [] INFO: FarmHours()  Still farming: 306350, 355150\n29/03/2016 09:21:27 [] INFO: Farm()  Still farming: 253980\n29/03/2016 09:26:17 [] INFO: FarmHours()  Still farming: 306350, 355150\n29/03/2016 09:26:29 [] INFO: Farm()  Still farming: 253980\n29/03/2016 09:31:17 [] INFO: FarmHours()  Still farming: 306350, 355150\n29/03/2016 09:31:17 [] INFO: FarmHours()  Stopped farming: 306350, 355150\n29/03/2016 09:31:17 [] INFO: StartFarming()  Done farming: 306350, 355150\n29/03/2016 09:31:17 [] INFO: FarmSolo()  Now farming: 306350\n29/03/2016 09:31:31 [*] INFO: Farm()  Still farming: 253980\n. print about the !statusall\nhttp://i.imgur.com/Udt9g7t.png?1\n. ",
    "ambidot": "Shit, you're right. To be fair though, the empty error message is confusing.\n. ",
    "LooneyZ": "Sry, but in wiki you wrote !addlicense 440,570 in example. \nIt is tf2 and dota as I know and it dont work too\n. It list free games. It listed tf2 on accounts, where i played it\n. Wow, thanks dude. My bad =) You are the best =)\n. ",
    "AbdoZaghloul": "My bad.\nAll good now, thanks.\n. ",
    "cramik": "Checked it, it didn't save my collection.. gg\n. Your saying it asking me for a code 6 times in a row is not a bug? Your the sorta person valve would hire to develop their shit.\n. ",
    "KlappPc": "Ah, ok. Gonna have time on Wednesday to look into it deeper. Guess after using ILRepack it doesn't find it anymore. Will have to get that running for me and find out how to reference resource properly ;->. Meanwhile (if you change something anyways) you can use instead of\nASFGUI.Icon = new System.Drawing.Icon(\"cirno.ico\");\none of the built in Icons e.g.\nASFGUI.Icon = System.Drawing.SystemIcons.Application;\nThan it at least doesn't minimize into abyss anymore ^^\nGonna get the envirenment up and running completely, so that this doesn't happen in the future. \n. Jeha, no Problem. \nNever indended to make you more work.\nThe Icon should be an easy fix, no clue about the Nullpointer in the button, though ^^.\nI get the ILRepack to work for me (then I can test the final exe as well) and maybe add a disclaimer (and open a different SG thread) with \"Support for this not in archies thread but here\". That should at least reduce the amount of requests since people never read anyways ;->\n(Ok, at least some people do, since one added me directly for a wishlist (GUI worked for him as well) ;->.\nI'll refactor and try to make it more stable for special cases as well. (maybe should have done that in the first place, but the new semester started and everything always gets so messy ^^).\nMaybe it's a good idea to distribute it seperatly (by me) for a month or so, and only if that works for everyone include it back into your zip.\nBut basically the final exe (besides minimizing) works on win7 and 8.1 (for me^^). Might indeed be some uncatched case if a problem somewhere occured or a problem with win10.\nMight take a week or two, but since its not critical in any way;->\nThank you so far for putting effort in a GUI you don't want/need and have a nice day.\n. Jeha my Problem with ILRepack was that it just didn't worked at all (even for your Projects \"out of the Box\"). I saw the coressponding lines in the csproj, (but not in VS itself) and adding it in VS to the postbuild (or even running it manually) didn't resulted in the expected exes ^^. I thought it should not create Problems and ignored it ...\nGonna have to read a bit into the doc of it^^.\nI know that I tend to code sloppy and \"quick and dirty\" and unfortunatly most of the time I planned on refactoring was used for the input stuff (since I did not need it, but thought it would be necessary for most people, so I implemented that and then searched for like hours if it really has to be done that ugly, but unfortunately yes ^^).\nIf people just used Programs in well defined environments and know when (not) to press which button, coding would be so much easier ^^.\n. Welp, there should be a changelog for the FAQ ^^.\nKinda get your point, sorry for wasting your time.\nPS: You are damm fast, or have you automated this process as well? ;->. Jep, use brain.exe\nFalse positives are a common thing. Read through here\nhttps://www.steamgifts.com/discussion/gCxhN/archis-steam-farm-asf-steam-cards-farmer-and-much-more-windowslinuxos-x/search?q=virus. > ResponseUnknown() \nDammit, I knew I had seen a similar case somwhere. Maybe its a bit late here ;->\n\nI'm not sure if it wouldn't be better to use bytes \n\nThought about that as well. But once you add more modes you don't have a 1-1 mapping anymore. And text is indeed easier to remember than numbers. Especially if you do not use the command often.\n\nThis must be verified for not being 0\n\nDidn't knew that the steamId isn't chached, but makes sense.\n\nMisc\n\nDone\n\nAlso you should probably add handling of SteamTradeToken\n\nOh, totally missed that the tradetoken in the lootcommand is from the sending bot config and therefore useless.\nI can test it tomorrow again (and use a non-friend bot as well), but to tired atm ^^.\n. Included your simplification as well (c# has lazy evaluation?).\nWould test it tomorrow again (and with a non friend bot).\nYour choice if you want to wait until then, but it is not breaking existing stuff, so its not that critical. ;->\nThanks for your fast replys and good night.. A minimal example using jquery can be found here:\nhttps://github.com/JustArchi/ArchiSteamFarm/pull/615\nSending commands and reading replys works in firefox and chrome (rest unchecked), loading the log, only in firefox. (and not in chrome).\nFor reading the logs nothing but jquery.load worked. But I am not sure if this functionality is really needed. Sending commands could be done without jquery.. @Botan626 \nhttps://github.com/KlappPc/ASFui/releases/tag/0.61\nRead the notes.. @Botan626 Jeha I saw that, but to lazy to parse that stuff ;->\nBefore ASF printed \"replied to command...\" stuff, which it does not anymore. So instead of giving no feedback I printed the whole response.\nMaybe if I find time later on I'll change that (since removing keys does not work atm). But I don't have time for that right now.. @Basdower not that I am aware of.\n@Benman2785 404 means you screwed up the link. Check the wiki for correct syntax.. @Benman2785\nYou need to append the command using javascript. The second example will append stuff as parameters, while you need it there as in your first example.\nJust do it without the iframe and look at the URL of the page you are getting to.\n. @Benman2785 \nI do not have discord and I do not give private support, there are enough examples out there, to figure it out.\nThis can give you a hint \nhttps://www.steamgifts.com/discussion/gCxhN/archis-steam-farm-asf-steam-cards-farmer-and-much-more-windowslinuxos-x/search?page=61#Xqj47Ox\nBut that a specialiced thing for one purpose.. @Benman2785 \nWell, without javascript you page is static. And since the commands are not appended as parameter, there is no way to do that with pure html without coding one button for each command (including parameters to that command.)\nDanke gleichfalls.. If we allow \"*\"\nA site\nthisIsAlegitSteamGiveaway.ru\ncould send commands to ASF by executing javascript (and viewing the reply)\nSending requests is pretty easy for any side (just redirect to the command-URL) but reading the result would only be possible if the domain is allowed for cross side access.\nWasn't sure if we need a second async call or if it can be included in one. I will look into that.\n. The thing is, localhost or the local ip only work if you are running a (local) webserver.\nIf you just open a html file on your disk (\"file:///...\"-Url) the origin is \"null\".\nSo basically \"null\" should allow only requests that come from \"no-domain\" sources resulting in only allowing local files.\nI am just not 100% sure of that because ... well javascript. ;->\n. Ok, sometimes I just want to hit my head with a brick.\nI thought WriteAsync was a BuildIn funktion ... Moved it there.\nSending commands works in firefox 54.0.1 and in Chrome 60.0.3112.90.\nLoading the log works in firefox (not in chrome) but thats not something ASF can fix ^^ (at least not easily) But this function is not important anyways.. Not sure about linux, but under windows you need administrative access for starting the IPC server.\nHave you tried sudo?\nNot sure what you want to do with openlogin or more specific what this would add as data which we can not get from ASF, but as stated this is a minimal example. It definetly should not be a final GUI ;-)\nYes Chrome has some stricter restrictions than firefox, thats why loading the logs (from a different local file) does not work (at least not without crushing security once and for all). Using javascript to load the \"not local\" (http:// instead of file:/// protocol) works just fine (at least for me ;-)\nEdit: Oh, and not sure if 0.0.0.0 is a valid IP, or if that is reserved for something. Probably try a \"normal\" url.. @JustArchi just an addition to\n\nThis means that you don't need to run ASF as root (and you should never do).\n\nOn windows you need admin for every port as you mentioned, BUT you can reserve the URL for a specific user (using admin once).\nnetsh http add urlacl url=http://IP:PORT/IPC user=DOMAIN\\USER\nThen ASF works without admin privelege. Dunno if that helps someone.. Wait. (wrote a different comment first ^^)\nJust figured out, that what @MrBurrBurr wrote is wrong.\nYou would need to add the IP of Server B.\nRequests from the IPC hosts are always allowed, since thats not cross-origin. At least thats how it's supposed to work. Currently do not have a webserver to test it.\nSo changing it to IPCHost, would not make the above case work, it would just break the local case.\nSo probably make that option configurable.\nThere has to stand the IP of the Server SENDING the request, if and only if it differs from the IPCHost.\nAgain, at least thats how it's supposed to work.. The only problem with \"*\" is that ANY website you visit can send commands using javascript (if ASF runs locally).\nSo even if my ASF is not reachable from the internet someone could send commands if I visit his website.\nBut I am not sure if that is  problem. Probably sending 100s of !lootall commands to trigger a ban might be the worst case. \nBut then you still have to run it in server mode, which might not be important for like 99% of users. (Probably changes if a good javascript UI is done.)\nIf it's configurable, people still can enter \"\", but I guess the config is cluttering up much, these days ^^. Specifiying \"\" and adding an \"IPCPassword\" would probably fix all problems.\nSo a config option to add a password, that has to be send with each command for it to be valid.\nThen it doesn't matter if some is able to send commands (either via a Website your visiting or by getting the IP of your public reachable ASF).\nTo execute commands they at least have to sniff out transfered data.\nBut I'm not sure if thats not shooting brids with canonns ;->. ",
    "ZeKraggash": "Yet another problem with this - bot forwards a key  that already  has been activated by the bot or duplicate one. Usually I use group chat to distribute keys, so after I insert several dozens of keys into, steam put a cooldown to all my accounts,  because of such improper forwarding.\n. @Ryzhehvost hm... but what is the best way to activate 25+ keys?\n. ",
    "Onurtag": "I see, if other people are using this feature frequently I don't really mind it as I would use two dashes only maybe once in a year.\nLooks like steam accepts many different key styles (1) so I can see why it would be quite hard to adapt to every single them.\nThen until we get a good suggestion it is fine as is.\n. ",
    "Phyxion": "Finally reporting a bug for this, is it a duplicate...\n. But you can write the date easily with .ToString(\"d\"), which is already culture specific. As for the time you can use \"t\".\nAlright regarding the info, but I would still prefer the bot name to be on a standard position. You did it < botname > + the remaining text. Maybe you can place the name after the [*] block instead. I really think this is a major improvement to readability of the console output. I have to search every time to find the name of the bot, which is very annoying. Or you could perhaps add it as a setting for ASF so we can customize the output (which would be pretty great :)).\n. Because I don't run Linux, it's running in cmd window and it's impossible to find anything.\n. Never mind, you don't get it. I'm sorry I've even asked.\n. I issue commands through WCF client so thats a lot easier for me, thanks for implementing this :+1: \n. Lets say my friend tells me he is going to send a trade. I don't get any notification anymore so I have no idea if he sent something or not and now I have to constantly check inventory or trade offer screen. Surely you can verify what he sent by going to trade offers etc, but it's more trouble than it's worth. What if he sent the wrong stuff? Then I have to ask again, or send some back. I'd rather have an option to disable just donation trades.\n. Thanks @JustArchi, that's very kind of you to add, I will check it out later today.\n. Just set up the config, looks fine so far but haven't traded something yet but the code looks good \ud83d\udc4d \n. Is it possible that trades sent to SteamOwnerIDare no longer accepted if TradingPreferences is set to None? I had to manually accept some trades from my bots that have the correct SteamOwnerID set.\n. I don't really understand what you mean with your last message. I would expect that trades sent to  SteamMasterID from a bot would be accepted. Especially because this is written at the SteamMasterID description:\n\nASF will also accept friend requests, chat invites and all trades sent by SteamMasterID. This is also the steamID to which ASF is sending items through !loot command.\n\nThis also makes sense, I want to accept all trades coming from my own bots (as it remains in my possession anyway), but not from a friend or a random stranger.\n. If there are different instances running, without shared configs, you would indeed not know that. However, an option along the lines of AcceptDonationsFromSameInstance wouldn't be such a bad thing. I think the majority of ASF users have only one machine with ASF running and not several. \nAnother option would be to add an optional setting of SteamIDs where trades are always accepted from.\nEither way would be an improvement over having to manually accept trades from your own bots.\n. Thanks, I'll try it out later today.\n. > We're farming games, not cards. And when farming multiple of them, we're not farming cards at all, but farming playtime.\nIt's farming cards, not games. It's like you write: ASF is a C# application that allows you to farm steam cards. If you would farm games you would get games in inventory, that doesn't make any sense.\n\nTime prediction is made for entire farming queue, not a single game, because it's also affected by chosen farming algorithm. Predicting a single game is not possible, unless you entirely ignored the actual way of farming the queue, but then your prediction is incorrect by definition.\n\nFair enough.\n\nas it's entirely possible that ASF can be farming 4 games, and have a total of 5, or any other combination\n\nYes, I'm aware, hence this statement:\nBot 0 is farming 3 cards from xyz, with 4 games (6 cards) left to farm (~6 hours remaining).\nThis is of course not a total anymore but one you have to deduct yourself (left + right). This could work but with knowledge of the time prediction one can slightly rewrite it to this:\nBot 0 is farming 3 cards from xyz, out of a total of 12 cards from 4 games (~6 hours remaining).\na total of is optional but might make it more clear.\nOr in one with multiple appids:\nBot 0 is farming playtime from appids 430080, 552030, 550440, out of a total of 4 games (12 cards and ~6 hours remaining).\nfarming playtime from might also be called idling.\nTo make the single game more identical you could also do it like this:\nBot 0 is farming 3 cards from xyz, out of a total of 4 games (12 cards and ~6 hours remaining).\nThis way you have a consistent print that makes sense for all given scenarios.. That doesn't make any sense. If Valve changes the optimal way you'd have to change the code anyway.. If you change that you can change the print as well. \nOr you can simply ignore the playtime print all together and just put farming 12 cards from appids....\nEither way would be an improvement over the current print.. > It's farming cards, not games. It's like you write: ASF is a C# application that allows you to farm steam cards. If you would farm games you would get games in inventory, that doesn't make any sense.\nBut if you insist on not having cards for multiple appids, idling would be perfect, or farming hours. . Please also read this again:\nBot 0 is idling appids 430080, 552030, 550440, out of a total of 4 games (12 cards and ~6 hours remaining).\n+\nBot 0 is farming 3 cards from xyz, out of a total of 4 games (12 cards and ~6 hours remaining).\nor (if you don't want the specific number of cards):\nBot 0 is farming cards from xyz, out of a total of 4 games (12 cards and ~6 hours remaining).\nIf you do out of a total of, you include the left part of the sentence in the right part.\nThe way you have it right now, appids x, y, z AND has a total of 5 games left, it would mean 5 + x + y +z games = 8 games in total. Which it isn't.. You could perhaps add a separate project for localizations, there are quite some projects doing this.. This link can be used to filter out translations. It's not as clear as the normal view but it's better than with 10000 translation messages in between.. Let's hope Crowdin adds that feature in the future, I think that would make everyone (regardless of which project) very happy. . ",
    "edperax": "i have windows 10 and in features i have 3.5 and 4.6 activated. what else i need to activate to make this asf work?\n. that would be nice help for windows xp user. apparently i'm windows 10 and i suck at this. well thank you anyway. i dont have any problems elsewhere. only your program asf\n. nice. then there must be some other things that doesnt work in my windows 10. and ways to test it and repair it. but there is none.\n. well give me some test program and i'll show you results. i tried reinstalling . didnt help.\n. i just run it on my notebook with windows 7\n. ",
    "Sheerr": "@Ryzhehvost How to give gifts without adding to friends?\n@JustArchi \"alternative built-in methods\" How? Without mutliplie master accounts.\n. @Ryzhehvost You don't understand what I want.\n@JustArchi That's why i have writing here. I can buy gifts on a single account, then I trade to another bot, and then i should gift from this bot to another bots, but it is very inconvenient, extra activities, especially after the purchase from the inventory can not be gifted several gifts, only one.\nEither you need to buy gifts on another bot, and gifts to others. In this case, you have to pay balance from the sale of cards, but then need autoconfirm, I have tried to use SDA or ASF for autoconfirm, but it don't work. (on master acc i using autoclicker for confirm)\n. @JustArchi I have bots more than 300 and its real problem for me. My limit friends is 400, next lvl cost is 400 xp its expensive i think for +5 friends. When i will find solution for this problem i will get much more bots.\nFunctions needed most usually added as a basis of the necessary majority, but why can not you add some features to order, simply based on the complexities you call the price for which you are willing to do.\n. @JustArchi I will never understand you. Why do you have no individual approach or religion does not allow to carry out tasks for the money? If you do not see the feasibility of why you can not do it for a fee?\nIt seems I will have to look for a programmer, if someone programmer sees this and is ready to perform for the money, leave contacts.\n. ",
    "KuriyamaMari": "I get your points. But don't presume everybody is going to make profit from it. I purely use it for myself just for fun but I just don't want to lose any value whilst doing auto trading with others. It's good enough for normal trading cards but I don't feel like mixing foil cards in it. I've read through the trading part before posting the issue and I can see the changes I proposed will be a few lines of codes. I don't have a problem living with the current design and I just wanted to help. Anyway I appreciate your work and respect your points. By the way, I think you explained a lot better in this issue than your codes. Please consider putting it into the Wiki.\n. Excellent!\n. It seems the configuration part is currently hard coded, which will replace the configuration file completely. Any chance you could change that bit?\n. I haven't done a lot of changes. I only change from Get to Post and that's it. \n``` C#\nstring request = SteamCommunityURL + \"/mobileconf/multiajaxop\";\nDictionary data = new Dictionary() {\n    { \"op\", accept ? \"allow\" : \"cancel\" },\n    { \"p\", deviceID},\n    { \"a\", SteamID.ToString() },\n    { \"k\", confirmationHash },\n    { \"t\", time.ToString() },\n    { \"m\", \"android\" },\n    { \"tag\", \"conf\" }\n};\nforeach (MobileAuthenticator.Confirmation confirmation in confirmations) {\n    data.Add(\"cid[]\", confirmation.ID.ToString());\n    data.Add(\"ck[]\", confirmation.Key.ToString());\n}\nstring json = await WebBrowser.UrlPostToContentRetry(request.ToString(), data).ConfigureAwait(false);\n```\nAnd UrlPostToContentRetry is modified from UrlGetToContentRetry and etc.\n. I've only tested with one unfortunately. I'll have a look later tonight :)\n. It works! Thank you very much.\n. No. I'm running as normal program.\n. ",
    "mediocaballero": "This is (official) mono, latest beta for Synology NAS (linux based). Could you at least provide some more information on which bug to report to mono development? Error log is not very clear... :-m\n. ",
    "flabbamann": "Sorry for digging this up, but I ran into a similar error on my NAS, which turned out to be a certificate problem.\ntry this:\nmono /usr/lib/mono/4.5/mozroots.exe --import --sync\ndirectories could differ on your machine, of course.\n. ",
    "dgonzalo-sgt": "Thanks, will try that.\nFinally abandoned the NAS idea and got it working on a Raspberry Pi. It's working ok on mono 3.10... had to do the certs import as well. :-)\n. ",
    "rliljesand": "Thx for the answer! :+1: \nsince my bots are also my kids accounts, I will review how they handle an unlocked account.\n. ",
    "Revadike": "I am using WinAuth, will 2FA disable that? Also I am using my main account, so I rather not do that.\n. Thanks for the help!\n. Fair enough. I've send you the steam wallet code samples.\nEdit: \nSeems my whole key redemption is messed up now. Maybe steam blocked me?\n. Back to redeeming Steam Wallet keys. I did some reverse engineering myself. It's pretty easy to redeem a steam wallet code, just send this request: POST \"https://store.steampowered.com/account/validatewalletcode/\" with this data: { wallet_code: \"RWNFQ-90K07-MP82Q\" }\nI even went ahead and decypher some of the responses:\n{ \"success\": 16 } means OnCooldown\n{\"success\":1,\"detail\":15} means AlreadyRedeemed\nThe problem is however distinguishing game codes and wallet codes. But I believe your redeeming function returns whether or not it's a wallet code, just like the Steam Client does. And you are currently handling it as an error/unknown and keep retrying. \nBTW, not sure if you are still doing it this way, but just checking key.split(\"-\") length is 3 and for each split length is 5 is not a real sufficient way. I've examined steam keys a lot and they all follow this RegEx pattern: [A-NP-RTV-Z02-9]{5}(-[A-NP-RTV-Z02-9]{5}){2}\nAs you can see I left out some characters. These characters never occur in a valid steam key. \n. I wouldn't say more powerful. It still includes \"illegal\" characters. !redeem function can be expanded to support wallet codes. \n. Just try to redeem this key: RWNFQ-90K07-MP82Q\nsteam://open/activateproduct\nSteam is able to recognize if it's a steam wallet code and send you to https://store.steampowered.com/account/redeemwalletcode/?code=RWNFQ-90K07-MP82Q\nSo that is why I thought ASF's function would be able to recognize that too. \nI dont think there are any other steam network requests for redeeming a steam wallet key. Even the steam client send you to the steam store. \n. Could you at least look into ASF's behaviour when trying to redeem a wallet code? I think it just keeps retrying resulting in an OnCooldown, which is just plain annoying. \nBTW if someone needs multiple wallet codes (used):\nhttp://steamcommunity.com/groups/St4ckGiveaways/discussions/0/343788552544948630/\n. Cool! Nice find! \n. I think this ticket status should be solved \ud83d\udc4d \nThanks again archi!. Labels are incorrect. Awesome! I'm gonna try it!\n. Another thing that helps is to only look for games purchased on steam or steam gifts, so exclude CD keys.\nAlso, I found this in Enhanced Steam:\n```\n// Display purchase date for owned games\nfunction display_purchase_date() {\n    storage.get(function(settings) {\n        if (settings.purchase_dates === undefined) { settings.purchase_dates = true; storage.set({'purchase_dates': settings.purchase_dates}); }\n        if (settings.purchase_dates && $(\".game_area_already_owned\").length) {\n            var appname = replace_symbols($(\".apphub_AppName\").text().replace(\":\", \"\")).trim();\n        $.when(purchase_dates_promise(language, appname)).done(function(purchaseDate) {\n            if (purchaseDate) {\n                $(\".game_area_already_owned:first .already_in_library\").append(\" \" + localized_strings.purchase_date.replace(\"__date__\", purchaseDate));\n            }\n        });\n    }\n});\n\n}\n```\nHowever they get the purchase_dates data from the /account/licenses page, which is unreliable, as app name is not always sub name.. Could you please clarify on that?. Alright, no problem. I'll make my own bot instead :). Alright, I'm done building my bot.\nhttps://github.com/Royalgamer06/steam-free-apps. Does it increment hours_played of the !play-game for you, if you used the command after automatic farming had started?. I'm talking about on steam. I know it is slow in updating. \nWhile debugging I found something else weird. GamesPlayedWhileIdle is supposed to do this:If ASF has nothing to farm it can play your specified steam games (appIDs) instead.\nHowever, it seems to be playing these games while farming. \n\n\nThis has maybe something to do with each other.\nHmm, seems the !play command is working again. \nYou know what, just blame Steam and close this issue :P. My apologies for not following the bug issue scheme.\n\nFor my own bots I usually use Date.now() as LoginID, which is different every millisecond. But I am also using SteamCMD with my account, but that's on a different machine. Actually, the machine I am running ASF on has only ASF logging into my steam account. My other steamkit-bot(s) and steamcmd program run on a different machine.\nI have SteamPassword as plaintext.\nYes, setup using WinAuth data.\nWell, the server has been untouched for days (during the time the error occurred). So it must have been external forces that caused this error to happen (steam).\n\nI'm not entirely sure if this exact error happened before, but there definitely have been times where ASF idling progress has been halted by some error or event. Maybe you could add an option for ASF to restart itself may such a fatal error happen? Since restarting it always resolves the issue.. As I told you, I don't know what caused it exactly, so I don't know how to reproduce it. However, I'll enable debug and try to notice when the error occurs again. . Jesus, I just took a look in the debug folder and I couldn't even load it. There are over half a million files in there... \n\n. I expected some big logs, not thousands of 1kb files. ",
    "Piehthyte": "I know this doesn't answer your question but you can use something like this with an API key.\nhttps://api.steampowered.com/IPlayerService/IsPlayingSharedGame/v0001/?key=%s&steamid=%s&appid_playing=4000\n. ",
    "irmandos": "I believe it is possible to play a game when farming in offline mode.\nI can try to verify this but I am almost certain I did it by accident over the weekend.\n. log - Error.txt\nApologies for the late reply, I was away and did not have access to the machine with the log file.\nWhen I read through the log I can understand that my connection disconnects several times (I only have a 3G connection) but the log ends with the crash for the !stop command.\n. Just letting you know I am running the latest update and have not had any issues.\nThank you @JustArchi !\n. ",
    "Adziej": "I'm in same situation as irmandos.  Account has offline farming activated but I'm logged in and playing other game and still receive card drops. I don't know if it's a bug or what but that's great. :smile: \n. ",
    "lainverse": "I don't have offline farming on any accounts, but I do recall receiving some occasional drops from other games while playing a game like time between bot's attempts to connect and report game activity occasionally counted.\n...on the other hand when I going away from my PC with active game I rarely end up in a situation when ASF takes priority and my real Steam client ends up disconnected and refuse to login until I reboot ASF.\n. Thought so. BTW, is there a way to auto-disconnect when a real client attempts to connect? It doesn't happen often, but it's really annoying to reboot ASF to be able to login. At least I have it on the same PC I using for gaming.\n. I haven't asked to keep it that way while the real client is logged in, but only when real client attempts to login. Because when ASF \"takes priority\" I can't login back into real client until I stop ASF. Alternatively I can close a game and try to restart whole Steam client. Never tried to do so since stopping ASF is much easier for me. It just asks me to type my login credentials again and again until I stop ASF.\n. With all due respect, I do want to auto-trade my normal cards, but I seriously don't want to trade my foils unless they are from a relatively cheap sets. In case of rare sets statemet that all foils are the same is simply not true. Yet again, just look at that set. So, I want to accept or decline such trades myself without risk to loose a card which I may want to sell later. I seriously don't want to create separate profile just to keep cards there and I actually want to receive trades for them. It's just stupid to loose dupe worth more than all the other cards in the set together just because you haven't put it on the market yet. -_- In such case it's better to sell a dupe and manually buy all the other cards than trade it for 1 any other card from the same set.\n. Thanks.\n. Maybe automatic restoring from a backup is an overkill, but if there could be important data, then it would be smart to at least make a backup each time you writing new data there by renaming a file and creating a new one. After all not everyone making backups. It's their own fault, but adding a little bit of safety for users wouldn't hurt.\nI have no idea how this happened, but I do recall occasional ASF reloads during my other activities without any changes in the version. Do you have a code to reload ASF in case of crash? If so, then it could have crashed while updating DB.\n. Do you save a crash log to log.txt ? I haven't found anything like crash info there. Maybe it got rewritten, though. I'm running ASF in a second tab of ConEmu and when it closes the whole tab disappears, so if asf dumps log only into console then I need to change my ConEmu config to keep a tab alive to be able to send a crash log. Is it the case?\nStrange, I don't have a service to keep it alive.\nI don't have have any warning in the log about inability to write a file. There are warning and WTFs, but nothing regarding writing a file. Examples:\n```\n[!] WARNING: StopFarming()  Timed out! -- this is my second bot\n[!] WARNING: IsAnythingToFarm()  Could not get badges information, will try again later!\n[!!] WTF: UrlHeadToUriRetry()  Request failed even after 5 tries, WTF?\n[!!] WTF: UrlGetToHtmlDocumentRetry()  Request failed even after 5 tries, WTF?\n```\n\nIf writing to file failed, then moving the file as backup, writing to backup file, or even doing anything with it will lead to similar problems.\n\nActually no, if attempt to rename a file fail then nothing will happen to a file content since OS doesn't make a copy of it with a new name and removes old file or opens it for write and resets it to 0 size. Also, ASF will know that something went wrong even before attempting to write anything.\n. > Yes, but if ASF was unable to save to file, then I wouldn't be shocked if it was unable to write to the log as well.\nNah, most likely it just got rewritten. I just realized that ASF rewrites a log when it starts. Will try to send you a log if it crashes again before restarting it.\nBTW, usually programs are writing crash logs into separate files instead of dumping everything into the same log or have a bit more elaborate logging options like log level and keep log between restarts (and only remove it when it grows to specific size).\n. Ouch, just got to it myself. Sorry. Normally when some features got replaced by something better that \"better\" thing comes with preset which replicates old feature. Anyway, thanks.\n. Doesn't work for me for some reason:\n2017-07-24 01:52:51|ArchiSteamFarm-8472|WARN|main|UrlPostToContentRetry() Request failed after 5 attempts!\n2017-07-24 01:52:51|ArchiSteamFarm-8472|DEBUG|main|UrlPostToContentRetry() Request failing: https://steamcommunity.com/profiles/76561198024968498/ajaxunpackbooster\nIs it something with steam API (Steam looks fine, though) or something you can fix? Should I open new issue?. It might be connected to:\nCumulative Update for Windows 10 Version 1703 for x64-based Systems (KB4034674).\nI've encountered this error right after installation of this update.. Not sure, I see last modification date on files is from 5:53 this morning and I haven't seen it crashing until recently. Haven't actually seen it working either, so can't be sure. However, it did crashed right after I installed that update and restarted my PC. That's why I wrote \"it might be connected\". You may have it already installed since this update were released at least 2 days ago. Or you might be right and it's completely unrelated.. It happen to be a duplicate of #634. Ok, will try to do so. Right now I can say that both request\nhttps://steamcommunity.com/my/inventory/json/753/6?l=english&start=0\nand\nhttps://steamcommunity.com/my/inventory/json/753/6?l=english&start=10000\nreturns null when inventory ends up blocked.\nAlso, ~30 minutes is enough to wait out block on the inventory.\nAbout 10~15 continuous inventory requests triggers block.. Enabled debug and looking for error to appear.\nBut I think you can simply check if JSON returned by Steam is equal to 'null'.. Here is same error with debug mode enabled:\n2017-09-17 15:15:35|ArchiSteamFarm-22972|INFO|ASF|InitASF() ASF V3.0.2.4 (6e2819a5-ffae-4995-acbe-b0d53688b3cd)\n2017-09-17 15:15:36|ArchiSteamFarm-22972|INFO|ASF|CheckForUpdate() ASF will automatically check for new versions every 1 day.\n2017-09-17 15:15:36|ArchiSteamFarm-22972|INFO|ASF|CheckForUpdate() Checking for new version...\n2017-09-17 15:15:37|ArchiSteamFarm-22972|INFO|ASF|CheckForUpdate() Local version: 3.0.2.4 | Remote version: 3.0.2.4\n2017-09-17 15:15:38|ArchiSteamFarm-22972|INFO|main|Start() Starting...\n2017-09-17 15:15:38|ArchiSteamFarm-22972|INFO|main|Connect() Connecting...\n2017-09-17 15:15:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() ServerList | Resolving server list\n2017-09-17 15:15:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() ServerList | Resolved 160 servers\n2017-09-17 15:15:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() ServerList | Next server candidiate: Unspecified/CM03-FRA.cm.steampowered.com:443 (WebSocket)\n2017-09-17 15:15:38|ArchiSteamFarm-22972|INFO|shadow|Start() Starting...\n2017-09-17 15:15:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Connected to wss://cm03-fra.cm.steampowered.com/cmsocket/\n2017-09-17 15:15:38|ArchiSteamFarm-22972|INFO|main|OnConnected() Connected to Steam!\n2017-09-17 15:15:38|ArchiSteamFarm-22972|INFO|main|OnConnected() Logging in...\n2017-09-17 15:15:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientLogon (Proto: True)\n2017-09-17 15:15:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 294 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 754 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientLogOnResponse (751) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientAccountInfo (768) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|INFO|main|OnLoggedOn() Successfully logged on!\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientAccountInfo (768) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientEmailAddrInfo (5456) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientFriendsList (767) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|INFO|main|Init() Logging in to ISteamUserAuth...\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientRequestFriendData (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 4399 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientFriendsGroupsList (5553) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientChangeStatus (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPlayerNicknameList (5587) (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 51 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientChangeStatus (Proto: True)\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 51 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1014 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 416 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientLicenseList (780) (Proto: True)\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 301 bytes.\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientUpdateGuestPassesList (798) (Proto: False)\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientWalletInfoUpdate (5528) (Proto: True)\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientGameConnectTokens (779) (Proto: True)\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientSessionToken (850) (Proto: True)\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientIsLimitedAccount (5430) (Proto: True)\n2017-09-17 15:15:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientCMList (783) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServerList (880) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|INFO|main|Init() Success!\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientRequestFriendData (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 33 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|INFO|main|IsAnythingToFarm() Checking first badge page...\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientRequestedClientStats (5480) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServerList (880) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientVACBanStatus (782) (Proto: False)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 773 bytes.\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 891 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 177 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaChangeResponse (5584) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaChangeResponse (5584) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientNewLoginKey (5463) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 63 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientNewLoginKeyAccepted (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 28 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 148 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 94 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 148 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 395 bytes.\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientMarketingMessageUpdate2 (5510) (Proto: False)\n2017-09-17 15:15:44|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 66 bytes.\n2017-09-17 15:15:44|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:44|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|INFO|shadow|Connect() Connecting...\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() ServerList | Next server candidiate: Unspecified/CM03-FRA.cm.steampowered.com:27020 (WebSocket)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 164 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Connected to wss://cm03-fra.cm.steampowered.com:27020/cmsocket/\n2017-09-17 15:15:45|ArchiSteamFarm-22972|INFO|shadow|OnConnected() Connected to Steam!\n2017-09-17 15:15:45|ArchiSteamFarm-22972|INFO|shadow|OnConnected() Logging in...\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientLogon (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 303 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|INFO|main|IsAnythingToFarm() Checking other badge pages...\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 389 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientLogOnResponse (751) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientAccountInfo (768) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|INFO|shadow|OnLoggedOn() Successfully logged on!\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|INFO|shadow|Init() Logging in to ISteamUserAuth...\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientAccountInfo (768) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientEmailAddrInfo (5456) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientChangeStatus (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientFriendsList (767) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 46 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientChangeStatus (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientRequestFriendData (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 46 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 70 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientFriendsGroupsList (5553) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientVACBanStatus (782) (Proto: False)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPlayerNicknameList (5587) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 457 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientLicenseList (780) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 381 bytes.\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientUpdateGuestPassesList (798) (Proto: False)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientWalletInfoUpdate (5528) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientGameConnectTokens (779) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientSessionToken (850) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientCMList (783) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServerList (880) (Proto: True)\n2017-09-17 15:15:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientRequestedClientStats (5480) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServerList (880) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientSystemIM (726) (Proto: False)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientSystemIM (726) (Proto: False)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientSystemIM (726) (Proto: False)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientSystemIM (726) (Proto: False)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 149 bytes.\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 296 bytes.\n2017-09-17 15:15:46|ArchiSteamFarm-22972|INFO|shadow|Init() Success!\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientRequestFriendData (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 33 bytes.\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 109 bytes.\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 166 bytes.\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaChangeResponse (5584) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaChangeResponse (5584) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientNewLoginKey (5463) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 519 bytes.\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientNewLoginKeyAccepted (Proto: True)\n2017-09-17 15:15:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 27 bytes.\n2017-09-17 15:15:46|ArchiSteamFarm-22972|INFO|shadow|IsAnythingToFarm() Checking first badge page...\n2017-09-17 15:15:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 89 bytes.\n2017-09-17 15:15:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 153 bytes.\n2017-09-17 15:15:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:48|ArchiSteamFarm-22972|INFO|shadow|StartFarming() We don't have anything to idle on this account!\n2017-09-17 15:15:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientGamesPlayed (Proto: True)\n2017-09-17 15:15:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 165 bytes.\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 48 bytes.\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientIsLimitedAccount (5430) (Proto: True)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 399 bytes.\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientMarketingMessageUpdate2 (5510) (Proto: False)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:15:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:15:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:15:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:15:55|ArchiSteamFarm-22972|INFO|main|StartFarming() We have a total of 2 games (5 cards) left to idle (~2 hours, 30 minutes remaining)...\n2017-09-17 15:15:55|ArchiSteamFarm-22972|INFO|main|Farm() Chosen idling algorithm: Simple\n2017-09-17 15:15:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientPICSProductInfoRequest (Proto: True)\n2017-09-17 15:15:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 43 bytes.\n2017-09-17 15:15:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 112 bytes.\n2017-09-17 15:15:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientServersAvailable (5501) (Proto: True)\n2017-09-17 15:15:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 166 bytes.\n2017-09-17 15:15:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 1024 bytes.\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 462 bytes.\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPICSProductInfoResponse (8904) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|INFO|main|FarmSolo() Now idling: 258910 (Citizens of Earth)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientGamesPlayed (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientGamesPlayed (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 65 bytes.\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 146 bytes.\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientGameConnectTokens (779) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientConcurrentSessionsBase (9600) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientGameConnectTokens (779) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 171 bytes.\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 171 bytes.\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:15:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 96 bytes.\n2017-09-17 15:15:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:15:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ServiceMethod (146) (Proto: True)\n2017-09-17 15:15:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:15:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:15:59|ArchiSteamFarm-22972|INFO|main|ShouldFarm() Idling status for 258910 (Citizens of Earth): 2 cards remaining\n2017-09-17 15:15:59|ArchiSteamFarm-22972|INFO|main|Farm() Still idling: 258910 (Citizens of Earth)\n2017-09-17 15:16:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 65 bytes.\n2017-09-17 15:16:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:16:02|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 164 bytes.\n2017-09-17 15:16:02|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:02|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:03|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:03|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 151 bytes.\n2017-09-17 15:16:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 151 bytes.\n2017-09-17 15:16:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:06|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 151 bytes.\n2017-09-17 15:16:06|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:06|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 142 bytes.\n2017-09-17 15:16:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:16:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:16:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 204 bytes.\n2017-09-17 15:16:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:16|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:16|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 150 bytes.\n2017-09-17 15:16:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 165 bytes.\n2017-09-17 15:16:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 162 bytes.\n2017-09-17 15:16:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:20|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 145 bytes.\n2017-09-17 15:16:20|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:20|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 65 bytes.\n2017-09-17 15:16:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:16:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 177 bytes.\n2017-09-17 15:16:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 152 bytes.\n2017-09-17 15:16:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:25|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:25|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:26|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 150 bytes.\n2017-09-17 15:16:26|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:26|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 155 bytes.\n2017-09-17 15:16:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 177 bytes.\n2017-09-17 15:16:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 152 bytes.\n2017-09-17 15:16:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 65 bytes.\n2017-09-17 15:16:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:16:34|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:34|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:16:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:16:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:16:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:16:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:16:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:16:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:50|ArchiSteamFarm-22972|WARN|main|UrlGetToJObjectRetry() Request failed after 5 attempts!\n2017-09-17 15:16:50|ArchiSteamFarm-22972|DEBUG|main|UrlGetToJObjectRetry() Request failing: https://steamcommunity.com/my/inventory/json/753/6?l=english&start=6000\n2017-09-17 15:16:50|ArchiSteamFarm-22972|WARN|main|ShouldAcceptTrade() inventory is empty!\n2017-09-17 15:16:50|ArchiSteamFarm-22972|INFO|main|ParseTrade() Ignoring trade: 2497816980\n2017-09-17 15:16:52|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:52|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:56|ArchiSteamFarm-22972|WARN|shadow|UrlGetToJObjectRetry() Request failed after 5 attempts!\n2017-09-17 15:16:56|ArchiSteamFarm-22972|DEBUG|shadow|UrlGetToJObjectRetry() Request failing: https://steamcommunity.com/my/inventory/json/753/6?l=english&trading=1&start=0\n2017-09-17 15:16:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:16:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:16:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 165 bytes.\n2017-09-17 15:16:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:16:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:16:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:16:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientFriendProfileInfo (Proto: True)\n2017-09-17 15:16:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 40 bytes.\n2017-09-17 15:16:58|ArchiSteamFarm-22972|TRACE|shadow|ExploreDiscoveryQueue() Starting...\n2017-09-17 15:16:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 216 bytes.\n2017-09-17 15:16:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:16:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientFriendProfileInfoResponse (5536) (Proto: True)\n2017-09-17 15:16:59|ArchiSteamFarm-22972|TRACE|shadow|ExploreDiscoveryQueue() Done!\n2017-09-17 15:17:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 188 bytes.\n2017-09-17 15:17:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 51 bytes.\n2017-09-17 15:17:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:17:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 51 bytes.\n2017-09-17 15:17:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:17:06|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:06|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 151 bytes.\n2017-09-17 15:17:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 171 bytes.\n2017-09-17 15:17:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:16|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:17:16|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:16|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:17:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 182 bytes.\n2017-09-17 15:17:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 63 bytes.\n2017-09-17 15:17:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:17:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 162 bytes.\n2017-09-17 15:17:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 176 bytes.\n2017-09-17 15:17:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 158 bytes.\n2017-09-17 15:17:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:32|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 66 bytes.\n2017-09-17 15:17:32|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:32|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:17:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:37|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:37|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 67 bytes.\n2017-09-17 15:17:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:17:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 145 bytes.\n2017-09-17 15:17:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:47|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 167 bytes.\n2017-09-17 15:17:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:51|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:51|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:52|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 221 bytes.\n2017-09-17 15:17:52|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:52|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:17:52|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:17:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:17:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:17:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 145 bytes.\n2017-09-17 15:17:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:17:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 62 bytes.\n2017-09-17 15:18:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:18:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 63 bytes.\n2017-09-17 15:18:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:18:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 164 bytes.\n2017-09-17 15:18:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:11|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 143 bytes.\n2017-09-17 15:18:11|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:11|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:13|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:13|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 152 bytes.\n2017-09-17 15:18:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 145 bytes.\n2017-09-17 15:18:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 155 bytes.\n2017-09-17 15:18:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:29|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 157 bytes.\n2017-09-17 15:18:29|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:29|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 169 bytes.\n2017-09-17 15:18:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:44|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 159 bytes.\n2017-09-17 15:18:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 148 bytes.\n2017-09-17 15:18:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 179 bytes.\n2017-09-17 15:18:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:53|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 165 bytes.\n2017-09-17 15:18:53|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:53|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:18:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:18:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientFriendProfileInfo (Proto: True)\n2017-09-17 15:18:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 40 bytes.\n2017-09-17 15:18:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 216 bytes.\n2017-09-17 15:18:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:18:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientFriendProfileInfoResponse (5536) (Proto: True)\n2017-09-17 15:18:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:18:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:19:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:19:02|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 169 bytes.\n2017-09-17 15:19:02|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:02|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:03|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:03|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 66 bytes.\n2017-09-17 15:19:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:19:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:07|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:08|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 147 bytes.\n2017-09-17 15:19:08|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:08|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 148 bytes.\n2017-09-17 15:19:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 159 bytes.\n2017-09-17 15:19:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 151 bytes.\n2017-09-17 15:19:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 179 bytes.\n2017-09-17 15:19:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:16|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:16|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 140 bytes.\n2017-09-17 15:19:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 145 bytes.\n2017-09-17 15:19:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:23|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 169 bytes.\n2017-09-17 15:19:23|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:23|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:25|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:25|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 179 bytes.\n2017-09-17 15:19:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:29|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 62 bytes.\n2017-09-17 15:19:29|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:29|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:19:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 166 bytes.\n2017-09-17 15:19:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:32|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 65 bytes.\n2017-09-17 15:19:32|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:32|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:19:34|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:34|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:35|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 143 bytes.\n2017-09-17 15:19:35|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:35|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 154 bytes.\n2017-09-17 15:19:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 159 bytes.\n2017-09-17 15:19:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 183 bytes.\n2017-09-17 15:19:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 62 bytes.\n2017-09-17 15:19:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:43|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:19:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 157 bytes.\n2017-09-17 15:19:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:52|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:52|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:53|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 158 bytes.\n2017-09-17 15:19:53|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:53|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 143 bytes.\n2017-09-17 15:19:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:19:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:19:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:19:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:19:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:19:57|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:20:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 150 bytes.\n2017-09-17 15:20:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:01|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:06|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:06|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:20:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:12|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:20:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 148 bytes.\n2017-09-17 15:20:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:19|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 144 bytes.\n2017-09-17 15:20:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:21|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:24|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 150 bytes.\n2017-09-17 15:20:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:28|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 152 bytes.\n2017-09-17 15:20:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:30|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 147 bytes.\n2017-09-17 15:20:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:33|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 62 bytes.\n2017-09-17 15:20:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:20:37|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 182 bytes.\n2017-09-17 15:20:37|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:37|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:37|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:37|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 251 bytes.\n2017-09-17 15:20:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 150 bytes.\n2017-09-17 15:20:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:38|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 50 bytes.\n2017-09-17 15:20:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientSessionToken (850) (Proto: True)\n2017-09-17 15:20:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 165 bytes.\n2017-09-17 15:20:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:41|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 50 bytes.\n2017-09-17 15:20:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientSessionToken (850) (Proto: True)\n2017-09-17 15:20:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:46|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 66 bytes.\n2017-09-17 15:20:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:20:51|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:51|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:20:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:20:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:20:55|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:20:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:20:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:56|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:20:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 157 bytes.\n2017-09-17 15:20:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:20:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 168 bytes.\n2017-09-17 15:20:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:20:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:21:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:02|ArchiSteamFarm-22972|INFO|main|ShouldFarm() Idling status for 258910 (Citizens of Earth): 2 cards remaining\n2017-09-17 15:21:02|ArchiSteamFarm-22972|INFO|main|Farm() Still idling: 258910 (Citizens of Earth)\n2017-09-17 15:21:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:04|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 148 bytes.\n2017-09-17 15:21:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:21:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:09|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 66 bytes.\n2017-09-17 15:21:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:10|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:13|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:13|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 149 bytes.\n2017-09-17 15:21:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:14|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:21:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 68 bytes.\n2017-09-17 15:21:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 68 bytes.\n2017-09-17 15:21:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:15|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:18|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 118 bytes.\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 67 bytes.\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:22|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:27|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 64 bytes.\n2017-09-17 15:21:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:31|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 62 bytes.\n2017-09-17 15:21:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:36|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 142 bytes.\n2017-09-17 15:21:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:39|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:21:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:40|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 65 bytes.\n2017-09-17 15:21:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:42|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:45|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 149 bytes.\n2017-09-17 15:21:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:48|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:21:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 166 bytes.\n2017-09-17 15:21:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-17 15:21:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:49|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:50|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 65 bytes.\n2017-09-17 15:21:50|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:21:50|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-17 15:21:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:54|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:21:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-17 15:21:58|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Sent 22 bytes.\n2017-09-17 15:22:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() WebSocketContext | Recieved 148 bytes.\n2017-09-17 15:22:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-17 15:22:00|ArchiSteamFarm-22972|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True). Ok, installed latest build, will look how it goes.\n...or I didn't. I think I've used that build, but URL still looks like this:\nhttps://steamcommunity.com/my/inventory/json/753/6?l=english&trading=1&start=0\nBesides a few libraries everything were exactly the same.\nI've downloaded ASF-win-x64.zip from here:\nhttps://ci.appveyor.com/project/JustArchi/archisteamfarm/build/4565-master/artifacts. Ooops! You are right. Fixed, now it looks right.\nArchiSteamFarm-15376|INFO|ASF|InitASF() ASF V3.0.2.5 (77210f3d-d03f-47ea-9b61-25ab9d543b73)\nThanks.\nBTW, will it automatically update to 3.0.2.5 when it will be released or will it skip it?. Yesterday encountered empty inventory message once, but without any extra data even though it was running in the debug mode.\nAlso, made adjustments to ASF.json, to make it similar to the default one:\n{\n    \"AutoUpdates\": true,\n    \"AutoRestart\": true,\n    \"BackgroundGCPeriod\": 0,\n    \"ConnectionTimeout\": 60,\n    \"CurrentCulture\": null,\n    \"Debug\": false,\n    \"Headless\": false,\n    \"UpdateChannel\": 2,\n    \"SteamProtocol\": 6,\n    \"SteamOwnerID\": *,\n    \"IdleFarmingPeriod\": 8,\n    \"AccountPlayingDelay\": 5,\n    \"ForceHttp\": false,\n    \"HttpTimeout\": 60,\n    \"IPCHost\": \"127.0.0.1\",\n    \"IPCPort\": 1242,\n    \"LogToFile\": true,\n    \"Statistics\": true,\n    \"HackIgnoreMachineID\": false,\n    \"SteamProtocols\": 7,\n    \"MaxFarmingTime\": 10,\n    \"MaxTradeHoldDuration\": 15,\n    \"FarmingDelay\": 15,\n    \"GiftsLimiterDelay\": 1,\n    \"InventoryLimiterDelay\": 3,\n    \"LoginLimiterDelay\": 10,\n    \"Blacklist\": [\n        267420,\n        303700,\n        335590,\n        368020,\n        425280\n    ]\n}. I do agree with that, but it doesn't looks like a quirk to me. Now I can access trades and inventory just fine, but all trades ends up with \"inventory is empty\" error.\nExample without debug:\n7-09-18 15:47:58|ArchiSteamFarm-16272|INFO|main|Farm() Stopped idling: 504000 (Endless Fables: The Minotaur's Curse)\n2017-09-18 15:47:58|ArchiSteamFarm-16272|INFO|main|OnDisconnected() Reconnecting...\n2017-09-18 15:47:58|ArchiSteamFarm-16272|INFO|main|Connect() Connecting...\n2017-09-18 15:47:58|ArchiSteamFarm-16272|INFO|main|OnConnected() Connected to Steam!\n2017-09-18 15:47:59|ArchiSteamFarm-16272|INFO|main|OnConnected() Logging in...\n2017-09-18 15:47:59|ArchiSteamFarm-16272|INFO|main|StopFarming() Idling stopped!\n2017-09-18 15:47:59|ArchiSteamFarm-16272|INFO|main|OnLoggedOn() Successfully logged on!\n2017-09-18 15:47:59|ArchiSteamFarm-16272|INFO|main|Init() Logging in to ISteamUserAuth...\n2017-09-18 15:48:00|ArchiSteamFarm-16272|INFO|main|Init() Success!\n2017-09-18 15:48:01|ArchiSteamFarm-16272|INFO|main|IsAnythingToFarm() Checking first badge page...\n2017-09-18 15:48:04|ArchiSteamFarm-16272|INFO|main|IsAnythingToFarm() Checking other badge pages...\n2017-09-18 15:48:19|ArchiSteamFarm-16272|INFO|main|StartFarming() We have a total of 3 games (10 cards) left to idle (~5 hours remaining)...\n2017-09-18 15:48:19|ArchiSteamFarm-16272|INFO|main|Farm() Chosen idling algorithm: Simple\n2017-09-18 15:48:20|ArchiSteamFarm-16272|INFO|main|FarmSolo() Now idling: 504000 (Endless Fables: The Minotaur's Curse)\n2017-09-18 15:48:23|ArchiSteamFarm-16272|INFO|main|ShouldFarm() Idling status for 504000 (Endless Fables: The Minotaur's Curse): 3 cards remaining\n2017-09-18 15:48:23|ArchiSteamFarm-16272|INFO|main|Farm() Still idling: 504000 (Endless Fables: The Minotaur's Curse)\n2017-09-18 15:49:41|ArchiSteamFarm-16272|INFO|shadow|ShouldFarm() Idling status for 527420 (Demon Hunter 3: Revelation): 3 cards remaining\n2017-09-18 15:49:41|ArchiSteamFarm-16272|INFO|shadow|Farm() Still idling: 527420 (Demon Hunter 3: Revelation)\n2017-09-18 15:52:37|ArchiSteamFarm-16272|WARN|main|ShouldAcceptTrade() inventory is empty!\n2017-09-18 15:52:37|ArchiSteamFarm-16272|INFO|main|ParseTrade() Ignoring trade: 2507986178\n2017-09-18 15:55:16|ArchiSteamFarm-16272|WARN|main|ShouldAcceptTrade() inventory is empty!\n2017-09-18 15:55:16|ArchiSteamFarm-16272|INFO|main|ParseTrade() Ignoring trade: 2507986178\n2017-09-18 15:56:12|ArchiSteamFarm-16272|WARN|main|ShouldAcceptTrade() inventory is empty!\n2017-09-18 15:56:12|ArchiSteamFarm-16272|INFO|main|ParseTrade() Ignoring trade: 2507997903\n2017-09-18 15:58:03|ArchiSteamFarm-16272|WARN|main|ShouldAcceptTrade() inventory is empty!\n2017-09-18 15:58:03|ArchiSteamFarm-16272|INFO|main|ParseTrade() Ignoring trade: 2507997903. I don't have any other bots, but I have Enhanced Steam and Steam Inventory Helper extensions in the browser. As I know they do nothing as long as I don't visit Steam pages, though. However, I think there is an issue to check in the debug mode.\nHere:\n2017-09-18 16:04:15|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:16|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:16|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:19|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:19|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:20|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:24|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:24|ArchiSteamFarm-22876|DEBUG|main|UrlRequest() System.OperationCanceledException: The operation was canceled.\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Threading.Tasks.RendezvousAwaitable`1.GetResult()\n   at System.Net.Http.WinHttpResponseStream.<CopyToAsyncCore>d__18.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Net.Http.NoWriteNoSeekStreamContent.<>c.<SerializeToStreamAsync>b__4_0(Task t, Object s)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Net.Http.HttpContent.<LoadIntoBufferAsyncCore>d__48.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__58.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.WebBrowser.<UrlRequest>d__35.MoveNext() in C:\\projects\\archisteamfarm\\ArchiSteamFarm\\WebBrowser.cs:line 474 \n2017-09-18 16:04:29|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:29|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:29|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:32|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientFriendProfileInfo (Proto: True)\n2017-09-18 16:04:33|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:33|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientFriendProfileInfoResponse (5536) (Proto: True)\n2017-09-18 16:04:33|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:36|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:36|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:37|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:37|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:38|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:38|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:38|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:39|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:39|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:42|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:44|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:44|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:46|ArchiSteamFarm-22876|WARN|main|ShouldAcceptTrade() inventory is empty!\n2017-09-18 16:04:46|ArchiSteamFarm-22876|INFO|main|ParseTrade() Ignoring trade: 2507997903\n2017-09-18 16:04:47|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:48|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:48|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientClanState (822) (Proto: True)\n2017-09-18 16:04:50|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True)\n2017-09-18 16:04:50|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: ClientPersonaState (766) (Proto: True)\n2017-09-18 16:04:51|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | Sent -> EMsg: ClientHeartBeat (Proto: True)\n2017-09-18 16:04:53|ArchiSteamFarm-22876|DEBUG|ASF|WriteLine() CMClient | <- Recv'd EMsg: Multi (1) (Proto: True). I'd like to manually check URL queried by ASF in my browser. Could you please include it into debug mode or could you please tell which AppID and SteamCommunityContextID are used in the URL?\nI've tried 570/2 and 440/2 which I found on the web with this one:\nhttp://steamcommunity.com/inventory/76561198024968498/AppID/SteamCommunityContextID?l=english&count=5000\nBut it looks like my DOTA2 and TF2 inventories.. Well, it looks fine in the browser. Occasionally displays error page regarding community not being available instead of JSON or just null, but I certainly can go through the whole inventory using last_assetid property and &start_assetid= in the URL.\nHowever, all trades in ASF's log ends up with ShouldAcceptTrade() inventory is empty!. :( . Thanks, downloaded, installed, 30Mb log from start.\nAwaiting for error to reproduce. It seems like I have two annoying bots which periodically sends me trash trades.. Ok, 4568-master works fine for me. Except for absurdly large log. Rolling back go 4567-master to check were changes (besides logging) in 4568 necessary.. True, updated to 3.0.2.5. Thanks.. In my case issue disappeared. So, I think it's fixed for now. Thank you.. Well, I have 3 cards and never had more cards from this game, and hadn't sent my cards to anyone outside of 1:1 same set good or neutral trades for years, so there couldn't be multiple duplicated of each of these 3. That's really strange.. I'll try, but they are a bit pricy. :(. Well, I'll update this bug if manage to reproduce.. Thanks! I wasn't sure I should report this without clear steps to reproduce. Now I'm glad that I did.. Yes, it's slight optimization. Not a bug. Why not fix?. Oh, thanks for the explanation then. I thought this spam of messages meant ASF attempted to reload badges page on each license.. ",
    "SakhJack": "When I try to use it, it just says \"Request failed even after 5 tries, WTF?\"\n. ",
    "exander77": "You are correct. Somehow part of the mono become corrupted or uninstalled. Fixed it by reinstalling whole mono-complete.\n. ",
    "thunderpants": "These 2 can be added from steamdb:\n344041 | Voxelized Windows 64-Bit \n344042 | Voxelized Windows 32-Bit\nI have no idea what that means though ,i'm not in the steam client atmo.\n. i used that gui program once when  ASF wouldn't load up.\nMight have been a different reason at the time but it did the job.\nDon't need to use it now though.\nOn 7/23/16, hombrepac notifications@github.com wrote:\n\n@lainverse This is probably a permissions issue. Had the same thing happen\nto me. If you are using Linux, then it might be a packaging issue, where you\ndon't have the permissions to write to the asf/config folder and files\ninside it.\n@JustArchi I couldn't find it in the documentation. Is there a way to\nspecify to ASF the path to the config files if you want to have them in a\nfolder insider your user profile, instead of the \"config\" folder of the main\napp? This could very well allow to avoid the issue.\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/JustArchi/ArchiSteamFarm/issues/255#issuecomment-234742280\n. \n",
    "glabella": "it works thanks\n. ",
    "darkmos": "As a developer I understand your will of refactoring and rewriting your code when part of it rely on deprecated libraries, it's just that you're removing perfectly working functionality that provide added value for your end users. \nASF 2FA solo is very useful when you setup bots on a remote server (even if it's the Pi2 sitting on my desk) as you only have to enter a phone number and the SMS response from the command line once. Having to use a third party authenticator and export - import the config into ASF is a huge step back imho. \nLet's suppose I import existing ASF 2.0 format to SDA or winauth, will it provoke the 7 - 15 days restriction period that occurs when linking a new authenticator or will it act as a clone?\n. After giving it some thoughts it's fine for me as long as it keep generating tokens and automate confirmations which seems to be the intention. If it can serve additional users then everyone benefit.\nAs far as I'm concerned I successfully imported ASF's bot.db files to SDA by renaming them to steamid.maFile and removing the 2 first fields from the json structure (+last bracket) in order to match SDA native structure. Only downside is that the files remains unencrypted in SDA (seems only possible when configuring a new account?) so the security concern mentioned by Archi is simply transferred to another application. I can still 7-zip + encrypt the SDA folder as I will only need it for recovery purposes though :)\n. I also think it would be useful for badge crafters: sometimes I get cards from my secondary bots with only 1 or 2 to go for the badge but still have 1000+ games to farm on my main account so I have to keep track manually on which one to farm first via the !play command without forgetting to !resume or !play another game when all cards dropped. \nThe PreferredFarmingOrder parameter would be an elegant way to do so :)\n. Downloaded 2.1.3.6 (still says 2.1.3.5 in the logs), added \"FarmingOrder\": 3 to my bot's json and it started farming with: 2016-07-30 22:00:13|INFO|darkmos1|ShouldFarm() Status for 375460: 1 cards remaining\nSo seems it's working as foreseen but maybe it's resuming where he stopped, I'll monitor which game he takes after this :)\n. Seems it farmed all my games where 1 or 2 cards were still pending: http://pastebin.com/HKdK19gg\nThanks to both of you and @stackia for this update ;)\nConcerning 2.1.3.6 no regression detected so far but didn't test the new redeem behaviour as I have no spare keys laying around. I like the card count in !status answer in chat: Bot darkmos1 is farming appIDs: 231740 and has a total of 853 games left, 3195 cards drop remaining to farm. :D\n. ok :)\n. ",
    "ehajo": "Sorry for unclear writing. I mean real 1:1 Bot functionality like:\nA A A A B in my inventory\nTrade offer: A for B\nInventory after trade: A A A A A.\n. ",
    "leogallego": "@lainverse This is probably a permissions issue. Had the same thing happen to me. If you are using Linux, then it might be a packaging issue, where you don't have the permissions to write to the asf/config folder and files inside it.\n@JustArchi I couldn't find it in the documentation. Is there a way to specify to ASF the path to the config files if you want to have them in a folder insider your user profile, instead of the \"config\" folder of the main app? This could very well allow to avoid the issue.\n. @JustArchi that would be great indeed. Do you want me to create an issue about it? So you can put it in the queue for when you have time? It would provide a very nice ground for allowing multiple users running ASF from the same machine without sharing their Steam details.\n. Excellent , thank you. I will be sure to check it out once the pre-release is out.\n. ",
    "reeporter": "Hi \napt-get install ca-certificates\nca-certificates are already installed\nmozroots --import --sync\nNo certificates were found.\nthe error is beeing thrown randomly over several bot instances. \nsometimes all of them work out of the box\nsomtimes this error is thrown and some instances wont run\n. I have tested it with 2 mono Versions\nMono JIT compiler version 4.0.2 (Debian 4.0.2.5+dfsg-2~rpi1)\nMono JIT compiler version 4.5.2 (master/6b3a592 Mi 15. Jun 05:12:32 CEST 2016)\n4.0.2 seems to work smoothly\n4.5.2 looks like it has an issue with the encryption part of the http client\nI dont know if its worth the trouble to recompile mono again but i am gonna do it in the next days...\nThanks Archi\n. This is the wrong place for support.\nGo to the steamgroup http://steamcommunity.com/groups/ascfarm/discussions/1/405691491117724812/\nthen ask your question again. \n*edit \nPlease read the faq about support i posted. Hello this is offtopic and has nothing to do with ASF. I guess it fits pretty good.\n@judgegr\n\nLike i said i've participated in many projects over my 25 years of professional life\n\nIn all these projects you participated you havent learned a key part of social skills.\nSocial Skills Accepting \"No\"\nSocial skills lesson one. \n\nLook at the person. (Or what he has written)\nSay okay. \nStay calm.\n~~If you disagree, return to the subject later in a respectful manner.~~\n\nAfter all you can still fork the project and implement the features you are talking about. \nWhen you are ready you can ask again for the feature to get merged into ASF.\n. @judgegr \nEveryone has a limited ammount of time. \nI dont know archi personally but i am sure that he has a life with work, academic studies, friends and so on. \nIs it not enough that you have been told that you can already use a custom Nlog.config to achieve what you want?\n\nThis is once again something that is already possible and done much better - you already can log specific messages from specific bots on specific levels, why would you need account name/nickname provided by Steam if you already have bot names available, that are even being used as logger names?\n\nI have the strong feeling that this more about arguing than about making a suggestion for a reasonable feature. \nI know people that can not stop arguing after everything is said.\nJust get to the point and stop wasting (others) precious time.\n. @judgegr \nI have another one for you.\n \"Yeah but, no but...\"\nWatch it and pay attention.. Archi already said\n\nI still put it on todo list or add right away\n\nHonestly there is no reason to continue this. . learn to stop before making a clown of yourself. I think yes\n\n(1)\n\n2017-03-22 16:06 GMT+01:00 \u0141ukasz Domeradzki :\n\n> While badge level can be read from badge page, which is good because it's\n> basically free request, I don't see cards number anywhere, and I'm\n> definitely not going to fetch inventory just to decide how many cards given\n> user has. Is there any place on badge page when you can read how many cards\n> you have?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> ,\n> or mute the thread\n> \n> .\n>\n. Oh you meant the badge summary page where you see all availible badges...\n\nI only see it on the specific badge page for a game\n\n2017-03-22 16:15 GMT+01:00 \u0141ukasz Domeradzki :\n\n> Nice, so it is possible from that page, but I doubt this info is anywhere\n> on badge page, and askin for 200+ pages if somebody has 200 games to idle\n> is not going to end good.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> ,\n> or mute the thread\n> \n> .\n>\n. I dont know much about all of this but give my two cents.\nMaybe you dont need the badge page for counting the cards.\nSteampi has an endpoint that returns all cards, but i think you are using\nit already and know much better about it.\n\nhttp://steamcommunity.com/id/STEAMID/inventory/json/753/6\n\nYou could additionaly parse that data to count cards.\nMaybe also cache them on disk?\n\n\n\n2017-03-22 16:19 GMT+01:00 7-elephant :\n\n> Example in my each badge page: http://i.imgur.com/XqPANLC.png\n> And I think request 200+ pages is not good too.\n>\n> Maybe implement BadgeLevels first and hold OwnedCards to find more\n> solutions.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> ,\n> or mute the thread\n> \n> .\n>\n. I have a big list of known scammers and other people who try to abuse bot mechanics for profit.\n\nIt would make it easy to share that list with others, import it into the bot accounts.\n\n\n. Trade bots that have match everything enabled...\n\nMost people out there trade with common sense and respect for others. \nThere are some people that only make profit with cards and have 10000+ cards.\n. I was talking to Menels about that too and also thought it might be not too complex.\nBut i am not a coder thats your expertize.\nI realy appreciate your work!. I think Archi approach here is better than just completly blocking those\nusers.\nSometimes I mistakenly block users. In that case they can still write on my\nprofile and make an appeal.\n\nAnd you can still block them manuly if they are that bad.\n\n2017-03-30 9:10 GMT+02:00 MikeLund :\n\n> @Ne3tCode  The background for this is to\n> help people who run 1:1 bots with MatchEverything,so their inventories\n> doesn't end up looking like this: https://steamcommunity.com/\n> profiles/76561198305483770/gamecards/568650\n> They want to offer diversity in cards for the community to craft sets\n> with, not so other people can make a profit. They see obvious abuse, simple\n> to blacklist them.\n> If you block communication someone, they can't post on your profile to\n> \"appeal\" the block either. So Archi's change works great for this.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> ,\n> or mute the thread\n> \n> .\n>\n.",
    "Zuko": "It's possible to browse \"Discovery Queue\" from ASF?\n. Ok, farming isn't purpose of ArchiSteamFarm good to know\n. GL using this on many accounts\n. @frozenpandaman I have many accounts from 2011 (coal) and I just wanted to use them. I know you wanted to help (thanks for that) but I already know about that script and it's almost useless for  me.\n. Edited.\nGist below.. Ups: https://gist.github.com/Zuko/1a6d5f0855ff77836c822eeef65b64a6. CentOS 7 x64. ",
    "frozenpandaman": "@Zuko https://www.reddit.com/r/Steam/comments/4pqcyi/update_userscript_to_automatically_go_through_a/\n. @Zuko It's a fast way to do it, at least on your main account, if you're signed in in a browser. I was just trying to help. Maybe creating dozens of Steam accounts and selling $0.10 cards on each isn't the best way to make money?\n. @Zuko Makes sense. :)\n@Pandiora On the main page you can type in the number of queues to run which complete in about 5 seconds. Insignificant difference if any. Didn't know xPaw had a script it for it, though \u2013 cool.\n. @lookerinside https://www.reddit.com/r/Steam/comments/4pqcyi/update_userscript_to_automatically_go_through_a/\n. ",
    "MaRRk0": "@JustArchi \n!statusall and !api \nDon't work commands\n. This function is very necessary to me and my friend\nBut I do not know C#  ...\nI ask for help.... I know Developer of this game.\nDeveloper create this game only for Cards..... renamed program does not start. I'm using proxifier, I need to rename exactly ArchiSteamFarm.exe, this is a big problem for me now. In ASF v2 it was possible to rename. ",
    "blameitonlag": "@JustArchi Local version: 2.1.0.7 | Remote version: 2.1.0.7\n\n. the result same whether i send to 2 and 3. \n. 26/06/2016 19.33.40 [] INFO: CheckForUpdate()  Checking new version...\n26/06/2016 19.33.42 [] INFO: CheckForUpdate()  Local version: 2.1.0.7 | Remote version: 2.1.0.7\n26/06/2016 19.33.42 [] INFO: CheckForUpdate()  ASF will automatically check for new versions every 24 hours\n26/06/2016 19.33.42 [] INFO: RefreshCMs()  Refreshing list of CMs...\n26/06/2016 19.33.43 [] INFO: RefreshCMs()  Success!\n26/06/2016 19.33.43 [!!] ERROR: Load()  botDatabase is null!\n26/06/2016 19.33.43 [!!] ERROR: .ctor()  Bot database could not be loaded, refusing to start this bot instance!\n26/06/2016 19.33.44 [] INFO: Start()  Starting...\n26/06/2016 19.33.44 [] INFO: OnConnected()  Connected to Steam!\n26/06/2016 19.33.44 [] INFO: OnConnected()  Logging in...\n26/06/2016 19.33.45 [] INFO: OnLoggedOn()  Successfully logged on!\n26/06/2016 19.33.46 [] INFO: Init()  Logging in to ISteamUserAuth...\n26/06/2016 19.33.48 [] INFO: Init()  Success!\n26/06/2016 19.33.49 [] INFO: IsAnythingToFarm()  Checking badges...\n26/06/2016 19.33.49 [] INFO: IsAnythingToFarm()  Checking first page...\n26/06/2016 19.33.51 [] INFO: Start()  Starting...\n26/06/2016 19.33.51 [] INFO: OnConnected()  Connected to Steam!\n26/06/2016 19.33.51 [] INFO: OnConnected()  Logging in...\n26/06/2016 19.33.52 [] INFO: OnLoggedOn()  Successfully logged on!\n26/06/2016 19.33.52 [] INFO: StartFarming()  We don't have anything to farm on this account!\n26/06/2016 19.33.52 [] INFO: Init()  Logging in to ISteamUserAuth...\n26/06/2016 19.33.52 [] INFO: Init()  Success!\n26/06/2016 19.33.53 [] INFO: IsAnythingToFarm()  Checking badges...\n26/06/2016 19.33.53 [] INFO: IsAnythingToFarm()  Checking first page...\n26/06/2016 19.33.56 [] INFO: StartFarming()  We have a total of 5 games to farm on this account...\n26/06/2016 19.33.56 [] INFO: StartFarming()  Chosen farming algorithm: Simple\n26/06/2016 19.33.56 [] INFO: FarmSolo()  Now farming: 400250\n26/06/2016 19.33.59 [] INFO: ShouldFarm()  Status for 400250: 4 cards remaining\n26/06/2016 19.33.59 [*] INFO: Farm()  Still farming: 400250\n26/06/2016 19.36.07 [!] EXCEPTION: UnhandledExceptionHandler()  Object reference not set to an instance of an object.\nStackTrace:\n   at ArchiSteamFarm.Bot.b__64_0(Bot bot)\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\n   at ArchiSteamFarm.Bot.d__64.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__43.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__82.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__96.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.<>c.b__6_1(Object state)\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\n. ",
    "igromanru": "You could add an optional parameter to ASF.exe, the parameter should be used as AES key. So everyone can encrypt theirs data with an own key. That would be smart and secure...\n. Would you like to do it yourself or should I make a pull request?\n. --cryptkey is a good call. Or --aeskey is smaller. But I think it's not really matter. \n. Yeah, it's fine. Thank you. :+1: \n. Thank you, it's fine.:thumbsup: I will wait for next version. Have things to do now. :smiley:\n. I got an error:\n28.06.2016 13:50:08 [*] INFO: CheckForUpdate() <Main> Checking new version...\n28.06.2016 13:50:09 [*] INFO: CheckForUpdate() <Main> Local version: 2.1.1.5 | Remote version: 2.1.0.7\n28.06.2016 13:50:09 [*] INFO: CheckForUpdate() <Main> ASF will automatically check for new versions every 24 hours\n28.06.2016 13:50:09 [*] INFO: RefreshCMs() <Main> Refreshing list of CMs...\n28.06.2016 13:50:10 [*] INFO: RefreshCMs() <Main> Success!\n28.06.2016 13:51:00 [!] EXCEPTION: DecryptAES() <Main> Zeichenabst\u00e4nde sind ung\u00fcltig und k\u00f6nnen nicht entfernt werden. (Padding is invalid and cannot be removed)\nStackTrace:\n   bei System.Security.Cryptography.RijndaelManagedTransform.DecryptData(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount, Byte[]& outputBuffer, Int32 outputOffset, PaddingMode paddingMode, Boolean fLast)\n   bei System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount)\n   bei System.Security.Cryptography.CryptoStream.FlushFinalBlock()\n   bei System.Security.Cryptography.CryptoStream.Dispose(Boolean disposing)\n   bei System.IO.Stream.Close()\n   bei System.IO.Stream.Dispose()\n   bei SteamKit2.CryptoHelper.SymmetricDecrypt(Byte[] input, Byte[] key, Byte[]& iv)\n   bei SteamKit2.CryptoHelper.SymmetricDecrypt(Byte[] input, Byte[] key)\n   bei ArchiSteamFarm.CryptoHelper.DecryptAES(String encrypted) in L:\\GitHub\\ArchiSteamFarm\\ArchiSteamFarm\\CryptoHelper.cs:Zeile 118.\nWhat have I done:\nI have choose 256Bit on aesencryption.net and encrypted my password. Copy & paste the base64 string to config.\n\"SteamPassword\": \"nQsmcJ+tfjJMKjCp+sw8LFFcjmDBLYOKLS1RwGsDHgY=\",\nStarted the bot.\nI have debugged your code, anything looks good, I guess it's an issue of SteamKit, but better you check it out.\nP.S.: I am starting ASF.exe with parameter --cryptkey=testtest (testtest is my test key). \nBut it's looks right, the EncryptionKey is filled with \"testtest\" at this point.\n. Ah ok, thank you. I have missed the IV part.\nHmm, the think with command is very complicated. Is it not possible to modify the ConfigGenerator the same way? Also pass --cryptkey= to ConfigGenerator, so it can generate encrypted password?\n. After a lot of pain I manager to configure all my accounts. At least, it works.\nThank you for the feature.\n. I agree with you, but the problem is, that it's not possible to generate encrypted password without using/starting the program. Additional to that I have to use WCF or Steam chat, it's a bit overkill for a simple task. It would be handy if I could configure settings before I start ASF at all.\nI got few ideas about that. The simplest would be, to check if the password is set to \"PlainText\" and automatically encrypt it and change PasswordFormat to \"AES\" if --cryptkey= parameter was passed.\nAnd If you want to make it much smarter, you can check, if the password is base64 and automatically encrypt it if PasswordFormat was set to AES. So an user that have not so much knowledge can simple change the format and the password would still \"safe\". Without --cryptkey= your buildin password would be taken but it's still safer than PlainText and with ProtectedDataForCurrentUser it would work much better! :grin:\n. Actually you can keep json small, without serializing the full object, there are multiple ways. :wink:\nWhatever, IMO it's our duty to make users life simpler and get sure to protect them. Like you said, most normal user don't care about security and this is exactly the problem why so many people get hacked. Of cause everyone should choose for himself, but if they have no IT knowledge, they can't do it properly.\nBut it's just my opinion. :smiley:\nI'm thankful for your tool and that you've implemented my required feature. Thank you for a great job. :blush: :thumbsup:\n. Use Steam group for questions:\nhttp://steamcommunity.com/groups/ascfarm\n@JustArchi \nCan you add the link to the CONTRIBUTING page?\n. Use ASF-ConfigGenerator first and read the wiki.\n. You should just understand, that questions are belong to the steam group forum. \n. I prefer NLog.\n. Have you read the guidelines for contributing?\nBefore you post an issue, it's on the top. You can't miss it!\nPicture\nIt's not the right place for questions.  \n\nYou have ASF chat and Steam group for general discussion, questions or technical issues.\n. \n",
    "justin-gerhardt": "It can successfully be installed and run as a local service. When doing so it works exactly as it run as a console app (without the console)\n. By the way, If you want to test on windows you need to run InstallUtil.exe  to install it as a service. (InstallUtil should be in C:\\Windows\\Microsoft.NET\\Framework64). The service just runs the exe so you don't need to reinstall the service to test exe changes.\n. Seems everything is a bit weirder than that. Right now the current autoRestart does not work with the service. When the old process dies the service is marked as stopped but I'm guessing because the other process is running in the previous processes isolated space it is not completely counted as stopped. This means the call to ServiceBase.Run(service); that would normally cause onStart to be called doesn't run and the new process just dies. From the research I have done it seems there are 2 main ways of restarting a service. 1) windows can be configured to restart on non-zero exit code. This would mean using a fail code to indicate update and require users to enable auto relaunch. 2) call to a bat file that restarts the service, this is ugly and hackish. \n. Nice, looking online it seems the best way in mono might be Console.In is StreamReader\n. I'm going to go get some sleep, if we can get this ironed out tomorrow I'll start on event logging\n. I'm running into a bit of an issue installing the newest released version as a service. specifically, System.InvalidOperationException: Unable to get installer types I think it may be related to the packing, Have you manged to successfully install a packed version?\n. Would signing the ILRepack version with a code signing certificate be enough to move it out of the windows defender threshold? Certum offers them for 14 euro's to open source projects. If you want I'll cover half the cost.\n. Seeing how LogToFile was defined it seemed appropriate. Personally I intend to run ASF as a service with event logging. For me event logging is useful as it allows for more programmatic control. Weather or not people want it when running as a console app I don't know\n. With event logging it is unnecessary to include time and log level in the message as that's already part of the log. Ideally, single events would not create multiple logs such as Logging.LogGenericInfo(\"New version is available!\");\nLogging.LogGenericInfo(\"Consider updating yourself!\"); which creates 2 logs,\ninstead use a single event with a new line in the message. Also It would be greatly helpful if at least the important events could have event id's. I don't not know how achievable this is with nlog.\n. Would it be preferable to long to our own event log rather than use the default application log?\n. A log file does not seem to be generated even when not running as a service.\n. Are you sure that autorestart is working? As far as I can tell process A is not starting process B. It works totally fine when running as a console app but it does not seem to work when running as a service\n. yes, although to create the log you will have to install the service\n. Are you running as a service?\n. I too would appreciate these features being added.\n. \": Unable to connect to the remote server ---> System.Net.Sockets.SocketException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 104.121.229.86:443\" \nThis is almost certainty not an ASF error. The error indicates ASF can't connect to steam. Make sure your server is connected to the internet correctly and can reach steam.\n. ",
    "Gamerios": "?\n. How we can wrote over PM ?\n. ",
    "DARKKi": "I would also love feature like this. \nAlso parsing card price data from Steam or 3rd party site and you could have option like farm most valuable cards first. \n. ",
    "Yur0K": "I think it will be a useful option)\n. There was fixed order of keys redeeming until 2.1.2.5 version.\n. Maybe you can set this order in \"!statusall\" command as well?))\n.  @MrBurrBurr Hi. I'm really enjoying of using you GUI and very appreciated for you hard work.\nI want to make some suggestions:\n1. Make some kind of Simple (Detailed) View of Bots page. \nAs I see it is a name of bot and a list of games located under the bot name, instead of game logos (to be able to quickly see all games are farming).\n2. Make a list of last used command more easily accessible on Commands page.\nSave last commands (10, for example ) to some kind of clickable list, so the user can just with one click send one of the last commands. . @MrBurrBurr For the first suggestion is yes, you are right. As for the second: I ment that user needs to press arrowUp key 15 times, for example, to repeat a command he used 14 commands back. So the list of 10-20 last commands in form of clickable links or buttons would be easier.\nAnd one more thing: what about saving last used command and bot in drop-down menus? For example, I want to use redeem command for different bots. Each time I need to click and choose redeem, choose a bot and paste a key. I will provide screenshots later to show exactly what I suggested). First two screenshots is about saving last used command and bot in drop-down menus. So after sending addlicense command for example to all bots (screenshot 1), you paste another apdID and send it without choosing command and that bot again (screenshot 2).\n\n\nThis one is about list of recent commands. Command (link) on the left and an argument (key, appID, etc.). When user clicks the link command goes to commands dropdown, bot to bots dropdown and the input field is empty.\n. Hi @MrBurrBurr . I've noticed that \"lightmode\" is visible for a moment when navigating through pages if Nightmode is enabled.. \"Server must include properly set non-zero SteamOwnerID, otherwise it'll refuse to execute any command, as an extra security measure.\" Info from Wiki. Start from here.. ASF is farming cards for you where is the problem?. Maybe, having some global config such as \"CacheBotOwnedGames\" and keeping a list of owned game IDs in a bot.db file would be better. But sounds like it's out of scope. ",
    "anch2150": "Hello JustArchi,\nFirst I want to thank you for your wonderful bot! I had used it for quite some time without any problem. However, as I recently reconfigured it as a systemd service it cannot write log file any more. I read another issue post #292, created the NLog.config file and specified the output filename as '/asf/log.txt' but still got no luck. Could you help me? Thanks in advance!\nP.S. My version is 2.1.4.5 with auto-update on.\n. ",
    "rzats": "Whoops, looks like this is a working option. Sorry for the false report!\nCtrl+F for \"family\" on the Configuration wiki page yielded no result, but I guess I should have looked through the parameters more thoroughly anyways (:\n. ",
    "aleksamagicka": "There is https://steamcommunity.com/mobileconf/multiajaxop.\nAlso, Geel upgraded SteamAuth to support the new endpoint.\n. @JustArchi Glad to help! :smiley:\n. Works nicely.. ASF V2.2.0.3 did this. I am not sure if that part is included in later versions though.. ",
    "stackia": "WCF server is also not supported on .NET Core. It's better to switch API to HTTP REST ways.\n. Well, seems there isn't such a case...\nRemoved.\n. Fixed them. I love your strict coding style :+1: \n. I have already done that. Forget to mention it in commit messages.\n. My ReSharper doesn't suggest anything now...\nIt sounds good to consider adding your ArchiSteamFarm.sln.DotSettings to this git repo. Indeed ReSharper's default coding style is far from your settings and I tweaked a lot to make it work with this project.\n. Oh that DotSettings is already here...\nI'm wondering why it doesn't work on my machine... sorry\n. Great! Now things are all working right.\n. It's painful to maintain another code base and I'm trying to avoid that. Basically I'm looking to improve current code in somewhat graceful ways.\nAnyway WCF is an outdated technology and I should not rely on that too much.\nMaybe ASF can be made more modular in the next major release. e.g event system, DI, split core/API/management. If ASF tend to be a powerful platform instead of an app, it need to be more pluggable.\n. I will make some investigations on my fork to see if there is a better way.\n. I appreciate your work to make ASF that stable and I've learned a lot from your clean and robust code. Even SK2 isn't that stable after years of development (although Steam Network is something killing my application before SK2 goes wrong :smile: )\nI use WCF because my application infrastructure uses it internally. It will naturally be a good choice for me to integrate with ASF using WCF. Actually I'm surprised to see ASF has WCF support, even WCF is generally criticized nowadays.\nCurrently it seems not easy to use the same code base to work with my project, I have to create my own branch to meet my requirements and try my best to sync with ASF :cry: . Appropriate changes I think ASF should accept will be send via PR.\n. \n- The icon has an overall similar swatch (the accent of image) to Steam Trading Cards, connecting the THEME to its subject.\n- Multiple levels are stacking together to represent the FUNCTION of the project.\n- The frontmost 'agriculture plant (paddy)' icon emphasises the iconic name of archisteamFARM.\nPSD & ICO:\nASF Icon.zip\nThanks for having such a great project enlighten our Steam community!\n. ",
    "HeartOfSun": "I can try i it, i must use visual studio for debugging?\n. I still can't reproduce the problem. I guess that was maybe because a lot of items, or something fixed in 1.3.0\n. \"SteamProtocols\": 1, but:\n``\n2018-02-05 08:40:16|ArchiSteamFarm-7725|FATAL|ASF|OnUnobservedTaskException() System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. (The remote party closed the WebSocket connection without completing the close handshake.) ---> System.Net.WebSockets.WebSocketException: The remote party closed the WebSocket connection without completing the close handshake. ---> System.IO.IOException: Unable to write data to the transport connection: The lazily-initialized type does not have a public, parameterless constructor.. ---> System.MissingMemberException: The lazily-initialized type does not have a public, parameterless constructor.\n   at System.Threading.LazyHelpers1.ActivatorFactorySelector()\n   at System.Threading.LazyInitializer.EnsureInitializedCoreT\n   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)\n   at System.Net.WebSockets.ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, Boolean endOfMessage, ArraySegment1 payloadBuffer)\n   --- End of inner exception stack trace ---\n   --- End of inner exception stack trace ---\n---> (Inner Exception #0) System.Net.WebSockets.WebSocketException (0x80004005): The remote party closed the WebSocket connection without completing the close handshake. ---> System.IO.IOException: Unable to write data to the transport connection: The lazily-initialized type does not have a public, parameterless constructor.. ---> System.MissingMemberException: The lazily-initialized type does not have a public, parameterless constructor.\n   at System.Threading.LazyHelpers1.ActivatorFactorySelector()\n   at System.Threading.LazyInitializer.EnsureInitializedCoreT\n   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)\n   at System.Net.WebSockets.ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, Boolean endOfMessage, ArraySegment`1 payloadBuffer)<---\n```\nASF Version 3.1.0.0, under Debian 8. ",
    "QzSG": "Fixed by restarting my cloud machine\n. ",
    "e0xify": "Thanks for your response Archi,\nyes but i was looking forward for something like extend ASF to a usual Steambot by changing the Name or responding to Messages automaticly. Farmoffline is a bit different, cause i want to get messages and respond them automatically. If its not possible just close it again and i'm fine with that.\nAnyway, many thanks for your service !\n. Allright, hopefully they will not disconnect each other cause i still use ASF 24/7.\n. ",
    "Netshroud": "Can you map those line logs to SteamKit2 / callbacks / function calls? I'm not going to read through all of ASF to find all log output lines.\nAlso, are you using TCP or UDP?\n. So you have debuglog output from it?\n. No repro on the hiberation.\nI connected to Steam then hibernated for 12 minutes. After resuming, SteamKit's TcpConnection got an IOException, cleanly disconnected and the loop I inserted into Sample1 to reconnect after disconnecting got hit and called steamClient.Connect(), which resulted in a successful reconnection.\nThis was even without Azuisleet's latest change around calling WaitOne.\n. Interesting that you had 16 failed heartbeat attempts, then 16 disconnected callbacks all at the same time.\nAre you sure you're calling the CallbackManager appropriately?\n. ",
    "yonkersitoo": "Try to Upgrade a .NET Framework 4.6.1 , but my system is not compatible , what do I do ?\n. ",
    "quappo": "I, too, was thinking of putting \"ASF\" somewhere in the logo but I'm not really good at creating them (even if I like doing them).\n@stackia's looks rather professional compared to whatever I could ever come up with, so I'm not even trying! =P\nBut I took the liberty to do a little modification to his, transforming those 3 vertical segments in \"ASF\".\nIt's just a quick work (made by hand) I did it mostly to give you the idea, I'm sure he can do it better if you want to accept this change (there should be plenty of \"tall\" fonts too, I just happen to have none installed on this machine).\nThe idea is to keep the \"holes\" in each letter as small/slim as possible so one can read ASF when using the bigger version and they kind of resemble the original vertical segments when using the smaller one:\n \nEDIT: if you want more \"entries\" you should also expose this issue on the sg thread and/or in the steam group (I don't think I've read about this anywhere before).\n. ",
    "otrazhenye": "cooldown \n. ",
    "Shevraar": "Solved it, sorry for the spam.\nI run ASF.exe with the --trace argument on mono and I found out I had no certificates...\nEven if I had a newer version of Mono I had to import the certificates with the command: mozroots --import --sync\nAnyway, it'd be nice to have that kind of error (the certificate error) shown, at least when the debug flag is up.\n. ",
    "skyborgff": "\"and trades in \"no longer available\" state do not block ASF from sending more of them.\" It did , i had to eneter in my bot acount and going to sent offers was enough to stop the error. \n\"Consider setting up your primary account for Trading so it can automatically accept donations from your bots, this way you can be sure that no trade will be pending for accept, and nothing will block.\" i already did it. but i believe this happened because ASF was delayed to read the !loot command and i sent 6 of them, just one got accepted\n. why is it intentional?\n. ",
    "lsteamleen": "IT CAN DROP, JUST SHOW WRONG.\nBUT USE THE NEW VERSION,CAN NOT DROP:\n2016-08-22 22:10:01|INFO|ASF|InitEnhancedLoggers() Logging module initialized!\n2016-08-22 22:10:01|INFO|ASF|CheckForUpdate() Checking new version...\n2016-08-22 22:10:03|INFO|ASF|CheckForUpdate() Local version: 2.1.3.9 | Remote version: 2.1.3.9\n2016-08-22 22:10:03|INFO|L|Start() Starting...\n2016-08-22 22:10:03|INFO|L|OnConnected() Connected to Steam!\n2016-08-22 22:10:03|INFO|L|OnConnected() Logging in...\n2016-08-22 22:10:04|WARN|L|OnLoggedOn() Unable to login to Steam: InvalidPassword / InvalidPassword\n2016-08-22 22:10:04|INFO|L|OnDisconnected() Disconnected from Steam!\n2016-08-22 22:10:04|INFO|L|OnDisconnected() Removed expired login key\n2016-08-22 22:10:04|INFO|L|OnDisconnected() Reconnecting...\n2016-08-22 22:10:13|INFO|L|OnConnected() Connected to Steam!\n2016-08-22 22:10:13|INFO|L|OnConnected() Logging in...\n2016-08-22 22:10:37|INFO|L|OnDisconnected() Disconnected from Steam!\n2016-08-22 22:10:37|INFO|L|OnDisconnected() Reconnecting...\n2016-08-22 22:10:38|INFO|L|OnConnected() Connected to Steam!\n2016-08-22 22:10:38|INFO|L|OnConnected() Logging in...\n2016-08-22 22:10:38|INFO|L|OnLoggedOn() Successfully logged on!\n2016-08-22 22:10:38|INFO|L|Init() Logging in to ISteamUserAuth...\n2016-08-22 22:10:40|INFO|L|Init() Success!\n2016-08-22 22:10:41|INFO|L|IsAnythingToFarm() Checking badges...\n2016-08-22 22:10:41|INFO|L|IsAnythingToFarm() Checking first page...\n2016-08-22 22:10:44|ERROR|L|CheckPage() cardsRemaining is null!\n2016-08-22 22:10:44|INFO|L|StartFarming() We don't have anything to farm on this account!\n. ",
    "NotTsunami": "Never mind, I see 5a267eb225015059646abfe7a97c0d53a75c0238, and https://steamstat.us/ reports some things are down. My bad!\n. Maybe you can add a color tag or some way to identify through ASF what error/warning is the fault of the Steam Network (which is almost always the case) and what is an ASF error, that way hopefully it would lessen false reports.. It's been answered multiple times - it's out of the scope of the program, this is intended for Steam trading cards. You can always fork it and code it yourself.. ",
    "beatcracker": "Wow, that's amazing! Thanks a lot.\n. ",
    "chucky515": "Was this function added?. ",
    "chenhanz": "well i just think that its related to ASF itself, sorry if i post in wrong section, im a newb here need some guidance, i would glad if you can tell me whats my problem, i can start it in my own windows 7 but its come out with error when i start it on my vps, thanks and sorry if i post a not-related ASF issues here\n. ",
    "anaptyxis": "Fair enough. If that's the premise, then that's the logical conclusion.\nAnyway, thanks for considering.\n\nBradley Beth\nOn Tue, Oct 11, 2016 at 8:51 AM, Ryzhehvost notifications@github.com\nwrote:\n\nAnd what to do if bot is on timeout? Just stop? I'm strongly against it.\nForwarding is meant for keys that you want to activate on any bot, and\ndon't care on which exactly. So it's logical it's forwarded when bot is on\ntimeout.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/JustArchi/ArchiSteamFarm/issues/346#issuecomment-252907635,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAwvBNjqJdf31aem7KnbuSODBQs-Pn-rks5qy4ZmgaJpZM4KTlnX\n.\n. \n",
    "NanoAi": "Sorry didn't notice that this was already possible (I didn't see the tags in the email.) \nAlso didn't notice it in the features or anywhere on the wiki, I know that you can have multiple bots and multiple accounts. But what I'm asking is... Is it possible to have a single bot attempt to idle a set amount of games either consistently or in intervals? \n. ",
    "SoulReaver": "ASF V2.1.6.2, works great\nI did not know that it is a new feature. I simply changed configs when ASF was still working (changed farming algorithm on all bots except for main one). When I turned back from editor to ASF, just to close and restart it after, I saw lots of yellow on my screen :) All bots have changed their settings and continued to run. Nice feature (not a bug).\nP.S.\n JustArchi assigned JustArchi and unassigned JustArchi ??\n. ",
    "blackpanther989": "Leave a comment\n. ",
    "gab": "Thanks for the reply. The alphabetical order thingie is clever but doesn't help, I really don't wanna pollute my main account even occasionally.\nStopping the main account is indeed a good workaround. The issue is that knowing myself I'll eventually forget to turn it off. Also I'm using this tool to speed up key activation, so adding one more step I'll need to use almost every time I buy a bundle rubs my command line sensibilities the wrong way.\nAre you opposed to the feature existing at all, i.e. if I were to submit a pull request for this would you reject it? It would be pretty simple, i.e. one extra boolean option in config, one wiki edit to explain it, and what it does is forward the key without trying to redeem it if the option is on for the bot.\n. Thanks! I tested !redeem& [main account] [key] and it successfully redeemed it on the next bot on the alphabetical order. So at first glance things look good. I noticed that we don't even have to change the forwarding settings in the config for this to work, which is very nice.\nSorry for pushing for even more complexity in that function with my feature request. Software always seems to escape the scope it was originally in isn't it  :P .\n. Thanks a lot for releasing this feature, it's really helpful!. ",
    "thomas-ashcraft": "\nthe whole point is to drop a key and don't bother with where it lands. So no, I don't see any real need of such feature to exist\n\nVice versa - I see really big and real reason for such feature to exist. In short - it will help keep system fully automatic. Self operational machine. Damned Terminator T-1000.\nI have few \"bot\" accounts and I really enjoy smooth and fully automatic work of whole system: drop key to chat, don't bother, cards magically appears in \"main\" account. Automagically!\nObviously \"main\" account also uses ASF but in a different way: offline farm (for precious and good games instead of thrash which throws to bot-accounts). But the main reasons for main account is automatic trading \"AcceptDonations\" (which is one of the steps of card farming automation) and batch authenticator confirmations \"!2faok\" (which actually I not tested yet, but i believe it will help me to accept all those painful hundreds of card selling requests in one command).\nYes, its nice tiny option with \"&\" key in redeem function, but it is extra symbols which I should always use. Its not that \"automagic\" I love in ASF.\nAlso... why that feature should be implemented as extra option? There is no reason for it since configuration already have \"RedeemingPreferences\" flags. So another one flag \"DoNotAcceptKeys\" would be 100% logical here.. ",
    "usokki": "All other steam games are farming.  it is on master stead id.\n. ",
    "MurkBRA": "Seems some thing that affects only ASF-ConfigGenerator, I have SteamDesktopAuthenticator, ShareX, Dism++ working fine. I did a procedure here and looks like it's working fine now. And it's a nice work that you do with ASF, I appreciate it a lot. Thank you.\n. ",
    "NocturneBlock": "Looks like I just fell prey to Wall Of Text Skimming from looking at so much. I would recommend including the very nice table of possible settings for Trading Preferences on the actual Trading page so that the information stands out more, but you are correct that the direct reference was already there. Sorry.. ",
    "zennox1337": "I have the same problem\n\n. ",
    "GuestLab": "\n. ",
    "ccubed": "i too have this issue with the latest version.\n2016-12-24 12:01:19|mono-sgen-29017|INFO|bot|OnDisconnected() Disconnected from Steam!\n2016-12-24 12:01:19|mono-sgen-29017|INFO|bot|OnDisconnected() Reconnecting...\n2016-12-24 12:01:19|mono-sgen-29017|INFO|bot|Connect() Connecting...\n2016-12-24 12:01:24|mono-sgen-29017|INFO|bot|OnDisconnected() Disconnected from Steam!\n2016-12-24 12:01:24|mono-sgen-29017|INFO|bot|OnDisconnected() Reconnecting...\n2016-12-24 12:01:25|mono-sgen-29017|INFO|bot|Connect() Connecting...\n2016-12-24 12:01:30|mono-sgen-29017|INFO|bot|OnDisconnected() Disconnected from Steam!\n2016-12-24 12:01:30|mono-sgen-29017|INFO|bot|OnDisconnected() Reconnecting...\n2016-12-24 12:01:32|mono-sgen-29017|INFO|bot|Connect() Connecting...\n2016-12-24 12:01:37|mono-sgen-29017|INFO|bot|OnDisconnected() Disconnected from Steam!\n2016-12-24 12:01:37|mono-sgen-29017|INFO|bot|OnDisconnected() Reconnecting...\n2016-12-24 12:01:39|mono-sgen-29017|INFO|bot|Connect() Connecting...\n2016-12-24 12:01:44|mono-sgen-29017|INFO|bot|OnDisconnected() Disconnected from Steam!\n2016-12-24 12:01:44|mono-sgen-29017|INFO|bot|OnDisconnected() Reconnecting.... In my case this was resolved with the newest experimental build.. ",
    "alexdevilrock": "Archi write what not support experimental version, but now it error have and in stable verson.. ",
    "vladislaw952": "Btw, i think all this guys, who has problem like \"Disconnect from steam\" using amazon server. Why i talking about it? Because i doing some test, i have one amazon server with 200 bots(100+100), restaring one of two asf and i have same problem too, but second asf working fine. this force me to starting new amazon, upload asf and i can`t starting asf => Disconnect from steam. So i have my home pc, and i dont have this problem. Idk what to do right now. \nThx.. ",
    "light444": "true -> all inventory. use new parametr -> \"LootAccess\": [0,1,2,3,4,5,440,730]\nwhere:\n0 - card\n1 - foil card\n2 - boosters\n3 - emoticon\n4 - background\n5 - gems\n440 - items tf2\n730 - items csgo\nps: I have 5 tf2 accounts. Need to automate the process of loot to tf2. why? farming can not only cards. kk. you could enumerate the list of indicators?\ni then rebuild the project for yourself.. and may be renamed to:\nSteamMasterID -> UserWhileList\nSteamMasterClanID -> GroupWhileList. 1. The use of commands without switching accounts (convenience)\n2. In a big farm is very easy to get a limit of 500$ (use the !loot for 2 account would help)\n3. and more :). Or extend the functionality !addlicense? So that she would buy games.\nexample1:\nmain: !addlicense (or !buy) <\u0412\u041e\u04221> <440,220>\nbot1: done \"440 for 0$\", \"220 for 2.5$\" total 2.5$\nexample2:\nmain: !addlicense (or !buy) <\u0412\u041e\u04221> <440,220>\nbot1: done \"440 for 0$\", \"220 has already\"  total 0$\nexample3:\nmain: !addlicense (or !buy) <\u0412\u041e\u04221> <440,220>\nbot1: error - not enough money. The main advantage that you do not need to add to friends bots.. i think its a bug. The wiki is too large and often updated.\nAnd I'm a mere mortal.\nI fount --process-required thank. ",
    "zypA13510": "Hi Archi,\nThanks, this fix works fine for me.\nAlso, I suggest updating the wiki to include how to update the command-line arguments for ASF-Service.\nAnd btw, I think as a developer you have done pretty much for the community. I'm a developer myself, I understand sometimes it's hard to identify (or even to reproduce) the issue without enough detail. Glad I can help. \ud83d\ude04\nMerry Christmas and happy New Year!. Hi @JustArchi , I happened to have the same issue here after I temporarily turned off my AV protection (thus Windows Defender becomes enabled). I understand and totally agree that this is out of the scope of the project itself. But as a user, I also feel kinda confused when I see the warning. I think it may be a good idea to submit the sample to related AV providers for analysis (according to my submit here, it's more than just Microsoft having this false positive). It shouldn't be too hard since ASF is open-sourced itself.\nBtw, I have already submitted a case to Microsoft \ud83d\ude03 . I have also found this: Jessecar96/SteamBot#759. It could be related since the detection is very similar.. ",
    "r6d2": "No problem, Archi. I think you have a point. I'll go with the new format. As long as it's consistent I'll just manage it. Thanks a lot for the detailed explanation. Cheers!. After running ASF another time it begun to farm the game again and this time it got the cards:\nFarmSolo() Done farming: 360880 (Nightfall: Escape) after 5 hours, 5 seconds of playtime!\nThe near 2 hour difference to tekanoma's may be due to my account being card drop restricted.\nBTW, Happy new year! :-). OK, thanks anyway.. BTW, I was referring to use the same current Steam client functionality, in case it can be reused, not to develop a new one.. Got it, Thx! I'm translating as we speak.\nBTW, I noticed many of the strings to be translated end in !. Is that a writing style you want to keep across all languages?\nIn Spanish the abuse of exclamation marks gives an unprofessional look to any user interface, or text in general, for that matter.\nBTW, AFAIK the same style concept applies to all Romance languages . > For example, i buy 100 copies of games\nIs it really possible to buy this many gifts in a row? I believe it does trigger some alert on Steam Store or something a lot sooner than that.... ",
    "tekanoma": "They released the cards today and never added it to the page, it happens with a lot of games due to the developers/publishers forgetting to add the trading cards flag to the store page, I guess it still seems weird that ASF farmed it for 10 hours and didn't drop any cards, mine all dropped without any problems\nafter 3 hours, 29 minutes, 3 seconds\nHere's the site most people use including myself instead of relying solely on the store page to tell if a game has cards or not\nhttp://www.steamcardexchange.net/index.php?gamepage-appid-360880. ",
    "tambry": "After browsing through the code, it seems to be due to the password actually never being encrypted when you close the config generator.. I wasn't aware of there being a wiki page for that. If I was aware, I would have read it. Might be worth adding links to the relevant wiki pages in the config generator (or improving user friendliness).\nFrom the name itself, you wouldn't expect it to need to be logged into Steam to actually encrypt it. From the looks of it doesn't either, as ProtectedData.Protect is simply used with the password and the static salt. My expectation would've been that the password will be encrypted with the chosen method after closing the config generator, but as it turns out, it doesn't.\nOther than that, ASF is better than IdleMaster \ud83d\udc4d . ",
    "Barokai": "had a look at the config files again, 2 of my bots where configured like this:\n\"LootableTypes\": [\n    1,\n    5,\n    7\n  ],\nconfig was made with an older version of config generator, not manually.\nseems that EType 7 doesn't exist anymore.\nI removed it from config files and the error is gone - sorry for disturbing.. ",
    "Vital7": "\nRussian translation has a bug with key redeeming. It should say what subid did you get with this key, but it says \"System.Collections.Generic.Dictionary'2[System.UInt32,System.String]\".\nExact translation of the screenshot:\n<098bot> Key: XXXXX-XXXXX-XXXXX | Status: OK | Items: System.Collections.Generic.Dictionary'2[System.UInt32,System.String]\n<099bot> Key: YYYYY-YYYYY-YYYYY | Status: OK | Items: System.Collections.Generic.Dictionary'2[System.UInt32,System.String]\n<100bot> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: OK | Items: System.Collections.Generic.Dictionary'2[System.UInt32,System.String]. Your issue is incomplete, please add all important information or close the issue.. Can't reproduce with the same config and ASF v3.1.2.4. Haven't tested yet, will do it in a few minutes. Now it works properly. Not sure if this is actual, but try to escape \"#\" char this way: \"%23\". 876740\nhttps://steamdb.info/app/876740/history/. Static analyzer is PVS-Studio, version 6.24.26498\nThat's the message that it gives:\nV3020 An unconditional 'break' within a loop. IPC.cs:621\nOk, I will revert a change in IPC.cs. Everything works as expected, have just tested. Final check requires me to buy one more gift card, for which I have already spent around 5$, but ok. Everything works as expected.. Web request will trigger on usual gifts, but it won't check usual games gifts. Probably, activating a usual gift will be faster than we get information about it in notification (we don't get them instantly), but we can't be sure.\nYou are welcome :). Bots' responses language is configurable by CurrentCulture option in global config. Everything works as expected. \nShould we replace that OK with Fail or something?. Have tested b, c, d - everything is good now\na, e, f - will be tested later, probably this week. TODO: redeeming wallet code gives Fail/NoDetail on successful activation\nUPD. Done\nAlso activating key with the same/different from wallet currency is successul, but response is invalid. Well, now it works properly, and command response is correct, all the cases have been tested (account without wallet/account with another currency than wallet code/account with the same currency with wallet code). Well, tradable is correct\nhttps://en.wiktionary.org/wiki/tradable. Well, I didn't see that, sorry. It wasn't obvious for me. Reopening the issue because found an usecase for this.\nThe only way at this moment to send commands not by using Steam chat is to use IPC /Api/Command call, which uses SteamOwnerID to execute any internal command with maximum permissions, but there is no way for plugin to do the same. ASF.IsOwner() is good when we send commands in Steam, but it's useless in the other cases.\nSo there are two solutions:\n1) Make SteamOwnerID public, so plugins will be able to execute any internal commands\n2) Rewrite permission system from scratch. I said it wrong, I meant that it is the example of non-Steam communication with ASF, and it uses SteamOwnerID, so plugins should be able to use it too. \nSo I guess we can retrieve GID only this way. Strings.WarningFailed will be enough, right?. We need to check if pending_giftcard_leftcol is presented, because usual games gifts don't have this. But LimitGiftsRequestsAsync should care about that, doesn't it?. I have checked browser requests with account that has wallet, so it is absoultely correct. Current code doesn't work at all, I have checked this too. Will check their JS scripts soon. Also createwalletandcheckfunds is necessary when wallet and wallet code have different currencies, so can it be executed in that case?. And detail is not always available (in case such as invalid sessionid). It doesn't create wallet in that case, it just converts wallet code currency to already existing account wallet currency. That redeem_amount page redeems code as well, so we can not to check it at all. \nYes. oh, right. no, it's account wallet code, so everything is ok. ",
    "kotorko": "Oh, i don't want abuse gleam groups, but it can make somedody else, agreed. I just want that my bots can leave your statistics group and join to some official steam groups like this http://steamcommunity.com/groups/tradingcards/. I got it, but leaving statistics group can't be so fast like joining to others :(. Anyway, thanks for the quick response. ",
    "kerberois": "\" Please avoid using GitHub issues, unless you indeed want to report a bug \"\n= It's a bug.\nClient reported that trade are done (created and sent). No trade are created.. It's not a bug when app are crashed?. ",
    "marco-sciuto": "Look for GamesPlayedWhileIdle in the bot configuration\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration#bot-config. But the problem is that the trade is accepted and it shows up on the authenticator on my phone...\nI keep receiving new notifications.. To be honest, I read the whole wiki. It's very detailed, I like it :)\n\nYou might accept those confirmations in time, since ASF trading module evaluates trades only when new one arrives, so a confirmation for a single trade won't be generated more often than once per new trade offer arrival.\n\nThat's the problem. In my experience, ASF is not working like this anymore.\nI'm not receiving new trades. You can see from the log that the same trade is evaluated (and accepted) only a bunch of seconds after the last evaluation of the same trade.. Fine. So it is related to Steam network.\nI agree that instant response is better.\nI will try a new setup that fits my needs... and probably end-up configuring 2FA on ASF (despite I can't have a token if I can't reach ASF, since I don't have a rooted phone)\nThank you for your time :+1: . ",
    "PuppyLover101": "No, I mean getting hours on another steam game too. If I do what you told me, it says in a non-steam game. . ",
    "minimax4233": "i mean if autoupdate is true . it   not only auto-update asf,also auto update CG together.. OK,thanks.i think it easily.. you are right ,I also easier to find someone who  think same apps are same but they are different version so they are not same.Always ask me why his app have some function but another one has.  \nEventually I am looking forward to the new version and hope  ASF become more perfect,useful,multi-functional and more and more people use it.. ",
    "CoobieXD": "Yes, I have seen this issue.\nBut unfortunately I did not find any possible way to connect to net.tcp through php/js, so I wanted to ask to make such an option (\"on our own risk\"), because other means of interaction I have not found :(. Thank you so much!\nYes, earlier I used exactly the exec(), but in the course of work I often receive a stack of dozens of commands (in particular redeem).\nI wrote a parser keys from giveaways on some web-forum, and here to me is very important the speed and performance (every call to exec() launches a new task and is very costly).\nI did some tests and found out that, unfortunately, the exec does not suit me.\n50 consecutive calls via exec():\n\n50 * ( ASF_Init[~0.8s] + HandleCommand[~0.4s] ) = ~60s\n\n50 consecutive calls via SoapClient():\n\n50 * ( SOAP_Connect[~0.05s] + HandleCommand[~0.4s] ) = ~22.5s\n\n^ almost three times faster\nPlus, I'm using a slightly different algorithm for distributing keys, so that I can not use the union command type ASF.exe --client \"command1\" \"command2\"\nI keep in the database a list of games that are on each of the accounts. Therefore, at the first \"AlreadyOwned\" status I redirect key to where this game has no, it is much faster.\nAn example of normal operation sequence of the ASF at the distributing keys:\n2017-01-31 17:30:00|ASF-896|INFO|ASF|HandleCommand() Answered to WCF command: redeem ZZZZZ-ZZZZZ-ZZZZZ with: \n<001> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<002> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<003> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<004> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<005> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<006> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<007> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<008> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<009> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<010> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<011> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<012> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: DuplicatedKey | Items: [13740, ArchiGame]\n^ total: ~6 seconds, and the key was redeem by someone else\nExample sequence ASF works with my algorithm:\n2017-01-31 17:30:00|ASF-896|INFO|ASF|HandleCommand() Answered to WCF command: redeem^ 001 ZZZZZ-ZZZZZ-ZZZZZ with: \n<001> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n2017-01-31 17:30:01|ASF-896|INFO|ASF|HandleCommand() Answered to WCF command: redeem^ 009 ZZZZZ-ZZZZZ-ZZZZZ with: \n<012> Key: ZZZZZ-ZZZZZ-ZZZZZ | Status: OK | Items: [13740, ArchiGame]\n^ total: ~1 second with soap(~3 seconds with exec), and the key was redeem by me\n. Yes, but for that he goes through the accounts, and therefore they quickly go into the cooldown:\n```\n<001> Key: QQQQQ-QQQQQ-QQQQQ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<002> Key: QQQQQ-QQQQQ-QQQQQ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<003> Key: QQQQQ-QQQQQ-QQQQQ | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<004> Key: QQQQQ-QQQQQ-QQQQQ | Status: OK | Items: [13740, ArchiGame]\n<001> Key: WWWWW-WWWWW-WWWWW | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<002> Key: WWWWW-WWWWW-WWWWW | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<003> Key: WWWWW-WWWWW-WWWWW | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<004> Key: WWWWW-WWWWW-WWWWW | Status: OK | Items: [13740, ArchiGame]\n<001> Key: EEEEE-EEEEE-EEEEE | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<002> Key: EEEEE-EEEEE-EEEEE | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<003> Key: EEEEE-EEEEE-EEEEE | Status: AlreadyOwned | Items: [13740, ArchiGame]\n<004> Key: EEEEE-EEEEE-EEEEE | Status: OK | Items: [13740, ArchiGame]\n... +7 new keys\n<001> Key: AAAAA-AAAAA-AAAAA | Status: OnCooldown\n<002> Key: AAAAA-AAAAA-AAAAA | Status: OnCooldown\n<003> Key: AAAAA-AAAAA-AAAAA | Status: OnCooldown\n<004> Key: AAAAA-AAAAA-AAAAA | Status: OK | Items: [13740, ArchiGame]\n```\nIs not it so?. \n^ on the latest version 2.2.1.9. Strangely, it seemed to me that this happened with absolutely every game, which I tested.\n\nMaybe it makes sense to match the name of the game(or its hash-sum) instead of packageID?. If so, indeed :c\nBut why this can happen with every game on the latest version of ASF in my case?. On the last stable version 2.2.2.4 by passing on http://127.0.0.1:1243/ASF I have got that response:\n\nWCF Error - \"Metadata publishing for this service is currently disabled\"\n\nIt looks like only NetTcp works and at the same time conflicts with BasicHttp and WSHttp (it's just my subjective speculation).\nBut at the same time everything works fine in the old version 2.1.6.8 (BasicHttp only) with the same configurations.\nI am trying to solve this problem for two days but it still does not work. Is that problem inside the ASF? Or in my work?. If everything works fine, I would not pay attention for that :(\nThe server starts good, but at client connection(php) I get an error that does not occur in the old version(when metadata is present):\n\n$client = new SoapClient('http://127.0.0.1:1242/ASF');\n\nFatal error: Uncaught SoapFault exception: [WSDL] SOAP-ERROR: Parsing WSDL: Couldn't load from 'http://127.0.0.1:1242/ASF' : Premature end of data in tag HTML line 1 in Z:\\home\\wcf_http_test.php:17 Stack trace: #0 Z:\\home\\wcf_http_test.php (17): SoapClient->SoapClient('http://127.0.0....') #1 {main} thrown in Z:\\home\\wcf_http_test.php on line 17. The issue is solved, thank you, that is enough :+1:  . ",
    "Azekiel": "had same errors, did you found decision?. ",
    "kaikaiiiiiii": "Well I read the update log. Sorry for bothering.. ",
    "blue-lightning": "Not switchable is fine now that you've said it. Better that way.\nAs a user, I look forward to this function being implemented as soon as possible; but as a young developer, I don't like non-cross-platform code in a program like this on the account of good principle. Guess that's that then. It's not like this function is that important anyhow.. Work nicely it is. Even when ASF has finished the computer would continue to stay awake, but I consider that a feature, not a bug.. Oh, I mean when ASF changes status to idle complete. It needs to be like that in order to capture any new game and start idling again, right?. The relevant log section is in the image link. I just encounter the bug today while I have been using ASF for a long time, so I guess it's unreproducable. No command was given because I only open ASF up and let it do it things. No account was given because I only have 1.\nSo what additional information should I give for you to consider re-opening this issue, Archi?. I'm not sure if I read the FAQ correctly, but shouldn't ASF check for card status every FarmingDelay, in default case 15 minutes, regardless of human interaction? This time it lasted for 3 hours.. I thought so, but I did check my in-game status on Steam. The same game as displayed in the console log.. Also I just check: in the log image I put up on the first post, you can see ASF reported that the game finished idling after 2 hours, 42 minutes. That's impossible as it must passed the 2 hours limit before cards start being given, and the game has 3 cards by default. Also, Steam reports my playtime not as 3 hours, but 6.. So if I have quick edit enabled in ASF, I could by a small chance have ASF stuck idling indefinitely in a game until a key press was given.\nAs this behaviour not only affect the display, but the function of ASF itself, I think maybe a reminder regarding this should be put in the FAQ, what do you think?. The FAQ said \"seems to\", not actually freeze the whole program. But I understand your decision. Sorry for having you put up with me.. That would do wonders for me. Thank you Archi, and again sorry for wasting your time on such trivia matters.. ",
    "Hennihenner": "soo... is the :/ implying it's not? that sucks :(. alright, sorry, but i couldn't find anything about the topic, and how do you enable it?. okay, thanks for the replies and all. I'm sorry, but i thought this was a bug.\nI have had my auth for much longer than 7 days, and also should be meeting all other requirements mentioned in the config wiki and FAQ. \nBut you imply that it's a question, so that makes me assume that someting's missing - alright..\nI'll move this to the steam group then. Sorry, just realized that that is intended as is. . alright, i will be back if it happens again.. ",
    "frwrks": "You serious?\nI doubt that Archi is gonna agree that this is functionality that that ASF needs. If for some reason Archi liked this idea, it'd have to be a separate and distinct command. I like how you put so little thought into this that you think that replacing !addlicense with something that can drain your wallet with a mis-type is okay.. I like the suggestion but I find it funny that you think that this is good for people who have 2-5 bots. It's difficult to remember which of the 2-5 bots is which?\nI renamed my bots as numbers some time ago and perhaps because I only added one or two at a time I know the exact number for each bot.\nAnyway, since I changed each bot name to a two-digit number in addition to or instead of your suggestion I'd like to be able to have the option of outputting the account name and/or current profile name as an alias.. I don't know what the OP intended, but in my response I was advocating for the idea of an additional information (account name and/or profile name) that would be returned during output. I have no interest in the ability to try to reference or command a bot with anything other than the bot name as is the case in the current implementation. There would be no underlying change to ASF logic, just the option of the insertion of static information regarding the acted upon bot in the output.\nIn fact, I'd be satisfied if the implementation was a simple true/false flag for outputting the account or profile name.\nI guess it's possible maybe I hijacked the thread with a very similar but different request. My apologies.. The point of outputting the account or profile name with the bot name is that the bot name may serve one purpose or schema, while the account or profile name may serve another or may predate a schema.\nThus in the absence of information in the output other than the bot name the relationship between the bot name and the account it is linked to may be lost.\nFurther, a person may farm accounts other their own alternates as bots--they may farm for a friend, or they may have a friend or friends whom have no interest in cards or other items of any kind and allow their account(s) to be farmed and pilfered. Now again the bot name in ASF may have no relationship with the account or profile names or may be required to be more difficult to address to preserve that relationship as much as possible.\nThe addition I am asking for helps to reinforce the relationship between the bot and the account it administrates. \nYou say the bots can just be named in any fashion one wishes but that does leave the possibility that a master ends up with an inconsistent or unmemorable relationship or schema.. ",
    "TheSergiooo": "Account be either unlocked, or enabled, its depends of reasons of lockdown or suspension. Basically lockdown happens when someone gets an access to lost/stolen old mailboxes of an account. In this situation only way (if it even exists) to unlock an account is contact Steam Support and have a long nice chat. Lockdowns and disables may be both way permanent or untill contact with support or untill using unlock code. There is no lockdowns/suspensions that could be gived for a finite ammount of time. The only question that left, is that is disabled=suspended?\nI didn't met a single disabled or suspended account, but looks like its something more serious than a lockdown. There is information about suspending an account on official website. Basic reasons to suspend an account is violation of Steam ToS or chargebacks.  I checked EAccountFlags.Disabled bit on 100+ bots, and it's false on all of them. I don't have, and dont know exactly how to make a disabled account. I will try to ask people for this kind of account for an experiment.\nBut it's easy to cause a Lockdown. I registered an account with a lockdown: login:asflockdowntest, mail:asf_test_2@mail.ru, pass:asfqwerty, and checked EAccountFlags.Lockdown, its true on this account. ASF logs in without problem, just like in a regular account.\n\nThe fact is that being limited does not affect ability to log in, and it's absolutely inappropriate for ASF to force logoff in case of being limited, as there is crapload of people using limited accounts for executing commands to ASF, not to mention that being limited does not make it impossible for ASF to operate.\n\nWell, now i agree that Stop();  was a hasty decision that i used to prevent unexpected behavior of ASF. But with stop of bot, there is a small chance of connection loss with ASF, which would be a terrible outcome.\nStill, even just LogGenericWarning would be very helpful, as it indicates a problem. By now, it looks like there is no reliable way to discover that account is in a Lockdown. But EAccountFlags  has great unused potential. There may be many interesting ideas with EAccountFlags and config file, but profits are questionable, while required much efforts. But even basic handling of some bits may be a simple and good solution. Only with mentioning that disabled/lockdown bit is true, ASF may help user to define a problem and make it less confusing.. Well, i think i found a neat solution. It would be nice to add [L] and [D] marks just after the state of a bot in !status ASF. I could code it and make a pull request in a few days. Don't mind if i try? :). Well, im sorry, but i have no idea why this +3,148 \u22123,148  happens.. Well... I dont know how to use git revert yourLastCommitID. This is so awkward :smile: . Well, i was just passing by, and thought that it could be easily implemented trough \"send to email\" option. Not a long time ago i made a C++ imap parser that allows to get all the gift tokens from a mailbox. Also, i worked with ArchiWebHandler and its pretty simple to make post requests. \nI will try to make some kind of !opengift <token> command. If it will look fine, i will make a PR.\nP.S.: IMHO - way of openenig gifts trough trades is questionable and kind of useless. Just why you would like to handle 2FA, trade offer holds, inventory managment and other headache, when you can just send gift to email, and then send post with token?. On my way to fix it.. Done.. First of all, i would like to thank you very much for your response. I've got answers i wanted.\n\nBut I do not recommend starting any work on forwarding, unless you want to reverse-engineer yourself.\n\nThats a relief. I've already done some code that works just fine without forwarding and then stuck. Now i will try to clear my code and make a PR with !getgift\n\nOn a second thought - I'm unsure if this idea will give any profit.\n\nI would like to implement this feauture not because it would be easier to send gifts - no, it's because right now, only way to redeem a gift token is trough steam website. And even if you would get a small amount of tokens, maybe just 10, then redeeming would start to become a headache. ",
    "darktohka": "Exactly. ASF doesn't drop any cards from it, but it's still trying, and thus it's presumably gonna be stuck on the video until I manually drop these 4 cards. According to Steam, I'm in-game.\n\n\n[Log from two days ago]\n2017-02-17 20:18:15|mono-sgen-673|INFO|Roboton|ShouldFarm() Idling status for 402590 (Double Fine Adventure): 4 cards remaining\n2017-02-17 20:18:15|mono-sgen-673|INFO|Roboton|Farm() Still idling: 402590 (Double Fine Adventure)\n[Log from just now]\n2017-02-19 20:49:27|mono-sgen-673|INFO|Roboton|ShouldFarm() Idling status for 402590 (Double Fine Adventure): 4 cards remaining\n2017-02-19 20:49:27|mono-sgen-673|INFO|Roboton|Farm() Still idling: 402590 (Double Fine Adventure)\n\nRunning Ubuntu 16.10 with Mono.. I've got one card drop while watching Episode 1 (a few days ago), but I haven't watched any of the other videos yet.\nEach episode seems to have a different appid, so whenever I play a video, it shows \"Double Fine Adventure - Ep01...\" instead of simply \"Double Fine Adventure\".\nI'll let you know over the course of tomorrow, after I come home from school.. It worked. Thanks for your great help, @JustArchi and @Ryzhehvost!. Try this:\nsudo apt install libc6-dev. ",
    "Sirogabober": "1) Read.\n2) Enable MatchEverything in TradingPreferences  (https://github.com/JustArchi/ArchiSteamFarm/wiki/Trading) result - Ignored Trades . ",
    "Logerfo": "My pleasure to help! I'll try to keep track of future commits and keep refactoring new code in this PR until the merge become possible, if you're okay with that.. AFAIK you need a new version to compile, but not to execute (can't tell you which version, cause i'm not into mono stuff). See: https://github.com/JustArchi/ArchiSteamFarm/pull/501#issuecomment-291868562. @mostm does this only happen if ASF is running as service?\n@JustArchi Crash seems to happen here.. @JustArchi even if this is a specific and fixable bug (either from asf or from humanizer), perhaps the following fallbacks could be applied:\n1) Application should not crash due to log related procedures (maybe only if it's running as service?).\n2) A simple timestamp format should be presented if humanizer fails.. @JustArchi why do you plan getting rid of ILRepack?. ",
    "undefo": "So why it have error and exception?. :D ok. Went to ask. Sorry and TY). ",
    "iHyper445": "Well, it never prompted me, but I opened up the database file for my bot and entered the DeviceID manually. Not sure if this is an all around bug or just an issue with me though.. ",
    "SurnikToby": "@JustArchi \nMaybe I'm wrong to put it because I'm writing through a translator\nI suggest that if there are 100 bots in a chat and 38 have a game and 62 is not , then a number is displayed that 62 bots do not have a game\nIt's hard to read manually how many more keys you need\n. ",
    "leonard-wei": "That's strange. It works for me in previous stable version, too. I don't know why it stop working after I upgrade to latest stable version. Do you have any suggestions for me in order to check out anything that could cause this issue?. I have checked the console in server side. It received the \"!pause\" command, but the response is just nothing.\n\n2017-03-25 23:41:29|ASF-2988|INFO|ASF|HandleCommand() Answered to WCF command: !pause Leonard with:\n\nI have also tried the command from chat. It still doesn't work (the same result).. OK, so I need to wait the next stable release. Thanks, JustArchi and Ryzhehvost.. I found that setting moved to global setting instead of bot setting (Using ASF-ConfigGenerator.exe). So do I need to manually add it in every bot? (I remember the master bot doesn't need to set it.)\nI found one of my bot have this setting:\n\n\"SteamMasterID\": 76561198299071041,\n\nBut it still didn't working in WCF (local) and chat.. OK, I found the explanation in the release note of v2.3.0.5. I think I just mixed up the two settings. Thank you for the reply. I shall read explanation of SteamUserPermissions as it noted.\nAfter I set the SteamUserPermissions with key SteamID as Master in each bot, it works again.. ",
    "MikeLund": "@Ne3tCode The background for this is to help people who run 1:1 bots with MatchEverything,so their inventories doesn't end up looking like this: https://steamcommunity.com/profiles/76561198305483770/gamecards/568650\nThey want to offer diversity in cards for the community to craft sets with, not so other people can make a profit. They see obvious abuse, simple to blacklist them.\nIf you block communication someone, they can't post on your profile to \"appeal\" the block either. So Archi's change works great for this.. If I strace the head PID, I just sit on futex(0x7fbf1000c1cc, FUTEX_WAIT_PRIVATE, 1, NULL (meaning it's waiting on its threads to do something?)\nstracing with its threads (502 threads, but I have nowhere near that many clients) is just a repeat of this:\n19749 futex(0x7fbf7c0c54ac, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 3, {1492079170, 159451000}, ffffffff) = -1 ETIMEDOUT (Connection timed out)\n19749 futex(0x7fbf7c0c5480, FUTEX_WAKE_PRIVATE, 1) = 0\n19749 futex(0x2290a7c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, {1492079170, 659700000}, ffffffff <unfinished ...>\n19744 futex(0x2290a0c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, {1492079170, 659304000}, ffffffff <unfinished ...>\n19743 <... restart_syscall resumed> )   = -1 ETIMEDOUT (Connection timed out)\n19743 futex(0x7fbf7c0c53a0, FUTEX_WAKE_PRIVATE, 1) = 0\n19743 futex(0x7fbf7c0c53cc, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 3, {1492079170, 159993000}, ffffffff) = -1 ETIMEDOUT (Connection timed out)\n19743 futex(0x7fbf7c0c53a0, FUTEX_WAKE_PRIVATE, 1) = 0\n19743 futex(0x2290c3c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, {1492079170, 660236000}, ffffffff <unfinished ...>\n19742 <... restart_syscall resumed> )   = -1 ETIMEDOUT (Connection timed out)\n19742 futex(0x7fbf7c0c5410, FUTEX_WAKE_PRIVATE, 1) = 0\n19742 futex(0x7fbf7c0c543c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 3, {1492079170, 160466000}, ffffffff) = -1 ETIMEDOUT (Connection timed out)\n19742 futex(0x7fbf7c0c5410, FUTEX_WAKE_PRIVATE, 1) = 0\n19742 futex(0x2290dfc, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, {1492079170, 660709000}, ffffffff <unfinished ...>\n19741 <... restart_syscall resumed> )   = -1 ETIMEDOUT (Connection timed out)\n19741 futex(0x7fbf7c0c55d0, FUTEX_WAKE_PRIVATE, 1) = 0\n19741 futex(0x7fbf7c0c55fc, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 3, {1492079170, 160949000}, ffffffff) = -1 ETIMEDOUT (Connection timed out)\n19741 futex(0x7fbf7c0c55d0, FUTEX_WAKE_PRIVATE, 1) = 0\n19740 <... restart_syscall resumed> )   = -1 ETIMEDOUT (Connection timed out)\n19741 futex(0x2290e6c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, {1492079170, 661232000}, ffffffff <unfinished ...>\n19740 futex(0x7fbf7c0c5640, FUTEX_WAKE_PRIVATE, 1) = 0\n19740 futex(0x7fbf7c0c566c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 3, {1492079170, 161436000}, ffffffff) = -1 ETIMEDOUT (Connection timed out)\n19740 futex(0x7fbf7c0c5640, FUTEX_WAKE_PRIVATE, 1) = 0\n19740 futex(0x2290f4c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, {1492079170, 661722000}, ffffffff <unfinished ...>\n19739 <... restart_syscall resumed> )   = -1 ETIMEDOUT (Connection timed out)\n19739 futex(0x7fbf7c0c5800, FUTEX_WAKE_PRIVATE, 1) = 0\n19739 futex(0x7fbf7c0c582c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 3, {1492079170, 161879000}, ffffffff) = -1 ETIMEDOUT (Connection timed out)\n19739 futex(0x7fbf7c0c5800, FUTEX_WAKE_PRIVATE, 1) = 0\n19739 futex(0x2290fbc, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, {1492079170, 662025000}, ffffffff <unfinished ...>\n19738 <... restart_syscall resumed> )   = -1 ETIMEDOUT (Connection timed out)\n19738 futex(0x7fbf7c0c58e0, FUTEX_WAKE_PRIVATE, 1) = 0\n19738 futex(0x7fbf7c0c590c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 3, {1492079170, 162147000}, ffffffff <unfinished ...>\n19737 <... restart_syscall resumed> )   = -1 ETIMEDOUT (Connection timed out)\n19738 <... futex resumed> )             = -1 ETIMEDOUT (Connection timed out)\n19738 futex(0x7fbf7c0c58e0, FUTEX_WAKE_PRIVATE, 1) = 0\n19737 futex(0x7fbf7c0c5950, FUTEX_WAKE_PRIVATE, 1) = 0\n19738 futex(0x229109c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, {1492079170, 662316000}, ffffffff <unfinished ...>\n19737 futex(0x7fbf7c0c597c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 3, {1492079170, 162331000}, ffffffff) = -1 ETIMEDOUT (Connection timed out)\n19737 futex(0x7fbf7c0c5950, FUTEX_WAKE_PRIVATE, 1) = 0\n. So you require mono 5.0 for compiling because of the C# 7 changes, but don't support mono 5.0 as runtime?\nIt's not very cool to insist people use your binaries or be forced to maintain two mono environments but ok cheers.. Still bitter about needing to run a different version than it's compiled with... but for if/when mono 5.0 is RC'd and this isn't fixed, it seems to happen the more \"intense\" the command is. Eg !addlicense ASF 440 works okay, but !addlicense ASF 440,570,etc,etc,etcwill make problems.. > nightly is already on 5.3\nAha really... Guess I don't understand mono's versioning then. Is 5.0 not just a \"\"\"stable\"\"\" fork from their development head? http://www.mono-project.com/docs/about-mono/releases/5.0.0/ talks like it will be released soon, with no mention of these other versions. Oh well, just me being confused, thanks for your time.. If you are looking for a quick workaround in the meantime, feel free to use this userscript, opens them all without a problem.. Haha, with how fast you fixed that I first thought your reply was sarcasm :) Great job, helps a lot now.\nPS: same thing happens with !addlicense ASF if you have a large number of bots. Would be cool to have that throttled as well, but assume this isn't an issue for you (referencing this)\n\nif you're trying to execute addlicense on 300 bots at once, then I suggest to stop doing that, unless you want to get a ban from Valve for DoSing Steam servers. Took a bit for me to learn how to build in .NET Core (I know it's not required, but I like to always compile stuff myself), but I can say that ASF v3 is very stable, and you've made some great optimizations. Now my server with a hundred accounts went from 45% memory to ASF to around 20%, and also significantly lower CPU usage as well :)\n\nOnly thing unusual I've noticed is this:\n\nERROR|ASF|CheckForUpdate() ArchiSteamFarm.version is empty!\n\n(Assuming this is something your CI does that I probably forgot to do)\nSo yeah thanks again for this, and highly suggest that other semi-technical people try out v3, because it's really great :)\nEdit: can also confirm that it worked fine for me on macOS Sierra using premade binary (Homebrew didn't have core2.0 so didn't try selfbuild). Hey again Archi, can you please explain how the new options on MatchableTypes is supposed to work with regards to TradingPreferences? There's no wiki page for it yet, so I'm not sure if the following is a bug, or just intended behavior.\nI have TradingPreferences = 3 (STM trades), and set MatchableTypes to include backgrounds/foils/emoticons.\nTwo cases:\n1. I have only one foil in inventory, then if someone makes a trade for a different foil from same set, ASF accepts the trade because it's technically \"neutral\".\nBut IMO this trade shouldn't be considered neutral. Even though we're not technically losing progress on crafting, it will only be abused. Additionally, if we have some pending buy-order for foils in the rest of the set, a match will be significantly negative for us. I can't think of many cases where someone will want to do \"neutral\" foil trades.\n(If you disagree with changing STM logic for foils, perhaps it'd be a good idea to remove Foil from default config+hashset? People are stupid and are going to be pissed when they lose expensive foils to ninjas)\n\nSame thing with backgrounds/emoticons. Someone can take non-duplicate crafted items from me. I'd love to share my duplicate backgrounds with people regardless of the rarity, but I think it's a mistake if I am losing a non-duplicate unique item.\n\nIt's understandable if you disagree on case 1, but case 2 I think should be changed for sure -- bottom line is, one shouldn't lose a non-duplicate of a unique crafted item unless TradingPreferences has MatchEverything enabled. Hopefully this makes sense, thanks :). Cheers for that 1st change, think it will be better at least for initial public release.\nFor the 2nd part I said I don't care about rarity, just that one shouldn't trade away a unique crafted item if TradingPreferences is 3. So apologies then if it's a suggestion, because I feel that STM logic in ASF should be modified for these new items. Additionally, I am also pretty sure that steamtradematcher.com's setting for unique items only shows these items as a possible trade if it's a duplicate.\n-- In any case, that's my viewpoint, so feel free to not do anything regarding it and have a good weekend :). Darn, that is just bad wording from me.\nIf you see on Dota backgrounds. In this scenario I own one Tidehunter, and two Dragons, with TradingPreferences=3:\n- [ ] If someone offers any Dota background for a Dragon: accept, because I still have at least one Dragon in my inventory, so no real loss (neutral trade).\n- [ ] If someone offers any Dota background for a Tidehunter: deny, because I would be losing my only Tidehunter (negative trade).\nBasically I'm a hoarder who likes having one copy of every background on Steam.\n(If someone wants to take a background/emoji from me, they can gladly, as long as I'm not losing my last copy of that unique item. This is my logic behind it. :) Fully understand if you don't agree with that logic, but think it'd be cool, cheers!). Makes more sense, isn't purely neutral but I live with it, thx :)\nAlso crashed this morning; not sure if any of this is useful (don't see any type of stack trace?). Do I need to rebuild as debug and try to crash again?\nGot several of these:\n2017-07-21 02:51:34|dotnet-19313|WARN|Account2|Init() System.TimeoutException: The WebAPI call timed out\n   at SteamKit2.WebAPI.Interface.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object& result)\n   at CallSite.Target(Closure , CallSite , Object , UInt64 , String , String , String , Boolean )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass47_0.<Init>b__0()\n2017-07-21 02:51:35|dotnet-19313|INFO|Account2|OnDisconnected() Disconnected from Steam!\n2017-07-21 02:51:35|dotnet-19313|WARN|Account2|IsAnythingToFarm() Could not get badges' information, we will try again later!\nThen several of these:\n2017-07-21 02:51:52|dotnet-19313|WARN|Account8|Init() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at SteamKit2.WebAPI.Interface.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object& result)\n   at CallSite.Target(Closure , CallSite , Object , UInt64 , String , String , String , Boolean )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass47_0.<Init>b__0()\nUntil it finally crashed with this:\n2017-07-21 02:51:53|dotnet-19313|FATAL|ASF|OnUnhandledException() System.ObjectDisposedException: Cannot access a disposed object.\nObject name: 'System.Net.Sockets.Socket'.\n   at System.Net.Sockets.Socket.Poll(Int32 microSeconds, SelectMode mode)\n   at SteamKit2.TcpConnection.NetLoop()\n   at System.Threading.Thread.ThreadMain_ThreadStart()\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n2017-07-21 02:52:03|dotnet-19313|ERROR|ASF|Exit() Exiting with nonzero error code!\nMaybe looks like something from SK, so I'll be building from f564cc5ebbf231da948ec7c592ddc9f4d1ebf502 and see if maybe the Alpha5 improved something regarding it.. Crashed, think it was after I did \"!2faok\" but not sure.\n2017-07-28 03:17:37|dotnet-24052|FATAL|ASF|OnUnhandledException() System.ArgumentException: Only 'http' and 'https' schemes are allowed.\nParameter name: requestUri\n   at System.Net.Http.HttpRequestMessage.InitializeValues(HttpMethod method, Uri requestUri)\n   at System.Net.Http.HttpRequestMessage..ctor(HttpMethod method, Uri requestUri)\n   at ArchiSteamFarm.WebBrowser.<UrlRequest>d__34.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.WebBrowser.<UrlRequest>d__34.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.WebBrowser.<UrlGetToResponse>d__26.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.WebBrowser.<UrlGetToContent>d__22.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.WebBrowser.<UrlGetToHtmlDocument>d__24.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.WebBrowser.<UrlGetToHtmlDocumentRetry>d__11.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<GetConfirmations>d__32.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.MobileAuthenticator.<GetConfirmations>d__17.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<AcceptConfirmations>d__80.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<Response2FAConfirm>d__156.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<Response>d__95.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<HandleMessage>d__110.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<OnFriendMsg>d__135.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.ThreadPoolWorkQueue.Dispatch(). @JustArchi nice!\n2017-08-01 12:20:26|dotnet-15683|DEBUG|ASF|UrlRequest() Asked for <https://steamcommunity.com/mobileconf/conf?l=english&p=android:blah-blah-censored&m=android&tag=conf>, got unsafely redirected to <steammobile://lostauth/>, resolved URI to: <steammobile://lostauth/>\n2017-08-01 12:20:26|dotnet-15683|FATAL|ASF|OnUnhandledException() System.ArgumentException: Only 'http' and 'https' schemes are allowed.\nParameter name: requestUri\nSeem to reproduce it by going to Steam webchat, doing !2faok myUsername, closing tab instantly, then repeating this; on the 2nd time repeating, it does the crash. Not sure why, but 100% reproduce it myself like this.\nPS: I dislike how building ASF v3 copies the default configs into the out config directory. Is it possible to change this functionality, or must I just learn to use a different config directory? I don't remember it functioning like this with v2, but maybe I am wrong. Bit annoying to have my ASF.json overwritten and get the example configs every time. :). 2017-08-01 19:25:42|dotnet-3114|FATAL|ASF|OnUnhandledException() System.Net.WebSockets.WebSocketException (0x80004005): The remote party closed the WebSocket connection without completing the close handshake. ---> System.IO.IOException: Unable to transfer data on the transport connection: Connection reset by peer. ---> System.Net.Sockets.SocketException: Connection reset by peer\n   --- End of inner exception stack trace ---\n   at System.Net.Security.SslStreamInternal.EndRead(IAsyncResult asyncResult)\n   at System.Net.Security.SslStream.EndRead(IAsyncResult asyncResult)\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncTrimPromise`1.Complete(TInstance thisRef, Func`3 endMethod, IAsyncResult asyncResult, Boolean requiresSynchronization)\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\n   at System.Net.WebSockets.ManagedWebSocket.<EnsureBufferContainsAsync>d__70.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Net.WebSockets.ManagedWebSocket.<ReceiveAsyncPrivate>d__61.MoveNext()\n   at System.Net.WebSockets.ManagedWebSocket.<ReceiveAsyncPrivate>d__61.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.<ReadMessageAsync>d__14.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.<RunCore>d__11.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.WebSocketConnection.WebSocketContext.Dispose()\n   at SteamKit2.WebSocketConnection.DisconnectCore(Boolean userInitiated, WebSocketContext specificContext)\n   at SteamKit2.WebSocketConnection.Send(Byte[] data)\n   at SteamKit2.Internal.CMClient.Send(IClientMsg msg)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.TimerQueueTimer.CallCallback()\n   at System.Threading.TimerQueueTimer.Fire()\n   at System.Threading.TimerQueue.FireNextTimers()\n2017-08-01 19:25:42|dotnet-3114|ERROR|ASF|Exit() Exiting with nonzero error code!\nI am using newest version, but with SteamProtocols 7. I see you changed the default to 1 in https://github.com/JustArchi/ArchiSteamFarm/commit/f24be67c8cea1719e875eeb5f7225377407197ba#diff-85e03f3913921ce9cb277a2e22c05f93. Is this the reason behind the SK2 crash and I should use Protocols 1 instead?. With alpha6 the websocket crash hasn't happened yet, sweet.\nGot this \"fatal\" error a lot of times today -- happened around the time when I was crafting a lot of badges. It didn't actually crash ASF and probably isn't a common situation, so not sure worth reporting, but here ya go. (I was getting lots of \"new items\" notifications, and assume it ate all the semaphores)\n2017-08-03 03:51:15|dotnet-22806|FATAL|ASF|OnUnobservedTaskException() System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. (Adding the specified count to the semaphore would cause it to exceed its maximum count.) ---> System.Threading.SemaphoreFullException: Adding the specified count to the semaphore would cause it to exceed its maximum count.\n   at System.Threading.SemaphoreSlim.Release(Int32 releaseCount)\n   at ArchiSteamFarm.CardsFarmer.<OnNewItemsNotification>d__25.MoveNext()\n   --- End of inner exception stack trace ---\n---> (Inner Exception #0) System.Threading.SemaphoreFullException: Adding the specified count to the semaphore would cause it to exceed its maximum count.\n   at System.Threading.SemaphoreSlim.Release(Int32 releaseCount)\n   at ArchiSteamFarm.CardsFarmer.<OnNewItemsNotification>d__25.MoveNext()<---. Doing !owns ASF 730 (730 for example) in a direct message with a lot of accounts connected makes them all start to disconnect one at a time after a few minutes, with a simple OnDisconnected() Disconnected from Steam -- no errors or anything. I assume it's hitting something with ConnectionTimeout, while fetching owned games list?\nI am also still using websockets, but unsure if that's related, since there was no actual errors shown anywhere. Please let me know if there's something I can do to help debug, cheers.. Sorry, I don't understand your wording. Are you simply saying that I'm hitting some rate-limiting in Steam, and therefore Steam is closing my connections -- or something like that it's an SK2 issue?. > will arrive to public with this feature included\nI know my opinion doesn't matter, and you should of course try to make your supporters happy, but I really don't think you should make this feature.\nDoing discovery queue is basically harmless. But voting on Steam Awards I think is a big step forward that IMO you shouldn't include.\nYou're actually going to effect voting results with this. Do you not think it will get you more \"under the radar\" of Valve? The cat's already out of the bag, so to say, but hopefully you get my point.. So you're sure there's nothing wrong on the code of !loot^?\nIt seems weird that Valve would have a system to kick off all my bots at the same time like 30 minutes after doing a !loot^. This makes it feel more like some type of threading problem, akin to not replying to a PING/PONG on IRC :) But perhaps I'm wrong.\nAnd okay then, would appreciate to know if you have any other ideas regarding it, and thanks anyways. (Also noticed I'm using TCP SteamProtocols, I've switched to WebSocket now as I'm on 2.1.4 dotnet, maybe works better then). Just thought I should let you know that when using websocket connection, it worked fine with !loot^ ASF, none of my bots lost connection.\nThis reaffirms my (probably incorrect) assumption that there's some problem with the default TCP-only connection mode... but I digress. Don't know how I'd be able to debug it more as well, and the workaround works, so I'm happy for now :) Thanks mate.. Please turn on debugging and give more information about it on the Steam group.\nIt works for everyone else, so even if it is some bug, it's a bug related to your specific system. Seeing that you get \"disconnected\" instantly, it might be something with your network configuration and/or what you're doing to bypass GFW. Perhaps tweak SteamProtocols setting to see if it helps anything.\nIn any case, please post debugging on the Steam group and people might be able to help you. Cheers.. I understand your questions, but I'm not an expert on it either -- and don't think anyone outside of Valve HQ could really say for certain, because so much of Steam is a black-box. Will try to connect my personal experiences:\n\nWhen exactly is the block triggered\n\nAfter too many requests per minute to Steam's web servers. There are a few different blocks I know of:\n\n\nToo many requests to \"normal json-rpc\" endpoints that are used in Steam's built-in functions (eg https://steamcommunity.com/inventory/76561198006963719/753/1?l=english&count=75). As these endpoints are expected to get lots of hits by legitimate client activity, it doesn't do a full block -- just returns null.\n\n\nToo many requests to normal pages, or endpoints that aren't intended for intensive use.\n\n\nRun this once or twice, and then you will get a nice AkamaiGHost IP block from all SteamCommunity links: for i in {1..20}; do curl -sS \"https://steamcommunity.com/market/listings/578080/MILITIA%20CRATE\" -o/dev/null & done;\n(This case is the same as with my example in first post, when you're accepting too many tradeoffers at once)\n\nby which actions, globally, locally, is it the amount of requests, amount of open connections, concurrent connections, specific resource or maybe some other matter considered?\n\nBlock seems to be 100% IP-based (and turning on a VPN/changing IP gets you instantly past it). Don't think it has any relation to open connections;; ASF's WebSocket login connections remain stable to the Steam network even when blocked by SteamCommunity.\n\nAfter what time the block disappears, is it fixed time since last request? When should ASF retry after hitting first 403?\n\nI don't know((( But I think it's some kind of bucket: if you get blocked, you're blocked for ~10 minutes, but each further request adds a small amount of time to the bucket. In the current case of ASF, it's hammering the bucket, so it takes a longer time until reset, rather than just backing off for a short while and retrying once.\n\nWhat resources are blocked? Does the block affect only steamcommunity part, or maybe steam store, steam API, steam network too?\n\nVery smart question. store.steampowered and steamcommunity have similar blocking mechanisms (requesting too many pages per minute get you an AkamaiGHost block), but the blocks are separate from each other. So you can be blocked from Community, but still able to use Store, or vice-versa. \nAPI, bit harder for me to say. I think it's in its own block as well, but a block gives you some kind of null response, not an AkamaiGHost block.\nSteam Network has its own functionality for blocking, so even when blocked from Store or Community, you can still log in and such -- you just won't be able to use most ASF functionality because it depends on those other domains.\n\nDo you want to globally stop all bots once first 403 is received?\n\nI want it to identify when there's some problem, and hold back on any new HTTP requests to the domains you're blocked on. An incomplete solution that would still help a lot could even just be seeing that the response from steamcommunity is from AkamaiGHost saying \"You don't have permission to access.*\", or combined with header when blocked:\n< HTTP/1.1 403 Forbidden\n< Server: AkamaiGHost\nvs normal Apache header when not blocked. (Though I think it's better to see that it's AkamaiGHost, in case Valve decides to switch to nginx or something :))\nHTH, let me know if I missed something big here, or some other input I can give, thanks!. https://github.com/JustArchi/ArchiSteamFarm/wiki/Commands#notes\n\nPlease note that sending a command to the group chat acts like a relay - if you're saying redeem X to 3 of your bots sitting together with you on the group chat, it'll result in the same as you'd say redeem X to every single one of them privately. In most cases this is not what you want, and instead you should use given bot command that is being sent to a single bot in private window. ASF supports group chat, as in many cases it can be useful source for communication with it, but you should almost never execute any command on the group chat if there are 2 or more ASF bots sitting there, unless you fully understand ASF behaviour written here and you in fact want to relay the same command to every single bot that is listening to you.\nAnd even in this case you should use private chat with <Bots> syntax instead.. I think logic for \"Marketable\" should always be treated as True unless it's been confirmed otherwise. In the case of some awful bug, you do not want it to treat some actual marketable card as cross-set.. \n",
    "Loyolichoo": "Just lazy...Github can quick and easy to submit translation,and I can watch the source file to keep my translation is comfortable. ",
    "iBombe": "For example i have 20 bots idling for my main account, they all add each other and my main account so i dont have to login in all and send or accept the requests.. ",
    "Omicron666": "You may use http://steamcommunity.com/profiles/xxxxxxxxxxxxxxxxxxxx/ajaxgetusernews/\nthen fetch the \"next_request\" links 15 times to check games bought through Steam (for each precedent day).. ",
    "OctoNezd": "The problem with !api is that not too much languages support WCF, and BasicHTTP is vulnerable(right?). ",
    "Enverex": "Ok, I built Mono from GIT (which took... a while) and that resulted in 5.3.0. ASF then compiled fine, but wouldn't run (threw a lot of messages about decryption failing). I then switched back to 4.8 (but didn't rebuild) and it then ran successfully. Just for reference.\nI'll probably have to stick to binaries going forward if I need to update (or simply wait for Mono 5 to go stable).. ",
    "NotMrFlibble": "For those (like me) who build from source but can't or don't want to update Mono just yet, 2.3.0.8 is the last version which is buildable with 4.6.. ",
    "pigers": "fixed. ",
    "BigRedDoge": "Alright thanks for the response, I'll upgrade my server's memory.  Just thought I might as well put it out just in case there was an issue.. ",
    "mu-yu": "2017-04-20 09:31:40|ASF-1556|INFO|ASF|InitASF() ASF V2.3.0.5\n2017-04-20 09:31:40|ASF-1556|INFO|ASF|IsRuntimeSupported() \u4f60\u7684 .NET \u8fd0\u884c\u5e93\u7248\u672c\u53ef\u7528\u3002\n2017-04-20 09:31:40|ASF-1556|INFO|ASF|IsRuntimeSupported() \u6240\u9700\u7684\u7248\u672c\ufe30 4.6.1 |\u627e\u5230\u7684\u7248\u672c\ufe30 4.6.2\n2017-04-20 09:31:41|ASF-1556|INFO|ASF|CheckForUpdate() ASF \u5c06\u4f1a\u5728\u6bcf 24 \u4e2a\u5c0f\u65f6\u540e\u81ea\u52a8\u68c0\u67e5\u65b0\u7248\u672c\u3002\n2017-04-20 09:31:41|ASF-1556|INFO|ASF|CheckForUpdate() \u6b63\u5728\u68c0\u67e5\u65b0\u7248\u672c...\n2017-04-20 09:31:45|ASF-1556|WARN|ASF|UrlGetToContentRetry() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2017-04-20 09:31:45|ASF-1556|DEBUG|ASF|UrlGetToContentRetry() \u8bf7\u6c42\u5931\u8d25\ufe30 https://api.github.com/repos/JustArchi/ArchiSteamFarm/releases/latest\n2017-04-20 09:31:45|ASF-1556|WARN|ASF|CheckForUpdate() \u65e0\u6cd5\u68c0\u67e5\u6700\u65b0\u7248\u672c \uff01\n2017-04-20 09:31:45|ASF-1556|INFO|everain|Start() \u6b63\u5728\u542f\u52a8...\n2017-04-20 09:31:45|ASF-1556|INFO|everain|Connect() \u6b63\u5728\u8fde\u63a5.... \u6211\u4eec\u6709\u8d85\u591a\u53f0\u7535\u8111\u5171\u7528\u540c\u4e00\u4e2a\u51fa\u53e3ip\uff0c\u6240\u4ee5\u6ca1\u6709\u8ba4\u8bc1\u7684api\u8c03\u7528\u6709\u53ef\u80fd\u4f1a\u89e6\u53d1github\u7684\u9891\u7387\u9650\u5236\u3002\n\u8fd9\u91cc\u6709\u5199\u539f\u56e0\u548c\u89e3\u51b3\u65b9\u6848\uff1a https://developer.github.com/v3/#rate-limiting\uff0c\u4e0d\u592a\u61c2C#\uff0c\u7231\u83ab\u80fd\u52a9\uff0c\u56e7\u3002. ",
    "Pakbon": "Yes, I'll take my own use case.\n-Sometimes I get keys for which I don't know what games they give (e.g. random giveaways)\n-And other times there are keys for which I know they all give the same game (buying games in bulk)\nWhile I primarily get keys from the first, in which case  RedeemingPreferences of  value 1 will do just fine, the option to have a one-time exception means I won't have to configure one bot specifically to distribute keys and would make management easier. With the added effect of the bot not being rate-limited.. It doesn't affect it at all. But it's inconvenient to have to talk to different bots depending on whether I know what games a set of keys give..\nThat's correct. 10 to be exact. Again, inconvenience. It works by setting 2nd bot to distribute keys by default, but it's not a pretty solution.. That's why I suggested to have it unpack boosterpacks with a delay, ie with a set timer which can be set to amount of hours to check for boosterpacks.\nAlready got such a bot :). This was just something that annoyed me a bit and I wanted to fully automate it.\nEhhh... I could ofcourse also make a cronjob that interacts with IPC via curl on a set timer, so it's not that huge of an issue if this does not get implemented.. ",
    "nguyenxk": "Could you please add !craft <id> command to craft badge for bot?. ",
    "Himikat71": "Your program does not compile to Linux. ",
    "Fawers": "+1, I would also like this feature! But unlike @piitchyy , I think a JSON list of IDs (or a command line argument, something like --steamid X --steamid Y) would be better.. ",
    "ArtemGrandspb": "\u041d\u043e \u043c\u043e\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0440\u0435\u0448\u0438\u043b\u0430\u0441\u044c,\u0447\u0442\u043e \u0437\u0430 \u0434\u0435\u043b\u0430?. ",
    "lyjacky11": "OK I'll just disable FarmOffline then, thanks!. Ya, I just turned off FarmOffline and HandleOfflineMessages and it should work for now.. ",
    "andreasbleck": "I'm having a similar problem with v2.3.1.5, I have FarmOffline and HandleOfflineMessages both set to true, but the bot simply doesn't reply with anything, on the debug log there is a incoming message but no action is taken by the bot, I tried sending a CD-KEY but it doesn't even try to activate it, it used to work in previous versions (last one I used before the current one was v2.3.1.0).. ",
    "Juesto": "Do you even read?\n it wont be fixed. ",
    "Hyo-ko": "You could change the bot to offline with the ASF-ConfigGenerator.exe if you want to have ASF on and the bot off. But, just like !pause stops farming, you can just play and the bot will automatically stop while you play.\nI don't particularly use the GamesPlayedWhileIdle feature, but its purpose is to always have the bot play that game while its idling, therefore, you'd have to turn it off, farm offline or remove the GamesPlayedWhileIdle to have ASF running, but the bot, not doing anything.. ASF also serves to auto trade, sent your bot orders or give it new games with the process open (among other things). So, I don't think this is an issue. Otherwise, you wouldn't be able to do anything with the bot, unless it already has games to farm.. A notification for farming finished or an option to shut down the process after it's finished, sounds good. We'd just have to wait for Archi to get an answer for that.. ",
    "jat001": "@Hyo-ko Thanks for your reply. I do not run ASF locally. In fact, it running in a container on AWS ECS. So it is a little trouble to change config file. When the ASF process stopped, the container stopped too. And ECS agent will restart it. This is a reasonable behavior and I do not want to change it.\nI knew ASF will stop farm or play game when I am playing a game. But sometimes it makes me offline. So I really want to a way for stop the bot by sending commands on steam group chat and keep ASF process running.\nI think the best way to achieve it is add an option in global config (ASF.json). This option decide the behavior of ASF process when no bot is running, exit or keep running.. Sorry, I did not read it carefully.\nI found the way to prevent ASF process exit after I read the code and document.\nNo offense. I have been using GitHub for 5 years. But I never seen a issuse be closed like this way.\nAnyway, I do not want to discuss is it a good way to use github and I would like to share on steam group if I find a easy way to solve it.\nI apologize if I wasted your time.\n. ",
    "sylveon": "In that case is it possible to add an option for it. This way I could have\na script that runs ASF and sends me a notification/email when it exits to\ntell me farming is finished. ",
    "Botan626": "Yes, I did, and just re-read it if anything new was added. What you want to point me to?. What glitches?\n. I would disagree about me trying to abuse glitches, because the situation I described is about the game never've been opened solely for farming, and that is the reason it won't drop the card, and it will for sure if.\n\nSpamming Steam network with constant game opening/closing requests can be considered a DoS attack and directly violates Steam Online Conduct.\n\n^^  With this I understand this feature will be never released and is in fact dangerous.\nTopic is closed.. Could you add a command to manually force ASF clearing discovery queue?. @Nuklon\n\nCould we keep compatibility with ASFui's? With 3.0.5.1 it ain't working anymore.\n\nGood thing current ver. of ASFui aint working. This can help the author finally look into the Issues while making new one.\n. @KlappPc \nThanks a lot!\nThere might be an issue with showing commands' responses. https://i.imgur.com/VuBlSxL.png. >>but in practice I'll be shocked if it works even for this one without extra corrections\nWhy?. > ASF already states to you exact title of the game that is being farmed for cards.\nThat's right, but only for the single game mode farming. When ASF is farming multiple games at once, I have no idea what are these games more than often.\n\nDoing so also in hours case would be simply-put a spam of titles that doesn't mean much...\n\nNo. I didn't mean to auto plot the list every hour. Vice versa, only in the manual mode when the user wishes by sending a command to a bot via chat for e.g.\n\nbut if user truly wants that extra info spam\n\nWhy would you call it spam? If a bot's farming, let's say, 6-7 games, I suppose it will be quite a useful info on knowing what are these games.\n. Great you agreed with me on this. Thank you. Will wait for it. . Forgot about Paused property. Thanks, Archi.. Re Error 1006.\nUsing ASF on local machine on Win10 with AdBlock installed on Chrome, Firefox and Opera: only on Firefox this error occurs.. Pressing \"-\" won't minimize the window, the \"-\" will turn into a \"+\" only.\n\n. https://steamdb.info/app/203770/subs/. https://github.com/JustArchi/ArchiSteamFarm/wiki/Configuration\nKeep in mind that IPC works with SteamOwnerID, so if you want to use it you must provide a valid value here.. https://steamcommunity.com/groups/ascfarm/discussions/1/1353742967823505779/. Sent via email.. You are welcome!. ",
    "MaduRUDE": "yadayada ASF is not for using glitches. it's fixed now anyway by MS, no need to. it was not a problem with ASF, only MS decided to mark it, so there's nothing to fix really. that issue is long fixed by Microsoft, also that version of ASF is for 5$+ Patreons for now. subID. ",
    "OkmanEST": ":D no anti-virus is not a solution.\nWhat antivirus program you are using then? \n. brain.exe was also a virus so it was also deleted. Thanks for the link. . ",
    "navossoc": "Let me add something to this discussion...\nThis problem starts to happens on this commit: f7e0fca199d6e9f6a7483042a890e23dfb47013d\nSeems that when you have bumped the protobuf version, the problem just appeared.\nSure it is just a false positive, but, maybe it worth the look?\nYou can the same commit here, but protobuf reverted to 2.2.0\nhttps://github.com/JustArchi/ArchiSteamFarm/compare/f7e0fca199d6e9f6a7483042a890e23dfb47013d...navossoc:2.3.1.6-no-virus\n[]'s. @MaduRUDE I think they just whitelisted it, so that means that exactly build is \"fixed\"...\nIf you try to build the source, you will get the same false positive again.\nWhich is something really annoying, so on every update it will be needed to send to Microsoft for analysis.\nYeah, it is their fault (M$), but I don't think they care at all.. And who said it was ASF fault? I'll wait for @JustArchi to take a look. \nIf he does not think it pays to try to find the false positive. Okay, I'm done.\n. ",
    "canarslan12": "why we stitch from HtmlAgilityPack 1.5.0-beta5 to HtmlAgilityPack 1.5.0-beta6?\nlatest stable version is HtmlAgilityPack 1.4.9.5 (latest stable)\nIt must be the problem. ",
    "mostm": "@Logerfo Yeah. ",
    "YouChillMan": "but how do i connect man i've been trying for 4 days. ",
    "GwynbleiddI": "can not download. \nPlease send an e-mail\nKauH13@gmail.com. \nWhere can I become a patron and download the new version?. \nVery bad I just have a large volume of bots and I lose 2000 cards + per day!. \nIs it possible to get it right now in another way?. \nCould you tell when the version will be available?. \nGreetings! Yesterday it is possible because of the steams of Steam or for some other reason the execution of the quest occurred an hour earlier than the day was updated! And now ASF does not check the queue! Did you have the option to force this check forcibly or not?. \nVersion ASF 3,0,5,6. \nI understand it, but when large volumes are large losses. \nMaybe archie is coming up with something?. ",
    "KingRider": "@GwynbleiddI not try reply, prevent spam, use edit\nHe is virus, not work a download. Check a issue\nhttps://github.com/JustArchi/ArchiSteamFarm/issues?utf8=%E2%9C%93&q=is%3Aissue%20virus. ",
    "13xforever": "Going through game pages through Discovery Queue explicitly is not the same as opening the game page directly. We don't know how VALVe interprets the data (or not).. Not sure if related, but it seems ASF is having troubles with farming as well. No progress in 4 hours.\n2017-07-31 16:27:24|ArchiSteamFarm-10192|INFO|ASF|InitASF() ASF V3.0.0.6\n2017-07-31 16:27:24|ArchiSteamFarm-10192|INFO|ASF|CheckForUpdate() ASF will automatically check for new versions every 1 day.\n2017-07-31 16:27:24|ArchiSteamFarm-10192|INFO|ASF|CheckForUpdate() Checking for new version...\n2017-07-31 16:27:26|ArchiSteamFarm-10192|INFO|ASF|CheckForUpdate() Local version: 3.0.0.6 | Remote version: 3.0.0.6\n2017-07-31 16:27:26|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 16:27:26|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 16:27:26|ArchiSteamFarm-10192|INFO|idlebot|Start() Starting...\n2017-07-31 16:27:26|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 16:27:26|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 16:27:28|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 16:27:28|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 16:27:28|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 16:27:29|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 16:27:33|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 16:27:36|ArchiSteamFarm-10192|INFO|idlebot|Connect() Connecting...\n2017-07-31 16:27:36|ArchiSteamFarm-10192|INFO|idlebot|OnConnected() Connected to Steam!\n2017-07-31 16:27:36|ArchiSteamFarm-10192|INFO|idlebot|OnConnected() Logging in...\n2017-07-31 16:27:37|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 16:27:37|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 16:27:37|ArchiSteamFarm-10192|INFO|idlebot|OnLoggedOn() Successfully logged on!\n2017-07-31 16:27:37|ArchiSteamFarm-10192|INFO|idlebot|Init() Logging in to ISteamUserAuth...\n2017-07-31 16:27:37|ArchiSteamFarm-10192|INFO|idlebot|Init() Success!\n2017-07-31 16:27:38|ArchiSteamFarm-10192|INFO|idlebot|IsAnythingToFarm() Checking first badge page...\n2017-07-31 16:27:39|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:27:39|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:27:40|ArchiSteamFarm-10192|INFO|idlebot|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 16:27:42|ArchiSteamFarm-10192|INFO|idlebot|StartFarming() We don't have anything to idle on this account!\n2017-07-31 16:34:46|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 16:34:46|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 16:36:46|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 16:36:46|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 16:36:46|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 16:36:46|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 16:36:47|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 16:36:47|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 16:36:47|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 16:36:47|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 16:36:48|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 16:36:48|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 16:36:50|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 16:36:54|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 16:36:54|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 16:36:56|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:36:56|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:42:39|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:43:17|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 16:43:17|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 16:45:17|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 16:45:17|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 16:45:17|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 16:45:17|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 16:45:17|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 16:45:17|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 16:45:18|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 16:45:18|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 16:45:18|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 16:45:19|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 16:45:21|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 16:45:24|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 16:45:24|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 16:45:27|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:45:27|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:51:47|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 16:51:47|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 16:51:56|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:53:47|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 16:53:47|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 16:53:47|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 16:53:47|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 16:53:47|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 16:53:47|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 16:53:48|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 16:53:48|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 16:53:49|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 16:53:49|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 16:53:52|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 16:53:56|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 16:53:56|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 16:53:58|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:53:58|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 16:57:39|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:00:17|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 17:00:17|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:00:27|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:02:17|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 17:02:17|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 17:02:17|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 17:02:17|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:02:18|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 17:02:18|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 17:02:19|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 17:02:19|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 17:02:19|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 17:02:20|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 17:02:24|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 17:02:29|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 17:02:29|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 17:02:32|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:02:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:06:56|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:08:48|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 17:08:48|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:08:58|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:10:48|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 17:10:48|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 17:10:48|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 17:10:48|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:10:48|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 17:10:48|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 17:10:49|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 17:10:49|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 17:10:50|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 17:10:51|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 17:10:56|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 17:11:00|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 17:11:00|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 17:11:02|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:11:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:12:39|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:15:27|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:17:18|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 17:17:18|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:17:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:19:18|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 17:19:18|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 17:19:18|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 17:19:18|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:19:19|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 17:19:19|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 17:19:19|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 17:19:19|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 17:19:20|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 17:19:20|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 17:19:23|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 17:19:26|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 17:19:26|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 17:19:29|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:19:29|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:21:56|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:23:58|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:25:49|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 17:25:49|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:26:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:27:39|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:27:49|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 17:27:49|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 17:27:49|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 17:27:49|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:27:49|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 17:27:49|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 17:27:50|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 17:27:50|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 17:27:51|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 17:27:51|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 17:27:55|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 17:28:00|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 17:28:00|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 17:28:03|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:28:03|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:30:27|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:32:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:34:19|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 17:34:19|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:34:29|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:36:19|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 17:36:19|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 17:36:19|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 17:36:19|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:36:20|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 17:36:20|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 17:36:20|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 17:36:20|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 17:36:21|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 17:36:22|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 17:36:25|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 17:36:29|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 17:36:29|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 17:36:31|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:36:31|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:36:56|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:38:58|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:41:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:42:39|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:42:39|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 17:42:39|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 17:42:39|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 17:42:39|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 17:42:44|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 17:42:50|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 17:42:50|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:43:03|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:44:50|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 17:44:50|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 17:44:50|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 17:44:50|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:44:50|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 17:44:50|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 17:44:51|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 17:44:51|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 17:44:52|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 17:44:52|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 17:44:55|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 17:44:59|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 17:44:59|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 17:45:01|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:45:01|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:45:27|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:47:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:49:29|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:51:20|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 17:51:20|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:51:31|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:51:56|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:51:56|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 17:51:56|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 17:51:56|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 17:51:56|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 17:52:01|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 17:53:20|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 17:53:20|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 17:53:20|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 17:53:20|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 17:53:20|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 17:53:20|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 17:53:21|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 17:53:21|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 17:53:22|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 17:53:22|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 17:53:25|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 17:53:28|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 17:53:28|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 17:53:30|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:53:30|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:53:58|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:56:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:58:03|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 17:59:50|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 17:59:50|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:00:01|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:00:27|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:00:27|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 18:00:27|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 18:00:27|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 18:00:27|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 18:00:32|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 18:01:50|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 18:01:50|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 18:01:50|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 18:01:50|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:01:51|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 18:01:51|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 18:01:51|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 18:01:51|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 18:01:53|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 18:01:53|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 18:01:56|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 18:02:00|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 18:02:00|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 18:02:02|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:02:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:02:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:04:29|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:06:31|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:08:21|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 18:08:21|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:08:30|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:08:58|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:08:58|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 18:08:58|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 18:08:58|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 18:08:58|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 18:09:03|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 18:10:21|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 18:10:21|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 18:10:21|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 18:10:21|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:10:21|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 18:10:21|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 18:10:22|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 18:10:22|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 18:10:23|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 18:10:23|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 18:10:25|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 18:10:30|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 18:10:30|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 18:10:32|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:10:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:11:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:13:03|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:15:01|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:16:51|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 18:16:51|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:17:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:17:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:17:32|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 18:17:32|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 18:17:32|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 18:17:32|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 18:17:37|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 18:18:51|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 18:18:51|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 18:18:51|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 18:18:51|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:18:52|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 18:18:52|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 18:18:52|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 18:18:52|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 18:18:53|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 18:18:53|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 18:18:57|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 18:19:02|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 18:19:02|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 18:19:04|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:19:04|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:19:29|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:21:31|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:23:30|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:25:22|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 18:25:22|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:25:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:26:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:26:02|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 18:26:02|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 18:26:02|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 18:26:02|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 18:26:07|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 18:27:22|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 18:27:22|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 18:27:22|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 18:27:22|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:27:22|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 18:27:22|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 18:27:23|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 18:27:23|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 18:27:24|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 18:27:24|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 18:27:27|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 18:27:34|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 18:27:34|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 18:27:37|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:27:37|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:28:03|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:30:01|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:32:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:33:52|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 18:33:52|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:34:04|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:34:29|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:34:29|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 18:34:29|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 18:34:29|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 18:34:29|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 18:34:34|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 18:35:52|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 18:35:52|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 18:35:52|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 18:35:52|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:35:52|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 18:35:52|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 18:35:53|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 18:35:53|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 18:35:54|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 18:35:55|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 18:35:57|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 18:36:01|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 18:36:01|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 18:36:04|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:36:04|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:36:31|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:38:30|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:40:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:42:22|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 18:42:22|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:42:37|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:43:03|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:43:03|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 18:43:03|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 18:43:03|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 18:43:03|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 18:43:08|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 18:44:22|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 18:44:22|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 18:44:22|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 18:44:23|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:44:23|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 18:44:23|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 18:44:24|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 18:44:24|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 18:44:24|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 18:44:25|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 18:44:27|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 18:44:31|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 18:44:31|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 18:44:34|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:44:34|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:45:01|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:47:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:49:04|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:50:53|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 18:50:53|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:51:04|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:51:31|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:51:31|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 18:51:31|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 18:51:31|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 18:52:53|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 18:52:53|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 18:52:53|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 18:52:53|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:52:53|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 18:52:53|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 18:52:54|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 18:52:54|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 18:52:55|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 18:52:56|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 18:52:59|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 18:53:02|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 18:53:02|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 18:53:05|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:53:05|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:53:30|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:55:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:57:37|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 18:59:23|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 18:59:23|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 18:59:34|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:00:01|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:00:01|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 19:00:01|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 19:00:01|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 19:00:01|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 19:00:06|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 19:01:23|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 19:01:23|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 19:01:23|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 19:01:23|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 19:01:24|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 19:01:24|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 19:01:24|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 19:01:24|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 19:01:25|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 19:01:26|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 19:01:28|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 19:01:32|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 19:01:32|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 19:01:35|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:01:35|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:02:02|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:04:04|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:06:04|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:07:54|ArchiSteamFarm-10192|WARN|cardboter|HeartBeat() Connection to Steam Network lost. Reconnecting...\n2017-07-31 19:07:54|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 19:08:05|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:08:30|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Stopped idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:08:30|ArchiSteamFarm-10192|INFO|cardboter|Farm() Finished idling games: 456810, 439910, 447890, 340320, 398710\n2017-07-31 19:08:30|ArchiSteamFarm-10192|ERROR|cardboter|GetAppDataForIdling() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.<GetAppDataForIdling>d__84.MoveNext() \n2017-07-31 19:08:30|ArchiSteamFarm-10192|INFO|cardboter|IsPlayableGame() Idling 456810 (Zombillie) is temporarily disabled, as ASF is not able to play that game at the moment.\n2017-07-31 19:08:30|ArchiSteamFarm-10192|INFO|cardboter|OnDisconnected() Disconnected from Steam!\n2017-07-31 19:08:35|ArchiSteamFarm-10192|INFO|cardboter|StopFarming() Idling stopped!\n2017-07-31 19:09:54|ArchiSteamFarm-10192|ERROR|cardboter|InitPermanentConnectionFailure() Failed to disconnect the client. Abandoning this bot instance!\n2017-07-31 19:09:54|ArchiSteamFarm-10192|INFO|cardboter|Stop() Stopping...\n2017-07-31 19:09:54|ArchiSteamFarm-10192|INFO|cardboter|Start() Starting...\n2017-07-31 19:09:54|ArchiSteamFarm-10192|INFO|cardboter|Connect() Connecting...\n2017-07-31 19:09:54|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Connected to Steam!\n2017-07-31 19:09:54|ArchiSteamFarm-10192|INFO|cardboter|OnConnected() Logging in...\n2017-07-31 19:09:55|ArchiSteamFarm-10192|INFO|cardboter|OnLoggedOn() Successfully logged on!\n2017-07-31 19:09:55|ArchiSteamFarm-10192|INFO|cardboter|Init() Logging in to ISteamUserAuth...\n2017-07-31 19:09:56|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking first badge page...\n2017-07-31 19:09:57|ArchiSteamFarm-10192|INFO|cardboter|Init() Success!\n2017-07-31 19:10:00|ArchiSteamFarm-10192|INFO|cardboter|IsAnythingToFarm() Checking other badge pages...\n2017-07-31 19:10:04|ArchiSteamFarm-10192|INFO|cardboter|StartFarming() We have a total of 5 games (15 cards) left to idle (~9 hours, 30 minutes remaining)...\n2017-07-31 19:10:04|ArchiSteamFarm-10192|INFO|cardboter|Farm() Chosen idling algorithm: Complex\n2017-07-31 19:10:07|ArchiSteamFarm-10192|INFO|cardboter|FarmMultiple() Now idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:10:07|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:10:32|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:12:37|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810\n2017-07-31 19:14:34|ArchiSteamFarm-10192|INFO|cardboter|FarmHours() Still idling: 340320, 447890, 398710, 439910, 456810. can confirm, this didn't fix the problem with commands. Sent you the logs. This one works as expected. No, I haven't had any updates since patch Tuesday and it literally broke right after updating to this build.\n3.0.2.0 works fine after downgrading.. ",
    "kinosang": "I've tried to import the same maFile into WinAuth, it works well. But it does not work with ASF 2FA. I see the identity_secret in my maFile is a string of 17-digits number, is it in wrong format?. It's an issue of ios-steamguard-extractor, if anyone have the same problem, check this one:\nhttps://github.com/CaitSith2/ios-steamguard-extractor/issues/1. ",
    "yashendra2797": "I apologize if this is dumb, but I copied the config folder from the last v2 release of ASF to the new osx version of v3, and was faced with this error:\n``\nLast login: Wed Jul  5 13:32:26 on ttys001\n/Users/yashendra2797/Downloads/ASF-osx-x64/ArchiSteamFarm ; exit;\n\u279c  ~ /Users/yashendra2797/Downloads/ASF-osx-x64/ArchiSteamFarm ; exit;\n2017-07-05 13:32:33|ArchiSteamFarm-21859|INFO|ASF|InitASF() ASF V3.0.0.2\n2017-07-05 13:32:34|ArchiSteamFarm-21859|INFO|ASF|CheckForUpdate() ASF will automatically check for new versions every 1 day.\n2017-07-05 13:32:34|ArchiSteamFarm-21859|INFO|ASF|CheckForUpdate() Checking for new version...\n2017-07-05 13:32:42|ArchiSteamFarm-21859|INFO|ASF|CheckForUpdate() Local version: 3.0.0.2 | Remote version: 3.0.0.2\n2017-07-05 13:32:42|ArchiSteamFarm-21859|INFO|Main|Start() Starting...\n2017-07-05 13:32:45|ArchiSteamFarm-21859|INFO|Main|Connect() Connecting...\n2017-07-05 13:32:48|ArchiSteamFarm-21859|INFO|Main|OnConnected() Connected to Steam!\n2017-07-05 13:32:48|ArchiSteamFarm-21859|INFO|Main|OnConnected() Logging in...\n2017-07-05 13:32:48|ArchiSteamFarm-21859|ERROR|Main|HandleCallbacks() Interop+AppleCrypto+AppleCommonCryptoCryptographicException: The system cryptographic library returned error '-4305' of type 'CCCryptorStatus'\n   at Internal.Cryptography.AppleCCCryptor.ProcessInteropError(Int32 functionReturnCode, Int32 ccStatus)\n   at Internal.Cryptography.AppleCCCryptor.Reset()\n   at Internal.Cryptography.AppleCCCryptor.TransformFinal(Byte[] input, Int32 inputOffset, Int32 count)\n   at Internal.Cryptography.UniversalCryptoEncryptor.UncheckedTransformFinalBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount)\n   at Internal.Cryptography.UniversalCryptoTransform.TransformFinalBlock(Byte[] inputBuffer, Int32 inputOffset, Int32 inputCount)\n   at SteamKit2.CryptoHelper.SymmetricEncryptWithIV(Byte[] input, Byte[] key, Byte[] iv)\n   at SteamKit2.TcpConnection.Send(IClientMsg clientMsg)\n   at SteamKit2.Internal.CMClient.Send(IClientMsg msg)\n   at ArchiSteamFarm.ArchiHandler.LogOnWithoutMachineID(LogOnDetails details)\n   at ArchiSteamFarm.Bot.OnConnected(ConnectedCallback callback)\n   at System.Collections.Generic.List1.ForEach(Action`1 action)\n   at SteamKit2.CallbackManager.RunWaitAllCallbacks(TimeSpan timeout)\n   at ArchiSteamFarm.Bot.HandleCallbacks() \n```\nI'm running macOS High Sierra 10.13 Beta (17A291m) on my MacBook Air (Mid 2013).\nPlease let me know if I can do anything else to help, and please accept my sincere apologies if I haven't realized something simple and posted in the wrong place.\nEDIT: I use ASF 2FA.\nEDIT 2: Tried the generic version. Same problem.\n. Getting a crash after I updated from 3.0.0.4 to 3.0.1.0. Here's a dump of the log.txt. Reinstall?\n```\n2017-08-03 00:04:41|ArchiSteamFarm-18920|INFO|ASF|InitASF() ASF V3.0.1.0 (f684357f-f692-4d26-9fca-8a212c1aa5cd)\n2017-08-03 00:04:41|ArchiSteamFarm-18920|FATAL|ASF|OnUnhandledException() System.AggregateException: One or more errors occurred. (Could not load file or assembly 'Mono.Posix.NETStandard, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.) ---> System.IO.FileNotFoundException: Could not load file or assembly 'Mono.Posix.NETStandard, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\n   at ArchiSteamFarm.ASF.d__6.MoveNext()\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.StartTStateMachine\n   at ArchiSteamFarm.ASF.CheckForUpdate(Boolean updateOverride)\n   at ArchiSteamFarm.Program.d__22.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Program.d__21.MoveNext()\n   --- End of inner exception stack trace ---\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\n   at ArchiSteamFarm.Program.Main(String[] args)\n---> (Inner Exception #0) System.IO.FileNotFoundException: Could not load file or assembly 'Mono.Posix.NETStandard, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\nFile name: 'Mono.Posix.NETStandard, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\n   at ArchiSteamFarm.ASF.d__6.MoveNext()\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.StartTStateMachine\n   at ArchiSteamFarm.ASF.CheckForUpdate(Boolean updateOverride)\n   at ArchiSteamFarm.Program.d__22.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Program.d__21.MoveNext()\n<---\n2017-08-03 00:04:41|ArchiSteamFarm-18920|ERROR|ASF|Exit() Exiting with nonzero error code!\n```\n. Which files should I save for reinstall? Just the config folder?. So, I deleted my original ASF v3 folder, unzipped, and then copied over my config folder. No dice. Any other way I can troubleshoot and help?. ",
    "bartonjs": "\nIt's a bug in .NET Core itself\n\nThe regression was in OSX 10.13 (the code worked in 10.12 and 10.11, if not further back); so I'd contend it's a bug in OSX 10.13 (Beta), not CoreFX.  Nonetheless, we've already fixed it (despite me having failed to close the issue).. ",
    "genesix-eu": "Hi, before Steam Sale I wanted to use ASF to loot my accounts for steam cards (at the end I didn't because it's too complicated to set up and use) but I created an app that let you change some values in all json files.\nMaybe your JS-based ConfigGenerator could also contain some option to edit some values in all json files (or even better to be able to add files in some groups and edit values bases on groups.)\nI don't know how you edit multiple json files (maybe regex or something...) but editing one file by one is not gud.\nThis is app i did...\nhttps://github.com/genesix-eu/asf_mass_config_editor. I done this (some time ago and I updated it today to what I am using) to me so maybe someone it will use or make it better until new gui is finished...\nhttps://github.com/genesix-eu/asf_mass_config_editor. I would like this too.. Yes please.... ",
    "4679": "I'm running Archlinux x86_64 with linux-4.9.35-1-lts kernel.\n2017-07-09 22:55:28|ArchiSteamFarm-560|INFO|ASF|InitASF() ASF V3.0.0.2\n2017-07-09 22:55:29|ArchiSteamFarm-560|INFO|ASF|CheckForUpdate() ASF will automatically check for new versions every 1 day.\n2017-07-09 22:55:29|ArchiSteamFarm-560|INFO|ASF|CheckForUpdate() Checking for new version...\n2017-07-09 22:55:43|ArchiSteamFarm-560|INFO|ASF|CheckForUpdate() Local version: 3.0.0.2 | Remote version: 2.3.2.0\n2017-07-09 22:55:43|ArchiSteamFarm-560|WARN|ASF|CheckForUpdate() You're using a version that is newer than latest released version for your update channel. Please note that pre-release versions are dedicated to users who know how to report bugs, deal with issues and give feedback - no technical support will be given.\nNo usable version of the libssl was found\n[1]    560 abort (core dumped)  ./ArchiSteamFarm\nI have already installed dotnet-runtime-2.0. Thanks\n$ yaourt -Qi openssl | grep Version\nVersion         : 1.1.0.f-1\n$ ll /usr/lib/libssl*\nlrwxrwxrwx 1 root root   13 May 26 00:48 /usr/lib/libssl.so -> libssl.so.1.1\n-rwxr-xr-x 1 root root 428K May 26 00:49 /usr/lib/libssl.so.1.1\nBTW,It's runing flawlessly on Windows 10.. @JustArchi Thanks a lot.. ",
    "MrMarble": "I have Armbian 5.30 version of Ubuntu Xenial\nmrmarble@orangepilite:~/ASF-ARM$ ./ArchiSteamFarm --server\n2017-07-10 13:45:05|ArchiSteamFarm-21199|INFO|ASF|InitASF() ASF V3.0.0.2\n2017-07-10 13:45:11|ArchiSteamFarm-21199|INFO|ASF|Start() Starting IPC server on http://127.0.0.1:1242/IPC/...\n2017-07-10 13:45:12|ArchiSteamFarm-21199|INFO|ASF|Start() IPC server ready!\n2017-07-10 13:45:12|ArchiSteamFarm-21199|ERROR|ASF|CheckForUpdate() ArchiSteamFarm.version is invalid!\nIt seems that the IPC server doesn't work outside of localhost, i can get it work with 127.0.0.1:1242 but no with 196.168.1.48:1242 (the IP of my machine) before with WCF it worked like a charm without openning ports\nAlso I'm making (almost done it but i'm rewriting it for working with the new .Net Core version of ASF) an ASF bot for Telegram so you can see and control your bots and it would be pretty useful if you can modify the bot's config by commands in --server mode. It seems that when using --server ASF doesn't closes the socket when shutting down the proccess, If you try to run it again you get an error saying the address is already in use, you need to restart the system for it to work again\n2017-07-10 14:11:01|ArchiSteamFarm-22644|INFO|ASF|Start() Starting IPC server on http://192.168.1.48:1242/IPC/...\n2017-07-10 14:11:01|ArchiSteamFarm-22644|ERROR|ASF|Start() System.Net.HttpListenerException (0x80004005): Address already in use\n   at System.Net.HttpEndPointManager.GetEPListener(String host, Int32 port, HttpListener listener, Boolean secure)\n   at System.Net.HttpEndPointManager.AddPrefixInternal(String p, HttpListener listener)\n   at System.Net.HttpEndPointManager.AddListener(HttpListener listener)\n   at System.Net.HttpListener.Start()\n   at ArchiSteamFarm.IPC.Start(). It seems that only occurs in some accounts, in others they are just fine, what is going on?\nI have ubuntu and running ASF 3.0.0.6\nI tried to activate some steam keys and they are indeed activated in my account but ASF answered me with this:\n1|ASF      | 2017-07-25 19:49:13|ArchiSteamFarm-776|ERROR|Principal|RedeemKey() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n1|ASF      |    at ArchiSteamFarm.ArchiHandler.<RedeemKey>d__11.MoveNext()\n1|ASF      | 2017-07-25 19:49:13|ArchiSteamFarm-776|INFO|ASF|HandleRequest() Answered to IPC command: !redeem Principal 2L2D4-K9ND9-PFJK6 with:\n1|ASF      | <Principal> Key: 2L2D4-K9ND9-PFJK6 | Status: Timeout\n1|ASF      | <Principal> Unused keys: 2L2D4-K9ND9-PFJK6\n1|ASF      | 2017-07-25 19:49:24|ArchiSteamFarm-776|ERROR|Principal|RedeemKey() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n1|ASF      |    at ArchiSteamFarm.ArchiHandler.<RedeemKey>d__11.MoveNext()\n1|ASF      | 2017-07-25 19:49:24|ArchiSteamFarm-776|INFO|ASF|HandleRequest() Answered to IPC command: !redeem Principal 263ZK-VY3CN-P39PZ with:\n1|ASF      | <Principal> Key: 263ZK-VY3CN-P39PZ | Status: Timeout\n1|ASF      | <Principal> Unused keys: 263ZK-VY3CN-P39PZ\n1|ASF      | 2017-07-25 19:49:48|ArchiSteamFarm-776|ERROR|Principal|RedeemKey() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n1|ASF      |    at ArchiSteamFarm.ArchiHandler.<RedeemKey>d__11.MoveNext()\n1|ASF      | 2017-07-25 19:49:48|ArchiSteamFarm-776|INFO|ASF|HandleRequest() Answered to IPC command: !redeem Principal 0XWXF-A3A4X-PYX04 with:\n1|ASF      | <Principal> Key: 0XWXF-A3A4X-PYX04 | Status: Timeout\n1|ASF      | <Principal> Unused keys: 0XWXF-A3A4X-PYX04\n1|ASF      | 2017-07-25 19:49:59|ArchiSteamFarm-776|ERROR|Principal|RedeemKey() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n1|ASF      |    at ArchiSteamFarm.ArchiHandler.<RedeemKey>d__11.MoveNext()\n1|ASF      | 2017-07-25 19:49:59|ArchiSteamFarm-776|INFO|ASF|HandleRequest() Answered to IPC command: !redeem Principal 30RHL-Z2J8H-QGM48 with:\n1|ASF      | <Principal> Key: 30RHL-Z2J8H-QGM48 | Status: Timeout\n1|ASF      | <Principal> Unused keys: 30RHL-Z2J8H-QGM48\n1|ASF      | 2017-07-25 19:50:10|ArchiSteamFarm-776|ERROR|Principal|RedeemKey() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n1|ASF      |    at ArchiSteamFarm.ArchiHandler.<RedeemKey>d__11.MoveNext()\n1|ASF      | 2017-07-25 19:50:10|ArchiSteamFarm-776|INFO|ASF|HandleRequest() Answered to IPC command: !redeem Principal 2L3M2-ETW0N-L3TRW with:\n1|ASF      | <Principal> Key: 2L3M2-ETW0N-L3TRW | Status: Timeout\n1|ASF      | <Principal> Unused keys: 2L3M2-ETW0N-L3TRW\n1|ASF      | 2017-07-25 19:50:21|ArchiSteamFarm-776|ERROR|Principal|RedeemKey() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n1|ASF      |    at ArchiSteamFarm.ArchiHandler.<RedeemKey>d__11.MoveNext()\n1|ASF      | 2017-07-25 19:50:21|ArchiSteamFarm-776|INFO|ASF|HandleRequest() Answered to IPC command: !redeem Principal 0TXF4-MNLDF-ZAHLK with:\n1|ASF      | <Principal> Key: 0TXF4-MNLDF-ZAHLK | Status: Timeout\n1|ASF      | <Principal> Unused keys: 0TXF4-MNLDF-ZAHLK\n1|ASF      | 2017-07-25 19:50:32|ArchiSteamFarm-776|ERROR|Principal|RedeemKey() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n1|ASF      |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n1|ASF      |    at ArchiSteamFarm.ArchiHandler.<RedeemKey>d__11.MoveNext()\n1|ASF      | 2017-07-25 19:50:32|ArchiSteamFarm-776|INFO|ASF|HandleRequest() Answered to IPC command: !redeem Principal JV4IR-D768L-VE05X with:\n1|ASF      | <Principal> Key: JV4IR-D768L-VE05X | Status: Timeout\n1|ASF      | <Principal> Unused keys: JV4IR-D768L-VE05X\nThe extra info is from the process manager that I use . Maybe this isn't the best place to put this but my telegram bot for ASF is working now so here you have the link to it https://github.com/MrMarble/ASFBot\nI'm still updating it to work with the new features, that's why I posted it here. You have changed the api command and now it doesn't show the bot config, wich is good because you no longer have your passwords in plain text in the \"air\" but now I can't detect if a account is bot or it isn't, I was using it to identificate the accounts in my telegram bot, could you please add back this info?\nJust theisBotAccount: True. I have more than 600 games, and i'm not new to asf, the error just came up. I'm having this error when trying to display the logs, currently i'm 3.1.1.1 docker x64 but it also appears in windows version\n**EDIT: I've updated to version 3.1.1.7 and still same error\n\n. @JourneyOver Yes, I'm using uBlock Origin, but I already tried to disable it and still the same error. I don't think so, I'm currently abroad in a different country with my laptop, also is the first time i'm installing it in that system, I had the same problem at home with my main windows pc\n. @Luckz My main pc is Windows 10 and currently I have it running in my server with Debian 8 and my laptop is Ubuntu 17, I'm using Firefox if it helps. @MrBurrBurr Yes, this is the response I got:\nHTTP/1.1 200 OK\nServer: Microsoft-NetCore/2.0\nDate: Mon, 19 Mar 2018 08:24:01 GMT\nTransfer-Encoding: chunked. Currently I'm using ASF version 3.1.1.8 in a docker container running in Debian 8.\nIn my client pc I have Ubuntu 17 running latest version of Firefox without adblocker and still can't access log page:\n\nError!\nEvent code: 1006. @JustArchi Oh sorry, it was only because I didn't saw it in the current bug list so I was reporting is still failing in the new version.\n\nSorry for the spam. There's a bug with the config editor in the function prepareConfigForSaving\nThe function loads the configuration that it retrieved from the API, the problem is that if one of the properties has a default value, is not included in the ASF response so when the function prepareConfigForSaving loop through all the keys in the config to update them with the one in the forms if the property had a default value is not going to be part of the loop so is never going to be changed.\n```js\nfunction prepareConfigForSaving() {\n    var botName = $('#saveButton').data('BotName'),\n        config = globalConfig; //Here it loads the config object that ASF sent in the ajax request \nfor (var key in config) {\n\n...\n```\nfor example if the property RedeemingPreferences has the default value 0 the API endpoint /Api/Bot/Bot_name is not going to have it because as in the BotConfig Wiki says:\n\nTypically this object will include only a subset of all config properties - those that the user has modified (minimalistic config).\n\nSo if the user try to change that value as there's not a entry in the globalConfig object is not going to be saved.\nI think 3 ways of possible fixes:\n Change ASF Behavior\n    + Adding a parameter to the /Api/Bot/{Bot} endpoint so it returns all the properties\n    + Changing the response of the endpoint without adding extra parameters\n Looping through the form elements instead of the globalConfig\n* Pre populating the globalConfig object with all the properties and the default values that will be filled by the ajax response\nMaybe I can create a pull request but is a bit late where I live so it will have to wait. Thanks to the commit I saw that I needed the SteamOwnerId in the configuration, There's a bug in the IPC GUI, it is using the s_SteamOwnerId instead of SteamOwnerId that's why it deleted mine, I'll make a PR. ",
    "yimouleng": "I can't open the file. On Linux, I use ASF-linux-x64's compressed package. I use win's compressed package on win10, but it works perfectly\uff1a\n[root@VM_119_102_centos opt]# chmod +x ArchiSteamFarm\n[root@VM_119_102_centos opt]# ./ArchiSteamFarm\nFailed to load 8b, error: libunwind.so.8: cannot open shared object file: No such file or directory\nFailed to bind to CoreCLR at '/opt/libcoreclr.so'\n[root@VM_119_102_centos opt]#\nMy linux is centos 7.2 x64. Thanks. It's settled perfectly, thanks. ",
    "Smankusors": "Well there's the bug (or it isn't?) that crashes ASF, but I can't really consistently reproduce this bug. What happen is when I sleep my computer for some hours, and then wake it up, the ASF somewhat crashed. I tried to reproduce it 5 times but it only crashed 2 times.\nI think this exception come from SteamKit? I'm using Windows 10 btw\nlog_1.txt\nlog_2.txt\n. What is that? ASF v2 or v3? Where is the full log btw?. I suggest you to instead you rename ArchiSteamFarm.exe, why not you create the shortcut pointing to ArchiSteamFarm.exe? \ud83d\ude04 . it still happens btw on 3.0.0.7 \ud83d\ude22 . ",
    "Janniqz": "\n2017-08-02 01:06:00|ArchiSteamFarm-27788|INFO|ASF|CheckForUpdate() Lade neue Version herunter: 3.0.0.9 (14 MB)... W\u00e4hrend du wartest, denk dar\u00fcber nach zu spenden, wenn du die geleistete Arbeit zu sch\u00e4tzen wei\u00dft! :)\n2017-08-02 01:06:11|ArchiSteamFarm-27788|INFO|ASF|CheckForUpdate() Aktualisierung abgeschlossen!\n2017-08-02 01:06:11|ArchiSteamFarm-27788|INFO|ASF|RestartOrExit() Starte neu...\n2017-08-02 01:06:16|ArchiSteamFarm-27788|ERROR|ASF|Restart() System.ComponentModel.Win32Exception (0x80004005): No such file or directory\n   at Interop.Sys.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Int32& lpChildPid, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd)\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\n   at System.Diagnostics.Process.Start()\n   at System.Diagnostics.Process.Start(ProcessStartInfo startInfo)\n   at ArchiSteamFarm.Program.d__19.MoveNext()\n\nCrashes on linux-arm after updating. Seems to change access permissions as I can't launch the program after the crash and manually have to adjust the permissions.. Updated from 3.0.1.0 to 3.0.1.1 without crashing nor chmod problems.\nWill report back if I find anything else.. ",
    "pessotti": "@JustArchi good day! Is it possible to add a command-line argument to just run ASF to get a Steam Guard code without all the delay to start the bot and connect to Steam server?. ",
    "Nuklon": "Probably the best place to put this idea, although I'm sure you've read this idea somewhere before. I know you've made a JS config generator, but for controlling ASF there's not much available for V3. I do not feel that executing commands directly through the browser is very user friendly. So, it would be nice if you could add something similar to ASFui to V3. Or perhaps a web-controllable UI. Anything would be an improvement really. \nYou state on the wiki that there are no cross platform UIs, well, here are some that might give you some ideas:\nhttps://github.com/mono/xwt\nhttps://github.com/picoe/Eto\nhttps://github.com/AvaloniaUI/Avalonia\nhttps://github.com/noliar/DevZH.UI (.NET Core)\n. OK, I'll remove the issue, but it's playable for me and it also gives out cards. Probably not worth fixing then.\nThank you for the information by the way \ud83d\udc4d \nThought you might like some stats, memory usage went from ~100MB to ~85MB here. Not a ton of difference, but anything is welcome. Will upload some more fixes to ASFui now.. @JustArchi \nCould we keep compatibility with ASFui's? With 3.0.5.1 it ain't working anymore.. OK, would be nice if you could update the wiki then to include the changed IPC endpoint.. BTW, doesn't ASF output received IPC commands to console anymore? This was rather useful.. FYI, solved it by hard setting the \"SteamPassword\" in the .json files. But perhaps still worth fixing.. I even searched for it, seems I had some whitespace before it \ud83d\ude22\nWhy not filter this exception out from printing in the console?. OK, fair enough, thanks, will look into that.. It's not refundable, it's a key activation.\nI'll post that screenshot tomorrow.. Strangely enough, all of a sudden the Stronghold games started idling.\nHalcyon is still not working though:\nhttps://i.imgur.com/s5vHI4S.png\nhttps://i.imgur.com/kJB5I6K.png\nhttps://i.imgur.com/uCcJnRT.png\nIt's a key so there's no refundable period or anything. This game hasn't idled for the last half year I think.. @JustArchi \nThe other game (Halcyon) isn't working though. That's not cached as it's not working for about half a year.. I'll send it in a few minutes, thanks \ud83d\udc4d . Did you receive it @JustArchi ?. Strange, it does show here, I've sent it now through two other providers as well. If it's still not visible I'll attach it here.. Alright, sent twice to gmail now \ud83d\udc4d . Thanks, I've been restarting ASF a couple of times and it says that \nIdling is temporarily disabled, as ASF is not able to play that game at the moment.\nI've been debugging it and this check fails:\nProgram.GlobalDatabase.AppIDsToPackageIDs.TryGetValue(appID, out ConcurrentHashSet<uint> packageIDs)\nGoing a bit further, ASF is loading its GlobalDatabase from file. Which only contains appid 371200 for my package id (which is the classic version). However, the new - non-classic version - drops cards (appid 651660), is not in my GlobalDatabase. As ASFs database only has the classic version in it and not the newly added appid for the package, it will never idle cards (this package has been added on a later stage, but ASF never updates its database). So this is an issue in ASF. Maybe it should update the packages to appids at some point (like every month or so) to allow for such circumstances. Or perhaps better, force an update of the appids found on the badge page. Although I'm not sure if a direct api call exists to get all package ids from an appid.\nBTW, this check:\nHashSet<uint> missingPackageIDs = new HashSet<uint>(packageIDs.AsParallel().Where(packageID => AppIDsToPackageIDs.Values.All(packages => !packages.Contains(packageID))));\nIs extremely slow here (I own 8000 or so packages). It takes about a second here to complete.\nThis is much faster (a few ms):\nHashSet<uint> availablePackageIDs = AppIDsToPackageIDs.Values.SelectMany(x => x).ToHashSet();\n                HashSet<uint> missingPackageIDs = new HashSet<uint>(packageIDs.Where(packageID => !availablePackageIDs.Contains(packageID)));\nUPDATE:\nFYI, I've modified ASF to force all package ids to update once and:\n\n2017-12-30 13:26:27|ArchiSteamFarm-12428|INFO|00|FarmMultiple() Now idling: 651660\n2017-12-30 13:26:27|ArchiSteamFarm-12428|INFO|00|FarmHours() Still idling: 651660\n. Just gonna list some features I'm missing still in the UI or don't find very useful as-is @MrBurrBurr . Hope you don't mind \ud83d\udc4d \n- The command generator doesn't auto append a space at the end so I have to manually type in a space to do a command.\n- The command generator doesn't remember the last used bot (and command). I rarely execute actions on my other bots and it's a rather tedious task now.\n- I'm missing quick commands, such as a 2fa token (which should ideally be copied to clipboard automatically) and redeem (see ASFui, which also uses multiline input, which can be useful for this UI too I think).\n- I think Config at the left side should be renamed to Bot config, I initially thought this was ASF config (which still seems to be missing).. 3.4.2.0 works, 3.4.2.1 doesn't, it doesn't work from commit 5f33512658d57623d6caccb95d6765793bdc932c (inclusive). I thought it happened at the badge page, but perhaps that's not entirely correct going over all logs.\n\n2019-01-04 11:43:29|ArchiSteamFarm-7676|INFO|02|Connect() Connecting...\n2019-01-04 11:43:29|ArchiSteamFarm-7676|INFO|02|OnConnected() Connected to Steam!\n2019-01-04 11:43:29|ArchiSteamFarm-7676|INFO|02|OnConnected() Logging in...\n2019-01-04 11:43:30|ArchiSteamFarm-7676|INFO|02|OnLoggedOn() Successfully logged on as z.\n2019-01-04 11:43:30|ArchiSteamFarm-7676|INFO|02|Init() Logging in to ISteamUserAuth...\n2019-01-04 11:43:30|ArchiSteamFarm-7676|INFO|02|OnDisconnected() Disconnected from Steam!\n2019-01-04 11:43:30|ArchiSteamFarm-7676|INFO|02|OnDisconnected() Reconnecting...\n2019-01-04 11:43:32|ArchiSteamFarm-7676|WARN|02|Init() SteamKit2.WebAPIRequestException: Response status code does not indicate success: Forbidden (Forbidden).\n   at SteamKit2.WebAPI.AsyncInterface.<CallAsyncCore>d__9.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at CallSite.Target(Closure , CallSite , Object )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass53_1.<<Init>b__0>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<WebLimitRequest>d__84`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<Init>d__53.MoveNext()\n2019-01-04 11:43:49|ArchiSteamFarm-7676|INFO|03|Connect() Connecting...\n2019-01-04 11:43:49|ArchiSteamFarm-7676|INFO|03|OnConnected() Connected to Steam!\n2019-01-04 11:43:49|ArchiSteamFarm-7676|INFO|03|OnConnected() Logging in...\n2019-01-04 11:43:49|ArchiSteamFarm-7676|INFO|03|OnLoggedOn() Successfully logged on as u.\n2019-01-04 11:43:50|ArchiSteamFarm-7676|INFO|03|Init() Logging in to ISteamUserAuth...\n2019-01-04 11:43:50|ArchiSteamFarm-7676|INFO|03|IsAnythingToFarm() Checking first badge page...\n2019-01-04 11:43:51|ArchiSteamFarm-7676|INFO|03|Init() Success!\n2019-01-04 11:43:52|ArchiSteamFarm-7676|INFO|03|StartFarming() We don't have anything to idle on this account!\n2019-01-04 11:44:09|ArchiSteamFarm-7676|INFO|04|Connect() Connecting...\n2019-01-04 11:44:09|ArchiSteamFarm-7676|INFO|04|OnConnected() Connected to Steam!\n2019-01-04 11:44:09|ArchiSteamFarm-7676|INFO|04|OnConnected() Logging in...\n2019-01-04 11:44:10|ArchiSteamFarm-7676|INFO|04|OnLoggedOn() Successfully logged on as x.\n2019-01-04 11:44:10|ArchiSteamFarm-7676|INFO|04|Init() Logging in to ISteamUserAuth...\n2019-01-04 11:44:10|ArchiSteamFarm-7676|INFO|04|OnDisconnected() Disconnected from Steam!\n2019-01-04 11:44:10|ArchiSteamFarm-7676|INFO|04|OnDisconnected() Reconnecting...\n2019-01-04 11:44:12|ArchiSteamFarm-7676|WARN|04|Init() SteamKit2.WebAPIRequestException: Response status code does not indicate success: Forbidden (Forbidden).\n   at SteamKit2.WebAPI.AsyncInterface.<CallAsyncCore>d__9.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at CallSite.Target(Closure , CallSite , Object )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass53_1.<<Init>b__0>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<WebLimitRequest>d__84`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<Init>d__53.MoveNext()\n2019-01-04 11:44:29|ArchiSteamFarm-7676|INFO|05|Connect() Connecting...\n2019-01-04 11:44:29|ArchiSteamFarm-7676|INFO|05|OnConnected() Connected to Steam!\n2019-01-04 11:44:29|ArchiSteamFarm-7676|INFO|05|OnConnected() Logging in...\n2019-01-04 11:44:30|ArchiSteamFarm-7676|INFO|05|OnLoggedOn() Successfully logged on as y.\n2019-01-04 11:44:30|ArchiSteamFarm-7676|INFO|05|Init() Logging in to ISteamUserAuth...\n2019-01-04 11:44:30|ArchiSteamFarm-7676|INFO|05|OnDisconnected() Disconnected from Steam!\n2019-01-04 11:44:30|ArchiSteamFarm-7676|INFO|05|OnDisconnected() Reconnecting...\n2019-01-04 11:44:31|ArchiSteamFarm-7676|WARN|05|Init() SteamKit2.WebAPIRequestException: Response status code does not indicate success: Forbidden (Forbidden).\n   at SteamKit2.WebAPI.AsyncInterface.<CallAsyncCore>d__9.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at CallSite.Target(Closure , CallSite , Object )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass53_1.<<Init>b__0>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<WebLimitRequest>d__84`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<Init>d__53.MoveNext()\n(snipped, many same)\n2019-01-04 11:45:49|ArchiSteamFarm-7676|INFO|09|Connect() Connecting...\n2019-01-04 11:45:49|ArchiSteamFarm-7676|INFO|09|OnConnected() Connected to Steam!\n2019-01-04 11:45:49|ArchiSteamFarm-7676|INFO|09|OnConnected() Logging in...\n2019-01-04 11:45:50|ArchiSteamFarm-7676|INFO|09|OnLoggedOn() Successfully logged on as w.\n2019-01-04 11:45:50|ArchiSteamFarm-7676|INFO|09|Init() Logging in to ISteamUserAuth...\n2019-01-04 11:45:50|ArchiSteamFarm-7676|INFO|09|OnDisconnected() Disconnected from Steam!\n2019-01-04 11:45:50|ArchiSteamFarm-7676|INFO|09|OnDisconnected() Reconnecting...\n2019-01-04 11:45:50|ArchiSteamFarm-7676|INFO|09|IsAnythingToFarm() Checking first badge page...\n2019-01-04 11:45:50|ArchiSteamFarm-7676|WARN|09|UrlGetToHtmlDocumentWithSession() Failed!\n2019-01-04 11:45:50|ArchiSteamFarm-7676|DEBUG|09|UrlGetToHtmlDocumentWithSession() Request failing: https://steamcommunity.com/my/badges?l=english&p=1\n2019-01-04 11:45:50|ArchiSteamFarm-7676|WARN|09|IsAnythingToFarm() Could not get badges' information, we will try again later!\n2019-01-04 11:45:52|ArchiSteamFarm-7676|WARN|09|Init() SteamKit2.WebAPIRequestException: Response status code does not indicate success: Forbidden (Forbidden).\n   at SteamKit2.WebAPI.AsyncInterface.<CallAsyncCore>d__9.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at CallSite.Target(Closure , CallSite , Object )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass53_1.<<Init>b__0>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<WebLimitRequest>d__84`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification. Sorry, I go by github commits, so https://github.com/JustArchiNET/ArchiSteamFarm/commit/abcd8da44604f52ad504187d9be6d5d38ae8279a would be 3.4.2.1 for me. This is all the logs I have at the moment, I'll do another try with config on debug.\n. Full log then of latest commit, without debug:\n2019-01-04 14:57:15|ArchiSteamFarm-9832|INFO|ASF|InitASF() ArchiSteamFarm-custom V3.4.2.1 (source/518e5f6a-9496-410f-94e9-e96c05844652 | Microsoft Windows 10.0.17763)\n2019-01-04 14:57:16|ArchiSteamFarm-9832|INFO|ASF|Start() Starting IPC server...\n2019-01-04 14:57:17|ArchiSteamFarm-9832|INFO|ASF|Start() IPC server ready!\n2019-01-04 14:57:17|ArchiSteamFarm-9832|WARN|ASF|InitBots() You're running more personal bot accounts than our upper recommended limit (10). Be advised that this setup is not supported and might cause various Steam-related issues, including account suspensions. Check out the FAQ for more details.\n2019-01-04 14:57:27|ArchiSteamFarm-9832|INFO|00|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|01|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|00|Connect() Connecting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|02|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|03|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|04|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|05|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|06|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|07|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|08|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|09|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|10|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|11|Start() Starting...\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|00|OnConnected() Connected to Steam!\n2019-01-04 14:57:28|ArchiSteamFarm-9832|INFO|00|OnConnected() Logging in...\n2019-01-04 14:57:29|ArchiSteamFarm-9832|INFO|00|OnLoggedOn() Successfully logged on as d.\n2019-01-04 14:57:29|ArchiSteamFarm-9832|INFO|00|Init() Logging in to ISteamUserAuth...\n2019-01-04 14:57:29|ArchiSteamFarm-9832|INFO|00|IsAnythingToFarm() Checking first badge page...\n2019-01-04 14:57:31|ArchiSteamFarm-9832|INFO|00|Init() Success!\n2019-01-04 14:57:33|ArchiSteamFarm-9832|INFO|00|IsAnythingToFarm() Checking other badge pages...\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|Farm() We have a total of 6 games (26 cards) left to idle (~16 hours remaining)...\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|Farm() Chosen idling algorithm: Complex\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|IsPlayableGame() Idling 220740 (Chaos on Deponia) is temporarily disabled, as ASF is not able to play that game at the moment.\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|IsPlayableGame() Idling 427820 (Hitman GO: Definitive Edition) is temporarily disabled, as ASF is not able to play that game at the moment.\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|IsPlayableGame() Idling 234140 (Mad Max) is temporarily disabled, as ASF is not able to play that game at the moment.\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|IsPlayableGame() Idling 261570 (Ori and the Blind Forest) is temporarily disabled, as ASF is not able to play that game at the moment.\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|IsPlayableGame() Idling 418240 (Shadow Tactics: Blades of the Shogun) is temporarily disabled, as ASF is not able to play that game at the moment.\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|IsPlayableGame() Idling 312660 (Sniper Elite 4) is temporarily disabled, as ASF is not able to play that game at the moment.\n2019-01-04 14:57:35|ArchiSteamFarm-9832|INFO|00|IsAnythingToFarm() Checking first badge page...\n2019-01-04 14:57:37|ArchiSteamFarm-9832|INFO|00|IsAnythingToFarm() Checking other badge pages...\n2019-01-04 14:57:38|ArchiSteamFarm-9832|INFO|00|Farm() Idling finished!\n2019-01-04 14:57:48|ArchiSteamFarm-9832|INFO|01|Connect() Connecting...\n2019-01-04 14:57:48|ArchiSteamFarm-9832|INFO|01|OnConnected() Connected to Steam!\n2019-01-04 14:57:48|ArchiSteamFarm-9832|INFO|01|OnConnected() Logging in...\n2019-01-04 14:57:48|ArchiSteamFarm-9832|INFO|01|OnLoggedOn() Successfully logged on as v.\n2019-01-04 14:57:48|ArchiSteamFarm-9832|INFO|01|Init() Logging in to ISteamUserAuth...\n2019-01-04 14:57:48|ArchiSteamFarm-9832|INFO|01|IsAnythingToFarm() Checking first badge page...\n2019-01-04 14:57:50|ArchiSteamFarm-9832|INFO|01|Init() Success!\n2019-01-04 14:57:54|ArchiSteamFarm-9832|INFO|01|StartFarming() We don't have anything to idle on this account!\n2019-01-04 14:58:08|ArchiSteamFarm-9832|INFO|02|Connect() Connecting...\n2019-01-04 14:58:08|ArchiSteamFarm-9832|INFO|02|OnConnected() Connected to Steam!\n2019-01-04 14:58:08|ArchiSteamFarm-9832|INFO|02|OnConnected() Logging in...\n2019-01-04 14:58:08|ArchiSteamFarm-9832|INFO|02|OnLoggedOn() Successfully logged on as z.\n2019-01-04 14:58:08|ArchiSteamFarm-9832|INFO|02|Init() Logging in to ISteamUserAuth...\n2019-01-04 14:58:08|ArchiSteamFarm-9832|INFO|02|IsAnythingToFarm() Checking first badge page...\n2019-01-04 14:58:08|ArchiSteamFarm-9832|INFO|02|Init() Success!\n2019-01-04 14:58:11|ArchiSteamFarm-9832|INFO|02|StartFarming() We don't have anything to idle on this account!\n2019-01-04 14:58:28|ArchiSteamFarm-9832|INFO|03|Connect() Connecting...\n2019-01-04 14:58:28|ArchiSteamFarm-9832|INFO|03|OnConnected() Connected to Steam!\n2019-01-04 14:58:28|ArchiSteamFarm-9832|INFO|03|OnConnected() Logging in...\n2019-01-04 14:58:28|ArchiSteamFarm-9832|INFO|03|OnLoggedOn() Successfully logged on as y.\n2019-01-04 14:58:28|ArchiSteamFarm-9832|INFO|03|Init() Logging in to ISteamUserAuth...\n2019-01-04 14:58:28|ArchiSteamFarm-9832|INFO|03|IsAnythingToFarm() Checking first badge page...\n2019-01-04 14:58:30|ArchiSteamFarm-9832|INFO|03|Init() Success!\n2019-01-04 14:58:32|ArchiSteamFarm-9832|INFO|03|StartFarming() We don't have anything to idle on this account!\n2019-01-04 14:58:48|ArchiSteamFarm-9832|INFO|04|Connect() Connecting...\n2019-01-04 14:58:48|ArchiSteamFarm-9832|INFO|04|OnConnected() Connected to Steam!\n2019-01-04 14:58:48|ArchiSteamFarm-9832|INFO|04|OnConnected() Logging in...\n2019-01-04 14:58:48|ArchiSteamFarm-9832|INFO|04|OnLoggedOn() Successfully logged on as x.\n2019-01-04 14:58:48|ArchiSteamFarm-9832|INFO|04|Init() Logging in to ISteamUserAuth...\n2019-01-04 14:58:48|ArchiSteamFarm-9832|INFO|04|OnDisconnected() Disconnected from Steam!\n2019-01-04 14:58:48|ArchiSteamFarm-9832|INFO|04|OnDisconnected() Reconnecting...\n2019-01-04 14:58:49|ArchiSteamFarm-9832|WARN|04|Init() SteamKit2.WebAPIRequestException: Response status code does not indicate success: Forbidden (Forbidden).\n   at SteamKit2.WebAPI.AsyncInterface.<CallAsyncCore>d__9.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at CallSite.Target(Closure , CallSite , Object )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass53_1.<<Init>b__0>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<WebLimitRequest>d__84`1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.ArchiWebHandler.<Init>d__53.MoveNext()\nThis doesn't happen with previous commit.\nAlso 'official' 3.4.2.0 has this issue:\n2019-01-04 15:04:18|ArchiSteamFarm-6032|INFO|ASF|InitASF() ArchiSteamFarm V3.4.2.0 (generic-netf/4879819a-1f05-4507-96a9-b570aaf4bde2 | Microsoft Windows 10.0.17763)\nThe log is identical except for higher version message and this print.. The errors don't always happen, I've restarted it again and it happened on second and third account also (same error as above). \nIt's actually Windows Server 2019. That said, I've just switched to win-x64 build and it seems to work now (although everything is still connecting). Why would net framework build not work correctly anymore? It used to work just fine on WS2019.\n. If there's actually anything new to be idled, sure, but if I activate a key that's not eligible for idling then it should not restart idling but keep on idling the current bunch.. ",
    "mxalbert1996": "@JustArchi A new issue: NLog.config will be deleted when updating. It should be preserved.. Is there any settings needed to enable IPC GUI command execution? I got a 405 - Method Not Allowed with any commands submitted in the web GUI. And I don't quite understand the explanation for it in the wiki.. ",
    "karlyk": "ASF-linux-x64.zip crashes for me on Debian Stretch with .NET Core prerequisites installed:\n```\napt install libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev libcurl4-openssl-dev libssl1.0-dev uuid-dev unzip\n```\n$ ./ArchiSteamFarm\n2017-08-15 10:05:07|ArchiSteamFarm-28521|INFO|ASF|InitASF() ASF V3.0.1.4 (8272618b-6da4-4beb-b463-e2089d055d18)\n2017-08-15 10:05:10|ArchiSteamFarm-28521|INFO|ASF|CheckForUpdate() ASF will automatically check for new versions every 1 day.\n2017-08-15 10:05:10|ArchiSteamFarm-28521|INFO|ASF|CheckForUpdate() Checking for new version...\nSegmentation fault (core dumped)\n. The use case is the following:\nI have a key which I want to redeem on the first account of an ordered subset of accounts not owning it. redeem <accounts> <key> seemed to fit the bill: It looks like it tries to redeem the key by sequentially iterating over each given account. Judging from the output, there's no attempt of parallelization. So why not stop after receiving OK/NoDetail, Fail/BadActivationCode, Fail/DuplicateActivationCode?\nBut considering your reaction, I'll just write a script for my use case.. With such an unwarranted condescending demeanour, proposals for sensible program behaviour are obviously inappropriate for this project. I was kind of expecting that given your first reaction.\nIf you'd solely reject ideas based on current implementation details, that would be understandable. What baffles me is your hubris paired with the utter ignorance regarding the possibility to actually being able to change current behaviour towards becoming more sensible.\nThat being said, I'm done here as it's easier to write a script than to reason with you.. Yes, it's fixed. It does print the following lines twice though, so there might be a small bug:\n17:47:55|INFO|ASF|OnCreatedFile() Global config file has been changed!\n17:47:55|INFO|ASF|RestartOrExit() Restarting...\n17:47:56|INFO|ASF|OnChanged() Global config file has been changed!\n17:47:56|INFO|ASF|RestartOrExit() Restarting...\nEdit: I just noticed that those lines are not completely identical, so everything might work as intended while being a bit confusing.. ",
    "sebzanga": "WIki isn't clear about using \"ASF\" as target bot name.\nSo, As far as I know, there is no way to redeeming multiples keys at once between all the instances but excluding the not working keys.... Then, what about <Keys>?\nIf I try:\n!redeem& RQFPG-W7LZV-LD5WJ, W5XHV-F2WF0-0IT8J\nI get:\nCouldn't find any bot named RQFPG-W7LZV-LD5WJ,!\nI don't want to target a single instance. What I expect is to try to redeem all the keys in all the instances, but once a instance gets OK or Duplicated, to not foward that key to the other instances.. ",
    "therain7": "It's has already installed. ",
    "asafgb": "what is it?\noh ok found. ",
    "S0ulHunt3r": "Forget, i see that this feature actually exists.. I configured the id's on SteamUserPermissions and left one out, and the bot accepted all the trades.\nWhat am i missing on configuration?. ",
    "at46": "This is still a problem. Updated to 3.0.2.7 and lost file permissions. So do we have to chmod +x after each update now?. Thanks for the fast response and sorry that I forgot to note that I updated from 3.0.1.9 stable to 3.0.2.7 stable with update command. As the bug report was originally for 3.0.0.9, I thought that this was fixed long before.. You should ask your question in the asf steam group and not in the bug tracker. According to https://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md this will get closed.\nHowever ASF needs the free sub license. In your case that is 211712. You can find that with steamdb https://steamdb.info/app/38400/subs/. So the solution is !addlicense ASF 211712.. ",
    "OmG3r": "I'm using this ruby script to communicate with ASF through IPC.\nThis script can be compiled into an .EXE file which executes the commands and returns the value.\nthe compiled file would be approximatively 2.8MBs\nThis script assumes that the user did not edit neither IPChost nor IPCport, there can be some workarounds to get IPChost and IPCport without the user input.\n```\nrequire 'open-uri'\nx = 0\nuntil x == 5\n  begin\n    puts \"write the command to execute/'exit' to exit\"\n    command = gets.chomp\n    if command == \"exit\"\n      puts \"Exiting the program\"\n      x = 5\n    else\n      remove_exclamation = command.sub \"!\", \"\"\n      space_command = remove_exclamation.gsub \" \", \"%20\"\n      output = open(\"https://127.0.0.1:1242:1242/IPC?command=#{space_command}\", :read_timeout => 900).read\n      output.strip!\n      puts \"#{output}\"\n      puts \"\"\n      end\n  rescue\n    puts \"Something went wrong\"\n    puts \"\"\n  end\nend\n```. @MrBurrBurr , what about a cookie ? . ",
    "kaoyusu": "<body>\n<form action=\"http://127.0.0.1:1242/IPC\" method=\"get\" target=\"output\">\n<input name=\"command\" /><input type=\"submit\" value=\"Send\" />\n</form>\n<iframe name=\"output\"/>\n</body>\n\n. ",
    "Benman2785": "@kaoyusu - how to use it?\nEDIT: hehe - yo soy muy stupido xD\nsimply make it as html and \"run\" it . ASF-IPC-GUI.zip\n\nworks and has some stuff in it\n. i always get 404 when i run it on my rootserver\nit runs and it farms - and IPC also is active - but i cant hand over and correct commands. new IPC is broken\nold IPC of version 1.0.4.9 is working. mh - i try tomorrow again with my server - but http://ip:port/Api/Command/* didnt worked for me when running it in browser - always got 404.   \"IPCHost\": \"XXX.XXX.XXX.XXX\",\n  \"IPCPort\": 1242,\ni connect to http://XXX.XXX.XXX.XXX:1242/Api/Command/status and it only gives 404 from ASF (nginx looks different) - nginx isnt listening on 1242 \n404 is the only error i get\nbut i will test again tomorrow. @MrBurrBurr would you share your GUI? ;). where do i find the log from Api? - because i want to know why i get an 404 ;). @KlappPc i know - but here is my problem ;)\ni can do: \n< body>\n< form action=\"http://IP:1242/Api/Command/status BOT\" method=\"GET\" target=\"output\">\n< input type=\"submit\" value=\"status BOT\" />\n< /form>\n< iframe name=\"output\"/>\n< /body>\nthis works - but i have to hardcode any command to the button - because if i try\n< body>\n< form action=\"http://IP:1242/Api/Command\" method=\"get\" target=\"output\">\n< input type=\"text\"><input type=\"submit\" value=\"Send\">\n< /form>\n< iframe name=\"output\"/>\n< /body>\nit wont work - i always get 404. @KlappPc https://discord.gg/qb7mHwV - pls find me there ;)\n@deluxghost as i did in the first try - but that is not what i want - i want a textfield where i can put my command and execute it\nlets say i want to redeem a key - i simply want to copy it in the textarea and klick redeem ;). thank you ;)\ni simply wanted to avoid javascript\nMerry X-Mas // dennoch schone Weihnachten ;). that was the problem i was looking a solution for\nnow i simply use your \"hint\" and modify it to redirect the output into the iframe\nthank you again\nedit - got it - also working with all my bots (in one file) ;). \n\nthats my ugly but working \"gui\"\n  . @MrBurrBurr \ni would appreciate if you upload your \"dirty\" GUI\ni would help (if i can) to clean it ;). awesome ;). it is a bug - i want it to be \"aFF3_M!T_WaFF3\" as i typed it in - but it changes it to \"aFF3 M!T WaFF3\". ",
    "dfmcvn": "Is there any way to setup SSL for IPC server? \ud83e\udd14. Oh, forgot that I can use nginx as a proxy.  \ud83d\udc4d\nThank you very much.. Another way, change IPC server to :80 and use Cloudflare Flexible SSL. Point domain to server's IP \ud83d\ude01\nhttps://i.imgur.com/WH55QL7.jpg. Open asf-config...exe -> GamesPlayedWhileIdle,  add 730 and press OK. Then change Pause False -> True. And lauch ASF.exe ;). Please post your question in official ASF group.\nhttps://steamcommunity.com/groups/ascfarm/discussions/1/\nGitHub is a place where you report a bug, not a support platform :). And also, ASF isn't a program that help you \"add often a game to the Steam wish list\".\nSo, I think Archi will set label 'Question', 'Not a bug' and 'Won't fix' in few minutes =)). You can try install .NET core and run ASF Generic version.. try\n- create a new config file, maybe ur current file is old? (created for v2)\n- delete db and bin file in /config/\n- idk, remove space character in bot name?. idk why there are no bin file in your config folder\n\n. this is mine, every bot have its own bin and db file\n\n. maybe you should delete all file in /config/ folder, then create a new ASF.json and Bot.json\nhttps://justarchi.github.io/ArchiSteamFarm/#/asf. if you can, enable Debug and post the log.txt here. it will help Archi to solve you problem. \n. Btw, GitHub isnt a place to ask sth. Post your question in Steam group or Discord.. ",
    "MrBurrBurr": "@Benman2785 \nIf you are trying to connect from your PC to your rootserver and you have not opened up the IPC Port you will get 404. Maybe thats the issue?. This is my design for the IPC GUI using adminlte, bootstrap, fontawesome. I am currently using this design for my own bots so I customized it a bit to fit my needs. \nhttps://imgur.com/a/U3GJV\nIf you like it I would be happy to work together and share my ides for the IPC GUI.. @GUiHKX\nGlad to hear that you like it! You are a lucky guy, adminlte comes in 12 different themes (6 light - 6 dark).\nHere is dark blue for example: \nhttps://imgur.com/a/rdM8c\n@JustArchi \n\ud83d\ude42  I will have to do some code cleanup and finish some other parts of the GUI. Also I need to make it work with the new IPC (I am running latest stable version). But I will contact you in some way when I got it on GitHub.\n. Thats exactly why I need to do the code cleanup! :D \nAlso bot management via IPC will be neat.. @Zarat99 \nlooks nice! maybe we can work together on the design.\n@JustArchi \nHappy New Year. I am back from my holiday and will work on the GUI, so its half way functional. Then I will send it to you so you can merge it into ASF. Thanks for all the new features in IPC!. @JourneyOver \nI am working on it but I cant spend as much time on it as I would like to due to work and other projects. Maybe I should just upload the unfinished, \"dirty\" base GUI. That way more people could work on it together and maybe help me out.\nWhat do you think @JustArchi?. I will do some final clean up and remove some of the unfinished parts (like config generator). Then I will send a PR so you can implement the basic version of the GUI. In that way we got a base where everyone else that wants to help can do so.\nI guess the code will also turn from ugly into something useable once we got a base. :slightly_smiling_face:. To be honest I am kinda stuck right now. \nClean up is almost done but my main problem right now is getting rid of all the hardcoded shit I used when the GUI was just ment for me. For example reading the config values like IPC Host and IPC Port. Right now I am not using node.js or any other manager so reading values from a JSON file is kinda dirty. \nI am open to help if anyone know how to counter that problem. . I managed to solve some of my problems. \nRight now the code is still a mess and here and there are some bugs. Still I want to release it finally so more people can work on it and so we finally get things started.\n@JustArchi \nI tested the GUI with the latest stable version of ASF (3.0.5.9) and it should work. Should I just upload the new files in a pull request and you will then clean everything up? The GUI folder needs to be located inside of ASF folder,\nWhile doing the clean up I also came up with a lot of ideas for the GUI. I think we should make a list with improvements that we want to have (like you did before with issue #659).\nHere are some:\n- Config Generator / Config Changer (change current values of ASF.json or Bots.json)\n- Bots Overview (manage bots via buttons example: https://i.imgur.com/SZWs48P.png)\n- Stats Overview on dashboard (memory usage for example, process name etc)\n- Wiki in sidebar (searchable)\n- News from ASF (example: latest updates) in sidebar\n- GUI improvements as task progress in sidebar\n- Add ToDo List (this list for example) on dashboard\n- Add IPC GUI Password protection? Like a login?. In some rare cases !farm does not lead ASF to refresh the number of available card drops. It will still farm and get the remaining cards but if I use !stop and !start ASF will instantly refresh the numbers. I could not open an Issue so far since there is no exception in the log and its not really a bug that is worth investing time to solve.\nAlso I think it just makes sense to \"complete\" the commands. I dont know if it would make sense to rename and recode !farm to what I suggested in my first post, since its almost the same.. One question out of curiosity: Should the \"blacklist\" in the title not be renamed to \"whitelist\" since we want that appID to be farmed?. I guess I mixed something up. I thought you have to add the appID for each Sale-Event for AutoDiscoveryQueue to work.. > when your account gets to L8 you automatically get all missing cards you earned before,\nI did not know this. \nI wonder what will happen if you get to level 8 after the 4th of february. Will those cards be \"lost\" because you cant get those cards after that date?\n\nThe only thing that would be good is wiki update regarding this to mention L8 requirement.\n\nI think that would be helpful. If I had known that my account has to be level 8 to get the cards I wouldnt have enabled the option in the first place.. > you need to test yourself.\nNow that I know that I can still get the cards once I reach level 8, I really dont want to miss out on those juice cards :D\nBut - I will try to do a little research about it on my own and report back once I know something new!. One of my bots is now level 8. So far I did not get any of the available card drops. I tried discovering the queue but that didnt get me any cards. So I guess you have to get to level 8 in the time the sale event is active. \nThis is how it looks like: https://imgur.com/S2sPPXM\n. So do you think that those 33 card drops will drop when the next sale event is active?. When the PR is done should I just remove the WIP?. > Not sure if this was fixed yet or not but IPC GUI should not ask for log.txt, currently it's 404 loop in the console.\nIts not fixed yet since I dont know how to get the log from API. Same goes for the ASF.json. I dont know how to get the IPC Host and IPC Port because I cant use the IPC API. Can you give me a hint or do you have an idea?\nI will try to cut down on vendor folder using the method you described.\n\nSync yourself with master (there should be a button somewhere here in the PR for that)\n\nI cant find it :s. I deleted vendor folder and replaced it with public CDN.\n. > Now merge my changes with git pull command above and you can test how entire thing runs inside ASF process.\nI feel stupid and I am really sorry but I dont know how to. I am using GitHub as an addon inside of Visual Studio (https://visualstudio.github.com/). I cant find where to enter the command. Sry first time using GitHub..... I used GitHub desktop.\nI tried to do it as you wrote. Can you see if I did it correct?. @JustArchi \nI got some issues with the new WebSocket in /Api/Log.\nWhen I try to .close() the connection, readyState correctly changes from OPEN to CLOSING. \nSo far so good. Now to the strange part:\nIt takes exactly 1 minute from CLOSING to CLOSED. I did some testing as you can see below.\n```\n29/1/2018 @ 14:53:42 - closing ws\n29/1/2018 @ 14:54:42 - ws closed\n29/1/2018 @ 14:56:24 - closing ws\n29/1/2018 @ 14:57:24 - ws closed\n29/1/2018 @ 14:57:47- closing ws\n29/1/2018 @ 14:58:47 - ws closed\n```\nI tried to find some help on google but couldn't find anything.\nSo now I am wondering if this could be a server issue?. @felipe19930 \nThank you! I changed the icons you proposed and also the favicon. We also need a better icon for the !unpause command. Right now I am using fa-repeat, but I feel like its not fitting. So if you have an idea about it, it would be great.\n\nAnother issue I found is with bot names. Let's say I have a stupid bot named <b>bot. Currently, there's no input/output sanitation, so the page can easily break stuff and most importantly, issuing commands won't work properly with those bots.\n\nThis is something I havent cared about at all so far. I will add it to the todo list. Same goes for the localization.. @felipe19930 \nThank you for your ideas, please keep them coming they are helping alot! \ud83d\udc4d \nRight now the whole bots page is still under development because I am still not exactly sure about the layout. So any idea or improvement is greatly welcome.\nI will try to realize your idea with the buttons and the steam avatar. I was also thinking something in that direction myself so its nice to hear that other people also think it would look good. \ud83d\ude03 \n\nI was thinking that, maybe in the future (or now?), the bots page could display a nice square box (64x64 maybe) for each bot, containing their Steam avatar (for now, there could be a placeholder avatar) in the middle, the bot name on top, and maybe the action buttons floating on the left side of the box. Something like that, I don't know.\n\nCould you maybe please make a little drawing how you imagine it? It can be really crappy made in paint, just so I get an idea.\nMaybe keep in mind that the boxes cant be too big since if you have a lot of bots the page would be really long. I am not sure if this even is a problem, would maybe just look weird. Or we could use your \"design\" for bots page with less than 30 bots and the current smaller \"design\" for bots page with over 30 bots. I will have to think about that.\nAlso I am still missing the three big info boxes with details about currently farmed games. I dont have any games to farm myself so I cant work on that part for now.\n\nIMHO, the delete button should be hidden in a drop-down menu or something, as this operation is not trivial and dangerous for the user\n\nAt first I had the delete button inside the expandable box body but eventually moved it to the other buttons and added the confirmation. I want to move it back (I think you just dont need to delete bots that often so why keep it with the often used buttons) but right now that would look bad since the box body is so empty right now. Do you have any ideas on the future design of the box body? I was thinking about adding information about the current game being farmed, time remaining and card drops left, but other than that I am still not sure about what to do.\n\nIt's very important to set the title attribute on those buttons accordingly, otherwise users might be confused about what they will actually do\n\nYou are right about that I will add some tooltips.\n@JustArchi \nThe new /Api/Log looks great!\n\nCheck logging section on the wiki for more info, and NLog wiki for layout definition if you're interested.\n\nI will have to do that and spend some time reading about it. I never used it before.\n\nLet me know whether you want one layout-rendered string like now, or message object with properties inside.\n\nI think for now the one layout-rendered string is fine for the basic version of the GUI. Maybe in the future we want to add it, so we will have to keep it in mind. I will add it to the todo list.\nOne question about this:\n\nASF will push you all log updates as they arrive, including initial \"push\" of last 10 log lines, so output is never empty.\n\nI think it would maybe be better for the first push to include the whole log. I was testing it a bit yesterday and would like the whole log to be displayed since sometimes I want to see more than the last 10 lines. What do you think about that?\n. > I could change default to a few lines more, but every additional entry log consumes memory, and serves little to no purpose.\nWould be nice if you could change from 10 to maybe 20-50 (depending on memory consumption).\n@felipe19930 \nCheck out the new changes I made to bots page and tell me what you think.\nMaybe you also have a good idea for the autoScroll buttons on log page (those here: https://i.imgur.com/LmhS2iX.jpg).\nI would like to turn them into one button and give it a proper icon (so we follow the same \"button scheme\").. @JustArchi \nI wanted to add the steam avatar for each bot to the bots page. \nCan you please add a new field/property to the already existing api endpoint /Api/Bot with the base64 encoded steam avatar?. > No need for another API endpoint, we already have /Api/Bot for that purpose.\nMy fault, i mixed up \"endpoint\" and \"field/property\" :joy:\nBtw: That has to be the fastest commit I have ever noticed, good job! \ud83d\udc4d . > Random idea: it'd probably make sense to change changelog link to https://github.com/JustArchi/ArchiSteamFarm/releases/tag/{version}, since user can then navigate between ASF versions, and it's far more readable than my commits mess. Up to you though.\nGood idea, I added it.. @jarlave \n\nSo & is a problem, but cnc is ok too\n\nIts because at the moment there is no input sanitation. This will be fixed in a future update.\n@felipe19930 \nOnce again a great idea from you!\nI will add your design but the slick-prev and slick-next buttons will have to be moved inside of game-details.\nAnd about font-awesome: I will update as soon as its available on cdnjs.com.. @jarlave \nCould you test the new carousel with multiple games farming? https://ci.appveyor.com/project/JustArchi/archisteamfarm/build/4965-master-jggectuw/artifacts\n@felipe19930 \nI added slick-carousel to the bots detailed overview but I think I am doing something wrong since the carousel wont display the first item. You have to wait for it to autoplay (or click on the buttons if they were active). Can you help out?\nI would like to add your design 1:1 but its not quite possible since there is no TimeRemaining for CurrentGamesFarming so it would be the same for every game.. Thank you for your fix @felipe19930! I added it.\n\nAbout that last issue you mentioned, perhaps @JustArchi could implement it? It'd be great.\n\nArchis answer on discord: It doesn't make sense because of algorithm's complexity and non-predictable time of a single queue. @felipe19930 \n\nYou need to put IPCPassword inside of encodeURIComponent(), otherwise people who have characters like & or # in their password won't be able to login. The same is necessary for requests that need the bot's name.\n\nI added it, thanks!. I added the latest version of font-awesome.\nIf you see any icons that look out of place or if you know an icon that would fit better, please let me know.\n@felipe19930 \nCould you maybe take a look at the config changer and tell me what you would improve, design wise?\nOr in general: Do you have any improvements?\n@JustArchi \nI think I want to finish this PR here and start a new one for the config changer. The reason behind it is so that more users can test the GUI and give me feedback.. I just wanted to confirm that this bug is fixed. \ud83d\udc4d . I think I want to finish this PR here and start a new one for the config generator. \nThe reason behind this is that I want more users to test the GUI and give me feedback.. I had it in mind but wanted to wait for you to update the wiki so I could get a better idea of what this is about.\nRight now I could imagine a button next to the Delete Bot button on the bots page. Like so:\n\nIf you click the key-button, a modal window pops up and lets you enter the keys in a textarea aswell as the delimeter. Something quick (delimeter textbox or dropdown will be added):\n\nI think a separate page for GamesToRedeemInBackground would be too much. What do you think? Would my suggestion be covering what you need and imagine?\nSome questions about this new endpoint:\n\nFor the GamesToRedeemInBackground to work does a bot need to be online? Or will the .keys file be created no matter the state of the bot and once the bot goes online ASF will try to redeem the keys?\nWhy do I need to specify gameName? What will it be used for?. I added a basic version of what I described in my previous post.\n\nYou are more than welcome to test it and suggest any improvements you can think of.. @JustArchi \nI added your suggestions aswell as some other code improvements. Also the bug you reported got fixed.\nCan you check if everything works as expected? If yes you can merge.. I fucked up something while trying to merge from master. So I had to delete my repository.\nI will delete this PR and open a new one once I get home again.. I think I want to finish this PR here so that more users can test and give feedback.\nVery basic localization is now working. There are still a lot of strings that need to be translated, but lets take one step after another.. New Issue here: #869. I did not mean to change any of those files. I guess I fucked something up while merging current branch. I will create a new PR with correct commits.. Will do once I am home again.. Looks good to me, can be implemented :)\n@Tristar7 \nWhile reviewing this I also noticed some other places that need to be fixed for input/output sanitation, inparticular bots.html (shortcut commands like start/stop). If you like you can look into it.\nThank you for your contibution.. I will be home on the weekend, then I will review every PR :)\nThank you all for your patience.. I am reviewing this PR right now and noticed some things.\n\n\n\nIf I am not wrong, the boxBodyHTML content wasn't properly placed, causing the collapse button to not work properly (collapse worked but pressing the - wasn't doing anything).\n\n\n\nIt is placed correctly in the current version but this issue came with upgrading AdminLTE to version 2.3.4, whenever they added a fix for box inside box collapsing error. I went back to 2.3.3 and it works again.\n\n\n\nAlso, I just hardcoded 'display: none;' to the box-body in my latest commit. This should fix the issue with animation not displaying the first time (yeah, it is not an AdminLTE bug).\n\n\n\nFirst I want to state that this is in fact a bug in AdminLTE. Your fix will work in this case because how the box widget is used in IPC GUI (its hidden by default).\n\nAs you noticed yourself we now got the issue with the carrousel. I will have to think about what would be the best way to fix this since it wasnt coded by me but by @felipe19930.\nOf couse it would be appreciated if you could test any of your solutions and give feed back :)\nThank you for your contribution.\n@JustArchi \nPlease dont merge this PR. I added a part of this PR into #802.. After looking at this I am not sure if it should be implemented since it wont fix the actuall cause of the problem.\nThe problem is that the current function does not detect dynamiclly if the dropdown menu should be a dropUp or not. Right now it just assuems the same screenheight and uses the indicator of height: 475px. I would rather have the function to detect the current screenheight dynamiclly and display the correct state.\nI see that this PR would hide the \"bug\" but people can do that with the current version (by resizing the command box). But this PR will not fix the root of the problem.. Here is a short answer since I am at the airport right now:\nEverything should be fine from ASF side, so there is no need to change anything here.\nWhat needs to be done is very simple: We need to get globalDefaultConfig before updating those properties with corresponding config values from loaded config.\nI am aware of what is broken right now and I know how to fix it. I just didnt have any time to do it.\nThank you very much for your time and work!. Thank you for reporting this!\nThis bug got already fixed here.. I will look into this, thank you for reporting.. I will stop this PR here since its a rather big update with lots of changes I want to be tested first.. This PR could be seen as a small hotfix. Thats why it can be merged for now.. Looks good, can be merged.\nThank you @jaks97 \ud83d\udc4d . Just a quick review since I am not at home:\nAs far as I can remember, only two properties were used with System.UInt64. I think it was SteamOwnerId and SteamMasterClanID. Thats why the current way of handling those two properties was good enough.\nNow that the types have changed I will rework this whole part so it wouldnt make sense to merge this at this time.\nThank you for your time and effort nevertheless! \ud83d\udc4d . It wouldnt fix anything as of right now, Config Editor will still not work with this PR merged.\nJust to clarify: Every property with the type System.UInt64 needs a corresponding s_* property, because JavaScript limitations. So there is no need to check for that since its mandatory. . Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: this question is not related to ASF development in any way.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~MrBurrBurr. Please help @Abrynos . https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Localization. I think thats maybe a bug in AdminLTE, since box-body already has that style.\n\nBut you are right about the fact that it wont animate the first time you expand the box.\nI will add it to the bug list and try to find a fix for it.. Added it! Looks good on Windows and Mac. Cant test Linux but if you say it looks good I believe you. Thank you!. thanks, forgot about that!\nhow do you like the new command history? is it like you would have imagined? Is it working properly?. Dont worry - it will be fully dynamic like generateConfigChangerHTML() and loadConfigValuesForBot().\nI just hardcoded it for now since I was still testing things. Next step will be to make that function dynamic.. It should be dynamic now. Check it out if you want!. Or I could change strings.json to xx-XX.json, then check for aa-AA.json. What do you think?. It should be working with latest commit.. Exactly what I wanted to do initaly, but my cheatsheet had no explanation for ()? :laughing: . /Api/Type/ArchiSteamFarm.GlobalConfig does expose System.Net.WebProxy.\n\n. Okay, let me know when IPC returns WebProxy as string, then I will revert the changes regarding it.. It would be faster but right now I dont know how to parse githubs markdown.\nI think for now we can leave it like this and in the future I will improve it.\nThis whole function isnt the cleanest, so I assume it will change in future anyway.. I will definitely look into it but thats something for a future update. :+1: . ",
    "Abardenn": "I'm very keen to see his GUI implemented, looks good.. ",
    "deluxghost": "a bit off-topic, but i just made a small python3 module to use IPC api, because building a request is always annoying, and here it is: https://github.com/deluxghost/ASF_IPC/. @Benman2785 i think you must provide a command in url\naction=\"http://IP:1242/Api/Command\". ",
    "Zarat99": "@JustArchi Can you get the log.txt with API?. this is my console :B\nhttps://i.imgur.com/2ZL8hof.png. ",
    "benutzer193": "As you are working on the new IPC interface right now, how about adding more information to the response, so you do not have to parse the Result to receive the info you want?\nE.g.:\nsh\ncurl -s -X POST -d '' \"http://127.0.0.1:1242/Api/Command/redeem^%20bot%20SD,SF%20abcde-abcde-abcde%20aaaaa-aaaaa-aaaaa\" | jq\nJSON\n{\n  \"Message\": \"OK\",\n  \"Resulttext\": \"\\n<bot> Key: abcde-abcde-abcde | Status: Fail/BadActivationCode\\n<bot> Key: aaaaa-aaaaa-aaaaa | Status: Fail/BadActivationCode\",\n  \"Result\": [\n    {\n      \"Key\": \"abcde-abcde-abcde\",\n      \"Status\": false,\n      \"Statustext\": \"BadActivationCode\",\n    },\n    {\n      \"Key\": \"aaaaa-aaaaa-aaaaa\",\n      \"Status\": false,\n      \"Statustext\": \"BadActivationCode\",\n    }\n  ],\n  \"Success\": true\n}\nThe structure is just the first I came up with. This can be improved and enhanced by missing information, e.g. bot instance.\nIt is just meant as an idea. I think it would help GUI developers and make scripting a lot simpler. Also it would allow enhancing the response without potentially breaking current parsers.. ",
    "JourneyOver": "@MrBurrBurr How's the GUI coming along? Wouldn't mind getting my hands on it :D. @MrBurrBurr know how it is, as I deal with that same problem daily :x I honestly wouldn't mind it even in a \"dirty\" state as you put it as it's a lot better than what I'd ever be able to come up with more than likely >..<. @MrBurrBurr how is cleanup going? still waiting to get my hands on your GUI xD. @MrBurrBurr I'm not archi but I say do it! but that's just me wanting the GUI already xD. Couple things I noticed off the bat --\n\nIf running with only 1 account, the bots dropdown is completely blank.\nAlong with 1, if running only 1 account the bot status buttons end up just showing 0 / 0 / 0 and the bots page is blank other than the content-header bit.\nDashboard is blank except for content-header (dunno if this is supposed to be blank or not exactly?)\nboth Config Generator and Config Manager are blank pages except for content-header (dunno if these are currently supposed to be blank or not exactly?).\nbelow screenshot is being thrown on every single page in chrome console constantly other than the logs page.\n\nScreenshot\n\n\n\n\nLayout Options do not seem to stay at all when moving between pages.\n. Mark 2 is still an issue but I guess it's because the bots thing is currently not fully implemented so it'll always show 0 / 0 / 0 on bots until it's fully implemented?\n\nMark 5 is fixed, no more errors in the chrome dev console window.\nSee you moved the log update function to the log.html, had me confused at first on why I couldn't find it in app.js file to change the url bit to how I have things laid out for ASF.. mm still shows 0 / 0 / 0 for me, have tried with and without \"CurrentCulture\": null in my ASF.json file. Maybe it's due to the whole running only 1 account thing? unless I'm reading the whole bots thing completely wrong on what the green/orange/red stat things are for..\n\nScreenshot\n\n![chrome_01-27-2018_08-11-16](https://user-images.githubusercontent.com/13910285/35472710-cc8635f6-0339-11e8-870e-51c6b5a11a0c.png)\n\n\nEdit: realtime feature in Log doesn't seem to work either, have to either press the green button (even though it's already on) or refresh the page for the page to fetch the log and update it. tested with updated log and waiting a full minute without it doing anything.. @MrBurrBurr Still shows 0 / 0 / 0 for bot status, as for the log function it now looks to be working on it updating the log without intervention.. like in the picture I put above, in the normal status page I see\nBot is not idling anything.\nThere are 1/1 bots running, with total of 0 games (0 cards) left to idle\nwhich indicated that the status is being seen somewhat, but the green/orange/red status things on the \"bots\" tab just continue to show as the 0 / 0 / 0. Yes I have values for KeepRunning, SteamID and TimeRemaining when I do the API call.\n{\"Message\":\"OK\",\"Result\":[{\"BotName\":\"Main\",\"CardsFarmer\":{\"CurrentGamesFarming\":[],\"GamesToFarm\":[],\"TimeRemaining\":\"00:00:00\",\"Paused\":false},\"AccountFlags\":540805,\"SteamID\":76561198037630370,\"BotConfig\":{\"AcceptGifts\":true,\"AutoSteamSaleEvent\":false,\"CustomGamePlayedWhileFarming\":null,\"CustomGamePlayedWhileIdle\":null,\"DismissInventoryNotifications\":true,\"Enabled\":true,\"FarmingOrder\":9,\"FarmOffline\":true,\"GamesPlayedWhileIdle\":[],\"HandleOfflineMessages\":false,\"HoursUntilCardDrops\":0,\"IdleRefundableGames\":true,\"IsBotAccount\":false,\"LootableTypes\":[1,3,5],\"MatchableTypes\":[5],\"PasswordFormat\":0,\"Paused\":false,\"RedeemingPreferences\":0,\"SendOnFarmingFinished\":false,\"SendTradePeriod\":0,\"ShutdownOnFarmingFinished\":false,\"SteamTradeToken\":null,\"SteamUserPermissions\":{\"76561198037630370\":3},\"TradingPreferences\":1,\"UseLoginKeys\":true,\"SteamMasterClanID\":0},\"KeepRunning\":true}],\"Success\":true}\nDon't think there is anything bad in that to throw it on here..but if there is let me know so I can take it down..though I'll have to have @JustArchi delete the #github-updates notification on discord that corresponds with this message..\n. > There is no sensitive info in any API call, if by sensitive we understand passwords or other login details.\nGood to know! ^^ kinda figured that was the case as I didn't see any login details in the api call anyways. @JustArchi you can remove \n\nIf running with only 1 account, the bots dropdown is completely blank.\nAlong with 1, if running only 1 account the bot status buttons end up just showing 0 / 0 / 0 and the bots page is blank other than the content-header bit.\nDashboard is blank except for content-header (dunno if this is supposed to be blank or not exactly?)\nboth Config Generator and Config Manager are blank pages except for content-header (dunno if these are currently supposed to be blank or not exactly?).\nbelow screenshot is being thrown on every single page in chrome console constantly other than the logs page.\nScreenshot\nLayout Options do not seem to stay at all when moving between pages.\n\nfor the most part as everything has been squashed in #733 for all that other than the layout options bug. You can replace it with \n\n[ ] Config Generator / Config Changer (change current values of ASF.json or Bots.json)\n[x] Bots Overview (manage bots via buttons example: https://i.imgur.com/SZWs48P.png)\n[x] Stats Overview on dashboard (memory usage for example, process name etc)\n[ ] Wiki in sidebar (searchable)\n[ ] News from ASF (example: latest updates) in sidebar\n[ ] GUI improvements as task progress in sidebar\n[ ] Add ToDo List (this list for example) on dashboard\n[ ] Add IPC GUI Password protection? Like a login?\n[ ] Fix Layout options not being saved or loaded\n[ ] Make Start/Stop one button on bots overview page\n[ ] Make Pause/(Unpause  (Not added yet)) one button on bots overview page\n[ ] Fix realtime logging buttons\n[ ] Add \"ASF Uptime\" to dashboard (Waiting on addition into API)\n[ ] Make bot page button popups more beautiful\n\nif you want, as they are things that should/will be added over time.. like the little tweaks you did to our todo list @MrBurrBurr :p btw you know you can checkmark them on there, instead of deleting them when they are done lol xD. @MrMarble do you use an adblocker of any sorts?. firewall, router, anything else that could be blocking it? I know someone else was having this issue as well on discord with the log throwing an error for them, dunno if they fixed it or not though :x. Then I'm not sure, sorry :/ since it works fine on my end on both windows and a raspberry pi then I am unable to help troubleshoot much further since I can't produce it.. oh yes, I totally forget that is a thing xD guess I could of helped him troubleshoot with just one more question.. @mxalbert1996 You can wait until https://github.com/JustArchi/ArchiSteamFarm/pull/759 gets merged and ASF updates to include the changes, or if you want for now until then you can go in to the app.js file in the www/js folder, and change line 201 from\ntype: 'GET',\nto \ntype: 'POST',\nif you update ASF before the pull request gets merged in, you'll of course have to go in and change that line again any time you update until the pull request gets merged.. @oubeichen WebSocket stuff (ASF Log) isn't supported on Win 7, you'll either have to upgrade to windows 8/8.1/10 or live without seeing the log in the IPC GUI on machines that are using windows 7 and below.. @oubeichen yet above you said \n\nI am currently using windows 7\n\nso make up your mind on what you are running. \nEither way it doesn't really matter what OS you are running the server on, it all depends on what OS you are using to access the IPC GUI on, which is why it works when you view the log on OS X but not on windows 7. Mm haven't seen that error yet O_o. note for people running any adblocker, will either have to turn off adblocker for log or add an exception.\n@@||<IPCHost>:<IPCPort>/Api/Log*$websocket,first-party. yea I was getting an error almost like that as well yesterday @felipe19930 haven't gotten it any today yet though.. > Maybe the first four action buttons could be simplified to two static buttons only \nIt's on our todo list.\n\nIMHO, the delete button should be hidden in a drop-down menu or something, as this operation is not trivial and dangerous for the user\n\nWe do have a confirmation for the delete Bot button so if people do accidentally click it they would still have to confirm if they want to actually delete the bot or not. If they some how \"accidentally\" click both the delete button and yes button on the confirmation window they kinda deserve it xD\n\nIt's very important to set the title attribute on those buttons accordingly, otherwise users might be confused about what they will actually do\n\nDo agree on this one, and will add it to our todo list.. Just a note for people who use the nightmode theme, it's not fully finished! there are still a few tweaks and things that needs to be fixed before I call it finished.. It doesn't happen every time @JustArchi but it does happen, I've had it happen both with doing both !restart and during a update sequence as well.. ",
    "K4r0qtuYNE5G4qgZ": "This only happens after Steam was offline eg. server unavailable, after that i also noticed that ASF don't notice that it isn't working and says 'still idling xyz' but in reality it isn't connected anymore and if i go into steam client no game is running anymore.\nThe only Solution then is to restart ASF. \nThis also started with the 3.x.x.x Versions and never happened with the last 2.x.x.x ones which was so small and smooth compared to the huge 3.x.x.x with tons of files.. V3.0.2.4 Heartbeat() Connection lost to Steam Network, reconnecting.\nAfter that it says still idling Dead Rising, but in Steam Client no game is running.\nI use default settings, literally copied the default over, nothing changed.\nAlso it' strange but if that happens, sometimes even the Steam Client itself bugs out and\nsay can't connect anymore in some pages, but it is connected. This only happens if ASF\nis running ans bugs out like that.\nEDIT: I rolled back to ASF V2.3.2.0 now that did run for months without any issues before, to see if it happens there too eg. if something did change on steam or not.. I get the exact same error logs posted here so it is the same, i only did not post tons of logs that's all.\nI also code apps myself and even test them for companies, so i assure you it's not non-sense and unrelated. But if you prefer me to post the same logs as the people above instead i will do that.\nI also assure you that my Internet is flawless and decent, i have an 1Gbit fiber optics here and usually only have an hour overall per year or so where it isn't available, so it's certainly not an problem on my side.\nAnd like i said, if you believe or not, if ASF has this hiccups it seems to affect the Steam Client too. That's why i will test that now with ASF V2.3.2.0 by let it run for a week or two to see if it still happens or if it only happens with the V3.x.x.x versions.\nBut if you aren't interested in the results and out of prejudice suppose i only waste your time and also only confuse then i will also not waste my time anymore too, it's not like i don't have more important things to do you know.. It was set to 6 for V3.0.2.2 and now 4 for V3.0.2.4 and i got the same errors.\nAnd no, i can't explain why it crashes the sockets, i only know it does if there are short steam disconnects like those maintenance periods or unplanned ones.\nThere also was an huge .net update that came yesterday, so i will also test if this one fix anything.\nEDIT: Ok, i will post huge Logs in future if this makes you happy, but they are in german currently, so i will set it to english only for you then. Or well simply ignore it and not any longer waste my time here.. ",
    "JadynWong": "the same problem @HeartOfSun  centos7 dotnet-sdk2.1.4. sorry.i understand. you mean is that I need to wait for the dotnet core team to update the runtime to fix this problem. ",
    "Efreak": "I can't get this working, personally. I've tried it on 3.0.1.7 and 3.0.1.6. Both of them give me the same error, and I've installed through the linux-x64 .zip on both of them.\nAt start I get this error:\n2017-08-22 15:07:50|ArchiSteamFarm-16994|ERROR|ASF|Start() System.Net.HttpListenerException (0x80004005): The request is not supported.\n   at System.Net.HttpEndPointManager.GetEPListener(String host, Int32 port, HttpListener listener, Boolean secure)\n   at System.Net.HttpEndPointManager.AddPrefixInternal(String p, HttpListener listener)\n   at System.Net.HttpEndPointManager.AddListener(HttpListener listener)\n   at System.Net.HttpListener.Start()\n   at ArchiSteamFarm.IPC.Start() in C:\\projects\\archisteamfarm\\ArchiSteamFarm\\IPC.cs:line 60\nScreenshot: 3.0.1.7, 3.0.1.6\nI've tried the command as ./ArchiSteamFarm -- --server as well, with no changes.\nSome notes on improvement:\n- Also, it could probably be improved by using steam's openid to log into the site, and having the bot itself serve the page.\n- I was under the impression that Chrome didn't allow remote scripts in local files. I may be wrong, though.\n- Edit: updated styles and such here. @KlappPc - you need sudo for ports under 1024. Even then, using iptables for port forwarding is better (I'm using nginx reverse proxy for .htpasswd and such)\nMy point about using steam openid is that it would have to be validated server-side, which means the openid stuff would have to be implemented server-side. I was thinking something along the lines of using the openid validation instead of a password. It does require quite a bit more logic, though.\nMy remote scripts comment was more related to you calling jquery for the local file. I was under the impression that html files loaded from file:// uris couldn't call other protocols other than file://. I may be wrong, though. I've got a (untested) version that gets rid of the jquery, though, along with the styles. I'll post it as soon as I can test.\n@JustArchi I had also tried 127.0.0.1. I know it's not required, but I like having the configuration setting in the file in case I wish to change it eventually, for example to allow access to my LAN.. OK, I've got it. For some reason IPC has started working, however I have continuous errors regarding log.txt in javascript console. I'm not sure if that's what you meant regarding it \"not working\" in chrome, but the errors are 404 errors, not scripting errors.\nI've got an updated, working script here.. ",
    "Borgulio": "rly? lol\nWIKI/Commands: \"In addition to that, there is a special ASF keyword which acts as \"all bots in the process\", so !status ASF is equal to !status all,your,bots,listed,here.\"\n!loot ASF. ",
    "Sanya330": "Sorry, thx :D. ",
    "Eiion": "Well, add another error message then, so people get to know that an update can't be auto updated when they take a look in their log.. @Abrynos , if you care to read only the 2 first lines of mine then there's all the information you need in regards of a bug report, it's description, the expected behaviour and it's current behaviour.\nI'm also telling you exactly what the log would tell: \"when looking at the command line interface I can see that actually nothing happened\" - i.e. the log doesn't show anything either!\nAnd lastly, considering that it worked before and now it doesn't although the setting haven't changed, a copy of the json's content would tell you anything neither. Besides correct settings with which it should work. Hence and considering the other guy experienced the same issue, the report of mine here in the first place.\nSo much for next time reading text. If it works for you, good for you but just saying so doesn't actually help me and others having the same problem.. \"Winning a key from a giveaway is not a valid argument\" - such a stupid argument. This clearly was an example. The source of a key and the reasoning for having to activate a key asap is completely irrelevant - what matters is that the user wants to activate a key whenever he wants to activate a key and not to be limited by a tool.\nAnd yes, when I have a list of keys that's already queued which takes 25 hours to be activated, then I'd very much appreciate the chance to activate keys in between!\nAnd nothing stops me from adding keys to the queues? Well, maybe if your manual was better and your description would actually tell about that. But this still is besides the point and doesn't help if you want to activate a key as soon as possible to play the game - instead of having to wait for possibly days.\nAlso, what Ryzhehvost says. ...the reason why I originally suggested to activate a key every 6 minutes.\nMan... the snottiness and condescension of your replies is way off. At least be honest - it's not about what ASF is, it's just that you don't want it to be more than that. But talking of that, why implement all the other things it can do in the first place if that's the case? And if it's not, why not improve the features it already has?\nMaybe what users of a tool want it to be capable of is more important than what the programmer thinks it should be able to do.\nEnough said, this git and it's issue section is kinda ridiculous with the way you reply to suggestions/requests/posted problems.. ",
    "wolhaiksong": "It seems like centos can`t run this well. Hey I met the same question as yours, did you fix it ? @valinx . ",
    "VinzNL": "There doesn't seem to be a .NET Core runtime for i386 Linux, that's the whole problem.. Where else would I ask the ASF developer if his software can still run on 32-bit Linux?. Archi chose to port ASF over to .NET Core, so if that has issues they're automatically ASF issues for ASF users. I get that you two are trying to help but none of you are actually answering my question. If Archi answers this issue with \"no, i386 isn't supported, and that was a conscious decision\" then my question is answered. If he knows of a way to make it work then that is an even better answer.\nIf ASF V3 consciously dropped i386 support then that means i386 users will have to keep using ASF V2 until they can upgrade to a 64-bit system. Not an ideal situation, and one which I'm obviously a bit unhappy about, but it is a workable one. At the very least this should be included in the V3 migration guide, since there is no mention of this problem at this time.. ",
    "CHT5": "\nThis is not ASF issue. It's NET Core issue.\nYou should check this for the x86 builds, because that's the best source to check from.. \n",
    "LukCaha": "Same problem after update from 3.0.2.0 to 3.0.2.1.. Fix confirmed. New version is happily farming again. Thank you.. ",
    "CFYYY": "Nothing is shown. Just open the program for a moment and exit. There is no log.txt file in the folder where I unzip the program. ",
    "Behemoth-s": "Sorry for my poor understanding about github and programming. \nI found that during setting up ASF on my centos 7.0. My steam password is like the format \"*\\U\" (without quotation marks), when I started ASF, it thrown an error from file ./config/bot.json at label SteamPassword because of \"\\U\" in the string.\nI corrected this by adding \"\\\" before \"\\U\", just like \"*\\U\", and this password will be escaped to the correct password  \"*\\U*\" .\nSo I suggest maybe it should read the raw string form config file.\nI\u2018m not sure if it is enough to describe this problem clearly. Thanks.. ",
    "wang93wei": "I used ASF2.0 not the problem.\n\n@JustArchi . ",
    "tellst1": "Thx bro :). ",
    "aVitaliy": "For Steam free games there is a commands - !addlicense \nWhy not to create commands for addition of games in Steam wish list?\n. ",
    "xoxfaby": "Obviously this doesn't apply to everyone but for example I have \"alt\" accounts that I do play games on and I have friends on there that I don't have on my main account. When I get a game I already own from a humble bundle, I redeem it on the alt instead and farm cards there. \nI'm sure there are other uses for this as well, if only just to not miss a message if for some weird reason someone does message the account. . Alright, I didn't know about the logging and it looks like I can probably set it up to do what I want anyways, still think it would be a decent addition. FYI in the process of debugging and trying to fix this, I started with a long config that used to work on an older version ASF, but started cutting out targets one by one, removed formatting etc, logging doesn't work until the SteamTarget is removed from the config. . ",
    "ejeandel": "yes, I did a trial run, and no problem on my end. I have done the requested changes.\nYour remark about the lock should also apply to the function ResponseAdvancedLoot, doesn't it ?\n. yes I tried before pushing the modifications, everything worked OK.. oops I just did :)\n. ",
    "JohnnyWoong": "ok, thx. ",
    "Symbai": "(Also i dont know why there has to be translation files at all. The config is English only, the wiki is English only and without both, you cannot get ASF to run. So people who not speak/understand English cannot use your tool at all. But that might be a different discussion..)\nHowever your reaction was expected. I'm just turning auto update off and stick to one version as all updates the past months are only minor changes, the core farming still works.. ",
    "Indexyz": "@JustArchi It's looks easy to fix this problem, just need load the default language(en) and mix with the custom language by Object.assign, but I have no free time now \ud83e\udd14 , I can do it in the weekend , and I want to add some awesome features like add a language switch button. \nI was tried the Crowdin, it's easy to use and a great tool to translate the String \ud83d\udc4d. Maybe I will translate the strings to Chinese.\nAnd I'm interesting in import exists config because I'm lazy \ud83d\ude06, I will try to finish it\n. @JustArchi I think Polish language filename should be pl.json\nIn my PR, @Aareksio was said in here\n\nFor me, Chrome returns pl, while Edge pl-PL, need to take this into account.\n\nThe Chrome and Edge(IE) is different, but I don't find no way to transfer pl to pl-PL now \ud83d\ude15\nOr I can try fuzzy match, but I think it may break something.. I was look at the BCP 47 - Lookup and it give our the way to match language tag. \npl and pl-PL all are comply with the rules. For example, turn zh-CN into zh is lose some metadata that we couldn't match zh-CN. But it's a great news that browser may not give our vague language tag(Chinese will return zh-CN and zh-TW, should not zh). So we can lookup language file in some steps.\n\nIf browser give language tag found in languages, use the language file.\nIf the language is without country code, (for example: PL) try to fuzzy match the country code. In this case, pl will be match as pl-* *\nOtherwise use the default language\n\n*: If found multiple language file, use the first file order by name. And user can change it in language switch button\nIf anybody have some different idea feel free to reply me \ud83d\ude00. @JustArchi Try out for  unosquare/embedio? It's looks lightweight and support dotnet core. . @Aareksio webpack dynamic require, it's webpack' s magical..\nIn the project's webpack config file was add json as extension in The config file so I ignored the .json and loader will found the json files.\nAnd in the document\n\nThis means dynamic requires are supported but will cause all possible modules to be included in the bundle.\n\nIn this case, the src/locale/ will only have language files, and all language file will include in the output bundle file.. I removed the to lower case to comply with the RFC 3066. @JustArchi I think it should return HTTP 401 unauthorized if password is wrong \ud83d\ude2e. Follow the official tutorial to install dotnet core\nhttps://www.microsoft.com/net/learn/get-started/linuxcentos\nAnd run ASF by this command\ndotnet ArchiSteamFarm.dll\n(Tested in CentOS 7.4.1708)\nOr you can run ASF via Docker\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Docker. First I think en is a gobal language, so I use the default. en may better, thanks \ud83d\ude04 . browserLanguage  is show user select (IE can set in Internet Options dialog), but not system language, users may different between system and browser, I think follow browser is better. I was add some code to match pl-PL as pl, but I think is little ugly... Changed.. Now I was change the loader to dynamic load language file, that can load language if file exists. The webpack loader will build the Json file into the finial JavaScript file, so it don't sent  HTTP request. May we need eslint \ud83e\udd14 . If user don't add en in browser, the en will not load into messages . ",
    "abccbaandy": "ASF version : V3.0.3.2\njust try it, but I can't login with this version :(\nI got this error message after enter my 2FA code\n````\nPlease enter your 2FA code from your Steam authenticator app: XXXX\n2017-10-07 04:41:09|dotnet-1|INFO|test|OnDisconnected() Disconnected from Steam!\n2017-10-07 04:41:09|dotnet-1|INFO|test|OnDisconnected() Reconnecting...\n2017-10-07 04:41:09|dotnet-1|INFO|test|Connect() Connecting...\n2017-10-07 04:41:09|dotnet-1|FATAL|ASF|OnUnhandledException() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.Internal.CMClient.Disconnect()\n   at SteamKit2.Internal.CMClient.Connect(ServerRecord cmServer)\n   at ArchiSteamFarm.Bot.d__104.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__137.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n2017-10-07 04:41:09|dotnet-1|ERROR|ASF|Exit() Exiting with nonzero error code!\nUnhandled Exception: System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.Internal.CMClient.Disconnect()\n   at SteamKit2.Internal.CMClient.Connect(ServerRecord cmServer)\n   at ArchiSteamFarm.Bot.d__104.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__137.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n````\nI check wiki page it said it's better to use Headless mode, but how can I enter the 2FA code in this mode?\nhttps://github.com/JustArchi/ArchiSteamFarm/wiki/Docker#pro-tips. how can I use release version?\nI use tag latest, but it gave me 3.0.3.2 .\nmaybe something wrong with latest tag?\nhttps://hub.docker.com/r/justarchi/archisteamfarm/builds/bncjdnpyv3nxbdx6acrsw3b/\n. GJ, it work now.\nBut, looks not stable enough, maybe I should use it when real released version come out :D. ",
    "rafiozol": "seems like it's 100% reproducible on my side, it outputs fatal error and crashes when it tries to the reconnecting the account that a game was launched on as shown in this log with 420spookyskeleton666\n```\n2017-10-07 05:56:12|ArchiSteamFarm-3400|INFO|ASF|InitASF() ASF V3.0.3.2 (e7b9dcef-0f09-488a-90f5-66888d2fc9c8)\n2017-10-07 05:56:12|ArchiSteamFarm-3400|INFO|ASF|CheckAndUpdateProgram() ASF will automatically check for new versions every 1 day.\n2017-10-07 05:56:12|ArchiSteamFarm-3400|INFO|ASF|CheckAndUpdateProgram() Checking for new version...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|ASF|CheckAndUpdateProgram() Local version: 3.0.3.2 | Remote version: 3.0.3.2\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|420spookyskeleton666|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|420spookyskeleton666|Connect() Connecting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|alexkeemstar|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|champignonpouri|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|danielalexkeem|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|danielkeemeister|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|eimantaspuzinas|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|eimispremium|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|essta|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|flip_no|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|haydos2525|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|ilovedick1541|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|isakfalck123|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|jds1284|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|lapdoggy|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|markodonev|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|meme_man134|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|mjiop22|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|mysuperis|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|mysuperis1|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|mysuperis10|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|mysuperis5|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|mysuperis7|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|mysuperiscs|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|nany34|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|nany40|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|quazi|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|rafalgrzegorz|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|scarceisnice|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|solidacuissteak|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|spencerapsley|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|swamptours|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|wojciech|Start() Starting...\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|420spookyskeleton666|OnConnected() Connected to Steam!\n2017-10-07 05:56:13|ArchiSteamFarm-3400|INFO|420spookyskeleton666|OnConnected() Logging in...\n2017-10-07 05:56:15|ArchiSteamFarm-3400|INFO|420spookyskeleton666|OnLoggedOn() Successfully logged on!\n2017-10-07 05:56:15|ArchiSteamFarm-3400|INFO|420spookyskeleton666|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:56:15|ArchiSteamFarm-3400|INFO|420spookyskeleton666|Init() Success!\n2017-10-07 05:56:16|ArchiSteamFarm-3400|INFO|420spookyskeleton666|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:56:17|ArchiSteamFarm-3400|INFO|420spookyskeleton666|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:56:23|ArchiSteamFarm-3400|INFO|alexkeemstar|Connect() Connecting...\n2017-10-07 05:56:23|ArchiSteamFarm-3400|INFO|alexkeemstar|OnConnected() Connected to Steam!\n2017-10-07 05:56:23|ArchiSteamFarm-3400|INFO|alexkeemstar|OnConnected() Logging in...\n2017-10-07 05:56:24|ArchiSteamFarm-3400|INFO|alexkeemstar|OnLoggedOn() Successfully logged on!\n2017-10-07 05:56:24|ArchiSteamFarm-3400|INFO|alexkeemstar|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:56:24|ArchiSteamFarm-3400|INFO|alexkeemstar|CheckOccupationStatus() Account is currently being used: ASF will resume idling when it's free...\n2017-10-07 05:56:24|ArchiSteamFarm-3400|INFO|alexkeemstar|Init() Success!\n2017-10-07 05:56:33|ArchiSteamFarm-3400|INFO|champignonpouri|Connect() Connecting...\n2017-10-07 05:56:33|ArchiSteamFarm-3400|INFO|champignonpouri|OnConnected() Connected to Steam!\n2017-10-07 05:56:33|ArchiSteamFarm-3400|INFO|champignonpouri|OnConnected() Logging in...\n2017-10-07 05:56:33|ArchiSteamFarm-3400|INFO|champignonpouri|OnLoggedOn() Successfully logged on!\n2017-10-07 05:56:33|ArchiSteamFarm-3400|INFO|champignonpouri|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:56:34|ArchiSteamFarm-3400|INFO|champignonpouri|Init() Success!\n2017-10-07 05:56:34|ArchiSteamFarm-3400|INFO|champignonpouri|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:56:36|ArchiSteamFarm-3400|INFO|champignonpouri|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:56:43|ArchiSteamFarm-3400|INFO|danielalexkeem|Connect() Connecting...\n2017-10-07 05:56:43|ArchiSteamFarm-3400|INFO|danielalexkeem|OnConnected() Connected to Steam!\n2017-10-07 05:56:43|ArchiSteamFarm-3400|INFO|danielalexkeem|OnConnected() Logging in...\n2017-10-07 05:56:44|ArchiSteamFarm-3400|INFO|danielalexkeem|OnLoggedOn() Successfully logged on!\n2017-10-07 05:56:44|ArchiSteamFarm-3400|WARN|danielalexkeem|OnLoggedOn() This account is limited, idling process is unavailable until the restriction is removed!\n2017-10-07 05:56:44|ArchiSteamFarm-3400|INFO|danielalexkeem|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:56:44|ArchiSteamFarm-3400|INFO|danielalexkeem|Init() Success!\n2017-10-07 05:56:53|ArchiSteamFarm-3400|INFO|danielkeemeister|Connect() Connecting...\n2017-10-07 05:56:53|ArchiSteamFarm-3400|INFO|danielkeemeister|OnConnected() Connected to Steam!\n2017-10-07 05:56:53|ArchiSteamFarm-3400|INFO|danielkeemeister|OnConnected() Logging in...\n2017-10-07 05:56:54|ArchiSteamFarm-3400|INFO|danielkeemeister|OnLoggedOn() Successfully logged on!\n2017-10-07 05:56:54|ArchiSteamFarm-3400|WARN|danielkeemeister|OnLoggedOn() This account is limited, idling process is unavailable until the restriction is removed!\n2017-10-07 05:56:54|ArchiSteamFarm-3400|INFO|danielkeemeister|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:56:55|ArchiSteamFarm-3400|INFO|danielkeemeister|Init() Success!\n2017-10-07 05:57:03|ArchiSteamFarm-3400|INFO|eimantaspuzinas|Connect() Connecting...\n2017-10-07 05:57:03|ArchiSteamFarm-3400|INFO|eimantaspuzinas|OnConnected() Connected to Steam!\n2017-10-07 05:57:03|ArchiSteamFarm-3400|INFO|eimantaspuzinas|OnConnected() Logging in...\n2017-10-07 05:57:04|ArchiSteamFarm-3400|INFO|eimantaspuzinas|OnLoggedOn() Successfully logged on!\n2017-10-07 05:57:04|ArchiSteamFarm-3400|WARN|eimantaspuzinas|OnLoggedOn() This account is limited, idling process is unavailable until the restriction is removed!\n2017-10-07 05:57:04|ArchiSteamFarm-3400|INFO|eimantaspuzinas|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:57:05|ArchiSteamFarm-3400|INFO|eimantaspuzinas|Init() Success!\n2017-10-07 05:57:13|ArchiSteamFarm-3400|INFO|eimispremium|Connect() Connecting...\n2017-10-07 05:57:13|ArchiSteamFarm-3400|INFO|eimispremium|OnConnected() Connected to Steam!\n2017-10-07 05:57:13|ArchiSteamFarm-3400|INFO|eimispremium|OnConnected() Logging in...\n2017-10-07 05:57:14|ArchiSteamFarm-3400|INFO|eimispremium|OnLoggedOn() Successfully logged on!\n2017-10-07 05:57:14|ArchiSteamFarm-3400|INFO|eimispremium|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:57:14|ArchiSteamFarm-3400|INFO|eimispremium|Init() Success!\n2017-10-07 05:57:15|ArchiSteamFarm-3400|INFO|eimispremium|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:57:16|ArchiSteamFarm-3400|INFO|eimispremium|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:57:16|ArchiSteamFarm-3400|INFO|420spookyskeleton666|OnLoggedOff() Logged off of Steam: LoggedInElsewhere\n2017-10-07 05:57:16|ArchiSteamFarm-3400|INFO|420spookyskeleton666|OnDisconnected() Disconnected from Steam!\n2017-10-07 05:57:16|ArchiSteamFarm-3400|INFO|420spookyskeleton666|OnDisconnected() Reconnecting...\n2017-10-07 05:57:23|ArchiSteamFarm-3400|INFO|essta|Connect() Connecting...\n2017-10-07 05:57:23|ArchiSteamFarm-3400|INFO|essta|OnConnected() Connected to Steam!\n2017-10-07 05:57:23|ArchiSteamFarm-3400|INFO|essta|OnConnected() Logging in...\n2017-10-07 05:57:24|ArchiSteamFarm-3400|INFO|essta|OnLoggedOn() Successfully logged on!\n2017-10-07 05:57:24|ArchiSteamFarm-3400|INFO|essta|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:57:24|ArchiSteamFarm-3400|INFO|essta|Init() Success!\n2017-10-07 05:57:25|ArchiSteamFarm-3400|INFO|essta|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:57:26|ArchiSteamFarm-3400|INFO|essta|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:57:33|ArchiSteamFarm-3400|INFO|flip_no|Connect() Connecting...\n2017-10-07 05:57:33|ArchiSteamFarm-3400|INFO|flip_no|OnConnected() Connected to Steam!\n2017-10-07 05:57:33|ArchiSteamFarm-3400|INFO|flip_no|OnConnected() Logging in...\n2017-10-07 05:57:34|ArchiSteamFarm-3400|INFO|flip_no|OnLoggedOn() Successfully logged on!\n2017-10-07 05:57:34|ArchiSteamFarm-3400|INFO|flip_no|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:57:34|ArchiSteamFarm-3400|INFO|flip_no|Init() Success!\n2017-10-07 05:57:35|ArchiSteamFarm-3400|INFO|flip_no|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:57:36|ArchiSteamFarm-3400|INFO|flip_no|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:57:43|ArchiSteamFarm-3400|INFO|haydos2525|Connect() Connecting...\n2017-10-07 05:57:43|ArchiSteamFarm-3400|INFO|haydos2525|OnConnected() Connected to Steam!\n2017-10-07 05:57:43|ArchiSteamFarm-3400|INFO|haydos2525|OnConnected() Logging in...\n2017-10-07 05:57:44|ArchiSteamFarm-3400|INFO|haydos2525|OnLoggedOn() Successfully logged on!\n2017-10-07 05:57:44|ArchiSteamFarm-3400|INFO|haydos2525|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:57:44|ArchiSteamFarm-3400|INFO|haydos2525|Init() Success!\n2017-10-07 05:57:45|ArchiSteamFarm-3400|INFO|haydos2525|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:57:46|ArchiSteamFarm-3400|INFO|haydos2525|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:57:53|ArchiSteamFarm-3400|INFO|ilovedick1541|Connect() Connecting...\n2017-10-07 05:57:53|ArchiSteamFarm-3400|INFO|ilovedick1541|OnConnected() Connected to Steam!\n2017-10-07 05:57:53|ArchiSteamFarm-3400|INFO|ilovedick1541|OnConnected() Logging in...\n2017-10-07 05:57:54|ArchiSteamFarm-3400|INFO|ilovedick1541|OnLoggedOn() Successfully logged on!\n2017-10-07 05:57:54|ArchiSteamFarm-3400|INFO|ilovedick1541|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:57:54|ArchiSteamFarm-3400|INFO|ilovedick1541|Init() Success!\n2017-10-07 05:57:55|ArchiSteamFarm-3400|INFO|ilovedick1541|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:57:58|ArchiSteamFarm-3400|INFO|ilovedick1541|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:58:03|ArchiSteamFarm-3400|INFO|isakfalck123|Connect() Connecting...\n2017-10-07 05:58:03|ArchiSteamFarm-3400|INFO|isakfalck123|OnConnected() Connected to Steam!\n2017-10-07 05:58:03|ArchiSteamFarm-3400|INFO|isakfalck123|OnConnected() Logging in...\n2017-10-07 05:58:04|ArchiSteamFarm-3400|INFO|isakfalck123|OnLoggedOn() Successfully logged on!\n2017-10-07 05:58:04|ArchiSteamFarm-3400|INFO|isakfalck123|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:58:04|ArchiSteamFarm-3400|INFO|isakfalck123|Init() Success!\n2017-10-07 05:58:05|ArchiSteamFarm-3400|INFO|isakfalck123|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:58:06|ArchiSteamFarm-3400|INFO|isakfalck123|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:58:13|ArchiSteamFarm-3400|INFO|jds1284|Connect() Connecting...\n2017-10-07 05:58:13|ArchiSteamFarm-3400|INFO|jds1284|OnConnected() Connected to Steam!\n2017-10-07 05:58:13|ArchiSteamFarm-3400|INFO|jds1284|OnConnected() Logging in...\n2017-10-07 05:58:14|ArchiSteamFarm-3400|INFO|jds1284|OnLoggedOn() Successfully logged on!\n2017-10-07 05:58:14|ArchiSteamFarm-3400|INFO|jds1284|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:58:14|ArchiSteamFarm-3400|INFO|jds1284|Init() Success!\n2017-10-07 05:58:15|ArchiSteamFarm-3400|INFO|jds1284|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:58:16|ArchiSteamFarm-3400|INFO|jds1284|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:58:23|ArchiSteamFarm-3400|INFO|lapdoggy|Connect() Connecting...\n2017-10-07 05:58:23|ArchiSteamFarm-3400|INFO|lapdoggy|OnConnected() Connected to Steam!\n2017-10-07 05:58:23|ArchiSteamFarm-3400|INFO|lapdoggy|OnConnected() Logging in...\n2017-10-07 05:58:25|ArchiSteamFarm-3400|INFO|lapdoggy|OnLoggedOn() Successfully logged on!\n2017-10-07 05:58:25|ArchiSteamFarm-3400|INFO|lapdoggy|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:58:25|ArchiSteamFarm-3400|INFO|lapdoggy|Init() Success!\n2017-10-07 05:58:26|ArchiSteamFarm-3400|INFO|lapdoggy|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:58:27|ArchiSteamFarm-3400|INFO|lapdoggy|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:58:33|ArchiSteamFarm-3400|INFO|markodonev|Connect() Connecting...\n2017-10-07 05:58:33|ArchiSteamFarm-3400|INFO|markodonev|OnConnected() Connected to Steam!\n2017-10-07 05:58:33|ArchiSteamFarm-3400|INFO|markodonev|OnConnected() Logging in...\n2017-10-07 05:58:34|ArchiSteamFarm-3400|INFO|markodonev|OnLoggedOn() Successfully logged on!\n2017-10-07 05:58:34|ArchiSteamFarm-3400|INFO|markodonev|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:58:34|ArchiSteamFarm-3400|INFO|markodonev|Init() Success!\n2017-10-07 05:58:35|ArchiSteamFarm-3400|INFO|markodonev|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:58:36|ArchiSteamFarm-3400|INFO|markodonev|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:58:43|ArchiSteamFarm-3400|INFO|meme_man134|Connect() Connecting...\n2017-10-07 05:58:43|ArchiSteamFarm-3400|INFO|meme_man134|OnConnected() Connected to Steam!\n2017-10-07 05:58:43|ArchiSteamFarm-3400|INFO|meme_man134|OnConnected() Logging in...\n2017-10-07 05:58:44|ArchiSteamFarm-3400|INFO|meme_man134|OnLoggedOn() Successfully logged on!\n2017-10-07 05:58:44|ArchiSteamFarm-3400|INFO|meme_man134|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:58:44|ArchiSteamFarm-3400|INFO|meme_man134|Init() Success!\n2017-10-07 05:58:45|ArchiSteamFarm-3400|INFO|meme_man134|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:58:48|ArchiSteamFarm-3400|INFO|meme_man134|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:58:53|ArchiSteamFarm-3400|INFO|mjiop22|Connect() Connecting...\n2017-10-07 05:58:53|ArchiSteamFarm-3400|INFO|mjiop22|OnConnected() Connected to Steam!\n2017-10-07 05:58:53|ArchiSteamFarm-3400|INFO|mjiop22|OnConnected() Logging in...\n2017-10-07 05:58:54|ArchiSteamFarm-3400|INFO|mjiop22|OnLoggedOn() Successfully logged on!\n2017-10-07 05:58:54|ArchiSteamFarm-3400|INFO|mjiop22|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:58:54|ArchiSteamFarm-3400|INFO|mjiop22|Init() Success!\n2017-10-07 05:58:55|ArchiSteamFarm-3400|INFO|mjiop22|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:58:58|ArchiSteamFarm-3400|INFO|mjiop22|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:59:03|ArchiSteamFarm-3400|INFO|mysuperis|Connect() Connecting...\n2017-10-07 05:59:03|ArchiSteamFarm-3400|INFO|mysuperis|OnConnected() Connected to Steam!\n2017-10-07 05:59:03|ArchiSteamFarm-3400|INFO|mysuperis|OnConnected() Logging in...\n2017-10-07 05:59:04|ArchiSteamFarm-3400|WARN|mjiop22|OnAccountInfo() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__133.MoveNext() in C:\\projects\\archisteamfarm\\ArchiSteamFarm\\Bot.cs:line 1446\n2017-10-07 05:59:04|ArchiSteamFarm-3400|WARN|mjiop22|OnAccountInfo() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__133.MoveNext() in C:\\projects\\archisteamfarm\\ArchiSteamFarm\\Bot.cs:line 1446\n2017-10-07 05:59:04|ArchiSteamFarm-3400|INFO|mysuperis|OnLoggedOn() Successfully logged on!\n2017-10-07 05:59:04|ArchiSteamFarm-3400|INFO|mysuperis|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:59:05|ArchiSteamFarm-3400|INFO|mysuperis|Init() Success!\n2017-10-07 05:59:06|ArchiSteamFarm-3400|INFO|mysuperis|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:59:08|ArchiSteamFarm-3400|INFO|mysuperis|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:59:13|ArchiSteamFarm-3400|INFO|mysuperis1|Connect() Connecting...\n2017-10-07 05:59:13|ArchiSteamFarm-3400|INFO|mysuperis1|OnConnected() Connected to Steam!\n2017-10-07 05:59:13|ArchiSteamFarm-3400|INFO|mysuperis1|OnConnected() Logging in...\n2017-10-07 05:59:14|ArchiSteamFarm-3400|INFO|mysuperis1|OnLoggedOn() Successfully logged on!\n2017-10-07 05:59:14|ArchiSteamFarm-3400|INFO|mysuperis1|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:59:14|ArchiSteamFarm-3400|INFO|mysuperis1|Init() Success!\n2017-10-07 05:59:15|ArchiSteamFarm-3400|INFO|mysuperis1|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:59:18|ArchiSteamFarm-3400|INFO|mysuperis1|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:59:23|ArchiSteamFarm-3400|INFO|mysuperis10|Connect() Connecting...\n2017-10-07 05:59:23|ArchiSteamFarm-3400|INFO|mysuperis10|OnConnected() Connected to Steam!\n2017-10-07 05:59:23|ArchiSteamFarm-3400|INFO|mysuperis10|OnConnected() Logging in...\n2017-10-07 05:59:24|ArchiSteamFarm-3400|INFO|mysuperis10|OnLoggedOn() Successfully logged on!\n2017-10-07 05:59:24|ArchiSteamFarm-3400|WARN|mysuperis10|OnLoggedOn() This account is limited, idling process is unavailable until the restriction is removed!\n2017-10-07 05:59:24|ArchiSteamFarm-3400|INFO|mysuperis10|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:59:24|ArchiSteamFarm-3400|INFO|mysuperis10|Init() Success!\n2017-10-07 05:59:27|ArchiSteamFarm-3400|WARN|mysuperis10|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 05:59:27|ArchiSteamFarm-3400|DEBUG|mysuperis10|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 05:59:30|ArchiSteamFarm-3400|WARN|mysuperis10|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 05:59:30|ArchiSteamFarm-3400|DEBUG|mysuperis10|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 05:59:33|ArchiSteamFarm-3400|INFO|mysuperis5|Connect() Connecting...\n2017-10-07 05:59:33|ArchiSteamFarm-3400|INFO|mysuperis5|OnConnected() Connected to Steam!\n2017-10-07 05:59:33|ArchiSteamFarm-3400|INFO|mysuperis5|OnConnected() Logging in...\n2017-10-07 05:59:34|ArchiSteamFarm-3400|INFO|mysuperis5|OnLoggedOn() Successfully logged on!\n2017-10-07 05:59:34|ArchiSteamFarm-3400|INFO|mysuperis5|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:59:34|ArchiSteamFarm-3400|INFO|mysuperis5|Init() Success!\n2017-10-07 05:59:35|ArchiSteamFarm-3400|INFO|mysuperis5|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:59:36|ArchiSteamFarm-3400|INFO|mysuperis5|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:59:43|ArchiSteamFarm-3400|INFO|mysuperis7|Connect() Connecting...\n2017-10-07 05:59:43|ArchiSteamFarm-3400|INFO|mysuperis7|OnConnected() Connected to Steam!\n2017-10-07 05:59:43|ArchiSteamFarm-3400|INFO|mysuperis7|OnConnected() Logging in...\n2017-10-07 05:59:44|ArchiSteamFarm-3400|INFO|mysuperis7|OnLoggedOn() Successfully logged on!\n2017-10-07 05:59:44|ArchiSteamFarm-3400|INFO|mysuperis7|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:59:44|ArchiSteamFarm-3400|INFO|mysuperis7|Init() Success!\n2017-10-07 05:59:45|ArchiSteamFarm-3400|INFO|mysuperis7|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:59:46|ArchiSteamFarm-3400|INFO|mysuperis7|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:59:47|ArchiSteamFarm-3400|WARN|mysuperis7|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 05:59:47|ArchiSteamFarm-3400|DEBUG|mysuperis7|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 05:59:49|ArchiSteamFarm-3400|WARN|mysuperis7|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 05:59:49|ArchiSteamFarm-3400|DEBUG|mysuperis7|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 05:59:53|ArchiSteamFarm-3400|INFO|mysuperiscs|Connect() Connecting...\n2017-10-07 05:59:53|ArchiSteamFarm-3400|INFO|mysuperiscs|OnConnected() Connected to Steam!\n2017-10-07 05:59:53|ArchiSteamFarm-3400|INFO|mysuperiscs|OnConnected() Logging in...\n2017-10-07 05:59:54|ArchiSteamFarm-3400|INFO|mysuperiscs|OnLoggedOn() Successfully logged on!\n2017-10-07 05:59:54|ArchiSteamFarm-3400|INFO|mysuperiscs|Init() Logging in to ISteamUserAuth...\n2017-10-07 05:59:54|ArchiSteamFarm-3400|INFO|mysuperiscs|Init() Success!\n2017-10-07 05:59:55|ArchiSteamFarm-3400|INFO|mysuperiscs|IsAnythingToFarm() Checking first badge page...\n2017-10-07 05:59:56|ArchiSteamFarm-3400|INFO|mysuperiscs|StartFarming() We don't have anything to idle on this account!\n2017-10-07 05:59:57|ArchiSteamFarm-3400|WARN|mysuperiscs|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 05:59:57|ArchiSteamFarm-3400|DEBUG|mysuperiscs|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 05:59:59|ArchiSteamFarm-3400|WARN|mysuperiscs|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 05:59:59|ArchiSteamFarm-3400|DEBUG|mysuperiscs|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:03|ArchiSteamFarm-3400|INFO|nany34|Connect() Connecting...\n2017-10-07 06:00:03|ArchiSteamFarm-3400|INFO|nany34|OnConnected() Connected to Steam!\n2017-10-07 06:00:03|ArchiSteamFarm-3400|INFO|nany34|OnConnected() Logging in...\n2017-10-07 06:00:04|ArchiSteamFarm-3400|INFO|nany34|OnLoggedOn() Successfully logged on!\n2017-10-07 06:00:04|ArchiSteamFarm-3400|INFO|nany34|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:00:04|ArchiSteamFarm-3400|INFO|nany34|Init() Success!\n2017-10-07 06:00:05|ArchiSteamFarm-3400|INFO|nany34|IsAnythingToFarm() Checking first badge page...\n2017-10-07 06:00:07|ArchiSteamFarm-3400|WARN|nany34|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:07|ArchiSteamFarm-3400|DEBUG|nany34|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:07|ArchiSteamFarm-3400|INFO|nany34|StartFarming() We don't have anything to idle on this account!\n2017-10-07 06:00:10|ArchiSteamFarm-3400|WARN|nany34|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:10|ArchiSteamFarm-3400|DEBUG|nany34|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:13|ArchiSteamFarm-3400|INFO|nany40|Connect() Connecting...\n2017-10-07 06:00:13|ArchiSteamFarm-3400|INFO|nany40|OnConnected() Connected to Steam!\n2017-10-07 06:00:13|ArchiSteamFarm-3400|INFO|nany40|OnConnected() Logging in...\n2017-10-07 06:00:14|ArchiSteamFarm-3400|INFO|nany40|OnLoggedOn() Successfully logged on!\n2017-10-07 06:00:14|ArchiSteamFarm-3400|INFO|nany40|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:00:14|ArchiSteamFarm-3400|INFO|nany40|Init() Success!\n2017-10-07 06:00:15|ArchiSteamFarm-3400|INFO|nany40|IsAnythingToFarm() Checking first badge page...\n2017-10-07 06:00:17|ArchiSteamFarm-3400|INFO|nany40|IsAnythingToFarm() Checking other badge pages...\n2017-10-07 06:00:17|ArchiSteamFarm-3400|WARN|nany40|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:17|ArchiSteamFarm-3400|DEBUG|nany40|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:20|ArchiSteamFarm-3400|INFO|nany40|StartFarming() We don't have anything to idle on this account!\n2017-10-07 06:00:20|ArchiSteamFarm-3400|WARN|nany40|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:20|ArchiSteamFarm-3400|DEBUG|nany40|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:23|ArchiSteamFarm-3400|INFO|quazi|Connect() Connecting...\n2017-10-07 06:00:23|ArchiSteamFarm-3400|INFO|quazi|OnConnected() Connected to Steam!\n2017-10-07 06:00:23|ArchiSteamFarm-3400|INFO|quazi|OnConnected() Logging in...\n2017-10-07 06:00:24|ArchiSteamFarm-3400|INFO|quazi|OnLoggedOn() Successfully logged on!\n2017-10-07 06:00:24|ArchiSteamFarm-3400|INFO|quazi|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:00:24|ArchiSteamFarm-3400|INFO|quazi|Init() Success!\n2017-10-07 06:00:25|ArchiSteamFarm-3400|INFO|quazi|IsAnythingToFarm() Checking first badge page...\n2017-10-07 06:00:26|ArchiSteamFarm-3400|INFO|quazi|StartFarming() We don't have anything to idle on this account!\n2017-10-07 06:00:27|ArchiSteamFarm-3400|WARN|quazi|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:27|ArchiSteamFarm-3400|DEBUG|quazi|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:33|ArchiSteamFarm-3400|INFO|rafalgrzegorz|Connect() Connecting...\n2017-10-07 06:00:33|ArchiSteamFarm-3400|INFO|rafalgrzegorz|OnConnected() Connected to Steam!\n2017-10-07 06:00:33|ArchiSteamFarm-3400|INFO|rafalgrzegorz|OnConnected() Logging in...\n2017-10-07 06:00:34|ArchiSteamFarm-3400|INFO|rafalgrzegorz|OnLoggedOn() Successfully logged on!\n2017-10-07 06:00:34|ArchiSteamFarm-3400|WARN|rafalgrzegorz|OnLoggedOn() This account is limited, idling process is unavailable until the restriction is removed!\n2017-10-07 06:00:34|ArchiSteamFarm-3400|INFO|rafalgrzegorz|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:00:34|ArchiSteamFarm-3400|INFO|rafalgrzegorz|Init() Success!\n2017-10-07 06:00:37|ArchiSteamFarm-3400|WARN|rafalgrzegorz|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:37|ArchiSteamFarm-3400|DEBUG|rafalgrzegorz|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:40|ArchiSteamFarm-3400|WARN|rafalgrzegorz|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:40|ArchiSteamFarm-3400|DEBUG|rafalgrzegorz|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:43|ArchiSteamFarm-3400|INFO|scarceisnice|Connect() Connecting...\n2017-10-07 06:00:43|ArchiSteamFarm-3400|INFO|scarceisnice|OnConnected() Connected to Steam!\n2017-10-07 06:00:43|ArchiSteamFarm-3400|INFO|scarceisnice|OnConnected() Logging in...\n2017-10-07 06:00:44|ArchiSteamFarm-3400|INFO|scarceisnice|OnLoggedOn() Successfully logged on!\n2017-10-07 06:00:44|ArchiSteamFarm-3400|WARN|scarceisnice|OnLoggedOn() This account is limited, idling process is unavailable until the restriction is removed!\n2017-10-07 06:00:44|ArchiSteamFarm-3400|INFO|scarceisnice|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:00:44|ArchiSteamFarm-3400|INFO|scarceisnice|Init() Success!\n2017-10-07 06:00:47|ArchiSteamFarm-3400|WARN|scarceisnice|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:47|ArchiSteamFarm-3400|DEBUG|scarceisnice|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:49|ArchiSteamFarm-3400|WARN|scarceisnice|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:49|ArchiSteamFarm-3400|DEBUG|scarceisnice|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:00:53|ArchiSteamFarm-3400|INFO|solidacuissteak|Connect() Connecting...\n2017-10-07 06:00:53|ArchiSteamFarm-3400|INFO|solidacuissteak|OnConnected() Connected to Steam!\n2017-10-07 06:00:53|ArchiSteamFarm-3400|INFO|solidacuissteak|OnConnected() Logging in...\n2017-10-07 06:00:54|ArchiSteamFarm-3400|INFO|solidacuissteak|OnLoggedOn() Successfully logged on!\n2017-10-07 06:00:54|ArchiSteamFarm-3400|INFO|solidacuissteak|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:00:54|ArchiSteamFarm-3400|INFO|solidacuissteak|Init() Success!\n2017-10-07 06:00:55|ArchiSteamFarm-3400|INFO|solidacuissteak|IsAnythingToFarm() Checking first badge page...\n2017-10-07 06:00:56|ArchiSteamFarm-3400|INFO|solidacuissteak|StartFarming() We don't have anything to idle on this account!\n2017-10-07 06:00:57|ArchiSteamFarm-3400|WARN|solidacuissteak|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:00:57|ArchiSteamFarm-3400|DEBUG|solidacuissteak|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:01:03|ArchiSteamFarm-3400|INFO|spencerapsley|Connect() Connecting...\n2017-10-07 06:01:03|ArchiSteamFarm-3400|INFO|spencerapsley|OnConnected() Connected to Steam!\n2017-10-07 06:01:03|ArchiSteamFarm-3400|INFO|spencerapsley|OnConnected() Logging in...\n2017-10-07 06:01:04|ArchiSteamFarm-3400|INFO|spencerapsley|OnLoggedOn() Successfully logged on!\n2017-10-07 06:01:04|ArchiSteamFarm-3400|WARN|spencerapsley|OnLoggedOn() This account is limited, idling process is unavailable until the restriction is removed!\n2017-10-07 06:01:04|ArchiSteamFarm-3400|INFO|spencerapsley|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:01:04|ArchiSteamFarm-3400|INFO|spencerapsley|Init() Success!\n2017-10-07 06:01:07|ArchiSteamFarm-3400|WARN|spencerapsley|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:01:07|ArchiSteamFarm-3400|DEBUG|spencerapsley|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:01:10|ArchiSteamFarm-3400|WARN|spencerapsley|UrlGetToHtmlDocumentRetry() Request failed after 5 attempts!\n2017-10-07 06:01:10|ArchiSteamFarm-3400|DEBUG|spencerapsley|UrlGetToHtmlDocumentRetry() Request failing: https://steamcommunity.com/dev/apikey?l=english\n2017-10-07 06:01:13|ArchiSteamFarm-3400|INFO|swamptours|Connect() Connecting...\n2017-10-07 06:01:13|ArchiSteamFarm-3400|INFO|swamptours|OnConnected() Connected to Steam!\n2017-10-07 06:01:13|ArchiSteamFarm-3400|INFO|swamptours|OnConnected() Logging in...\n2017-10-07 06:01:14|ArchiSteamFarm-3400|INFO|swamptours|OnLoggedOn() Successfully logged on!\n2017-10-07 06:01:14|ArchiSteamFarm-3400|INFO|swamptours|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:01:15|ArchiSteamFarm-3400|INFO|swamptours|IsAnythingToFarm() Checking first badge page...\n2017-10-07 06:01:15|ArchiSteamFarm-3400|INFO|swamptours|Init() Success!\n2017-10-07 06:01:18|ArchiSteamFarm-3400|INFO|swamptours|StartFarming() We don't have anything to idle on this account!\n2017-10-07 06:01:23|ArchiSteamFarm-3400|INFO|wojciech|Connect() Connecting...\n2017-10-07 06:01:23|ArchiSteamFarm-3400|INFO|wojciech|OnConnected() Connected to Steam!\n2017-10-07 06:01:23|ArchiSteamFarm-3400|INFO|wojciech|OnConnected() Logging in...\n2017-10-07 06:01:24|ArchiSteamFarm-3400|INFO|wojciech|OnLoggedOn() Successfully logged on!\n2017-10-07 06:01:24|ArchiSteamFarm-3400|INFO|wojciech|Init() Logging in to ISteamUserAuth...\n2017-10-07 06:01:25|ArchiSteamFarm-3400|INFO|wojciech|IsAnythingToFarm() Checking first badge page...\n2017-10-07 06:01:25|ArchiSteamFarm-3400|INFO|wojciech|Init() Success!\n2017-10-07 06:01:29|ArchiSteamFarm-3400|INFO|wojciech|StartFarming() We don't have anything to idle on this account!\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|420spookyskeleton666|Connect() Connecting...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|FATAL|ASF|OnUnhandledException() System.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.Internal.CMClient.Disconnect()\n   at SteamKit2.Internal.CMClient.Connect(ServerRecord cmServer)\n   at ArchiSteamFarm.Bot.d__104.MoveNext() in C:\\projects\\archisteamfarm\\ArchiSteamFarm\\Bot.cs:line 1006\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__137.MoveNext() in C:\\projects\\archisteamfarm\\ArchiSteamFarm\\Bot.cs:line 1623\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n2017-10-07 06:01:33|ArchiSteamFarm-3400|ERROR|ASF|Exit() Exiting with nonzero error code!\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|swamptours|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|solidacuissteak|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|jds1284|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|quazi|Stop() Stopping...\nUnhandled Exception: 2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|alexkeemstar|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|danielalexkeem|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|mysuperis5|Stop() Stopping...\nSystem.Threading.Tasks.TaskCanceledException: A task was canceled.\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at SteamKit2.Internal.CMClient.Disconnect()\n   at SteamKit2.Internal.CMClient.Connect(ServerRecord cmServer)\n   at ArchiSteamFarm.Bot.d__104.MoveNext() in C:\\projects\\archisteamfarm\\ArchiSteamFarm\\Bot.cs:line 1006\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at ArchiSteamFarm.Bot.d__137.MoveNext() in C:\\projects\\archisteamfarm\\ArchiSteamFarm\\Bot.cs:line 1623\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|mysuperis|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|scarceisnice|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|champignonpouri|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|mysuperis7|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|mysuperiscs|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|flip_no|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|markodonev|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|eimispremium|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|420spookyskeleton666|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|danielkeemeister|Stop() Stopping...\n2017-10-07 06:01:33|ArchiSteamFarm-3400|INFO|isakfalck123|Stop() Stopping...\n```. windows 10 pro https://i.imgur.com/L6UjzZe.png , I'll try v3.0.3.3 now. ",
    "noirscape": "Alrighty. Seems master-arm functions.. ",
    "idcatall": "i didn't configure ASF to do that? \nthere no option to do ? whats the option for that . very kind of you my man. \nsearched your entire readme and wiki and shit\nnothing about denying friends using any of the options\nthank m8 :) . ",
    "ozo2003": "same for me, clean install on ubuntu 14.04\n```\nskudra@vps ~/archi> ./ArchiSteamFarm.sh \n2017-10-31 14:26:48|dotnet-2690|INFO|ASF|InitASF() ASF V3.0.3.7 (25b977bd-fd01-4555-876e-169fee470dea)\n2017-10-31 14:26:49|dotnet-2690|INFO|ASF|InitGlobalDatabaseAndServices() It looks like it's your first launch of the program, welcome!\n2017-10-31 14:26:49|dotnet-2690|WARN|ASF|InitGlobalDatabaseAndServices() Please review our privacy policy section on the wiki if you're concerned about what ASF is in fact doing!\n2017-10-31 14:26:59|dotnet-2690|DEBUG|ASF|OnLogMessageReceived() WebServer | Web server prefix 'http://127.0.0.1:1242/' added.\n2017-10-31 14:26:59|dotnet-2690|DEBUG|ASF|OnLogMessageReceived() WebServer | Finished Loading Web Server.\n2017-10-31 14:26:59|dotnet-2690|INFO|ASF|CheckAndUpdateProgram() ASF will automatically check for new versions every 1 day.\n2017-10-31 14:26:59|dotnet-2690|INFO|ASF|CheckAndUpdateProgram() Checking for new version...\n2017-10-31 14:27:00|dotnet-2690|INFO|ASF|CheckAndUpdateProgram() Local version: 3.0.3.7 | Remote version: 3.0.4.1\n2017-10-31 14:27:00|dotnet-2690|INFO|ASF|CheckAndUpdateProgram() Downloading new version: 3.0.4.1 (2 MB)... While waiting, consider donating if you appreciate the work being done! :)\n2017-10-31 14:27:03|dotnet-2690|INFO|ASF|CheckAndUpdateProgram() Update process finished!\n2017-10-31 14:27:03|dotnet-2690|INFO|ASF|RestartOrExit() Restarting...\n2017-10-31 14:27:08|dotnet-2712|INFO|ASF|InitASF() ASF V3.0.4.1 (e5aa3884-8fcc-40de-a2fe-2c463f04c506)\n2017-10-31 14:27:08|dotnet-2712|INFO|ASF|CheckAndUpdateProgram() ASF will automatically check for new versions every 1 day.\n2017-10-31 14:27:08|dotnet-2712|INFO|ASF|CheckAndUpdateProgram() Checking for new version...\nfish: Job 1, \u201c./ArchiSteamFarm.sh \u201d terminated by signal SIGTERM (Polite quit request)\nskudra@vps ~/archi> ./ArchiSteamFarm.sh \n.NET Command Line Tools (2.0.0)\nProduct Information:\n Version:            2.0.0\n Commit SHA-1 hash:  cdcd1928c9\nRuntime Environment:\n OS Name:     ubuntu\n OS Version:  14.04\n OS Platform: Linux\n RID:         ubuntu.14.04-x64\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\nMicrosoft .NET Core Shared Framework Host\nVersion  : 2.0.0\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\n./ArchiSteamFarm.sh: line 63: BINARY_ARGS[@]: unbound variable\n```. ",
    "Sulizab": "And how it must helping to me?. ",
    "RumbleRamy": "Thats good enough. \u263a\nThank you for adding my suggestion and  continuing on developing ASF.. ",
    "quole": "See https://github.com/AceLewis/SteamDiscoveryQueueBot. ",
    "Siddxa": "\nGwynbleiddI\n\nA lot of users have the same problem today. i know what you feel ). ",
    "rosen-baum": "Remove \"IsDiscoveryQueueAvailable\" reference and rebuild the dll. ",
    "Miyuutsu": "Please provide your SteamID64 so we can better help you. It's good for public relations if I can know precisely whose dick I've kicked in.. ",
    "wifiwufiuwehf": "Theres no need to \"override\" it, is just to know when it will happen again.. Again, youre not understanding what I'm saying. I dont want manually do the qeues. All I want is something like. \n\n!stats\n\nX hours and X minutes until the qeue is going to be done again.. >Because I need to manually count how many hours are left until it will be checked again.\n\n\nTheres no problem if you think that this isnt necessary. Good luck! Happy new year!.. I dont run ASF 24/7. When I do it, I just get the cards to do my own sets and I don't know when there will be new cards or when steam fucks up again and don't give my cards, so I would like to know when it is going to do the discovery again to see if I'm going to get them or not. How many hours until the tool goes through it again.. Well, I dont have anything more to say then. You were right. Thanks for the quick response!.. ",
    "Astrallys": "i do not speak about cracked steam client..\nI've made my own card farmer who work with family shared games. Much better with that, more cards to farm. ",
    "Ackis": "Today I learned about hidepid :)\nMy suggestion was about defense in depth.  Say my system is compromised as a non-root user. Ignoring the hidepid (since I'm ignorant about that right now), a non-root/owner user can see the key.\nNow lets say it's only in the config file chmoded 600 - now you need to target the specific user (or root) who's running the process.\nAnother aspect that's non-security related relates to user preference - some people prefer not to pass things via command line.\nRegardless - it's your project and I'm not the one doing the work. :) I'm assuming it would be a quick and \"easy\" thing to implement. > Do you protect your house with keys in the door's lock?\nNo, but I also lock my windows (could have bars on the windows), have a security alarm, and have dogs.\nI needed to walk through the scenarios step-by-step in my head again.\nMy comment about preference had nothing to do with security - it was about user preference to have things in a config file opposed to command line.\nAnyways thanks for considering the idea.. ",
    "HarryS": "Thanks for the constructive criticism, sounds good and will fix up soon.\nRegarding the command, I think !loot^ would be the most intuitive, as it's just a different type of looting -- cards vs items. You agree?. > This would be one command with 2 variants (one for bots defined, one for no bots defined, usual pattern).\nNow I remember, this was also my thought process when I made it into its own command, for easier logic to hardcode contextID 2, whilst still allowing custom contextIDs. But this is the sacrifice we take, everyone will just need to memorize it :). Think I got all those changes, let me know if anything else is weird/still needs fixing, and thanks again!. Works good for me. yep. Cheers!. ",
    "codacy-bot": " Here is an overview of what got changed by this pull request:\n```diff\nComplexity increasing per file\n\nArchiSteamFarm/Bot.cs  2\n\nClones added\n\nArchiSteamFarm/Bot.cs  11\n\n```\nSee the complete overview on Codacy\n        . ",
    "LiteOnE": "\nIs fetching confirmations rate limited?\n\nYes, it is.\nI've done some more tests:\n\n\nThe first time i tried to spam \"!2faok\" on a bot, starting with 7th \"!2faok\" with a clean confirmation queue ASF returns warning, that requests are failed after 5 tries to send them again. The actual requests are successful, but Steam returns \"There was a problem loading the confirmations page. Please try your request again later.\" (so that ASF can't parse the data and returns warning) and servers give a cool-down (during this time they return \"There was a problem loading...\").\n\n\nFollowing my tests it's limited per IP (I didn't have any tries on different PCs though), because other bots run on another ASF instance got the same warning after each \"!2faok\"\n\n\nRequesting a lot of \"!2faok\" (e.g. looting the entire net) leads to even temporal block (\"Access denied error\") for all the web requests (except Web API). The servers probably consider this as a DDOS attack.\n\n\nSending \"!2faok\" every 10 seconds appears to be OK, no errors. Sending every 5 seconds leads to a cool-down. I've just tested it out. So, it appears, that only fetching is limited.\nRequested !2faok on 5 bots, each one had 5 trades, as you asked 25 confirmes in total, and all the trades were sent and accepted successfully.. Well i have a screenshot with confirmation of my words\nCheck please: https://imgur.com/Un2A8yA\n\n\nYou can see a successful message of trade being accepted and then it tries to accept it once again\n. Thanks for the reply and sorry for bothering you then ;<. ",
    "oubeichen": "@JourneyOver I am currently using windows 7 and got the same error while it works flawlessly on my laptop running OS X.\nI checked the chrome console and found there was a 403 Forbidden.\n\nPlease check, thank you.. @JourneyOver No, the ASF server is running on my VPS, using CentOS 7 with Docker.. ",
    "felipe19930": "I'm trying to test the GUI but I don't know if I'm missing something. Here's what I did:\n\ngit clone https://github.com/JustArchi/ArchiSteamFarm.git\n./cc.sh to compile ASF\nConfigure ASF and bots\nRun ASF with dotnet ArchiSteamFarm.dll --server\n\nBut when I go to http://localhost:1242/, I get a 404 error.. My bad, sorry! Anyway it's working now, somehow the IPC gui only loads if I type 127.0.0.1 instead of localhost, don't know why.. @MrBurrBurr Something like this\n```diff\ndiff --git a/ArchiSteamFarm/www/js/app.js b/ArchiSteamFarm/www/js/app.js\nindex 2e667bef..d673145b 100644\n--- a/ArchiSteamFarm/www/js/app.js\n+++ b/ArchiSteamFarm/www/js/app.js\n@@ -28,6 +28,14 @@ function getIPCPassword() {\nvar IPCPassword = get('IPCPassword');\n+if(IPCPassword) {\n+    $.ajaxSetup({\n+        beforeSend: function(jqXHR) {\n+            jqXHR.setRequestHeader('Authentication', IPCPassword);\n+        }\n+    });\n+}\n+\n /*\n * Footer Version\n * ---------------\n``. @MrBurrBurr That happens because ASF isn't listening toclose()` messages yet. It takes 60 seconds because it's the default timeout to close the socket. Archi will surely fix it, but if you want to try it right now, adding this will close the socket immediately:\n```diff\ndiff --git a/ArchiSteamFarm/IPC.cs b/ArchiSteamFarm/IPC.cs\nindex b9b60647..16cef823 100644\n--- a/ArchiSteamFarm/IPC.cs\n+++ b/ArchiSteamFarm/IPC.cs\n@@ -413,6 +413,7 @@ internal static class IPC {\n                                        await webSocketContext.WebSocket.SendAsync(new ArraySegment(Encoding.UTF8.GetBytes(testMessage)), WebSocketMessageType.Text, true, CancellationToken.None).ConfigureAwait(false);\n                                        await Task.Delay(3000).ConfigureAwait(false);\n                                }\n+                                await webSocketContext.WebSocket.CloseAsync(WebSocketCloseStatus.NormalClosure, null, CancellationToken.None);\n                        } catch (WebSocketException) {\n                                // Ignored, request is no longer valid\n                                return true;\n```\nSpeaking of which, I'm getting these messages as well:\n2018-01-29 14:11:30|dotnet-15512|FATAL|ASF|OnUnobservedTaskException() System.AggregateException: A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread. (The remote party closed the WebSocket connection without completing the close handshake.) ---> System.Net.WebSockets.WebSocketException: The remote party closed the WebSocket connection without completing the close handshake. ---> System.IO.IOException: Unable to write data to the transport connection: Cannot access a disposed object.            \nObject name: 'System.Net.Sockets.Socket'.. ---> System.ObjectDisposedException: Cannot access a disposed object.                                                                                                  \nObject name: 'System.Net.Sockets.Socket'.                                                                                                                                                                         \n   at System.Net.Sockets.Socket.BeginSend(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, SocketError& errorCode, AsyncCallback callback, Object state)                                         \n   at System.Net.Sockets.Socket.BeginSend(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, AsyncCallback callback, Object state)                                                                 \n   at System.Net.Sockets.Socket.SendAsyncApm(ArraySegment`1 buffer, SocketFlags socketFlags)                                                                                                                      \n   at System.Net.Sockets.Socket.SendAsync(ArraySegment`1 buffer, SocketFlags socketFlags, Boolean fromNetworkStream)                                                                                              \n   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)                                                                                   \n   --- End of inner exception stack trace ---                                                                                                                                                                     \n   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)                                                                                   \n   at System.Net.WebSockets.ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, Boolean endOfMessage, ArraySegment`1 payloadBuffer)                                                    \n   --- End of inner exception stack trace ---                                                                                                                                                                     \n   --- End of inner exception stack trace ---                                                                                                                                                                     \n---> (Inner Exception #0) System.Net.WebSockets.WebSocketException (0x80004005): The remote party closed the WebSocket connection without completing the close handshake. ---> System.IO.IOException: Unable to write data to the transport connection: Cannot access a disposed object.                                                                                                                                            \nObject name: 'System.Net.Sockets.Socket'.. ---> System.ObjectDisposedException: Cannot access a disposed object.                                                                                                  \nObject name: 'System.Net.Sockets.Socket'.                                                                                                                                                                         \n   at System.Net.Sockets.Socket.BeginSend(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, SocketError& errorCode, AsyncCallback callback, Object state)                                         \n   at System.Net.Sockets.Socket.BeginSend(Byte[] buffer, Int32 offset, Int32 size, SocketFlags socketFlags, AsyncCallback callback, Object state)                                                                 \n   at System.Net.Sockets.Socket.SendAsyncApm(ArraySegment`1 buffer, SocketFlags socketFlags)                                                                                                                      \n   at System.Net.Sockets.Socket.SendAsync(ArraySegment`1 buffer, SocketFlags socketFlags, Boolean fromNetworkStream)                                                                                              \n   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)                                                                                   \n   --- End of inner exception stack trace ---                                                                                                                                                                     \n   at System.Net.Sockets.NetworkStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 size, CancellationToken cancellationToken)                                                                                   \n   at System.Net.WebSockets.ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, Boolean endOfMessage, ArraySegment`1 payloadBuffer)<---. @JourneyOver I think we should wait for Archi to finish the WebSocket implementation, so then we report bugs. Anyway, @MrBurrBurr you're doing a fantastic job, I'm really enjoying the UI. I have a few cosmetic suggestions (please feel free to disconsider them):\n\nChange the \"Games Remaining\" icon in /pages/bots.html, from fa-desktop to fa-gamepad, I think it's more fitting.\nChange the \"RAM Usage\" icon in /pages/dashboard.html, from fa-cog to fa-tachometer, I think it gives more a perception of performance.\n\nI see you've created a favicon for the website as well, it looks really neat, but ASF already has one (more details here). I'm not a lawyer but I think it's better to not use the Steam logo in your project, as it might be copyrighted.\nAnother issue I found is with bot names. Let's say I have a stupid bot named <b>bot. Currently, there's no input/output sanitation, so the page can easily break stuff and most importantly, issuing commands won't work properly with those bots. \nOn ASF's side, I might be wrong on this, but some ASF commands don't work properly if a bot has a white space in its name, so ASF should completely prohibit that or change the command syntax (better approach IMO).\nLast but not least, I don't know if localization is a priority right now, but here's a neat guide to that.\nCongrats & good luck!. @MrBurrBurr Maybe the first four action buttons could be simplified to two static buttons only, and the colors of those buttons will define their current state. Just an idea, see if you like it (read everything before considering it):\nThe first button would be to deal with !start and !stop commands. Those commands essentially turn the bot on and off, so my suggestion for an icon here would be fa-power-off. Like I said, the button itself is static, we'll only change its color. Here's the logic behind it...\nIf KeepRunning is set to false (meaning the bot was !stoped):\n\nThe class of this button should be fa fa-power-off\nThis button color should be red\nThe :hover action would change its color to green\nHide all the other action buttons (except the collapse button); they're useless now because the bot is offline.\n\nIf KeepRunning is set to true:\n\nThe class of this button should be fa fa-power-off\nThis button should not have any color\nThe :hover action would change its color to red\nUnhide all other action buttons\n\nThe second button would be to deal with !pause and !unpause commands. Logic:\nIf Paused is set to true:\n\nThe class of this button should be fa fa-pause\nThis button color should be orange\nThe :hover action would change this button class to fa fa-play and its color to green.\n\nIf Paused is set to false:\n\nThe class of this button should be `fa fa-pause\nThis button should not have any color\nThe :hover action would change this button class to fa fa-pause and its color to orange\n\nHere are some examples: https://jsfiddle.net/b8f9euvd/1/\n\nA few other points:\n\nIMHO, the delete button should be hidden in a drop-down menu or something, as this operation is not trivial and dangerous for the user\nIt's very important to set the title attribute on those buttons accordingly, otherwise users might be confused about what they will actually do\nI was thinking that, maybe in the future (or now?), the bots page could display a nice square box (64x64 maybe) for each bot, containing their Steam avatar (for now, there could be a placeholder avatar) in the middle, the bot name on top, and maybe the action buttons floating on the left side of the box. Something like that, I don't know.\n\nFinally, I'm definitely NOT a designer (if it's not obvious by now :rofl:), so I think it's important to hear other people's opinion too. You can obviously also tweak this to your taste, since you know more about that stuff than I do. (For example, I probably suggested some bad colors for the buttons, so change them to more pleasant ones, hahah). @MrBurrBurr Never mind about that suggestion I made, I guess it seemed like a good design choice only in my head. Hahah\nLeave as it is right now. Maybe someone will come up with a better design for that.\nSpeaking of which, those little bot \"boxes\" have this border on top of them, and currently all of them are orange. What if you set the color of those top borders according to the bot status? Example:\n\nBot is loading / logging-in: top border is an animated loading bar (I like the first example in this blog, but maybe there's something better in bootstrap already)\nBot is online (farming): top border is green\nBot is online (idle): top border dark cyan\nBot is paused: top border is orange / dark yellow\nBot is disconnected from steam (actually I don't know if there's a way to check that): top border is dark red\nBot is stopped: top border is dark grey (and maybe add that \"fade\" effect (like it's disabled) to the bot's box)\n\nAgain, my colors are just a suggestion, maybe they're not the better colors...\nIn the future I think it's a good idea to implement a search function on the bots page too. Then we add check boxes to each bot, then we can run specific commands only to bots we selected.. I noticed I say \"we\" a lot, but that's just mannerism. When I say we I mean you. :rofl: \nThanks for your guys' hard work, by the way.. @MrBurrBurr I suggest you to simulate viewing the bots page in a smartphone (on Chrome: F12, then Ctrl + Shift + M), you'll find some issues there.\n@JustArchi Suggestion: Why don't you use Process.WorkingSet64 as the value for MemoryUsage instead? Don't you think it's way more relevant to the user?. I think you could use slick-carousel (a gallery plugin), to deal with multiple-games farming. Here's a simple layout I made:\nhttps://jsfiddle.net/yqkz2ns2/\nYou'll see that I'm using slightly different class names for the Font Awesome icons, that's because they've released version 5.0.6 recently (don't know exactly when, tbh). But since you're on version 4.7.0, maybe it's worth upgrading.. I think we could improve time display in general, 00:00:30 to indicate farming time doesn't seem much user friendly IMO, ~~I think moment.js can be a nice add. The fact that they have support for localization is also nice.~~\nEdit: moment.js is awesome but unfortunately it doesn't offer precise duration, e.g. if the farming time is 01:30:00, moment.humanize() would return 2 hours instead of 1 hour, 30 minutes. So I found this other js library called HumanizeDuration.js, which does not offer as much feature as moment, but for this project I think it will be enough. It also has support for multiple languages. You can use jsdelivr's CDN, they even have Subresource Integrity check, which is a plus).\nHere's an example of HumanizeDuration.js if you need one.. It definitely is, but I figured that since the UI is still in development and version 5.0.6 of font awesome is a major update, this could be a great time to upgrade. But it's definitely not trivial right now.. >the carousel wont display the first item.\nNot only that, but there's a huge delay when you expand the bot box. What is happening is that slick is still running in all bot boxes (in background), even when the box is collapsed. To see that just inspect the page and search for the slick-initialized class. Here's a way of fixing it:\nReplace this block of code (from line 292 to 306) with this one:\n```js\n$('#bot-box-' + BotName).boxWidget({\n        animationSpeed: 500,\n        collapseTrigger: '#collapse-trigger',\n        collapseIcon: 'fa-minus',\n        expandIcon: 'fa-plus',\n    })\n    // This will be triggered if a user expands the BOT menu.\n    .on('expanded.boxwidget', function(BotName) {\n        var botCarousel = $('.games-carousel-' + BotName);\n    // Checks if Slick was already initialized...\n    if ($(botCarousel).hasClass('slick-initialized')) {\n        // Slick is set up, so just resume the animation.\n        $(botCarousel).slick('slickPlay');\n    } else {\n        // Sets up Slick for the first time.\n        $(botCarousel).slick({\n            slidesToShow: 1,\n            draggable: true,\n            autoplay: true,\n            autoplaySpeed: 2000,\n            arrows: false, //move arrows inside of .game-box\n            infinite: true\n        });\n    }\n}.bind(null, BotName))\n// This will be triggered if a user collapses the BOT menu.\n.on('collapsed.boxwidget', function(BotName) {\n    // Just pause Slick's animation and collapse the menu.\n    $('.games-carousel-' + BotName).slick('slickPause');\n}.bind(null, BotName)\n\n);\n```\nThis approach is better because it doesn't let slick animate stuff in background when the box is collapsed.\nI know you still haven't finished the layout yet, however, the fix above introduces another visual issue when you expand the bot box: you can still see the two game banners for a short period of time:\n\nYou most likely already know how to fix it, but anyway, here's how: add each <img> banner inside of a <div> and then set the max-height of that div to 215px (which is the height of 1 banner only).\nAbout that last issue you mentioned, perhaps @JustArchi could implement it? It'd be great.. No problem! :+1: . It does make sense, thanks for the insight.. https://github.com/MrBurrBurr/ArchiSteamFarm/blob/a4f6b6e6eb6f1991621979dd0b861d9e761afe2e/ArchiSteamFarm/www/pages/log.html#L173-L174\nYou need to put IPCPassword inside of encodeURIComponent(), otherwise people who have characters like & or # in their password won't be able to login. The same is necessary for requests that need the bot's name.\n\n//replace password parameter in new_uri string with authentication header once available\n\nUnfortunately there's no way of adding custom headers in WebSocket requests as of today standards.. Most definitely is a Javascript limitation. It's also really weird, because XMLHttpRequest is obviously widely used and always had support for custom headers, so it doesn't even make sense why they decided to not include support for that in WebSockets. But oh well, we are just mere mortals compared to the guys from WHATWG, they must have a strong reason for not adding that... I hope. I do know that they have support for WebSockets authentication though, but I don't know how hard would it be to implement it on ASF nor if it's even worth it.. Ah... After looking at the logic of RestartOrExit() I think this should be treated as a suggestion instead of a bug.\nThe suggestion is to not exit ASF after I edit ASF.json. I assume ASF reads ASF.json only once, stores everything in memory and never touches it again. Unless I'm missing something trivial here, I don't really see a reason to exit ASF when ASF.json is edited.\nThanks.. I've yet to see a program that exits after an user edit a config. file...\nNonetheless, thanks for the answer.. Thanks for the instructions. What's causing the issue is this request I made a week ago to change my phone and I didn't cancel/accept it:\n\nHere's the relevant HTML snippet of it:\n```html\n\n\n\n \nChange phone number\n\n1 May @ 8:53pm\n        /div>\n    \n<div class=\"mobileconf_list_entry_sep\"></div>\n\n\n``. Isn't it possible to makeBotBehavioran alias ofBotBehaviour? Just for consistency, since there's already an option namedOptimizationModeinstead ofOptimisationMode.. @Abrynos I know the list can change, but once a user ran!ownsagain (when they know the game list is outdated), ASF would simply make a new request and then update the cache file. Also, this feature is NOT a replacement to!owns, at all. That's why I proposed a new command,!ownscacheor whaetever. If a user keeps running!ownsinstead of!ownscache, ASF will just ignore the cache file and request the API like always.... Tip: If you want to show the current time in Console, you don't have to use this. Just enable an option calledShow timestamps` in the Developer Tools' preferences:\n\nTo modify your preferences, open the Developer Tools and hit F1 (works on Chrome at least).. You must add display: none to the box-body style, otherwise you will not get that expanding animation after you click the + button for the first time.. Courier looks terrible on my machine. Perhaps it'd be better if we used a generic font family in this case. normalize.css uses font-family: monospace, monospace (explanation). From my tests using that approach made the browser choose a much better font. From what I tested, it looks perfect in all major browsers on Windows, Linux and Android. See for yourself. I too think it's a bug on AdminLTE, but adding display: none directly into the style attribute fixes it.. Nice, thank you. It really does look much better than Courier!. ",
    "JimDeadlock": "Font choice for the command window would be nice - Times New Roman is horrid :). ",
    "jarlave": "With multiple games farming it looks like this\nhttps://fs.ilold.de/images/2018-02-05_08-57-18.png\nBut in order to display this account(main) I needed to remove my other 2 bot accounts, a bit strange.. @MrBurrBurr I made a bit troubleshooting today and foudn out, it's because of the bot name from my control bot (c&c) after I renamed this bot to cnc all bots are shown. So & is a problem, but cnc is ok too :)\nnot it looks like this https://fs.ilold.de/images/2018-02-05_21-54-27.png\nI let ASF off for now if you need more screens from multiple games when you change something.. @MrBurrBurr looks good on my side on the latest artifact https://fs.ilold.de/files/2018-02-06_15-13-13.mp4. ",
    "guixxx": "\nYou can't assume that linux will never get support for DPAPI and just disable it globally, since it might at some point, and then the rest of the logic will work properly.\n\nhttps://github.com/dotnet/corefx/issues/22510#issuecomment-317197092. Hello, just wanted to report this character glitch:\n\n. Um yeah, this has happened countless times to me on *nix as well, but it's a dotnet bug...\ndotnet/corefx/issues/25016\n~~And there's probably a workaround?~~\n~~https://github.com/dotnet/corefx/issues/24562#issuecomment-335670598~~\nEdit: Nevermind. My bad, I thought it wouldn't be necessary:\nlog.txt\nI should note that I didn't redeem using Steam chat, but instead I've used IPC (I use a shitty wrapper bash script to send commands to ASF). Ultimately, this was the sent request:\ncurl -H 'Authentication: 123' --data '' 'http://127.0.0.1:1111/Api/Command/r%20bot1%20FZA6H-YAA6I-42IEF'\nThis is the actual response:\njson\n{\n  \"Message\": \"OK\",\n  \"Result\": \"\\n<bot1> Key: FZA6H-YAA6I-42IEF | Status: Fail/AlreadyPurchased | Items: [104120, Demolish &amp; Build 2017]\\n<bot1> Unused keys: FZA6H-YAA6I-42IEF\",\n  \"Success\": true\n}. That's actually funny...\nSorry for wasting your time though.. >I fully read and understood contributing guidelines of ASF available above\nNo you didn't.\n\nThe download button doesn't work\n\nYes it does.. Uhh... I wouldn't consider that a \"technical difficulty\", but okay I guess. Are you sure there's not something wrong on ASF's side? I've done some searching on ASF's Wiki and Steam group but I wasn't able to find anything related to this \"Aborted!\" message... And like I said, I get this message even before any network request is made (e.g. checking if the inventory is empty). ",
    "BirkhoffLee": "Downgrade solved the issue. Not an ASF issue? Funny.\nOn Feb 6, 2018, 5:15 AM +0800, \u0141ukasz Domeradzki notifications@github.com, wrote:\n\n\nBefore you open an issue please review the contributing guidelines for this repository.\nhttps://github.com/JustArchi/ArchiSteamFarm/blob/master/CONTRIBUTING.md\nIf my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, please close it immediately - I won't complain.\nReason for closing: technical issue is not ASF bug.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n\n",
    "pierrocknroll": "-_-. I'm very impatient to know why you consider this is not a bug. ",
    "Kekler": "Still the same. What bin file in config? This is all i have now https://gyazo.com/892b167cc544fc2f3155349d58cbfd44. . Is it because of a new version and he took it out?. Do i even need to make the ASF config gen? The SteamID one. https://gyazo.com/52535a0720fb1300f55fd37af7a1b648. ",
    "d355": "Looks like it's ASF, not .NET Core, since the bug doesn't pop out when using \"!restart\" command via Steam chat. But it is while auto-update or using IPC command.. Looked at the code a bit, many async methods, they are not the same every call time, path/conditions count. Had you experimented with just inserting big enough Task.Delay before the Process.Start in Program.Restart? (Just dirty hack to prove the problem.)\n(But since not bug reports from Windows - my case is Linux - it depends on .NET Core platform too.). * This is ASF bug, because: a) application should not continue run if configured behaviour can't be reached and b) unhandled exception is bug, even if it's ignored and logged. Application either can workaround platform bugs, or be as buggy as platform. \"Not my job\", old as a world, no surprise if .NET Core dev which planted the bug use it also.\n About proper code reading. I've did it properly enough, but it doesn't mean I could read all the ASF code, especially if I see ASF's code (and C# .NET Core code as well) the first time in my life.\n About my expectations. I don't expect anything, even my post are read. I can easily workaround the problem by disabling restart and adding wrapper script.\n* On how to fix ASF. Your answer to my question, translated, is \"No need, app should be shutdown completely to initiate HttpListener correct dispose.\" I would not have dared to tell you how to drive your project. What I do if I would run the show, knowing about such platform bugs which aren't fixed for months (with possible delays and possible regressions are coming), is just to cycle this code from IPC.Start with delays several times in case of catch and exited with unrepairable error if it didn't help (about 5 lines of code should be added):\n```\n            HttpListener = new HttpListener { IgnoreWriteExceptions = true };\n        try {\n            foreach (string prefix in prefixes) {\n                ASF.ArchiLogger.LogGenericInfo(string.Format(Strings.IPCStarting, prefix));\n                HttpListener.Prefixes.Add(prefix);\n            }\n\n            HttpListener.Start();\n        } catch (Exception e) {\n            // HttpListener can dispose itself on error, so don't keep it around\n            HttpListener = null;\n            ASF.ArchiLogger.LogGenericException(e);\n        }\n\n```\n* Why I won't do it by myself. It will take several hours to get into the development of .NET Core, write the code and test it before sending pull, but I would surely spend them if I believe that my participation is welcome. But from the tone of our conversation I see that it's not. I am sorry in case I've told something offensive or made other provocative actions. I'm sorry about all posts I've wrote here, that won't happen again.. Emm... it surely was, I've replaced it to dummy before posting, for security reasons (definitely should note this fact, sorry).\nUsing ASF about a year, just started to experiment with IPC and noticed the bug.\n. ",
    "HenkerX64": "Ok, thanks.. ",
    "stacklesshaha": "no, I have tried,getting confirmations can be in parallel,accepting confirmation has to be send one by one. get it,thanks. ",
    "Tristar7": "Hopefully here is the correct place to report this bug:\nIPC GUI is unable to send commands to bots containing a # in their name\nSending (any) command to bots containing a # in their name fails with bot not found error.\nFor example bot name 'x#y' The # and everything past it gets cut off in the parsing somewhere.\nI suppose the issue is html/http replacing symbols like # and some others to %-codes. Escaping them when sending might solve that.. I've opened a pull request #820 to fix the issue I reported above.. >try to escape \"#\" char this way: \"%23\"\nyeah I confirmed that with curl too, but point is the gui has a bot selection and inserts/uses it un-escaped. ",
    "Abrynos": "i got the error both on chrome and firefox. i think it depends on the settings you have in your adblocker (the block-lists you chose). @user777888999  as you where told now several times, both on discord and github in the issue you opened: you should rather open a pull-request than copying your message from one text-box to another in hope someone does those 10 lines of work for you. . IPC-GUI PRs take their time @Tristar7 \nas you can see mine is now open for 18 days, as the people behind it also have something else to do \ud83d\ude09. as of now there is no API endpoint for this but if archi approves of this idea i'd be happy to implement the backend for this feature. TBH I don't know if the endpoint should return the raw-file or the data in form of a list of json-objects like following:\n{\n    \"Message\": \"string\",\n    \"Result\": {\n        \"AAAAA-BBBBB-CCCCC\": {\n            \"Name\": \"Profit\",\n            \"Result\": \"NoDetail\",\n            \"Game\": \"Edepth Angel: Pinocchio's Murder VN\",\n            \"ID\": 226106\n        },\n        \"CCCCC-BBBBB-AAAAA\": {\n            \"Name\": \"Profit\",\n            \"Result\": \"NoDetail\",\n            \"Game\": \"Edepth Angel: Pinocchio's Murder VN\",\n            \"ID\": 226106\n        }\n    },\n    \"Success\": true\n}\nwhich of course would be a whole lot more of work :3. ok. i would've made two endpoints \ud83d\ude05 e.g. /Api/GamesToRedeemInBackground/{BotName}/used and /Api/GamesToRedeemInBackground/{BotName}/unused. Then i'm the exception \ud83d\ude02. maybe show the data as a table and have a small button below that's like \"copy raw data\" that copies the text to your clipboard that you would put into an new .keys-file.... View keys only has one problem: which ones are the used ones and which ones are unused? because i can only see one box for the data \ud83d\ude09 . Feature request for IPC-GUI: would it be possible to use some sort of auto-jump in the commands dropdown menus? like i open the dropdown menu for the command and then press the R key on my keybord. then the selection of the dropdown jumps down to redeem and if i press enter it automatically fills out the text-box. same with bot-names maybe.. @kingcatdaan this is not a request for IPC-GUI as the GUI can't modify the programs behaviour in that way. you may wanna check the wiki for the \"feature\" you just requested . if it works it's ok for me \ud83d\ude09\nthanks already. This should be a Pull-Request and not an issue. I probably should have created different branches for those 3 features, but sadly I thought about this too late. will do that next time.. shit that was the wrong one. already got that . This is not a full log, but only a part of it. please provide a full log.. good. now that you posted a full log i can tell you, that if an exception isn't caught somewhere in the stack the common language runtime (CLR) will terminate the whole process. As you also can see from your log: after the exception is thrown there are other log-messages which means that the process didn't get terminated which on the other hand implies that the exception was in fact caught.. Added this to my exisiting pull-request. If it gets accepted you will be able to use things like .*. Here you got :) \nDecided for explicit way to tell ASF that regex should be used, as things like ?{2} would also match.. looked at your code and used OrdinalIgnoreCase. Also moved that one bracket up the line to match your convention. Done. I just noticed that now actual bot names have to start with r!. \nshould we match with botName.Substring(2)?. knowing how this works i wouldn't have done it without a variable \ud83d\ude1b. done. . I just found and used this one: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#formatting-conventions\nI'll look at CodeStyle.vssettings and ArchiSteamFarm.sln.DotSettings later today :). Additionally we could make use of this for .sh files too, but in those we can only use the default editoconfig properties found on https://editorconfig.org/. As described in the following link naming-rules are not that easy to create. If i overlooked something you saw please tell me more.\nhttps://docs.microsoft.com/en-US/visualstudio/ide/editorconfig-naming-conventions\n\n. ok. I'll take everything that has none and make it suggestion. Also i thought about making things like csharp_new_line_before_open_brace severity levell of warning but wanted to get your feedback on that first. . Added everything that has none by default and set it to suggestion. can't even find dotnet_style_object_initializer in the file. not even init. apart from that change i found nothing. Tested by setting error-level of all rules to error (to receive immediate notification) instead of suggestion and then compiling and making changes.. works like a charm. . with permission I'd remove [WIP] from the PRs title. It is LIKE a new branch from your repo at this point in time. NOT GONNA TOUCH THAT AGAIN. Thanks for the review :). works for me.\nAlso everyone here would like to see a log. Next time you open an issue please read the text that is in the textbox and just adapt it to what you are trying to say.\n. > Offline status is extremely useful for primary accounts. As you should know, farming a game actually shows your steam status as \"Playing game: XXX\", which can be misleading to your friends, confusing them that you're playing a game while actually you're only farming it. Offline farming solves that issue - your account will never be shown as \"in-game\" when you're farming steam cards with ASF. This is possible thanks to the fact that ASF does not have to sign in into Steam Community in order to work properly, so we're in fact playing those games, but in \"semi-offline\" mode. Keep in mind that played games using offline farming will still count towards your playtime, and show as \"recently played\" on your profile.\ndirectly taken from wiki. please review @JustArchi . can my PC please not say \"failed to listen on prefix\" when i want to test IPC? \ud83d\ude44 . good thing IPv6 works fine because somehow i couldn't test on 127.0.0.1 or any other IPv4-address \ud83d\udc4d  good job, Archi \u2764\ufe0f . better?. yeah i'm officially braindead now. i'll get some sleep and look at it tomorrow when i'm not tired AF. Executed all at once. No problem there \ud83d\udc4d \n\nyou can do Cleanup file in R#\n\nAs I do not have R# installed this will be left to you . @Yur0K do you understand the difference between an issue and a pull-request? if you want to report an issue you should go to the most appropriate place you can find. sure. should be straight forward \ud83d\ude04 . > ASF is not in charge to explain what a command does\ni dont think archi would accept this in a PR.... As @JustArchi said on Discord I once again believe there should be no freaking dictionary at all, and i definitely don't want to return a hard-coded list of elements which you have to update each time a new command is added or an old one is deleted, i'd like to ask your opinion on how to proceed.. I just noticed that thanks to the dicitionary things like !stop bot1, bot2 will not be valid anymore as this would create (\"STOP\", 2). Users will have to use !stop bot1,bot2 (without a space between bot-names) to avoid the split of bot-names into two arguments -> (\"STOP\", 1)\n(Code coming in next commit). seems legit. v3.3 when all hotfixes are completed?. Please read wiki and the contribution guidelines.. i already told you to read wiki. on the top of this page there are 4 tags... one is the wiki. go there and read. This error occurs because ASF wasn't provided the correct password.\nAs this is a very important security feature to refuse anyone access to your steam accounts who tries to get access to your ASF instance by brute-forcing the IPC password this can NOT be deactivated (and will never be deactivateable [if that word exists]). you can however restart ASF itself which should clear the 1 hour timer that will let you retry after said time interval.. # Bug Report\nDescription\nWhen clicking the key-icon by a bot on bots.html and closing the popup a button will still be shown when reopening the popup, despite not belonging there\n\nSteps to reproduce\n\nGo to /pages/bots.html\nClick the key-icon of a bot\nClick on the \"View unused keys\" or \"View used keys\" tab\nClick the Cancel-button on the bottom of the popup\nClick the key-icon of the same bot again (also works if you open up the popup for another bot and then return to the original one)\nThe Download button is still visible despite being on the \"Add keys\" tab\n\nEdit: screenshot. if you have steam running on your PC during this operation this shouldnt occur at all. works for me at least as steam client detects the game as running and asf wont interrupt. read wiki and install prerequisites. also try reading contribution guidelines. definitely out of scope. listbof owned games can change when asf isnt running or shit. this would then deliver false results, which we dont want. as always: IPC GUI is not supported. only IPC API is. try to do your changes only with the API too and please report back after testing. Also you didn't provide a full log so please correct that too ;). hello adam,\ni do believe that your issue does not fit the guidelines for issues. if you want too translate please refer to the corresponding section of the projects wiki. please refer to the wiki and read it. wiki. then read again, because your issue can be resolved VERY easily. then you didn't read because you didn't need to change all false values. also it could impact asfs behaviour against your will. and please close the issue if it's resolved.. In addition to what @Vital7  said:\n\nIPC GUI is currently in preview state, which means that officially it's unsupported and we're also not accepting bug reports (standalone issues) for it. You're free to post your thoughts, suggestions and bug reports in appropriate issue that is fully dedicated to IPC GUI. . this suggestion does not fall in ASFs scope. asfs scope is primarily to IDLE games. however you can still code such a tool yourself, publiah it on your github and maintain your close integration with ASF via /Api\n\n. just did the final check. nothing suspicious found. i'll fix this on crowdin tonorrow \ud83d\ude09. > How can I log in using only shared_secret?\nnot at all. you need account username and password to log in, as well as a few other things like device_id to generate 2fa-tokens\n\nHow to attach a separate proxy to each account?\ncurrently you can't in ASF, but if you set all your delays to sane values you won't have a problem anyways. \n\ndespite all of this information i just gave you to answer your questions this issue is not complying with our contribution guidelines and i would urge you to close it as soon as possible (before Archi wakes up \ud83d\ude09). Archi properly reverse-engineered steams 2FA for ASF. ASF uses those other variables because the original steam app uses them to create better and less likely failing codes. In addition to that steam-totp is coded in node-js and has an implementation of the algorithm that's not good at all compared to the one in ASF. \n\nProblems already begin when 25-30 accounts are authorized\n\ni know people who run over 100 accounts in ASF without a problem. That's a configuration issue on your side.. Hey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository. (...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nThe \"problem\" you encountered is not a bug, which you would know if you read our FAQ\n\nGeneral ASF rule is that warnings are not errors, therefore they should not be reported\n\nPlease check our wiki if you need further help.\nHave a nice day!\n~Abrynos\n. > I did wrote the wiki\naside from the grammar mistake i'm pretty sure that you did NOT write the wiki. and i'm also sure you didn't read half of what i wrote. . if you explain to me how to disable the steam clients default behaviour i will gladly send a PR but as this notification is sent out by the server to every client at the same time I see no way for ASF to do what you want it to do. Hey, We have a wiki that explains the setting up of ASF in detail.. Let me rephrase the message sent by @light444  into a proper feature-request so @JustArchi  can close this issue and mark it with 'PR-OK' in case he would accept a properly coded one and anyone was willing to implement it.\nFeature request\nPurpose\nASF telling the user the steam level a bot has as it's very tedious to log into those accounts manually\nSolution\nAdd a command like level {botNames} to ASF\nWhy currently available solutions are not sufficient?\nASF currently does not offer such functionality\nDoes your suggestion fall into ASF scope?\n@light444 believes so\nIs your suggestion abiding to Steam guidelines?\nyes\nAdditional info\nThanks in advance and Thanks for @Abrynos for reading and understanding the contribution guidelines of ASF that @light444 ignored during issue-creation\n. go to the ASF-ui repository and report it there. Sidenote for you: those configs look very old as they contain a lot of outdated config-properties and default values. I'd recommend recreating them with ASF config generator.  Hey there!\nThank you for contacting our development team at GitHub.\nFirst and foremost we believe that you did post this issue in the wrong repository as this one here is not for our graphical user interface called ASF-ui. \nBecause of that we believe that your issue does not meet our contributing guidelines referenced during issue creation  (in the correct repository).\n\nBefore you open an issue please review the contributing guidelines for this repository. (...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nHave a nice day!\n~Abrynos. Hey there!\nThank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...) I understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nReason for closing: technical difficulties using the program are not related to ASF development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Abrynos. btw... 401 means that you didn't set up the password in ASF-ui... but that's none of my bussiness :3 can someone close the issue? this is getting out of hand. Hey there!\nThank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...) I understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nPull requests like these were already denied in the past. Just as one example i'll link you to #842 \nHave a nice day!\n~Abrynos. Hey there!\nThank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...) I understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\ntechnical difficulties using the program are not related to development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Abrynos. Hey there!\nThank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...) I understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nASF is a tool for idling CARDS... not for looting other types of items. Nevertheless Archi provides such a special version almost every time this comes up and you may want to read about it over HERE.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Abrynos. Hey there!\nThank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...) I understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nThere is a reason for the template you just ignored. If one requests a feature we like to not only read \"do this\" but we'd also like know the reasoning behind it and how you picture the solution to your problem. \nPlease check out our wiki if you need further help.\nHave a nice day!\n~Abrynos. > Make function more efficient\nEfficiency is not determined by the speed at which it MAY work for one single user but at the speed it works for ALL users. removing this delay would cause too many users starting the program as soon as possible after the reset happens and thus: \n- DDOSing steam servers\n- increasing the probability of steam-server-glitches\n\nRemove the 1-hour and 8-hour parameters, and set it so it checks immediately before checking badge pages and then every 24-hours after that\n\nthis would actually be more inefficient as the chance of steam-server-fuckups is pretty high if you only try once. especially if it's within the first part of the day the new items are available as most people try then.\n\nBecause it makes some users wait an hour to run the AutoSteamSaleEvent function if that is their only intention of running ASF at the time of running\n\nGetting sale-cards isn't the main purpose of the project. the main purpose is still to farm normal cards. everything else is an extra and should (and will) be done in a way that doesn't DDOS steam servers in favour of valve not banning ASF users on sight. Even if the only purpose of you running ASF is getting those sale cards: it's not for most users. the main goal of the project is still idling cards from normal games you own and that's the goal of most users as well.\n\nif ASF is started within an hour before the Sale event resets for the next day the user misses those cards\n\nif ASF is started within an hour before the sale event resets for the next day ASF will try to get those cards within an hour after the sale event resets for the next day and every 8 hours after that to make sure you got them all even if those requests failed the first time.\n\nDoes your suggestion fall into ASF scope?\nYes\n\nNo. as i explained above this would cause too many people starting ASF immediately after the event resets (and RE-start ASF if requests fail at some point [which will]). putting such a huge load on steam servers will not only make server-glitches more likely but will also make people working at valve angry which we can't afford as a community.\n\nMost users don't have the privilege to run ASF 24/7/365 like you do.\n\nI'm running it on a Raspberrry Pi 2b+ which cost me ~20\u20ac with a PSU, a case and coolers. Power cost is ~2 or 3\u20ac a year. You don't need a powerful server for this and if you can't afford to run ASF for at least one or two hours a day you got MUCH bigger problems than not getting sale cards in the first place and should not think of those virtual items at all.. Hey there!\nThank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...) I understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\ntechnical difficulties using the program are not related to development. i recommend you trying to use the linux-ARM download instead of the linux-x64 as the name of your operating system would suggest this. \ud83d\ude09\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Abrynos. Hey there!\nThank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...) I understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\ntechnical difficulties using the program are not related to development.\nPlease check out our wiki if you need further help.\nHave a nice day!\n~Abrynos. Seems like a good idea to rewrite this. As they will probably become more I'd suggest moving the classes in ArchiSteamFarm/ArchiSteamFarm/Json/Steam.cs to seperate files as well. Hey there!\nThank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository.\n(...) I understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nPlease check out our wiki if you need further help. I'll recommend the FAQ to you.\nHave a nice day!\n~Abrynos. oh come on. i hate this auto-completion xD. this is correct. csharp_new_line_before_open_brace accepts all, none or a list of accessors. \n. Done. didn't see there was a duplicate \ud83d\ude05 . yes. sadly we can't specify an order per file.. then we'll do that.. done\n. really should have done it when i thought \"naaaah\" \ud83d\ude02 . sorry. forgot to rename that after i renamed the property. we need a custom type as with following code it looks like the picture below\n\n\n. sorry \ud83d\ude02 was from a previous uncommited iteration where i tested something... decided against it as it was way too much logic in that single line and resulted in a bit above. revert my changes?. Where do we get the bot-name from? the property in Bot is private. change it?. good. now we have Dictionary<string, Task<(Dictionary<string, string> Used, Dictionary<string, string> Unused)>> tasks. MinMemoryUsage is pretty straight forward, but how do we run them in parallel AND keep the assoziations alive? \ud83d\ude05 \n. sure. your comment wasn't displayed for me \n\nAlthough you need to be smart about this as ToDictionary is not lazy-evaluated, so it might make more sense to instead do something like bots.Select(bot => (bot.botName, bot.GetUsedAndUnusedKeys()).. > make an array of them and get it done\n\n\ud83d\ude21 . response is of type HttpListenerResponse if i remember correctly which is why we can't name it in singular. yes. it's a HttpListenerResponse and function parameter.. much better \ud83c\udfc6. IMHO when the file does not exist it should return an empty Dictionary but this is discussable so i'll stick with null, as you would. Well... we return null if something went wrong whereas a missing file is not necessarily wrong but only means there are no keys present which would be the same as an empty file (which asf will never create). I think I'm blind. That one wasn't there in the first place \ud83d\ude02 i'll add it for you \ud83d\ude09 . sry was done automatically when i hit ctrl + r and ctrl + g in quick succession. . no because the action to loot is a different from the action to send a tradeoffer. this is called only from positions in the code where it makes sense. looting makes use of the functionality to send a tradeoffer but i might change the parameter steamID in SendTradeOffer to required and implement Loot properly if you want so. i know that it switches to the given path ;) that's why i used Directory.GetCurrentDirectory() for in the first place. but i'll check. yes it needs the full path. using \"./www\" instead of the whole Path.Combine(...) call does not work. internal static string CustomWebsiteDirectory => \"./www\"; does give me default ASF-GUI in the browser of my choice despite me having a folder called www besides the config-directory.\n. No newline at end of file - old version had one and .editorconfig says insert_final_newline = true. yes and no. .editorconfig is a file in ASFs main directory. normally VS should respect the code-formatting settings in there. maybe your VS isn't configured that way. IIRC following setting should be the right one if you want to check \ud83d\ude09 \n\n. Well... you know who coded VS \ud83d\ude09 what do you expect xD that's why i proposed using error instead of warning with .editorconfig, because that gets respected EVERYTIME (since it's checked before compiling). Logically this is wrong because it's not a compiler-error and it shouldn't prevent ocmpiling but it's the only way to force it. why not Utilities.InParallel(...)?. especially here (and below in the other functions) I'd like to see some parallelization. problem is if there are several plugins loaded and one takes infinitely to finish the other ones would not get called at all. It's not about what it is supposed to have. It's about problems that might occur when a bad coder writes bad code inside his plugin. Of course it's not... but still. \nsince when do bad coders know about reflection? . ",
    "user777888999": "I changed code of drop-down menu, cuz old was uncomfortable. I know, it's not best code, but it's simple and working.\n.scrollable-menu {\nheight: auto;\nmax-height: 220px;\noverflow-x: hidden;\n}\n.scrollable-menu {\nheight: auto;\nmax-height: 300px;\noverflow-x: hidden;\ntop:-300px\n}\nASF\\www\\css\\app.css\nbefore\n\nafter\n\n. ",
    "blackzafiqz": "Hi I got this error when I click save. I didnt put any character in the #web proxy column.\n\n{\"Message\":\"OK\",\"Result\":{\"GlobalConfig\":{\"AutoRestart\":true,\"BackgroundGCPeriod\":0,\"Blacklist\":[],\"CommandPrefix\":null,\"ConfirmationsLimiterDelay\":10,\"ConnectionTimeout\":60,\"CurrentCulture\":null,\"Debug\":false,\"FarmingDelay\":15,\"GiftsLimiterDelay\":1,\"Headless\":false,\"IdleFarmingPeriod\":8,\"InventoryLimiterDelay\":3,\"IPC\":true,\"IPCPassword\":\"**REMOVED**\",\"IPCPrefixes\":[\"http://*:1242/\"],\"LoginLimiterDelay\":10,\"MaxFarmingTime\":10,\"MaxTradeHoldDuration\":15,\"OptimizationMode\":0,\"Statistics\":false,\"UpdateChannel\":0,\"UpdatePeriod\":24,\"WebLimiterDelay\":200,\"SteamOwnerID\":76561198404611632,\"SteamProtocols\":3,\"WebProxyUsername\":null,\"s_SteamOwnerID\":\"76561198404611632\",\"WebProxy\":null},\"MemoryUsage\":17602,\"ProcessStartTime\":\"2018-06-24T03:25:04.59+00:00\",\"Version\":{\"Major\":3,\"Minor\":2,\"Build\":0,\"Revision\":2,\"MajorRevision\":0,\"MinorRevision\":2}},\"Success\":true}\n. @MrBurrBurr welcome! . Hi , when I use reverse proxy using apache2, this error occured \"You failed to authenticate properly too many times, try again in an hour.\". How can I disable the lockdown?. Okay then thank you\nOn Sat, Aug 25, 2018, 9:23 PM Abrynos notifications@github.com wrote:\n\nThis error occurs because ASF wasn't provided the correct password.\nAs this is a very important security feature to refuse anyone access to\nyour steam accounts who tries to get access to your ASF instance by\nbrute-forcing the IPC password this can NOT be deactivated (and will never\nbe deactivateable [if that word exists]). you can however restart ASF\nitself which should clear the 1 hour timer that will let you retry after\nsaid time interval.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/JustArchi/ArchiSteamFarm/issues/869#issuecomment-415969034,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQRpRGdlOIrJO7Y4R-GasYpHGEXbjvUTks5uUU_sgaJpZM4VpGAC\n.\n. \n",
    "TrAnn3l": "It would be nice when one could retrieve the keys.used and keys.unused files over the webinterface.. Maybe by using tabs?\n\nOr use tabs directly over the textbox? Whats easier to implement for you?\n@Abrynos Thank you for your implementation! I way also trying to implement it, but i would have never been so fast :)\n. @MrBurrBurr or you make it similar to the config editor/generator by adding a small link in the upper right corner like this:\n\n. @MrBurrBurr Looks great!. ",
    "kingcatdaan": "Feature request for IPC-GUI: i think this belongs here, please add a feature to keep the process running even if all the bots are offline so you can still access the GUI.. ",
    "markthewolf90": "The problem is that it won't launch you twit.. Excuse my rudeness, but I thought the issue of it not actually working was very blatantly clear.. ",
    "Vic2077": "Same here, for !play, !stop... Maybe something else. My ASF should be up to date, since it's on autoupdate, and i even updated it manually recently, to try and fix another problem.. ",
    "protasoff1": "I did this before the question, but I did not get what I expected. !loot^ accname 304930 2\nFor example this command for Unturned. I expected that after its introduction the bot should send a trade-offer with items from this game. Maybe i wrong?. ",
    "xeymos": "It not that case. \nIf i send command to bot through private channel, it expect that i communicate with bot linked to acc which private chat opened.\nAnd for main account bot private chat not available.. Ok, it's feature (hardly to understand), not bug. ",
    "Lyrex": "I am currently using docker-compose to handle my docker setup but I also quickly came up with a plain docker start.\ndocker-compose.yml:\n```\nversion: \"3.3\"\nservices:\n  asf:\n    image: \"justarchi/archisteamfarm:released\"\n    restart: unless-stopped\n    dns: 172.17.0.1\n    ports:\n      - \"127.0.0.1:1242:1242\"\n    volumes:\n      - ./config:/app/config\n      - ./ArchiSteamFarm.runtimeconfig.json:/app/ArchiSteamFarm.runtimeconfig.json:ro\n    environment:\n    - ASF_ARGS=\"--process-required\"\n```\nI just tried to rewrite the same config using plain docker commands. Here is the docker command I am running:\ndocker run \\\n    -v /home/lyrex/docker/asf/config:/app/config \\\n    -v /home/lyrex/docker/asf/ArchiSteamFarm.runtimeconfig.json:/app/ArchiSteamFarm.runtimeconfig.json:ro \\\n    -p 127.0.0.1:1242:1242 \\\n    --restart=unless-stopped \\\n    -e ASF_ARGS=\"--process-required\" \\\n    --name ArchiSteamFarm \\\n    -d justarchi/archisteamfarm:released\nPlain Docker\nUsing plain docker we've got a different story. It still is not working but this time the IPC server simply rejects my connection. Here are the curl requests for the plain docker setup:\nRequest against 127.0.0.1 with same host:\n```\nlyrex@thor:~$ curl -v -H \"Host: 127.0.0.1\" http://127.0.0.1:1242/\n   Trying 127.0.0.1...\n TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 1242 (#0)\n\nGET / HTTP/1.1\nHost: 127.0.0.1\nUser-Agent: curl/7.52.1\nAccept: /\n\nRecv failure: Connection reset by peer\nCurl_http_done: called premature == 1\nstopped the pause stream!\nClosing connection 0\ncurl: (56) Recv failure: Connection reset by peer\n```\n\n\nRequest against 127.0.0.1 with internal docker ip as host:\n```\nlyrex@thor:~$ curl -v -H \"Host: 172.17.0.3\" http://127.0.0.1:1242/\n   Trying 127.0.0.1...\n TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 1242 (#0)\n\nGET / HTTP/1.1\nHost: 172.17.0.3\nUser-Agent: curl/7.52.1\nAccept: /\n\nRecv failure: Connection reset by peer\nCurl_http_done: called premature == 1\nstopped the pause stream!\nClosing connection 0\ncurl: (56) Recv failure: Connection reset by peer\n```\n\n\nRequest against internal docker ip:\nlyrex@thor:~$ curl -v http://172.17.0.3:1242/\n*   Trying 172.17.0.3...\n* TCP_NODELAY set\n* connect to 172.17.0.3 port 1242 failed: Connection refused\n* Failed to connect to 172.17.0.3 port 1242: Connection refused\n* Closing connection 0\ncurl: (7) Failed to connect to 172.17.0.3 port 1242: Connection refused. I don't know if you have seen my curl request examples but I indeed did issue exactly that request. I know how HTTP, Host headers and all of that stuff work.\nI got to admit that I have overlooked the option to set * as host. That worked for me now.\nBut it is still strange that the setup I intended did not work (maybe it is a bug but just obscured?).\nFor reference (same happend without the Host header, with is redundant):\n```\nlyrex@thor:~$ curl -v -H \"Host: 127.0.0.1\" http://127.0.0.1:1242/\n   Trying 127.0.0.1...\n TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 1242 (#0)\n\nGET / HTTP/1.1\nHost: 127.0.0.1\nUser-Agent: curl/7.52.1\nAccept: /\n< HTTP/1.1 404 Not Found\n< Content-Type: text/html\n< Server: Microsoft-NetCore/2.0\n< Date: Fri, 25 May 2018 20:12:55 GMT\n< Content-Length: 30\n<\n Curl_http_done: called premature == 0\n Connection #0 to host 127.0.0.1 left intact\nNot Found (Not Found)```. Yup, got that. Thank you! I will simply go with the wildcard solution. There is a nginx reverse proxy in front of the application anyways so that should not matter too much.\n\nI'm pretty sure too that binding to docker's internal loopback adapter messes something up pretty badly. It's not exactly faking it but rather avoiding it I assume.\nI got my mind wrapped around it just while writing this paragraph:\nThe docker NAT rules are forwarding any host 127.0.0.1 to the container's ip (if bound). That way the application needs to listen only on the docker ip (like 172.17.0.2) but still accepting host-headers that match 127.0.0.1 there. Outside-world traffic can never reach the container on 127.0.0.1 since it's all forwarded to its bridge-ip.\nBasically if multiple interfaces are defined, the application needs to accept every Prefix-Host on every connection (which sounds pretty messy).. First: This issue is related to IPC GUI which is not supported in any way.\nSecondly: Did you really read that wiki page you linked? I can't find proxy_http_version anywhere. Set it up like this just without the SSL part and you should be golden.. ",
    "xPixv": "AppID: 876740\nhttps://steamcommunity.com/my/gamecards/876740/. ",
    "adv0catus": "The new chat has a different character limit: \n. ",
    "TheTimmaeh": "Support for the Salien game has been added to a version for patreons of ASF. Read the details here: https://steamcommunity.com/groups/ascfarm#announcements/detail/1674658681937752666. ",
    "Papitow": "Well, I have the same problem. Whenever I try to open ArchiSteamFarm.exe, it just closes right after.. Yeah, sorry. Wrong information. Next time I`ll be more careful. Sorry again.. ",
    "usuarionuevor": "@JustArchi I'm having the same issue @Papitow says but is not crash, it closes at startup because of antivirus Windows Defender removes ArchiSteamFarm.dll, is today's virus definitions (2018-06-24)\nArchiSteamFarm.dll\nTrojan:Win32/Blueteal.B!rfn\nAlert level: Severe\nCategory: Trojan\nDetails: This program is dangerous and executes commands from an attacker.\nhttps://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?name=Trojan%3aWin32%2fBluteal.B!rfn&threatid=2147727314\n. ",
    "PortStone": "+1. ",
    "JoeSchr": "Thanks. ",
    "jack1142": "How about checking for all cards available for the game on market? Not sure, what are possibilities of Steam API, eventually you can just use scrapping. For example, at this page https://steamcommunity.com/market/search?category_753_Game[0]=tag_app_501690&category_753_item_class[0]=tag_item_class_2 you can see all the cards available for game Torch Cave (App ID 501690) and if you just check one (as far as I know, when one is unmarketable, all should be, but if not, you can also check every card) from the list, you will know, if the cards from the game are unmarketable.\nIf these request are limited, you can do it before farming the actual game.\nEdit: I also suggest adding such game to some list, so the games could be farmed after all the markatable games. Scraping? Or what is illegal? :/. But you're not automating any Subscription Marketplace process - I don't want you to add automation of selling or buying cards on market.. I'm not discussing ToS, I'm just saying that reading information from Steam Marketplace isn't automation of \"any Subscription Marketplace process\"...\nSorry, if you still think I violated your contributing guidelines, this wasn't my intention, I didn't think of it as discussing ToS, my bad. . Wow! So it actually happened! Thanks for adding that feature!. ",
    "Semidio": "Actually I have set the nginx.conf just as the linked page's instruscion, and it shows the 1006 event code.\nI am not report any bug of this, I just want to say the wiki's code is not working for me with nginx-1.15.0.\nAnd after I have insert the proxy_http_version 1.1; , the log page finally shows the log, but with some warning message like I have attached above.\n. ",
    "davispuh": "There isn't anything that useful\n2018-07-03 19:51:52|ArchiSteamFarm-1999|INFO|ASF|InitASF() ArchiSteamFarm V3.2.0.2 (linux-x64/aea0e5ef-557f-4f46-8179-d11ebff7e00e)\n2018-07-03 19:51:54|ArchiSteamFarm-1999|INFO|ASF|CheckAndUpdateProgram() ASF will automatically check for new versions every 1 day.\n2018-07-03 19:51:54|ArchiSteamFarm-1999|INFO|ASF|CheckAndUpdateProgram() Checking for new version...\n2018-07-03 19:51:56|ArchiSteamFarm-1999|INFO|ASF|CheckAndUpdateProgram() Local version: 3.2.0.2 | Remote version: 3.2.0.2\n2018-07-03 19:51:56|ArchiSteamFarm-1999|INFO|acc|Start() Starting...\n2018-07-03 19:51:56|ArchiSteamFarm-1999|INFO|acc|Connect() Connecting...\n2018-07-03 19:51:56|ArchiSteamFarm-1999|INFO|acc|OnConnected() Connected to Steam!\n2018-07-03 19:51:57|ArchiSteamFarm-1999|INFO|acc|OnConnected() Logging in...\n2018-07-03 19:51:57|ArchiSteamFarm-1999|WARN|acc|OnLoggedOn() Unable to login to Steam: InvalidPassword/InvalidPassword\n2018-07-03 19:51:58|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Disconnected from Steam!\n2018-07-03 19:51:58|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Removed expired login key!\n2018-07-03 19:51:58|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Reconnecting...\n2018-07-03 19:52:06|ArchiSteamFarm-1999|INFO|acc|Connect() Connecting...\n2018-07-03 19:52:06|ArchiSteamFarm-1999|INFO|acc|OnConnected() Connected to Steam!\n<acc> Please enter your Steam password: ***********************************\n2018-07-03 19:52:13|ArchiSteamFarm-1999|INFO|acc|OnConnected() Logging in...\n<acc> Please enter your 2FA code from your Steam authenticator app: ZZZZZ\n2018-07-03 19:52:30|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Disconnected from Steam!\n2018-07-03 19:52:30|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Reconnecting...\n2018-07-03 19:52:30|ArchiSteamFarm-1999|INFO|acc|Connect() Connecting...\n2018-07-03 19:52:30|ArchiSteamFarm-1999|INFO|acc|OnConnected() Connected to Steam!\n2018-07-03 19:52:30|ArchiSteamFarm-1999|INFO|acc|OnConnected() Logging in...\n2018-07-03 19:52:31|ArchiSteamFarm-1999|INFO|acc|OnLoggedOn() Successfully logged on!\n2018-07-03 19:52:31|ArchiSteamFarm-1999|INFO|acc|Init() Logging in to ISteamUserAuth...\n2018-07-03 19:52:32|ArchiSteamFarm-1999|INFO|acc|Init() Success!\n2018-07-03 19:52:33|ArchiSteamFarm-1999|INFO|acc|IsAnythingToFarm() Checking first badge page...\n2018-07-03 19:52:35|ArchiSteamFarm-1999|INFO|acc|IsAnythingToFarm() Checking other badge pages...\n2018-07-03 19:52:38|ArchiSteamFarm-1999|INFO|acc|StartFarming() We have a total of XXX games (YYYY cards) left to idle (~1 month, 10 days, 20 hours remaining)...\n2018-07-03 19:52:38|ArchiSteamFarm-1999|INFO|acc|Farm() Chosen idling algorithm: Simple\n2018-07-03 19:52:39|ArchiSteamFarm-1999|INFO|acc|FarmSolo() Now idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 19:52:40|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 3 cards remaining\n2018-07-03 19:52:40|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 19:55:10|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 3 cards remaining\n2018-07-03 19:55:10|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 19:56:00|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 3 cards remaining\n2018-07-03 19:56:00|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 20:09:11|ArchiSteamFarm-1999|INFO|acc|ParseTrade() Ignoring trade: XXXXXXXX\n2018-07-03 20:11:11|ArchiSteamFarm-1999|INFO|acc|RefreshSession() Refreshing our session!\n2018-07-03 20:11:11|ArchiSteamFarm-1999|INFO|acc|Init() Logging in to ISteamUserAuth...\n2018-07-03 20:11:11|ArchiSteamFarm-1999|INFO|acc|Init() Success!\n2018-07-03 20:11:13|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 3 cards remaining\n2018-07-03 20:11:13|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 20:11:31|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 3 cards remaining\n2018-07-03 20:11:31|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 20:11:51|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 3 cards remaining\n2018-07-03 20:11:51|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 20:12:07|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 3 cards remaining\n2018-07-03 20:12:07|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 20:12:23|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 3 cards remaining\n2018-07-03 20:12:23|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 20:22:43|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 2 cards remaining\n2018-07-03 20:22:43|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 20:37:54|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 2 cards remaining\n2018-07-03 20:37:54|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 20:52:54|ArchiSteamFarm-1999|INFO|acc|ShouldFarm() Idling status for 388390 (\"Glow Ball\" - The billiard puzzle game): 1 cards remaining\n2018-07-03 20:52:54|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 21:08:05|ArchiSteamFarm-1999|INFO|acc|RefreshSession() Refreshing our session!\n2018-07-03 21:08:05|ArchiSteamFarm-1999|INFO|acc|Init() Logging in to ISteamUserAuth...\n2018-07-03 21:08:06|ArchiSteamFarm-1999|WARN|acc|Init() System.Net.Http.HttpRequestException: Response status code does not indicate success: 429 (Too Many Requests).\n   at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\n   at SteamKit2.WebAPI.AsyncInterface.CallAsyncCore(HttpMethod method, String func, Int32 version, Dictionary`2 args)\n   at CallSite.Target(Closure , CallSite , Object )\n   at ArchiSteamFarm.ArchiWebHandler.<>c__DisplayClass50_1.<<Init>b__0>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at ArchiSteamFarm.ArchiWebHandler.WebLimitRequest[T](String service, Func`1 function)\n   at ArchiSteamFarm.ArchiWebHandler.Init(UInt64 steamID, EUniverse universe, String webAPIUserNonce, String parentalPin)\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|Connect() Connecting...\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Disconnected from Steam!\n2018-07-03 21:08:06|ArchiSteamFarm-1999|WARN|acc|UrlGetToHtmlDocumentWithSession() Failed!\n2018-07-03 21:08:06|ArchiSteamFarm-1999|DEBUG|acc|UrlGetToHtmlDocumentWithSession() Request failing: https://steamcommunity.com/my/gamecards/388390?l=english\n2018-07-03 21:08:06|ArchiSteamFarm-1999|WARN|acc|ShouldFarm() Could not check cards status for: 388390 (\"Glow Ball\" - The billiard puzzle game), we will try again later!\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|FarmCards() Still idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|FarmCards() Stopped idling: 388390 (\"Glow Ball\" - The billiard puzzle game)\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|OnConnected() Connected to Steam!\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|OnConnected() Logging in...\n2018-07-03 21:08:06|ArchiSteamFarm-1999|WARN|acc|OnLoggedOn() Unable to login to Steam: InvalidPassword/InvalidPassword\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Disconnected from Steam!\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Removed expired login key!\n2018-07-03 21:08:06|ArchiSteamFarm-1999|INFO|acc|OnDisconnected() Reconnecting...\n2018-07-03 21:08:07|ArchiSteamFarm-1999|INFO|acc|StopFarming() Idling stopped!\n2018-07-03 21:08:16|ArchiSteamFarm-1999|INFO|acc|Connect() Connecting...\n2018-07-03 21:08:16|ArchiSteamFarm-1999|INFO|acc|OnConnected() Connected to Steam!\n2018-07-03 21:08:16|ArchiSteamFarm-1999|INFO|acc|OnConnected() Logging in...\n<acc> Please enter your 2FA code from your Steam authenticator app:\n2018-07-03 21:08:16|ArchiSteamFarm-1999|INFO|acc|Stop() Stopping...\n2018-07-03 21:08:16|ArchiSteamFarm-1999|INFO|ASF|OnBotShutdown() No bots are running, exiting...\n. ",
    "mt025": "Okay, that\u2019s good it will be sorted in #761. However, I find it hard to understand why it's not a bug. The wiki states that you can do this.. ",
    "jaks97": "Also, I just hardcoded 'display: none;' to the box-body in my latest commit. This should fix the issue with animation not displaying the first time (yeah, it is not an AdminLTE bug). . Fixing this made me see that when a bot is farming more than one game, the images are in a carrousel (wasn't working before). But that introduces a new bug, the first time you click the + all the images are displayed for a second and only then the carrousel is dispalyed: \n\nThis happens because the carrousel is initialized the first time that expanded.boxwidget event is triggered, and that event is only triggered only after the animation is fully completed.\nOne solution can be initializing all the carousels at the page load and then pause them. But if you did it this way probably you have your reasons (I think that maybe with houndreds of bots this will use a lot of uneeded resources at the page load).\nAnother solution could be make all the images of the games (except the first one) invisible by default (with display: none; or any other way). Then at expanded.boxwidget event, the carrousel is initialized and then all the images are visible again.\nI don't know, what do you think @MrBurrBurr? I haven't tried any of my solutions tho, if I find free time soon I will check it better.. Oops, was missing to parse the property when the inventory was loaded. Now both offers received and loading inventory (loot) should work properly from my tests.. ",
    "JuniorJPDJ": "It would be nice improvement. ",
    "GrPK": "No, you misunderstood. The value correspoding to the status is wrong.. ",
    "MikkelDK": "If it's not planned..what so with this (found on wiki) \n(or custom CommandPrefix of your choice that you set instead).. ",
    "itsmerazor": "Can i please at least be directed to the correct area if this simple question cannot be answered? . ",
    "wyfang": "and I test China server is:\n2018-08-16 19:40:05|ArchiSteamFarm-8744|WARN|wyfang4|UrlGetToString() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2018-08-16 19:40:05|ArchiSteamFarm-8744|DEBUG|wyfang4|UrlGetToString() \u8bf7\u6c42\u5931\u8d25\ufe30 https://store.steampowered.com/account/managedevices?l=english\n2018-08-16 19:40:05|ArchiSteamFarm-8744|WARN|wyfang4|UrlGetToString() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2018-08-16 19:40:05|ArchiSteamFarm-8744|DEBUG|wyfang4|UrlGetToString() \u8bf7\u6c42\u5931\u8d25\ufe30 https://steamcommunity.com/dev/apikey?l=english\n2018-08-16 19:40:05|ArchiSteamFarm-8744|WARN|wyfang4|UrlPost() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2018-08-16 19:40:05|ArchiSteamFarm-8744|DEBUG|wyfang4|UrlPost() \u8bf7\u6c42\u5931\u8d25\ufe30 https://steamcommunity.com/gid/103582791440160998\n2018-08-16 19:40:06|ArchiSteamFarm-8744|WARN|wyfang4|UrlGetToString() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2018-08-16 19:40:06|ArchiSteamFarm-8744|DEBUG|wyfang4|UrlGetToString() \u8bf7\u6c42\u5931\u8d25\ufe30 https://steamcommunity.com/my/badges?l=english&p=1\n2018-08-16 19:40:06|ArchiSteamFarm-8744|WARN|wyfang4|IsAnythingToFarm() \u65e0\u6cd5\u83b7\u53d6\u5fbd\u7ae0\u4fe1\u606f\uff0c\u5c06\u7a0d\u540e\u518d\u8bd5 \uff01\n2018-08-16 19:40:31|ArchiSteamFarm-8744|WARN|wyfang2|UrlGetToString() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2018-08-16 19:40:31|ArchiSteamFarm-8744|DEBUG|wyfang2|UrlGetToString() \u8bf7\u6c42\u5931\u8d25\ufe30 https://store.steampowered.com/explore?l=english\n2018-08-16 19:40:32|ArchiSteamFarm-8744|WARN|wyfang2|UrlGetToString() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2018-08-16 19:40:32|ArchiSteamFarm-8744|DEBUG|wyfang2|UrlGetToString() \u8bf7\u6c42\u5931\u8d25\ufe30 https://store.steampowered.com/SteamAwards?l=english\n2018-08-16 19:40:41|ArchiSteamFarm-8744|WARN|Wi-Fi|UrlGetToString() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2018-08-16 19:40:41|ArchiSteamFarm-8744|DEBUG|Wi-Fi|UrlGetToString() \u8bf7\u6c42\u5931\u8d25\ufe30 https://store.steampowered.com/explore?l=english\n2018-08-16 19:40:42|ArchiSteamFarm-8744|WARN|Wi-Fi|UrlGetToString() \u5728 5 \u6b21\u5c1d\u8bd5\u540e\u8bf7\u6c42\u5931\u8d25\uff01\n2018-08-16 19:40:42|ArchiSteamFarm-8744|DEBUG|Wi-Fi|UrlGetToString() \u8bf7\u6c42\u5931\u8d25\ufe30 https://store.steampowered.com/SteamAwards?l=english. ",
    "zhz1237ok": "\n\nstarts at the red point  when i start a game and the ASF pauses,  but then need me to enter the 2FA code \nthis problem shows today  i used ASF for many weeks and never need to type the 2FA code to restart it. ",
    "mrdeadi02": "Thanks you so much :). ",
    "furkanuc": "I practiced everything that was already mentioned there. My problem still continues.. I solved the problem myself thanks.\n(Enter the config file then click your .json file, open it notebook and change false values to true). ",
    "SuperSandro2000": "I had issues with uBlock Origin blocking all websockets by default. Maybe add this to the FAQ?. ",
    "azumukupoe": "I see it happening every time recently, but I don't remember when it started to do this.. Maybe that is what I see as an issue. I'm double checking config and the PC's environment right now.\nI will report again after a set of card is farmed ~today~.. ",
    "Huligan4j": "Why it is impossible to make authorization through steam-totp using the secret and identity codes?\nProblems already begin when 25-30 accounts are authorized. Steam blocks further authorization attempts for 25-40 minutes.. ",
    "nopara73": "rcedit works well for Windows. I thought I leave here my script here, you might find it useful.\ncs\nvar icoPath = Path.Combine(guiProjectDirectory, \"Assets\", \"WasabiLogo.ico\");\nvar psiRcedit = new ProcessStartInfo\n{\n    FileName = \"rcedit\",\n    Arguments = $\"\\\"{newExecutablePath}\\\" --set-icon \\\"{icoPath}\\\" --set-file-version \\\"{versionPrefix}\\\" --set-product-version \\\"{versionPrefix}\\\" --set-version-string \\\"LegalCopyright\\\" \\\"MIT\\\" --set-version-string \\\"CompanyName\\\" \\\"zkSNACKs\\\" --set-version-string \\\"FileDescription\\\" \\\"Privacy focused, ZeroLink compliant Bitcoin wallet.\\\" --set-version-string \\\"ProductName\\\" \\\"Wasabi Wallet\\\"\",\n    WorkingDirectory = currentBinDistDirectory\n};\nvar pRcedit = Process.Start(psiRcedit);\npRcedit.WaitForExit();\nSource: https://github.com/zkSNACKs/WalletWasabi/blob/master/WalletWasabi.Packager/Program.cs. Yes, sorry, this applies to core 3.0. I missed the title of your issue.. ",
    "iTz1T4Y": "\nHey there! Thank you for contacting our development team at GitHub.\nWe believe that your issue does not meet our contributing guidelines referenced during issue creation.\n\nBefore you open an issue please review the contributing guidelines for this repository. (...)\nI understand that if my issue is not meeting contributing guidelines specified above, especially if it's a question or technical issue that is not related to ASF development in any way, then it will be closed and left unanswered.\n\nThe \"problem\" you encountered is not a bug, which you would know if you read our FAQ\n\nGeneral ASF rule is that warnings are not errors, therefore they should not be reported\n\nPlease check our wiki if you need further help.\nHave a nice day!\n~Abrynos\n\nI did read the wiki and the configuration site, but I wasn't able to find a fix for my problem, as I saw I met all the requirements for the bot to work, any fix from you?. Sorry for the mistake, I meant to write read, I fixed it, also I did read what you said and also I read again the configuration part but I didnt find any fix for my problem so I asked if you got any.. ",
    "894-572": "\nif you explain to me how to disable the steam clients default behaviour i will gladly send a PR but as this notification is sent out by the server to every client at the same time I see no way for ASF to do what you want it to do\n\nI don't know how to. If this is not possible close the issue. I'm glad that this has been processed now.. ",
    "MisakaDev": "@JustArchi \nEverything is working.\nWith every buy/sell on steam returns new balance.. @JustArchi thank you very much. It's my first pull request.. > Request URL\n\nhttp://127.0.0.1:1242/Api/Command/level%20asf\nResponse body\n{\n  \"Result\": \"<a> Bot has level 1.\\r\\n<b> Bot has level 2.\\r\\n<c> Bot has level 5.\",\n  \"Message\": \"OK\",\n  \"Success\": true\n}\nRequest URL\nhttp://127.0.0.1:1242/Api/Command/level%20a\nResponse body\n{\n  \"Result\": \"<a> Bot has level 5.\",\n  \"Message\": \"OK\",\n  \"Success\": true\n}\n\nAll working.. If bot has no wallet Currency = \"Invalid\", display as \"0 invalid\".  SteamKit2:\n//     Gets the balance of the wallet, in cents.\n            public int Balance { get; }. Bot has no wallet balance = 0.00$\nBot has no wallet = wallet not created(0 payments). This file auto generated by VS.\n\n.editorconfig says insert_final_newline = true\n\nIt's VS settings?. \nIt does not work for me.. I do not get a warning.\nIt looks like insert_final_newline = true does not work in * .resx files (I checked in * .cs works well). {\n  \"Result\": \"<a> has 1 level.\\r\\n<b> has 2 level.\\r\\n<c> has 5 level.\",\n  \"Message\": \"OK\",\n  \"Success\": true\n}\nit's ok?. ",
    "cuzoxeto": "Anyway, thanks.. ",
    "Lucki": "This actually looks a bit spammy on short commands. Have you considered to use the \"User is typing a message\u2026\" for this sort of feedback?\nEdit: Tracked in #1114. Already fixed, nice!\n@Abrynos Thanks, I will look into it.. ",
    "qs-arno": "Oh shoot, I didn't realize there was a separate project for the Web interface.  Sorry about that; that's what I get for assuming the guidelines were just the usual boilerplate.  :)  I've opened https://github.com/JustArchiNET/ASF-ui/issues/198 to supersede this issue.. ",
    "quoyon": "The same.\nI supposed it should have something to do with the network config of centos system. Looking forward to developer's reply.. btw, the old version(V2) works.. ",
    "Formedras": "Right, sorry.. ",
    "Outzzz": "craft booster pack automatically is more useful for me.  if both command and auto can put into program, i'll complete command feature.. ",
    "dependabot[bot]": "\ud83c\udf89 This is the 100th Dependabot pull request merged for JustArchiNET! \ud83c\udf89\nCan we use this moment for a quick request of our own?\nWe're always trying to get more people using Dependabot. If you tweet about us or tell a friend then we'll be forever grateful.. Superseded by #1066.. Superseded by #1094.. Superseded by #1130.. Superseded by #1154.. ",
    "greysteil": "Ooh, sorry about that. It does have a catchup job that runs overnight to merge anything it's missed. Don't know what happened here!. ",
    "C-O-S": "\nThis is the trade I received that seems to have triggered the error.\n. ",
    "skapytek": "I know that parts of steam can be offline but the thing i posted it here is: \nOnly happening to my master account and its happening since 2 days\nregards. Is it possible to add this as option and why ASF shouldnt do it?. ",
    "Aareksio": "v-html mixed with mustache + $t syntax. Why default, not en?. window.navigator.language may give different results depending on the browser (for the same language). For me, Chrome returns pl, while Edge pl-PL, need to take this into account.. This only works in some ancient browsers and even there, isn't it better to use userLangauge? (browserLanguage is supposed to show system's langage). Formatting. Formatting. What does this transpile to? I can think of two possible outcomes:\n- It does HTTP request every time the function is called, or\n- It simply doesn't work as intended\nIf it's any of the above, we need to change something. In the first case, testing all navigator.languages elements twice isn't a way to go. And if this doesn't work, well, it doesn't work.. No need to set this if we've already loaded user (browser) specified language file.. Hence if in my comment :) As everything is bundled it doesn't matter anyway.. "
}