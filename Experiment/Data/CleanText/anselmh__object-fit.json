{
    "anselmh": "@jussiry Thanks for reporting. Unfortunately bower has an issue with the registered package. It has been reported to be fixed by the bower team (https://github.com/bower/bower/issues/120#issuecomment-29187170) but I cannot do anything for now on this.\nTherefore I recommend to fetch it manually for now until the issue is resolved. I will keep this issue updated when the URL on bower registry has been fixed.\nSorry about that.\n-Anselm\n. Okay, the issue has been resolved. You can now install the package with bower finally :)\n. Hi, sorry for the confusion and thanks for reporting back. IE8 is supported since the latest version (https://github.com/anselmh/object-fit/commit/26dfbe911eb3349e7397790d58a1a2e8f9f2a12b). I will update docs asap.\n. Hi, thanks for raising this feature-request. Could you point out what benefit is has and if the performance will not be affected by this change? Thank you. :)\n. Any chance you can track down what part of the code exactly causes this error?\n. Hi @mattbbp, it seems to be a problem with testing on a local machine path instead of a server (you test on file:///, aren't you? Can you please test if this also happens on a localhost or a server? Couldn't reproduce here\u2026\n. Weird, I'm not getting this in FF 27.0 and 30alpha. Which channel do you use \u2013 is it Aurora?\n. Thanks, I'll try to find out what it could be and how to fix it.\n. Oh, sorry\u2014hadn't had the time yet to dig into this issue. I can confirm the second warnings btw while I still cannot confirm the initially reported issue. Can you reconfirm and update the initial post accordingly?\n. Thanks, @Schepp is working on this and we\u2019ll keep you up-to-date here.\n. Thanks and sorry for the delay. I haven\u2019t found an easy solution yet but will work on it over the next days and hopefully get a solution.\n. Hi, sorry again for the long delay here. I reached out to some FF devs but got no clear answer yet to this issue. Therefore I want to propose a hotfix to you:\nBy commenting out line 396 from polyfill.object-fit.js you can prevent the error and Firefox will display the image correctly with object-fit.\nI still hope we\u2019ll get the issue tracked down and resolved as soon as possible. \n. I see. I don\u2019t know yet why the script goes unresponsive in this case (only in Firefox as Chrome supports object-fit natively). I\u2019ll have a look at this as soon as possible and make a performance audit.\n. Hi @mattbbp @OliverJAsh @Triphys can you please test v0.3.3 and report back if the issue still appears or not. @mattbbp your issue seems to be a different, would you mind creating a new one mentioning the performance issue (if still applicable in v0.3.3)?\n. Can be manually fixed by site authors:\n\np.s. I fixed the security problem by avoiding @import and setting a header in PHP:\nheader('Access-Control-Allow-Origin:*');\nthen adding the crossorigin attribute to the <link crossorigin=\"use-credentials\"\n\nrespectively setting it in the .htaccess file.\nWe should still try to fix this in our script or it needs to be documented but this is the short fix. \nccing @mattbbp \n. I researched a bit more and found out we could only fix this by circumventing the CSSOM CORS. This is a massive hack which I don\u2019t think should land in our codebase as it has too many side effects. \nTherefore I\u2019ll rename the issue as it only needs to be documented.\n. Is there any SSL involved or a different port / host?\n. So, are you using Webfonts that are from a 3rd party, by chance? Somewhere there must be another host / protocol involded to trigger this issue as far as I know. It\u2019s very annoying but this these are the circumstances we\u2019re dealing with when using JS (and we can\u2019t use anything else here) nowadays for such stuff.\n. Okay, then this is the issue. Unfortunately, as the polyfill needs to read out your computed CSS it does exactly that. And this means all inherited properties and values, such as fonts as well. I\u2019m not sure if that is somehow avoidable, I have a look at this specific GetMatchedCSSRules.js anyways as it causes major problems and performance issues as well. \n. By the way this should not affect your live setup when protocols and ports match (=non mixed content, so HTTP or HTTPS only).\n. Hi, do you use 0.3.3 already? I currently can only see issue #7 applying to you due to CORS restrictions and cannot re-confirm the performance issue at the moment.\n. Thanks, issue is in line 127 of polyfill.object-fit.js. I\u2019ll try to find a solution but also adding @schepp to the loop.\n. Hey, nope. Hadn\u2019t had much time\u2014only a quick glance\u2014but haven\u2019t found the issue yet. I\u2019m sorry about that and hope to find out soon\u2026 :(\n. Closing as it\u2019s basically and most likely a duplicate of #13.\n. Thanks for the feedback. I think that\u2019d be a great feature to support in future. If you have an idea and want to contribute I\u2019m happy to review your pull request. Otherwise I try to implement this into the next version\u2026\n. So, an update here. As we try to emulate the behavior mostly CSS only this won\u2019t be possible with our current code. If you have an idea how we could do it, I\u2019m happy to discuss with you and help implement it.\n. I\u2019m closing this now. Don\u2019t see an easy solution for it and bloating it up even more is no option for the sake of performance. Sorry.\n. Thank you! Merged via f3b68bedf8ae5e0bd190606c0f2ed2f766c83793. I also fixed the whitespace issues and added a small notice into CHANGELOG. Thanks for contributing this, if you want to avoid the small issues with coding guidelines, let your editor use the editorconfig file :)\n. Yes, this is an issue indeed. I\u2019m not sure how to solve this within the polyfill actually but I\u2019ll look into an solution soon. If you find one, let me know or shoot me a Pull Request :)\n. \nI had a look at it right now and found out that it does not ignore border-radius but applied it to the actual image size (which is bigger than the shown element as it needs to fit-in the image into the container. Therefore it looks weird and not as expected. Unfortunately I\u2019m not able to fix this in the polyfill without bloating it up further (I could imagine we could re-write border-radius on image to something like css clip-path which is also widely unsupported). \nTherefore I\u2019m closing this issue except if you know a feasible way to solve this.\n. Merged in https://github.com/anselmh/object-fit/commit/a00c587c280f26e68dd1c5ff84e3c6492b86f160\n. Thank you! :)\n. Yeah it definitely has some performance issues and indeed this is the polyfill. Unfortunately there\u2019s no alternative to it yet (or I just didn\u2019t found one?). If you know a way how to fix it, please let me know. I\u2019ll leave this open for suggestions and to remind myself to search for a better solution.\n. I at least found some information what causes the trouble and makes Firefox slow and unresponsive when dealing with multiple images here. It\u2019s the selector matching and generally getting the computedStyles from the elements and re-applying them.\nIf anyone has an idea how to optimize this, please let me know or send a PR. Happy to review and merge it.\n. It is the same. I\u2019m sorry, I couldn\u2019t find enough time to make the alternative implementation of the CSS parser. If anyone is willed to help, reach out to me and I\u2019ll let you know what\u2019s the plan.\n. So the plan is to replace the CSS matcher / parser completely. The currently used script causes the trouble seen in bad performance on Firefox and IE. Replacing it with a better, proper solution might work and solve these problems. \nI already created an issue describing what needs to be done here: https://github.com/anselmh/object-fit/issues/19 \n. Yes it does work in some cases. The main issue about this is that it doesn\u2019t inherit other styles that were used on these elements before the x-tag got applied.\nBut maybe I could offer this as an option, you\u2019re right.\nI digged a little deeper into the issue and one way is to work around using the native CSSOM. While this has the effect of a better performance it would increase the polyfill weight from 18kb minified, non-gzipped to 48-50kb. I think that\u2019s not really worth the trade-off so I\u2019ll do a bit more research on how to optimize the polyfill when used on more than just a couple of elements on a site.\n. Yep, I know and that\u2019s so awesome. Still the IE issue around and unfortunately IE sucks at the very same functions as Firefox does. And they have no plan yet on implementing object-fit so it won\u2019t happen in the near future.\n. Duplicate of #22 so closing this now. Discussion is going on in the other issue.\n. @kud Why are you so grumpy? Do you think this is helpful? I don\u2019t. So please stop contributing issues this way. It doesn\u2019t help anyone besides maybe yourself. Thanks.\n. No. I just mean you should speak more appropriately to not disappoint people who work hard solving problems for you and provide this for free.\n. I\u2019m always open for a PR solving issues. And by the way, that\u2019s a great way to contribute. But please bear in mind the package still needs to be fetchable by bower, too. :)\n. Of course accepted. :)\n. This is a duplicate of #7 I think. You can find a \"solution\" over there. Please reopen if you think this really is another issue.\n. Thanks! Looks fine at first glance. I\u2019ll have a look at it later.\n. Thanks again. I merged it and published 0.3.6.\n. Nope, sorry. Done that now. Bower does automatically fetch tags and I\u2019m used to it now :(\n. Hey, actually I included the Modernizr test for it in the codebase. Polyfill won\u2019t be applied / executed if there\u2019s native support.\nFor the other issues I\u2019ll try to replicate the errors and will get back to you. Thanks for reporting.\n. So in Firefox you probably get a \"operation insecure\" console error, don\u2019t you? This is due to a restriction that applies to the CSS parser I use in here. I hopefully can get rid of it soon but for the time being external URLs are not supported (means opening from filesystem won\u2019t either).\nCan you confirm this and does it work using a real webserver (local should be fine)?\nIE9 seems a different issue though.\n. You might give a try setting a proper CSP (Content Security Policy) rule on the server that allows cross-site scripts etc to make it work.\nOtherwise I don\u2019t know of any way to circumvent it, sorry. I will open another ticket for a refactoring task of the in-target CSS parser but this will likely take some more time.\n. Closing this now as initial bug isn\u2019t reproducible and IE bug has its own issue.\n. Thanks, man. Of course you\u2019re right. :)\n. Won\u2019t do this. All solutions that reimplement the CSSOM are massively bloated and it\u2019s not worth pulling in 50 additional kb of code for a simple one property polyfill. Therefore closing this for the time being.\nI might be able to come up with whole different solution.\n. Hm, thanks for the input, @FremyCompany. Currently I\u2019m on a very tight schedule so I can\u2019t put a lot of effort in here over the next weeks. It would be great indeed if we could use the base for polyfills and only get a fraction and small part of the whole code in production.\nI\u2019m not yet sure it would solve my use case but the performance issues in this polyfill currently are based on parsing the whole CSS through getmatchedrules etc.\n. Ah sorry. No I don\u2019t have a real plan what I\u2019ll use. I might try out to provide the object-fit behavior through SVG but I haven\u2019t tested this though don\u2019t know if that works. And it would be for SVG supporting browsers only then.\n. Thanks so much! :)\n. @ahmadalfy Actually I want to implement this cascade parser instead of the current one: https://github.com/FremyCompany/css-grid-polyfill/blob/master/src/core/css-cascade.js it will most probably solve the problems of performance and the CORS issue as well.\n. Hi, do you have a test case to see the error? And would you mind providing me these details:\n- To how many images do you apply the polyfill\n- Does it work in IE and by chance in newer/older Firefox builds?\n- What\u2019s the exact error message?\n- You say it\u2019s in the _matchesSelector function. Do you know more details on that? I know Firefox changed something in the matchesSelector code in v35 but I\u2019m not sure if this affects the polyfill and if, how.\nThanks,\nAnselm\n. Thanks, I\u2019ll have a look into it later on and try to find a solution. The IE9 thing seems to be unrelated to this but I\u2019ll have a look at this, too. Thanks for sharing the details.\n. Okay, I\u2019ve started to look into it. When using the test markup from my repository this error isn\u2019t reproducible. No script terminated in Firefox v35.0. Even when I use the CodePen code, which I assume you\u2019re using on your local development setup, it works as expected.\nWeirdly, it doesn\u2019t work on the Codepen itself. I assume, but really, that\u2019s only an assumption as copepen lacks an internal console as far as I can see, this has to do with the cross site scripting restrictions that affect this polyfill (https://github.com/anselmh/object-fit#security--mixed-content-issues-and-3rd-party-css). I\u2019m not sure if I\u2019m able to figure out more here as I don\u2019t know how Codepen assigns the CSS and JS to the code and generates the output. If done with iframes or similar tools it is the security issue.\nThe IE thing is something different and I\u2019ll have a look into it soon.\n. Hi @kartikluke can you please provide me with more details on how you use the polyfill and on which markup and in which environment (sth like codepen or a simple localhost non-iframe page)?\n. Thanks for the details, @kartikluke. I\u2019ll try to re-create your test case. If in the meantime you find anything helpful or a solution, please let me know.\n. You\u2019re unable to set CSP? Well, in that case the script would need to skip all external URL CSS which I wanted to do but didn\u2019t found the time in the past days. It should be relatively easy to do though. Perhaps you can come up with a PR for that or I might get a chance to do this over the next days.\n. For #19 see: https://github.com/anselmh/object-fit/issues/19#issuecomment-74855268.\nConcept: We\u2019d need to extend the stylesheet fetcher in here to match against the current domain and only fetch them. Ideally, this test should be only applied by a setting (so that it\u2019s optional for the dev if he wants cross-site stylesheets to be parsed or not).\n. Yah, this is a limitation of the CSS parser. How many images do you want to have the polyfill applied on that page? I figured that about more than 5 cause issues. Or, how much CSS is parsed? All stats help tracking the issue down.\n. Uh, that sounds bad (not your CSS but the fact that the polyfill is only applied to one img). 9000lines is pretty much CSS but anyways it should ideally not affect it. Sadly we\u2019re searching the whole thing at the moment. This catches all edge cases but makes it super slow.\nInterim solution: You can emulate object-fit also with SVG (if you don\u2019t need to support IE9) with the preserveAspectRatio=\"\". Or as you mentioned use a background-image.\nAt least your experience helps tracking down where the real issue lies in the polyfill at the moment.\n. Okay. Well, we have a few options:\n- Speeding up the codebase itself (I guess there may be some memory leaks / unperformant code)\n- Maybe we don\u2019t need to evaluate all properties but only the ones where object-fit is used in the same selector? Not sure if that\u2019s possible and if that\u2019s speeding up things.\nI\u2019m not a JavaScript performance expert but currently with a few images in place we\u2019re at under 10 frames per second which is way far away from the optimal 60fps. I do think there is potential to optimize the way reflows and repaints as well as the calculations are handled at the moment.\nTo be honest, I\u2019m not too keen on doing this myself but I\u2019m happy if anyone is willed to help me out on this.\n. Just a quick update to all of you: I released v0.4.1 today which is increasing performance by about 28%.\n. Exactly. It also affects IE still (while IE does render significantly better than FF35-)\n. So, added another performance commit which reduces the pain a bit. Still slow but can\u2019t do much more for now. Therefore closing this particular issue now.\n. Thanks man, that\u2019s awesome! Just noted a few minor things to the PR which would be great if you could solve them before I merge this into master. Please let me know when this would be ready to merge. :) \n. Alrighty, that looks great. Would love to have the option though when I merge it as people might want to use ext. stylesheets. Otherwise this change would be major and would need a new major version which I wouldn\u2019t prefer to do. If I find some time, I can jump in for that, too (I\u2019ll just ping you here before then).\n. I added the option to the polyfill in 7f0400d265982604f8801763a9e581e0a2ccc49b and merged it in now. Thanks for your help!\n. Thanks for reporting and the additional information, Anne. Is it fine now? :)\n. Now I\u2019m confused. Isn\u2019t that what I had before except I had the crossorigin=\"use-credentials\" paired with *? So is it correct to state this?\n\nSet header to: \n'Access-Control-Allow-Origin: *'\nAnd on the CSS link:\ncrossorigin=\"\"\n. Thank for reporting. You\u2019re right. If you have time, feel free to submit a Pull Request with a fix. Otherwise I\u2019ll try to fix it as soon as possible.\n. Ah, damn it. Had really no time in the past weeks. Actually I hope to fix this in the next week, ultimately the week after. Sorry about the hassle.\n. Hey, thanks for reporting. Indeed this seems to be a bug as the polyfill should react to newly loaded images through the MutationObserver. I\u2019ll try to have a look as soon as possible. Do you by any chance have a demo somewhere? If you want to keep this private, you can also send me an email. :)\n. Hey, what does preload JavaScript do? Because I\u2019m seeing an error \"can't execute code from a freed script\" which mostly occurs in IE when you have a script dependency loaded too early OR (but I doubt this is true for your example) when you use foreign frames in the page.\n. In other words: Can you try to figure out if this works as expected when you load everything in order and don\u2019t alter JS loading behavior? Trying to track the issue down now.\n. Oh, that YouTube embeds indeed could be the issue. Would you be keen to test if it works (or at least doesn\u2019t output the message in IE\u2019s console) then?\n. Oh wow, what\u2019s the case for using such an old, outdated Firefox version? How many images have you applied the polyfill on? \n. @dmail hey, I cannot reproduce this on a Mac and the current version from master (not the latest published version) of this polyfill. Can you test this with the master source again by any chance? I\u2019ll probably release a bugfix version soon.\n. I\u2019m closing this now as not reproducible.\n. Have you tried to use it with video and encountered a problem or didn\u2019t tried it? In general it should also work with video although I never explicitely tested it with it.\n. Thanks. I\u2019ve reconstructed the case partly successful in a non-supporting Firefox version. Does it work if you resize the window after the polyfill has initialized? In my case the resize event triggered the polyfill to work properly. If IE does the same, that narrows down the issue.\n. There are other reports now regarding this issue:\nAs the title states, this does not work with videos with Microsoft's new browser on Windows 10 Build 10130.\n. Wait, so video works well i IE11 with video but not in Spartan?\n. Ah, that is very interesting now and actually quite frightening as in MS Edge there\u2019s no reliable way to UA detect it. I\u2019ll try to figure out what\u2019s going on there. Do images work at least in there, @cosmix?\n. Hey, I re-traced the problem and it works fine in browsers here except for the following caveats:\n- No browser passes autoplay attribute through JavaScript and exectues it. So you can\u2019t autoplay videos using just the autplay attribute. Instead you\u2019d need to use a complete JavaScript video player which might work better in that case.\n- MS Edge support is currently completely broken. See #45 for more info.\n\nI\u2019m therefore closing this issue now.\n. Hi, thanks for the suggestions. I agree this could be done and have replaced the rAF polyfill with the one from npm.\nI\u2019ll see if I can make use of the closest polyfill and if it makes sense to use it here. Thanks for the hint.\n\nFor \"copy-lib\" you may build bundle. For package managers build just core file and maybe getMatchedCSSRules polyfill. Other polyfills will be loaded as dependencies.\n\nNot sure what you mean here though? Can you explain this a bit more in detail perhaps?\n. Thanks so far for your suggestions. It seems the polyfill is indeed a bit faster now again. I\u2019ll see if I can make the dependency stuff a bit less messy.\n. Thanks. Fixed to use the npm version now. Therefore closing this issue for now.\n\n@anselmh Are you sure you need el.closest instead of el.matches? closest polyfills both.\n\nI tested this and it didn\u2019t fail while speeding up the polyfill. That\u2019s why. If there\u2019s any issue with it it\u2019s easy to roll back.\n. Hi, i\u2019m sorry this is causing trouble with your site. However, due to the inheritance feature of values in CSS it is necessary to parse the whole CSS. The selector you give is only to set the target but doesn\u2019t limit the CSS parsing. It\u2019s true that this is not ideal but to match the behavior of object-fit as expected this is necessary.\nYou could either try to minimize your CSS or, try to emulate the behavior of object-fit with SVG.\n. Thanks for reporting, this is a duplicate of #29.\n. Hey, the polyfill accepts all options of querySelectorAll() which means you can also chain CSS selectors in it, comma-separated.\nPlease be aware that the polyfill still needs to travel up the whole DOM to match parent styles on it as well which is a performance issue but lets it act properly. It might be the case that when you have a large CSS file and use this polyfill, IE might still crash, even when you limit the selectors.\n. Oh by the way, can you add your setup (IE version, MS version) and the size of your CSS just for the record, please?\n. Yes, I assumed this already. 200kb of CSS is very heavy and it definitely is the reason that the browser hangs during the polyfills\u2019 execution. Maybe you could go with SVG wrapper using the preserveAspectRatio trick which is at least similar to the object-fit behavior? \nThe polyfill won\u2019t ever solve this performance problem as in that case it would lack much of the original behavior \u2013 making it useless as a \"polyfill\".\n. Hey, can you please give me a more detailed description, ideally with a code snippet on how you use it and how it should behave and how it behaves?\n. Thanks, I\u2019ll investigate as soon as possible. Which IE have you tested on?\n. This is probably a duplicate to #38.\n. Duplicate of #38.\n. You\u2019re probably including a CSS from another host which browsers do not allow (unless you have a proper CSP and CORS in place). You can also add disableCrossDomain to the initialization of the polyfill to avoid the external CSS being parsed.\n. A pull request would be great. When doing it, can you please check if the visual tests still work as expected?\n. @Maximilianos Pushed 0.4.3 now. Cheers!\n. Sorry, seems to have conflicts - can you resolve them so I can merge it?\n. No it\u2019s not. IE has a bit weird behavior unfortunately with the current polyfill.\n. It is indeed a duplicate of #23 so I\u2019m closing this one if that\u2019s okay? I did some research but found no quick solution. If you find a solution, please let me know or send a PR :)\n. Yes, I have no way to fix this currently as Edge does not provide any alternative and therefore the aimed solution is not usable anymore. I\u2019m sorry about this and have been poking people at Microsoft regarding this and the native support but did not get an answer. :(\n. Unfortunately, not actively. I\u2019m happy for any contribution here but don\u2019t have the time to develop this further on my own. However, it should work well in IE9 but the bigger issue it #45 in my opinion which I have no clue how to solve. :/\n. True, I should really do that. Hopefully I find some time to do this later on today.\n. If you have any(!!!) idea how to do that, please let me know or come up with a PR. I\u2019d be super happy if we could get it working in IE/Edge again.\n. Sorry, what do you mean by \"auto-detect usage\"? Not sure I understand the problem properly.\n. Ah, yes and no. In general you select this as in the mentioned jQuery polyfill but it still needs to parse all the styles to get the css of the current and parent elements as the polyfill injects a new custom element to maintain styles on the images or image container. Disabling this would make the polyfill pointless (okay, it\u2019s pointless anyway thanks to edge dropping support for some JS properties)\u2026\n. Yes, I\u2019ve seen this already, thanks. I\u2019m going to add this as a note into the Readme. But please not this provides only the basic feature of object-fit, and behaves a bit differently so always test if it\u2019s working the way you want it to. :)\n. Added to README here.\n. > But AFAIK the most common use case :smile:\nIt is, so thanks again for building, documenting and publishing this lightweight alternative, @primozcigler! :)\n. Cool, thanks! :)\n. Please follow the existing coding conventions: function (href).\nI\u2019d also prefer to have a better function name like getCSSHost as it\u2019s currently unknown what host it fetches.\n. Would be great to not use an abbreviated variable name but sth like fakeLinkOfSheet. Also please use single quotes for createElement.\n. Please use !== as we\u2019re using strict mode and follow the jshintrc. If you want to add option separately please remove the commented out code. Otherwise I\u2019ll wait until it\u2019s committed here which is also fine for me.\n. Does this check different ports, too? Because we\u2019d need to cover this as well if possible.\n. ",
    "jussiry": "Ok, no worries, thanks for snappy reply!\n. ",
    "scottbaggett": "Great news. Thanks for the quick response.\u00a0\u2014\nSent from Mailbox for iPhone\nOn Wed, Jan 8, 2014 at 10:55 PM, Anselm Hannemann\nnotifications@github.com wrote:\n\nHi, sorry for the confusion and thanks for reporting back. IE8 is supported since the latest version (https://github.com/anselmh/object-fit/commit/26dfbe911eb3349e7397790d58a1a2e8f9f2a12b). I will update docs asap.\nReply to this email directly or view it on GitHub:\nhttps://github.com/anselmh/object-fit/issues/2#issuecomment-31906843\n. \n",
    "ghost": "The benefit is that it would work if you load the plugin asynchronously (e.g. with Require.js). The performance should not be an issue, since if you omit this part, the plugin does not perform at all (when being loaded after window load). I hope this makes sense.\nBy the way, I checked the other object fit polyfills and this is by far the best (excerpt for this minor issue).\n. Awesome! Thanks a lot.\n. ",
    "Schepp": "Excellent suggestion. I just updated the library accordingly: https://github.com/anselmh/object-fit/releases\n. ",
    "drublic": "Thanks.\n. ",
    "ok-sure": "It's line 38 where it's returning the cssRules.\nThough I can't get it to show me anything useful about the data it's storing up here by using the console.log so maybe it's returning null?\n. http://comeround.bbpdev.com/__dev/all/object-fit/tests/index-cover.html\nGetting the same here...\n. I'm on the beta channel on my Mac - I've tried it on 2 real PCs (v26 & v27) and and a virtual Mac (v27)\nWhile I'm not getting the same error on the PCs, it's distorting the image/not rendering the cover object-fit properly.\n. The PCs don't have the developer tools installed to see the full errors. but these warnings are showing in Firebug on load (Windows 8, FF27):\n14:20:44.963 The character encoding of the HTML document was not declared. The document will render with garbled text in some browser configurations if the document contains characters from outside the US-ASCII range. The character encoding of the page must be declared in the document or in the transfer protocol. index-cover.html\n14:20:45.043 TypeError: CSS2Properties doesn't have an indexed property setter. polyfill.object-fit.js:396\n. any joy on this at all?\n. no - I'm not getting that error now. that's so weird. have updated the post.\n. Thank you!\nMatt\nOn Fri, Mar 14, 2014 at 1:34 PM, Triphys notifications@github.com wrote:\n\nLooking forward to it, keep up the great work :)\n\nReply to this email directly or view it on GitHubhttps://github.com/anselmh/object-fit/issues/5#issuecomment-37646922\n.\n. Yes - I can't get it to work in practice on a larger site though.\nhttps://comeround.bbpdev.com/__dev/mph/\nI've put it back in to show the problem, it just hangs on every image it\nneeds to process.\nIs it too much css because of bootstrap? Is it trying to process all that\nfor every image?\n\nOn 22 May 2014 21:02, Oliver Joseph Ash notifications@github.com wrote:\n\nI\u2019m looking at\nhttp://comeround.bbpdev.com/__dev/all/object-fit/tests/index-cover.htmlin FF 29 and it looks good to me!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/anselmh/object-fit/issues/5#issuecomment-43937065\n.\n. Thank you - this site is due to go live in a week so if I can get this bit\nworked out, it would be great.\n\nOn 23 May 2014 23:35, Anselm Hannemann notifications@github.com wrote:\n\nI see. I don\u2019t know yet why the script goes unresponsive in this case\n(only in Firefox as Chrome supports object-fit natively). I\u2019ll have a look\nat this as soon as possible and make a performance audit.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/anselmh/object-fit/issues/5#issuecomment-44067439\n.\n. Hi - try it now - I am using 0.3.3 btw.\nMatt\n\nOn 27 May 2014 16:10, Anselm Hannemann notifications@github.com wrote:\n\nHi, do you use 0.3.3 already? I currently can only see issue #7https://github.com/anselmh/object-fit/issues/7applying to you due to CORS restrictions and cannot re-confirm the\nperformance issue at the moment.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/anselmh/object-fit/issues/8#issuecomment-44289288\n.\n. Thanks Anselm, appreciate your help.\nMatt\n\nOn 27 May 2014 22:37, Anselm Hannemann notifications@github.com wrote:\n\nThanks, issue is in line 127 of polyfill.object-fit.js. I\u2019ll try to find\na solution but also adding @schepp https://github.com/schepp to the\nloop.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/anselmh/object-fit/issues/8#issuecomment-44338892\n.\n. Any joy on this at all?\n\nOn 27 May 2014 22:46, Matt Halliday matt@biffbangpow.com wrote:\n\nThanks Anselm, appreciate your help.\nMatt\nOn 27 May 2014 22:37, Anselm Hannemann notifications@github.com wrote:\n\nThanks, issue is in line 127 of polyfill.object-fit.js. I\u2019ll try to find\na solution but also adding @schepp https://github.com/schepp to the\nloop.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/anselmh/object-fit/issues/8#issuecomment-44338892.\n. \n\n",
    "fsimmons": "Just to confirm... getting same error. \"TypeError: CSS2Properties doesn't have an indexed property setter.\" line 396\n. Thanks!\n. ",
    "Triphys": "Just to confirm as well, same issue here :)\n. Looking forward to it, keep up the great work :)\n. ",
    "OliverJAsh": "I\u2019m looking at http://comeround.bbpdev.com/__dev/all/object-fit/tests/index-cover.html in FF 29 and it looks good to me!\n. :+1: \n. ",
    "lolmaus": "Hi! I receive \"SecurityError: The operation is insecure.\" even though i'm bundling polyfill.object-fit.js with a relative URL.\nIs there something i can do to solve it?\n. No SSL.\nThe web server is running in a virtualbox, serving all assets locally (i. e. with relative paths). I'm opening it in browser as http://foo:3000.\n. PS Firefox.\n. I do use web fonts served from an external URL. I thought only the fitted images are concerned...\n. ",
    "luruke": "I had a similar problem like @lolmaus (I was using typekit)\nI solved adding this code inside getSheetRules():\njavascript\nif (stylesheet.href && stylesheet.href.match(/typekit/)) {\n            return [];\n}\n. ",
    "toobulkeh": "so by very slow I guess you mean this is the same 10 second delay that we're having... :facepunch: \n. @anselmh describe the plan here, I might have time, just not sure if I have the knowledge.\n. ",
    "O-Zone": "Did anyone figure out whether this actually IS the same as https://github.com/anselmh/object-fit/issues/8, and are anyone working on a fix right now? I have a Bootstrap 3 site running the polyfill, and unfortunately I can confirm that this IS a problem in IE and FF.\n. Everyone in here interested in a real and long lasting solution should also remember to log in here: https://status.modern.ie/objectfitandobjectposition and whine about IE not planning on implementing object-fit. I'm not sure it will help, since there are lots of other features they should implement, and the competition is strong - but it won't hurt to try! ;-)\n. ",
    "thany": "I've got a workaround. It may not work for everyone, but for me, on my computer, on FF 35, replacing this:\nvar replacedElementStyles = objectFit.getComputedStyle(replacedElement);\nvar replacedElementDefaultStyles = objectFit.getDefaultComputedStyle(replacedElement);\nWith this:\nvar replacedElementStyles = { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0, overflow: 0 },\n    replacedElementDefaultStyles = replacedElementStyles;\nMakes it a billion times faster.\n. Oh well, just one more FF version to go and IE will be the only remaining non-supporting browser. Then you can fairly safely abuse IE-only functions ;)\n. ",
    "kud": "It means you won't fix it because of the way I spoke?\n. In fact, I said that because a friend of mine wanted to download your project via npm and he can't use at all because of the postinstall. =(\nI was so sad for him.\n. Do you want a PR maybe, dear @anselmh. May I give you a suggestion?\n. Okay lovely @anselmh. Please, accept my apologies for being rude sometimes because of my passion.\nBest regards,\n. Title + first message edited.\n. By the way, @anselmh if you're interested by package managers in front, read that: http://blog.npmjs.org/post/101775448305/npm-and-front-end-packaging\nnpm will be more and more better for frontend packages.\n. Did you test if it still works on bower with this solution?\nRelated to https://github.com/anselmh/object-fit/issues/14\n. Amazing. Thank you for your support.\nOn 25 Nov 2014 22:30, \"S\u00e9bastien Balayn\" notifications@github.com wrote:\n\nThanks, man.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/anselmh/object-fit/pull/16#issuecomment-64474250.\n. You can do it via npm but it's not the best way.\n\nconsole\n$ npm install anselmh/object-fit\n. ",
    "Nyalab": "hi! see https://github.com/anselmh/object-fit/pull/16\n. Thanks! Can't wait!\n. Thanks, man.\n. Hmmm, did you think to $ npm publish?\n. No problem! Thanks again.\n. ",
    "MoOx": "bower should not use package.json & don't have such pre/post scripts. So should not affect it.\n. ",
    "ketri": "I tested the demo site inluded (contain-version) on  IE8, IE9, IE10, IE11.\nIt fails on IE9, but works on all other IE versions. \nThe new modernizr version supports detection for object-fit. Would it be for example possible to use that for detection and the clearly well functioning solution for polyfill that's here..?\n. IE9:\n\n. No problem. And thank you for the project which I\u2019ll certainly will be using!\n-Petri\n\nOn 17 Dec 2014, at 13:02, Anselm Hannemann notifications@github.com wrote:\nHey, actually I included the Modernizr test for it in the codebase. Polyfill won\u2019t be applied / executed if there\u2019s native support.\nFor the other issues I\u2019ll try to replicate the errors and will get back to you. Thanks for reporting.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/anselmh/object-fit/issues/17#issuecomment-67307344.\n. Indeed the Firefox works when I use a local MAMP-server. Great stuff!\n. Oh, might have spoken too soon. Is there any way to go around the restriction?\nI'm using MAMP, Virtualhost X and Codekit, and somehow Codekit (although there is a server) gets the same errors and makes development almost impossible...\n\nSo is there any way to (at least temporarily) go around the \"operation insecure\" -error?\n. Looks good man!\n. ",
    "FremyCompany": "FWIW, I think the optimal solution is to run most of the CSSOM stuff on the CSS as part of the grunt process (or via node.js), and generate a companion js file for each css, and add only a very small client-side library (querySelectorLive / polyfillStyleInterface / ...) to handle the dynamic behavior.\nI would be glad to work on this, but I ran out of time and motivation. If you feel like it would solve your use case, we could probably team up to work on this. If you had something else in mind, I'm curious about what do you plan to do.\n. Okay, I'll try to schedule this at some point. It's not really I need help, it's more like I need some motivation to prioritize this over other stuff ^_^ I think I agree with you the solution I have now is more for dev than for production. \nBtw, you didn't reply: what's the solution you plan to use now? Do you already know?\n. ",
    "ahmadalfy": "Created pull request for this issue and two  other minor issues\nhttps://github.com/anselmh/object-fit/pull/21\nRegards\n. @anselmh You're welcomed! I wish we could find a way to resolve this https://github.com/anselmh/object-fit/issues/13\nWill take a look into it when I have time.\n. ",
    "thelucid": "Seems to be in the first line of the _matchesSelector function.\n. @anselmh It's hard to pinpoint the cause, I'm only using it with a single image but there is quite a lot of css, it seems to be struggling when matching selectors:\nError: Script terminated by timeout at:\n_matchesSelector@http://localhost:9292/assets/main.js:2486:7\nwindow.getMatchedCSSRules@http://localhost:9292/assets/main.js:2551:9\nobjectFit.getMatchedStyle@http://localhost:9292/assets/main.js:2682:15\nobjectFit.processElement@http://localhost:9292/assets/main.js:2781:14\nobjectFit.process@http://localhost:9292/assets/main.js:2763:4\nobjectFit.init@http://localhost:9292/assets/main.js:2953:4\nobjectFit.polyfill@http://localhost:9292/assets/main.js:2966:5\nThis doesn't cause the error but it also doesn't work: http://codepen.io/thelucid/pen/gbRKrJ\nIE9 cases the following error:\nSCRIPT438: Object doesn't support property or method 'matchMedia'\n. ",
    "kartikluke": "I'm seeing the same issue on Firefox v35. Using the v0.3.1 will check the v0.3.7.\n. Still seeing the error.\n. Using a localhost page. With images from S3. That may be the issue checking up on the Access header. Crashing on v34 of Firefox as well so version doesn't seem to work.\n. _matchesSelector/matcher@http://jobspire.com:3000/assets/polyfill.object-fit.js?body=1:148:1\n_matchesSelector@http://jobspire.com:3000/assets/polyfill.object-fit.js?body=1:161:10\nwindow.getMatchedCSSRules@http://jobspire.com:3000/assets/polyfill.object-fit.js?body=1:201:9\nobjectFit.getMatchedStyle@http://jobspire.com:3000/assets/polyfill.object-fit.js?body=1:332:15\nobjectFit.processElement@http://jobspire.com:3000/assets/polyfill.object-fit.js?body=1:431:14\nobjectFit.process@http://jobspire.com:3000/assets/polyfill.object-fit.js?body=1:413:4\nobjectFit.init@http://jobspire.com:3000/assets/polyfill.object-fit.js?body=1:604:4\nobjectFit.polyfill@http://jobspire.com:3000/assets/polyfill.object-fit.js?body=1:617:5\npolyfillObjectFit@http://jobspire.com:3000/assets/application.js?body=1:1043:1\njQuery.event.dispatch@http://jobspire.com:3000/assets/jquery.js?body=1:4665:15\njQuery.event.add/elemData.handle@http://jobspire.com:3000/assets/jquery.js?body=1:4334:6\ntriggerEvent@http://jobspire.com:3000/assets/turbolinks.js?body=1:334:12\nchangePage@http://jobspire.com:3000/assets/turbolinks.js?body=1:203:5\nfetchReplacement/xhr.onload@http://jobspire.com:3000/assets/turbolinks.js?body=1:107:1\n. And I've set the CORS configuration as I'm doing S3 upload and other actions on the images.\n. This is my CORS configuration in AWS: \n<CORSRule>\n        <AllowedOrigin>*</AllowedOrigin>\n        <AllowedMethod>GET</AllowedMethod>\n        <AllowedMethod>POST</AllowedMethod>\n        <AllowedMethod>PUT</AllowedMethod>\n        <MaxAgeSeconds>3000</MaxAgeSeconds>\n        <AllowedHeader>*</AllowedHeader>\n</CORSRule>\nAnd a sample image from my bucket (https://jobspiredevelopment.s3.amazonaws.com/uploads/1424025710417-y35384s6gvo-6002121c817ebce8faa41cb504d0b6a1/3magine-office-toronto-1.jpg)\n. Checked it out. Tried making some test pages the unresponsive error doesn't come but it doesn't seem to work on Firefox v35.\n. Okay seems to be working now. Was a mistake in my code. Still have an issue with unresponsive script. I think I have an idea about what's causing it. I'll test it and get back.\n. > SecurityError: The operation is insecure.\nThis is what's causing the error. There were multiple calls to the function causing it to simply crash. My Rails server isn't setting the headers for the css that's being sent. Thought it was related to the images, my bad. Will try and figure it out.\n. I'm unable to set the headers is it possible to go around this?\n. Alright. That sounds like a great workaround. Could you outline how you'd go about it? I'll give it a shot if I find the time.\nhttps://github.com/anselmh/object-fit/issues/19 How is this going? Will it fix the problem?\n. Still getting unresponsive for Firefox. I think for a large number of styles the CSS Parser starts to fail.\n. I included the CSS of my application in the pull request. It recreates the crash on just the one image in the tests. I need object fit to work on around 5 to 6 images. I'm working on shifting to using background-image and the background-size property together to recreate object-fit.\n. The CSS is close to 9000 lines. I've put the minified version in.\n. SVG isn't really an option as these are uploaded images.\nIn the end this turned out to be an extension of https://github.com/anselmh/object-fit/issues/13 but the slowness is leading to timeout.\nHow can we go about making a faster parser?\n. Could maybe use https://github.com/postcss/postcss as the parser. Claims to be fast is there any way we could integrate it.\n. That's because v36 supports object-fit natively. You don't need the\npolyfill for it.\nOn Fri, 27 Feb 2015 at 22:46 Jeff Schroeder notifications@github.com\nwrote:\n\nI was having the unresponsive script issue with FF v35. However, I just\nupgraded to v36 and I'm no longer experiencing the problem.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/anselmh/object-fit/issues/22#issuecomment-76432149.\n. Does leave cause for concern. There's a good chance there are people out there with v35 and below.\n. This is for #22 \n. I've split the test I was using into two new files. And I've fixed the issues you pointed. Ready to pull. I haven't implemented the option though.\n. Always nice to contribute. Especially when it's something I plan to use.\n. \n",
    "jbschrades": "I was having the unresponsive script issue with FF v35.  However, I just upgraded to v36 and I'm no longer experiencing the problem.\n. Bonus!  Thanks for the info @kartikluke. \n. ",
    "annevk": "You probably still want to point out the attribute. It's rather important as the fetcher indicates what type of CORS the server needs to reply with.\n. Not really. The pairing is crossorigin=\"\" with Access-Control-Allow-Origin: * and crossorigin=\"use-credentials\" with Access-Control-Allow-Origin: [origin] + Access-Control-Allow-Credentials: true. I suspect you almost never need the latter for CSS.\n. I assumed you had a reason to advice \"use-credentials\".\n. ",
    "gpbl": "If you are using webpack (it works also for AMD modules) you can use the expose-loader to set the global variable:\njs\nrequire('expose?objectFit!object-fit/dist/polyfill.object-fit.js');\n. ",
    "mjsarfatti": "Any progress on this? I cannot seem to be able to load object-fit with requireJS.\nI am willing to spend some time coding a fix for it, but my knowledge of AMD is way too basic. If you could point me into some direction it would be great.\n. ",
    "wumble": "yeah, this would be great! \n. ",
    "querkmachine": "I've uploaded a slightly stripped down version of what I'm working with here: http://greysadventures.com/objectfitexample/ \nI've tried to keep it fairly complete in case there's some aspect of my implementation or some sort of library conflict that's at fault. \nI've had the issue on all versions of IE and older Firefox. Both of them also freeze up for a substantial amount of time whilst applying the polyfill. If there's a reason for that too then it'd be great to know how to speed it up some. \n. The preload JS is just Modernizr, to my memory. (It's called \"preload\" as I bundle my scripts with Gulp, and that's the catch-all term I use for all has-to-be-in-the-head stuff.)\nRegarding \"foreign frames\", could this apply to YouTube embeds? These are injected into the DOM when they're needed, but don't exist otherwise. \n. I've quickly stripped out the code responsible for the embeds (on the page linked above), however the error is still occurring. \n. ",
    "nedbaldessin": "I was having this issue on IE 9-10-11.\nI side-stepped the issue by disabling the DOM watching all together. Dirty, but it works.\n``` js\nwindow.objectFit.listen = function(){};\nwindow.objectFit.polyfill({\n    selector: 'img[data-object-fit-contain]',\n    fittype: 'contain',\n    disableCrossDomain: 'true'\n});\n// \u2026later, after injecting new fragment in DOM:\nwindow.objectFit.process({\n    selector: '.Lightbox img[data-object-fit-contain]',\n    replacedElements: document.querySelectorAll('.Lightbox img[data-object-fit-contain]'),\n    fittype: 'contain',\n    disableCrossDomain: 'true'\n});\n```\nHope this helps.\n. ",
    "dmail": "One of our customer uses this firefox version for testing purpose.\nI've used this polyfill only on one video element  with object-fit: cover.\n. ",
    "eoctavien": "I have tried and it seems to not be working. I referenced both the css and js files. I have a video selector and I have my object fit property is set to fill, but I do not see the changes when I run it in IE11 (video letterboxes instead of filling). I am using ASP.Net web forms and my referenced files/the script are in the master page while the actual video element is in a content page if that helps at all... Perhaps I am missing a step? Any help or suggestions would be greatly appreciated. \n. Here is some trivial code to better illustrate:\n//////////////////On Master Page//////////////////////////\n!DOCTYPE html\nhtml xmlns=\"http://www.w3.org/1999/xhtml\"\nhead runat=\"server\"\ntitleWeb Project/title\nmeta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" /\nlink href=\"Content/bootstrap.css\" rel=\"stylesheet\" /\nscript src=\"Scripts/jquery-2.1.3.min.js\"``/script\nlink rel=\"stylesheet\" href=\"../dist/polyfill.object-fit.css\" /\nstyle\n        video {\n            width: 100%;\n            height: 800px;\n            object-fit: fill;\n        }\n    /style\n/head\nbody\nContent Page Placeholder\n/Content Page Placeholder\n/body\n//////////////////On Content Page//////////////////////////\ndiv style=\"height:800px; width:100%;\"\nvideo id=\"video\" autoplay=\"autoplay\" loop=\"loop\" preload=\"metadata\" poster=\"\"\nvideo\n/div\nscript src=\"../dist/polyfill.object-fit.js\"``/script\nscript\n        // Call polyfill to fit in images\n        document.addEventListener('DOMContentLoaded', function () {\n            objectFit.polyfill({\n                selector: 'video',\n                fittype: 'fill',\n                disableCrossDomain: 'true'\n            });\n        });\n    /script\n. It does not seem to work when I resize. Also, In my code, I should have wrote disableCrossDomain: 'false' instead of true. I am thinking it might just be the way I set this up. I'm not really sure, perhaps I am not referencing something correctly... Are you able to replicate the issue on IE11 at all using the code above?\n. ",
    "cosmix": "Apologies, but it did not seem like a duplicate. My bug was specifically about Spartan/Edge and a recent release thereof. The polyfill seems to work well with IE11 in our case, hence I thought I'd file the more specific bug which described a situation whereby, most certainly, the polyfill does not seem to work at the moment.\n. It seems to be working ok on IE 11 (11.0.10011.0), but not on Spartan/Edge yeah \u2013 both as found in Windows 10 Insider Preview Build 10130.\n. I think you can detect Edge by looking for the \"Edge/12.0\" at the end of the UA string.\nSorry I haven't tried images just yet --- I don't typically use Windows machines and I very infrequently use a VM for testing. I'll give it a try and let you know, however, the next time I get to use that Win10 IP VM. Given the state of Edge I expect it to have several regressions/issues that will be fixed before the final rolls out later this summer.\n. ",
    "TrySound": "closest is good for elements.matches.\n. For \"copy-lib\" you may build bundle. For package managers build just core file and maybe getMatchedCSSRules polyfill. Other polyfills will be loaded as dependencies.\n. Using closest will a little increase performance.\n. I meant cdn libs or copying directly in project folder.\n. Also add rAF to bower, please.\n. @anselmh Are you sure you need el.closest, not el.matches? closest polyfills both.\n. And rAF is not devDep\n. Closest is not devDependency too.\n. Nice! I asked Jonathan Neal to publish closest on npm.\n. @anselmh  Closest added to npm\nhttps://www.npmjs.com/package/element-closest\n. > @anselmh Are you sure you need el.closest instead of el.matches? closest polyfills both.\n. @anselmh It works. But el.closest do some more work. It checks current or finds closest parent element with this selector. Better use el.matches.\n. @anselmh Prefomance, heh))\n. ",
    "sonicpunk": "Thanks for getting back to me.  Our minified CSS is 201 KB, tested on Windows 8, IE11.  Even with using the selectors, the performance is a no good.\n. ",
    "simonerlandsen": "Hello. When an image height is set initially in css, and then changed inside of a media query later on in the css, the new height is not set on the image (or rather the image wrapper) on window resizing. Tested in IE.\nhttp://codepen.io/anon/pen/vOWpdj\n. Thanks! Tested in IE 10 and IE 11 (in IE 9 the image doesn't show, as reported on another issue).\n. ",
    "thehappycoder": "Same for me. When I run \"objectFit.polyfill\" (android phone native android browser (Mozilla/5.0 (Linux; U; Android 4.2.1; ru-ru; PAP7600DUO Build/JOP40D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30)), the image just disappears from the page.\n. ",
    "m00s": "+1\nIs anyone working on this?\n. ",
    "MadLittleMods": ":+1:\n. ",
    "guerreit": "Would love this too!\n. ",
    "stephenjwatkins": "+1\n. ",
    "mmikkel": "+1 for IE10 and IE11.\n. ",
    "ZhelinCheng": "+1. ",
    "Flavour86": "+1. ",
    "DanielRuf": "I recommend archiving this project. Other solutions have better support and it is irritating when there are multiple polyfills (come on devs, GitHub is actually for collaboration ;-) ) and you have to decide which one to use.. ",
    "Maximilianos": "sure on it :+1: \n. Ok pushed in: https://github.com/anselmh/object-fit/pull/43\nCan you bump the patch version so that the npm picks up the change, plz?\n. :tada: :smile: thanks!\n. conflicts resolved, tested again. \nBy the way is this the correct view for IE: \n\nCompared to Chrome:\n\nIs that because of the extra element in IE?\n. ",
    "julmot": "Wontfix for Edge?\n. ",
    "sgb-io": "Thanks! For the record, it could still be useful for patching IE :)\n. I have only glanced the source so please feel free to close if I'm wrong, but I think the polyfill is parsing existing styles/stylesheets and elements in an attempt to automatically find where 'object-fit' is used.\nThat strategy seems like a big overhead for the polyfill to account for whereas we could just call it into action explicitly. \n. ",
    "primozcigler": "@mediaformat thank you!\nAs @anselmh mentioned, my fallback explained in article only supports subset of what is possible to achieve with object-fit. But AFAIK the most common use case :smile: \n. ",
    "mediaformat": "\nThis provides only the basic feature of object-fit\n@anselmh True, I was thinking narrowly of my use case! Thanks for adding the note!\n\n@primozcigler Thank you sir for the clever fallback! \n. "
}