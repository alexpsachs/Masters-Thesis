{
    "getaaron": "I think a more elegant change would be:\nself.currentAppStoreVersion = results[\"results\"]?[0]?[\"version\"]? as? String\n@jarimartens10 does that resolve the issue for you?\n. @ceyhuno I also don't get a compiler error, even if I change the deployment target to 7.1.\n. I am able to reproduce the compiler error you mention on Xcode 6.0.1. Are you sure you're actually running the latest version of Xcode? You might want to try a fresh install if so.\n. Can you upload a sample project that reproduces the issue?\n. Thanks for the PR, @ceyhuno. I'm hopeful we won't need to implement something like this. Optional chaining is a key feature of Swift.\nAlso, this code changes the expected behavior. Previously, self.currentAppStoreVersion would be set to nil if the optional unwrapping or casting failed. In this code, self.currentAppStoreVersion's value would be unchanged in that case.\n. :+1:\n. I think we just need to change appID to appID!, like in iTunesURLFromString().\n. Thanks for updating, @diamondsky.\n. @ArtSabintsev I'll do it.\n. :+1: Thanks, @bonkey!\n. BTW, I looked at Carthage too, which has the same limitation. \n. I think you'd run into rotation / resizing issues with that approach.\nIf you want to present the alert controller from a different view controller (or avoid UIAlertController entirely), there's a delegate method you can implement instead. Would that work for your use case?\n. A correct solution to this problem is dependent on your app's view controller hierarchy. You could use an approach like this:\n```\nfunc sirenDidDetectNewVersionWithoutAlert(message: String) {\n    var viewController = rootViewController\nwhile viewController.presentedViewController != nil {\n    viewController = viewController.presentedViewController!\n}\n\n// present a view controller (ie, UIAlertController) from viewController.\n\n}\n```\nThis isn't totally foolproof. It doesn't take into account child view controllers, or container view controllers (like UINavigationController).\n. @dbettermann Can you describe your approach here? It might help future readers of this issue.\n. @dbettermann This looks excellent. I haven't tested it on iOS 7, but if it works there, it's certainly an improvement over what we have now. I left some minor suggestions, mostly stylistic.\nThanks for the PR.\n. I think an approach like this would be simpler:\nswift\nif 2...3 ~= oldVersion.count && oldVersion.count == newVersion.count {\n    if newVersion[0] > oldVersion[0] { // A.b[.c]\n        alertType = majorUpdateAlertType\n    } else if newVersion[1] > oldVersion[1] { // a.B[.c]\n        alertType = minorUpdateAlertType\n    } else if newVersion.count == 3 && newVersion[2] > oldVersion[2] { // a.b.C\n        alertType = patchUpdateAlertType\n    }\n}\nAlthough even this makes me want to refactor a HarpyVersion struct. :)\n. I can get to it tonight unless @liebeskind wants to do it.\n. Thanks for the PR, @liebeskind.\n. I think we should change updaterWindow to be a regular optional instead of an implicitly unwrapped optional. \n. @zmian Are you calling Siren from Objective-C code? Can you show the code that's causing the crash?\n. Wonderful feature and PR, @Automatt. I left a few stylistic suggestions; let me know what you think. CC: @ArtSabintsev \n. \ud83d\udc4d\n. I like the use of protocol extensions in lieu of optional @objc protocol methods.\nIf we merge this, we'll either need to deprecate and support sirenDidShowUpdateDialog(), or bump the major version number.\nWhy do you want this method to be passed the SirenAlertType though?\n. You can also present your own alert (or any UI you want) in sirenDidDetectNewVersionWithoutAlert(_:).\n. I can't reproduce this. Are you using something like Charles or Wireshark?\n. Thanks @jinjic!\n. Could you share some context about why you're setting the alert type multiple times? Just want to better understand the problem you're solving. . @lensbox what's your app's ID?\n. http://itunes.apple.com/lookup?bundleId=com.chamberlan.myChamberlan does not return any results. Is your app in the App Store?\n. What's the actual response you get from the iTunes API?. Looks like the iTunes API is reporting the latest version but it hasn't propagated to your App Store yet.\nWe could try adding an optional 24 hour buffer with currentVersionReleaseDate but in my experience the App Store and iTunes API are updated very close to each other. . Sounds like a possible duplicate of https://github.com/ArtSabintsev/Siren/issues/120 \u2014 the iTunes API reports a new version is available, but the user's App Store cache doesn't have it yet. (So actually the user is still on the old version.) If this is the issue, it's frustrating but usually clears up in 24 hours. . See the processVersionCheck() method. If no app is available in the store, no newer version is available, so Siren won't show an alert.\nThat said, you may want to release an update directing your users to the new app. . Can you just switch your version to the semantic version format? This will also make it easier to work with other tools like fastlane.. This relies on undocumented behavior - I suggest we stick with UIWindowLevelAlert.\n. I see that this fixes the rotation issue I thought would exist. Clever! Have you tested this code on iOS 7? Does it still work as expected?\n. Should this remove the window entirely? It's rare that it'll get used again. It might be nice to free up the memory, however minor.\n. This is clever, but why store the UIWindow on the application object at all? We can store it more simply within Siren.\n. Maybe we should use an enum with associated string values for these?\n. This code will crash if a non-String value is stored at kCFBundleNameKey. Why is the extra ( \u2026 ) as! String necessary? If we have to keep it, we can delete : String (the type will be inferred)\n. Can we delete the semicolon at the end?\n. I think guard appID != nil else { \u2026 would be clearer to read\n. I like the use of guard here too, but think guard lastVersionCheckPerformedOnDate != nil else  would be shorter and clearer\n. I don't this use of guard is stylistically correct. guard blocks guard against a problem, and they assert a successful condition is true. But in this case, you're asserting the error, which is the failure case. In other words, I'd just use if let error = error here, and if there's no error, then proceed as normal.\n. Since this is in a do\u2026catch construction, would it make sense to throw an error here instead of simply return?\n. Extra space after guard\n. Would this work without the forced downcast?\npublic lazy var appName: String = (NSBundle.mainBundle().objectForInfoDictionaryKey(kCFBundleNameKey as String) as? String) ?? \"\"\n. I like this use of enums here :+1: \n. - Not sure I like calling it \"Uri\". I think this should be uppercase, and URL, to match other variables like storeURLString\n- Instead of having two clusters of similar methods, this might be good opportunity to define a protocol, and have two different structs which can both implement performVersionCheck()\n. I think this would look cleaner with trailing closure syntax:\nlet task = session.dataTaskWithRequest(request) {\n. I think it would make more sense to guard let response = response and  only unwrap the error in the else block. This would keep the \"happy path\" code at a higher level and the error handling stuff indented.\n. This can just be catch (you don't need the let error as NSError). Then you can also drop .localizedDescription in the print statement.\n. :+1: Great use of guard. I think I'd use [AnyObject] instead of the longer Array<AnyObject>\n. Since all these error messages are identical, should we combine them into one guard statement? guard let items = \u2026, let bundle = \u2026, let metadata = \u2026, let version = \u2026 else { }\nIt would certainly make the code shorter, although it might be harder to read.\n. We could shorten this to just else if debugEnabled\n. I sort of think we should make this a non-optional NSError, and then create our own NSError describing (as best as we can figure out) what went wrong, instead of passing in nil.\n. I don't think we should consider this a failure \u2014 it's the ideal code path in most cases.\n. I guess if we want to notify in this case we either need a method like sirenDidNothingForReason(reason), or we could use something like Alamofire's generic Result type, but those both feel like overkill to me.\n. Here we should return an error that says \"no data was returned\". Then below we can do if self.debugEnabled { print(error) }.\n. :+1: \n. Same here \u2014 we can incorporate the debug text into an error\n. etc. I'll stop repeating myself :D\n. I think this logic should be encapsulated within a method\u2026 maybe an extension of Bundle? It's too complex for someone to easily read and understand. \n. Could we just set preferredStatusBarStyle on the next line instead of subclassing UIViewController?\n. ",
    "ArtSabintsev": "@getaaron Still crashes on my end. Looking into it right now as is.\n. @getaaron ah, this is on a new branch - got it. Checking it now.\n. Ya, still crashes on the new branch if you put in a fake/wrong AppID.\n. Pushed v0.1.2. Built it on top of your change, @getaaron.\n. Fixed. Branch Deleted. Thanks, @getaaron!\n. @ceyhuno Not seeing any compiler errors on my end on this line:\nself.currentAppStoreVersion = results[\"results\"]?[0]?[\"version\"]? as? String\nThe Sample App I have is compiling and working for for me. What AppID are you seeing this issue with?\n. Currently not near a computer - will check it out as soon as I get home. \nQuick question though - Did you make any changes to the Xcode project settings? I know everyone does it all the time, including myself, but maybe Rrealm has a requirement for certain compiler flags to be set that could be causing the issue.\n. Downloaded the library and I see the error now. Will dig into it. \n. Even after removing the libc++ dependency and realm, the issue persists. \n. Well this is interesting. Apparently, when I remove Siren from your app, and then reinstall it using cocoapods, the error goes away. \nCocoapods must be setting some sort of compiler flags that silence that warning. What I'm going to do now is make a new project and drag-and-drop Siren into it and see what happens.\n. Hmm, so manually dragging Siren into a new project doesn't cause the error to pop up. \nSo, to recap, I did the following:\n- Downloaded your app and saw that the error existed\n- Removed Siren from your app and reinstalled it using Cocoapods, and therefore reopened your project in an XCWorkspace instance.\n- Your app compiled without warnings/errors when having Siren installed via Cocoapods\n- Created a fresh XCode project and installed Siren manually - everything compiled.\nI'm really not sure why you're having this issue at this point in time.\nEDIT: Edited for grammar/spelling.\n. It might be worthwhile. I've been reworking part of Siren to make it safer, including modifying how/what i chain optionally. I'm using your project as one of my test cases.\n. I updated Siren to 0.2.0. The changes I implemented address now compile in your project.\nTry it out, but not through cocoapods, as I'm getting a funky error trying to push the pod. @getaaron mind taking a look?\n. Closing this issue.\n@ceyhuno feel free to respond in here with nay update you may have re: your status of getting Siren running with Realm.\n@getaaron I created this (https://github.com/ArtSabintsev/Siren/issues/5) to keep track of the CocoaPods support request.\n. Happy to hear that! Thanks for bringing it to our attention!\n. @ceyhuno I'm in agreement with @getaaron regarding optional chaining.\nHave you tried creating a new project, setting the target to 7.1 and running your App with Siren?\n. All fixed. 0.2.0 pushed to cocoapods.\n. Pushing 0.2.1 in a sec. Really minor change.\n. And it's done.\n. Hey @EzimetYusup \nI can confirm that there is a bug. I think it's due to code in 2 places. Looking into it now.\n. All fixed and pushed to cocoapods. Thanks for pointing out the issue!\n. Hey, thanks for the PR!\nQuick question, how did you get this to happen? THere's a measure in place that stops Siren from progressing to the alert if the appID isn't set.\n. Go ahead and test it out. If that fixes all the issues, feel free to submit and update the repo, etc. \n:)\n. @getaaron Will you take care of tagging/cocoapods, or do you want me to do that?\n. Thanks @getaaron!\nAlso, thank you @diamondsky for bringing the issue to oru attention. I'll add your name to the Contributors file in a short bit.\n. ok, done. Credit has been given in both the README and CONTRIBUTORS files.\n. Because when @getaaron and I wrote this, we had maybe spent the prior couple days picking up the basics of Swift :)\nThanks for this great solution. Accepting the request momentarily. \n. Thank you! We will!\n. That's interesting. Which version of Xcode are you using?\n. Oddly enough ,the sample app has it right, but the README has it wrong. Fixing it now. Thanks for your help!\n. Thanks! I'll add this to http://github.com/ArtSabintsev/Harpy as well!\n. Added it to both and added your name to Contributors.md in both repos. Thanks very much!\n. Thad exactly how I test it with newer apps. I use an existing app, and change the version of my project to a version older than the app in testing against. Does that work for you?\n. yup, you're right! Will fix it momentarily.\n. All fixed now based on the comment you left in #13. I thought I had included that piece of info, but I'm glad you got it up and running!\n. what version of Xcode are you using? \n. try removing and re-adding the pod.\n. To do that:\n- Comment out pod 'Siren' in your Podfile, \n- Run pod install\n- Uncomment pod 'Siren' \n- Run pod install again\n. What version of CocoaPods do you have? \nRun pod --version\n. Hmm, somehow I still have 0.36.1. Doubt that's the issue, but I'll try upgrading. However, you're saying the sample project doesn't work at all? Do you have Xcode 6.3 beta? If so, wonder if you can try it there. It works on both versions of Xcode for me (just tried it out).\nAlso, maybe clean the DerivedData folder\n. and restart xcode, after cleaning that folder Then clean, build, cross fingers :)\n. Just updated Cocoapods on my end and uninstalling Siren via pods in a project of mine with the 0.36.3. then will reinstall. This will help rule out fi 0.36.3 is the culprit.\n. - cd ~/Library/Developer/Xcode/DerivedData\n- rm -rf *\n. Restart xcode after doing that to flush anything else.\n. I can confirm the errors on my end. I wonder if the Cocoapods spec changed in what's needed in a .podspec file.\n. Possibly. I'm experiencing this issue in Xcode 6.3b4, so that doesn't rule out Xcode, Swift, or CocoaPods.\n. cc @getaaron - when you wake up, could you take a look? I'll look for a bit longer, but it's 3:30am here =p\n. @getaaron \nTo replicate:\n- Create a fresh project in 6.2 or 6.3b\n- Install Siren via CocoaPods (0.36.3)\n- Try call some of Siren's properties or methods, and see if the compiler cries.\n. well there goes Swift's implicit referencing. I'll play around with it for a sec.\n. here's the thing: the class is public already. Check line 91\n. Might be time for a radar! Let me ping people on twitter tonight and tomorrow and see if anyone has an idea.\n. So it's only an issue because this is an external framework? That'll explain why it works if it's imported normally. \nDo me a favor, make a new file Siren.h, and make sure it's target membership is set only to Pods-Siren\nAdd the following code in that file:\n``` swift\nimport \nFOUNDATION_EXPORT double SirenVersionNumber;\nFOUNDATION_EXPORT const unsigned char SirenVersionString[];\n```\nSee if that helps at all. Remove the public scoping keywords if you can as well during the test.\n. (I don't think that code block will do much of anything, but I realized it's missing, and I think most Swift cocoapods have a Podname.h file to avoid certain framework issues)\n. and those issues are usually with objc-swift interoperability, which this issue clearly isn't. Thinking out-loud here. Feel free to do a pull request with the added keywords, and myself and @getaaron will take a look at the issue more closely shortly before deciding what to do. \nNeed sleep now =p\n. Yup, I think you're right. Gonna ping cocoapods guys as well to get their thoughts.\n. 3:45am here. I think you're right. \nBtw, that file I asked you to create already exists (apparently). Auto-generated by cocoapods. Pods > Siren > Supported Files > Pods-Siren-umbrella.h\n. @skandragon Thanks for your help! You were right on the money with the issue and the PR. Once I got some sleep and read over the access controls docs again, everything made sense. \nI accepted your PR and gave you credit in the README and CONTRIBUTORS files.\n@neonichu thanks for confirming the problem.\n. adding it now. thanks!\n. Oversight on my part. Will do it in a moment.\n. Oh you know what, this isn't possible due to the following:\n-> Siren (0.3.6)\n    - ERROR | [iOS] Swift support uses dynamic frameworks and is therefore only supported on iOS > 8.\n. Which is why I left a comment in the README about it. I should have read what I wrote =p\n. Closing this issue - you'll have to do a manual install. Also, I suggest dropping support for iOS 7 as soon as you can, as iOS 8 is at 80% penetration.\n. No problem - best of luck!\n. I did research into this manner last time it came up (on a different project). It's an issue with a setting the Apple has set for Dynamic Libraries (dylib). By default, they only on iOS 8. After some fiddling, they can be made to run on iOS 7. Unfortunately, if you try to submit an iOS 7+ app with a dylib, the App validator rejects the binary.\nGreat SO post about it over here: http://stackoverflow.com/a/25910262/814861\n. Hey @dbettermann,\nThanks for the kind words. How about having Siren load once the first/second VC pops? In other words, put it in a VC's viewDidAppear(_:) method vs. the AppDelegate's UIApplicationDelegate methods.\n. Glad you got it working @dbettermann! Thanks, @getaaron for the responses!\n. Potentially! Show us what you've got!\n. I'll look at this in detail over the next few days and confer with @getaaron before accepting the PR.\n. Hah, this is pretty clever from the looks of it. Will DL and accept the PR tonight if everything works. Great job!\n. Looks excellent. Accepting the PR and pushing a commit over it to give you credit! Great job my man! \nNow, I need to make these changes in the ObjC repo... =p I'll give you credit there once I get to it.\n. Hi @heelstoo,\nSilly question, but is Siren.bundle in your project? If not, this may be causing that issue. Make sure both Siren.bundle and Siren.swift are in your project. If it is in your project, would you mind providing me with your appID, so I may attempt to replicate this issue?\nThanks!\n. ah, well welcome to iOS development and thank you for using this library! I'm glad you got it working!\n. Hi @liebeskind,\nPlease upgrade to Siren 0.4.0, remove the presentingViewController code, and make sure you have Siren.bundle in your project.\nThat should fix the issue :)\n. I realized I forgot to push 0.4.0 to CocoaPods. Just did it - try again :)\n. Awesome - glad it's working now. 0.4.0 deprecated the presentingViewController variable due to a change made on how the alert is being presented. \nEnjoy!\n. Agreed. We should extend it to 4 as well, as ice seen many projects use that system as well. Want to add the code and push it live on here and cocoapods, Aaron?\n. Ok np - I may have time tonight as well - depends on go fast I get to my destination right now :) make a post here if you start working in it, so no one else does double work.\nThanks!\n. Sounds go, @liebeskind! If you can make it handle from 2-4 numbers, that would be awesome.\n. This looks great! Thanks! I'll accept the PR momentarily.\n. ok, v0.4.1 is live. Changes to README and CONTRIBUTORS.md were also made.\nThanks again guys!\n. Thanks! Will look at this today!\n. Ack! That was a bug on my end! Thanks for the fix!\n. Yup, I'm working on it. It's my first Swift 2.0 project.\n. I'll put it on a different branch.\n. Not here yet. Soon. I started a new job, so I'm still getting sped up there. :)\n. Was this done using auto-conversion in Xcode 7, or did you do it by hand?\nAnd thanks!\n. ok awesome. My plan is to do the same, and then fundamentally change how a few things are done. \nI'm spending the entire day ramping up on Swift 2 (I got a ticket for it at work - woohoo!)\nTherefore, if I have time this evening, I'll start working on an official branch, and use yours for guidance. \nThanks, my friend!\n. Thanks! Much appreciated! \nI have 3 more localizations coming for it tonight, so it'd be cool if I could push multiple updates tonight!\n. Hey,\nWould you mind making a sample project delineating the problem and solution?\nI've never come across this issue.\nThanks!\n. Will look into this after the Swift 2 branch is merged.\n. Fixed in Swift 2 branch.\nThanks!\n. Good catch on both your parts. Will fix soon.\nFor now, explicitly state \nsiren.majorUpdateAlertType = .Force\nsiren.minorUpdateAlertType = .Force\nsiren.patchUpdateAlertType = .Force\n. Will add this in after the Swift 2.0 merger is taken care of.\n. Fixed in the Swift 2 branch. Closing for now.\n. More details please.\n. Fixed in the Swift 2 port, which is on a different branch. \nThanks for the report!\n. Will look into this after we merge Swift 2.0. \n. Fixed in Swift 2 branch. It's now an optional.\nThanks!\n. Also, as you'll notice, I fixed all the open issues in this port.\nI've done some basic testing (essentially everything except delegates).\n. Going to turn this into a PR instead.\n. Hi,\nSiren is no longer supporting iOS 7, as iOS 7 makes up 12% of the entire ecosystem. In 2-weeks time, this number will be even lower, due to the release of iOS 9. \n. Will look into this today - thanks for the note!\n. Also, are you testing on iOS 7, iOS 8, or iOS 9, and what version of Siren are you using? \nJust want to make sure it's in AlertView or AlertController code and Siren 0.5.0.\nEdited Post.\n. ya, OK I can confirm that code is missing outside of the declaration. I'll add it in during a break today.\n. and probably should consider writing some tests.\n. Fixed and pushed to cocoapods as 0.5.1.\nThanks for the bug report!\n. Thanks! Will look into this over lunch.\n. Can't reproduce it.\nI get the following result when I try running without being connected to the internet:\n[Siren] Error retrieving App Store data as an error was returned: The Internet connection appears to be offline.\nAre you running the latest version?\n. Still can't replicate it for some reason, even with those settings.\n. @zmian Can you provide us with a small sample project in which you can replicate the error?\nPlease use:\n- Siren 0.6.0\n- Xcode 7.0.1\nUpload it to Github and shoot a link in here.\n. Got it! Thanks for looking into it deeper.\nGood luck solving the problem!\n. It's already open :) - check the new delegate method I added in the latest release.\nSet the alert type to 'None' and one of the delegates will pass back a message. \nOn mobile, so can't tell you which one off top of my head.\nKeep me posted.\n. This will allow you to roll your own alert with a localized method.\n. Use this delegate method: https://github.com/ArtSabintsev/Siren/blob/master/Siren/Siren.swift#L17\nIt's called when you set the alertType to .None\nswift\nlet siren = Siren.sharedInstance\nsiren.delegate = self\nsiren.alertType = .None\n. The daily check should do an immediate check the first time around, I think.\nNeed to check the code, but will do it back when I'm at a computer.\n. This guarantees that a version check is performed only once: https://github.com/ArtSabintsev/Siren/blob/master/Siren/Siren.swift#L256-L263.\nEven if you have .Daily set, it will do an immediate check if a check has never been performed.\n. Will look into this after work today. Thanks for the PR!\n. Sorry, I've been a bit busy. This will have to wait a couple more days.\n. Hey - sorry, still a bit backlogged. Traveling a bit this week + in the midst of the push.\nI will tell you up front that I do have some reservations about adding this code in the main branch, but I'll save them until after I review everything.\n. hey @Automatt, and by extension, @getaaron,\nI think it'd be best if a new open source library be written for enterprise update monitoring. I'm more than happy to work on this with you. On top of that, this would give me a reason to split out the language localizations from harpy.bundle and siren.bundle, and put them into their own pod that all three libraries would depend on.\nWhat do you think? \n. I've just spent a ton of time this past week with Enterprise Apps. I can definitely see this feature, however, I stand firm with my previous statement that it should be managed in a separate repo.\nI'm closing this issue for now, but if you want, I can work on putting together a separate library with you. \n. Thanks - will look soon.\n. Whoops - I forgot. Will do it tonight after work.\n. Just pushed v0.6.1. \nThanks for your help! I'll be adding this to Harpy shortly. \n. Thanks - will add it today.\n. Sorry, this slipped my mind. Will do it tonight. It's on my to-do list :)\n. Added too both Siren and Harpy. Your name has been added to both contributors' documents as well.\nThanks, Vahan!\n. Thanks\n. Will look into it this week! \n. Haven't forgotten. Will look at it tomorrow.\n. oh wow! I read about this the other day - awesome work!\n. Ah, got it! Awesome :+1: \n. ok, doing this in the morning, for real.\nFound a nice tutorial: https://medium.com/@shenghuawu/support-carthage-for-your-swift-framework-f294c691f9ba#.jnneapgsy\n. See https://github.com/ArtSabintsev/Siren/pull/42 for the PR on it. Closing this issue in place of the PR.\n. Nice find!\n. Merged - thanks!\nAvailable now in version 0.6.4.\n. @mikemee Added Carthage support and tested it. Seems to work.\n- Add the following to your cart file to access this branch: \n```\n// This pulls the repo from Siren's carthage branch, which is the only way to add carthage support without pulling into the main branch.\ngithub \"ArtSabintsev/Siren\" \"carthage\"\n```\n- Then, run \ncarthage update\n- Finally, do the following:\nOn your application targets\u2019 \u201cGeneral\u201d settings tab, in the \u201cLinked Frameworks and Libraries\u201d section, drag and drop each framework you want to use from the Carthage/Build folder on disk.\n. Accepted the PR since it seems to work.\n. Thanks - will update now.\n. No problem - glad you found it!\n. Not a bad idea. If anything, I think it would make more sense to send everything as a package in one delegate method: \n- app store version\n- app name\n- update message\n. Thoughts on my previous comment? \n. Don't worry about updating it  - I'll do it myself tonight. I just wanted to know if it made sense for your use case. We'll ping you when it's done.\n. Alright, I'm working on this now. I will not return the app name, as that is set by Info.plist or by the developer in Siren's configuration steps. Instead, I will return the version and the message.\n. Actually, I made this a really easy fix. Gonna make a PR for myself in a moment and link it here.\n. @vicsonic Check it out: https://github.com/ArtSabintsev/Siren/pull/47\nFeel free to leave comments on that PR. Closing this one in favor of that one.\n. Thanks!\n. @getaaron I'll make the same change to Harpy soon.\n. @vicsonic It's now available via CocoaPods as 0.6.7. Thanks for the suggestion!\n. Thanks for the PR. I agree, this is important. I'll take a look at it on Saturday (really busy until then).\n. I have a different idea for how to implement this feature. Will work on it today/Sunday and make a PR.\n. So I've been thinking about this for a few days. Error information on't be useful. Instead, you'll want a bool returned. If there was no error in obtaining an update, the Bool returns true, otherwise it returns false.\nDoes that work for you?\n. Actually, the delegate method is still the best approach.\nHah, this is funny to me. I've been wracking my brain for a few days and keep fighting with how I want to deal with this scenario. I guess I'll use delegates because all the success conditions use delegates, so that makes the most sense. \nI'll make a PR for you once I'm done, as I'm also improving the code in this same update.\n. Here you go: https://github.com/ArtSabintsev/Siren/pull/49\nDoes this work for you?\n. Closing this issue in favor of #49.\n. I'll get this done over the weekend. Just been a bit busy.\n. Alright, I think it's done. Please check it out @getaaron @gasthana0\n. Part of this refactor let me to covering what i presume is a bug in NSURLComponents, or misinformation in the docs. I left a note in the code.\nhttps://openradar.appspot.com/25382891\n. Great! Have you had a chance to test it?\n. This is now live and available via all package managers.\n. Thank you!\n. Drag the sub-folder named Siren into your project. It has the framework and bundle file in there.\n. Here's a link: https://github.com/ArtSabintsev/Siren/tree/master/Siren\n. It should work. Why not use CocoaPods, Carthage, or SwiftPM? Siren supports all three.\n. @black-lotus \nIt's not really an error. In a recent update, I added more logs and the ability to handle errors via a delegate. This means that there's no new update, so no version check was performed.\nMore info in https://github.com/ArtSabintsev/Siren/pull/48 and https://github.com/ArtSabintsev/Siren/pull/49\n. Siren defaults to the US app store, so please remove the countryCode reference. \nPlease open a new issue instead of hijacking an existing closed issue.\nThank you.\nLocking this issue.. Will take a look this weekend - thanks!\n. No. We do not support this feature and we have no plans to do so.\nSorry.\n. The bundle ID can be directly pulled out from info.plist, so I could (technically) remove the publicly exposed variable all-together, no?\nAlso, nice trick with default implementations of extensions leading to optionality. \n. Seems like a pretty small edge case (IMHO). I'll take a look at this after work and cherry-pick the changes I like. \nI'm leaning towards the removal of the exposed appID all together.\n. Unfortunately, this isn't a complete solution. The appID, also known as the trackId in the JSON that is returned needs to now be extracted so that when the user launches the app in the app store, it knows which app to launch.\nI'll take care of that change soon - probably not tonight.\n. Will merge for credit and overwrite with #56 after #56 is reviewed by @irlabs \n. I haven't agreed to merge all the changes. I only like the following:\n- use the bundleID via the info.plist and deprecate the appID parameter\n- replace the @objc keyword with default protocol extensions\nI don't see a need for the addition of a new protocol method, outside of doing A/B testing and wanting to see analytics (e.g., which type of alert do users click on most).\n@irlabs can you explain your need for this?\n. Will merge for credit and overwrite with #56 after #56 is reviewed by @irlabs \n. ok cool - will get to it + remaining issues in the next 24-48 hours.\n. Pod spec updated.\n. @irlabs Updated scope to public as well.\n. Updated the README\n. Updated contributors. \nGoing to merge #54 and #55. Then will merge #56. Afterwards, I will tag it  and push to Cocoapods.\n. Merged and pushed to Cocoapods.\nUpdated release notes as well: https://github.com/ArtSabintsev/Siren/releases/tag/0.8.0\n. No, only iOS.\n. Thanks for the message. \nWhat version of Xcode are you using?\nAlso, the launch AppStore must be on the main thread because it leads to a UIApplication method that launches the AppStore app.\n. I'm still on 7.3. \nThis seems to be the fix: http://stackoverflow.com/a/33465083/814861\nWill do it soon.\n. ok fixed.\n. Thanks!\n. Please check the Sample App in this project to get an idea on how to present Siren. If you have other modals being presented on launch, hold off on checking the version until your entire launch process has completed.\n. Closed due to no response. Assuming issue is fixed.\n. @pavankataria The reason I don't do it is because it's an edge-case feature that's never been asked for in the 4-years I've been supporting Harpy and Siren. \n. I lied - we do do it :)\nhttps://github.com/ArtSabintsev/Siren/blob/master/Siren/Siren.swift#L228 (for the appName)\nWe don't change the title due to localization issues.\n. Our pleasure! Sorry for the long response time - I was on vacation.\n. On vacation, will respond soon.\nSiren uses the Bundle ID now. Is your Bundle ID the same as the one in the store for your app target that is throwing this error?\n. What's your Bundle ID and what's the current version of the app that's in the store? Also, an AppStore link would be helpful.\nThanks!\n. I see your PR. Closing this issue.\n. Yes, it's perfectly safe.\n. I deleted it for you after I grabbed a copy\n. and that's not the bundle ID, that's the URL. I need the com.myDomain.myApp - that's the bundle ID.\n. Awesome! Glad you got it working! \nIs 'sv' different from 'se'? The app has Swedish set as 'sv'.\n. whoops - I'll fix the localization stuff in a new PR in the next hour.\n. According to this document, http://www.loc.gov/standards/iso639-2/php/English_list.php, which Apple links to in their own documents, sv stands for Swedish under the ISO 639-1 standard. That's why I used sv.\nCan you show me a doc that says it's se?\n. Can you send me an app store link with that example?\n. ok cool - I'll make the change in Siren and Harpy.\n. ok\n. We used to do that - we switched for conciseness.\nAlso, why would anyone use a versioning schema like:\n15.0 -> 15.0.1\nversus\n15.0.0 -> 15.0.1?\n. ok, confirmed this works. I don't have any idea why we made this change to begin with. Thanks for your PR!\n. I did update to 0.8.1 last night :)\n. Version 0.8.1 is now available across all dependency managers.\n. You no longer have to set the App ID. Siren now uses the Bundle Identifier. I'll take a look at the README again, because I thought I removed that information: https://github.com/ArtSabintsev/Siren#important-notice-as-of-v080\n. Use a different bundle id. Check the Sample App Project file for the iTunes Connect Mobile App Bundle ID, which is used for testing purposes. Their app is in the store and at v3.2, while the sample project's version is 1.0.0.\nYou can install Siren in your project, and temporarily change the bundle id for testing purposes.\n. Hmm, I've never had to do that. What's your ATS settings look like?\n. and yes, that will probably fix the problem.\n. Hmm, you should be fine with those settings. I'm surprised it didn't work. I'll have to get back to you on that. \n. Closing the issue as it's not reproducible on our end.\n. Re-opening for feedback, but there's not much we can do on our end.\n. As there's been no feedback in about a week, I'm closing this issue.\n. I'll look into it.\n. Confirmed that this is a problem. I'm working on writing some tests to pinpoint if other languages are affected as well.\nThanks for bringing it to my attention.\n. I'll tackle this issue once I've finished writing the tests in #68.\n. I fixed the issue in here: https://github.com/ArtSabintsev/Siren/pull/68/commits/ba1fa107fd77e53fec0a6442286d794ecee7b751\nIt's currently in the Tests PR I'm working on. Will pull it in later today.\nArthur\n. Closing this issue, as I've fixed the problem in #68, which will be merged soon.\n. This PR is v0.9.0 of Siren. \nIt adds:\n- Unit tests for updating\n- Unit tests for localization\n- Fixes issues with Portuguese (Brazil), Portuguese (Portugal), Hungarian, and Italian localizations\n- Support for showing the update alert only if the app update is compatible with the version of iOS that's on the device.\nI'm going to merge and push, but feel free to check it out and leave comments.\n@getaaron @nmizoguchi @attilat85\n. No problem! Thanks for closing!\n. Even after merging this PR?\nhttps://github.com/ArtSabintsev/Siren/commit/c0e40271d3e4b3f00a3084d672704a67f1d5c84c\n. Also, sometimes this happens IF the user is trying to download the app the moment it the servers update.  Unfortunately, the server metadata update is faster than the app being propagated to the CDNs.\n. Thanks for checking that out. \nI'm a bit exhausted right now, so I can't fully process why/what is going on. I'll take a look tomorrow.\n. Siren's only tested to go from similar versioning systems:\n16 -> 17\n16.0 -> 16.1\n16.0.0. -> 16.0.1 \nI never tested it to go from 16 -> 16.0, though others have tested it to go from 16->16.1, and that's worked, so it should technically work as long as the number is different.\nIs that what you ended up doing? Going from 16 -> 16.0?\n. I am closing this issue for now, but we can continue the discussion in here at your convenience. \n. Wait, you went from 15.0.1 -> 16, not 16.0.0?\n. As a follow-up, I am simply trying to understand your problem. In the 4 years that Harpy and Siren have been around, I have never had an issue like this come out. So, no, I don't believe this issue needs to be visible, as it's a one-off case, and the problem is not apparent to me.\nNow, just so we're crystal clear, is the problem that you went from an x.y.z to an x versioning system? If so, what warranted that decision?\nAlso, I wrote a few tests this weekend, and my test shows that Siren handles that use case without issue.\nhttps://github.com/ArtSabintsev/Siren/blob/master/Sample%20App/SirenTests/SirenTests.swift#L79-L82\n. @getaaron Can you chime in here as well (in case I'm missing something)? Thanks!\n. Thanks for following up!\nGood luck, and if you continue using it, feel free to post issues and PRs!\nHave a great week!\n. Thanks! Merging then overriding with a couple more changes.\n. Thanks man. I'm going to merge your stuff after I write some tests. Should be done in the next hour.\n. Added to Harpy as well.\n. Hey - I'll get it soon enough. It's on my to-do list for the next week (just a rough port).\nIt'll be on a branch. I'll post more info when it's done.\n. Nah, I'll just do the auto-conversion later today, and see what breaks. Shouldn't be anything. O'll keep monitoring it with every release of Xcode 8 beta. Once it gets stab;e enough I'l update the source. \nLookout for it later this evening (US-EST)\n. Sure, was planning on doing that.\nDo I need to add a subspec, or will you be pointing to the branch directly via :branch => '...'\n. ok, cool. Will do it within the next hour.\n. Check PR 75. The branch is swift3. I'll update the main README with cocoapods/carthage rules for pulling that branch in just a moment.\nClosing this issue.\n. I will be making some syntactical changes shortly involving the exposing of labels for the first parameter in functions, in accordance of the new Swift design guidelines.\n. This works with Xcode 8.0b3.\n. I've merged it with Master, so it now works with the latest release (0.9.4).\n. Added support with Xcode8b4.\n. oh, jeez, 6 is out already, isn't it? I'll get to it tonight.\n. Updated for Xcode8b6 last night. \n. Merging this branch into Master! 1.0.0 here we come!\n. You mean support for the Mac App Store? This library is store-dependent and currently only works with the iOS App Store.\n. I'm not sure what it would take to get that working as I've only built a few trivial mac apps in the past couple of years. I'm sure the web request check is similar. The only part that's different is how the alerts are presented.\nIs there a library that already does this? If so, I can take a look at what they're doing.\n. ok cool - I'll look into this soon. \nThanks for the suggestion!\n. Keeping the issue open until I get a PR opened.\n. Alright, I've bene thinking about this since breakfast.\nMy current interests are in iOS dev and backend development using Swift 3. Due to that, and the precious little time I have, I don't really want to build this feature myself as I am not that proficient with the macOS APIs, nor the Mac App Store, which Apple seems to have indirectly acknowledged isn't doing well during this past WWDC (I forgot what they changed, but whatever it was made it easier for macOS developers to do things outside the Mac App Store).\nWith that in mind, I will not be doing the work for this myself, however, if this is something you would like to build, I will happily look into any PR that's submitted and help with testing at that point in time.\nThank you for understanding.\nClosing this issue, but feel free to continue the conversation here - I will definitely respond.\n. You're very welcome! I look forward to your PR in the future!\nHave a great day and thanks again for the request.\n. Sure, I'll do that in next hour.\n. Done!\nThanks!\n. Thanks! I'll look into this tonight.\n. Amazing - you even wrote the tests :)\nRunning the tests now. Will merge if it works (which I assume it does)\n. Looks good - thanks!\nI'm also going to add this to http://github.com/artsabintsev/harpy (the ObjC repo).\nWill give you credit in both repos.\nThanks!\n. It's available in Sire v0.9.4 (via CocoaPods and Carthage)\nIt's also available on http://github.com/ArtSabintsev/Harpy\nI gave you credit in both repos in their respective CONTRIBUTORS.md files.\nThanks again!\n. I'll make a separate branch and change the syntax for 2.3 in there. This will be later tonight.\nThanks for the PR.\n. Nope, there isn't, but I'll give you credit for the initiative!\n. Sorry, got stuck on a different task. I'll make the update this evening.\nArthur\n. About to push the branch - closing this PR.\n. Here you go: https://github.com/ArtSabintsev/Siren/pull/81\nCheck the README for CocoaPods/Carthage installation guides.\nThanks!\n. Thanks!\n. Closing PR since it's no longer needed. The branch will remain active for as long as needed, but will not get any more changes moving forward unless needed.. I'm assuming you figured out whatever was causing this issue as the issue was automatically closed.\n. The notification pops up if the version of your App in the App Store is newer. So, if version 1.2.0 is in the App Store, and you're working on version 1.2.1, you should not see an alert.\n(This message was edited as I had originally misread what you wrote.)\n. I can't see the fix in the binary. Which line did you change?\n. Got it - thank you! \n. Awesome! Will happily link off to you!\n. Which branch?\n- master\n- swift2.3\n- swift3\n. Alright, I'll take a look tonight when I'm back at a computer\n. I am not seeing this issue in Siren's swift2.3 branch in Xcode 8b6. The sample project compiles and runs without any issues.\n- Are you using Xcode 8b6?\n- What version of CocoaPods are you using? \n  - I'd recommend pointing to cocoapods/master (and not using 1.1.0.beta.1 if you're doing development in Xcode 8. \n- What does the line of code importing siren in your Podfile look like?\n. It will automatically grab the bundle ID for you and do everything in the background.\nThanks for following up.\nClosing the issue.\n. Swift 2.3 is compatible with Xcode 8, not 7.3.1. \n. Yes, version 0.9.5 compiles in Swift 2.2 in Xcode 7.3.1.\n. Which branch?\nWhich version of Xcode?\nIs this from the sample project or from a cocoapods/Carthage/SwiftPM/manual install?\n. 2.3 branch only works in Xcode 8, to my knowledge.\n. Use the master branch for Xcode 7\n. Closing the issue. Feel free to reopen it if you still have problems\n. I appreciate the effort, but I do not want to add support for any other method outside of the App Store at this time. It unnecessary complicates the library for a specialized case.\nThank you.\n. Oversight. Will fix in the next hour!\n. Done.\nhttps://github.com/ArtSabintsev/Siren/releases/tag/1.0.1\n. Closing this issue in favor of #90, where we will continue the conversation.\n. So, you're saying there are new official terms for certain technical words in the Latvian language, and they are listed at http://termini.lza.lv/?\n. ok - thanks. I'll update it tonight on this project and on Harpy.\n. I haven't forgotten about this stuff - I'll do it tomorrow.\n. Can you also modify the test in the testing bundle?\n. I'll do it myself right now.\n. ok, fixed the tests - it's available as version 1.0.2 in all the package managers. Will add the same fix to Harpy.\n. Sounds good.\n. @mamouneyya Are you asking to figure out if a UIAlertController is being displayed?\nMore context would be ideal. The more detail, the easier it will be for us to answer this question.. First things first,\nWhat version of your app is currently in the store, if any? \nWhat version is currently set in the info.plist?. ok, got it - thanks for that detailed explanation. This is most likely a bug in Siren and I will take a look at it now. I don't use .force often, meaning I also don't make use of Siren in applicationWillEnterForeground, which is probably why the issue is popping up. \nThanks for the info. I'll look at it now.. @royherma @mamouneyya @getaaron \nThe fix was merged and is available in Siren v1.1.3 via all dependency managers.. Haven't really tested Swift PM in a long time and no one has complained of it not working, so I assumed it just worked.\n. No problem - good luck!\n. Will look tonight - thanks for the PR.\nIn my defense, I haven't looked at the 2.3 branch in a long time (was more concerned with Swift 3).\n. So, my existing swift2.3 branch seems to compile for me.  Can you send a screenshot of the warning you get in Xcode 8 for the Swift2.3 branch?\nThanks!\n. Does Swift2.3 work in Xcode 7? I never knew that it did.\n. There is. Use v0.9.5.\npod 'Siren', '0.9.5' \nHope that helps!\nI'll be closing this PR for now.\n. My pleasure! Hope you guys move over to Swift 3 soon! :)\n. I cannot reproduce this issue.\nCan you show me the exact errors that come back for pod install for:\npod 'Siren', :git => 'https://github.com/ArtSabintsev/Siren.git', :branch => 'swift2.3'\n. It's a bug on the App Store side. If the app just gets updated on the App Store side, siren automatically knows about it. Unfortunately, it takes about 20 to 30 minutes for the app to actually be made available on the App Store side even after the JSON says it's available. This is why it may act like a false positive sometimes.\n. So is the issue that the App Store says OPEN instead of UPDATE? If so, that's an App Store bug.\n. Any update?\n. Closing this issue due to lack of communication. Feel free to comment if you have any updates.\n. Did you set the conutryCode? https://github.com/ArtSabintsev/Siren/blob/master/Siren/Siren.swift#L236\nIt needs to be set for apps that are not in the US app store.\n. Great - Happy to hear it!\n. Thanks, please do that. I don't use Carthage. I added. support a long time ago and haven't tested it since.\n. Any update, @mikemee? I'm assuming all I have to do is rename the project.\n. Closing this issue for now, as it seems to be a stylistic issue. Will re-open if/when I hear back.\n. This now available in Siren v1.0.4. Thanks!\n. Thanks! I'll add this in today!\n. This now available in Siren v1.0.4. Thanks!\n. Looks good! Will merge and may make one stylistic tweak. I'll post back here when this is available via CocoaPods (should be soon)\n. This is now available in Siren 1.1.0. Thanks for this PR!\n. Hey @kwstasna, thanks for this addition! \ud83c\uddec\ud83c\uddf7  \nUnfortunately, I can't merge the PR as is as the changelog looks huge. Why is it like that? Can you try making sure you're up to date with ArtSabintsev/Siren's master branch before opening the PR?\nThe changelog should look like this: https://github.com/ArtSabintsev/Siren/pull/98/files\n. No problem! Going to close this PR in favor of the new one.\n. add the Greek tests, and you got it!\nTests belongs here: https://github.com/ArtSabintsev/Siren/blob/master/Sample%20App/SirenTests/SirenTests.swift\n. thanks - I'll wait for CI to finish before accepting the PR. Much appreciated!\n. This is now available in Siren 1.1.0. Thanks for this PR!\n. (Edited)\nHey!\nYou can't test Siren with a new app on a device, only on the sim. If it works on the sim with the iTunes Connect ID, then it'll work on the device.\n. Seems to be a merge conflict with the Greek translation, as I added a Greek translation last week. . Also, can you add the appropriate tests for the Finnish and Indonesian languages?. Everything looks good. I'll merge this in soon.. Now available via CocoaPods as v1.1.1.\nThanks again, @ChrisixFlash! Your name was also added to the CONTRIBUTORS.md file. Me too!. The library is also in Swift 3.\nAre you installing with this command: pod 'Siren'\nIf so, it should just work.. This means everything is successful :)\nPod installation complete! There is 1 dependency from the Podfile and 1 total\npod installed.\nJust open tryme.xcworkspace instead of tryme.xcproj from here on out.. Thanks for this PR. I won't have a chance to really test it out for another 7-10 days because of other obligations I have, plus my limited experience with mac dev.. Host the same app yourself and send me a link in this PR. It'll be enough for me to perform the test. As for tests, no news ones are needed, as I only test localization and version upgrade code paths.\nI'll add a Sample App later, after playing with yours.. Sorry for the delay. Will be looking at this soon.. I's been about 3 months since we spoke on this subject. Since then, not one person has asked for this feature, and since then, the Mac App Store has more-or-less ceased functioning for me. I'm making the executive decision that I will not be supporting the Mac App Store as I just don't want to deal with it. \nThank you for your effort, but I will not be adding this feature.. You're on fire! Thank you! Will add this in tonight/tomorrow.. Sorry for the delay. Will be merging this on Thursday, in Siren, and in Harpy. Thanks! Will do this tonight/tomorrow.. Sorry for the delay. Will be merging this on Thursday, in Siren, and in Harpy. It will not. No plans for this support either.. It\u2019s not possible, which is why I can\u2019t do it.\nSent with GitHawk. Nice catch - thank you!. I just checked and it works fine in Xcode 8.2.\nClosing this issue, but feel free to respond with more information.. Hey, it is intended behavior.\nWe have X.Y.Z, where a check is performed at each digit. \nIf Y = 4 in one version, and Y = 31 in another version, then 31 > 4, which is why you're seeing the behavior that you're seeing. To fix this issue, please us 2.32, or greater. In your case, 2.40.\nIdeally, you should switch to a three version system; 2.4.0. Siren can handle going from 2.31 -> 2.4.0.\nClosing this issue as this is intended behavior. Feel free to comment, and I will respond.. I cannot reproduce this issue in the Sample App. I added:\nswift\nsiren.appName = \"Test\"\nand it compiled without issue in the Swift 3 master branch in Xcode 8.2.\nBased on the error log, it looks like the issue is in Production.AppDelegate.checkForUpdates, which is one of your functions. You may be calling Siren in the wrong location inside of AppDelegate for the flow that you have.. Closing this issue, but feel free to respond, and I will follow up as well (if needed).. @manishpathak99 The latest version of Siren has been tested with Xcode 8.3.3. If you want a version of Siren that works with older version of Xcode, or older version of Swift, try the swift2.3 branch.\nI do not add any additional support of the library for older versions of Xcode of Swift outside of what's already in place.. @christoph-peters Glad to figured it out.\nThere are so many options, that I only listed the most common ones, while listing the other ones in the same project, and calling it out in the first line of the SETUP section:\nhttps://github.com/ArtSabintsev/Siren#setup. Hey again,\nIn this case, the library is functioning as intended. \nThe goal of the library is to provide the user with a good experience. Therefore, if the user sees an update for a specific version, let's call it 1.0.1, and they decide to skip that version, the library respects that decision and will never ever show them an update for 1.0.1 again. \nYour case is unique because you dynamically change the alertType, after presentation, for a specific alertType. I can see the merit of you doing this because you may want to force people to upgrade if they are way out of date or if a nasty bug is discovered. \nWith all of that in mind, I believe that your scenario is too situational. I am in the business of building and supporting software with simple interfaces that solve problems for 90% of common situations. Due to this philosophy, I am going to politely decline this request.\nOn that note, I do have a design suggestion for you. Instead of prompting users to update right away, add a flag to your server-side configuration file that defaults to false for the presentation of a Siren alert: shouldPresentSirenAlert = false. Afterwards, wait a week or two before changing the flag to true, and in the same file pass in the a value for alertType as well. Therefore, you give yourself enough time to get decent user adoption. This then allows you to remotely control when users' are presented with a Siren alert and the type of alert they see.\nThat would be my suggestion based on personal experience of doing something similar.\nClosing this issue as I am against adding this into Siren, but feel free to comment back, and I will happily respond and continue the discussion.\ncc @getaaron (for any input you may have). Sounds good! Best of luck with the implementation!. @zongmumask Thank you for doing this!\nWould you be willing to update the README whenever I make big changes to the English README?. Sounds good. I will do that!\nMake sure to give yourself credit for the translation at the bottom of the README, and I will merge it in afterwards\nThank you!.. Sounds good! Merging it in now.. Also, is your app currently available in the US App Store?. Alright, for Siren to work you need to use the bundleID for an app that's in the store. If the app isn't in the store, it'll throw back errors, like the one you saw.\nTo get around that, change the bundleID to that of the one in the sample project in this repository and try again. It should work.\nNext, will your application be in the US App Store? If it won't be, there's another step you have to follow (look in the AppDelegate file in the sample project)\n. Closing this issue as there's no update. Feel free to re-open it if you have further questions.. What Region/Country is your app being released in? What's your app's bundleID?. Ok, did you set the country code to India?. And is your app live in the store?. Everything works now?. Great! Thanks for the update!. Hey - thanks for doing this!\nLooks like the Carthage image is no longer loading. Not sure if it's the markdown syntax you used or the actual image provider.. Thant link works, but it doesn't in the PR. It's fine. I'll merge and fix afterwards after playing around with local caches.\nThanks again!. Closing this issue in favor of the response given in #120.. @gbertb I would not recommend using .Force for new app releases, as the JSON has a tendency to be updated before the app gets propagated to the App Store CDN.\nThe .Force option is in there for those people who wrap Siren around some logic using a configuration file on the backend. They tend to change a flag on the server that makes Siren launch in .Force mode for those with out of date applications, and they tend to do it many days if not weeks after a new version goes live (to avoid the situation you're currently seeing).\nThis is more of an Apple problem than  Siren problem, and has been a PITA since mid 2016. Nothing we can do about it.\nClosing the issue, but feel free to follow up to this issue.. That's a coincidence. It might have been available in the app store the moment or two after he deleted the app and tried again. Like @getaaron and I have said, there are propagation issues with the App Store these days.. Could you please open a ticket, since your problem is different?\nThank you.. Hey - just wanted to let you know that this issue has been fixed as of v2.0.0: https://github.com/ArtSabintsev/Siren/releases/tag/2.0.0. What version of Siren are you using? . Ah, ok. There's a fix in the Swift 3 branch with respect to URLSession caching that isn't in the Swift 2.3 branch. Would you mind implementing and testing the fix and opening a PR against the swift2.3 branch?\nHere's the fix in the swift 3 branch: https://github.com/ArtSabintsev/Siren/blob/master/Siren/Siren.swift#L260\n. No, no other fix I can think of. Thanks.. Thanks!. @rmvz3 Glad you figured it out@\n@bre7 Thanks for assisting and for making the  issue template PR. That's been on my backlog for a long time. Will review it soon.. Will get to this soon. Thanks!. What version of Siren are you using?. Hmm, do you have a sample project you can send me? I don't use carthage myself, but I'm happy to help debug this issue.. Working on it right now. Never seen this issue before.. This is interesting. Apparently, Carthage has issues dealing with lazy variables.\n\nhttps://github.com/xmartlabs/XLPagerTabStrip/issues/227#issuecomment-250235627\nhttps://github.com/xmartlabs/Eureka/issues/693#issuecomment-252432122\n\nAsking the community for help through other channels.. Thanks, @calebd!. Closing this issue, but feel free to respond, @yasuralian.. Can you make a new issue in Github, and link to this one? Thank you!. Definitely a dupe. I need to bring in this PR soon (https://github.com/ArtSabintsev/Siren/pull/124) to avoid this issue.. @need2edit What people usually do to get around this issue is they have Siren be driven by a server-side configuration file that enables/disables Siren remotely. \nObviously, this isn't ideal, but this is the downside of the Apple's APIs updating faster than the apps getting propagated to the CDNs.\nClosing this issue, but feel free to respond.. Hey - just wanted to let you know that this issue has been fixed as of v2.0.0: https://github.com/ArtSabintsev/Siren/releases/tag/2.0.0. Current version is 3.2.0. This issue is indeed fixed.. No problem! Happy to hear you're using the library and it's working well for you!. Please open a new issue, and provide your bundle ID. \nGoing to lock this issue to avoid pinging people who no longer have this issue.. They are currently being used for testing with Siren's testing suite: https://github.com/ArtSabintsev/Siren/blob/master/SirenExample/SirenExampleTests/SirenTests.swift. Yes, they allow it. I've used it in many applications, and it's never seen until after the audit.. Hey @dylanbromby!\nOn occasion, the iTunes JSON updates before the app propagates to the AppStore CDN. Typically, it's less than 6 hours.\nCan you provide me with your bundleID and the AppStore link? If you don't feel comfortable posting that information here, feel free to DM me on Twitter (@ArtSabintsev). My DMs are open.\nAlso, is your app available in the US App Store?. As we discussed on a different channel, the issue is with Apple's unstable JSON API. I will address this in the README and offer solutions.\nThanks!. Updated the README per our conversation: https://github.com/ArtSabintsev/Siren#words-of-caution. Hey - just wanted to let you know that this issue has been fixed as of v2.0.0: https://github.com/ArtSabintsev/Siren/releases/tag/2.0.0. I am going to fix this very soon. If you look at the other Issues that've come about on this repo, you'll see that it's a problem on Apple's side.\nAlso, https://github.com/ArtSabintsev/Siren#words-of-caution. I will have a fix for this by Sunday. I already know how I want to do it, but I need some time to implement it.\n. Alright, the quick fix is to set showAlertAfterCurrentVersionHasBeenReleasedForDays to 1.\nI'm going to push out version 2.0.0 of the app where it does this automatically: https://github.com/ArtSabintsev/Siren/pull/136. Thanks - hope it addresses the issue for you both!. My pleasure!. Thanks for the post.\nA couple questions:\n\nWhat version of Carthage are you using?\nIs it the latest version? \nWhy are you not using Xcode 8.3.x?\n. Glad it works now!. Yes, you should be able to use your own dialog if you use this delegate method:\n\nsirenDidDetectNewVersionWithoutAlert\nHere's some more info here:\nhttps://github.com/ArtSabintsev/Siren#prompting-for-updates-without-alerts\n. Thanks so much!. Thanks! Can you also update the tests?. That explains why the tests passed. I didn't realize you only changed one line, which is the one line I don't test.\nDon't worry about adding the test for it. I'll merge this in soon and cut a new release in both this project and Harpy.. Hey!\nCan you share some sample code of what how Siren is setup in your project? I have a feeling you're using some option other than .force but also have it in the didBecomeActive method in your AppDelegate.\nThanks!. Get rid of this line\nfunc applicationWillEnterForeground(_ application: UIApplication) {\n        Siren.shared.checkVersion(checkType: .immediately)\n    }\nand you should be fine.\nClosing the issue, but feel free to respond.. I need some more information.\nWhat's the bundle identifier for your app?. Everything seems to work fine for me on my device when I use your bundle ID for the Streetholder app.\nThe current version of your app in the store is 1.3.1.\nWhen I change the version of the app to 1.3 and build to the device, I DO get the alert.\nWhen I change the version of the app to 1.3.1 and build to the device, I DO NOT get the alert.\nWhen I change the version of the app to 1.4.0 and build to the device, I DO NOT get the alert.\nThis is the expected behavior.. I used the code in the sample app, and it worked as is. \nI just replaced the bundle ID with yours and the countryCode with yours. \nCan you try doing that as well? Does the problem still persist in the sample app?\n. How did that happen? Does a PR need to be made to fix this issue for others?. My pleasure. Thanks for following up!. @talkabhishek \nThanks for the message. You can create and customize your own alert using the delegate method: \nswift\nfunc sirenDidDetectNewVersionWithoutAlert(message: String)\nThe reason I don't allow for customization is due to localization. We have those specific phrases localized for multiple languages, and it seems to be the most innocent/standard way of communicating those messages.\nHope this helps.\nArthur\n(Closing this issue, but feel free to follow-up).. Would making launchAppStore() a public method make it easier?. sure, can you fork the repo, and try it out with that change. If it satisfies your needs, I'll make the change and push it out.. Try it out and see if that works for you.. Oh ya, I forgot about that change.\nYes, overriding any of the strings would disrupt the localization logic I have. Is there any reason the existing solution with the existing test is not good enough, esecpailly with all the benefits of localization that you get?.  Well, what I would do in your position is just fork   this repository, and make the changes that you need specifically for your project. If you just change the text of the alert, nothing should really break.\n. Thanks! Will check and merge later today. Will put it into Harpy as well.. Can you also add the appropriate tests? Should look like this: https://github.com/ArtSabintsev/Siren/blob/master/SirenExample/SirenExampleTests/SirenTests.swift#L243-L258. I have time now, so I'll merge then write the tests. Thanks again for this addition!. Hey @MojtabaHs!\nThanks for both PRs. I'll be accepting the Persian Localization PR, but not this one, as you've made some changes I am holding off on until Swift 4 is more established. Also, not everything you deprecated needs to be changed or deprecated/renamed, as they are test helper methods in some cases.I try not to do major version releases too often, and the deprecations require a major version release for some of those public API syntactical changes.\nI will make the appropriate name changes to follow the Swift 3 guidelines changes later this summer.. In your example, the Installed Version > App Store Version. \nIn this case, isAppStoreVersionNewer should return false, which translates to Not OrderedAscending in your example.\nIt works as expected.\nAm I missing something here?\nClosing this issue, but feel free to continue the conversation.. No problem!\nYou can have siren prompt earlier if you change the showAlertAfterCurrentVersionHasBeenReleasedForDays value to 0. It'll prompt instantly.. Hi,\nWhat version of Siren are you using?. Also, can you copy/paste a snippet of your code so I can see how everything is setup?. Closing due to lack of response. Feel free to reopen it.. I deleted a few weeks because I didn't think anyone was still using it, since there was such a huge push to migrate to Swift 3. \nI've restored the branch just now for you. Try now.\n. Sounds good!. Nice catch. Mind making the same fix here? https://github.com/ArtSabintsev/Harpy/blob/master/Harpy/Harpy.m#L461\nMerging this in and will cut a new build in a moment.. Now available in v2.0.6.\nThanks!. Updated Harpy as well.\nOf course! Thanks for finding this bug!  Enjoy!. You can't do that and I have no plans to add that feature. 1 day is a very safe bet from experience, since propagation of the binary to the App Store CDNs variable. Trust me on this, as I've been maintaining this library and the Obj-C counterpart for almost 5 years, and this delay is add d from experience.\nFeel free to fork the library and add the feature for your own use.\nClosing this issue, but feel free to respond and I'll follow up.. I'll take a look later today Thanks.. I can't reproduce this issue, which makes me think that this may be an issue in your app, and not the Siren pod.\nHere's what I did to try to reproduce this issue. \nThe following error, or one similar to it, did not appear anywhere in the logs.\nAttempting to load the view of a view controller while it is deallocating is not allowed and may result in undefined behavior (<UIAlertController: 0x14f26ca10>) \nI set alertType to .none in the sample project's AppDelegate file and commented out the other *alertType settings afterwards so they don't override the .none:\n```swift\n        // Optional - Defaults to .Option\n        siren.alertType = .none\n    // Optional - Can set differentiated Alerts for Major, Minor, Patch, and Revision Updates (Must be called AFTER siren.alertType, if you are using siren.alertType)\n    // siren.majorUpdateAlertType = .option\n    // siren.minorUpdateAlertType = .option\n    // siren.patchUpdateAlertType = .option\n    // siren.revisionUpdateAlertType = .option\n\n```\nThen, I logged the results:\nsirenDidFailVersionCheck(error:) Error Domain=Siren Error Domain Code=1001 \"Not checking the version, because it already checked recently.\" UserInfo={NSLocalizedDescription=Not checking the version, because it already checked recently.}\n[Siren] Not checking the version, because it already checked recently.\n[Siren] JSON results: [\"results\": <__NSSingleObjectArrayI 0x618000006230>(\n{\n    advisories =     (\n    );\n    appletvScreenshotUrls =     (\n    );\n    artistId = 284417353;\n    artistName = Apple;\n    artistViewUrl = \"https://itunes.apple.com/us/developer/apple/id284417353?mt=12&uo=4\";\n    artworkUrl100 = \"http://is1.mzstatic.com/image/thumb/Purple62/v4/7e/f9/58/7ef95817-2a2f-3b1a-f302-5b5a7cbd8ac2/source/100x100bb.jpg\";\n    artworkUrl512 = \"http://is1.mzstatic.com/image/thumb/Purple62/v4/7e/f9/58/7ef95817-2a2f-3b1a-f302-5b5a7cbd8ac2/source/512x512bb.jpg\";\n    artworkUrl60 = \"http://is1.mzstatic.com/image/thumb/Purple62/v4/7e/f9/58/7ef95817-2a2f-3b1a-f302-5b5a7cbd8ac2/source/60x60bb.jpg\";\n    averageUserRating = \"2.5\";\n    averageUserRatingForCurrentVersion = 2;\n    bundleId = \"com.apple.itunesconnect.mobile\";\n    contentAdvisoryRating = \"4+\";\n    currency = USD;\n    currentVersionReleaseDate = \"2016-10-31T18:14:17Z\";\n    description = \"iTunes Connect allows providers to access the apps, music, movies, TV shows, and books they have made available for download from the App Store, iTunes Store, and iBooks Store. Providers can also use iTunes Connect to check the latest trends from their iPhone, iPad, and iPod touch.\";\n    features =     (\n        iosUniversal\n    );\n    fileSizeBytes = 8176640;\n    formattedPrice = Free;\n    genreIds =     (\n        6000,\n        6015\n    );\n    genres =     (\n        Business,\n        Finance\n    );\n    ipadScreenshotUrls =     (\n        \"http://a1.mzstatic.com/us/r30/Purple62/v4/3d/63/92/3d6392aa-9fec-e9c5-570f-3c583453f14a/sc1024x768.jpeg\",\n        \"http://a2.mzstatic.com/us/r30/Purple71/v4/00/67/7d/00677d36-6e6f-c290-f31e-7ed059336e5b/sc1024x768.jpeg\",\n        \"http://a1.mzstatic.com/us/r30/Purple71/v4/f4/74/69/f4746960-46be-6373-d82b-8bd978ede85c/sc1024x768.jpeg\",\n        \"http://a4.mzstatic.com/us/r30/Purple71/v4/f8/7f/fb/f87ffb02-cb47-42ea-d4ae-d674c407e179/sc1024x768.jpeg\",\n        \"http://a5.mzstatic.com/us/r30/Purple71/v4/a5/8e/da/a58edaec-1deb-1912-45cc-ae322d589fda/sc1024x768.jpeg\"\n    );\n    isGameCenterEnabled = 0;\n    isVppDeviceBasedLicensingEnabled = 1;\n    kind = software;\n    languageCodesISO2A =     (\n        EN\n    );\n    minimumOsVersion = \"9.0\";\n    price = 0;\n    primaryGenreId = 6000;\n    primaryGenreName = Business;\n    releaseDate = \"2010-06-10T15:19:00Z\";\n    releaseNotes = \"- Addresses a problem where iTunes Connect may unexpectedly quit when tapping on an app in Recent Activity.\\n- Resolves an issue where the app status colors in Recent Activity may not update as expected.\";\n    screenshotUrls =     (\n        \"http://a5.mzstatic.com/us/r30/Purple71/v4/56/28/87/56288766-ebbc-2573-e79b-07ac96265a2e/screen696x696.jpeg\",\n        \"http://a2.mzstatic.com/us/r30/Purple62/v4/f6/6e/a5/f66ea5eb-d10b-37ed-c6b9-2df3bb5c21c3/screen696x696.jpeg\",\n        \"http://a3.mzstatic.com/us/r30/Purple62/v4/eb/c6/21/ebc621d5-6a28-4a17-422b-21e648c9f591/screen696x696.jpeg\",\n        \"http://a3.mzstatic.com/us/r30/Purple62/v4/f1/3e/33/f13e33c7-6309-a738-1344-001f003dd9ee/screen696x696.jpeg\",\n        \"http://a1.mzstatic.com/us/r30/Purple62/v4/1b/d6/dd/1bd6dd5e-7fb6-f892-c73d-dbba7bb6c5c8/screen696x696.jpeg\"\n    );\n    sellerName = \"Apple Inc.\";\n    sellerUrl = \"https://itunesconnect.apple.com\";\n    supportedDevices =     (\n        \"iPad2Wifi-iPad2Wifi\",\n        \"iPad23G-iPad23G\",\n        \"iPhone4S-iPhone4S\",\n        \"iPadThirdGen-iPadThirdGen\",\n        \"iPadThirdGen4G-iPadThirdGen4G\",\n        \"iPhone5-iPhone5\",\n        \"iPodTouchFifthGen-iPodTouchFifthGen\",\n        \"iPadFourthGen-iPadFourthGen\",\n        \"iPadFourthGen4G-iPadFourthGen4G\",\n        \"iPadMini-iPadMini\",\n        \"iPadMini4G-iPadMini4G\",\n        \"iPhone5c-iPhone5c\",\n        \"iPhone5s-iPhone5s\",\n        \"iPadAir-iPadAir\",\n        \"iPadAirCellular-iPadAirCellular\",\n        \"iPadMiniRetina-iPadMiniRetina\",\n        \"iPadMiniRetinaCellular-iPadMiniRetinaCellular\",\n        \"iPhone6-iPhone6\",\n        \"iPhone6Plus-iPhone6Plus\",\n        \"iPadAir2-iPadAir2\",\n        \"iPadAir2Cellular-iPadAir2Cellular\",\n        \"iPadMini3-iPadMini3\",\n        \"iPadMini3Cellular-iPadMini3Cellular\",\n        \"iPodTouchSixthGen-iPodTouchSixthGen\",\n        \"iPhone6s-iPhone6s\",\n        \"iPhone6sPlus-iPhone6sPlus\",\n        \"iPadMini4-iPadMini4\",\n        \"iPadMini4Cellular-iPadMini4Cellular\",\n        \"iPadPro-iPadPro\",\n        \"iPadProCellular-iPadProCellular\",\n        \"iPadPro97-iPadPro97\",\n        \"iPadPro97Cellular-iPadPro97Cellular\",\n        \"iPhoneSE-iPhoneSE\",\n        \"iPhone7-iPhone7\",\n        \"iPhone7Plus-iPhone7Plus\",\n        \"iPad611-iPad611\",\n        \"iPad612-iPad612\",\n        \"iPad71-iPad71\",\n        \"iPad72-iPad72\",\n        \"iPad73-iPad73\",\n        \"iPad74-iPad74\"\n    );\n    trackCensoredName = \"iTunes Connect\";\n    trackContentRating = \"4+\";\n    trackId = 376771144;\n    trackName = \"iTunes Connect\";\n    trackViewUrl = \"https://itunes.apple.com/us/app/itunes-connect/id376771144?mt=8&uo=4\";\n    userRatingCount = 1698;\n    userRatingCountForCurrentVersion = 137;\n    version = \"3.2.3\";\n    wrapperType = software;\n}\n)\n, \"resultCount\": 1]\nsirenDidDetectNewVersionWithoutAlert(message:) A new version of SirenExample is available. Please update to version 3.2.3 now.. iOS 9 is 115 of the global marketshare (https://developer.apple.com/support/app-store/). Not even going to worry about it. \nClosing the issue.. I used to have that open, however, the bundleID gets you the same JSON for free without an extra line of configuration. Why not use the bundleID?. Closing this issue due to lack of follow-up. Feel free to re-open if you need further assistance.. What's your bundleID?. What country is your app released in? There's an error with that bundleID for the US App Store? Did you set the Country Code using countryCode if your app is released outside the US App Store?. The App Store JSON only returns v1.0, which is what you have seen as well.  \nWhen did you release v1.2?\nThis is out of my control as the JSON is produced by Apple.. hmm, very odd. Can you send me the link to the App Store URL? I'll look into this more tomorrow.. That is really odd, but I'm glad it works!. Ah, that happens because you have enabled the delegate, but have not declared that method in your implementation. \nI'm assuming you need the delegate, just not that delegate method, right?\nI may need to remove those assertionFailures in the SirenDelegate class. Let me think on it.. Alright, so I need to remove the default implementation of each function which were only there for the assertionFailures. This was a short-sighted implementation on my end. \nI'll do that later today and push a new version. Sorry for the troubles!. I'll be fixing this on Saturday. Haven't had a chance today.. Fixing it as we speak.. Fixed and available via all package managers as v2.0.7: https://github.com/ArtSabintsev/Siren/releases/tag/2.0.7. Seems that I need to expose this method. It's currently marked as private in a private extension.\n```swift\n    func launchAppStore() {\n        guard let appID = appID,\n            let iTunesURL = URL(string: \"https://itunes.apple.com/app/id(appID)\") else {\n            return\n        }\n    DispatchQueue.main.async {\n        UIApplication.shared.openURL(iTunesURL)\n    }\n}\n\n```. Yup!\nI'll do it in the #157 PR.. ok, done: https://github.com/ArtSabintsev/Siren/pull/157/commits/c5daa9d1ca6f888d6e2f143eb35bb7ba5da2334c\nWaiting for CI to pass. Afterwards, I'll merge it to master and release a new build. 10 mins max.. Fixed and available via all package managers as v2.0.7: https://github.com/ArtSabintsev/Siren/releases/tag/2.0.7. Also fixes #156 now.. Closing as it's broken.. Mind making the same change to Harpy?. Thanks! Pushed out v2.0.8 with your changes! Thanks again!. Great - thank you. Just having the CI run on Harpy now before merging.. It's fixed on master right now, which also contains the Swift 4 version of Siren.. can you open a PR with the changes? I'll get it merged in an hour or less.\nThanks!. Thanks. Will look after lunch. Also Closes #161. Thanks. Will cut a new build in a few moments: 3.0.1. Alright, this has been pushed to Cocoapods.. Please feel free to make a PR with your vision on how this would work in the current code base. I can consider it from there.\nSent with GitHawk. Closing this issue due to lack of follow up. . Hi,\nThanks for your message. The Android counterpart was created in the spirit of this library, but we have no influence over its development.\nAs for remote-configuration, the way I've done and seen it done is as follows:\n- Store a JSON file on the web with some parameters (sirenEnabled, minimumVersionToPrompt, typeOfPrompt, etc.). Then, before calling Siren.shared.checkVersion(), download the remote data from the web, parse it, and check to see if Siren is enabled or not or if any other values will hamper siren from running.\nThat's the best approach, as it's not opinionated, and allows users to define their own JSON files and logic before executing Siren.\nClosing this issue, but feel free to follow up!. The master branch is using Swift 4. Please read here for installation instructions for different versions of Swift: https://github.com/ArtSabintsev/Siren#installation-instructions. Not related. If you're using Objective-C, checkout the Objective-C library: https://github.com/ArtSabintsev/Harpy. You have set one of your classes as SirenDelegate. However, you did not implement one of the methods that is called, which is fine, if you do not need that method. \nYou can ignore the warning if you don't need it.\nTo get rid of the second message, delete the app of you device, and try again.. Would extending the function's signature to provide the specific version information be a fair solution?\nsirenDidDetectNewVersionWithoutAlert(version: String, message: String). can you open a  PR with the addition you want - we can take it from there. Feel free to close this issue once a PR is up if you go down that route.. Sounds good to me. Keep me posted. I'll keep the issue open for a couple weeks. . Closing this issue in favor of your PR #171.. It takes about 24 hours for the App Store JSON to show the correct version, hence the default setting of 1. Give it time, and it should work.. you're welcome!. There isn't, since a custom backend would need to be written. There's no way to guarantee that each company creating a backend would follow a spec, even if I defined it here. To avoid the headache, Siren does not offer this capability.\nHowever, Siren is Open Source, so you're welcome to swap out the URL that's used for your own, and then make sure you provide, at a bare minimum, a JSON payload that provides the values that are defined here: https://github.com/ArtSabintsev/Siren/blob/master/Sources/SirenLookupModel.swift#L22-L25. Left a couple comments. You'll also want to clear the updateType status somewhere in the  checkVersion method, before doing any checking, since Siren is a Singleton.. Thanks - merging this in. Will cut a release shortly.. https://github.com/ArtSabintsev/Siren/releases/tag/3.1.0\nIt's live!\nThanks!. Siren is built to handle A.B.C.D versioning. It cannot handle A.B (C) properly. See the About section for this info: https://github.com/ArtSabintsev/Siren#about\nDid you release a version to the app store that is listed as \"1.4 (18)\". If so, that's a little awkward. Do you not make use of the build number?\nWhat I always do is use 1.4 for the version number and 18 for the build number, or in your case, if you don't want to do that, then simply do 1.4.18 if you don't monotonically increase builds irrespective of versions.\n. ok, no problem. Thanks for following up!. You can use a build number, but the version key should return just the version.\nIn your case, the version should be 1.0.1 in the Xcode project settings and the build number should be 3. The Version number in the Project settings should not be 1.0.1 (3).\nSend me a screenshot like the one above if that doesn't make sense and I can see what you're doing wrong. Also, feel free to send me your app id so I can test it myself when I get a chance.. Thanks - I'll test it out later this evening.\nIs you app available in the US, or are you setting the country code to something else?. \nIs the version of your app in the store 1.0.1 or 1.01? Seems like the latter? Still seems to work when I test with version 1.0.0 build 1.. Hey! No problem! Glad you figured it out! I think it's no semantic versioning that's the issue, but how Siren interprets 1.01. I think it just ignores the zero. Anyway, 1.2 > 1.01, so Siren should work without any issues.\nIn the future, feel free to make a new PR (on any open source repo) and reference one that's similar, especially if it's already closed. This allows us not to spam the previous posters on the issue.. Good catch! Must have missed it in some refactor in the past. I'll take a look and remedy this issue as soon as I can.\nThanks!. Fixed and released as v3.1.1: https://github.com/ArtSabintsev/Siren/releases/tag/3.1.1\nThanks for catching it!. Good catch. Will make it public now and release a new version. Done! https://github.com/ArtSabintsev/Siren/releases/tag/3.1.2. Thanks! I'll merge it in and cut a release later today.. Released as 3.1.4: https://github.com/ArtSabintsev/Siren/releases/tag/3.1.4. Thanks! Will cut a build in a moment.. This is now live: https://github.com/ArtSabintsev/Siren/releases/tag/3.1.5. You wrote your issue in the title but kept the issue template in the description box. \nPlease update the issue in the description box by removing the generic text per the instructions:\nPlease delete this text before submitting a new issue.\nand typing in a detailed bug report with examples and sample code (if possible).\nThanks. This has nothing to do with Siren. This issue is with CDAlertView.\nhttps://github.com/candostdagdeviren/CDAlertView\nClosing this issue.\n. No problem! Good luck!. Hey!\nThanks for the PR and the work!\nThis idea isn't bad, however, I'm not sure if I want to add it in for a few different reasons.\n\nNot all release notes are short\nRelease notes should be presented in a custom view (not an alert)\nHowever, I do not know if I want to define what that UI should look like or force that amongst users.\nOptionally, a delegate method will be needed for those who want to define custom UI.\nThis would allow users to present a banner or an icon allowing the suers to see release notes only if they want to (instead of prompting them right away, which is really bad UX).\n\nOverall, it's a good idea, however, I don't know if it's out of scope for this library. It's something I have to think about it.. Thanks for the screenshot. \nThat doesn't make it any better :) I am really against abusing alert controllers like that.\nI think the best approach is to: \n\nAvoid a Siren-specific UI component\nSimply pass the release notes back in via a a delegate method\nOnly have the delegate method throw a message back on the first launch after a new version of the app is installed\nHowever, this means we have to do some UserDefaults wizardry with the register API to make sure the delegate doesn't get triggered on the first-ever launch of the app, or on subsequent app launches.\n\nI'm still on edge. I can see this feature being both in scope and out of scope. \nKeep your code in your fork for now. I'll reach out if I reconsider.\nThanks again for taking the initiative - I really appreciate it!. Quick question - why are you importing Siren as a static framework, and not a dynamic framework? Are you putting this in a blackbox SDK that you're shipping?. ok sure - I'll merge this change and version siren. Before, I do, are there any other changes that are needed?. Released: https://github.com/ArtSabintsev/Siren/releases/tag/3.1.6\nThanks!. Hey,\nYour first URL is wrong.\nIt should be: https://itunes.apple.com/lookup?bundleId=th.co.dtac.mobilertr&country=TH. My pleasure - enjoy!. Love the changes! Merging it in!. Thanks! Could you please update the tests as well?\nThank you!. Added this change to Harpy: https://github.com/ArtSabintsev/Harpy/releases/tag/4.1.9. \nWill merge into Siren right now.. Feel free to open a PR :). Hey,\nPer the docs, change .immediately to .daily or .weekly, to avoid having this happen.\nHope that helps!. Hi,\nYou said you're running version 3? Can you show me how your imported Siren in your Podfile?\nThanks!. pod 'Siren' points to the Swift 4 version of the pod/library.\nAnyway, can you set debugEnabled to true and copy/paste what you see in the console?. Hmm, it is indeed returningversion = \"1.3\";`.\nCan you do a pod update Siren? I think you may be using an outdated version.\n. Might be. It depends on what version of Siren your users were using. There's definitely no caching built in, since the URL request is of the ephemeral type.\nSorry and good luck!. You're welcome!. Please open a new ticket with all the code you\u2019re using, your bundle ID, and anything else that you think may be useful.\nSent with GitHawk. cc @maymard. Thanks! Got a request for this from @cmaymard and it seemed worthwhile. Will wait for his thoughts or the end of the week before merging it in, whichever comes first.. Hey!\nThanks for reaching out.\n1) No, the update payload from Apple is not localized, formatted, or useful, last I checked. I don't even recall if it's provided anymore.\n2) You can only take advantage of the localization if you use the default/out-of-the-box string messaging. It's turned on by default. So if you have a user whose device defaults to Chinese (Simplified), the alert will automatically appear that way.\nNext, from personal experience working on these apps, user's don't care, at least not your average user. I just had an app go from 0%-82% adoption in 4 days thanks to Siren. The user base is very large.\nHope that helps!. Just edited the post to clarify a couple things.. Closing the issue. Feel free to re-open it if you want to follow up.\nHappy new year!. Hey,\nThis only works in Swift 4 as I no longer actively develop for Swift 3.x.\nswift\nlet siren = Siren.shared\nSirenAlertMessaging(updateTitle: \"New Fancy Title\",\n                    updateMessage: \"New message goes here!\",\n                    updateButtonMessage: \"Update Now, Plz!?\",\n                    nextTimeButtonMessage: \"OK, next time it is!\",\n                    skipVersionButtonMessage: \"Please don't push skip, please don't!\")\nGood luck!\n  . Siren 4.0 changes the entire public interface. Please open a new issue if you have a problem that you need assistance with.\nSent with GitHawk. I don't really see a way to do that without utilizing this delegate method: https://github.com/ArtSabintsev/Siren/blob/master/Sources/SirenDelegate.swift#L49-L50\nand doing your check with alertType set to .none to avoid presenting the alert. Then, when you do present the alert, you can do a switch statement around the UpdateType and perform the appropriate check.\nAlso, feel free to open a PR with a better implementation. One could be turning siren.majorUpdateAlertType into a tuple that also takes in how often to prompt. Maybe a new set of variables that deprecates those?\nWhat do you think?. Sure, I\u2019ll mull it over as well!\nSent with GitHawk. Alright, so it seems that only two people have requested this feature over the course of 8 months (#190 and #203). I think the case is too unique to be added to the library for now. If more people request this feature, I will revisit this request.\nI am closing this issue as my philosophy is to build OSS libs for the majority of use cases. Occasionally, I do build convenience features, but as there seems to be very little interest in this specific feature set, I will have to pass on this feature.. I've implemented this suggestion in #250 - that PR only needs some documentation and an update to the README before it's ready to go.. You\u2019re very welcome!\nSent with GitHawk. Google translate doesn't really translate this properly. I'm not sure what the question is.. Hey,\nThere is no way to synchronize it with 100% certainty. By default, Siren waits 1 day checking with the App Store to make sure the app is available through all CDNs around the world. \nMy recommendation is to do a database migration, versus dumping one for the other, if that's possible in your situation.\nHope that helps!\nThanks for being a user!. Closing this issue due to lack of follow up.. Need more information, such as the bundle ID and region/store in which the app is in.. Closing this issue due to lack of follow up.. No, and no plans to add support. Why not use Sparkle (https://sparkle-project.org)?. No, you don't need to provide anything as Siren uses the app's Bundle ID, which it can grab automatically.. You need to set the SirenDelegate, and monitor the errors that come through the sirenDidFailVersionCheck delegate method. Specifically, you'd receive this message if the user is already using the latest version: https://github.com/ArtSabintsev/Siren/blob/master/Sources/SirenError.swift#L44-L45. Yes. Follow the instructions here: https://github.com/ArtSabintsev/Siren#testing-siren. @RamblinWreck77 Thanks for pointing this out! This has been fixed.. Yes, using this SirenDelegate method\nfunc sirenDidDetectNewVersionWithoutAlert(message: String, updateType: UpdateType). Hey!\nThe country code is mentioned in Siren.swift and in the example project.\nhttps://github.com/ArtSabintsev/Siren/blob/master/Sources/Siren.swift#L82\nSiren has way too many configurable options which is why I mentioned in the README to check the sample project: https://github.com/ArtSabintsev/Siren#example-code\nI will consider adding your changes and will get back to you soon.\nThanks for your feedback!\n. Merging this in and making a couple small changes.. Thanks again. It's released in v3.2.1. Release notes here: https://github.com/ArtSabintsev/Siren/releases/tag/3.2.1\nCredit given in CONTRIBUTORS.md.. Hey, thanks for the feedback. I will review this request as soon as I get back to a computer and will follow up shortly there after.\nSent with GitHawk. Looks good. Merging it in.. Simply call \u2018checkVersion()\u2019  on Siren whenever and however often you want.\nSent with GitHawk. Currently, there is not. There is a request in place for this #190. It's on my to-do list, I just haven't gotten to it. Feel free to take a stab at it.\nClosing this issue in favor of #190.. Hi,\nThis is an issue, not a Pull Request, so I cannot see your changes. Furthermore, as enterprise iOS apps have no App Store, each consumer of this SDK will have a completely different implementation for how to handle app updating. While this can be solved by injecting custom URLs, payloads, and error handling, this is beyond the scope of Siren.\nTherefore, any PR that is opened that adds these changes will not be merged. However, I encourage you, and anyone else interested, to freely fork Siren and make any changes that will support your specific updating schema.\nThanks for opening the issue.\nBest of luck!. Thanks for the PR. I'll think over it.. I don't mind the suggestion, nor the implementation as much, but I'm wondering what scenario you've found yourself in that required you to specify a different number (e.g., not immediatley, 1 day, or 7 days)?\nThanks!. hmm, alright, so there's an alternative you can implement. \nSet this property to 3:\nswift\n    /// When this is set, the alert will only show up if the current version has already been released for X days\n    /// Defaults to 1 day to avoid an issue where Apple updates the JSON faster than the app binary propogates to the App Store.\n    public var showAlertAfterCurrentVersionHasBeenReleasedForDays: Int = 1. The difference between the two settings is as follows:\nshowAlertAfterCurrentVersionHasBeenReleasedForDays is the minimum amount of time that needs to pass before any alert is presented. The value is determined by the timestamp of the JSON from the iTunes Store payload.\nThe checkVersion is the frequency in which the alert is presented after the value in theshowAlertAfterCurrentVersionHasBeenReleasedForDays property is satisfied.\nHope that helps!\nClosing the issue, but feel free to follow up.. Ah, I understand. I may consider your change down the road, but right now, this is the first time anyone has requested such a feature in the ~6 years I've maintained Harpy and Siren, which makes me believe that this use case is too nich\u00e9 to be put in the mainline branch.\nFeel free to set it to 3 days on your own fork.\nThanks for your feedback!. Done! Just merged it to the master branch. I'll tag the release later today as I'm working on a few other minor changes.. Thanks for the feature request.. It's out - version 3.3.1.. no problem - enjoy, and thanks for the suggestions!. @bawelter Is that true? I never even considered that field being optional in iTC. Do you have any documentation or proof or guidance on that info? Also, feel free to submit a PR. I'll add it to my to-do list.. Alright, good to know. Thanks for following up. I'll take care of it soon.. Fixed and pushed as 3.3.2: https://github.com/ArtSabintsev/Siren/releases/tag/3.3.2. Also release v3.4.0 which adds a delegate that lets you actually make use of the releaseNotes. Check #210 for more info.. This means that for the setting you chose, the user interacted with the version check alert modal. The next one will happen in 1-7 days, depending on your setting choice.\nIf you drop some of your sample code, I might be able to help.. Yup, that sounds right. \nSent with GitHawk. Thanks, but you edited the automatically generated docs. Many of those changes will be reverted when I re-run Jazzy, the docs generating tool.. You have to resubmit the PR, as it cannot be reopened for whatever reason.. Thanks - looks good!. Could you provide me with your bundle ID?. Closed due to lack of activity.. Sorry this is quite confusing.\nCould you please rephrase the question?\nWhat version of your app has Siren installed?\nWhat is the current version in the App Store?\nSent with GitHawk. Closing this issue due to lack of follow up.. Sorry for the long response time - I just saw this message.\nMy question is why? Why are you doing it this way?\nIf a user skips the version, they don't want to see the prompt, and that's it.. Closing this issue due to lack of follow up.. Looks good! I'm going to make two small changes after I merge this in.\nThanks!. Made the changes and pushed it out as v3.4.1.\nhttps://github.com/ArtSabintsev/Siren/releases/tag/3.4.1\nThanks again!. Sure - need a day or so :). I just tested the latest master branch with Swift 4.2 in Xcode 10b1. Everything works fine - no compilation errors or launch errors.\n. Please open a new issue with all the correct information.\nClosing this issue.. Thanks for this PR. I'll review it this week.. This is for backwards compatibility as you used to be able to have more than three version numbers. It is not required, and that codepath is only entered when needed.. Thanks! Will look at it tonight.. Hi, \nWould you mind opening a PR with your proposed changes? It will be easier to dissect it that way.\nThanks!\n(Closing this issue in favor of the new one you'll open should you see fit to want to do so). Alright, so this isn't a bad idea, however, I need to think through the scenario when a consumer of this delegate method purposefully set a daysSinceRelease value to be a long time. The reason for someone doing this would be for UX reasons ( e.g., not prompting the user too often).\nSome people use Siren as a last resort, so what I think is also needed is a shouldPromptEarlyIfAble flag or something of that sort that defaults to false. \nI'll get back to you by week's end.\nThanks!. Alright, I've thought this over. This feature (sirenDidDetectNewVersionWithoutAlert) exists because the JSON is found earlier than the updated app binary is typically made available on the App Store. \nTherefore, if your delegate method is hit early (because a new version is detected early), then the code path is entered early which could lead your users to have a bad experience if people sue that delegate method to present a custom update modal.\nIf you want to do this, then I recommend just setting the value of showAlertAfterCurrentVersionHasBeenReleasedForDays to 0, because the result will effectively be the same. \nNo need for a new variable or to link the delegate method in there.\nClosing this PR since I don't see a need for it. Feel free to continue doing what you're doing in your own fork, though.\nBest of luck!. Did you set the country code?\nhttps://github.com/ArtSabintsev/Siren/blob/master/Sources/Siren.swift#L82. Thanks for the PR. I currently have a swift4.2 branch. I forgot to push it up until I saw your PR come in.\nThanks for the reminder!. Hi - I\u2019m away from my computer for a few days, however, there is a delegate method that will return the release notes from the iTunes lookup API. That\u2019s what you want.\nHope that helps!\nSent with GitHawk. I\u2019ll have to look tomorrow evening when I\u2019m back at a computer. I\u2019ll get back to you then.\nKeep in mind, the sole reason for this app\u2019s existence is to notify a user of an update. Nothing more, nothing less.\nWhat you\u2019re asking for is totally legit, but the SDK can only handle it before the user updates.\nI\u2019ll get back to you with the other stuff tomorrow evening.\nAlso, what you\u2019re doing is totally not kosher. The delegate method will be hit until after the request completes.. Can you print out the contents of the lookupModel?. Now that I'm at a computer I can make a better assessment of what you're trying to achieve.\nSiren is first and foremost a tool that alerts an app's users when a new version of an app is available. By default, it shows a UIAlertController. Overtime, I've exposed delegates to allow for users' to present their own alerts with custom messaging, amongst other features.\nWhat you want to achieve needs to be done in the following manner:\nswift\n    func sirenNetworkCallDidReturnWithNewVersionInformation(lookupModel: SirenLookupModel) {\n        let alert = UIAlertController(title: \"Please Update\", \n                                     message: lookupModel.results[0].releaseNotes, \n                                     preferredStyle: .alert)\n        present(alert, animated: true, completion: nil)\n    }\nThis can only be done after a version check is performed and only if a new version is available.\nThere's no other way to achieve the functionality that you want to perform.. Closing issue due to lack of follow up.. Per release notes, the latest version is using Xcode 10 and Swift 4.2.\nDoes that help?\nThere is a Swift 4/4.1 branch if you need that.\nSent with GitHawk. Sorry about that. I'll take a look this evening. Thanks for bringing this to my attention!. Works for me. I ran carthage update and dragged the binary into the project and added it into the embedded framework as well and it just worked in a new project in Xcode 10.\nSee the attached project and screenshot.\n\nTest.zip\nKeep me posted. Closing the issue for now since it's not reproducible on my end. Feel free to follow up.. Can you send me a sample project?\nSent with GitHawk. Not sure what to tell you, my friend. I don't use Carthage, nor do I know why you'd be getting this error. Maybe you need to update Carthage and do a fresh install of Siren?. Hi!\nThanks for the suggestion. Any reason you would want to do this type of messaging?. I think your request is very niche, however, you can easily do this yourself. \nI'd set alert presentation to .none and do the following:\nGet the update information from the JSON here.\nsirenNetworkCallDidReturnWithNewVersionInformation\nUsing the update information from the aforementioned delegate, and from the localized string information from this delegate, you can present an alert in this delegate.\nsirenDidDetectNewVersionWithoutAlert\nI may consider consolidating these delegates into two delegates in the future. I will also consider your request. If I do implement it, I'll respond back here. It may be awhile.\nHope this helps!. Ok, I understand. So if I expose the strings in SirenAlertMessaging to be of type NSAttributedString, that would fix the issue for you?. Checkout https://github.com/ArtSabintsev/Siren/pull/228 - will that work for you?. Merged that feature. It'll be available in v3.6.0 in just a moment.. Don\u2019t worry about that. I did a minor version change, so the compiler\u2019s static analysis will give the appropriate update. \nI hindsight, I should have deprecated the other initializer, however, I also changed the concrete type of the properties, so it would not have been trivial.\nThanks for the follow up!\nSent with GitHawk. Hi!\nIt depends on the value you set for VersionCheckType: https://github.com/ArtSabintsev/Siren/blob/master/Sources/Siren.swift#L523-L534\nIf you set it to .immediately, then the version will be checked with every launch of the app.. This PR implements the feature requested in #226.\nClose #226 . Can you please provide me with your bundle ID and the date in which the latest version was released. Sample code would be appreciated as well \nSent with GitHawk. This https://github.com/takecian/SwiftRater/blob/master/SwiftRater/SwiftRater.swift#L156?. I don't see any Siren code in there. . Hey - thanks for the message. That seems a bit weird, since https://developer.apple.com/documentation/uikit/uiwindow/level states that UIWindow.Level is the appropriate approach. Are you positive you're using Xcode 10 and it's that Carthage is using the Xcode10 xcodebuild toolchain?. Can you send me a zip file with a blank sample project that tries to bring in Siren using Carthage? I\u2019ll try to replicate it on my end afterwards. Thanks!\nSent with GitHawk. So everything is working now?\nSent with GitHawk. Hi,\nPlease send me your bundleID and the country in which your app is available if it\u2019s not available in the US.\nThanks!\nSent with GitHawk. Sounds good!\nSent with GitHawk. I think that's because siren.showAlertAfterCurrentVersionHasBeenReleasedForDays is set to 30. \nBy default, it's set to 1, which means the alert will begin prompting suers to update after the app has been in the store for 1 day.\nClosing this issue, but feel free to follow up.. Alright, I had a think about this and I remembered that when I worked @WashingtonPost my team and I devised the following way of dealing with forcing certain versions to be updated. We had a JSON payload structures as follows:\njs\n\"siren\": {\n    \"versionsToForceAnUpdate\": [\"1.1.0\", \"2.1.4\", \"3.1.5\"] \n}\nThen, right before Siren performed a version check, and if it saw that the current installed version was equal to one of the versions in the configuration file, we changed the presentation settings for Siren (the alertType and versionCheckType).\nIn my opinion, the solution we devised during my tenure at The Post allows the codebase to still be usable to folks like us who use configuration files for adding granular control over updating, however, it also doesn't muddy the interface with code used by a small percentage of people.\ncc @getaaron Closing both this issue and the one in Harpy, but I will respond to any further comments and thoughts.. Siren checks to see if the device can support it already, even if you force: https://github.com/ArtSabintsev/Siren/blob/master/Sources/Siren.swift#L213\nI still think I'm going to pass on your solution, as it can be solved with the current interface. Feel free to use a fork of Siren/Harpy, and thanks for implementation work.. Alright, so usually I'd recommend that if you use .force to use .immediately, so in your situation, which I know is something you control through a server-side config file (due to #236), I think you should change both values if you decide to force a user to update.\nI do see the issue you raise though, however, I need to think about it a bit before. \nI think this is related to this ticket: https://github.com/ArtSabintsev/Siren/issues/190\nIt  may be time to finally work on this feature.. Yup, understood. I think I'm going to refactor how this is done in the next week. This will solve this ticket and #190. It's on my to-do list - I have an implementation in mind.. I've set aside time to do this in early November. I'll keep this thread updated.. I've begun working on Swift 4.0.0 in #250 - all I have left is to implement this feature.. So in building this feature out, I came across a chicken/egg problem. \n\nSiren needs to know if the new version is major/minor/patch/revision to know how often to perform a version check.\nSiren does not know if the new update is a major/minor/patch/revision version update until after it performs a version check.\n\nTo get away from this problem, the library could always perform a version check on app launch, however, it will not show a UI alert unless it meets the appropriate criteria for showing the alert.\nThis requires a paradigm shift on how the library currently works and will take more time to implement.\n. Now a secondary issue that arises when implementing this feature is that we now will have layers of rules:\n\nPerforming a version check next time means show an alert next time, irrespective of what Siren is configured to do.\nSkipping a version check now needs to override all settings until the subsequent new version is checked for.\n\nThis makes this problem a lot more complex to solve now. I have to think about how I want to approach this feature since it will involve a bigger rewrite with a lot of potential bugs.. ok, I've solved this issue in #250, however, I still need to add documentation and a README. Feel free to subscribe to that PR for updates. \nClosing this issue as it's essentially fixed.. Looking into this issue and the opened PR (#239) right now.. This has been fixed on master. v3.8.0 will be released shortly. Feel free to open a new issue if the problem persists.. Thanks for the PR. I made this change on master with a few others. I'll release a new version shortly.. Hi - thanks. What region are you in? Can you provide the country code for your App Store and your app\u2019s bundle ID?\nSent with GitHawk. I just plugged in your bundle ID, com.xrj.edu.StarAdmin, into the Siren Example app v3.8.0, and it worked just fine. \nClosing this PR as Apple's API change seems to have propagated to the Chinese App Store region at this point in time.. You\u2019re welcome!\nSent with GitHawk. Apple changed the JSON payload to return trackId as an String. It used to be an Int. \nPlease upgrade to Siren 3.8.0 as it fixes this issue. . Please make a new ticket with your specific issue and snapshot of your podfile.. Please upgrade to v3.8.0, as it fixes this issue.\nSent with GitHawk. Please upgrade to v3.8.0 as it fixes this issue.\nSent with GitHawk. All good :)\nSent with GitHawk. Please open a new issue with the appropriate information in the new issue template filled in, otherwise, this will take some time to figure out.\nSent with GitHawk. Ok thanks for all that info! I\u2019ll look into it tonight!\nSent with GitHawk. Reverted it back to an Int. I think Apple is realizing their mistake and reverting it. If it happens again, I'll implement the solution in #240.\nThis is fixed in v3.9.0 which is now tagged and available via CocoaPods.. Good catch! Will merge it and cut a new patch release.. Thanks - will fix it now. Hi,\nPlease refer to the sample code: https://github.com/ArtSabintsev/Siren#example-code\nSpecifically, this snippet:\n```\nfunc applicationWillEnterForeground(application: UIApplication) {\n   /*\n      Useful if user returns to your app from the background after being sent to the\n      App Store, but doesn't update their app before coming back to your app.\n  ONLY USE WITH Siren.AlertType.immediately\n\n*/\nSiren.shared.checkVersion(checkType: .immediately)\n\n}\n```. My pleasure! Locking this thread - feel free to open a new one if you're having any other issues.. @getaaron you may to take a look. This is a 100% rewrite. Documentation is about 85% complete, however, neither the README nor sample project is in a good place at all. Might not be there until next week. It may be difficult to follow until then.. @kamrankhan07 @jeffjvick @faasko - sorry if I'm pinging a couple of you out of the blue, but each of you have expressed an issue on SIren's ability for granular version updating in the last year.\nThis PR adds that functionality, on top of a full rewrite. It is ready to be tested.\nHere\u2019s the updated README: https://github.com/ArtSabintsev/Siren/blob/d78c2b427726b0f478126bc498718ff03456ef2d/README.md\nHere\u2019s a bunch of sample ways to implement Siren (AppDelegate.swift):\nhttps://github.com/ArtSabintsev/Siren/blob/d78c2b427726b0f478126bc498718ff03456ef2d/Example/Example/AppDelegate.swift. Great - thank you! My hope is to merge this in very soon - so if you have time to test it very quickly in the next 24 hours, I\u2019d appreciate it!\nSent with GitHawk. @jeffjvick Thanks so much! I look forward to hearing back!. Merging this code as I've received enough feedback that it seems to work. \ud83d\udc4d . No worries and thanks for following up! It was me that was in a rush, as I was excited to close this PR. Keep me posted!. Right, the completion handler is only called upon the user performing an action on the modal, otherwise, there is no reason to call the completion handler. Is this an issue?\nSent with GitHawk. You will find out if the alert is presented once they interact with it. I could add a notification the scenario when the alert is presented and they background the app - that could potentially cause the completion handler to get called, however, it may cause the app not to update depending on the prompt rules. Does that work?\nWhy do you need to know if the alert was presented? What metrics do you get from that?\nSent with GitHawk. Thanks - are you able to post your appdelegate\u2019s implementation of Siren? I just want to see how you\u2019re using it.\nSent with GitHawk. And if the user is logged in? Are you still only calling your code in didFinishLaunching WithOptions? My worry is that you should not seeing this behavior: https://github.com/ArtSabintsev/Siren/pull/250#issuecomment-451368285. Alright, I was able to emulate that layered pop-up alert. Working on a fix.. Alright, fixed it in https://github.com/ArtSabintsev/Siren/releases/tag/4.0.1. \nThanks for the bug report. \nI'm locking this PR from further comments, but feel free to open a new issue if this problem or any other problem persists.. Are you sure you\u2019re using 3.9.1?\nSent with GitHawk. I launched the sample app in this repo and replaced the bundle ID in there with yours and it worked just fine.\nFeel free to share a snippet of code.. Closing the issue, since I cannot reproduce it. Feel free to respond and I'll follow up.. How recently did you update the app? The issue lasts for about 24 hours after launch. . Could you provide me with the bundleID and the current version of your app?\nSent with GitHawk. Thanks! Please do follow up here.\nSent with GitHawk. I'm going to close this issue since it's not a bug, but I will follow up on the conversation in here when you post back.. Ok I\u2019ll take a look tonight\nSent with GitHawk. Both seem to be returning 2.0.7 when I checked just now.. Closing this in favor of your PR (#254). We can continue the conversation there.. Hey!\nThanks for the PR. Wouldn't changing the cacheType to https://developer.apple.com/documentation/foundation/nsurlrequest/cachepolicy/reloadignoringlocalandremotecachedata fix the problem?\nI don't know why I'm not using that to being with.. Alright, how can you replicate this issue? I'd like to test it myself.. Alright, thanks. That's hard to test because it requires an app that was just released. \nCan you also change reloadIgnoringCacheData to the one I referenced (local/remote)? Then, I'll merge the PR.. Glad you figured it out!\nSent with GitHawk. Hi, thank you for the report. Please open a new issue and follow the directions in there for creating an issue as it will make it easier for me to re-create the situation on my end.\nSent with GitHawk. Hi,\nThanks for the suggestion. Is there any reason daily isn't a good enough measure of time? In what scenario would you want to use smaller units of time for version checks / alert presentations?. Thanks for the detailed feedback.\nThe reason for choosing a day as a lowest common delimiter of time was to account for the issues discussed here (https://github.com/ArtSabintsev/Siren#words-of-caution). The only option I can think of to make use of right now, would be the following:\nswift\nRulesManager(majorUpdateRules: .critical, showAlertAfterCurrentVersionHasBeenReleasedForDays: 0)\nThat is equivalent to setting:\nswift\nUpdatePromptFrequency = 0\nAlertType = immediately\nshowAlertAfterCurrentVersionHasBeenReleasedForDays = 0\nHowever, it may cause an endless loop between your App and the App Store if the update has not propagated.\nAs for caching calls and referencing them, I may add that in as an option.\nLet me mull this over a solution that will work for the majority of users without breaking the existing API too much. . Also, you may not want to do two checks, especially one on foreground. As of Siren v4.0.0, I use the didBecomeActiveNotification to automatically initiate version checks. All of this is discussed here: https://github.com/ArtSabintsev/Siren#implementation-examples. Got it. The API does return a timestamp, which is what Siren uses to calculate showAlertAfterCurrentVersionHasBeenReleasedForDays.\nThat's a very very specific change that you want. It does make sense, but the bigger issue in my mind, is what the appropriate default setting should be and how to convey the ability to customize that value. \nI'll think it all over, however, any change I do make, will be to the to the Swift 4.2 version of Siren.. Alright, I've been thinking about this all week.\nFirst off, in Siren v4.0.0, the rules governing how Siren works have moved from:\nShould an API request be performed?\nto:\nShould an alert be presented?\nThis means that an API request is always performed when Siren's code-path is entered, and once the response is validated to contain a new version, the complex rules governing alert presentation, including the showAlertAfterCurrentVersionHasBeenReleasedForDays value, are evaluated before presenting an alert. This is a fundamental difference in how the swift4.1 branch of Siren operates. So, in your scenario, after an update is live int he App Store for 24 hours, an alert will always be presented unless you have rules in place that suppress that alert. \nWith that in mind, I should inform you that I follow the 80% rule to software development, which is an obscure form of the Pareto Principle. What this means is that the mainline version of Siren (e.g., my master fork) contains solutions that apply to 80% of my intended consumers. My recommendation to people who want very custom tailored solutions is to fork Siren and build it themselves. While not ideal for those people, it has allowed me to maintain my OSS repos without obscure features that stretch my OSS repos beyond their intended goal.\nAlright, so what does that mean for you and your case? It means that I will not be adding the caching change, since Siren's whole goal is to check the App Store for a new version every time the app is launched. Based on what it finds, and based on the presentation rules, and alert may be presented. Caching a response subverts Siren's core functionality by returning cached responses for a given period of time that may not be valid for the length of time for which the the response is cached. Second, I will not be adding the ability to perform an initial version checks after X hours vs the current X days. Why? Because trial and error over the last ~7 years has taught me that the iTunes Lookup API response updates ~6-24 hours faster than the binary is made available. I implemented the default 1 day wait period  to protect users from getting into an infinite loop with the App Store when developers who consume Siren use the alertType = .force setting, since users who launch the app before the binary is made available cannot update their app, nor can they use the existing version of the app. This right here is why your proposed 6 hour solution is not something I want to implement.\nI have mulled over this decision for 5 days and this is my final conclusion to your suggestions. \nI am closing this issue, but not locking it, meaning you are welcome to follow up, and I will happily continue this conversation, but I doubt I will be swayed from my current stance.\nThank you and have a great weekend!. My pleasure! Best of luck and thanks for understanding!\nSent with GitHawk. Well, launch is effectively launching the app from the background, which is how I think it always worked. That\u2019s something I need to check.\nSent with GitHawk. Actually, this is expected functionality. Most people don\u2019t shut down their apps, so backgrounding an app will cause the next time trigger the next time the app is launched.\nSent with GitHawk. I'll think it over. I think it'll be an easy change to add a simple conditional check around the addBackgroundObserver function.. Added this to the new project board: https://github.com/ArtSabintsev/Siren/projects/1. Totally understand. It's next on my list of bugs to fix. Keep Siren in a separate branch for the moment before merging it into master and I'll ping you once that's fixed.. Alright, I think with Siren v4.0.0, the idea of what Next Time meant has changed. Why? Because Siren now performs a version check each time the app launches, but then uses the rules to determine how often a modal presentation should occur.  Previously, the version check was what was controlled by the old rules system.\nTo fix this problem, I simply need to stop treating subsequent launches as a separate use case. This is done by removing the following UserDefault:  shouldPerformVersionCheckOnSubsequentLaunch. \nTherefore, clicking Next Time simply hides the alert without augmenting the original set rules.. Fixed in https://github.com/ArtSabintsev/Siren/pull/264, which will be released as 4.0.2 in the next few minutes.. It's available now via CocoaPods as v4.0.2.\nI'll keep this thread unlocked until I receive confirmation.\nThanks ahead of time!. Great! Thanks for the confirmation! Locking the issue now.\nSent with GitHawk. Done - just pushed the changes in both examples.\nThanks for the suggestions!. Hey Jeff,\nNo way to do that out of the box as the library is highly-localized, so it depends on certain strings localizations existing for users in different locales to see messages they are more apt to understanding. Seeing an update localized in your language is the greater goal for Siren. While what you want isn't possible out of the box, you could build your own alerts if you decide to set alertType = .none and then build your own alerts based on the results returned in the completion handler. . Also, please update to 4.0.1 - it has some fixes and some missing documentation as well.. I'll add it to my to-do list - that's the best I can do right now. Quite a bit going on in my world!\nThanks for taking the time to test it and provide the constructive feedback - it's super appreciated!. Added this to the new project board: https://github.com/ArtSabintsev/Siren/projects/1. I decided against implementing multiple templates as most issues are bug reports and the current template is good enough.. I guess, why wouldn\u2019t you want to do it at launch? That seems like the only appropriate place to do a version check. That\u2019s how every iOS and Mac app I\u2019ve used works. What\u2019s the reasoning to do it on action, rather than on start?\nSent with GitHawk. So all you'd want is to have the ability to turn off the didBecomeActive observer, right? Then, you'd call wail when you want it, right?. I'll add this to the to-do list - thanks!. Alright, I had some thoughts on this again. Right now, the only way the entire flow is kicked off is when the aforementioned observer is signaled. \nThis means I'd need to expose some code publicly to allow you to manually prompt your users. I'll think about how best to go about doing this as I'm not sure I want to just yet as your requirement is an edge case in my mind.. Got it - ok. I'll have a solution in place this weekend. . here's my solution: https://github.com/ArtSabintsev/Siren/pull/268\nWhat do yo think?. Not a bad idea. Let me think this through a bit! Thanks!\nSent with GitHawk. ok, implemented your idea. Check it out now and test it out. If it works, I'll merge it in and tag/release it as 4.1.0. It also contains a fix for #267.. Thanks a ton!\nGoing to merge it in now and cut a version.. Merged.. 4.1.0 is now live. Release notes are here: https://github.com/ArtSabintsev/Siren/releases/tag/4.1.0. Hi - thanks for the PR. Unfortunately, I don\u2019t think this needs to be codified into a default rule since not presenting an alert doesn\u2019t have to be done with the immediately prompt frequency.\nSent with GitHawk. Hey! Please try 4.0.2 - that\u2019s the latest version. Please report back.\nSent with GitHawk. Ok, I think I know why that\u2019s happening. I\u2019ll look into it this weekend.\nSent with GitHawk. This is fixed in #268, which will get merged in soon.. Alright, the fix is ready to be merged. It addresses issues in this issue and #265.. 4.1.0 is now live. Release notes are here: https://github.com/ArtSabintsev/Siren/releases/tag/4.1.0. Closes #265 #267 #269 . Hey! \nThanks so much for your thoughtful addition. Adding it in. It will be part of the 4.1.0 release coming out later today.. 4.1.0 is now live. Release notes are here: https://github.com/ArtSabintsev/Siren/releases/tag/4.1.0. Thanks! I'll take a look soon!. Confirmed that this works! I even wrote in the documentation that it should be equal. I guess I somehow glazed over that in the refactor.\nThank you!. Published as v4.2.0: https://github.com/ArtSabintsev/Siren/releases/tag/4.2.0. Hi - thanks for the PR! \nWhich strings did you update in each file? It's hard to tell as this is these are binary files in GitHub's eyes.. Closing this issue due to lack of follow up.\nSent with GitHawk. Right, but which specific strings in there did you change? There are five strings in each one. I need to do a secondary verification and potentially update tests.. Hi,\nI no longer offer support for any version of Siren below the latest, which is v4.2.1 at this point in time.\nAlso, there is no way to stop viewDidLoad. You can use the force option, as you want to stop app loading, but you can't keep someone on a launch screen. That's the iOS limitation.\nYou could make your first screen show the same screen as the launch screen in viewDidLoad until the user goes through the Siren flow.. Closing this issue, but feel free to follow up if you have more questions.. Locking the issue as there's been no follow up.. Thanks!. This has now been released as v4.2.2.. Hey, thanks for the question. \nIs that a real rule you want to add? If not, can you present me with an example of a rule that you\u2019re looking to add and the reasoning for it? Depending what the rule is, I can either walk you through a custom solution that you can roll in your app, or potentially build it into the library .\nSent with GitHawk. Hey,\nI'm going to put on my architect's hat and tell you that this is not a good idea. How we solved this problem when I worked at The Washington Post was as follows:\n\nPing a separate location on some server, or Amazon S3 (or create an API) that returns the list of all versions that require a force upgrade\nOn launch, check that remote file/API if the current installed version is one of the versions that requires a forced upgrade\nIf that's true, provide a force upgrade.\n\nConversely, you can check to see what the latest version is in the App Store and program your server/static-file to return true for force upgrade for that version if that's how you want to deal with it. This one way would be easier in my opinion - less juggling of files and less retaining values.\nSo, let's say version 1.2.5 requires a forced upgrade, your server would essentially return 1.2.5 for the force_upgrade.json file or force_upgrade API and then on launch, your app would compare that version to what's currently installed. If the currently installed version is less than and not equal to the latest force upgrade version, you force an upgrade. Otherwise, do-nothing/business-as-usual.\nDoing weird custom rule logic around oddly-pointed values is absolutely the wrong way to solve this problem.\nI hope this helps!\nClosing the issue, however, I'm happy to continue the discussion if you need more guidance/thoughts.. Hey,\nThanks for that interesting history lesson. I'd never heard of any project acting this way. Looks like many of those projects mentioned dropped the practice. \nI guess my thought for your situation is that you have a server already in place, so it wouldn't be too far of a stretch to expose one more API for force-upgrade monitoring. \nI think your scenario is very niche, so I wouldn't want it in Siren, however, you could follow the customAlertRulesExample in the AppDelegate file in the example project and grab the AppStore version of the app on the returned lookupModel and from there, perform another Siren request. that does a force upgrade if the version is odd. \nDoes that make sense?. I need a lot more detail. \nPlease open up a new Issue and follow the guidelines listed in the Issue template: https://github.com/ArtSabintsev/Siren/issues/new\nClosing this issue as it does not contain enough detail.. Hey!\nExample here:\nhttps://github.com/ArtSabintsev/Siren/blob/master/Example/Example/AppDelegate.swift#L59\nCall Siren, and in the completion handler, call results.lookupModel to gain access to the model. \nCall version on lookupModel: https://github.com/ArtSabintsev/Siren/blob/master/Sources/Models/LookupModel.swift#L51\nSo:\nswift\nSiren.shared.wail { (results, error) in\n            if let results = results {\n                print(\"App Store Version: \", results.lookupModel.version)\n            } else if let error = error {\n                print(error.localizedDescription)\n            }\n        }\nHope that helps!. Hey,\nSorry - here's the code results.lookupModel.results.first?.version - I may add a convenience method for this soon.\nAlso, you can call Siren without showing an alert presentation by passing in .none:\n to the rules manager\n```swift\n        let siren = Siren.shared\n        siren.rulesManager = RulesManager(globalRules: Rules(promptFrequency: .immediately,\n                                                             forAlertType: .none))\n    siren.wail { (results, error) in\n        if let results = results {\n           print(\"LookupModel \", results.lookupModel.results.first?.version)\n        } else if let error = error {\n            print(error.localizedDescription)\n        }\n    }\n\n```. Sure, that makes sense. \nAn enum called SirenUserDefaults?\n- .StoredVersionCheckDate\n- .StoredSkippedVersion\nThoughts?\n. It's the Obj-C in me :)\n. Compiler begged for the as! String. \nWill look into it in the GM build.\n. I'm just not a fan of checks against nil. I use if let or guard let to bind it, as it makes the most sense to me.\nThanks for the feedback, though!\n. Thanks!\n. Fixed - thanks!\n. Can't throw inside of a NSURLSession block.\n. So objectForInfoDictionaryKey(_:) returns `AnyObject?, which is why the forced downcast is necessary. It's a compiler-supplied fix.\n. I did it here for stylistic purposes. May change it in the future.\nAs I said elsewhere in here, just not a fane of checking against nil. Feels kind of wrong when we having binding.\nJust my 2 cents.\n. yup, that works! Will push it out now.\n. The Result type is something I was originally looking into (I think @aligatr wrote about it a while back), but that is sheer overkill for this project. \n. Hmm, sure, but that involves so much more work xD\n. Actually, I'll take the messages in the print statements and pass them in, however, I also need to maintain error numbers as well. The question is, should I make a new error manager class that builds error objects using a factory method, or should I continue to stuff it into Siren.swift? =p\n. By the way, the reason I'm returning here is because @gasthana0 needed to know when the lib totally failed to do anything. See #48 \n. Personally, I don't even want to handle this case. Will not-handling this case still work for you?\n. I'm probably going to make a couple files, one for error management, and one for class extensions, as I am extending UIAlertController and NSBundle. \n. ok, so I will have to handle this as a failure.\n. There is a // MARK for extending bundles lower in the Siren.swift file. I'd put a static method there and reference it here.\n. This change looks good. I'll take a look a this change and the other PR that I have on me and will merge it in in the next couple hours.\n. Ah. ya, I see it now. Thanks!\n. Can you do me a favor and rename the method's so their signature looks as follows:\nfunc days(since date:)\n. DateFormatter's, at least the ObjC Foundation NSDaeFormatter is notoriously expensive to initialize. Can we place the dateFormatter initialization and basic (non-dateString) configuration in a static func?\n. Can you do me a favor and rename the method's so their signature looks as follows:\nfunc days(since dateString:)\n. Rename to testGreekLocalization\n. Rename from notSet to unknown.. Deprecate the existing function using the following syntax above the existing signature, and have it point to the new signature:\n@available(*, deprecated: 3.1.0, unavailable, renamed: \"sirenDidDetectNewVersionWithoutAlert(message:, updateType:)\")\nfunc sirenDidDetectNewVersionWithoutAlert(message: String)\n. Move this above the guard.. I need to try this out myself before giving an adequate answer. Will get back to you soon.. ",
    "ceyhuno": "The Sample App works for me too. But when I copy it to my project (an app written in swift with deployment target 7.1) I get the compiler error. It doesn't even build. I haven't written any code for Siren in AppDelegate.swift.\nIt is the optional in results[\"results\"]?, I think the compiler doesn't understand if it's the whole dictionary which is optional or the value in the dictionary.\n. Yeah I'm sure. I had installed it through App Store. It's 6.1.1 (6A2008a). I'll make a fresh install anyways to prevent further errors.\n. It is somehow related to using Realm in the project. I have created a repo for the sample project, it includes Realm v0.89.2 -> https://github.com/ceyhuno/SirenWithRealm\n. Just made the target 7.1, nothing else. \nTo add Realm I just copied 2 files(Realm.framework and RLMSupport.swift) and linked \"libc++.dylib\" dynamic library. \nYou can find the instructions here -> http://realm.io/docs/cocoa/0.89.2/ under \"Manual Installation\". \n. 1. Created a new Swift project for iPhone \n2. Copied Realm.framework and RLMSupport.swift (for version 0.89.2)\n3. Linked libc++.dylib library\n4. Copied Siren folder\n5. Made a build \n   I get a Swift compiler error for Siren\nAfter that I removed libc++ and Realm and cleaned the project with CMD+Shift+K\nNow I don't get a compiler error.\nThis is weird. Maybe I should mention it to the Realm guys\n. OK now it works perfectly\n. It worked without problems when I created a new project with 7.1 target and ran it with Siren. \nSo for my own App I went and deleted my project folder and cloned it again. But I still get the same error. I don't understand why.\n\n. ",
    "DmitryBespalov": "@getaaron indeed, fixes the problem\n. ",
    "bonkey": "You're welcome. Keep this nice project going!\n. ",
    "samuelbeek": "6.1.1\n. ",
    "jedrekk": "Great!\n. ",
    "jeffjvick": "That's fine.  I would suggest adding that to the \"How to test siren\" section of the ReadMe as it was not an obvious solution to me at first and I've seen others ask the same question.\nYou might also want to add a comment about using siren.enableDebug = true to help with testing.\nOh and the Setup Instructions it should be \"let siren = Siren.sharedInstance\" not \"let siren = Siren.SharedInstance\" ('s' should not be capitalized).\nThanks\n. I think a tuple for AlertType that also includes a CheckType might be a good solution.  I can poke around the code and see if I have an implementation idea.\nAt the moment though I'm on a deadline for getting this out so it may be a week or two.  Thanks.. -- adding this here since #250 is closed for comments --\nHi, I finally got free time to add Siren 4.0.0 to our app.   First of all thanks for the changes.  Your new RulesManger for for major, minor, patch, revision fixes my issue.  Now I can force users on major release to update the app while still allowing them to prolong updating by a week on minor/patch updates.. Hi, good timing.  I was about to add Harpy to a new project I'm working\non.  I will see if I have time to test it today.\nOn Tue, Dec 25, 2018 at 10:44 PM Arthur Ariel Sabintsev \nnotifications@github.com wrote:\n\n@kamrankhan07 https://github.com/kamrankhan07 @jeffjvick\nhttps://github.com/jeffjvick @faasko - sorry if I'm pinging a couple of\nyou out of the blue, but each of you have expressed an issue on SIren's\nability for granular version updating in the last year.\nThis PR adds that functionality, on top of a full rewrite. It is ready to\nbe tested.\nHere\u2019s the updated README:\nhttps://github.com/ArtSabintsev/Siren/blob/d78c2b427726b0f478126bc498718ff03456ef2d/README.md\nHere\u2019s a bunch of sample ways to implement Siren (AppDelegate.swift):\nhttps://github.com/ArtSabintsev/Siren/blob/d78c2b427726b0f478126bc498718ff03456ef2d/Example/Example/AppDelegate.swift\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ArtSabintsev/Siren/pull/250#issuecomment-449914899,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAMaGaFFouEdDubPMZatIwbyMGFdjn6bks5u8xq9gaJpZM4Ynl7K\n.\n. Thanks. Sorry I was busy all day with a backend issue. I should get to integration in a day or two.\n\nSounds like it\u2019s working but I can give it a double check with the feature I was looking for.\nSent from my iPhone\n\nOn Dec 26, 2018, at 5:47 PM, Arthur Ariel Sabintsev notifications@github.com wrote:\nMerging this code as I've received enough feedback that it seems to work. \ud83d\udc4d\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hi, I'm hitting this bug as well.  If we set a rule with promptFrequency of .daily and the user hits \"Next time\" and then minimizes (backgrounds) and reopens the app it gives them the update prompt again.  I was under the impression that was how .immediately was supposed to behave.\n\nKilling the app and restarting it doesn't seem to respect .daily either. Contrary to what @kamrankhan07 observed.\nThe only way I can get the prompt to not appear again is to click on \"Update\" and then not actually update and open the app again.\nUnfortunately I think this will be a show stopper for us to add 4.0.1 to our app as the \"Next time\" is too aggressive in it's current state.\n. Sounds good.  Seems like that will work. I can test out the new version.\nSent from my iPhone\n\nOn Jan 10, 2019, at 8:31 PM, Arthur Ariel Sabintsev notifications@github.com wrote:\nAlright, I think with Siren v4.0.0, the idea of what Next Time meant has changed. Why? Because Siren now performs a version check each time the app launches but then uses the rules to determine how often a modal presentation should occur.\nTo fix this problem, I simply need to stop treating subsequent launches as a separate use case. This is done by removing the following UserDefault: shouldPerformVersionCheckOnSubsequentLaunch.\nTherefore, clicking Next Time simply hides the alert without augmenting the original set rules.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I have tested and this appears to fix the issue of 'Next Time' firing on each launch even if .daily is set.\n\nThanks for this fix.. Oh, I'm actually on 4.0.1, I didn't realize that.\nAbout the localization though, if we change the default messages in the PresentationManager then localization on those strings isn't going to happen anyway, correct?  So allowing custom PresentationManagers per rule wouldn't really affect the localization effort since we are overwriting the localized strings.\nI see how I could roll my own Alerts with the .none setting but I was hoping to avoid that as I'm fine with the look of the current ones, I just wanted to adjust the text.. Thanks I appreciate that!. ",
    "skandragon": "Note that while I did not put \" around the ID, it still doesn't work, which is...  well, damned if I can figure it out, but I started learning Swift about 3 hours ago.\n. Actually, it's still not working...  Siren.sharedInstance works, but the compiler still claims siren.appID does not exist (along with .presentingViewController, .delegate, .debugEnabled, and even .checkVersion()\n. \n. The latest from the app store, I hope!\nVersion 6.2 (6C131e)\n. Exactly the same result.  I also attempted a build while I had it uninstalled...  same result, oddly enough.\n. 0.36.3\n. Code taken from the sample project does not work.  I'm not sure if the project itself works.  I can install the beta, but that will take A While with my slow internet.\n. hmm, I don't see a directory anywhere in my project called DerivedData, or anything close.  Looking in a broader search.\n. That at least made it find out I did not have the pod installed.  Trying now with an install.\n. Same 6 errors.\n. That's possible, but it is very strange it finds the Siren class, but then instances of that class fail in some mysterious way.  I'd almost blame Swift rather than Cocapods.\n. I'm not sure how Swift works exactly, but if it is being compiled to a .framework file, is it possible something in the Siren class needs to be marked as public?\n. Believe it or not...  changing the Siren.swift file to have this:\npublic var appID: String?\nremoves that one error.\n. I totally get that, and yet making the SirenDelegate protocol public, then adding 'public' in front of every non-private var or function I use makes the compiler happy.\n. It might be a different case where the source is available, vs when it is written to a framework.\n. While confusing, https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html seems to imply that frameworks need explicit public marking.\n. It looks like, when you're building a framework, the \"public class Siren\" part means \"make this part of the API\" and the access internally is still \"internal\", so each entity inside that class must be marked as public or it won't make it through the framework.\nWhen it's included in the project directly, it shares the module, so the default still allows access.\n. No change when I added that file.\n. I think the right answer is to just mark those fields and functions you want people to call as public, so they are reachable outside the Swift module (aka framework)\n. Also marking the SirenDelegate class allows one to use it.  :)  I can submit a pull request tomorrow but there's no guarantee I will get all the cases right.\n. I think the scoping rules about modules comes into play here, and a framework is always its own module, so \"internal\" fails.  Kinda nice really once it's understood.  Night, it's 2:45am here in Central.\n. Pull request created.\n. ",
    "neonichu": "This is expected behaviour, see https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html#//apple_ref/doc/uid/TP40014097-CH41-ID10:\npublic class SomePublicClass {          // explicitly public class\n    public var somePublicProperty = 0    // explicitly public class member\n    var someInternalProperty = 0         // implicitly internal class member\n    private func somePrivateMethod() {}  // explicitly private class member\n}\nEverything that is not explicitly public is internal, even inside a public class.\n. ",
    "zmian": "thank you\n. I did manual install. Trust me I want too. Thanks for your help.\n. @getaaron I'm using Swift. \n@ArtSabintsev pls see below. Running Siren (0.5.1) I see that 0.6 is out will test with that.\n```\nfunc application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n    Siren.sharedInstance.appID = \"app_id_here\"\n    Siren.sharedInstance.alertType = .Force\n    Siren.sharedInstance.checkVersion(.Immediately)\n    return true\n}\nfunc applicationWillEnterForeground(application: UIApplication) {\n    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.\n    Siren.sharedInstance.checkVersion(.Immediately)\n}\nfunc applicationDidBecomeActive(application: UIApplication) {\n    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.\n    Siren.sharedInstance.checkVersion(.Daily)\n}\n```\n. Strange stuff. I tried it on another project and it worked fine. I'm assuming something else is the root cause for this. I'm closing this issue until I have further info to report. Thank you for prompt responses.\n. ",
    "dbettermann": "I can't remember running into rotation or resizing issues. The issue was that there was a delay between the UIWindow appearing and the UIAlertController presenting. The window's rootViewController would intercept all the touches until the UIAlertController presented a few seconds later.\nIn short, it seemed like the main thread was deadlocking or thrashing.\nI did see the delegate methods, but I don't think they'll work for my use case. I'm trying to make it so I can drop in the library, provide the URLs (non-AppStore apps) via a config file, and have it just work. We want to include this functionality in 100+ apps and it may be a non-developer adding the library.\nI'm not expecting Siren to change at all based on my requirements. Just curious if you found a way around this \"limitation\" when transitioning from UIAlertViews to UIAlertControllers.\n. @ArtSabintsev I could put the logic in viewDidAppear, but I would have to know which view controller is appearing. :)\nSwizzling would work well for this case, but I'm not sure if I want to take it that far.\n. Thanks @getaaron \nI actually had something like that previously, but I realized that it can get tricky and buggy.\nGood news - I was able to get it working by making a small change to my UIWindow approach. So when I call AppUpdater.checkForUpdates(...) in the AppDelegate, the UIAlertController always appears.\nFeel free to close the issue. Thanks again!\n. @getaaron @ArtSabintsev Would you be interested in a pull request?\n. @getaaron @ArtSabintsev Thank you for considering it. I'll make some changes based on the feedback later today.\n. Made some changes that align with the feedback. Check it out!\n. I'm fairly certain that it will work on iOS 7, but I'll test and confirm.\n. Good feedback. We can remove it from memory by calling updaterWindow = nil after hiding it.\n. You're absolutely right. This is an artifact from my implementation. I used class functions instead of an instance.\nI'll remove it and add a property to the instance.\n. ",
    "heelstoo": "Hey @ArtSabintsev \nThanks for getting back to me. That's not a silly question at all! I'm brand new to iOS development. I had Siren.bundle in a subdirectory, but I guess that didn't take for some reason. I've copied it to the right place and it appears to have fixed the issue. Thank you so much for your help!\n. ",
    "liebeskind": "Thanks - was still getting the same error when upgraded to 0.4.0 through CocoaPods and removed reference to presentingViewController\nFixed the issue by adding Siren.bundle to Build Phases > Copy Bundle Resources within my primary xcode project.\n. Thanks for the feedback guys.  I'll implement your suggestions now and re-pull.\nDL\n. Should be good to go\n. ",
    "krummler": "That would be awesome! But where's the branch? :)\n. I'm not really a github expert, but I created a branch and converted it to Swift-2.0:\nhttps://github.com/krummler/Siren/tree/swift-2.0\nHope this helps you!\n. Partly, auto-conversion managed to fix some simple changes (i.e. change println() to print()), most stuff had to be done by hand. \nXcode7 also warns you more about stuff like unused vars, lets vs vars. So I also fixed warnings where they popped up :).\n. Sounds good.\nHope it's any help to you. Siren is cool, I'm happy to be of service!\n. ",
    "rex3du": "@ArtSabintsev\nPlease just use your sample project and add   \nfunc applicationWillEnterForeground(application: UIApplication) {\n        Siren.sharedInstance.checkVersion(.Immediately)\n}\nfunc applicationDidBecomeActive(application: UIApplication) {\n       Siren.sharedInstance.checkVersion(.Daily)\n }\ninto your delegate class. Try open the app and press home button and go back again. Clicking the next time button will crash the App. \n. @m-herold  your are correct. checkVersion(.Immediately) causes the issue. @ArtSabintsev  I suggest remove the example in the Setup Instruction which is using checkVersion(.Immediately) from e.g. applicationWillEnterForeground(_:). \n. ",
    "m-herold": "Hi,\nI think that checkVersion(_:) with parameter SirenVersionCheckType.Immediately should not be called from applicationWillEnterForeground(_:) and/or applicationDidBecomeActive(_:)) because that could lead to several alerts displayed on top of each other (e.g. in the situation that rex3du described) which can be a problem when not using SirenAlertType.Force (like shortly mentioned in the readme).\nWhen using any other SirenAlertType where the alert can be dismissed the hideWindow() gets called each time you close the alert - at least when using UIAlertController (iOS 8).\nIn this method Siren.updaterWindow is set to null (#515) which leads to a crash when closing the second alert (#514: \"unexpectedly found nil while unwrapping an Optional value\").\nWhen you need to call checkVersion(.Immediately) from e.g. applicationWillEnterForeground(_:) and you do not want to have several alerts on top of each other I would suggest executing the code in checkVersion(_:) only if Siren.updaterWindow is nil.\nThanks for your great work on this excellent project!\n. ",
    "danielbaldonado": "I had this problem. There's a check that happens that actually sets the alertType based on what version is being updated. You have to specify which alert Type for each update kind:\nsiren.majorUpdateAlertType = .Force\nsiren.minorUpdateAlertType = .Force\nsiren.patchUpdateAlertType = .Force\n. ",
    "mikewalkerjr": "Thank you. Works great!\n. ",
    "Automatt": "Thanks, no worries either way.\n\nOn Oct 22, 2015, at 7:54 AM, Arthur Ariel Sabintsev notifications@github.com wrote:\nHey - sorry, still a bit backlogged. Traveling a bit this week + in the midst of the push.\nI will tell you up front that I do have some reservations about adding this code in the main branch, but I'll save them until after I review everything.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/ArtSabintsev/Siren/pull/35#issuecomment-150251967.\n. I like that idea.  Most apps are probably either distributed using Enterprise OR App Store.  Mine has a weird requirement where it is expected to be both, so it's important for me to be able to switch without significant changes to the project.\n. I agree, great suggestion.\n. Chaining these together does look a lot cleaner, thanks!\n. I agree having two clusters of similar methods is not ideal.  I'll do a pass using a protocol -- I haven't used protocols nearly enough so I'd love to get your feedback on that.  Thanks!\n. \n",
    "SentulAsia": "@ArtSabintsev wondering when will this pull will appear in next cocoa pods? looking to use the translations in 2 weeks time...\n. ",
    "VahanMargaryan": "ok thanks ))\n. ",
    "mikemee": "Thanks Art!  No rush on my end. Sorry I haven't had time to help. I got a little sidetracked with https://github.com/stephencelis/SQLite.swift/ \ud83d\ude00\n. Ah, you've heard of it. Then I hasten to add that it's not my project - I just helped Stephen out a little with a recent update. The credit is all his!\n. ",
    "newarockkid": "Just saw that it was already in there. Apologies.\n. ",
    "vicsonic": "I'm sorry, I totally miss the notifications from github on my email! \ud83d\ude28\nYou're right, it doesn't make sense to have two methods for the same case.\nWould you recommend send the app store version as an optional argument? if not, I'll just call the method when the value exists.\nThank you for your comments, I appreciate them. \nI'll make the appropriate update for the PR.\nSorry for the delay.\n. Sounds fine to me, the important data we currently can't have is the new version, that should work just fine to create your own custom interface.\nThanks.\n. Perfect, thanks! \ud83c\udf89 @ArtSabintsev \n. ",
    "gasthana0": "Thanks.\n. Thanks...it should work.\n. Looks good to me.\n. thanks...I'll integrate this and let you know in case of any issue.\n. I don't need to know exact error message in my case, however if you are planning to handle and propagate custom errors then its better to have separate error manager instead of adding everything in Siren.swift.\n. This is not an error case, may be you can create another delegate method updateNotAvailable().\n. no, because i am waiting for  response from the update check request.\n. ok.\n. ",
    "stephwongwt": "It only has a .bundle and .swift file and the framework doesn't appear in the list when I try to link frameworks and libraries or embedded binaries.\n. ",
    "ajayiivo": "Hello,\nMy application is live on US app store .\nAlso, set the country code = en_US\nbut i am getting error.\nbelow is my code\nlet siren = Siren.shared\n    siren.delegate = self\n    siren.debugEnabled = true\n    siren.countryCode = \"en_US\u201d\n   siren.alertType = .option\nsiren.majorUpdateAlertType = .option\nsiren.minorUpdateAlertType = .option\nsiren.patchUpdateAlertType = .option\nsiren.revisionUpdateAlertType = .option\nsiren.checkVersion(checkType: .immediately)\n\nGetting error :\nsirenDidFailVersionCheck(error:) Error Domain=Siren Error Domain Code=1005 \"Error retrieving iOS version number as there was no data returned.\" UserInfo={NSLocalizedDescription=Error retrieving iOS version number as there was no data returned.}\nPlease help me in this .\nthank you. ",
    "irlabs": "One more thing to mention: I chose for the bundleID to be a variable which needs to be set before a version check is performed. Alternatively, we could get the bundleID automatically from the mainBundle, just as is done with the appName. However I like to have more control over which bundleID is used, as it might differ between AppStore version and debug version.\n. I'm closing this PR and opening an other ( #54 ) , based from a feature branch, to separate this PR from another feature PR. \n. Sure, in theory you don't need both the public properties appID nor bundleID. But like I described, sometimes you might want control over which bundle ID to use. (Like when e.g. the development version has a different bundle ID, but still want to link to the App Store version.)\n. @getaaron I want the delegate to receive the SirenAlertType with sirenDidShowUpdateDialog(), so I force the user into upgrading if necessary:\nNormally I only check the version .Daily from applicationDidBecomeActive, but when there is a required update, and Siren will .Force the user to upgrade, I also need to make sure that the version is checked .Immediately from applicationWillEnterForeground, in order to prevent the user from going to the App Store, not installing the update, and returning to the app.\nOnly in the case of a .Force I want the .Immediately check in applicationWillEnterForeground. In the case of .Option I only want to annoy the user once a day.\nThat is why I gave the delegate method sirenDidShowUpdateDialog() this extra parameter.\n\nOf course this make most sense in a situation where the app itself is not in control of the alertType, as is done in the master branch of my fork, where Siren can use a custom online versions file, to check which is the minimum required version, and from which version only to notify the user.\nSo if you don't want the extra parameter in the protocol method, or only in a future (major) version, that is totally up to you.\n. Other than the comment that it should be:\nswift\npublic extension SirenDelegate {\nI think it's fine.\n. This extension needs to be public, otherwise it won't work from a framework\n. ",
    "bakeddean": "Ok. I'm using Xcode 7.3 (7D175). It may be just one of those strange messages that disappears in the next version of Xcode.\n. ",
    "pavankataria": "Set the app name to whatever you wish the name to have. Although I do wonder why the author of this package doesn't grab the name of the app from the app store since it's common to change the project name after first creating it and changing the project name can have ramifications. \n. I've posted a pull request instead.\n. @ArtSabintsev Why would anyone? Because that's how it can sometimes be, the library shouldn't fail just because of this. I'm sure you can agree right?\n. @ArtSabintsev Ok sweet. Glad you merged. \n. Btw @ArtSabintsev,  could you increase the pod version of this so other users can get this pod pulled in? Like maybe 0.8.1? I'd like to have the latest pod with my merged changes in so I don't have to rely on custom edited pods.. and other issues this causes for us :D Thank you\n. Yeah even after merging that PR... that PR I sent resolves another issue... \nWhy is this comparison check being done btw if there is a comparison check already being done in another place?\n. > Also, sometimes this happens IF the user is trying to download the app the moment it the servers update. Unfortunately, the server metadata update is faster than the app being propagated to the CDNs.\nActually, no. The meta data was all up to date, I checked the results object Siren grabs, and it was in a loop because of the problem code I provided above. This happens because of the decimal 0, mathematically, they're the same number, and therefor this comparison check should return false, but instead it's returning true..\n. Ok I notice one comparison is being done to determine the type of upgrade alert that should be shown - in the showAlert() method, while the first filter in the isAppStoreVersionNewer() method acts as a way to determine if a new update is required at all based on the ascending check... hmm, this as you can see errors out in this edge case.\n. In regards to your suggestion that this might be related to a meta data sychronisation:\nThe version accepted into the app store was the new build submitted, version 16.0. The app from the app store was then installed and Siren used the local version number of the bundle which was 16.\nThis screenshot is for futher affirmation to demonstrate that this had nothing to do with synchronisation issues. \n\n. Hey, I hope you had a well rested night last night.  \nHere's the damage that was caused last night, had people posting negative reviews right away at which point we had to take Siren out, and release another version straight after back into itunes connect... hoping apple would accept right away, but the damage was already done, atleast 180 users within 10 minutes were affected. \nAt least one could say that the negative reviewers actually care? hmm. Anyway. \n\nHow's it going now anyway @ArtSabintsev ?\n. Is there a reason you're closing this issue considering this issue hasn't been resolved? I think others should be made aware that this issue exists as they are most likely to implement this package for a production environment. Do you agree hiding the issue from the dashboard - which closing an issue does as though it's been resolved - will not help?\n. That's weird, I thought I posted a response to your previous message, \nHere it is again, No. I didn't go from version 16 to 16.0, apple's itunes connect will not allow you to do that. I went from version 15.0.1 to version 16 which is a similar versioning system.\n. No problem. Great package nonetheless.\nI'll just have to stick to the same format versioning system :) i.e. should have updated to 16.0.0\nThank you for your input and your time @ArtSabintsev. \n. ",
    "royherma": "Yep, appName is what i was looking for! \nThanks guys\n. Ended up implementing a fix myself by adding a boolean isDisplaying flag. \n. Ok, seems to be related to the amount of trailing numbers in version - 2.31 > 2.4 but 2.31 < 2.40 ... adjusting to 2.40 for new version, although this does not seem to be intended behavior to me?. ",
    "troligtvis": "Yes it is the very same, I even tried the 0.7.0 version so I can input the\napp Id. But it still gave me the error, so maybe there is something else\nthat is the problem?\nfre 20 maj 2016 kl. 07:28 skrev Arthur Ariel Sabintsev \nnotifications@github.com:\n\nOn vacation, will respond soon.\nSiren uses the Bundle ID now. Is your Bundle ID the same as the one in the\nstore for your app target that is throwing this error?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/ArtSabintsev/Siren/issues/61#issuecomment-220520554\n. Sorry for late answer. Here is the appstore link [REDACTED]\n\nIs it 'safe' to share the bundle id public? I mean security reasons and such. \n. Ah ok, here is the bundle ID, com.friendoapp.Friendo\nI don't know if I made some other changes that could cause the problem to occur.\n. Thank you, that solved it! \nI used only the forceLanguageLocalization \nsiren.forceLanguageLocalization = SirenLanguageType.Swedish\nwith countryCode it works great! \nsiren.countryCode = \"se\"\n. I think both works but in different situations. \nIn the app store it is \"se\" \n. I send one before but it became redacted. But here it is -> https://itunes.apple.com/se/app/friendo-events/id1069606352\n. ",
    "croccio": "@troligtvis \nis your app available in one or some country and not all around the world? \nIf YES set the countryCode.\nFor example my app is available only in italy, so i i use this \n```\n    let siren = Siren.sharedInstance\nsiren.debugEnabled = true\n\nsiren.alertType = SirenAlertType.Force\n\nsiren.revisionUpdateAlertType = SirenAlertType.Skip\nsiren.patchUpdateAlertType = SirenAlertType.Option\nsiren.minorUpdateAlertType = SirenAlertType.Force\nsiren.majorUpdateAlertType = SirenAlertType.Force\n\nsiren.checkVersion(.Immediately)\n\n```\nit doesn't not work.\nlib call this service to verify app version https://itunes.apple.com/lookup?bundleId=com.paybay.qui\nas you can see in response results's length is zero.\nif you add \"countryCode' \n```\n    let siren = Siren.sharedInstance\nsiren.countryCode = \"it\" //BECAUSE MY APP IS AVAILABLE ONLY IN ITALY\n\nsiren.debugEnabled = true\n\nsiren.alertType = SirenAlertType.Force\n\nsiren.revisionUpdateAlertType = SirenAlertType.Skip\nsiren.patchUpdateAlertType = SirenAlertType.Option\nsiren.minorUpdateAlertType = SirenAlertType.Force\nsiren.majorUpdateAlertType = SirenAlertType.Force\n\nsiren.checkVersion(.Immediately)\n\n```\nlib call this service https://itunes.apple.com/lookup?country=it-IT&bundleId=com.paybay.qui and as you can see your app is returned.\nlet me know ;)\n. sv = el salvador (te quiero mi amor XD XD) - https://www.youtube.com/watch?v=Yrtpl9aDDrk\nse = swedish\n. ",
    "mosn": "Thanks for the prompt response. \nHow can I test the Siren if my app is not in the app store yet ? \n. ",
    "jsoendermann": "<key>NSAppTransportSecurity</key>\n    <dict>\n        <key>NSExceptionDomains</key>\n        <dict>\n            <key>localhost</key>\n            <dict>\n                <key>NSAllowsArbitraryLoads</key>\n                <true/>\n                <key>NSExceptionAllowsInsecureHTTPLoads</key>\n                <true/>\n                <key>NSIncludesSubdomains</key>\n                <true/>\n            </dict>\n        </dict>\n    </dict>\nWhich Domain would I have to add to make it work?\n. Thanks!\n. ",
    "nmizoguchi": "I'm the one who should be thanking you for saving me a lot of time! :) I'm Glad I could help in some way.\n. ",
    "roeemins": "Oh, forgot that some just use inc. int num.\nclosing issue..\n. ",
    "jinjic": "No rush :) \nSent from my iPhone\n\nOn Jun 24, 2016, at 12:01 AM, Arthur Ariel Sabintsev notifications@github.com wrote:\nThanks man. I'm going to merge your stuff after I write some tests. Should be done in the next hour.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "Tulleb": "Ok great! Thanks a lot. Would you like some help with a PR?\n. Ok, thanks once again @ArtSabintsev!\nIf you could make all your work in a \"swift3\" branch, it would already allows us to test it with CocoaPods and help you out meanwhile Xcode 8 get released.\n. I'll point directly at it with :branch.\n. #75 \n. Thanks a lot for your work @ArtSabintsev.\nNew issues just appeared with the released of Xcode8b6 yesterday.\nFeel free to ask if you need any help with this?\n. ",
    "tbaranes": "Yeah, I mean for the Mac App Store. It won't be useful for Siren to support apps outside of the app store since it's a fully different process.\nI know it's currently only supporting iOS App Store, but since some projects ships apps for the both store, it would be worth it to support Mac App Store too!\n. iVersion does this. The main difference between Siren and iVersion is the final output: iVersion displays the full changelog whereas Siren displays just a message. \nFor the alerts, you can replace the UIAlertController by a NSAlert, the API is straight forward, and the output quiet similar.\n. I fully understand that! I will take a look into this when I will have time.\nAnyway, thanks for creating and maintaining that awesome library \ud83d\udc4d \n. ",
    "arlo-egg": "\ud83d\udc4d I expected you would want to.\nIs there a way to make a PR to a branch which doesn't currently exist? I do not know how.\n. ",
    "tommysusanto": "Yes. The update notification was popping up all the time for no reasons, even if my app is already up to date. But then i realized i should probably match the Version number in Xcode to the appstore version number... Is that correct? Thanks\n. ",
    "thii": "Line 2, replaced ph\u00ean with phi\u00ean.\n. ",
    "pradeep-chauhan": "swift 2.3\n\nPradeep Chauhan\n(Mob.) +91-9829158345\nwebsite: https://branded.me/pradeep-chauhan\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\nOn Wednesday, August 31, 2016 at 5:36 PM, Arthur Ariel Sabintsev wrote:\n\nWhich branch?\nmaster\nswift2.3\nswift3\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub (https://github.com/ArtSabintsev/Siren/issues/85#issuecomment-243743816), or mute the thread (https://github.com/notifications/unsubscribe-auth/AMaP27jcsAUEDtFjLB1t7eDVBduo9MDFks5qlW5IgaJpZM4JxfmO).\n. It\u2019s resolved by last night.\nis there need to add my app url for app store or it will automatically do all this things.\n\n\nPradeep Chauhan\n(Mob.) +91-9829158345\nwebsite: https://branded.me/pradeep-chauhan\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\nOn Thursday, September 1, 2016 at 11:02 AM, Arthur Ariel Sabintsev wrote:\n\nI am not seeing this issue in Siren's swift2.3 branch in Xcode 8b6. The sample project compiles and runs without any issues.\nAre you using Xcode 8b6?\nWhat version of CocoaPods are you using?\nI'd recommend pointing to cocoapods/master (and not using 1.1.0.beta.1 if you're doing development in Xcode 8.  \nWhat does the line of code importing siren in your Podfile look like?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub (https://github.com/ArtSabintsev/Siren/issues/85#issuecomment-243980285), or mute the thread (https://github.com/notifications/unsubscribe-auth/AMaP27ZwWUA7sw4Df1F4XgW5L17HqgGMks5qlmNQgaJpZM4JxfmO).\n. You check with if..else or use guard. \nPlease avoid force wrapping.\n\n--\nPradeep Chauhan\n(Mob.) +91-9829158345\nwebsite: https://branded.me/pradeep-chauhan\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\nOn Wednesday, April 26, 2017 at 4:16 PM, Ilham Malik Ibrahim wrote:\n\nhow i can solved this i'm using swift 2.3\nInitializer for conditional binding must have Optional type, not 'String'\nguard let url = components.URL, // This problem\nurlString = url.absoluteString\nwhere !urlString.isEmpty else { // https://openradar.appspot.com/25382891\nthrow SirenErrorType.MalformedURL\n}  \n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub (https://github.com/ArtSabintsev/Siren/issues/85#issuecomment-297350283), or mute the thread (https://github.com/notifications/unsubscribe-auth/AMaP2w5grq0zMkEZk0MAi1nvt7GQbQMTks5rzyCOgaJpZM4JxfmO).\n\n. My app was live around 4.57 AM and i was check my app at 9.30 the issue is same.\n\nPradeep Chauhan\n(Mob.) +91-9829158345\nwebsite: https://branded.me/pradeep-chauhan\nSent with Sparrow (http://www.sparrowmailapp.com/?sig)\nOn Tuesday, October 18, 2016 at 5:45 PM, Arthur Ariel Sabintsev wrote:\n\nIt's a bug on the App Store side. If the app just gets updated on the App Store side, siren automatically knows about it. Unfortunately, it takes about 20 to 30 minutes for the app to actually be made available on the App Store side even after the JSON says it's available. This is why it may act like a false positive sometimes.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub (https://github.com/ArtSabintsev/Siren/issues/95#issuecomment-254489577), or mute the thread (https://github.com/notifications/unsubscribe-auth/AMaP2-x5frktPwhc8071Z1HBOUjAYH6cks5q1LhXgaJpZM4KZcB0).\n. \n",
    "vaibhav-varshaaweblabs": "I'm getting the same issue with Swift 2.3 branch and XCode Version 7.3.1 (7D1014)\nPlease help me as soon as possible\n. ",
    "swangy": "is there a version that compiles on xcode 7.3.1?  master branch DEFINITELY doesnt work on xcode 7\n. ",
    "ilhammalik": "how i can solved this i'm using swift 2.3\nInitializer for conditional binding must have Optional type, not 'String'\n        guard let url = components.URL, // This problem \n            urlString = url.absoluteString\n            where !urlString.isEmpty else { // https://openradar.appspot.com/25382891\n                throw SirenErrorType.MalformedURL\n        }\n. ",
    "gbertb": "2.3 branch\nxcode Version 7.3.1\nCocoapods install from your guide\n. Here's a relevant thread from the apple forums:\nhttps://forums.developer.apple.com/thread/52767\nbasically apple's response:\n_The App Store is global in nature, and it may take time for an update to an app to be available in any given store front in any given region.\nI would recommend versioning your server endpoint so that a a version of an app is tied to a version of your server release. For example, you may want to use URLs such as https://example.com/v1/endpoint rather than https://example.com/endpoint. Each version of your app can call the appropriate endpoint, and your server can also report that a new version is available.\nThis also makes it friendlier to your customers who may not be in a position to update at the moment they want to use your app._. Thanks for the quick reply. \nThe user was able to delete the app, and reinstall to the latest version. Would that still makes sense if the user was able to download the latest version from the store directly?\n@ArtSabintsev . Gotcha, thanks!. Great work! @ArtSabintsev . ",
    "huguesbr": "@ArtSabintsev ok no pb thx\n. ",
    "fassko": "Translations were not correct. I'm Latvian, so no worries. :)\n. ",
    "mamouneyya": "This is very annoying. I think it should be solved in the library itself.\n@royherma How would you detect if it's currently displayed? Any reliable way other than manually tracking this using sirenDidShowUpdateDialog(alertType:), sirenUserDidLaunchAppStore(), sirenUserDidSkipVersion() and sirenUserDidCancel?. Well, I'm a little bit confused now. I followed the instructions by calling checkVersion method at the following AppDelegate's methods:\n```\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n    //...\nSiren.sharedInstance.checkVersion(checkType: .immediately)\n\nreturn true\n\n}\n\nfunc applicationDidBecomeActive( application: UIApplication) {\n    Siren.sharedInstance.checkVersion(checkType: .daily)\n}\n\nfunc applicationWillEnterForeground( application: UIApplication) {\n    if Defaults[.AppUpdateAlertType] == .force {\n        Siren.sharedInstance.checkVersion(checkType: .immediately)\n    }\n}\n```\nHowever, the library seems to be presenting an alert with each call of those even though a one or more are already presented (e.g. I'm getting three alerts when in force mode).... It's not published to the store yet, so I am trying with the bundle identifier 'com.apple.itunesconnect.mobile' and version 1.0, as suggested in the README file. The problem is not with the fact that the library does show an alert (it should do so).. the problem is that it displays another alert though a one is already displayed.. ending up with three stacked alerts.. I can confirm that the update fixed the issue for me. Thank you!. Well, this makes some sense. I guess I would go with your suggestion or a somehow modified version of it... ",
    "malcommac": "Because I've tried to run test (swift test) and it does not work due to missing .swift bundle.\nThank you anyway :)\n. ",
    "yoyoyoseob": "\nSo this is the error that I get when I try and compile the project.\nAnd below is a screenshot of how I am setting up the Pod -- please let me know if you see any issues!\n\nOH! I forgot to mention that we are currently using Xcode 7...\n. I don't believe there is full compatibility >.< \nWe were actually trying to see if there was an old commit with Swift2.2 code that we could use and we were unable to locate one\n. I could've sworn we had tried using version 0.9.5 before and it hadn't worked but of course now everything is functioning as expected >.>\nThank you for all of your help Arthur!!\n. ",
    "LuciusLu": "@ArtSabintsev \nOH~Sorry, it working now.\nMaybe I just upgrade xcode7 to xcode8 then make this problem.\nPlease close it, I like your project, please continue to update.\n. ",
    "CoolHandLuke88": "I've noticed that app store has bug where it doesn't update the version. It may be bug on the app store. I don't even use this framework for updating, but curious of using the library. Just heads up if anyone else can confirm.\n. ",
    "lensbox": "Hello,\nI've tried using your library for the first time on iOS10 and I have the same problem.\nThe error code says : \n[Siren] Error retrieving iOS version number as there was no data returned.\n[Siren] Error parsing App Store JSON data.\nDo you know what is happening ? Thank you.\n. If it is the bundle id you need, it is com.chamberlan.myChamberlan.\n. Version 1.0 is here, only available in the french store for now : https://itunes.apple.com/us/app/chamberlan/id1097726117?l=fr&ls=1&mt=8\n. In fact, I did not. Now everything is working fine. Thanks a lot !\nThis library is really useful !\n. ",
    "steipete": "Jenkins issues seem unrelated. Gave you a shoutout really nice lib! We use it for http://pdfviewer.io\n. ",
    "steviki": "All feedback addressed.\n. Unfortunately not, preferredStatusBarStyle is a get-only property. It needs to be overridden.\n. Already done in https://github.com/ArtSabintsev/Siren/pull/97/commits/2e3d270a38f150f9706e87d2de961e4c9e0b19cf\n. ",
    "kwstasna": "Its like that because i changed the developer account cause of the error and i didnt know how to change it back. So it changed everything in all of these files.\nAlthough if you check is all the same as your master branch and the changes about Greek language are at the bottom.\nI'm new to github and didn't know how to change it back!\nAlthough gonna make it again !\n. ",
    "ChrisixFlash": "@ArtSabintsev Oh I'm very sorry, I'll delete the Greek one then and add the tests.. Great! \ud83d\ude42 . @ArtSabintsev Thank you, I was very glad I could help!. ",
    "xedla": "I did \u201ca single view application\u201d from Xcode template.\ncreated this simple podfile:\nUncomment this line to define a global platform for your project\nplatform :ios, '8.0'\ntarget 'tryme' do\n  use_frameworks!\npod 'Siren'\nend\nafter pod install\nAnalyzing dependencies\nDownloading dependencies\nInstalling Siren (1.1.0)\nGenerating Pods project\nIntegrating client project\n[!] Please close any current Xcode sessions and use tryme.xcworkspace for this project from now on.\nSending stats\nPod installation complete! There is 1 dependency from the Podfile and 1 total\npod installed.\nopen xcode \nWhat is my mistake? \nthanks\n\nOn 23 Nov 2016, at 19:49, Arthur Ariel Sabintsev notifications@github.com wrote:\nThe library is also in Swift 3.\nAre you installing with this command: pod 'Siren'\nIf so, it should just work.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/ArtSabintsev/Siren/issues/104#issuecomment-262600316, or mute the thread https://github.com/notifications/unsubscribe-auth/AKdzl6kiVJcb-AinVJvNW4K9HK-J_aM6ks5rBIq8gaJpZM4K64hw.\n\n\n. ",
    "wud147": "@ArtSabintsev I'll add sample app and test case in the next few days, but I'm a little confused which directory should I put it in , as lots of tests will be the same as the iOS, so i suggest adjust the structure of directory as follows:\n|root\n  - iOS Sample App\n  - OSX Sample APP\n  - Siren\n  - SirenTests\n  - other config files\nhow about it ?\n. @ArtSabintsev  Here is the sample app , just copy some code from iOS Sample. \nhttps://github.com/wud147/Siren-OSX-Sample\nany question , just leave message in here.^_^. ",
    "bystritskiy": "It will be nice feature:(. ",
    "manishpathak99": "Using Xcode Version 8.1 ,  I am facing same issue Compilation error -\n```\nlet appName = \"My App\"\nsiren.appName = appName\n```\nUndefined symbols for architecture x86_64:\n  \"direct field offset for Siren.Siren.(appName.storage in _7DFB1BC200A6C64FBED860A3A8153B65) : Swift.String?\", referenced from:\n      AppDelegate.setupSiren () -> () in AppDelegate.o\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n. ",
    "christoph-peters": "I forgot the country code:\nsiren.countryCode = \"se\"\nWould be nice if that could be highlighted  in the Readme.. ",
    "zongmumask": "I'd love to.I will update the README file whenever you make any big changes to the English README.You can send me an email when you update the English README.. Thank you! I add a Translated by section at the bottom of both README and README.zh_CN. ",
    "J-Arji": "@ArtSabintsev \nI did not do it in the App Store. But soon I will. ",
    "kiraninfogird": "@ArtSabintsev,,,,\n// for swift 3 : it will give me below error of version : whats the solution for that????\nsirenDidFailVersionCheck(error:) Error Domain=Siren Error Domain Code=1005 \"Error retrieving iOS version number as there was no data returned.\" UserInfo={NSLocalizedDescription=Error retrieving iOS version number as there was no data returned.}\n. Region/Country :  India\nbundle ID : com.IIPL.HRGirdESS. @ArtSabintsev:\n1.Ok, did you set the country code to India?\n-> how set it and where???\n\n\nAnd is your app live in the store?\n-> YES\n\n\nis there any problem with  running app on simulator or on iPhone.\n. Thanks,,,\n\n\ni was done that.....!\ud83d\udc4d\nOn Fri, Jul 21, 2017 at 6:07 PM, Arthur Ariel Sabintsev \nnotifications@github.com wrote:\n\nAnd is your app live in the store?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/ArtSabintsev/Siren/issues/117#issuecomment-316989858,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMib4mKUGlAjHlDVvWvPzDcEG7wkhAWOks5sQJudgaJpZM4Llp7U\n.\n. Yes....!\n\nThanks Again for your help.....\nOn Sat, Jul 22, 2017 at 7:49 PM, Arthur Ariel Sabintsev \nnotifications@github.com wrote:\n\nEverything works now?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/ArtSabintsev/Siren/issues/117#issuecomment-317186623,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMib4nIcGgVEPtq3N1Hql8bwGpWpU7Boks5sQgTbgaJpZM4Llp7U\n.\n. \n",
    "sonicdoe": "I think this may have something to do with how GitHub proxies image URLs. Could you verify if the actual link (https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat) does work for you?\nAnyway, I have purged the image from Camo\u2019s cache, so it might be working for you now.. ",
    "glm4": "@ArtSabintsev Im having the same problem in the AppStore. The lookup returns the latest version and also the AppStore app shows the option to update the current version, so this means the new version is ready in my territory. \nIm using:\nsiren.majorUpdateAlertType = .Force\n  siren.checkVersion(.Immediately) \nBut the update alert still does not appear.\nTesting in the simulator it is shown correctly though.. @ArtSabintsev Im using the swift 2.3 branch.\npod 'Siren', :git => 'https://github.com/ArtSabintsev/Siren.git', :branch => 'swift2.3'\nShows 0.9.5 in Podfile.lock. Update: Running the exact same thing in a device and a simulator and only works in the simulator.. @ArtSabintsev Thanks, it is working now! I will open the PR soon.. @ArtSabintsev Im going to close the issue. ANy other important fix that I should copy from the master branch?. ",
    "bre7": "Have you tried retrieving the JSON data manually and linting it ?\nURL: https://itunes.apple.com/lookup?bundleId=BUNDLE_ID\nIs your app available in the US App Store ? You need to specify the country code otherwise.\n\n/// The region or country of an App Store in which your app is available.\n    /// By default, all version checks are performed against the US App Store.\n    /// If your app is not available in the US App Store, set it to the identifier of at least one App Store within which it is available.\n    public var countryCode: String?. \ud83d\udc4d There should be a noticeable alert in the README about it. \n",
    "rmvz3": "Oops! This  is embarrassing. You're right. My client only enabled the local Appstore. It works like a charm now.\nThank you.. ",
    "yasuradodo": "Temporally I just comment out a line like this:\n// siren.debugEnabled = true\n. I'm using \"1.1.3\". I'm glad to hear you say that\nplease check my repo\n. Thank you @calebd @ArtSabintsev \n. ",
    "calebd": "After some digging, this appears to be a Swift 3.0.x Whole Module Optimization bug. Switching precompiled  framework targets to -Onone allows the build to complete successfully. It looks like this issue is fixed in the latest Xcode beta (8.3 beta 2).. ",
    "tatimagdalena": "I've seen this should be fixed on version 1.2.2, but I came across the same issue trying to use it from Carthage now.\nIt is giving me the same kind of error when trying to use differentiated Alerts for Major, Minor and Patch, and when trying to set appName.... My first try was with Xcode 8.2.x. I tried again with 8.1 just to provide you with the error output.\nI'm using the most recent version of Carthage (0.20.1), but apparently it was the Xcode version. I updated it  now and everything is working.\nThanks for your attention!. ",
    "iOSDias": "The issue has not been already fixed, I use version 2.0.8 and I have the same issue - After updating app through App Store when user open it, the alert still shows but app has the latest version. After tapping update button and entering to Appstore there is just open button.. ",
    "need2edit": "Thank you @ArtSabintsev sorry I didn't respond earlier on! Didn't see this issue in our last 2 deployments which had 3.2.0. Thanks again!. ",
    "danielchangsoojones": "I am still having this problem. I am on version 3.2.0, and I have not set any showAlertAfterCurrentVersionHasBeenReleasedForDays . Therefore, it should be defaulting to 1 day. However, I still have some users where it tells them to update and then they go the store and it says open because they already seem to have the most updated version.. ",
    "shshlomi": "Hi,\nCan you please give us a ball park figure so we'll be able to decide whether to update a new version with a weakly alert update  or wait for the fix.\nThank you.. Fantastic!! Thank you for the quick responsiveness @ArtSabintsev \ud83d\udc4d . ",
    "aliasad106": "I think you should add a warning for force update. I get this is Apple's slowness caused it but What developers expect is a quick update but sometimes apple's API gives response with version available whereas the version is still not available for update in Appstore. This caused a lot of frustration on User's end and the app loses some good users. Please add some documentation for that. Thanks. ",
    "txaiwieser": "Sure, i was taking a look at this right now, but it seems this long strings are not being tested (in any language).\nThe only strings being tested are the short ones, like \"Update Available\", \"Next time\", \"Skip this version\" and \"Update\".\nDo you think we should added them (in all languages) in a different PR?. ",
    "Lengo46": "Sure,\n```\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n\n    //Siren Settings\n    let siren = Siren.shared\n    siren.debugEnabled = false\n    siren.countryCode = \"NL\"\n    siren.alertType = .option\n    siren.checkVersion(checkType: .immediately)\n\n    return true\n}\n\nfunc applicationWillEnterForeground(_ application: UIApplication) {\n    Siren.shared.checkVersion(checkType: .immediately)\n}\n\nfunc applicationDidBecomeActive(_ application: UIApplication) {\n    Siren.shared.checkVersion(checkType: .daily)\n}\n\n```. Thanks for the help, but I still get the alert on a real device, although this version is running higher. (doesn't even matter if I update the version to 1.03, 1.1, 1.3, 3.0.). I've updated the appstore version to 1.3 (to make sure it isn't the naming), still doesn't work. Please reopen.. com.metersenweters.streetholder. I think i'm doing something wrong because I have different outcome:\nWhen I change the version of the app to 1.2 and build to the device, I DO get the alert.\nWhen I change the version of the app to 1.3 and build to the device, I DO get the alert.\nWhen I change the version of the app to 1.3.1 and build to the device, I DO get the alert.\nWhen I change the version of the app to 1.4.0 and build to the device, I DO get the alert.\nBasically i'm always getting the alert. I'm using a iPhone 6s. . Found the problem. Framework was looking at the (wrong) localized CFBundleShortVersionString.. No it was my error, I had a hard-coded version number inside my InfoPlist.strings (localization file) for the Dutch language. The simulator was running EN, that's why my real-device kept giving the alert. Thanks for your help.. ",
    "talkabhishek": "@ArtSabintsev \nThanks for the help.. ",
    "Oyashirox": "I feel like this is a deal-breaker. Using the delegate prevent me from using the launchAppStore(), so I would have to duplicate a lot of code. Let the user override the message and handle the localization seems acceptable.. I think so, we could customize the way we want to present the message to the user, and continue with the nominal flow. What do you think ?. So it appears to be more complicated than expected. I would need to create a custom window and handle it as you do, so that's still too much code duplication in my opinion. Do you think a message and title override would be too disruptive ?. Simply because my client wants to add a warning in the popup, and that\nneeds to be translated in the officially supported languages.. ",
    "simonlinj": "oops my bad... I was testing the other way around =P \nby enabling the debug option I got the reason I wasn't getting the alert \"Your app has been released for 0 days, but Siren cannot prompt the user until 1 days have passed.\"\nSorry for bothering.\n. ",
    "xiaoxiongke": "Great thanks,I think swift with higher version is the future,i'll switch to swift 3 soon~:). ",
    "nixnoughtnothing": "Thanks for the quick updates!  \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d. Sure thing! . Thanks for merging it! Fixed harpy as well. https://github.com/ArtSabintsev/Harpy/pull/177. Thanks again!\n. @ArtSabintsev\nHey, thanks for taking the time to look and your feedback.\nJust for your reference, in case release notes are long, it is presented like this:\nhttps://gyazo.com/21cf4f4c5af9ebcb5a28076ca6d96d40\nAnd I also have a branch which is just simply passing the release notes string to a delegate method for those who want to define custom UI. It might be more customizable and appropriate in this case. \nSo developers can:\n- create custom UI\n- decide when it should be presented \n(*Only if they set checkType to .daily or .weekly, the delegate method is NOT called on every single run through. )\nPlease let me know what you think.\n. ",
    "ufosky": "Maybe this is an issue on iOS 9, I have tested on iOS 10 and did not see this message.. ",
    "willyaako": "This is my bundleID  \n\n[bundleID]. Sorry, I forget to tell you countryCode.\nI have set the country code in Taiwan.\nsiren.countryCode = \"TW\". The App Store JSON return v1.2 in txt.\nBut in the app, it return v1.0.\nThat is very strange.\n\n. Magically, It change to v1.2 now.....\nI have no idea why it happened XD. ",
    "ndduong97": "+1 I'm having the same issue. Yeah I just found that method too. Do you think it's possible that you push this out with the next version too? That would be so helpful :). ",
    "JussiSuojanen": "Yes, but I'd rather have an enumeration than an String. This way I don't have to do any String handling to identify the update type.\nSomething like this:\nenum UpdateType {\n    case major\n    case minor\n    case patch\n    case revision\n}. Ok, I try find some time later this week to do the PR.. I cannot mark swift protocol member as deprecated: \"Siren/Sources/SirenDelegate.swift:49:6: Protocol members can only be marked unavailable in an @objc protocol.\"\nShould I mark it deprecated in \"public extension SirenDelegate\"?. done. ",
    "SahSih": "Thanks a lot, sir! . ",
    "jakunico": "Yes, we have the same configuration as the one in the screenshot you posted.\nWe already submitted a new build (1.4.1) disabling Siren. I just re-enabled and debugged it, now is working as expected:\n[Siren] Decoded JSON results: SirenLookupModel(results: [Siren.SirenLookupModel.Results(appID: ****, currentVersionReleaseDate: \"2017-10-09T14:48:55Z\", minimumOSVersion: \"10.0\", version: \"1.4.1\")])\nSo not sure what happened, maybe it was a temporal behavior of iTunes API. Closing this, will re-open if it happens again.\nThanks!. ",
    "wy1024": "@ArtSabintsev Hi I am confused about your answer above. What is the right way to use version and build number so that Siren understands?\nMy app is promoting to update everytime to update to 1.0.1, while the installed one already has version 1.0.1, build (3). . @ArtSabintsev Thanks for the quick reply!\nDon't have my mac right now but the screenshot like the one above looks like:\nversion 1.0.1\nbuild 3\nIn info.plist:\n<key>CFBundleShortVersionString</key>\n    <string>1.0.1</string>\n<key>CFBundleVersion</key>\n    <string>3</string>\nMy bundle id is \n\nClick to expand\n  com.starry.youshi\n\n. Its only in the US and I've not set the country code.. Oh I think that might be the problem.. I made typo in itunesconnect 1.01 but the app is actually 1.0.1 \nWhat would you suggest for me to do now? Should I create 1.0.2 in both app & itunesconnect and republish? Because I'm not sure if 1.01 is > 1.0.x, if so I might need to skip directly to 1.2?\n. If i'm understanding semantic versioning correctly, the current version 1.01 is same as 1.1.\nTherefore i need to publish to a higher version than that. Is that correct? Thanks for bearing with my beginner knowledge \ud83d\ude04 . btw i'm using the swift 3 version pod \"siren\". source 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '10.0'\nuse_frameworks!\ntarget \u2018myprojectname\u2019 do\n  use_frameworks!\n ........\n  pod 'Siren'\n   ........\nend\n. let url = try iTunesURLFromString()\nThis line gives the correct url, but when url response is fetched, is shows version 1.3 somehow\nThe full siren code looks like this:\n```\n    func performVersionCheck() {\n        do {\n            let url = try iTunesURLFromString()\n            let request = URLRequest(url: url, cachePolicy: .reloadIgnoringCacheData, timeoutInterval: 30)\n            URLSession.shared.dataTask(with: request, completionHandler: { [unowned self] (data, response, error) in\n                self.processResults(withData: data, response: response, error: error)\n            }).resume()\n        } catch let error as NSError {\n            postError(.malformedURL, underlyingError: error)\n        }\n    }\nfunc processResults(withData data: Data?, response: URLResponse?, error: Error?) {\n    if let error = error {\n        self.postError(.appStoreDataRetrievalFailure, underlyingError: error)\n    } else {\n        guard let data = data else {\n            self.postError(.appStoreDataRetrievalFailure, underlyingError: nil)\n            return\n        }\n\n        do {\n            let jsonData = try JSONSerialization.jsonObject(with: data, options: JSONSerialization.ReadingOptions.allowFragments)\n            guard let appData = jsonData as? [String: Any],\n                self.isUpdateCompatibleWithDeviceOS(appData: appData) else {\n\n                    self.postError(.appStoreJSONParsingFailure, underlyingError: nil)\n                    return\n            }\n\n            DispatchQueue.main.async {\n                // Print iTunesLookup results from appData\n                self.printMessage(message: \"JSON results: \\(appData)\")\n\n                // Process Results (e.g., extract current version that is available on the AppStore)\n                self.processVersionCheck(withResults: appData)\n            }\n\n        } catch let error as NSError {\n            self.postError(.appStoreDataRetrievalFailure, underlyingError: error)\n        }\n    }\n}\n\nfunc processVersionCheck(withResults results: [String: Any]) {\n    storeVersionCheckDate() // Store version comparison date\n\n    guard let allResults = results[\"results\"] as? [[String: Any]] else {\n        self.postError(.appStoreVersionNumberFailure, underlyingError: nil)\n        return\n    }\n\n    /// Condition satisfied when app not in App Store\n    guard !allResults.isEmpty else {\n        postError(.appStoreDataRetrievalFailure, underlyingError: nil)\n        return\n    }\n\n    guard let appID = allResults.first?[\"trackId\"] as? Int else {\n        postError(.appStoreAppIDFailure, underlyingError: nil)\n        return\n    }\n\n    self.appID = appID\n\n    guard let currentAppStoreVersion = allResults.first?[\"version\"] as? String else {\n        self.postError(.appStoreVersionArrayFailure, underlyingError: nil)\n        return\n    }\n\n    self.currentAppStoreVersion = currentAppStoreVersion\n\n    guard isAppStoreVersionNewer() else {\n        delegate?.sirenLatestVersionInstalled()\n        postError(.noUpdateAvailable, underlyingError: nil)\n        return\n    }\n\n    guard let alertDays = showAlertAfterCurrentVersionHasBeenReleasedForDays else {\n        showAlertIfCurrentAppStoreVersionNotSkipped()\n        return\n    }\n\n    guard let currentVersionReleaseDate = allResults.first?[\"currentVersionReleaseDate\"] as? String,\n        let daysSinceRelease = Date.days(since: currentVersionReleaseDate),\n        daysSinceRelease >= alertDays else {\n            return\n    }\n\n    showAlertIfCurrentAppStoreVersionNotSkipped()\n    showAlertAfterCurrentVersionHasBeenReleasedForDays = nil\n}\n\nfunc iTunesURLFromString() throws -> URL {\n    var components = URLComponents()\n    components.scheme = \"https\"\n    components.host = \"itunes.apple.com\"\n    components.path = \"/lookup\"\n\n    var items: [URLQueryItem] = [URLQueryItem(name: \"bundleId\", value: Bundle.bundleID())]\n\n    if let countryCode = countryCode {\n        let item = URLQueryItem(name: \"country\", value: countryCode)\n        items.append(item)\n    }\n\n    components.queryItems = items\n\n    guard let url = components.url, !url.absoluteString.isEmpty else {\n        throw SirenError.malformedURL\n    }\n\n    return url\n}\n\n. I did install siren a long time ago when swift 4 wasnt born. So I think that might now be the problem.\nHere is the debug message. just did an update, checking to see how it goes..\nInstalling Siren 3.1.7 (was 1.2.5)\n```. no luck, with new update its still failing. oh actually, its working now. The update somehow fixed the problem, i'm still having a hard time understanding the bug though, because the processResult function was taking the same response from the url, but somewhere its caching the result, I guess this means users who installed v1.3 will never get the update.. is that true?. Thanks!. ",
    "lauri-koli-vincit": "You're welcome!. ",
    "Kalikanth": "Sorry for that. ",
    "NSemakov": "Hi. We want to decrease number of dynamic frameworks in our apps to reduce app's launch time. XCode 9 now allow this.. Nope. Other changes don't needed). ",
    "PH9": "Thank you @ArtSabintsev . ",
    "AttiaMo": "@ArtSabintsev Updated!\nYou're always welcome . ",
    "fahanas": "print(siren.currentAppStoreVersion\nios getting NIL Value,\nPlease help. ",
    "luisfuertes": "I had it working.\nBut with version pod 'Siren', :git => 'https://github.com/ArtSabintsev/Siren.git', :branch => 'swift3.2' # Swift 3.2 appear this error:\nSiren Use of unresolved identifier 'SirenAlertMessaging'\nAny idea? (Xcode 10.1). ",
    "AgranatMarkit": "It\u2019s productowners requirement. Currently she changed it to immideatly. But for situations like this, custom period would be very helpful.. The requirement was 3 days.. @ArtSabintsev thanks for explaining. I understand how it works. The usecase that i'm was faced, is to show alert 3 days later if user tap skip button. So in this usecase, how i understand i would need custom period instead of setting showAlertAfterCurrentVersionHasBeenReleasedForDays.. ",
    "shaobaili3": "Thanks!. ",
    "bawelter": "Release notes are not required so make sure to test when release notes key is not present in the JSON response. Yes I just had the issue when I uprgraded. Probably occurs if you don\u2019t populate any release notes. ",
    "yang511": "Ah, Today I published 2nd version\n. Maybe tomorrow the app will work correctly?\nI set daily check\n. ",
    "Coeur": "@ArtSabintsev  I've redone the commit as https://github.com/Coeur/Siren/commit/46551e315d20c4ac0ad31d256d32d3f117547a39 on the same branch, you may re-open the pull request.. ",
    "JQHee": "Crashed: NSOperationQueue 0x16dbf0f0 :: NSOperation 0x16d92bd0 (QOS: DEFAULT)\n0  libswiftCore.dylib             0x28bcda2 swift_isUniquelyReferenced_nonNull_native + 5\n1  libswiftFoundation.dylib       0x2d30534 swift_rt_swift_isUniquelyReferenced_nonNull_native + 24\n2  libswiftFoundation.dylib       0x2d30534 swift_rt_swift_isUniquelyReferenced_nonNull_native + 24\n3  Siren                          0x233ef2c T05SirenAAC14processResults33_7DFB1BC200A6C64FBED860A3A8153B65LLy10Foundation4DataVSg04withM0_So11URLResponseCSg8responses5Error_pSg5errortF + 428\n4  Siren                          0x233ed2c _T05SirenAAC19performVersionCheck33_7DFB1BC200A6C64FBED860A3A8153B65LLyyFy10Foundation4DataVSg_So11URLResponseCSgs5Error_pSgtcfU + 360\n5  Siren                          0x2349b6c _T05SirenAAC19performVersionCheck33_7DFB1BC200A6C64FBED860A3A8153B65LLyyFy10Foundation4DataVSg_So11URLResponseCSgs5Error_pSgtcfU_TA + 32\n6  Siren                          0x233f4c0 _T010Foundation4DataVSgSo11URLResponseCSgs5Error_pSgIegxxx_So6NSDataCSgAGSo7NSErrorCSgIeyByyy_TR + 292\n7  CFNetwork                      0x1d6a7c5d __75-[__NSURLSessionLocal taskForClass:request:uploadFile:bodyData:completion:]_block_invoke + 16\n8  CFNetwork                      0x1d6baa7d __49-[__NSCFLocalSessionTask _task_onqueue_didFinish]_block_invoke + 132\n9  Foundation                     0x1da9db01  + 8\n10 Foundation                     0x1d9f3aef  + 146\n11 Foundation                     0x1d9e5fe7  + 770\n12 Foundation                     0x1da9fd39  + 190\n13 libdispatch.dylib              0x1c85259d _dispatch_queue_serial_drain + 854\n14 libdispatch.dylib              0x1c848b71 _dispatch_queue_invoke + 886\n15 libdispatch.dylib              0x1c8541b5 _dispatch_root_queue_drain + 326\n16 libdispatch.dylib              0x1c85400f _dispatch_worker_thread3 + 106\n17 libsystem_pthread.dylib        0x1c9fa87d _pthread_wqthread + 1040\n18 libsystem_pthread.dylib        0x1c9fa45c start_wqthread + 8. Crashed: NSOperationQueue 0x15f30290 :: NSOperation 0x15f63a90 (QOS: DEFAULT)\n0  libswiftCore.dylib             0x28f7da2 swift_isUniquelyReferenced_nonNull_native\n1  libswiftFoundation.dylib       0x2d7b534 swift_rt_swift_isUniquelyReferenced_nonNull_native\n2  libswiftFoundation.dylib       0x2d7b534 swift_rt_swift_isUniquelyReferenced_nonNull_native\n3  Siren                          0x2379f2c (Missing)\n4  Siren                          0x2379d2c (Missing)\n5  Siren                          0x2384b6c (Missing)\n6  Siren                          0x237a4c0 (Missing)\n7  CFNetwork                      0x1d6a7c5d __75-[__NSURLSessionLocal taskForClass:request:uploadFile:bodyData:completion:]_block_invoke\n8  CFNetwork                      0x1d6baa7d __49-[__NSCFLocalSessionTask _task_onqueue_didFinish]_block_invoke\n9  Foundation                     0x1da9db01 (Missing)\n10 Foundation                     0x1d9f3aef (Missing)\n11 Foundation                     0x1d9e5fe7 (Missing)\n12 Foundation                     0x1da9fd39 (Missing)\n13 libdispatch.dylib              0x1c85259d _dispatch_queue_serial_drain\n14 libdispatch.dylib              0x1c848b71 _dispatch_queue_invoke\n15 libdispatch.dylib              0x1c8541b5 _dispatch_root_queue_drain\n16 libdispatch.dylib              0x1c85400f _dispatch_worker_thread3\n17 libsystem_pthread.dylib        0x1c9fa87d _pthread_wqthread\n18 libsystem_pthread.dylib        0x1c9fa45c start_wqthread. ",
    "kalmonto": "I am getting \"No such module 'Siren'\" swift 4.2 I am using.. ",
    "erichsu": "Proposed changes in #220 . In my use case (iOS App), I may send push notification for campaign or deep link to open App.\nI want to keep these user flow smooth, not just popup a version alert to interrupt an interaction mission. That will be great if we could popup alert while we need it at a good timing. . Exactly.. shouldPerformVersionCheckonOnStateChange: Bool = false is good enough for my use case.\nHowever, lazy developer like me could misunderstood what the argument means...\nIf we don't look at the comments, somebody may not know it implies that will perform version check immediately.\nIMHO, It might be better if we could convert the boolean value into enumeration.\nEnumeration is more flexible and extensible to declare the method wail's behavior.\nHow about make the options as enum?\ne.g. \nswift\nenum PerformType {\n  case immediately, onEnterForeground, idle(wait: TimeInterval)\n}\nswift\nfunc wail(with option: PerformType = .onEnterForeground,\n    completion handler: ResultsHandler? = nil) {\n         resultsHandler = handler\n         addObservers()     \n    switch option {\n    case .onEnterForeground: addObservers()\n    case .immediately:\n             removeObservers()\n             performVersionCheck()\n    case .idle(let wait): // TODO:...\n    }\n}\n. Awesome! \nI just have a quick test on my project, it works great.\nThanks a lot~. ",
    "photog0411": "\nHi - I\u2019m away from my computer for a few days, however, there is a delegate method that will return the release notes from the iTunes lookup API. That\u2019s what you want.\n\nDoes this only return the release notes when they get the window telling them to upgrade, or also when they have already upgraded? I am looking for it to do both, in case they have already manually downloaded the update (or got automatic update overnight) from the App Store so they can see the release notes of the new version after they run the new updated version,, like a pop up that says something like this: \"Thank you for updating to the newest version! Here's what's new:\"\nEDIT: After doing some digging around and actually installing the library I see it only returns a value. So I would have to manually make it into a string and use it a dialog, and write some separate code to detect if the app is a new install or updated install and then display a dialog.\nHowever I'm having some trouble using the delegate to put a string into the window. Am I doing this wrong?\nsiren.alertMessaging = SirenAlertMessaging(updateTitle: \"Please update!\",\n                                               updateMessage: sirenNetworkCallDidReturnWithNewVersionInformation(lookupModel: releaseNotes),\nI am getting an error I think something is wrong with my syntax but I can't figure it out. \n. I tried it this way but it didn't work\nfunc sirenNetworkCallDidReturnWithNewVersionInformation(lookupModel:  SirenLookupModel) {\n    siren.alertMessaging = SirenAlertMessaging(updateTitle: \"Please update!\",\n                                               updateMessage: lookupModel.results[0].releaseNotes!,\n                                               updateButtonMessage: \"Update Now\",\n                                               nextTimeButtonMessage: \"Remind Me\",\n                                               skipVersionButtonMessage: \"Skip\"). ",
    "jdanthinne": "I'm already using XCode 10 and Swift 4.2 in my project. I reverted to 3.4.3 and everything is ok.. I believe you. Unfortunately, still unable to build after cleaning Carthage cache, Derived data, etc. . Unfortunately no, it's part of a very big project.\nI confirm it works like a charm with a new project, so the issue must have something to do with my project config I guess.\nHere's the log of carthage:\n*** Building scheme \"Siren\" in SirenExample.xcodeproj\nBuild Failed\n    Task failed with exit code 65:\n    /usr/bin/xcrun xcodebuild -project /Users/jdanthinne/D\u00e9veloppement/Swift/Apps/GroomService/Carthage/Checkouts/Siren/SirenExample/SirenExample.xcodeproj -scheme Siren -configuration Release -derivedDataPath /Users/jdanthinne/Library/Caches/org.carthage.CarthageKit/DerivedData/10.0_10A255/Siren/3.5.0 -sdk iphoneos ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY= CARTHAGE=YES archive -archivePath /var/folders/vh/np47mx2j3tl752jkkjh1tyj40000gn/T/Siren SKIP_INSTALL=YES GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=NO CLANG_ENABLE_CODE_COVERAGE=NO STRIP_INSTALLED_PRODUCT=NO (launched in /Users/\u2026/Carthage/Checkouts/Siren). ",
    "hstdt": "@ArtSabintsev  To show updateMessages from App Store, but UIAlertController will make detail text align center.. @ArtSabintsev \nYes, I can do it. But there are many bad implements.\ud83d\ude2d\n\nSirenDefaults.StoredSkippedVersion key is not public, I need to make a hard code here If the next time button is clicked.\n\n\n\nskipAction is not public, I need to call the delegate by myself.\nswift\n            let skipAction = UIAlertAction(title: \"Skip this version\", style: .default) {(_) in\n                UserDefaults.standard.set(currentAppStoreVersion, forKey: \"StoredSkippedVersion\") //Not public\n                UserDefaults.standard.synchronize()\n                siren.delegate?.sirenUserDidCancel()\n            }\nI have to create a new window by myself the same as Siren , otherwise keyWindow.rootViewController may be disappeared sometimes\n\nswift\nrootViewController.present(alertController, animated: true, completion: nil) //sometimes disappeared\n. @ArtSabintsev \nSorry for the late reply. But the attributedString is not working for here: newVersionMessage is back to the type of  String.\nswift\nlet newVersionMessage: String = localizedNewVersionMessage()// Not AttributedString\nlet alertController = UIAlertController(title: updateAvailableMessage, message: newVersionMessage, preferredStyle: .alert)\nAttributed detail need to call a setValue method.\nmyAlert.setValue(messageText, forKey: \"attributedMessage\")\nhttps://stackoverflow.com/questions/25962559/uialertcontroller-text-alignment\n. And I suggest to add another initialization method of SirenAlertMessaging for better compatibility, otherwise version <= 3.4.3 will receive error.. ",
    "MaxOstPM": "@ArtSabintsev The main issue is that Siren if working great, in all the regions (USA, Ukraine), but not in Russia.\nCode sample: SwiftRater.rateApp()\nIt is called when user want to rate the app manually. @ArtSabintsev yes. ",
    "danielmhanover": "Yes I am certain that I am. I\u2019m not sure why this is happening but if it doesn\u2019t impair functionality, making this replacement might be beneficial.. ",
    "stevenp": "This doesn't appear to be limited to Carthage. I'm building on the latest Xcode 10.1 beta using Cocoapods and I was also unable to compile due to this same error. \nI had a workaround in my Podfile that was setting the Swift version at the Pods project configuration level and deleting it for every Pod target, which ended up leaving me with Siren trying to compile with Swift 4 instead of 4.2. This code doesn't compile unless the target is explicitly set to 4.2, which is what was likely causing the error in this issue. I was able to remove my workaround now that my dependencies all work with Swift 4.2, and that resolved this problem for me.. For me, at least, it is.. ",
    "nubuser999": "Hi I have noticed my mistake sorry.\nmy project is version 1.#.#\nHowever,  in app store connect, I have named new version 1.##, like 1.01~1.04.\nI will create 1.0.5 for app store connect and see this issue fix.\nthank you for your time. ",
    "kamrankhan07": "@ArtSabintsev I made changes for Siren as we discussed. I worked on @getaaron suggestion to write a better interface than to just reset the skip version status. \nPlease review it and let me know if I made any mistakes, I tested it and its working good. I hope I didn't miss nay conditions. \nThere was one scenario, where user might want to show custom alert to user and not use the default one, but I didn't handle the case. May be someone can do it if required in future. . Sorry about these, I had issues with some commit. I have created a new pull request. . Agree we can do it like that too, but then we need to check if the device can support the new version and if the new version is available on App Store (all the things that are in Siren already). So, I added this new interface, just to avoid repeating the same code. . Yes, just thought about it. It will check. I am already using a forked version, but I will try to make changes to my code to use it like you described. Thanks for the feedback. . I already do like that for force update case, always check with immediately if controlled from server side. However, this bug is a general case without involving server side, if users don't user .immediately as checkVersion type. . Thanks a lot. I will check it out in couple of days. I appreciate all the effort you put into it \ud83d\udc4d . @ArtSabintsev I have started testing it now, looks great. I saw one issue/suggestion, if the alert if presented then the completion handler is not called to let user know that an alert is being shown on screen right now. We used to have sirenDidShowUpdateDialog in the previous code. . I have a scenario, and may be some other people will have to, where I need to know if the alert was presented. I thought more about it and I can change my code to adapt. If you think it will be good idea to have some way of getting to know if alert was presented or if its a useful information then it can be added. . I have some scenario in app where we show user some banners which have some constraints on them i.e. they will not appear again once shown to user. If app update notification shows (which can be force update too), those banners will disappear without any user interaction. So, for my test case, I just check if there is any update available or not before deciding to call our server to get banner data. But may be people will have other scenarios where they want to know. \nI checked your code and in most cases I will get the callback if there is no update available, except the case where alert is shown. I have a work around for my scenario. May be we can wait and see if other people need such a thing and for whatever test case that they have and then a good approach can be selected for it. . I liked the the changes you made in code, really excellent work.. @ArtSabintsev I saw one more issue, if an alert is present on the screen and app is minimized and launched again then it will show another alert on top of that because of performVersionCheck() called via the observer UIApplication.didBecomeActiveNotification. Its easy to test with promptFrequency =  .immediately . updaterWindow is reinitialized every time its referenced. Possible fix\nprivate var updaterWindow: UIWindow = {\n        let window = UIWindow(frame: UIScreen.main.bounds)\n        window.rootViewController = SirenViewController()\n        window.windowLevel = UIWindow.Level.alert + 1\n        return window\n    }(). If user is not logged in then the implementation is simple, I call Siren once from didFinishLaunchingWithOptions. I have a helper class where code looks like this\n```\nfunc checkVersion( completion:(( redirected: Bool) -> ())?) {\n        self.versionNumberOnServer { versionOnServer in\n            if self.shouldForceUser(versionOnServer) {\n                Siren.shared.rulesManager = RulesManager(globalRules: .critical,\n                                                         showAlertAfterCurrentVersionHasBeenReleasedForDays: 0)\n            } else {\n                Siren.shared.rulesManager = RulesManager(globalRules: Rules(promptFrequency: .daily, forAlertType: .skip),\n                                                         showAlertAfterCurrentVersionHasBeenReleasedForDays: 0)\n            }\n        Siren.shared.wail { (results, error) in\n            if let results = results {\n                if results.alertAction == .appStore {\n                    completion?(true)\n                } else {\n                    completion?(false)\n                }\n            } else if let error = error {\n                print(error.localizedDescription)\n                completion?(false)\n            }\n        }\n    }\n}\n\n```. If logged in then I have a different flow. I debugged both ways and issue seemed to be with that code, after I made those changes everything was working fine. I can check it again tomorrow. You can not reproduce the behaviour ?. I agree with you that it should launch, but after the specified promptFrequency.. ",
    "kazukisugita": "Hi.\nSame issue happning in JP store. This causes will occure often in future ??. ",
    "dklinzh": "Thanks for your help! Now it is fine \ud83d\udc4d . +1\nI also encounter this issue again. See #240 may be one of the solutions for Apple API unexpected changes.. ",
    "arshadsk5": "can you any please tell me , how to upgrade ? earlier i installed pod as below.\npod 'Siren', :git => 'https://github.com/ArtSabintsev/Siren.git', :branch => 'swift4.1'\ni am trying in the below way, \npod 'Siren', '~> 3.8.0'\ni got error, as\nNone of your spec sources contain a spec satisfying the dependency: Siren (~> 3.8.0).. pod repo update ,\nsolved the problem.. after upgrading the version, i am getting errors in siren files. please help it is very urgent.. ",
    "adeelnoor": "same here #243. ",
    "Vergunof": "Try to use Siren 3.8.0\nhttps://github.com/ArtSabintsev/Siren/issues/241. ",
    "AdiAyyakad": "I wasn't on the latest version \ud83d\ude3f Silly me for plowing right through that. ",
    "kailahuy": "version 3.9.2 still bug. \n \"Expected to decode String but found a number instead.\". ",
    "fremaksim": "owesome!!! Thanks~. ",
    "Vaifathuy": "Yes sir. . ",
    "Bernica": "Hi Arthur. The new version is ready for sale since december 6, thus, it's been 4+ days now. The bundleId endpoint still returns the previous version tough.. Sure:\n- https://itunes.apple.com/lookup?bundleId=com.vibelyst.Dapper\n- https://itunes.apple.com/lookup?id=1381468910\nIt now responds with the updated data, took 5 days to do so. I'm about to release a new version, I can let you know when I do that if you want, so you can check the endpoints' answers by yourself.. Version 2.0.7 is now ready for sale. There should be some delay before it appears in the AppStore, then another delay before it appears in the id endpoint, and another delay before it appears in the bundleId endpoint.. ",
    "ivolnov": "It turns out that changing policy in Siren does not fix the issue... When I perform the same request with my urlsession and this policy it returns the correct json.... That fixes the issue:\nfunc performVersionCheck() {\n        do {\n            let url = try iTunesURLFromString()\n            let request = URLRequest(url: url, cachePolicy: .reloadIgnoringCacheData, timeoutInterval: 30)\n            URLCache.shared.removeCachedResponse(for: request)\n            URLSession.shared.dataTask(with: request, completionHandler: { [weak self] (data, response, error) in\n                self?.processResults(withData: data, response: response, error: error)\n            }).resume()\n        } catch {\n            postError(.malformedURL)\n        }\n    }. > Hey!\n\nThanks for the PR. Wouldn't changing the cacheType to https://developer.apple.com/documentation/foundation/nsurlrequest/cachepolicy/reloadignoringlocalandremotecachedata fix the problem?\nI don't know why I'm not using that to being with.\n\nChanging just the cacheType dose not affect it at all, probably it is indeed not implemented. But explicit eviction of a particular request from shared http cache does the trick.. > Alright, how can you replicate this issue? I'd like to test it myself.\nSay you had 1.4.7 in the store and have just pushed 1.5.0 there.\nYou set showAlertAfterCurrentVersionHasBeenReleasedForDays = 0.\nChange version to 1.4.6 in the project and build it.\nYou'll be prompt to update to 1.4.7. \nThan you can debug the request, copy the url, send it via postman or curl and you'll get json containing 1.5.0.. ",
    "nahung89": "Found out: Deleting the Carthage/Checkouts folder and re-running Carthage solved the issue.. ",
    "jyounus": "I'm currently using Siren as a force update feature. I do this whenever a new major version is available. In this scenario, a major version update means there are some critical changes or breaking changes and need my users to be on the latest version asap.\nUsing the .immediately parameter is currently how I'm doing this. I make the check on app start as well as when the app comes back to the foreground. \nUsing a daily check just isn't frequent enough. If I release a new major version, it would be for an important reason. Having a more frequent check would be better for me. Using .immediately is a bit too excessive for my use case, as it currently makes an API call every time the user launches/comes back into the app.\nThis brings me to my second issue for my use case. I currently need to use the .immediately option when the user returns back to the app, so they can't continue using the app if there's supposed to be a force update.\nIs there any way you could make it so that if it detects we're forcing a release, it doesn't need to make an API call every time? Instead it can check locally with the previously fetched data? This could be a separate method or an additional parameter (something like offlineOnly: Bool), I just want to be as efficient as possible while also making sure users can't use the app anymore if I need to force update them.. We're currently still on Swift 4.1, which is why we're not using Siren v4 yet. We should be updating our project to Swift 4.2 soon though, so I'll keep that in mind about didBecomeActiveNotification.\nAs for the issue above, we're happy to keep the showAlertAfterCurrentVersionHasBeenReleasedForDays option set to the default 24 hours. But after that, we'd like to be able to fine tune the time when it'll make another check. So we still want to wait the initial 24 hours, but then have the option to set it for example to 3 or 6 hours.\nThis of course assumes that the API call returns a timestamp when the new update was made available. Then work out timestamp + 24 hours and then use something like UpdatePromptFrequency.hourly(6) to figure out when to make another API call/show the dialog.\nAdding that caching option would be great, thanks for that! . That sounds reasonable, thank you for that! . Fair enough, I can understand that. I'll just either implement a custom solution or fork off your branch to customise the functionality and suit our project's needs. \nThank you anyways!\n. ",
    "BelfDev": "Making Siren.performVersionCheck method public would also be of great use to my case. I first consult a RemoteConfig for specific versions that should prompt the UIAlertController. Only after I have finished the request I let Siren run its flow. \nI am currently facing issues with the timing which \"didEnterBackgroundNotification\" is triggered. Obviously, it is triggered before I obtain a response from Firebase -- preventing Siren from prompting the UIAlertController as it was supposed to.. ",
    "antoinepemeja": "Hello,\nI use Siren (4.0.2) and I have this issue (in iOS 12.1.3)\nFor critical, when my app is in background (when I double tap on home button) and back in foreground, a new alert pop above a previous alert.\nBut when the app is in background when I tap just once on home button, there isn't the issue.\nThank you @ArtSabintsev . ",
    "ToroLiu": "I update following string files.\nSources/Siren.bundle/zh-Hans.lproj/SirenLocalizable.strings\nSources/Siren.bundle/zh-Hant.lproj/SirenLocalizable.strings\nI open them by sublime text editor. They are plain text string files.. ",
    "crspybits": "Hey, thanks for the quick response. Yes, it is a real rule. Here's my use case. I want to force an update of the app under particular app version conditions. Basically, I want to encode that \"force update\" information in the app version. It will be an edge case when I want to force the update. (I'm thinking of it now because I have a breaking change on my server that will necessitate a corresponding breaking change on the app.). \nI don't want to force the update based on simply increasing major, minor, or patch values in the version. Again, because this is an edge case for me. So, using something like odd numbers in the minor version to force the update is one way to do this. Of course, this will require paying careful attention to creating version numbers for releases of the app. Don't want to mistakenly give an odd minor version number in a release when  an app update is not required. Bad UX in that case.\nDoes this make sense?. Hey, it's cool if you don't think this appropriate for your library. I think this is not a matter of absolutes though. Sometimes simple methods are good. And some projects do make clear distinctions based on odd/even number version components (e.g., https://stackoverflow.com/questions/1266411/which-open-source-projects-use-odd-unstable-even-stable-style-of-versioning/1266481#1266481). . ",
    "HarryPT": "Thank you for your reply.\nBut I got this error.\n\nHope your help.. And I think completion handler will be called when alert button is tapped so it's impossible to get before alert shows. . "
}