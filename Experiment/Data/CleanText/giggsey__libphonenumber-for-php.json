{
    "giggsey": "The current thinking is to put this in its own project in order to keep this project smaller.\nThe Geocoder will require the PHP Intl extension, which will be an unfair requirement for those who just want to format phone numbers. Also, the data files for the geolocation are large, and will push up the size of this repository for one small feature.\n. Project now exists for the Offline Geocoder at https://github.com/giggsey/libphonenumber-geocoder\n. ``` patch\n===================================================================\n--- src/libphonenumber/Matcher.php  (revision 06233b7e5393b6fdbc46c879e734aa856e219356)\n+++ src/libphonenumber/Matcher.php  (revision )\n@@ -120,7 +120,7 @@\n      */\n     public function replaceFirst($replacement)\n     {\n-        return preg_replace('/' . $this->pattern . '/', $replacement, $this->subject, 1);\n+        return preg_replace('/' . $this->pattern . '/x', $replacement, $this->subject, 1);\n     }\n /**\n\n@@ -130,7 +130,7 @@\n      */\n     public function replaceAll($replacement)\n     {\n-        return preg_replace('/' . $this->pattern . '/', $replacement, $this->subject);\n+        return preg_replace('/' . $this->pattern . '/x', $replacement, $this->subject);\n     }\n /**\n\n```\nThat appears to fix your issue, however, it causes the instance reported in issue #3 to break. I'm still investigating.\n. Fixed in v5.8.8\n. I'll add further instructions about how to use it with composer soon.\nBut the source for the example is available in another repository https://github.com/giggsey/libphonenumber-example\n. I've added quick instructions on how to install it via composer in the README. Over the next few days I'll update the  example (fixing some bootstrap bugs) and make sure that links back to GitHub.\n. Thanks.\nI'll create a new tag once I update to Google's latest changes.\n. http://giggsey.com/libphonenumber/?phonenumber=123456&country=GB&language=&region=\nhttp://giggsey.com/libphonenumber/?phonenumber=123456&country=FR&language=&region=\nThis number shows an invalid for both, and I can see it returning NULL for GB and FR for FR.\nHowever, this also seems to match the behaviour of the libphonenumber demo: http://libphonenumber.appspot.com/\nFR: Result from isPossibleNumber()  false\nResult from isPossibleNumberWithReason()    TOO_LONG\nNote: numbers that are not possible have type UNKNOWN, an unknown region, and are considered invalid.\nGB: Result from isPossibleNumber()  true\nResult from isValidNumber() false\nPhone Number region  \nSo the difference is the fact that in GB, 123456 is considered a possible number, but in FR it's totally invalid.\n. You can get an example mobile number using the following code:\n``` php\n<?php\n// ...\n$phoneUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\necho $phoneUtil->getExampleNumberForType(\"GB\", \\libphonenumber\\PhoneNumberType::MOBILE);\n```\n. Do you have the example number that passed on Google's, and failed on this version?\n. Also, I can't seem to find the pattern you said for KW in the original metadata: https://libphonenumber.googlecode.com/svn/trunk/resources/PhoneNumberMetadata.xml\n. Oops, the online demo was running libphonenumber-for-php 5.8.8, which this number did not validate in. I've updated it to 5.9 now, and your number works fine (https://github.com/giggsey/libphonenumber-example/commit/940da2f43c38ea57be2160f41e847d8ec11fd06b)\nAlso, for peace of mind, I've added this number to the unit tests for the project (baad658).\n. I just tried the number in the actual libphonenumber demo, and got the same results as the demo link for the PHP version.\nhttp://libphonenumber.appspot.com/\nIf this is an issue, you'll need to report it upstream on the Google project: https://code.google.com/p/libphonenumber/issues/list\n. Fixed by 564614c4b88d0444aea4e26e9389129934913bc3\nBy removing duplicates in the IOFileMappings, it reduced the number of iterations in one function from 1290 million to 10.8 million.\n. Good point, thanks.\n. I just tried it, and it works fine for me.\ncomposer.json:\njson\n{\n  \"require\": {\n    \"giggsey/libphonenumber-for-php\": \"~6.0\"\n  }\n}\nWhen I run composer update -vvv I get:\n```\n$ composer update -vvv\nReading ./composer.json\nExecuting command (CWD): git describe --exact-match --tags\nExecuting command (CWD): git branch --no-color --no-abbrev -v\nExecuting command (CWD): hg branch\nExecuting command (CWD): svn info --xml\nLoading composer repositories with package information\nDownloading https://packagist.org/packages.json\nWriting /home/giggsey/.composer/cache/repo/https---packagist.org/packages.json into cache\nDownloading https://packagist.org/p/provider-active$1633894dbee94565b285c08a664cb3302069c5976b8cc72384af8ac28f5503dd.json\nWriting /home/giggsey/.composer/cache/repo/https---packagist.org/p-provider-active.json into cache\nDownloading https://packagist.org/p/provider-archived$dd08755acc0ec1f039804b63111f87e775d4253435127ec46e7155a0191e5266.json\nWriting /home/giggsey/.composer/cache/repo/https---packagist.org/p-provider-archived.json into cache\nDownloading https://packagist.org/p/provider-latest$367bed1b4b60e2814f3c265b9f52e0afb1f47fcda214f7a9d978e8c8f0c2e88b.json\nWriting /home/giggsey/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\nDownloading https://packagist.org/p/provider-stale$6bd7c2928e043269325687c4f82cf779ce068a638b664f20a786a13861c99088.json\nWriting /home/giggsey/.composer/cache/repo/https---packagist.org/p-provider-stale.json into cache\nUpdating dependencies (including require-dev)\nDownloading http://packagist.org/p/giggsey/libphonenumber-for-php$c9fe6db96a31a9935ebf45bade0a0c25eb3c41a8b11a8e7ebd22d6ea9c78e1a6.json\nWriting /home/giggsey/.composer/cache/repo/https---packagist.org/provider-giggsey$libphonenumber-for-php.json into cache\n  - Installing giggsey/libphonenumber-for-php (6.0)\nDownloading https://api.github.com/repos/giggsey/libphonenumber-for-php/zipball/0e7c860d983e141b84fd763b70c4ce3c3f8f331e\n    Downloading: 100%       \nWriting /home/giggsey/.composer/cache/files/giggsey/libphonenumber-for-php/0e7c860d983e141b84fd763b70c4ce3c3f8f331e.zip into cache\n    Extracting archive\nExecuting command (CWD): unzip '/tmp/vendor/giggsey/libphonenumber-for-php/148ec1af7fa92b27bf663241dbc346f1' -d 'vendor/composer/5831c970' && chmod -R u+w 'vendor/composer/5831c970'\nREASON: Required by root: giggsey/libphonenumber-for-php\n\nWriting lock file\nGenerating autoload files\n```\nI would try making sure you have the latest version of composer (by doing composer self-update). Apart from that, I'm not sure what else.\n. Glad you found the cause :)\n. I'll try and have a look at this today.\nI applied your patch locally, and although it fixes this issue, it breaks a bunch of other tests.\n. I've fixed this issue, and pushed to master.\nAs I don't want to release a version separate from Google, is using dev-master okay for the near future until there is another release?\n. Yup, you're right. I'll continue to look into it.\n. Okay, I spent some more time this afternoon looking at it.\nYour patch causes national number to be stored as a string. This stops the float issue, but introduces some more further down. I believe some are being caused by the leading zero staying in the string, but not the float.\n. @mauermann Could you take a look at this new fix? I think it does a much better job and fixes the new number.\n. Related to #17\n. Thanks for contributing.\nHow would this actually be installed + used? I've had experience in building RPMs using spec files, but they've always been published to internal repositories, and never been a php project.\n. How would someone actually use the library though?\nThe usual PHP libraries I know that get installed via RPM (PHPUnit) have executables, and are found in the include path.\n. You would then have to include the files manually, as this project expects a PSR-0 compatible autoloader?\n. Okay, if you add the spec file to the list of excludes in composer.json, I'll merge it in.\n. Thanks :)\n. Hi,\nI just tried the numbers you tried on the demo that Google provide for the official Java version, and it gives the same results. You can try this yourself at http://libphonenumber.appspot.com/\nIf you try the 'dial from GB' number with the country set as GB, it recognises the number as valid: http://giggsey.com/libphonenumber/?phonenumber=00573133333333&country=GB&language=&region=\n. Try putting the numbers into the demo that Google have for their upstream version: http://libphonenumber.appspot.com/\nIf you have an issue there, you'll need to report it upstream: https://code.google.com/p/libphonenumber/\n. Cool, sorry I couldn't help.\n. Good spot, thanks.\n. Isn't the fact that this can cause PHP to segfault a bit worrying and needing to be narrowed down and reported as a PHP bug.\nBut thanks for the PRs, I'll look at them within a few hours.\n. I made an additional comment on the PHP bug, and have confirmed locally that this change fixes the tests under PHP 5.5.14.\nThanks\n. This project takes all of its metadata from the upstream project from\nGoogle.\nIf you know of incorrect data in the metadata, please report it on the\nGoogle Code project.\nOnce metadata changes are made and released, the metadata for this project\nwill be updated.\nOn 28 Jul 2014 07:54, \"anantz\" notifications@github.com wrote:\n\nThe landline number of Guwahati, India was updated to 8 digits from 7 by\nprepending a 2 since 2002. This change is not reflected in the Indian phone\nmetadata file.\nThe number is 0361-22300102, which is show as false.\nPlease update the regex to match this pattern.\nRef: See section \"9-10 November 2002 - Assam area changes\" in\nhttp://www.wtng.info/wtng-91-in.html for more details.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/33.\n. Looks good to me.\n\nCould you add a Unit Test with this example (take a look at https://github.com/giggsey/libphonenumber-for-php/blob/master/Tests/libphonenumber/Tests/Issues/Issue23Test.php for an example).\n. I've added a unit test, and merged in the changes. It'll be tagged once Google release a new version upstream.\nThanks for the fix.\n. I manually grabbed your first commit, as you also included changing the name, and reverting both changes in your Pull Request.\nI also added a unit test, just to check it works.\nIt's now in master, and will be included in the next release once Google release their next version.\nThanks for the change :)\n. Thanks.\nYou're right that it is related to #17. The base issue still exists, that PHP does not have a decent locale class. I've added this particular locale, but the problem will still exist for other countries.\nI need to find some way of adding a test to check every country in the world.\nAnyway, this fix will be included in the next release once Google release their new version.\n. Haha, okay, I'm not going to fix this one straight away. I'm going to try to find out how to resolve the root cause.\nIf you need it, you can follow something similar to the commit I did in #36.\n. Okay, I think I've implemented a better fix (part of 6.2.2).\nI didn't add as a unit test, but I have just checked on the demo, and it reports Guernsey correctly now.\n. I'm just about to pop out for lunch, but could you try the same numbers on\nhttp://libphonenumber.appspot.com/\nOn 29 August 2014 12:36, adampaxton notifications@github.com wrote:\n\nFirst - thanks for putting this together it works brilliantly.\nUnfortunately I have found a bit of an edge case that seems to break\nthings. If I understand correctly Bolton & Brampton are both UK counties\nthat have legitimate 10 & 11 digit phone numbers.\n(01204) xxxxx Bolton\n(016977) xxxx Brampton\nYou can see a list of valid Bolton phone numbers here -\nhttp://phonenumbers.nr5.eu/prefix/01204/number/0120410120\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/40.\n\n\nJoshua Gigg\n. Okay, I can see evidence suggesting that this should be working, so I've submitted it as a bug upstream: https://code.google.com/p/libphonenumber/issues/detail?id=513\n. @adampaxton Are you able to find any other examples of that range of number being used? (A company that uses a number in that range etc.)\n. Can you also update README.md and list it alongside the intl extension.\n. Thanks :)\nOnce Google release a new version, I'll tag a new release.\n. The easiest way to use this package (and many others) is to use Composer.\nComposer is a package dependency manager for PHP.\nYou need a composer.json file in the root of your project (look at the README file for an example).\nMore information can be found on Composer's website.\n. It is meant for use with any PSR-0 autoloader.\nComposer is the most popular.\nOn 23 Sep 2014 19:03, \"Elias J\u00fanior\" notifications@github.com wrote:\n\nI think I undestand. I'll try do that, but, why it doesn't come with\nsomething that we just need to include?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/42#issuecomment-56562895\n.\n. Glad you got it working.\n\nHappy for me to close the issue?\n. I'm going to close this for now, as the immediate problem has been resolved by #46. However, I might re-open it again in the future if I get time to build this new package (I started on https://github.com/giggsey/Locale, but my free time has been rather rare as of late).\n. I think I've looked before, and the newer versions of it still need the\nextension.\nOn 8 May 2015 14:27, \"Adam Curtis\" notifications@github.com wrote:\n\n@giggsey https://github.com/giggsey you might be able to use\nSymfony/Intl to get the country names if thats all you need Intl for :)\nhttp://symfony.com/doc/current/components/intl.html\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/43#issuecomment-100233375\n.\n. Yikes, that array contains ~145,800 items.\n\nI'll have a look at a way of solving this.\n. I've split up the Chinese prefix mapper (geolocation & carrier mapper) files into smaller files, which has greatly reduced the memory usage when testing your number on my local PC.\nOnce Google release a new version, it'll get tagged, but for the time being, you can test it by using dev-master.\nDemo Code\n``` php\n<?php\n$number = PhoneNumberUtil::getInstance()->parse(\"86-157-9662-1289\", \"CN\");\n$geocoder = PhoneNumberOfflineGeocoder::getInstance();\n$startMemory = memory_get_usage();\n$location = $geocoder->getDescriptionForNumber($number, \"en\");\n$endMemory = memory_get_usage();\n$memoryUsed = $endMemory - $startMemory;\n```\nBefore\nMemory usage: 27260968 bytes (27 MB)\nbash\nfind . -name \"*.php\" -type f -not -path \"./vendor/*\" | xargs wc -l|sort -rn|grep -v ' total$' | head -n 10\n145802 ./src/libphonenumber/geocoding/data/zh/86.php\n  145802 ./src/libphonenumber/geocoding/data/en/86.php\n    9473 ./src/libphonenumber/carrier/data/en/55.php\n    5584 ./src/libphonenumber/geocoding/data/en/33.php\n    5210 ./src/libphonenumber/geocoding/data/en/49.php\n    3330 ./Tests/libphonenumber/Tests/core/PhoneNumberUtilTest.php\n    3180 ./src/libphonenumber/PhoneNumberUtil.php\n    2653 ./src/libphonenumber/geocoding/data/en/91.php\n    2093 ./src/libphonenumber/geocoding/data/en/359.php\n    2093 ./src/libphonenumber/geocoding/data/bg/359.php\nAfter\nMemory Usage: 38288 bytes (0.03MB)\nbash\nfind . -name \"*.php\" -type f -not -path \"./vendor/*\" | xargs wc -l|sort -rn|grep -v ' total$' | head -n 10\n```\n   51459 ./src/libphonenumber/geocoding/data/zh/8613.php\n   51459 ./src/libphonenumber/geocoding/data/en/8613.php\n   41858 ./src/libphonenumber/geocoding/data/zh/8618.php\n   41858 ./src/libphonenumber/geocoding/data/en/8618.php\n   41269 ./src/libphonenumber/geocoding/data/zh/8615.php\n   41269 ./src/libphonenumber/geocoding/data/en/8615.php\n    9473 ./src/libphonenumber/carrier/data/en/55.php\n    6986 ./src/libphonenumber/geocoding/data/zh/8614.php\n    6986 ./src/libphonenumber/geocoding/data/en/8614.php\n    5584 ./src/libphonenumber/geocoding/data/en/33.php\n```\n. Is it the same number as per the original report? If so, I tried that on\nthe demo before I started making changes, and it was only reporting \"China\"\nthen.\nI just tried that number in Google's demo page, and that said \"China\" too.\nThe problem with memory usage was solved. But another one appeared. When I\nuse geocoding I receive only one result: China. That is all. There is no\ndetalization as it was befor: no province, no city.\nIt seems, that we can not get information from splited files.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/44#issuecomment-57143746\n.\n. Okay, I can see that's an issue.\nI'll work on it today.\n. Okay, I believe I've fixed that now.\n. The tests are failing because it's now reporting a higher memory usage. This is because it's finding the files to load (and not finding an entry for your original number, but is for the second set of numbers).\nCan you check to see if it's still causing you memory issues with the latest dev-master?\n. We might have to store them with 5 digits instead of 4 then.\nJust a note that the default memory_limit for PHP is 128M, and yours is set to 32M. ( http://php.net/manual/en/ini.core.php#ini.memory-limit ).\n. I'm looking at splitting up the files into the first 5 digits.\n. Can you give it another try?\nBoth the original number, and 86-131-2270-1411 now geo-locate using less than 5MB of memory.\n. Excellent.\nLike I said in a previous comment, it'll be in a tagged release once Google release a new version upstream.\n. If they don't have Intl installed, then the offline Geocoder and some other stuff (I believe the Carrier lookup) will break with a Fatal Error.\nShould those classes throw an Exception if they can't find the extension?\nIdeally, I'd like to swap the Intl requirement with a require to a package that provides the data, as not to break any backwards incompatibility.\nI'm not near any PCs over this weekend, but will be able to reply to the issue on my phone.\n. @thewilkybarkid Would this affect your symfony bundle?\n. Okay, I'm game.\n@maknz Are you able to make it throw Exceptions? Also, the README would need updating.\n. Okay,\nI might have a look at it during the week, depending on personal workload.\n. Merged via #46.\nThanks @maknz for bringing it up.\n. @thewilkybarkid I had a look at the Travis settings yesterday, and wasn't able to find anything.\n. @thewilkybarkid It looks good to me, let me know when you want it merged.\n. > The only that I haven't covered is the Locale subclass, is there any reason that this extends the base Locale class? (Looks to me like it's just there for the static method.)\nIt used to look different, and there is no reason why it exists \\Locale anymore. As long as OfflineGeocoder etc. can't be created without ext-intl, it'll be fine.\n. I was just filling out a question on StackOverflow, and it suggested your post.\n. @thewilkybarkid If you find a way of dealing with the Travis intl extension, feel free to open another PR.\nAs always, once Google make a new release, I'll tag a new version here (I have a feeling it might be soon).\n. The compile command will only work when you have it in 'dev' mode.\nThis means that you have the project checked out by itself, not as a\ndependency of another.\nIn the composer.json for the project, we have require-dev for the build\ntools and the unit tests, as they are not needed when included in other\nprojects.\nAlso, the compiled data released in the latest release matches the latest\nrelease by Google, so you don't need to actually compile it.\nOn 18 Oct 2014 08:15, \"Andy Hawkins\" notifications@github.com wrote:\n\nRunning phing inside /lib/3rd/vendor/giggsey/libphonenumber-for-php/\nresults in a fail to require with build.php.\nBuildfile:\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build.xml\nlibphonenumber-for-php > delete-test-carrierdata:\n[delete] Deleting directory\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/Tests/libphonenumber/Tests/carrier/data\n[mkdir] Created dir:\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/Tests/libphonenumber/Tests/carrier/data\nlibphonenumber-for-php > delete-test-prefixmapper:\n[delete] Deleting directory\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/Tests/libphonenumber/Tests/prefixmapper/data\n[mkdir] Created dir:\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/Tests/libphonenumber/Tests/prefixmapper/data\nlibphonenumber-for-php > delete-test-coredata:\n[delete] Deleting directory\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/Tests/libphonenumber/Tests/core/data\n[mkdir] Created dir:\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/Tests/libphonenumber/Tests/core/data\nlibphonenumber-for-php > delete-test-timezone:\n[delete] Deleting directory\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/Tests/libphonenumber/Tests/timezone/data\n[mkdir] Created dir:\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/Tests/libphonenumber/Tests/timezone/data\nlibphonenumber-for-php > cleanup-test-data:\nlibphonenumber-for-php > svn-checkout:\nChecked out revision 712.\nlibphonenumber-for-php > build-test-metadata:\nPHP Warning:\nrequire(/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/../vendor/autoload.php):\nfailed to open stream: No such file or directory in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 4\nPHP Fatal error: require(): Failed opening required\n'/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/../vendor/autoload.php'\n(include_path='.:/usr/share/php:/usr/share/pear') in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 4\nlibphonenumber-for-php > build-geo-test-data:\nPHP Warning:\nrequire(/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/../vendor/autoload.php):\nfailed to open stream: No such file or directory in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 4\nPHP Fatal error: require(): Failed opening required\n'/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/../vendor/autoload.php'\n(include_path='.:/usr/share/php:/usr/share/pear') in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 4\nlibphonenumber-for-php > build-carrier-test-data:\nPHP Warning:\nrequire(/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/../vendor/autoload.php):\nfailed to open stream: No such file or directory in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 4\nPHP Fatal error: require(): Failed opening required\n'/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/../vendor/autoload.php'\n(include_path='.:/usr/share/php:/usr/share/pear') in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 4\nlibphonenumber-for-php > build-timezones-test-data:\nPHP Warning:\nrequire(/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/../vendor/autoload.php):\nfailed to open stream: No such file or directory in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 4\nPHP Fatal error: require(): Failed opening required\n'/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/../vendor/autoload.php'\n(include_path='.:/usr/share/php:/usr/share/pear') in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 4\nlibphonenumber-for-php > compile-test-data:\nlibphonenumber-for-php > test:\nsh: vendor/bin/phpunit: No such file or directory\nBUILD FINISHED\nTotal time: 1.4527 second\nI tried modifying build.php to include the vender/autoload.php but that\njust resulted in:\nPHP Fatal error: Class 'libphonenumber\\buildtools\\BuildApplication' not\nfound in\n/{redacted}/lib/3rd/vendor/giggsey/libphonenumber-for-php/build/build.php\non line 6\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/47.\n. Not a problem.\n\nYou just got lucky that I had just got up and was catching up on my emails.\nOn 18 Oct 2014 08:22, \"Andy Hawkins\" notifications@github.com wrote:\n\nClosed #47 https://github.com/giggsey/libphonenumber-for-php/issues/47.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/47#event-180358871\n.\n. Hi,\n\nThe metadata for this project comes from Google's parent project.\nThe metadata in question can be found at https://code.google.com/p/libphonenumber/source/browse/trunk/resources/PhoneNumberMetadata.xml#21419\nIf you believe this is wrong, you'll need to open an Issue with Google @ https://code.google.com/p/libphonenumber/issues/list\nOnce they release new metadata, it'll be updated in this project.\n. As is the same as #48, the metadata comes from the parent project, which does not list French mobile numbers starting with 06 or 07: https://code.google.com/p/libphonenumber/source/browse/trunk/resources/PhoneNumberMetadata.xml#7182\nIf you think this is wrong, please report it as an Issue with Google @ https://code.google.com/p/libphonenumber/issues/list. Once they release a new version, the metadata here will be updated.\n. If you look in PhoneNumberType you will see a set of constants.\nFIXED_LINE is int(0).\n. Sorry, but I don't believe so.\nIf you put a number into the example (http://giggsey.com/libphonenumber/) (N.B: It has to be a valid number), it'll list all the formatting options.\n. Have a look at https://github.com/googlei18n/libphonenumber/issues/576\n. @soooldier Are you happy for me to close this issue?\n. Issue closed as no feedback from @soooldier.\n. Hi, thanks for this.\nAre you able to write some sample code that causes this issue?\n. Closing due to inactivity.\n. @joacub What do you mean?\n. @joacub Sorry, but this still doesn't make much sense.\nCan you post a code sample that is causing an error, and the full error message you are getting.\n. What functions are you calling that get to this function? What version of PHP are you running?\n. I just upgraded the demo to support both PHP 5.6 and PHP7.\nWhen trying your number in the PHP 7 demo, it works fine for me: http://libphonenumber-for-php.giggsey.net/?phonenumber=6161217474&country=US&language=&region= (the footer on the page shows the php version)\n. I installed it using a ppa, but that's irrelevant to this library?\n. I just tried running the unit tests on a local vagrant box (using hhvm version 3.10.1), and the tests passed fine.\nTravis seems to be running hhvm version 3.6.6. So maybe this has actually been fixed in a recent travis version.\n. Travis tests now use the latest HHVM version, so closing this issue.\n. Hi,\nThe project uses metadata that is part of the parent libphonenumber project that is managed by Google.\nIf you think there is a metadata issue, can you report it to them. Once they release any new versions, this package will update and release a new version.\nI did search for French 07 issues, and I found https://github.com/googlei18n/libphonenumber/issues/500 - does this help?\n. @pham01 Do you get the same issue when using Google's demo?. @pham01 Possibly. Take a look at Google's Issue Reporting Guide for instructions on raising an issue with them.. The library needs to know which country the number supplied is part of (like you said, numbers can look the same in multiple countries).\nSo you either need to ask the user, or take a guess yourself.\n. You can set the region to 'ZZ' when using parse().\n. @selossevianney Any luck?\nCan I close this issue?\n. If you look at https://github.com/giggsey/libphonenumber-for-php#mapping-phone-numbers-to-carrier, it says there that the intl extension must be installed.\nThe actual composer.json has it as a suggested extension, as all parts of the library, apart from the GeoLocator, will work  without it.\n. Thanks\n. As Google's demo is also providing the same result as the PHP version, I'm going to close this issue, as it's not an issue with the PHP port.\nIf googlei18n/libphonenumber#632 results in a metadata update, this project will pick up on that in the next release.\n. Hi,\nCan you be a bit more specific for this Issue? Where is India missing? The\n+91 country code is supported.\nOn 16 Apr 2015 07:42, \"roulendz\" notifications@github.com wrote:\n\nHmm, it is strange, but Indian is missing from list ;(\n+91\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/60.\n. Closing due to inactivity.\n. This library is actually a port of the Java version, not the JavaScript.\n\nIn the Java version, the function parseAndKeepRawInput matches the PHP. I also tried the JS demo, and it didn't allow me to submit the form without a defaultRegion.\nI'll submit an issue to googlei18n/libphonenumber, and see if the Java version is meant to do it.\n. Closing this issue for now.\nIf Google change the Java API, I'll update this PHP version.\n. If you parse the number, you can then get the country code from the object you get back.\nE.g. \n``` php\nphp\n\n<p$phoneNumberUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\n$number = $phoneNumberUtil->parse('07400 123456', 'GB');\n$number->getCountryCode(); // 44\n$phoneNumberUtil->getRegionCodeForNumber($number); // GB\n```\nThe problem here is that you need to specify the default region code when passing the number. If the numbers are provided in an international format, or E.164, then they should be readable. E.g. 00 44 7400 123456 or +447400123456.\n. @RustyBadRobot DId this solve the problem for you? Just wondering whether I can close this issue.\n. You would need the As You Type Formatter, which I believe has validation too.\nWe don't support that this PHP Port (because you wouldn't be typing character by character into a PHP script).\n. True, but you would be better off assisting the user via front-end JavaScript, and doing validation at the end of input.\nIf you have 50ms latency between each key press (assuming the client's Internet connection to the server is quick, the script is quick etc.), it's not going to give a very good user experience.\n. Have a look at getLengthOfGeographicalAreaCode(), including the warning above it.\nThat might have the information you want.\n. Wouldn't the snippet in the comments above that function give you what you want for mobiles?\n. Ahh yes, I see why. That function only works if the number if $numberType == PhoneNumberType::FIXED_LINE || $numberType == PhoneNumberType::FIXED_LINE_OR_MOBILE.\nIt makes sense that it can't return a geographical area code for numbers that aren't geographical.\nI'll try to see if there is another function.\n. Okay, I don't think it's possible. You can get the number in National Format, so it looks like 096 973 5537. You could format it for mobile dialling, but that's unlikely to be any different from the national format.\n. How would you actually work out the value though?\nWhat's the answer for the number you provided? Or the answer for a UK mobile (+447700900000)?\n. Your number in international format is +380 96 973 5537.\nThat UK number in international format is +44 7700 900000.\nThe library has the formatted rules for the various types of numbers.\nIn the UK, 07700 would sort of be considered the area/carrier code. In reality, because of number portability, it doesn't actually mean anything.\n. If you try the same thing on the demo for Google's libphonenumber (which this project is a PHP fork of), you'll find it does the same thing.\nNote how it does say the number is invalid (TOO_LONG), but if you actually had an extension, it would cope fine.\nThe reason it's changing ext into 398 is that it's converting the letters into the numbers they represent.\n. If/Once it's fixed upstream, it'll get ported down to here, and released the next time Google tag a release.\n. Thanks for that @RuslanGetmansky.\nIt'll get tagged in a new release once Google release their next version (to keep the version numbers in sync).\n. It's also a bug in the Java version, so I've reported it upstream too.\n. I've just run the compile command again, and it has not picked up on any changes.\nThe way the Prefix File Reader (used by the Geolocation, PhoneNumberToCarrierMapper and PhoneNumberToTimeZonesMapper) is by reading from the requested language first, then then falling back to English.\nWhen compiling the data, it uses this fallback in order to save space, and 'compress' the amount of data stored in PHP. As the majority of the entries in de/49.txt are the same as en/49.txt, it only writes them once (in the English file).\nThe few differences you see in de/49.php are either not present in the English version, or different (e.g. 4935753 in English is Grossr\u00e4schen, but the same prefix in German is Gro\u00dfr\u00e4schen).\n. No problem, glad I was able to explain it\n. Looks good to me, thanks!\n. Thanks :)\n. Merged (finally), thanks.\nhasNumberOfLeadingZeros() is only used in one place, so I'm not bothered by whether it gets auto set.\n. Hi, please have a look at https://github.com/giggsey/libphonenumber-for-php#problems-with-invalid-numbers and if it is an issue, report it upstream.\nThanks\n. Apologies. This is what I had hoped to avoid.\nI put it in the release notes when it went live, and the README states that\nit doesn't follow exact semantic versioning.\nImproving the documentation is needed, so I'll leave this issue open to do\nthat.\nOn 10 Sep 2015 11:20, \"Richard van Laak\" notifications@github.com wrote:\n\nWe used __toString to pass a phone number to our VoIP provider, which is\nbroken now. This ofcourse is our own bad, we should have used the\nformatter. This initially wasn't clear to us, so maybe you can split the\nquite long readme into separate files under /doc and add a more\nexplanative header on top of the formatting section? [image: :+1:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/75#issuecomment-139197675\n.\n. Confirmed locally.\n\nIt'll be something to do with the translation of letters to numbers.\n. Okay, Google's version gives you the same number if you don't have the '@' sign.\n. Notes: The getValidPhoneNumberPattern is returning a regex, which is allowing the '@' through, whereas the Java version doesn't.\n. This has now been fixed.\nThe fix won't be tagged until Google release their next version.\nSuch a small fix too... Thanks for reporting it :)\n. It was just that way when I forked the project. I've also been reading a bit, and it seems Composer has some issues with namespaces in mixed case, so I'm a bit wary of changing it in case it broke BC.\nAlso, this project doesn't have a vendor name in the namespace, which itself is a bit odd.\nClosing, as I don't feel it's worth the potential BC breakages.\n. It might be a while before v9 comes along.\nEither way, I don't think I'm going to change the namespace/package name.\nLibraries are usually all lowercase. Google's README refers to it as libphonenumber.. Thanks, HHVM has a similar issue.\nOn 7 Aug 2015 23:37, \"John Boehr\" notifications@github.com wrote:\n\nIn case you hadn't already tracked it down, the failing tests on PHP7\nappear to be related to be a bug: https://bugs.php.net/bug.php?id=70110\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/79.\n. Local reproducible version: https://3v4l.org/pICqY\n\nThat PHP Bug mentions the stack limit, but the regex here is fairly small, so I'm not sure it's that.\nIt's failing on PHP7 + HHVM.\n``` php\n<?php\n$subject = '512345678';\n$pattern = '/^(?:\n          [12]\\d{6,8}|\n          [3-57-9]\\d{8}|\n          6\\d{5,8}\n        )$/x';\n$result = preg_match($pattern, $subject, $groups, PREG_OFFSET_CAPTURE);\nvar_dump($result, $groups);\n```\n. Reported separately at https://bugs.php.net/bug.php?id=70304\n. Worked around by #89\n. Strange how the unit test wasn't failing again.\nReopened for now, as the metadata is indeed incorrect.\n. @mfix It's been resolved as of the latest commit. The line endings got messed up in my local copy, so it wasn't applying the patch.\n. There are websites that can monitor your Packagist dependencies, and let you know whether there have been any updates. One example is: https://www.versioneye.com/\nI'm going to close this issue, as it's not actually an issue with the project.\n. If you have libphonenumber-for-php installed as a dependency (which it appears to be given that it's in vendor/), you don't need to compile any data (it's already compiled)\n. Weird. How did you install it?\nIf you ran phing compile, it actually deletes all the data directory before compiling it again.\n. Weird about the src/libphonenumber/data issue. But I'm glad you got it working :)\n. Thanks, will get that sorted asap.\n. Right, there was an issue with the DNS server. The faulty record has been fixed (but it'll take a while to propagate).\nI'll close this issue, as this should be resolved within a few hours.\nIn the mean time, you should be able to get to the demo via http://libphonenumber-for-php.giggsey.net/\n. There's a function called getRegionCodeForCountryCode(), which accepts a country calling code, and will return 'ZZ' (if it doesn't exist), or the first region code for that calling code (44 is actually GB, GG, IM and JE)\n. I just tried that, and it works fine\n``` php\nrequire DIR . '/vendor/autoload.php';\n$phoneNumberUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\n$phoneObj = $phoneNumberUtil->parse(\"+441174960000\", '');\nvar_dump($phoneNumberUtil->isValidNumber($phoneObj));\nvar_dump($phoneNumberUtil->format($phoneObj, \\libphonenumber\\PhoneNumberFormat::E164));\n```\nReturns \n\nbool(true)\nstring(13) \"+441174960000\"\n\nThat matches the Java API. The parameter is required, but can be null, or an empty string.\nThe demo might not allow empty country names, but I could fix that if that's the issue you're having.\n. @colouredFunk Are you still having this issue?\n. No reply for 3 days, closing.\nIf you are still having an issue, please reopen this.\n. Hi,\nPlease take a look at the section in the README about Contributing. I can't remember the heading, but there is a section about metadata issues.\nThis project uses up to date metadata from Google's libphonenumber project, and I can't accept straight metadata changes here (they would get overwritten when the data next gets compiled).\nHave you tried the number on both the PHP, and Google's demo page? If those demos return different things, then that's a bug with libphonenumber-for-php.\n. Hi,\nWhat's the point of an As You Type Formatter for PHP?\nIf you are doing it via a web form, then you would need to send an AJAX\nrequest for every character typed (in which case you might as well use the\nJavaScript version).\nOn 24 Oct 2015 22:58, \"Vlad Rusu\" notifications@github.com wrote:\n\nHello !\nI saw that the getAsYouTypeFormatter functionality is missing from your\npackage. :(\nIt is present it the official Google library (v7.1.0).\nCan you please implement it?\nI am refering to this:\nFormatting Phone Numbers 'as you type'\nPhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();\nAsYouTypeFormatter formatter = phoneUtil.getAsYouTypeFormatter(\"US\");\nSystem.out.println(formatter.inputDigit('6')); // Outputs \"6\"\n... // Input more digits\nSystem.out.println(formatter.inputDigit('3')); // Now outputs \"650 253\"\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/87.\n. Sorry, but I still don't see the use case. I can't think of a reason you would need to format a partially input number, unless you are expecting further input.\n. Closing issue.\n\nI'll be happy to re-open it if you can convince me of a use case.\n. The AsYouTypeFormatter wouldn't help there though, because it wouldn't format the number until you hit a valid number.\n. I don't think that's actually possible.\nYou can get the patterns for each number type, but you'll have to work out the prefix by yourself.\n. Reopening, as I'm going to implement this.. Thanks\n. What's the values you are passing to the parse() function (number + region).\nOn 18 Nov 2015 15:14, \"Luke\" notifications@github.com wrote:\n\n+46 44203686890x\nSuch phone number is not recognized as valid but it exists in GB\nI replaced last digit with x\nAny idea why its not valid?\nRegards\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/90.\n. Country code +46 isn't GB, which was my confusion.\nOn 18 Nov 2015 15:46, \"Luke\" notifications@github.com wrote:\nwe are unable to call this numer but we received call from such numer\nregistered by our telephone exchange\nmaybe its some kind of voip numer\nanyway seems that such numer does not exists for calling back\nclosing issue then\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/90#issuecomment-157754132\n.\n. Okay, had a bit more time to look at this.\n\nYou are passing it a number starting 004644, which ends up looking for a Swedish number starting with 44.\nThe international dialling code for GB is 44, so if you have your number 0044203686890x, it'll return a valid number.\n. Hi,\nPlease see the section in the README about Invalid Numbers: https://github.com/giggsey/libphonenumber-for-php#problems-with-invalid-numbers\nIf you know that the number should be valid, please report it upstream to them.\nThere already seems to be an issue on Google's project for S\u00e9n\u00e9gal mobile numbers at https://github.com/googlei18n/libphonenumber/issues/919\n. Hi,\nPlease see the section in the README about Invalid Numbers: https://github.com/giggsey/libphonenumber-for-php#problems-with-invalid-numbers\nThe number you provided also returns invalid when using Google's demo. If you know that the number should be valid, please report it upstream to them.\n. Hi,\nPlease read the section of the README regarding Invalid Numbers.\nIf you do get different results between the two libraries, please reopen this issue.\n. If I try the same input via Google's demo, it does the same thing +41799425s028.\nSo it is ignoring the 's'. From the PhoneNumber object it returned, you can see it's set nationalNumber to the number without the 's'.\nThere might be a way of forcing the letters to stay, and for validation to fail. I'll have a look through the methods tomorrow morning (GMT). I think it would be one of the parameters of parse() or parseandKeepRawInput().\n. Okay, I don't see a way of keeping the raw number.\nThe normalize() will convert letters into numbers, but only if there are 3 or more letters in the input. Otherwise, it just strips all the letters, leaving the digits.\nWhat are you trying to achieve?\n. Thanks for this\n. Looks good, thanks :)\n. Thanks\n. Hi,\nAs per the FAQ (and the top of the file you changed), and metadata changes need to happen at Google's parent libphonenumber project.\nOnce they release a new version with metadata, it will get synced here, and a new version of libphonenumber-for-php will be released.\n. Thanks.\nA todo as part of #81: Link these to the document in docs/ for each class.\n. Hi @carcabot,\nAs included in the FAQ, any metadata changes would need to be submitted to Google's libphonenumber project. Once a new release is made upstream, the metadata for this project will get updated, and a new version released.\nWhen submitting an issue with the libphonenumber project, make sure you follow their Contributing Guide.\nClosing\n. Hi,\nBoth numbers appear as valid on both Google's demo for libphonenumber, and the libphonenumber-for-php demo.\n| Number | libphonenumber | libphonenumber-for-php |\n| --- | --- | --- |\n| +79255077200 | Valid RU Mobile | Valid RU Mobile |\n| 89255077200 | Valid RU Mobile | Valid RU Mobile |\nCan you provide a link to the demo that shows a problem?\n. You are trying to parse 89255077200 using CH (Switzerland) as the country code. It doesn't work because 89255077200 is not a valid number in Switzerland. When dialing internationally from Switzerland, the user would dial 00 7 925 507-72-00.\nIf you used RU (Russia) as the country code when using calling the parse() function, it will return a valid number.\n. As per https://github.com/giggsey/libphonenumber-for-php/issues/85#issuecomment-147643646, you can leave it empty or null, providing that it can work out the phone number from what is provided (e.g. supplying the number in E164).\n. You are calling parse() with the country code being PhoneNumberFormat::E164.\nTry changing that, and see if that helps?\n. The parse() function accepts a phone number, and a region code. This region code can be null if the number is already in an international format (like your example is).\nHowever, I have tried your example, and it is working fine for me.\n``` php\n<?php\nrequire 'vendor/autoload.php';\nuse libphonenumber\\PhoneNumberUtil;\nuse libphonenumber\\PhoneNumberFormat;\n$phoneUtil = PhoneNumberUtil::getInstance();\n$number=$phoneUtil->parse(\"+492302580150\", 'DE');\necho $phoneUtil->format($number, PhoneNumberFormat::NATIONAL) . PHP_EOL;\n```\nOutput:\n\n02302 580150\n\nThis is using PHP 7.0.5-2+deb.sury.org~trusty+1, but I would expect the same result with 5.x. The pcre version in use by my PHP 7 install is PCRE Library Version => 8.31 2012-07-06.\nThere were some issues with the PCRE version included with PHP7, but the regex was patched to solve it.\n. Ahh, that would explain it.\nThis project actually was the fork from the @davideme project, made because it wasn't getting updated.\nAnyway. Glad your problem has been sorted.\n. Hi @wmh,\nThanks for the pull request. Do you have an issue that this change actually resolves? Can you add a unit test showing that your change is working?\nThere isn't any code upstream that does the same as this, so I'm a bit wary of merging this without having  an actual bug.\n. Ahh, thanks.\nIf you create a file in Tests/libphonenumber/Tests/Issues (call it Issue106.php), and just check that the output for when looking up the geolocation of a number for the zh region matches what is expected.\nE.g. the +82822 prefix is \u9996\u5c14\u5e02 for zh, and \u9996\u723e\u5e02 for zh_Hant.\n. Thanks, that's great.\nI'll tag a new release once Google do their next release (based on previous activity, it might be around two weeks away).\n. I doubt I'm going to be able to look at this for a week or so, as I'm away on holiday at the moment.\nBut my initial thoughts are concern. If methods / variables are opened up for other libraries to extend, it could make it harder to keep the library in sync with any changes to the libphonenumber project.\n. I'm happy with 6ed0e75 changing self to static.\nIt's just changing the private methods to protected that concerns me slightly. The change itself doesn't break any BC, but if other projects then start using inheritance to change those methods, then those methods change, or disappear, does that become a BC breaking change?\n. I started writing some example code to get this exact example. Load the region code for the number, and just use the Locale class in PHP to get the country code for the locale. However, I think it could also be a useful function to be public in actual libphonenumber.\nFor now, I'm going to accept this Pull Request, thanks.\n. Good point.\nIf you want, submit a Pull Request and I'll accept. Otherwise I'll make the change over the weekend.\n. Closed by #109 \n. Thanks\n. 1) As far as I can tell, MCC/MNC info is not stored at all within the libphonenumber project.\n2) As you have already found, you can get the operator of a mobile number (the original range holder, due to number portability). However, there isn't a defined method of get this back to the Prefix.\n3) If you look at PrefixFileReader, there is a function called getPhonePrefixDescriptions. You might be able to use that to get the prefix array.\n. I'm glad you were able to extract the prefix list.\nAs for MCC & MNC, the feature would have to be added to Google's libphonenumber before I add it to this PHP Port.\n. I'm going to close this, as it's not directly related to libphonenumber-for-php.\nIf Google add this functionality, it'll get added here shortly after.\n. The PHP version is returning the same result as Google's demo.\nAs for the reason, leading zeros count as a national prefix for KR (and other countries). https://github.com/giggsey/libphonenumber-for-php/blob/master/src/libphonenumber/data/PhoneNumberMetadata_KR.php#L136\nIf you want the number with the leading zero, you'll need to format it into the National Format.\n. Hi @wonderer007,\nCan you provide a code example of what you are running to produce this error.\nI've just tried on the demo, and it works fine.\n. You're not using this library.\nThe namespace here is \\libphonenumber, not com\\google\\i18n\\phonenumbers.\n. The three failures are fine. They fail on my local machine, but pass fine on Travis. The reason is difference ICU versions, that have different spellings of those countries (bracket instead of square bracket).\nIs this the only place that it creates a new instance of PhoneNumberUtil?\n. Thanks,\nI'll merge once Travis starts working again.\n. > Composer requires PHP 5.3.2+ to run.\nSo I think this is a bit redundant.\n. Good point, but I'd like to think it should be the other way around. Packages which are 5.4 and above should specify the minimum version.\n. I'm happy to merge though.\nCould you also edit the README and put a sentence under Installation saying something like:\n\nThis project is supported with PHP 5.3 up to PHP 7. Currently, HHVM is not supported.\n\nThanks (on mobile so I can't merge from here)\n. Thanks for noticing this.\nIf the entry is the same as the English version, it won't store it. At runtime, if there isn't a local version, it will fallback to English.\nFor example,\nFor the 'PT' file, 55613201 is Bras\u00edlia - DF (Source)\nIn the 'EN' file, 55613201 is also Bras\u00edlia - DF (Source)\nExample number demo\nSo the functionality is working fine. However, it is still a bug that it is writing that array key in that array key in the first place and wasting memory/storage.\n. Okay, I've had a change to look at this in more depth.\nThese rows are empty, because the leading prefix 5561 is different in English (5561|Federal District) and Portuguese (5561|Distrito Federal).\nWhen an entry in the mapping file is an empty string (or null), it then looks up the same value in English. If the array key doesn't exist at all, it'll continue searching for a prefix.\nI'm going to close this, as having the values as empty strings actually provides a performance benefit (there is no need to always search English).\n. @thewilkybarkid, @Propaganistas, @Borales, @saruman: As maintainers of linked integrations, thoughts?\n. @Propaganistas Agreed. However, those libraries (I looked at the top two) only have the country names in English.\nFor example, the country name for 'DE' in English is Germany, but in German is Deutschland.\n. https://github.com/commerceguys/intl is PHP 5.4 and up.\nI just found https://github.com/punic/punic, which seems to cover what we need. However, it's out of date (there is an open Issue to update, but it's had no activity since the end of April), and it stores the data in JSON files (I'm not keen on the overhead there).\n. I would love to, but I know of clients that still require this library who are stuck on 5.3.\n. In the absence of a suitable alternative, I'm going to complete this and merge it to tie in with v7.5 that Google released last week (that contained no suitable changes for the PHP version), and ready for the 7.5.1 metadata version.\nOnce Google move up to v8, I'll reconsider dropping PHP 5.unsupported versions.\n. @danizord It wasn't a change of the public API of libphonenumber. Instead it's an internal class that is meant to only be used by libphonenumber-for-php itself.\n. Happy for suggestions to improve file count, need to be careful with memory usage too. #44 was an issue with memory usage and large arrays.\n. I've pushed a branch (#138) which reduces the file count of src to 1000 files.\nIt should be possible to combine metadata files further, but it would require a fair amount more work. I'll have more of a review tomorrow, then hopefully merge it in ready for the next release.\n. The new release has just been tagged which contains the prefix mapper changes. As my previous comment says, this has cut down the file count to approx 1000 files.\nThere was also another change that uses .gitattributes to exclude the Tests directory when exporting (so installing from dist on composer). This should further cut down the file count.\nI'm going to close this issue now, as I believe it's in a much better position than before. If you feel it needs to be reduced further, please reopen.\n. Hi,\nI'm unable to do any testing on this for a few days, but are you able to tell me whether this worked as expected in 7.4.3 (The previous version)?\nThere were only metadata changes made in the latest release, so I want to try to find where the regression was introduced.\n. Do you have an example where this function fails?\n. How are you getting to that function though, as it's protected?\n. Okay, thanks.\nFirstly, I'm unable to write an actual test to confirm, but the source of the Java version that this is a port from has the same behaviour (https://github.com/googlei18n/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2168-2200).\nSecondly, with your example (+440), how do you know what +44 region it belongs to? How can you be absolutely sure it's GB instead of JE, IM etc. when it's invalid? isPossibleNumber() would return false for the number you provided.\n. As a side note:\n\nit's an \"invalid\" english number, but there are voip services that will supply some really weird numbers when the price is right\n\nI feel your pain here. I've encountered this on a personal level. Although I've not encountered one that passes a leading zero in E164 for a UK number. I use libphonenumber for dealing with different number formats from different SIP providers, but only on a best effort level. If libphonenumber is unable to make sense of the number, I keep the original number.\n. I understand your view here, but it's not something I'm going to change.\nFeel free to create an issue for libphonenumber. If they make a change to the API here, this port will get updated to match.\nFor now, closing.\n. I've never encountered that, both with this project, and many other projects I use.\nI would suggest ensuring that your composer version is up to date, and if it still occurs, report it as a composer issue.\n. Closing this, as it is likely a composer issue.\nIf it does turn out to be something with this project, we'll reopen this issue.\n. Thanks :)\n. I'm glad you worked it out, but just a further note:\nThe format() function does not actually check whether the number is valid. Google's demo (and the libphonenumber for php demo) check whether the number is valid before trying to format it.\n. Hi,\nIt's still going to have to do the same amount of work if you pass one\nnumber in at a time, or many different numbers.\nIt does do some things to improve performance a bit. It uses a singleton so\nthere is only one instance in memory. Once it loads each countries metadata\nonce.\nThe slow part here is the getNumberType, as it has to compare the number\nagainst many different complex regular expressions to work out what number\ntype it is.\nI'll run some bench marks a bit later, and see if I get a similar result.\nOn Tue, 6 Sep 2016, 06:10 dheerajtiwari, notifications@github.com wrote:\n\nWhen I am using this library to get number type in my code it is taking\ntoo much time.\nI am using it in loop of 20k. To execute this much of loop it is taking\nupto 50 to 100 sec.\nIs there any way so that i can pass more than one number to find it's type.\nHere is my code.\n$phoneUtil = PhoneNumberUtil::getInstance();\n$numberPrototype = $phoneUtil->parse($number, $iso);\nreturn $phoneUtil->getNumberType($numberPrototype);\nInput field $number and $iso are coming in loop.\nThanks\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/127, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQnG8NCEUBmhUdOSLqx6trDb8WO-Dks5qnPXDgaJpZM4J1d44\n.\n. At 20,000 rows in 50 seconds, that gives 0.0025s per row.\n\nOn my local Windows setup (PHP 7), I've done ~30 example numbers, and my average is 0.0024s, so a similar result to you.\nI'm not sure what to suggest, apart from the usual caching where possible or offload the work to workers.\n. On a digitalocean droplet running the latest Ubuntu LTS with PHP7 (where the demo code runs):\n(This parses a number, then gets the number type). It only does it on a small sample size, and I've only run it once)\n| libphonenumber-for-php Version | Average |\n| --- | --- |\n| 7.6.0 | 0.0006 |\n| 7.5.0 | 0.0008 |\n| 7.4.1 | 0.0007 |\n| 7.3.0 | 0.0006 |\n| 7.2.1 | 0.0007 |\n| 7.0 | 0.0007 |\n| 6.0 | 0.0006 |\nAs you can see, the results here are pretty much the same.\nWhat operating system/PHP version are you using? Do you have xdebug installed?\n. @dheerajtiwari Any improvements on the latest release? Also, can you answer the questions from the end of my last comment.\n. Closing due inactivity.\nIf you are still having issues, can you answer the questions in the previous comments and reopen.\n. Hi,\nIt seems to work for me.\n``` php\n<?php\nrequire DIR . '/vendor/autoload.php';\n$phoneNumberUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\n$phoneNumberObj = $phoneNumberUtil->parse('+64286300988', 'PN');\nvar_dump($phoneNumberUtil->isValidNumber($phoneNumberObj));\n```\nOutput:\n\nbool(true)\n\nAre you using the latest version?\n. Hi,\nPlease take a look at the section in the README about Invalid Numbers.\nIn this case, it appears that Google's libphonenumber is returning the same issue: 09071230000 in NG.\n. I'm closing this issue as Google's libphonenumber is returning the same result.\nIf you do believe this is an issue with this project, feel free to reopen.\n. Hi,\nI'm not near a PC for a week (away on holiday), but if you take a look at\nthe FAQ in the README, it asks for metadata changes to be submitted to\nGoogle on their parent project.\nIf it's accepted upstream, it'll get pulled down to this PHP version on\ntheir next release.\nOn Sat, 24 Sep 2016, 12:00 Muhammad Ali, notifications@github.com wrote:\n\nCellOne is now BSNL in India\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/giggsey/libphonenumber-for-php/pull/131\nCommit Summary\n- Changed operator CellOne to BSNL\nFile Changes\n- M src/libphonenumber/carrier/data/en/91.php\n  https://github.com/giggsey/libphonenumber-for-php/pull/131/files#diff-0\n  (340)\nPatch Links:\n- https://github.com/giggsey/libphonenumber-for-php/pull/131.patch\n- https://github.com/giggsey/libphonenumber-for-php/pull/131.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/pull/131, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AASqQq9XGBA7RalF7W25OzXKQHcUwQETks5qtQLZgaJpZM4KFnbs\n.\n. Not an issue with this project, see the FAQ: https://github.com/giggsey/libphonenumber-for-php#problems-with-invalid-numbers\n\nClosing\n. I'm unable to reproduce this.\n``` php\n<?php\nrequire DIR . '/vendor/autoload.php';\n$phoneNumberUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\n$phoneNumberObj = $phoneNumberUtil->parse('0117 396 0123', 'GB');\nvar_dump($phoneNumberObj);\n```\nobject(libphonenumber\\PhoneNumber)#5 (9) {\n  [\"countryCode\":protected]=>\n  int(44)\n  [\"nationalNumber\":protected]=>\n  string(10) \"1173960123\"\n  [\"extension\":protected]=>\n  NULL\n  [\"italianLeadingZero\":protected]=>\n  NULL\n  [\"rawInput\":protected]=>\n  NULL\n  [\"countryCodeSource\":protected]=>\n  NULL\n  [\"preferredDomesticCarrierCode\":protected]=>\n  NULL\n  [\"hasNumberOfLeadingZeros\":protected]=>\n  bool(false)\n  [\"numberOfLeadingZeros\":protected]=>\n  int(1)\n}\n. Okay, if you are using Laravel, it would already be handling the autoloading.\nInstead of returning the PhoneNumber object in your controller, try using the dd function. This debug's and dies (a fancy var_dump).\n. Cool, is it okay for me to close this issue?\n. Closing issue, if you have any more questions, please reopen\n. I'm not really sure, and it's outside of the direct scope of this project.\nTake a look at https://github.com/Propaganistas/Laravel-Phone, this might cover your usecase.\n. It provides Laravel integration with this library.\nOn Tue, 4 Oct 2016, 11:52 blop.. blop.., notifications@github.com wrote:\n\nthis repo is extends from your repo?\n2016-10-04 11:04 GMT+03:00 Joshua Gigg notifications@github.com:\n\nI'm not really sure, and it's outside of the direct scope of this\nproject.\nTake a look at https://github.com/Propaganistas/Laravel-Phone, this\nmight\ncover your usecase.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n<\nhttps://github.com/giggsey/libphonenumber-for-php/issues/133#issuecomment-251321101\n,\nor mute the thread\n<\nhttps://github.com/notifications/unsubscribe-auth/AR30df2YwquGVRBUZbqgKfuTNZRDlVHmks5qwgiBgaJpZM4KMB-T\n.\n\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/133#issuecomment-251356528,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQor3NeP8QC8RFaVoDNf5QtKq7P2Fks5qwi_-gaJpZM4KMB-T\n.\n. Thanks \ud83d\udc4d \n\nI'm going to make the change from https://github.com/googlei18n/libphonenumber/commit/59a13d4ffbd49544d4db0ef1d37461bdbe38bfac within the next 2 hours, and will review this then.\n. Thanks\n. Thanks for the report.\nI can't change it from static to a class method as that would be a Backwards Incompatible change. Also, it would no longer mirror Google's libphonenumber.\nHowever, this method errors because it's trying to load a regular expression which is loaded at startup of getInstance. This is because PHP can't set static class properties based on an expression. It can be worked around for in this function, but I want to go through and check all the other static methods.\nI'll try to look at it over the next few days.\n. Thanks again for reporting.\nOnce Google release a new version of libphonenumber (based on previous release history, should be within a few weeks), a new version will be released here.\n. I was going to mention that it already has a section in the composer.json to handle it for satis installs, but then found my reddit comment saying exactly that.\n. And that'll be where I remember doing it for :)\nI'm just preparing it now.\n. Thanks for reporting :+1: \n. You could manually remove the files, and update any Map files to reflect the new state, but it would be a rather manual process.\nThe other approach would be to modify the build script to only include certain regions, and maintain a fork.\n. Option 1:\nFor the main metadata, the list of supported regions is loaded from CountryCodeToRegionCodeMap. If you remove any of the main metadata files from data/, then you should tidy up the array too (otherwise it might try to load a missing metadata file).\nFor the prefix based systems (Geocoding, Carrier etc.), the directories contain a Map.php file. This lists the supported regions + prefix files. Again, if you delete the metadata file, then make sure you delete the entry from the array.\nOption 2:\nFor the main metadata, it loads all the data from one xml file. It processes this in a loop in BuildMetadataFromXML. For the prefix mapper (geocoding, carrier etc.), then look in GeneratePhonePrefixData. From memory, $textFile contains the source file name (en/44.txt, fr/41.txt etc.) and $outputFiles contains the array of files to write.\nBy filtering these functions by the regions you care about, it'll only write those files. I suggest still using phing to compile the data (it handles removing the old files first).\nOption 2 would be easier going forward, as you would be able to keep the metadata/code changes up to date easier than manually removing files.\n. Deleting the data files is fine, it's just that the library might throw an exception if it can't load the file. Although I guess it'll throw an exception if you try to use a region that doesn't exist, so it won't make much of a difference.\nRegardless, glad you were able to sort something out.\n. 00 is the International Dialling Prefix (IDD) for most countries, but not all.\nTherefore, if you try parsing 0049... without specifying the region, it cannot be sure that you are looking at it from the point of view of a region that does have 00 as it's IDD.\nRelated issue on Google's parent project: https://github.com/googlei18n/libphonenumber/issues/382#issuecomment-65484198\n. Thanks for this.\nGoogle made a code change, do you know if that have any impact/need migrating across yet?\n. Ignore the StyleCI error, they managed to reset the configuration for the project, so it's forgotten to exclude all the generated files.\nI've also had a quick look at Google's changes, and I'm happy to merge this in and release without those additional changes.\nThanks :)\n. I just tried the first number in Google's demo and it gives the same result.\nPlease check the FAQ for reporting metadata issues: https://github.com/giggsey/libphonenumber-for-php#problems-with-invalid-numbers\nClosing.\n. Thanks :)\n. Hi, please check the FAQ.\nI don't accept metadata fixes in this project, as it will cause it to drift with the metadata built from Google's project.. The region code (if supplied) allows libphonenumber to narrow down which region a phone number belongs to. If it's not provided, then the only way it can tell the region is by being passed a full international number (in E164).\nHave a look at https://github.com/giggsey/libphonenumber-for-php/issues/141 or https://github.com/googlei18n/libphonenumber/issues/382#issuecomment-65484198.\nAlso, from the docs:\n\nIf the number is passed in an international format (e.g. +44 117 496 0123), then the region code is not needed, and can be null. Failing that, the library will use the region code to work out the phone number based on rules loaded for that region.\n\n. Do you have any code examples of what you are trying to execute, and the error you are getting?. You need to use an autoloader so the PHP files are loaded.\nIf you are using libphonenumber-for-php v8, then it needs to be PSR-4 compatible, otherwise a PSR-0 autoloader will do.\nI recommend using Composer to handle this for you.. @LunarDevelopment Are you actually using a PSR-4 autoloader there? Or if you are using composer, are you loading the 'vendor/autoload.php'?. @LunarDevelopment That should be working fine.\nCan you provide a code sample and your composer.json so I can attempt to reproduce?. As there hasn't been any feedback from @mrabd423, I'm closing this issue. If you have this issue again, please reopen.\n@LunarDevelopment If you are able to reproduce the error, can you open a new issue.. @Appiah Are you using an autoloader?. For future reference, instructions on the requirements of this project can\nbe found in the README file. This includes details about using an\nautoloader.\nAlso, it's Gigg/giggsey (two g's) :)\nOn Thu, 21 Dec 2017, 01:08 Emmanuel Appiah, notifications@github.com\nwrote:\n\nHi Joshua Gig, Thanks for getting back to me this quickly.\nNo, am not using autoloader. A link to know more on autoloaders\nfor php, if any, would also be much appreciated.\nMeanwhile, after a few considerations, I decided to rather stick\nwith the java side of libphonenumber for now. And it is working\nfine for now.\nMore on the project at :\nhttps://github.com/Appiah/aireceive_phone_num_cleaning_project\nOnce again, thanks, you are such an inspiration to me.\nI salute you.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/150#issuecomment-353228430,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQhtCI5-pihMHLcClpaSQnfOrYaZ2ks5tCa-CgaJpZM4LP3Y7\n.\n. You're not URL encoding the + on the link to the libphonenumber-for-php demo: https://giggsey.com/libphonenumber/index.php?phonenumber=%2B962775321073&country=ZZ&language=en&region=GB. Thanks for reporting.\n\nIt looks like this bug has existed since 2012/2013.\nOnce Google release their next version (I believe they are aiming for this week), then a new version will be tagged here. The Release Notes will mention this change, as some people might be relying on formatting to E164 to output extensions.. This port aims to keep API compatibility with Google's Java release. As a result, I'm not willing to add additional API methods that do not exist in their version.\nHowever, I have knocked up some sample code that will get a full list of carriers:\n```php\n<?php\nuse libphonenumber\\PhoneNumberToCarrierMapper;\nuse libphonenumber\\prefixmapper\\PhonePrefixMap;\nuse libphonenumber\\prefixmapper\\PrefixFileReader;\nrequire DIR . '/vendor/autoload.php';\n$directory = PhoneNumberToCarrierMapper::MAPPING_DATA_DIRECTORY;\n$baseLocation = dirname((new ReflectionClass(PhoneNumberToCarrierMapper::class))->getFileName());\n$prefixFileReader = new PrefixFileReader($baseLocation . DIRECTORY_SEPARATOR . $directory);\n$regions = \\libphonenumber\\PhoneNumberUtil::getInstance()->getSupportedRegions();\n$carriers = [];\nforeach ($regions as $region) {\n    $code = \\libphonenumber\\PhoneNumberUtil::getInstance()->getCountryCodeForRegion($region);\n    $result = $prefixFileReader->getPhonePrefixDescriptions($code, 'en', null, 'US');\nif ($result === null) {\n    continue;\n}\n\n$property = new ReflectionProperty(PhonePrefixMap::class, 'phonePrefixMapStorage');\n$property->setAccessible(true);\n\n$carriers = array_unique(array_merge($carriers, array_values($property->getValue($result))));\n\n}\nsort($carriers);\nvar_dump($carriers);\n```\nThe only real risk to BC is the usage of Reflection to access PhonePrefixMap->phonePrefixMapStorage.\nHowever, you could continue using your method, and convert the hardcoded file path to use the $directory and $baseLocation.\nA few things to watch out for:\n - libphonenumber only stores carriers for mobile numbers\n - It'll only display the range owner, so any number portability means you won't have the correct carrier\n - It only displays owners of number ranges, so there is a good change MVNO's won't be included (the data for the UK does not contain MVNO's as they don't own the numbers)\nIf you want to use this information without the risk of BC changes being introduced in the PHP, I would recommend parsing the data yourself, and storing it for future use. The base data is stored in simple text files, in a similar fashion to the PHP array: https://github.com/googlei18n/libphonenumber/blob/master/resources/carrier/en/1.txt\nI'm going to close this issue, as it's not something that is going to be implemented natively into this port. However, I'm happy to continue discussing any alternatives.. Thanks :). Do those files actually get written to the class map, as they aren't\nclasses. I guess the classmap generator could take a bit longer if it has\nto search more files.\nWill give this some more thought tomorrow.\nOn Tue, 7 Feb 2017, 23:19 Wenzheng Jiang, notifications@github.com wrote:\n\nI think \"/src/geocoding/data/\" can be excluded from autoload since it\ndoesn't contains any thing needs to be autoloaded.\nAnother reason is I'm sort of implementing my own autoloading mechanism\nwith parsing. And the files under \"/src/geocoding/data/\" take very long\ntime to parse.\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/giggsey/libphonenumber-for-php/pull/158\nCommit Summary\n\nExclude \"/src/geocoding/data/\" from autoload\n\nFile Changes\n\nM composer.json\n   https://github.com/giggsey/libphonenumber-for-php/pull/158/files#diff-0\n   (4)\n\nPatch Links:\n\nhttps://github.com/giggsey/libphonenumber-for-php/pull/158.patch\nhttps://github.com/giggsey/libphonenumber-for-php/pull/158.diff\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/pull/158, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AASqQkpuGPxe9qBQOzDXNtN4pjuAB63cks5raPvsgaJpZM4L6LCd\n.\n. Had a better look, and it does seem to have a minor speed improvement for composer.. Thanks :). Good spot, has this any impact on the code?. Can you add a new test that confirms that this bug is fixed then.\n\nIf you put it under https://github.com/giggsey/libphonenumber-for-php/tree/master/tests/Issues and call it Issue159Test?\nIt should fail without your fix, and pass with it.\nThanks. Thanks.\nOnce Travis passes, I'll merge it in.. Thanks for the fix.\nOnce Google release their next version, it'll get released here.. Hi, this isn't something that has been considered before. However, I can see that this could be useful for some.\nI might be able to look at it something in the near future, but I'll happily accept pull requests for it.. I made a start on this over the weekend, and I hope to have something pushed this week.. Took a bit longer than planned, but it's now pushed to a branch (PR #164).\nI'll probably leave it there until Google release 8.4 (currently on 8.3.3).\nIf you could give it a try (You can use dev-phoneNumberMatcher in your composer.json), that would be great.. Do you have any sample code?\nOr is it just something like:\n```php\n<?php\nrequire 'vendor/autoload.php';\n$phoneNumberUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\n$spanishNumber = $phoneNumberUtil->parse(\"+34 666999666\", null);\n$ndc = $phoneNumberUtil->getLengthOfNationalDestinationCode($spanishNumber);\nvar_dump($ndc);\n```\nWithin the next hour, I'll give that try using Google's libphonenumber in Java.. Looking at the documentation for the function, it seems that this is the desired behaviour?\n * Gets the length of the national destination code (NDC) from the PhoneNumber object passed in,\n * so that clients could use it to split a national significant number into NDC and subscriber\n * number. The NDC of a phone number is normally the first group of digit(s) right after the\n * country calling code when the number is formatted in the international format, if there is a\n * subscriber number part that follows. An example of how this could be used:\n\n+34 666999666 in the international format is    +34 666 99 96 66. The first group of digits after the country calling code is 666.. getLengthOfGeographicalAreaCode() won't help, as you're trying to lookup a mobile number. Mobile numbers in Spain don't have a geographical area.\nThis might be a better question for the libphonenumber Mailing List. The fact you are using a PHP port shouldn't make a difference, as it should be the same API as the Java version.. Sorry I wasn't able to help further. This uses part of the library that I don't use, so I don't have a great deal of knowledge about it.\nI'll close this issue for now. If you have any other issues, feel free to open a new issue.\nThanks. Whoops, forgot to add that file into git on the last commit.\nI'll release 8.8.3.1 once the tests pass.\nThanks for reporting.. Hi,\nPlease read the README section about Invalid Numbers.\nIf this PHP version is giving a result to Google's project, please re-open.\nClosing.. This is a hard question to answer, and I think it will depend on your website and the users.\nPersonally, I use libphonenumber on a few websites where we check that user's phone numbers are valid according to libphonenumber. We've never had any complaints from users not being able to enter in a number. However, the users are primarily from the United Kingdom, or Europe, where phone numbers formats are well defined and don't often change.\nYour results may vary depending on your users.. As there has been no activity on this for a few weeks, I'm going to close it.\nThanks for the comments @HawkonDK & @giovkanata . It only returns a normal array, not as associative array. So the keys have no meaning.\nIt's just a coincidence that Austria and Germany are at the 'correct' array position, but that's all.\nIf you want to get the country code, there is the function getCountryCodeForRegion. The demo is showing the correct value:\n\nNational  011 15-1234-5678  \n\nhttps://giggsey.com/libphonenumber/?phonenumber=%2B5491112345678&country=&language=&region=\nDo you have some sample code?. Closing this issue.\nPlease open a new issue if you have any further questions.. The second parameter to parse (country code) is the phone number region to assist with lookups.\nIf the number provided is already in an international format (Like the E164 number you have passed), then it can understand where the number is from. However, if you pass a local number (0770...), then it needs to use the region to check whether it's a French number.. https://github.com/giggsey/libphonenumber-for-php/blob/master/docs/PhoneNumberUtil.md#parse should also help. Sorry, this is a duplicate of the upstream-8.4.0 branch.\nI'm going to close this in preference to the existing branch.\nThanks for contributing though.. Sorry, I had pushed the branch, but not bothered with a PR.\nOnce Travis passes, I'll merge it all into master, and tag a release. Should be about an hour.. All the examples in the README use the full namespace path, so a use statement isn't needed.\nIf people want to use the aliases, then they should know how to import classes?. Thanks for the report. I'll submit a change later today that ensures all public static methods initialise properly.. Turns out that the other methods were already tested as part of #135.\nActually, it seems that isViableNumber was tested there too. This must mean the @runInSeperateProcess PHPUnit stuff isn't working as expected.. :man_facepalming: Of course.\nOnce merged (shouldn't be too long), it won't get tagged until Google release their next version.\nThanks for reporting. You hit the nail on the head with the quote.\n\nthis has been implemented by many countries, but not all of them.\n\nlibphonenumber can't know that 00 is the International Dialling Prefix, because it depends on the region, which is why you need to pass it. The only universal International Dialling Prefix is the +.\nGoogle's demo does the same thing: https://libphonenumber.appspot.com/phonenumberparser?number=00+61+1900+654+321\nI'm going to close this, as it's not a valid bug for the PHP port, but rather the behaviour of Google's library. If you think that's incorrect behaviour, either open an Issue with them, or post to their mailing list.. Hi,\nThis port of libphonenumber returns the same as Google's version: https://libphonenumber.appspot.com/phonenumberparser?number=%2B551997945216\nTherefore, I'm closing this, as it's not an issue with this library. See the FAQ for further details.. Closing, as this number does not validate with Google's parent project too: https://libphonenumber.appspot.com/phonenumberparser?number=416-111-2222&country=CA\nSee: https://github.com/giggsey/libphonenumber-for-php#problems-with-invalid-numbers. 416-253-5451 gives the same results.\nValid on both\n\nhttps://giggsey.com/libphonenumber/index.php?phonenumber=416-253-5451&country=CA&language=&region=\nhttps://libphonenumber.appspot.com/phonenumberparser?number=416-253-5451&country=CA. Late Static Binding (the new static) was added in PHP 5.3, so it should be\nfine.\n\nWhat version of PHP is your IDE code hinting for?\nOn Fri, 12 May 2017, 19:45 rocbar, notifications@github.com wrote:\n\nMy ide or Adobe CS5.5 Dreamweaver indicating the following line consists\nof an error:\nSee package: /libphonenumber-for-php/src/PhoneNumberToCarrierMapper.php\nLine 51 , \u201cstatic::$instance[$mappingDir] = new static($mappingDir);\u201d\nIs that meant to be, or is it a bug?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/183, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQm-jHu4tXsvKOl7Fhtlw791iNNQWks5r5KjOgaJpZM4NZpgl\n.\n. It should be fine. The unit tests cover that code, and those run on all PHP\nversions from 5.3 upwards.\n\nOn Fri, 12 May 2017, 19:49 rocbar, notifications@github.com wrote:\n\nPHP 5.6\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/183#issuecomment-301156548,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQioH2z49Tw0saSXVcRO8wT_GJRUFks5r5KmsgaJpZM4NZpgl\n.\n. Nope, if you are using the latest version, then the only extension that is\nneeded is mbstring.\n\nAre you able to check your error logs, and get an error message?\nOn Fri, 12 May 2017, 20:02 rocbar, notifications@github.com wrote:\n\nMy PHP 5.6.13 is bundled with the pecl intl, do I still need to install\nphp/pear extenion?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/183#issuecomment-301159596,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQkegKA3N2FLBDucT_F7s_ivnJfv5ks5r5Ky0gaJpZM4NZpgl\n.\n. Can you provide some example code?\n\nOn Fri, 12 May 2017, 20:50 rocbar, notifications@github.com wrote:\n\nNo error message from my test page: tel-num.php HTTP/1.1\" 200\nSo far, all the other samples code worked. I am assuming its the latest\nversion V8.4.2 which is in the METADATA-VERSION.txt file. And my PHP\nversion does have the mbstring extension.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/183#issuecomment-301169972,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQlZPEmZGoXd8Yp73QMfkkohLd0hRks5r5LfxgaJpZM4NZpgl\n.\n. > $loadFiles = $thisFile .'plugins/libphonenumber-for-php-master/vendor/autoload.php';\n\nThat looks a bit suspicious, but if it isn't causing an error, then it should be okay.\nThe problem is the number you are testing with: If you put that into the demo: https://giggsey.com/libphonenumber/?phonenumber=%2B18768591023&country=JM&language=&region= you'll see that it doesn't return any carrier information.\nThat's because libphonenumber doesn't have the carrier information for that number prefix for Jamaica.\nEdit: https://github.com/googlei18n/libphonenumber/blob/master/resources/carrier/en/1.txt#L514 has data for that prefix. Interesting...\n. Okay, found the problem.\nThe demo was still running 8.4.2. The carrier info for this number was added as part of 8.4.3. If you update to that version, you'll find it works.. Try the number on the demo: https://giggsey.com/libphonenumber/ and it'll show the carrier info if it has data.\nAs for a version of the As You Type Formatter to use in the browser, take a look at one of the JavaScript versions. That'll be better suited for it than using this PHP version.. This library is a PHP port of Google's libphonenumber project. It's based on the Java version of their library, just converting it to PHP and making changes as appropriate.. Yes, all of it is a port.\nHow they are built are in the build directory. Google's data files for the prefixes are just text files in the format \"prefix|text\". A bit of string manipulation + looping, and they get moved into PHP arrays (quicker at runtime to read).. If you look at the demo: https://giggsey.com/libphonenumber/?phonenumber=%2B359888888888&country=&language=&region=\nYou can extract the country code from the PhoneNumber object that is returned from the parse function.. Please see the FAQ.\nClosing. The library itself will return the highest accuracy it can.\nYour best bet would be to get the country code of the phone number, and just another library (or a simple array) to translate that into a country name.\nPseudocode\n```php\n$countryList = [\n   'GB' => 'United Kingdom',\n   'NZ' => 'New Zealand',\n   // etc...\n];\n$numberObj = $phoneNumberUtil->parse('+441174960123');\n$region = $phoneNumberUtil->getRegionForNumber($numberObj);\necho $countryList[$region];\n```\n. ID\nSource: https://countrycode.org/indonesia (I Googled it)\nOn Wed, 23 Aug 2017, 03:35 xuanskyer notifications@github.com wrote:\n\nwhat's Region code for Indonesia?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/195, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQlS55GwSabWSzzA0Vmx2y8-Obhpiks5sa4_ugaJpZM4O_aiN\n.\n. Thanks for the contribution.\n\nI wasn't initially sure whether to accept this, as I want to maintain API compatibility with the Java version of libphonenumber (See PhoneNumberUtil.java -> parse()).\nHowever, the Java version does allow the value to be nullable, and it can handle it fine. So I think I am happy for this to be merged.\nCan you add a simple test just calling parse without a region code (You can use an example number of +441174960123 if you need one).\nThanks. See also, #85. LGTM, will merge once tests are complete (might be tomorrow UK time). Thanks for the contribution.\nIt'll be part of Google's next release. They seem to be doing them around every 2 weeks at the moment.. @a-komarev A new version has just been tagged. Thanks for the contribution.. Yes,\nOnce you parse a phone number, you are able to get the number type, which\nwill tell you whether it's a mobile, landline (fixed-line) or another type.\nTry putting some numbers into the demo. It'll show you the number types.\nOn Tue, 12 Sep 2017, 07:24 amdxypf notifications@github.com wrote:\n\nDoes libphonenumber support distinguishing between landlines and mobile\nphones?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/199, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQpIPN7f9zg1FmWAwGeeQP6IdTGyVks5shiOQgaJpZM4PUKNv\n.\n. Hi,\n\nThis project does not accept merge requests for the data directly.\nPlease see the FAQ for metadata issues.. Hi,\nThis project does not accept merge requests for the data directly.\nPlease see the FAQ for metadata issues.. Hi,\nPlease see the FAQ regarding invalid numbers.\nAny metadata changes must be reported to Google in the parent libphonenumber project. Once they have accepted and fixed the issue, then the changes happen on this PHP Port at the next release.. Hi,\nI see that you've also opened an Issue on Google's libphonenumber project.\nIf their demo is returning the same as the demo for this PHP Port, do you\nmind closing this issue, as the question will be best suited for them.\nThanks\nOn Thu, 21 Sep 2017, 07:54 Dipanjan Bhattacharjee notifications@github.com\nwrote:\n\nHi There,\nWe are using this bundle in our Symfony 2.x application from a long time\nand it worked for very well.\nRecently, one of the customer reported that below numbers are not being\nrecognized as valid US phone numbers.\nExample : 8618601970643, 35796444692,\n8613811212437,59169611818,555181404269, 440790375,\n358440482158, 64210620096\nWe are curious to know what exact format/validation/checks you are using\nfor validating US phone/mobile numbers.\nPlease do not consider this an issue, rather just a query.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/204, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQmPMpKWFIiacFi896NT4oEmlCaObks5skggQgaJpZM4Pe4Ad\n.\n. https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#where-do-we-get-information-from-to-determine-if-a-number-range-is-valid might help a bit.\n\nFor now, I'll close this issue, as it'll probably be answered by https://github.com/googlei18n/libphonenumber/issues/1939. Check your PHP and web server error log, it might have gone into there.\nAs you're using PHP 7.1, you could also try catching Throwable, and see if that gives you more insight.. I doubt I'm going to be able to help much, as this is PHP segfaulting, which indicates a bug with PHP instead.\nHowever, if you use gdb to get a backtrace with the script, that might point at an extension\nRough guide (off the top of my head):\ngdb php scriptName.php\n\nrun\n(it'll crash)\nbt\n(prints backtrace). 00 is an international dialling code for some countries (not all). As a result, you need to pass a region for libphonenumber to search from.\n\nFor example, 00 is the dialling code for the UK, so you could search for this number via:\nphp\n<?php\n$number = PhoneNumberUtil::getInstance()->parse('0031612345678', 'GB');\nGoogle cover this in their FAQ: https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#why-wasnt-00-parsed-the-same-as-. I'm closing this as there has been no activity, and it was a question about the usage of libphonenumber rather than an Issue.\nFeel free to re-open if you have further questions about this topic.. 01632 is a number range Ofcom have reserved for drama use, as a result\nlibphonenumber does not validate it as a valid (actively allocated) number.\nSee https://github.com/googlei18n/libphonenumber/issues/341 and the linked\nissues there for discussion.\nOn Sat, 18 Nov 2017, 09:40 monikamni, notifications@github.com wrote:\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/211, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQg5EKDFtaonZ4x7iXkTB-tj8tw7Pks5s3qX_gaJpZM4Qi8br\n.\n. Hi, this number is validating on both the libphonenumber-for-php demo, and Google's libphonenumber demo.. If you are using the latest version, then it should be validating fine.\n\nWhat version are you using, and do you have any example code?. Wait, I just saw the screenshot.\nAre you actually using libphonenumber-for-php, or a JavaScript version?. It looks like you're using https://github.com/Borales/yii2-phone-input\nFrom the look of it, it should be using the latest version of libphonenumber-for-php. However, it also appears to it uses https://github.com/jackocnr/intl-tel-input for frontend validation. It could be that the JS package is out of date?. Hi,\nThanks for the contribution, but this project does not accept metadata updates.\nPlease take a look at the FAQ section in the README: https://github.com/giggsey/libphonenumber-for-php#problems-with-invalid-numbers. Off the top of my head, I'm not sure whether there is a function to do this. This project maintains API compatibility with Google's Java version of libphonenumber. So if they have a function to provide this functionality, then it should exist on this project too.\nHowever, the link is stored in the metadata, so as a work around, you could get an example number by region, then extract the country code from that PhoneNumber object.\n-- Edit --\nFound the function:\n/**\n * Returns the country calling code for a specific region. For example, this would be 1 for the\n * United States, and 64 for New Zealand. Assumes the region is already valid.\n *\n * @param string $regionCode the region that we want to get the country calling code for\n * @return int the country calling code for the region denoted by regionCode\n */\npublic function getCountryCodeForRegion($regionCode). I'll leave this open as a reminder to update the documentation to add these additional functions.. @voorsboy Are you able to provide some simple example code that triggers this error, along with the PHP version you are running in your production environment.\n\n@xpetter Glad you managed to solve it. I recommend running composer update with the same PHP version/extensions are your production environment, as this would have caught the lack of the mbstring extension.. @voorsboy Glad you managed to get your code working.\nI'm going to close this issue for now, as it doesn't appear to be an issue with this library. If you are able to reproduce this issue, please reopen.. Thanks for the contribution.\nHowever, this project does not accept merge requests for the data directly.\nPlease see the FAQ for metadata issues.. Good spot.\nI wonder if it'll be worth calling the setter functions for each of those properties instead. That'll catch any other issues like this.. Leave it how you've made the change for now. It'll catch any future changes to the PhoneNumber object that have the issue. At that point, it might be worth changing to the setters.\nI restarted one of the Travis jobs, due to a timeout. I'll merge this once it's successful.\nThanks for the contribution.. Thanks.\nA new version will be tagged once Google release a new version of their library.. Tests are failing due to Travis Issues on HHVM. Seems to be related to Meltdown fixes.. Google does not support machine to machine numbers at this time, although they have open discussions about it.\nhttps://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#what-about-m2m-machine-to-machine-numbers. I'm closing this as this isn't an issue with this library.\nIf/When Google add support for M2M numbers, it'll get ported over to this version.. Hi,\nPlease take a look at the FAQ for Invalid numbers: https://github.com/giggsey/libphonenumber-for-php#problems-with-invalid-numbers. It would have to be as part of a major version release (as the majority of people would just install libphonenumber-for-php, ignoring the suggestions, and wonder why the Geocoder doesn't work). I want to try to maintain the same version number as Google's libphonenumber, so I don't know when/if that'll happen.\nI was surprised at how out of date certain operating systems are with the CLDR data. I remember the LTS version of Ubuntu was quite a bit out of date.\nI agree that it's useless for people who have the intl extension, and up to date CLDR data, but the package is only 1.4MB and changes twice a year. As for people getting inconsistencies with the intl package, that'll be because the OS CLDR data is out of date, which ideally wouldn't happen.. > Do you mean you cannot tag your own releases?\nThey've just released v8.8.10, so I'll match that version number.\nSo I'd need to wait until they release v9 before I introduce BC breakage.\nIdeally, I'd use the intl extension if it was available, otherwise install giggsey/locale (maybe preferring giggsey/locale if its installed, as people might want up to date CLDR data). However, I'm not sure how to get that working with composer, and other projects that I've seen do it (I think symfony have it with their intl) cause issues when people update composer on one host with intl, but install on a different box without it.. Yes, but they need one or the other for the feature to work.\nI'm not really comfortable making it a runtime exception if neither is available. We had that via #46, and one of the reasons for giggsey/locale was to avoid that potential exception.. I don't want to reintroduce that runtime exception which can be avoided by a 1.4MB package.\nYes, it's an additional package, but it would be a waste to bundle it with libphonenumber-for-php as the two projects release on completely different cycles.\nIt'll also (for the majority of the time) contain more up to date & correct data than the intl extension installed on the OS.. Thanks for the contribution.\nHowever, this project does not accept merge requests for the data directly.\nPlease see the FAQ for metadata issues.. There are functions called getSupportedRegions() and getSupportedCallingCodes() that return the regions and calling codes as arrays.\nThose might help.. As an initial step, make sure you are using the latest version of the\nlibrary. 6.3.1 is very out of date.\nOn Wed, 14 Feb 2018, 14:16 Ivo Kuzov, notifications@github.com wrote:\n\nMy Api use this library for phone validation. It works well until this\nnumber was used - \"+49 15698 547789\"\nThis is a valid german number. In your demo page it is validated as true.\nIn my code $utility->isValidNumber($number) returns false\n`\ntry {\n$number = $utility->parse($value, \"\");\n} catch (NumberParseException $e) {\n$this->error(self::MSG_PHONE_NUMBER);\nreturn false;\n}\nif ( $utility->isValidNumber($number) === false) {\n    $this->error(self::MSG_PHONE_NUMBER);\n    return false;\n}\n\n`\nAm I missing something or there is a bug.\nI am using \"giggsey/libphonenumber-for-php\": \"6.3.1\" version\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/228, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AASqQhIMpDOzaseeNrkvM2DcYIYS3nqNks5tUurTgaJpZM4SFYZp\n.\n. Is it possible just to link to the headings, instead of keeping the full GitHub links?\n\nOtherwise, thanks for the improvement.. Thanks for the contribution :+1: . Good spot, thanks.\nCan you fix that additional typo from the review and I'll merge it.. Thanks for the contributions :). Confirmed, although I seem to get the opposite result:\nUsing the latest libphonenumber-for-php, and docker images for the different PHP versions:\n$ docker run -v ~/lp:/opt php:7.0.10 php /opt/test.php\n+86 186 1617 7661\n\n$ docker run -v ~/lp:/opt php:7.0.22 php /opt/test.php\n+86 18616177661\n\nUntil I can investigate properly, I think it'll be something with the PCRE version included in PHP.\nPCRE versions:\n$ docker run -v ~/lp:/opt php:7.0.10 php -d pcre.jit=1 -r \"echo PCRE_VERSION;\"\n8.38 2015-11-23\n\n$ docker run -v ~/lp:/opt php:7.0.22 php -d pcre.jit=1 -r \"echo PCRE_VERSION;\"\n8.35 2014-04-04\n\n. Disabling pcre.jit avoids the problem:\n$ docker run -v ~/lp:/opt php:7.0.10 php -d pcre.jit=0 /opt/test.php\n+86 186 1617 7661\n\n$ docker run -v ~/lp:/opt php:7.0.22 php -d pcre.jit=0 /opt/test.php\n+86 186 1617 7661\n\n. Related issues: https://github.com/giggsey/libphonenumber-for-php/issues/79 and maybe https://bugs.php.net/bug.php?id=70304. Looks like it needs a similar patch to #89.\nProblem regex:\nhttps://github.com/giggsey/libphonenumber-for-php/blob/master/src/data/PhoneNumberMetadata_CN.php#L451\n\n1(?:[3-57-9]|66)\n\nSplitting it up to:\n\n1(?:(?:[3-5]|[7-9])|66)\n\nmeans it works on both versions of PHP7 with jit enabled.\nHowever, this is not a scalable solution in the future, so another solution is required.. I updated one of the previous comments with the PCRE versions found in both docker images. Annoyingly, the newer PHP version has an older PCRE version.\nAs commented in the PHP bug above, PHP 7.0.3 was released, and bundles in PCRE version 8.38. This fixed the PCRE bug with JIT, and means the regex used throughout this project will work correctly.\nNote: this isn't a problem before PHP 7, as the JIT functionality did not exist.\nThis was fixed in the Docker images as part of https://github.com/docker-library/php/issues/495, although I'm not sure why versions after 7.0.17 downgraded the PCRE version:\n\n$ docker run -v ~/lp:/opt php:7.0.17 php -d pcre.jit=1 -r \"echo PHP_VERSION . PHP_EOL; echo PCRE_VERSION;\"\n7.0.17\n8.38 2015-11-23\n$ docker run -v ~/lp:/opt php:7.0.18 php -d pcre.jit=1 -r \"echo PHP_VERSION . PHP_EOL; echo PCRE_VERSION;\"\n7.0.18\n8.35 2014-04-04\n\nIf there are problems with non docker PHP versions, then I believe that's a problem with how they are being packaged.\n. I'm going to close this issue, as it's not feasible for this project to work around third party PHP packages.. Apologies for the delay.\nThanks for the fix. Do you get the same result when using Google's demo compared to using the libphonenumber-for-php demo?. I'm going to close this issue then, as it's not a problem with this library.\nTake a look at Google's FAQ for double country codes, which might answer your question.. Looks good.\nThanks for the contribution.. I don't believe there is an API method that provides this functionality. It might be worth asking on Google's mailing list for options.\nYour example code won't work in all situations, for example:\n```php\n$phoneNumberObject = $phoneNumberUtil->parse('0117 496 0123', 'GB');\nvar_dump($phoneNumberUtil->formatOutOfCountryCallingNumber($phoneNumberObject, 'US'));\n// string(19) \"011 44 117 496 0123\"\n// This will result in $prefix = 011 and $number = 44 117 496 0123\nvar_dump($phoneNumberUtil->formatOutOfCountryCallingNumber($phoneNumberObject, 'GB'));\n// string(13) \"0117 496 0123\"\n// This will result in $prefix = 0117 and $number of 496 0123\n```\n. Closing issue as the question has been answered.\nPlease open a new issue if you have any further questions.. Hi,\nPlease check Google's FAQ for double country codes which has Germany numbers as the example.. Closing issue as the question has been answered.\nPlease open a new issue if you have any further questions.. Please see the FAQ for metadata issues.. Thanks for the contribution.\nHowever, this project does not accept merge requests for the data directly.\nPlease see the FAQ for metadata issues.. The internal PhoneNumber object will store the national_number without any leading zeros.\nWhen you format the phone number, this leading zero will get added back.\nE.g. +44 117 496 0000's PhoneNumber object has a national_number of '1174960000', but when you format it to the national format, it comes out as '0117 496 0000'. That question might be better suited for Google's mailing list.. Can you leave METADATA-VERSION, and also add the same list to composer.json (in the archive bit). Thanks @willemstuursma \nI'll merge once the tests pass.. Considered it, but I know of clients that still rely on this library and use PHP 5.x.\nAt the moment, there is little reason to drop support, as the code functionality will still remain compatible. Maybe v9.\nOne thing I may do is remove code coverage from the unsupported PHP versions. I'll probably get around to this within the next few weeks, but am open for others to do it in the meantime.. Sorry, but this project does not make changes directly to the metadata. You'll need to report the problem to Google's libphonenumber project.\nPlease see the FAQ for further details.. Please see the FAQ for metadata issues.. See #152.\nE164 shouldn't contain any extension information. This PHP project matches Google's implementation.. I'm not sure to be honest.\nAs you mentioned in misd-service-development/phone-number-bundle#183, serialisation could work, but that's quite a large storage increase over E164.\nThis might be better suited for Google's mailing list in case there is a general format to use for this situation.. I'm going to close this issue, as it isn't a problem with this PHP port itself.\nIf Google update their API, this project will be updated to match.. Sorry, but this project maintains API compatibility with Google's libphonenumber Java library.\nAs a result, we don't accept any feature requests here that would diverge from Google's API.. Sorry, but this project maintains API compatibility with Google's libphonenumber Java library.\nAs a result, we don't accept any feature requests here that would diverge from Google's API.. Good point.\nHowever, all the examples on that page are also missing the namespace, with the exception of the initial PhoneNumberUtil::getInstance.\nOptions:\n - Fully qualified class names in all examples\n - use statements in each code example\n - use statements at the top of page example that initialises $phoneNumberUtil\nAny preference?. Please see the FAQ for metadata issues.. Are you using ShortNumberInfo for the emergency number?\nThe normal PhoneNumberUtil doesn't parse emergency numbers.\nExample: https://giggsey.com/libphonenumber/?phonenumber=911&country=US&language=&region=. Good idea.\nOf the top of my head, this project doesn't use any of the functions that the symfony polyfill don't provide.\nHappy to accept Pull Requests :). Are we able to get a Travis install without mbstring?\nI think we had similar issues trying to test without the intl extension a few years back.\nhttps://github.com/giggsey/libphonenumber-for-php/pull/46. Can you try it for mbstring.\nI want to test that it actually uses the polyfill.. I just ran the tests locally without ext-mbstring, and they fail because the polyfill package does provide 'mb_strcut'.. It's used in Matcher to split up the preg_match match groups into multi-byte aware groups (otherwise it'll cut based on bytes, rather than characters).. It might be possible to work around it. I might have some time next week to take a deeper look at it.. Thanks for the contribution.\nWe still need to use v1 of php-coveralls, as this project supports PHP 5.3 still.\nCan you update the requirement to both versions (like before). The PHP demo does exactly the same as Google's demo, so it's not an issue with this PHP version of libphonenumber.\nAs isItalianLeadingZero is true for this PhoneNumber object, it gets added back when formatted as required.. The default of number of leading zeros is always 1. I'm not sure off the top of my head.. The Java library does exactly the same\n```java\n        Phonenumber.PhoneNumber number = PhoneNumberUtil.getInstance().getExampleNumberForType(\"AO\", PhoneNumberUtil.PhoneNumberType.MOBILE);\n    System.out.println(number.getNumberOfLeadingZeros());\n    System.out.println(number.hasNumberOfLeadingZeros());\n\n```\n\n1\nfalse\n\nI'm not sure of the reason, so this might be better suited as a question for Google's mailing list.. Do you have an example number that you've run against the demo?\nAccording to the metadata, French mobile numbers can start with 6, or 73-79.. If I run that example number through Google's demo it returns an invalid number (which is why you get type = UNKNOWN).\nPlease see the FAQ for issues with metadata.. Thanks for the contribution.\nI'm going to close this, as it won't allow the tests to run on anything less than PHP 7.1.\nHowever, I will run it locally, and look at any suggestions it has.. Apologies, the demo was running 8.9.7. I've just updated it to 8.9.11 and the number now shows as valid.. Hi,\nThis was added in the last release: https://github.com/giggsey/libphonenumber-for-php/releases/tag/8.9.12\nCan you check you are using the latest version.. Closing due to inactivity.\nIf you believe this is an issue, please re-open.. Thanks for the contribution.\nI'll merge once the tests pass.. Thanks.\nI wish GitHub had a 'Merge when checks successful' button.. Please see the FAQ for metadata issues.. Note: there will be metadata changes once Google release the version that contains metadata.. Hi,\nCan you try the same number with Google's demo: https://libphonenumber.appspot.com/, as per the FAQ.\nYou'll probably find that Google's demo returns the same information. This is because the library will convert letters into their relevant number (G = 4, H = 4).\n. I've had a proper look through, and the normalize() function is stripping the GH at the end.\nFrom the doc of that function:\n\n * Normalizes a string of characters representing a phone number. This performs\n * the following conversions:\n *   Punctuation is stripped.\n *   For ALPHA/VANITY numbers:\n *   Letters are converted to their numeric representation on a telephone\n *       keypad. The keypad used here is the one defined in ITU Recommendation\n *       E.161. This is only done if there are 3 or more letters in the number,\n *       to lessen the risk that such letters are typos.\n *   For other numbers:\n *    - Wide-ascii digits are converted to normal ASCII (European) digits.\n *    - Arabic-Indic numerals are converted to European numerals.\n *    - Spurious alpha characters are stripped.\n\n\nSo, the library is removing them because there are less than 3 letters, as it believes they are a typo.. I'm going to close this issue, as it's not a problem with this library.\nFeel free to re-open if you have further questions.. I'm not sure without looking into number plans for Russia.\nHowever, Google's demo returns the same as the PHP version, so it's not a problem with this library directly: http://libphonenumber.appspot.com/phonenumberparser?number=%2B788030503103. I'm going to close an issue as it's not an issue with the PHP version of libphonenumber.\nIf you feel it's a metadata problem with Google's libphonenumber, I recommend report an issue on their Issue Tracker.. Hi,\nGoogle's demo gives the same result as the PHP demo, so this isn't a problem with this PHP port of the library.\nIf you think there is a metadata issue, please follow Google's Contributing Guide to report an issue.. Apologies, the PHP demo hadn't been updated. I've just updated it to the latest release, and it now validates.. Hi,\nYou're using https://github.com/Propaganistas/Laravel-Phone instead of this library directly. This has it's own API wrapper around this library, so I'm going to be guessing here.\nThe reason your catch isn't working is because you are trying to catch \\libphonenumber\\NumberParseException, but a Propaganistas\\LaravelPhone\\Exceptions\\NumberParseException is being thrown.\nI assume the reason you are getting the exception is because you have passed in a number '477...' without specifying the country. Parsing the same number as +477 returns a valid Norwegian number.. I've just seen https://github.com/Propaganistas/Laravel-Phone/issues/97.\nAs you've opened the issue on the project directly, I'm going to close this one as it's a duplicate.. Google's demo does the same thing for the invalid number.\nThe Italian Leading Zero isn't just used by Italy, so a simple check like this won't work: https://github.com/giggsey/libphonenumber-for-php/blob/master/src/PhoneNumber.php#L36\n. I'm guessing because it's not a valid number, so it's detecting that the input number had a leading zero, and set the property on the PhoneNumber object. For the valid number, it was able to load the metadata for the region fully, which doesn't have the Italian leading zero.\nThe PHP is returning the same as Google's Java demo, so I'm wary of changing the PHP API that will introduce inconsistencies between the two versions. . Probably for the best. I suggest emailing the mailing list instead of creating an issue.\nI'm going to close this issue, as it's not a problem with this library directly. Any future changes Google may make will be replicated for this PHP port.. There has been a similar question asked in #66 that may assist you.. Odd. It looks like the Packagist hook didn't work that time (it was already updated to the new one).\nI've forced it to update manually, and I'll keep an eye on it for the next release.\nThanks for reporting.. Hi, please take a look at the FAQ section regarding invalid numbers.. Thanks for the contribution.\nHowever, this project does not accept merge requests for the data directly.\nPlease see the FAQ for metadata issues.. Thanks for the fix.\nI'm merging regardless of the Travis failure as it's a documentation change and the failure is related to HHVM.. Good point. It needed to set it as a String, use to floating point precision. Feel free to open another PR.\n. I'd like to try to avoid any BC breakages.\nhasNumberOfLeadingZeros can be calculated from numberOfLeadingZeros, which is in the serialised data.\n. Yeah, that's a bug. It should be setting that property correctly. (Either directly from the serialised data, or automatically, based on the value of numberOfLeadingZeros.\n. Lets set $hasNumberOfLeadingZeros = true when $numberOfLeadingZeros != 0, (shouldn't this be 0, rather than 1?) and leave it out of the serialised array (saves a bit of space there).\n. Yeah, I think you're right.\nThe only time it's used in PhoneNumberUtil is:\nphp\n            if ($numberOfLeadingZeros != 1) {\n                $phoneNumber->setNumberOfLeadingZeros($numberOfLeadingZeros);\n            }\n. Sorry, forgot about this over the weekend.\nIf you only call setNumberOfLeadingZeros() if the unserialise has $numberOfLeadingZeros != 1 I think that should do it.\n. Can you fix the link too?. ",
    "ebotey": "Ok, thanks!!\n. ",
    "stevenmc": "Perfect.\nGreat job!  Could you add the link to the giggsey/libphonenumber-example\nrepo too, for reference?\nIt would have saved me a lot of time to have known that was there, as\nclearly your PHP skills are much more advanced than mine ;)\nThanks again Joshua,\nSteven\nOn 22 August 2013 18:15, Joshua Gigg notifications@github.com wrote:\n\nI'll add further instructions about how to use it with composer soon.\nBut the source for the example is available in another repository (\ngiggsey/libphonenumber-example ).\nOn 22 Aug 2013 17:48, \"stevenmc\" notifications@github.com wrote:\n\nPlease consider releasing the full code used on\nhttp://giggsey.com/libphonenumber/ to illustrate an end-to-end demo.\nAlso\nplease mention use of composer, as this isn't immediately obvious to\neveryone.\nExcellent work on the lib though, it works like a charm!\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/giggsey/libphonenumber-for-php/issues/5>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/giggsey/libphonenumber-for-php/issues/5#issuecomment-23108997\n.\n. \n",
    "allphat": "Thanks for this update... It sounds more clear to me now.\nBut I wonder if it is always possible for me to display an example correct mobile phone number for a specific country (like GB or FR). I know it is not possible to for some countries although\n. Damn.. I was thinking of a complex method instead!\nTHx, I'll give it a try right now...\n. ..aaaaand it works like a charm.\nMany Thx!\n. ",
    "coveralls": "\nCoverage increased (+0.48%) when pulling c3df65fa354a0f7bb3e76e7aec73e59f24714ebc on missingTests into 23f7890926d22069fce941ac9193697f3fcc8479 on master.\n. \nCoverage remained the same when pulling d6cb93f99596d1b7109a4c56f4a62b33a0596a4a on google_v5.9 into 718d82b7b6620519fde4b4c1317c4ceccf8af301 on master.\n. \nCoverage increased (+0.91%) when pulling 896a350171190a3417c96f9286a961a3fb820e77 on google_v5.9 into 718d82b7b6620519fde4b4c1317c4ceccf8af301 on master.\n. \nCoverage remained the same when pulling 6745e311119966e882202033ce43c3c596d17213 on sergeylukin:readme-carrier-method into e01fa6dc3d89d6717af62140bd053f04f5cbb045 on giggsey:master.\n. \nCoverage remained the same when pulling 9fcdf8f7bcfa9fbb8b656dee8e5db80d66bc01b8 on boekkooi:patch-1 into f56ce56ceeeb715c625dcbaacd5997c614717ac0 on giggsey:master.\n. \nCoverage decreased (-0.04%) when pulling c74b903a51dc6a92b8baa0559cb3bb36f3a9f387 on boekkooi:patch-2 into f56ce56ceeeb715c625dcbaacd5997c614717ac0 on giggsey:master.\n. \nCoverage increased (+0.04%) when pulling 77aa60c5ef42c61f0cd76818275fe2035471e787 on wizzvet:master into 4d23cbe855811c3770ebc278754c7d2a31ce2763 on giggsey:master.\n. \nCoverage decreased (-1.09%) when pulling 41f139585881fb0b00779900f8fc3de667e6057d on localeImprovements into f931e15c6b5314c094b96b545ce37cb54a1389b9 on master.\n. \nCoverage decreased (-1.09%) when pulling 41f139585881fb0b00779900f8fc3de667e6057d on localeImprovements into f931e15c6b5314c094b96b545ce37cb54a1389b9 on master.\n. \nCoverage remained the same when pulling e6cab5e7f48d1a5aeb273acfd0af76f58c0201cc on google-6.2.2 into f931e15c6b5314c094b96b545ce37cb54a1389b9 on master.\n. \nCoverage remained the same when pulling ca700b1de1406f354baa2b7999c93677355c73c5 on tombooj:master into 884b025b925dd09771707d4cf75a669e598147b4 on giggsey:master.\n. \nCoverage remained the same when pulling ca700b1de1406f354baa2b7999c93677355c73c5 on tombooj:master into 884b025b925dd09771707d4cf75a669e598147b4 on giggsey:master.\n. \nCoverage remained the same when pulling d4fca6d6971b1b85655a33214eca07bbd6428c9a on tombooj:master into 884b025b925dd09771707d4cf75a669e598147b4 on giggsey:master.\n. \nCoverage remained the same when pulling 038cb9cee37c636721a97f8ceee3efab4e354f73 on maknz:master into 5c6a1126958def619c63f8c0309d6f613c214695 on giggsey:master.\n. \nCoverage decreased (-0.07%) when pulling 2cf1e41029f3983bc55bf078c658c177609d2d02 on thewilkybarkid:ext-intl into 5c6a1126958def619c63f8c0309d6f613c214695 on giggsey:master.\n. \nCoverage remained the same when pulling 8c7014698500b02f0811aa46320aac430236dc3c on ke20:master into 7a66a13b9b1c9c6af0a2bf869722497897553dea on giggsey:master.\n. \nCoverage remained the same when pulling 88c86912ed89cd4b7f42e522dcc537a87531631a on toutoul:master into 82dbb587f2682ed389295293f1a511e2e778cbcf on giggsey:master.\n. \nCoverage decreased (-0.0%) to 88.94% when pulling a9240b9ac224c829b1dcea7ec6e97c56a60049f2 on dmyers:patch-1 into f992e78b306563120b42ff0c8b4d957837e07e2a on giggsey:master.\n. \nCoverage decreased (-0.0%) to 88.94% when pulling a9240b9ac224c829b1dcea7ec6e97c56a60049f2 on dmyers:patch-1 into f992e78b306563120b42ff0c8b4d957837e07e2a on giggsey:master.\n. \nCoverage decreased (-0.0%) to 88.94% when pulling a9240b9ac224c829b1dcea7ec6e97c56a60049f2 on dmyers:patch-1 into f992e78b306563120b42ff0c8b4d957837e07e2a on giggsey:master.\n. \nCoverage increased (+0.0%) to 88.95% when pulling f07c8d838f728c7995bcf0551b2401b7eb99f7b3 on issue64 into 7e49f5904a35cf7a5985de9df6397c296ea504f1 on master.\n. \nCoverage decreased (-0.005%) to 88.363% when pulling 328ff31354647168fff0492e5fbdb4fe0e75402b on carcabot:master into 3214f7d8da6270707d8489c9fe7e691a96fb1c20 on giggsey:master.\n. \nCoverage increased (+0.04%) to 88.407% when pulling 4f07f0770d8acb00525bc647d3d75f0abb6ae1d7 on 7.3.0-changes into 3214f7d8da6270707d8489c9fe7e691a96fb1c20 on master.\n. \nCoverage decreased (-0.08%) to 88.332% when pulling b264e8950d8f360448d2e50a9b04bcd815e19a68 on wmh:master into 848269d74ff1f2433dad747c0b0f96317205548d on giggsey:master.\n. \nCoverage increased (+0.02%) to 88.423% when pulling 841c69fd6a1738911eac838fdd1233f6f19e633b on wmh:master into 848269d74ff1f2433dad747c0b0f96317205548d on giggsey:master.\n. \nCoverage remained the same at 88.423% when pulling 6ed0e7589145278b3c4c466b2c68dfa95a55243c on iGusev:private-to-protected into 25c37f027a20de473cbb960fb62929867c3a09ee on giggsey:master.\n. \nCoverage decreased (-0.09%) to 88.332% when pulling 37a4e90b292071c65350239e1eecc0d4e8a39432 on tnory56:master into 25c37f027a20de473cbb960fb62929867c3a09ee on giggsey:master.\n. \nCoverage remained the same at 88.332% when pulling e2b24b343d96400868e2c709e3dae7e0f8bf0cd6 on prefixFileReader into 0681962d2feba35935d1bd06d3088b548801b76a on master.\n. \nCoverage remained the same at 88.332% when pulling f89a4ff7a4a5e12b5abc4ed4797da50ba2a07c44 on steffkes:allow-extended-phonenumberutil-instance into b73e4557188726fe2e4179cc4c4e5fd5a2314523 on giggsey:master.\n. \nCoverage remained the same at 88.332% when pulling dafc5c1ee8d6266624e1df3adf5cb72ef3dfa1aa on JeroenDeDauw:patch-1 into 0aac9dd96f384fea7f33c9d4e63fd80fe73c23c9 on giggsey:master.\n. \nCoverage decreased (-3.0003%) to 85.332% when pulling 29a0de00e600fdecb64f4920bed9f26c913f5694 on Enflick:enflick-customizations into bd091e9b27d2178142b0be87e172bf34d3481e2b on giggsey:master.\n. \nCoverage decreased (-3.0003%) to 85.332% when pulling 29a0de00e600fdecb64f4920bed9f26c913f5694 on Enflick:enflick-customizations into bd091e9b27d2178142b0be87e172bf34d3481e2b on giggsey:master.\n. \nCoverage increased (+0.2%) to 88.486% when pulling 74bfd3a859f2722380a90f195f6aaa9d2f7ab482 on locale into 415cef198620774bd54f63af097006ab3e6c64aa on master.\n. \nCoverage increased (+0.2%) to 88.486% when pulling e3784a7145989949d6cd7cfbe5c5bcf55229c109 on locale into 1e3b7f3d579085e9726aaad0d0eadd521d4fbbb7 on master.\n. \nCoverage increased (+0.2%) to 88.486% when pulling b968d4e2efdb47c95f6d08e553ced4bf40633621 on locale into 1e3b7f3d579085e9726aaad0d0eadd521d4fbbb7 on master.\n. \nCoverage increased (+0.2%) to 88.486% when pulling 7bc12843c4788ea219e01a30ef918e8de72a564b on locale into 1e3b7f3d579085e9726aaad0d0eadd521d4fbbb7 on master.\n. \nCoverage remained the same at 88.332% when pulling 7f865f7b66345def2a248946cb275a90faa6c192 on analysis-z4wVAw into 415cef198620774bd54f63af097006ab3e6c64aa on master.\n. \nCoverage decreased (-0.03%) to 88.306% when pulling bc68881f22db3551b415738342222e71ee11e5f0 on SpacePossum:patch-1 into a138adeb07233059c2a8d3caea7b6a6bcbee6765 on giggsey:master.\n. \nCoverage increased (+0.3%) to 88.849% when pulling 762c00fffca780c4cd44df1cb4368ae6641b8687 on dev-7.6.1 into 12010105a3c8d7e0c3f40ce6721141c5779a6c42 on master.\n. \nCoverage increased (+0.3%) to 88.829% when pulling 6f193b288c791ab102d483b2b15fcc622d301dc2 on dev-7.6.1 into 12010105a3c8d7e0c3f40ce6721141c5779a6c42 on master.\n. \nCoverage increased (+0.3%) to 88.829% when pulling 6f193b288c791ab102d483b2b15fcc622d301dc2 on dev-7.6.1 into 12010105a3c8d7e0c3f40ce6721141c5779a6c42 on master.\n. \nCoverage increased (+0.3%) to 88.829% when pulling 6f193b288c791ab102d483b2b15fcc622d301dc2 on dev-7.6.1 into 12010105a3c8d7e0c3f40ce6721141c5779a6c42 on master.\n. \nCoverage increased (+0.3%) to 88.829% when pulling 6f193b288c791ab102d483b2b15fcc622d301dc2 on dev-7.6.1 into 12010105a3c8d7e0c3f40ce6721141c5779a6c42 on master.\n. \nCoverage increased (+0.7%) to 89.227% when pulling 6f193b288c791ab102d483b2b15fcc622d301dc2 on dev-7.6.1 into 12010105a3c8d7e0c3f40ce6721141c5779a6c42 on master.\n. \nCoverage increased (+0.7%) to 89.227% when pulling 6f193b288c791ab102d483b2b15fcc622d301dc2 on dev-7.6.1 into 12010105a3c8d7e0c3f40ce6721141c5779a6c42 on master.\n. \nCoverage remained the same at 89.227% when pulling 6cf550f45a324af7402c06e4f2e52ea984f930ed on jesnasali:patch-1 into 78b06909657a11d3b915bd348adf982854dbbc29 on giggsey:master.\n. \nCoverage remained the same at 89.227% when pulling 6cf550f45a324af7402c06e4f2e52ea984f930ed on jesnasali:patch-1 into 78b06909657a11d3b915bd348adf982854dbbc29 on giggsey:master.\n. \nCoverage decreased (-0.09%) to 89.141% when pulling 98e3353316c0af0a1c14ac73475bc79d6732d6f0 on dev-7.7.1 into 78b06909657a11d3b915bd348adf982854dbbc29 on master.\n. \nCoverage decreased (-0.5%) to 88.75% when pulling 4134bab61a1c6ea1168f480b348ddf156d4187ef on dev-7.7.1 into 78b06909657a11d3b915bd348adf982854dbbc29 on master.\n. \nCoverage remained the same at 88.75% when pulling bfc58f90342a4a4e91d7b945fbd8a2602ab40aac on razorpay:master into da9a24a60169fedca9a0a4e07baf7e94f9c75fc4 on giggsey:master.\n. \nCoverage remained the same at 88.75% when pulling bfc58f90342a4a4e91d7b945fbd8a2602ab40aac on razorpay:master into da9a24a60169fedca9a0a4e07baf7e94f9c75fc4 on giggsey:master.\n. ",
    "mourjan": "Concerning an example number here is one which was provided by one of our site users:\n51440519 - KW (+965)\nas for the pattern that I added, I founded it in the demo-compiled.js file used in the JavaScript demo posted by Google.\nhttp://libphonenumber.googlecode.com/svn/trunk/javascript/i18n/phonenumbers/demo-compiled.js\n. ",
    "torenware": "Thanks for getting to this so fast, first of all.\nDamned if I know what's up.  I installed using the Drupal shell (drush), and I'm wondering if the version of composer being pulled is bogus.  As an experiment, I tried pulling phpunit using a composer.json that I know to be valid, and it's not working either on that virtual.\nI'll see if the -vvv arg is accepted via the drush wrapper script, since part of the problem is that the error's opaque.\n. Looks like the drush wrapper for Composer is busted from when they picked up composer 1.0 alpha8.  I report that on their queue.\nSorry for wasting your time here; at least we know the cause.\n. ",
    "mauermann": "Thanks, great! And yes, dev-master is okay for now\n. Hmm, your fix doesn't really fix the float problem...\nMAX_LENGTH_FOR_NSN is currently 17, but with a 17-digit number the output is still wrong (note the last digit):\nphp\n$num = 12345678901234567;\nprintf('%.0f', $num);\n// output: 12345678901234568\n. Ok, storing long numbers as string seems to be the only reliable way. However, I think there is no need for $normalizedNationalNumberCopy, because the cast is done for the test only and $normalizedNationalNumber isn't changed. And because I no longer trust floats I would rather use this: ;-)\n```\n--- a/src/libphonenumber/PhoneNumberUtil.php\n+++ b/src/libphonenumber/PhoneNumberUtil.php\n@@ -1414,9 +1414,7 @@ class PhoneNumberUtil\n          * We have to remove the leading zeroes ourself though\n          */\n-        $normalizedNationalNumberCopy = $normalizedNationalNumber;\n\nif ((float) $normalizedNationalNumberCopy == 0) {\nif ((int) $normalizedNationalNumber == 0) {\n             $normalizedNationalNumber = \"0\";\n         } else {\n             $normalizedNationalNumber = ltrim($normalizedNationalNumber, '0');\n```\n. \n",
    "asiminiceanu": "Hi Joshua,\nIn my case all the PHP libraries or extensions are installed via RPM as we use RH distribution.\nThe spec file allows anybody to build the RPM for the libphonenumber-for-php library. \nIt is quite simple:\n1. Get the source files from https://github.com/giggsey/libphonenumber-for-php/tags (the spec works with the tar.gz file)\n2. Put the archive in the proper location (e.g. /root/rpmbuild/SOURCES/libphonenumber-for-php-6.0.tar.gz)\n3. Modify in the spec file the package version (e.g. %define version     6.0).\n4. Build the RPM: rpmbuild -ba libphonenumber-for-php.spec\n. On a RH system the path /usr/share/php/ is already in the include path (for more info please see https://bugzilla.redhat.com/show_bug.cgi?id=225434).\nThis means that when you want to use the library you do not need to do anything special.\n. Of course you need an autoloader. In my case I use the Zend one. \n. All done.\n. Thank you also :) I hope others will make use of it if needed.\n. ",
    "oriolgm": "Then I don't understand how the library works.. I thought that I can validate a a phone in both modes (0057 and 57) . Testing in another countries it worked.\nBut as you say It should be a question related the core library, not this php-wrapper. I'll ask there then..\nLots of thanks!\n. ",
    "oleg081": "Yes, I have the same issue there.\nI will report about it to upstream.\n. ",
    "boekkooi": "Yeah i reported it see https://bugs.php.net/bug.php?id=67605\nGreat let me know if i need to tweak something.\n. Great and thanks for the quick merge!\n. ",
    "AllenJB": "No worries. This isn't urgent for us. And fixing the root issue is always good.\nThanks for this port and your awesome response times for these issues. =D\n. ",
    "adampaxton": "Getting 'Result from isValidNumber() - false' for all of these:\n0120420166\n0120420019\n0120420033\n0120420163\n0120420216\n. No, you are absolutely right - I can't find anything. I have done a bit of searching and found a few Bolton businesses with numbers but they all work fine.\n01204 61888 - Ladybridge Pharmacy\n01204 61899 - Baby Bede's Private Day Nursery\n01204 61944 - Deane Golf Club\nThank you for looking into it but I think I've sent you on a wild goose chase here - sorry!\n. ",
    "ghost": "Can do!\n. ",
    "eliasjnior": "I think I undestand. I'll try do that, but, why it doesn't come with something that we just need to include?\n. Wow, @giggsey. I think everythink works now! It's easy, not what I tought. Just had some problems (php command not working on terminal - Windows), but nothing that I couldn't solve quickly.\nBut, I think that \"vendor\" should come in this repository. But no problem, now I know how to do =D\nThank you, very much!\n. I hope that it help who's trying, like me.\nWindows\n1) You need to find your PHP folder. As I'm using WAMP, my path is: \"C:\\wamp\\bin\\php\\php5.5.12\". Copy that.\n2) Go to \"Control Panel\" > \"Security & System\" > \"System\" and find \"Advanced settings\" in the left sidebar. In \"advanced\" tab, go to \"environment variables\". Find \"PATH\" in the second box, edit, put an ; in the end and paste the PATH ou copied first.\n3) Open CMD and try:\nphp -v\nIt should be working.\n4) Go to Composer and read!\n5) Open CMD and go to the folder you have the composer.json\n6) Download the composer doing: \nphp -r \"readfile('https://getcomposer.org/installer');\" | php\n7) Wait... and now create the .bat: \necho @php \"%~dp0composer.phar\" %*>composer.bat\n8) Now you can create the autoload: \nphp composer.phar install\n9) You can copy the folder to where you want use, and load the /vendor/autoload.php inside this folder.\n10) Use the exemples\n. ",
    "maknz": ":+1:. Having to get ext-intl working on a Mac environment is a real pain, especially since it's not required for the functionality I need.\nOtherwise, maybe add ext-intl to the suggest section of composer.json for people who want that (but that won't solve the problem of different versions).\n. An exception would be sensible I think, slightly better than letting PHP fatal because of the undefined function (at least it'd tell the user what they need to do). It's fair to want a great solution up front, I'm working on a package at the moment which leverages libphonenumber, and the ext-intl is a real pain (probably a dealbreaker for the downstream users), hence my haste at implementing an interim solution.\nIt's not uncommon for packages to say \"hey, you'll need x package if you want to use y provider\" and not have any runtime checking for it. So I don't think this is a bad solution, but it could be made a tad more user friendly since users won't know when ext-intl is being used.\n. I'm pretty new to the library so I might not be the best person, but I'll take a look at the weekend and have a crack.\nOn Mon, Oct 6, 2014 at 9:28 PM, Chris Wilkinson notifications@github.com\nwrote:\n\nProbably worth making sure there's a Travis run without the extension (any tests that require it need to be marked as skipped too).\nReply to this email directly or view it on GitHub:\nhttps://github.com/giggsey/libphonenumber-for-php/pull/45#issuecomment-57987481\n. \n",
    "thewilkybarkid": ":+1: to not requiring the extension. I had an email form the Ivory Coast a month or so ago where the validation constraint in my Symfony bundle was rejecting a valid local number. After a bit of investigation it turns out that the release that added the data covering this number was also the release that added the extension, as they didn't have this installed Composer wouldn't let them upgrade (and doesn't let you know about it either). (It does also make me wonder if it's feasible to separate the data from the library.)\n. @giggsey I don't think so. I haven't actually made the geocoder available as a service yet, but when I do I'll only add it if the extension is available. :+1: to exceptions (with a clear message) in the library too though, definitely good practice (and is used elsewhere, such as https://github.com/symfony/symfony/blob/69deac3014940031825238a407be4674cfdeb8fb/src/Symfony/Component/Validator/Constraints/ExpressionValidator.php#L97-L99).\n. Probably worth making sure there's a Travis run without the extension (any tests that require it need to be marked as skipped too).\n. Going to leave out an extra Travis build for the moment. Intl is on the built-in list, so unless there's a hidden option somewhere a custom PHP install would need to be added (if possible).\n. Thinking about it, it might be an idea to check that RunTime exceptions are thrown rather than completely skipping the tests. I'll do that shortly.\n. @giggsey Should be sorted now. I added the extra tests to a separate class to save polluting the other test cases. Until we can find a way to add in the extra Travis run, it'll have to be verified manually.\n. ",
    "adamlc": "@giggsey you might be able to use Symfony/Intl to get the country names if thats all you need Intl for :)\nAlthough it only has the country names in English. But might be good enough as a fallback :D\nhttp://symfony.com/doc/current/components/intl.html\n. ",
    "olegsklyarov72": "The problem with memory usage was solved. But another one appeared. When I use geocoding I receive only one result: China. That is all. There is no detalization as it was befor: no province, no city.\nIt seems, that we can not get information from splited files.\n. Yes, the original number does not description, so the answer China is correct. But I try many others, for\nexample: 86-150-3657-7264, 86-136-3323-3696, 86-131-2270-1411. They have detalization and previous version showed them. Now it does not work.\n86-150-3657-7264 - Luoyang, Henan;\n86-136-3323-3696 - Zhangjiakou, Hebei;\n. Yes, the problem with memory return.\nAllowed memory size of 36700160 bytes exhausted (tried to allocate 7864320 bytes).\nIt works perfectly with existing numbers and required extra memory for non-existing.\n. I have the problem with existing number also. \n86-131-2270-1411 - Shanghai. It required extra memory.\n But for 86-150-3657-7264 - works good.\n. I am testing with many combiantion of area codes and phone numbers. The problem only with area-code 130 - 139. These codes stored in 8613.php. By the way this is the bigest file(1.7Mb) and contains many items.\n. Please, could you answer what do we do now? Is your recommendation of increasing memory_limit final? The resolving of this problem is very important for us. \n. It is working perfectly now. Thanks a lot. That is a good luck for us.\n. ",
    "a904guy": "Awesome, thank you for the super fast response!\n. ",
    "ke20": "Ok sorry, thx !\n. ",
    "technocode": "oh.. great.. thanks\n. ",
    "barryvdh": "Is it possible to create a custom format?\n. Okay I understand it's not an official format so not supported and desirable. I worked around it. Thanks anyway!\n. ",
    "t1gor": "\nOkay I understand it's not an official format so not supported and desirable. I worked around it. Thanks anyway!\n\n@barryvdh could you please share how? I have the same issue.. ",
    "joacub": "in php7 fail this\n. Fail macher regex expresion, return 502 error, the error not is manage\n. The cose error is : \nphp\n    private function doMatch($type = 'find')\n    {\n        $final_pattern = '(?:' . $this->pattern . ')';\n        switch ($type) {\n            case 'matches':\n                $final_pattern = '^' . $final_pattern . '$';\n                break;\n            case 'lookingAt':\n                $final_pattern = '^' . $final_pattern;\n                break;\n            case 'find':\n            default:\n                // no changes       \n                break;\n        }\n        $final_pattern = '/' . $final_pattern . '/x';\n        return (preg_match($final_pattern, $this->subject, $this->groups, PREG_OFFSET_CAPTURE) == 1) ? true : false;\n    }\nThe php7 not response error, php7 crashed\n. The php version is 7.0.1, test with This Number 6161217474 and in us locale\n. How to compile php7 ? With ppa or other\n. In ubuntu 15.10 is possibol pecl is corrupt or bad compile i dont now the problem but tente problem exist\n. this is system message kernel: [ 1808.603216] php-fpm7.0[1920]: segfault at 10 ip 00007fa07b10d2b7 sp 00007ffeddc7e690 error 4\n. the problem is library pcre, the version 8.35 in ubuntu 15.10 not run correctly, i have compile manual new version 8.37 and now perfectly regex\n. ",
    "selossevianney": "Yeah that helped. Thank you.\nIt seemed that I was testing  07 number that was not french.\n2015-03-05 12:05 GMT+01:00 Joshua Gigg notifications@github.com:\n\nClosed #55 https://github.com/giggsey/libphonenumber-for-php/issues/55.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/55#event-246685377\n.\n\n\nSELOSSE Vianney\n\u00c9l\u00e8ve ing\u00e9nieur 5\u00e8me ann\u00e9e\nEcole Polytech'Nice Sophia\nTel : 06/19/83/21/66\nadresse : 9 rue jean du vivier\n59710 Avelin\n. Thank you for your quick answer. And yeah, I was afraid of your answer. Sorry to ask but in the form, if I don't specify the default_region or if I specify it to PhoneNumberUtil::UNKNOWN_REGION it doesn't work, so, what do I have to do to get phone numbers coming from all over the world ?\n. I'll try it. Thanks for your time.\n. Sorry, yes you can. Thanks.\n2015-03-26 11:39 GMT+01:00 Joshua Gigg notifications@github.com:\n\n@selossevianney https://github.com/selossevianney Any luck?\nCan I close this issue?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/56#issuecomment-86446194\n.\n\n\nSELOSSE Vianney\n\u00c9l\u00e8ve ing\u00e9nieur 5\u00e8me ann\u00e9e\nEcole Polytech'Nice Sophia\nTel : 06/19/83/21/66\nadresse : 9 rue jean du vivier\n59710 Avelin\n. You took all my pain away :).\n2015-03-26 11:42 GMT+01:00 Vianney Selosse selossevianney@gmail.com:\n\nSorry, yes you can. Thanks.\n2015-03-26 11:39 GMT+01:00 Joshua Gigg notifications@github.com:\n\n@selossevianney https://github.com/selossevianney Any luck?\nCan I close this issue?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/56#issuecomment-86446194\n.\n\n\nSELOSSE Vianney\n\u00c9l\u00e8ve ing\u00e9nieur 5\u00e8me ann\u00e9e\nEcole Polytech'Nice Sophia\nTel : 06/19/83/21/66\nadresse : 9 rue jean du vivier\n59710 Avelin\n\n\nSELOSSE Vianney\n\u00c9l\u00e8ve ing\u00e9nieur 5\u00e8me ann\u00e9e\nEcole Polytech'Nice Sophia\nTel : 06/19/83/21/66\nadresse : 9 rue jean du vivier\n59710 Avelin\n. ",
    "pham01": "Hello,\nI tried with a 07 mobile phone number but it's not working \nhttps://giggsey.com/libphonenumber/index.php\nisValidNumber is false but in the metadata we have 6 or 7 : \n`'mobile' => \n  array (\n    'NationalNumberPattern' => '(?:6\\d\\d|7(?:00|[3-9]\\d))\\d{6}',\n    'ExampleNumber' => '612345678',\n    'PossibleLength' => \n    array (\n    ),\n    'PossibleLengthLocalOnly' => \n    array (\n    ),\n  ),\nDo you have an issue for that ?\nThx :)`. @giggsey Yes I have the same, so it's a google problem ?. @giggsey Ok thank you \nI saw with them, it works with only valid 07 phone number (french) and I'd tried with a random number 07 with a good format but not exist.\n. ",
    "lutzissler": "To fulfill patheticcockroach\u2019s use case, why not submit any code as default region (valid or not, as long as it\u2019s not empty)? The result of getRegionCodeForNumber() will be the region code determined from the phone number anyway.\n. ",
    "patheticcockroach": "Hi,\nThanks. Yes indeed, in my use case it turned out a programmer messed up pre-processing and added code to remove the leading \"+\" in the E164 phone number. Keeping the \"+\" and setting the second argument to null just works fine. Still feels strange to have a mandatory argument that can just be null, but good enough.\n. ",
    "RustyBadRobot": "@giggsey Yes I did sorry for not responding, your comment helped me do what i wanted.\n. ",
    "mistercz": "You can do checks via ajax PHP service. So there are situations where this feature could be useful. Thank  you\n. ",
    "ArtemGordinsky": "Thanks!\nFor my use case, reliability of area or carrier code extraction is not critical. So maybe there's also a way to get carrier code for mobile numbers? Sorry if I'm asking too many questions, but I just couldn't find it.\n. Looks like it does, but only for landlines. When I try a Ukrainian mobile number (e.g. 380969735537), getLengthOfGeographicalAreaCode() returns 0.\n. I see, thanks.\nHow hard it would be to add such a method? I would gladly contribute.\n. No idea, actually :smile:\nIt's just that when I format the number as RFC3966, it correctly separates the carrier code (96), so I assumed that there must be some non-public method for doing that. Not sure about the UK number though \u2014 is \"7700\" correct?\n. Well, I guess I'll just parse the formatted number to get the carrier code then. Should be enough in my case.\nThanks for your help!\n. ",
    "mcapodacqua": "I see it on googlei18n/libphonenumber#459 .\nYou can go ahead and close this if you want, I think this is something that needs to be fixed in the master library first.\nThanks for the feedback @giggsey.\n. ",
    "RuslanGetmansky": "Thanks for fixing @giggsey \n. ",
    "thomaschaaf": "It actually worked as expected. Sorry :(\n. ",
    "BenMorel": "Thank you!\n. I think there was a confusion on the type of national number: tests indeed set it as an integer, but PhoneNumberUtil sets it as a string.\n. I would even suggest to typecast the value in setters to the expected value, to ensure consistency. I can open another PR for this, if you wish.\n. I had to update unserialize() as well, as it could call setters with null values, which would then be wrongly typecasted to zeros or empty strings.\nSetters could check for null, but in that case the clear*() methods would be redundant with set*(null).\n. Note that this is consistent with the current behaviour: unserialize unconditionally called setNumberOfLeadingZeros(), which set this variable to true.\nI think the current behaviour could be wrong though, and I would suggest serializing hasNumberOfLeadingZeros as well. Again, I can open another PR for this, but note that it would be a minor BC break if someone has stored serialized values with a previous version of libphonenumber, and unserializes them with a newer version.\n. Just to clarify, in its current state, this PR currently does not break anything, as unserialize() always sets $hasNumberOfLeadingZeros to true by calling setNumberOfLeadingZeros().\nWhat I'm confused with is that the current code does not properly restore the state of $hasNumberOfLeadingZeros:\n$n = new libphonenumber\\PhoneNumber();\nvar_export($n); // 'hasNumberOfLeadingZeros' => false\nvar_export(unserialize(serialize($n))); // 'hasNumberOfLeadingZeros' => true\n. What do you suggest? Setting $hasNumberOfLeadingZeros = true when $numberOfLeadingZeros != 1, or adding its value to the serialized array?\n. I don't know TBH, as $numberOfLeadingZeros = 1 by default; so that means that by default, $hasNumberOfLeadingZeros = true?\n. Just tell me what it should be, and I'll open another PR :)\n. ",
    "rvanlaak": "We used __toString to pass a phone number to our VoIP provider, which is broken now. This ofcourse is our own bad, we should have used the formatter. This initially wasn't clear to us, so maybe you can split the quite long readme into separate files under /doc and add a more explanative header on top of the formatting section? :+1: \n. The composer.json of PhoneNumberBundle is pinned to ~5.7|~6.0|~7.0 so that also didn't catch that :+1: Where we usually check all upgrade notes, this one slipped through.\n. ",
    "kesselb": "Thank you!\n. ",
    "ruudk": "It would be really great if this could be considered for a next major release. Every time I see it I have the urge to fix it \ud83d\ude48 . ",
    "jbboehr": "Sorry, I should've mentioned that it was working with pcre.jit=0.\n. ",
    "mfix": "Hi, I am having a problem with this again - \"the bad regexp\" was restored https://github.com/giggsey/libphonenumber-for-php/commit/9732331f19e638099e2342a2fbd1bf750dfcd6b2#diff-5577ba297642a6aebb3e35ea375e6870\nWas it intended? How should I use it now to have a working regex (the separated one)? Thanks in advance!\n. ",
    "schwich": "Thanks for the quick response! When I try to get an instance of phoneUtil, it fails with \"missing metadata\". The libphonenumber-for-php/src/libphonenumber\\data directory is empty\n. Thanks, phing compile definitely wiped out the directory. Reinstalled and it works. Well, it works after I moved the src/libphonenumber/data directory up one directory to src/data. It was throwing an exception because it was looking for the data directory in the wrong place.\n. Thanks for all your hard work and quick responses!\n. ",
    "opb": "Awesome, thanks!\n. ",
    "scrummitch": "Got it, I did not see the faq. Ill raise it with the main repository. The issue occurs on both repos.\nThanks!\n. ",
    "vladrusu": "Hi!\nFor a project I currently work on, I would like to parse/format a partial introduced number programatically (in server code, not AJAX).\nFor example:\nPartial number: 1555245\nCountry Code: US\nExpected result: 1 555-245\nUsing  $phoneUtil->format on \"1555245\" gives me these results:\nE164 format invalid\nOriginal format 155-5245\nNational format 155-5245\nCurrently, I am unaware of a way to get \"1 555-245\" from \"1555245\". If you know one, please let me know.\n. ",
    "AlexanderMatveev": "@giggsey one case is getting all possible prefixes for country, I guess.\n. What's the way to get this?\n\n. @giggsey that's good :+1: . ",
    "Venzon": "default region is 'PL' for parse method\nPhoneNumberUtil::getInstance()->parse('004644203686890x','PL');\nlooks like +46 is sweden\n. we are unable to call this numer but we received call from such numer registered by our telephone exchange\nmaybe its some kind of voip numer\nanyway seems that such numer does not exists for calling back\nclosing issue then\n. ",
    "mstoelzle": "Ok thank you for your answer and help. I just wanted to validate a mobile phone input with this script and didn't want to accept letters... I'm now validating for letters etc with a normal preg_match and regex, so that should work.\n. ",
    "nepster-web": "Excuse me. I started to learn English.\nMy code example:\n``` php\n        $tel = '89255077200';\n    $phoneUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\n    try {\n        $swissNumberProto = $phoneUtil->parse($tel, \"CH\");\n        $isValid = $phoneUtil->isValidNumber($swissNumberProto);\n    } catch (\\libphonenumber\\NumberParseException $e) {\n        $isValid = false;\n    }\n    var_dump($isValid);\n\n```\nresult:\nbool(false)\n. Thank you. I didn't notice it. It works.\n. ",
    "samus-aran": "Thanks for that! \n. ",
    "rgpublic": "Sorry, I don't think I understand. Why is PhoneNumberFormat::E164 wrong? I've got an international phone number (+CCXXXXXXXXX) without any spaces and separators. I want to format it properly with spaces between International Access Code, Area Access Code and Local Number. Isnt that possible. How must I change the code exactly? If I'm using this:\n$number=$phoneUtil->parse(\"+492302580150\", \"DE\");_EOL;\nit doesn't work either. Is any special PHP version required? Or any version of PCRE? I tried different PHP versions and servers to no avail...\n. Arrrgh. Facepalm. Found my mistake. When entering \"libphonenumber php\" the first Google result varies and sometimes the first result is this: https://github.com/davideme/libphonenumber-for-PHP. Which looks eerily similar, but is of course a fork. And one that's 4 years old. Sigh. And I was so dumb and just clicked \"Download ZIP\". It was very confusing because the method names and arguments didnt change over the years. And the demo worked - just with that little problem. Sigh... Walks silently away in shame. Thank you so much, giggsey, for investigating this.\n. ",
    "wmh": "How to write a test case correctly? Any meta data need to prepared?\nThe original implementation is here: https://github.com/googlei18n/libphonenumber/blob/master/java/internal/prefixmapper/src/com/google/i18n/phonenumbers/prefixmapper/MappingFileProvider.java#L48\n. ",
    "iGusev": "I changed private to protected and self:: to static::. There is no bc brakes, just improvements.\n. This will extend the library to the specific tasks. For example, for me, it would be convenient to use a function PhoneNumberOfflineGeocoder::getCountryNameForNumber in my project without forking from main project, via inheritance and wrapping\n. ",
    "momostafa": "Hi Joshua,\nthanks a lot for your directions i was able to pull the prefix list by replicating on of the functions in PrefixFileReader that solved my questions 2 & 3 \nregarding MCC & MNC it would be of a great help to think about its implementation in future releases as all Messaging and Voice providers and agregators routing depends on it\nThanks again and have a nice day\n. Took me a very long night to figure it out )) thanks again for your help\nI will add a note on Google's project\n. ",
    "danielsteiner": "It seems as if Google still has not added it - I think this is a feature that could be implemented in the PHP lib as well - there's a nice Wikipedia Article on MNC / MCC https://en.wikipedia.org/wiki/Mobile_country_code#Test_networks and the database wouldn't be that big. . ",
    "lichunqiang": "Thank you \n. ",
    "wonderer007": "I have huge database of phone numbers before porcessing any number i want to make sure is it valid or not. I just encountered this phone number \n```\nuse com\\google\\i18n\\phonenumbers\\PhoneNumberUtil;\nuse com\\google\\i18n\\phonenumbers\\PhoneNumberFormat;\nuse com\\google\\i18n\\phonenumbers\\NumberParseException;\nrequire_once 'PhoneNumberUtil.php';\n$phone_number = \"+12023519852\";\n$phoneUtil = PhoneNumberUtil::getInstance();\ntry {\n      $swissNumberProto = $phoneUtil->parseAndKeepRawInput($phone_number, \"IN\");\n        var_dump($swissNumberProto);\n} catch (NumberParseException $e) {\n  echo $e;\n}\n$isValid = $phoneUtil->isValidNumber($swissNumberProto);//return true\nvar_dump($isValid);\n```\nI just updated the if check inside PhoneNumberUtil.php on line #1919 with \nif ($metadata != null && $metadata->hasLeadingDigits()) {\nand on line # 1924 like\n} else if ($metadata != null && $this->getNumberTypeHelper($nationalNumber, $metadata) != PhoneNumberType::UNKNOWN) {\nits working fine for me now. Is it the correct way ?\n. ",
    "steffkes": "That was quick ;o thanks for the instant feedback @giggsey - exactly the test failures i was talking about, yes.\n\nIs this the only place that it creates a new instance of PhoneNumberUtil?\n\nthe only one i could find:\n$ grep -rn \"new PhoneNumberUtil\" libphonenumber-for-php/\nlibphonenumber-for-php/src/libphonenumber/PhoneNumberUtil.php:399:            static::$instance = new PhoneNumberUtil($metadataSource, $countryCallingCodeToRegionCodeMap);\ni did search for PhoneNumberUtil and other references like self as well, but they were either unrelated to PhoneNumberUtil itself or just comments/mentions in existing doc-blocks\n. sure thing, let me know if you need anything else for this PR\n. ",
    "JeroenDeDauw": "That establishes just one boundary of the range. For all I know this thing only supports 5.5 and up. Bad to require people to look at the CI config to find out the min version.\n. ",
    "Propaganistas": "I'd highly vote for utilizing an existing top CLDR-compiling package (https://packagist.org/search/?q=iso3166) to prevent the \"risk\" of redundant data if such a package is already installed.\nE.g. https://github.com/alcohol/iso3166\n. @giggsey How about https://github.com/commerceguys/intl?\n. Since 5.3 is end-of-life almost 2 years ago, I'd go for a breaking release and use https://github.com/commerceguys/intl\n. ",
    "danizord": "@giggsey Woops! The removal of libphonenumber\\geocoding\\Locale broke my tests :smile:\nWhy did not you release it as major version?\n. ",
    "fmp777": "Yea i was quite shocked at the size of this meat puppet too - looking for other alternatives\n. ",
    "srcspider": "Thanks a lot giggsey. :+1: \n. ",
    "git-webmaster": "Sorry, information that i provided is incorrect.\nClosing this issue.\n. ",
    "tschallacka": "+440645494440\nit's an \"invalid\" english number, but there are voip services that will supply some really weird numbers when the price is right. It cannot be matched to any of the british countries, and then it defaults to null, whilst it should return something as a default from the array(I chose in my example the first index of the supplied array)\n. i'm not using it directly... I'm calling getRegionCodeForNumber($phonenumber)\nhttps://github.com/giggsey/libphonenumber-for-php/blob/master/src/libphonenumber/PhoneNumberUtil.php#L649\nwhich calls\nhttps://github.com/giggsey/libphonenumber-for-php/blob/master/src/libphonenumber/PhoneNumberUtil.php#L659\nwhich goes through a loop https://github.com/giggsey/libphonenumber-for-php/blob/master/src/libphonenumber/PhoneNumberUtil.php#L668\nwhere it finds no matches to predifined rules,\nso it returns null.\nIn my opinion there should be at least a warning be raised, or anything better than null.\nNull is evil. null tells us absolute zilch.\nYou have in the comments or null when when no region matches, but that was not the case. A region matched, the +44 does match a region. it just didn't fit in the ruleset as defined. If a customer had made a typing error, a 6 instead of a 7, he gets an non descript error message back, because nothign can be gathered from the API whats wrong.\nA toggle to allow exceptions instead of nulls would be great.\n. I see, but I'd still prefer then that something other than null is returned, or exception thrown, pointing people to use isValidNumber() before attempting to retrieve data from something that cannot supply it.\nNulls are hard to check for, because you don't know where it comes from, why it came there, because it doesn't have any meaning. it could well be some bug in the code happened and returned null, whilst valid output also returns null. \nIf the code comes to a \"Null\" return it should return a region code of \"UNKNOWN\" or \"##\", something that will clearly convey the message, we couldn't retrieve valid data from this method, this means you get a generic response, plural zz alpha. Then when you get a null you know something is wrong.\n. ",
    "taiidani": "Not a problem, we're still troubleshooting. It definitely looks like a problem with our Composer installation.\n. ",
    "sylfabre": "Sorry I misused INTERNATIONAL vs E164\n. ",
    "dheerajtiwari": "It was not taking this much of time before.\nWe are using this code since 2 years and suddenly since past 1 month it is taking to much of time.\nPlease suggest something.\n. ",
    "uniaq": "It was a \"plus\" sign, I didn't use it as prefix. Looks like some regions works well without it, and some regions are not.\nIssue resolved, thanks for help.\n. ",
    "bluethefish": "I'm using laravel 5.2 and installed the package via composer so this I think it add automatic \nrequire DIR . '/vendor/autoload.php';  to my code, Im not quite sure kinda new for laravel.\nany how I can print here the controller it very basic only for testing this package.\n. k 10x working like a charm.\n. hi, I encounter in another question,\nHow do i register the libphone library as a provider in laravel?\nor it's my job to create a provider and register there..?\n2016-10-03 11:38 GMT+03:00 Joshua Gigg notifications@github.com:\n\nClosed #133 https://github.com/giggsey/libphonenumber-for-php/issues/133\n.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/133#event-809965394,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AR30dXpUA9oX88eGNJlri4_BjQ_Gt0IPks5qwL8NgaJpZM4KMB-T\n.\n. this repo is extends from your repo?\n\n2016-10-04 11:04 GMT+03:00 Joshua Gigg notifications@github.com:\n\nI'm not really sure, and it's outside of the direct scope of this project.\nTake a look at https://github.com/Propaganistas/Laravel-Phone, this might\ncover your usecase.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/133#issuecomment-251321101,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AR30df2YwquGVRBUZbqgKfuTNZRDlVHmks5qwgiBgaJpZM4KMB-T\n.\n. excellent, 10x for the help !\n\n2016-10-04 13:53 GMT+03:00 Joshua Gigg notifications@github.com:\n\nIt provides Laravel integration with this library.\nOn Tue, 4 Oct 2016, 11:52 blop.. blop.., notifications@github.com wrote:\n\nthis repo is extends from your repo?\n2016-10-04 11:04 GMT+03:00 Joshua Gigg notifications@github.com:\n\nI'm not really sure, and it's outside of the direct scope of this\nproject.\nTake a look at https://github.com/Propaganistas/Laravel-Phone, this\nmight\ncover your usecase.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n<\nhttps://github.com/giggsey/libphonenumber-for-php/issues/\n133#issuecomment-251321101\n,\nor mute the thread\n<\nhttps://github.com/notifications/unsubscribe-auth/\nAR30df2YwquGVRBUZbqgKfuTNZRDlVHmks5qwgiBgaJpZM4KMB-T\n.\n\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/\n133#issuecomment-251356528,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/\nAASqQor3NeP8QC8RFaVoDNf5QtKq7P2Fks5qwi_-gaJpZM4KMB-T\n.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/133#issuecomment-251356680,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AR30dUFfVijakMFdicWB5TyHi3ccwYy6ks5qwjA4gaJpZM4KMB-T\n.\n. \n",
    "captn3m0": "Thanks for maintaining this. Let me know if I can help with anything. \n. I'd checked the open PRs. Didn't see anything so filed this. :+1:. ",
    "johnquintal": "No problems. I understand the reasoning for not changing it. It should probably be documented though or have the method invoke the getInstance() method. \nI thought that might have been the case with the static properties. I have come up against the issue of static properties as expressions before as well. Check out this SO answer to a similar question. So, rather than creating a whole instance, you could just initialise the bits that you need. It depends on whether performance would suffer when calling getInstance() compared with using a single static accessor when using a static method as in the second example I gave. In fact, creating accessors for the static properties and calling all of them in getInstance() would be useful as well.\nAnyhow, I hope that is helpful. \n. ",
    "Indigo744": "Also, if I may add another example...\nhttps://github.com/giggsey/Locale/blob/master/.gitattributes\n:yum: \n. For option 1, I can imagine a composer post-update script that will remove unwanted file, right?\nHowever, I don't see exactly what kind of file I can delete. Which Map file should I update?\nRegarding option 2, do you have any pointers on how to modify the build process?\nThanks a lot for your answer! Love your work ;-)\n. Thanks a lot for your pointers.\nActually, I only deleted files from data/ and geocoding, and it seems to work fine with all tested phones (fr, be, ch ...). So I guess it will do!\nI use a post-update script with composer to remove the file I don't want.\nI will close this thread, thanks a lot.\n. Yes, and I surrounded each of my libphonenumber call with try/catch, so any error will be muted (and logged, for further analysis).\nSince I use it primarily for formatting purpose, the risk is really low to have any problem.\nThanks again, appreciate your work and effort to bring this library into the PHP world!\n. ",
    "tbindewald": "I wasn't aware of that. Thank you.\n. Do we know, which countries do have those leading Zeros?\nif(!in_array($countrycode,[39,xx,xx,xx,....]) { ...}\nIt looks a little bit odd to see this attribute changing from true to false by just adding another digit at the end.\nMaybe we have to dig deeper?. I understand that. Thank you. So ... this issue should be reportet to Googles Project?. ",
    "ccrims0n": "@giggsey not sure about the impact/migration.\n. ",
    "JamesTheHacker": "I see. Thanks.. ",
    "mrabd423": "index.php is my file.\nFatal error: Class 'libphonenumber\\PhoneNumberUtil' not found in\nC:\\xampp\\htdocs\\validate_phone\\libphonenumber-for-php-master\\index.php on\nline 4\nphp\n\n<p$swissNumberStr = \"044 668 18 00\";\n$phoneUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\ntry {\n    $swissNumberProto = $phoneUtil->parse($swissNumberStr, \"CH\");\n    var_dump($swissNumberProto);\n} catch (\\libphonenumber\\NumberParseException $e) {\n    var_dump($e);\n}\n[image: Inline image 1]\nOn Sat, Dec 17, 2016 at 5:03 PM, Joshua Gigg notifications@github.com\nwrote:\n\nDo you have any code examples of what you are trying to execute, and the\nerror you are getting?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/150#issuecomment-267759146,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANEX0kfrkABOJyQ2cwmdry5G4mBtCnTqks5rI8-UgaJpZM4LP3Y7\n.\n. \n",
    "LunarDevelopment": "I'm getting similar issues on this too, I'm using composer and the psr 4 namespacing is in place \nphp \n    'libphonenumber\\\\' => array($vendorDir . '/giggsey/libphonenumber-for-php/src'),\nbut it seems like the classes that I haven't directly instantiated e.g. \nphp \n    $PhoneNumberToCarrierMapper =  \\libphonenumber\\PhoneNumberToCarrierMapper::getInstance(); \ncan't see each other, when I run code with the above it works then fails with the following:\n```CLI\nFatal error: Uncaught Error: Class 'libphonenumber\\PhoneNumber' not found in C:\\Development\\crb_scan_tom\\pthreads\\vendor\\giggsey\\libphonenumber-for-php\\src\\PhoneNumberUtil.php:2781\nStack trace:\n0 C:\\Development\\crb_scan_tom\\pthreads\\TelephoneValidator.php(138): libphonenumber\\PhoneNumberUtil->parse('+441132322700', 'gb', NULL, true)\n1 [internal function]: T->run()\n2 {main}\nthrown in C:\\Development\\crb_scan_tom\\pthreads\\vendor\\giggsey\\libphonenumber-for-php\\src\\PhoneNumberUtil.php on line 2781\n``` \nafter getting the above I then manually instantiated the \"not found\" class PhoneNumber and I then got the following, it seems like Icould be on all day manually instantiating all the classes that their siblings can't instantiate themselves : \n```CLI\nC:\\Development\\crb_scan_tom\\pthreads>php TelephoneValidator.php\nPHP Fatal error:  Uncaught Error: Class 'libphonenumber\\CountryCodeSource' not found in C:\\Development\\crb_scan_tom\\pthreads\\vendor\\giggsey\\libphonenumber-for-php\\src\\PhoneNumberUtil.php:1773\nStack trace:\n```\n. I am using: \nphp\nrequire 'vendor/autoload.php';\nI've tried composer install, composer update, composer dump-autoload etc too. . My code is a bit complicated at the min as it's linking to a database to\nget and update phone numbers and the whole thing is wrapped in pthreads.\nI'll continue to investigate and post back when I crack it.\nProbably something to do with namespacing and I'm missing it..\nOn Wed, 21 Dec 2016, 5:44 p.m. Joshua Gigg, notifications@github.com\nwrote:\n\n@LunarDevelopment https://github.com/LunarDevelopment That should be\nworking fine.\nCan you provide a code sample and your composer.json so I can attempt to\nreproduce?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/giggsey/libphonenumber-for-php/issues/150#issuecomment-268590132,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKNqM7iZ91ca7wOdNT7Ww7I74QQlwblAks5rKWVrgaJpZM4LP3Y7\n.\n. \n",
    "Appiah": "Having this in my php error log : \nPHP Fatal error:  Class 'libphonenumber\\CountryCodeToRegionCodeMap' not found in /Applications/MAMP/htdocs/libphonenumber/PhoneNumberUtil.php on line 374\nHave done all the above suggestions but still no luck yet.\nI need it to work for my phase on of what we are trying to do with / in aireceive.\nWould appreciate any help. Cheers Gig.\n. Hi @giggsey , Thanks for getting back to me this quickly.\nNo, am not using autoloader. A link to know more on autoloaders\nfor php, if any,  would also be much appreciated.\nMeanwhile, after a few considerations, I decided to rather stick\nwith the java side of libphonenumber for now. And it is working\nfine for now.\nMore on the project at : \nhttps://github.com/Appiah/aireceive_phone_num_cleaning_project\nOnce again, thanks, you are such an inspiration to me.\nI salute you.. ok. thanks.. ",
    "muayyad-alsadi": "\n. thank you. ",
    "RubenKruiswijk": "Boss! Thanks!. ",
    "NoMan2000": "Thanks, that stubbed code is pretty much what I was looking for.. ",
    "wenzhengjiang": "Thanks. I don't think these files are written in classmap.. ",
    "regius-cirruspath": "For me, that extra not causes the timezone lookup to return an entire list of timezones (I use U.S. phone number) instead of the single timezone I expected.. Will do. thanks.. Thank you.. ",
    "jamesgraham": "Thanks will update and report back any issues!. ",
    "richterrene": "Hi, thanks for the quick reply, it seems like it is our fault, we're mixing up area code and NDC. We need to split the phone number coming in as a pure string into country code, area code and number.\nOur code looks like so:\nphp\n                $nationalSignificantNumber = $phoneUtil->getNationalSignificantNumber($phoneNumberObject);\n                $nationalDestinationCodeLength = $phoneUtil->getLengthOfNationalDestinationCode($phoneNumberObject);\n                if ($nationalDestinationCodeLength > 0) {\n                    $areaCode = substr($nationalSignificantNumber, 0, $nationalDestinationCodeLength);\n                    $nationalNumber = substr($nationalSignificantNumber, $nationalDestinationCodeLength);\n                } else {\n                    $areaCode = \"\";\n                    $nationalNumber = $nationalSignificantNumber;\n                }\nThis leads to an area code being set and the number is cut by the first three digits.\nBut it seems like this is wrong, we probably need to use getLengthOfGeographicalAreaCode() then?\nThx!. Alright, thanks for the link and your time, I guess this issue can be closed then.\u0010 I have to read deeper into telephone number handling in general, I guess ;). ",
    "ninjahza": "All good, thanks for the lib!. ",
    "BenjaminHoegh": "Well USA, Australia and Europe is what im going after so nice to know :). try to change the number to something like 416-253-5451 Google's libphonenumber have filters there remove fake numbers like: 416-111-11111. ",
    "giovkanata": "I'm using this library (from some time) for a multi localized project (USA, Russia, Europe countries) without relevant problems and I don't think anyone will/could give you any type of garantee about the absolute safety, or the perfect working of an open-source resource.\nIf you have some doubts you can make as many tests as you need to resolve it or to cover specific needs. Then, if you will find something wrong, you could get/give an help to fix it, using the \"Issues\" section of the project.\nI hope my explanation was helpful for you.. ",
    "BirknerAlex": "Oh. I thought really it's a Number to Country mapping.\nI've solved it now like this:\n$numberCodes = [];\nforeach (\\libphonenumber\\CountryCodeToRegionCodeMap::$countryCodeToRegionCodeMap as $number => $countries) {\n    $numberCodes[$number] = $countries[0];\n}\nI our use case the first country for a code is enough to know.\nThanks! . ",
    "mikk150": "oh, I see now the issue... I was using PhoneNumber::getNationalNumber(). ",
    "LeFredd": "Ok thanks, now I understand ;). ",
    "OlaviSau": "The test passed because assertFalse was used and calling isViablePhoneNumber without initializing always returns false.. ",
    "lgaitan": "The number \"+551997945216\" is no longer valid since august 2013.\nAll brazilian phone numbers contain a leading number nine, so your number should be \"+55 19 997945216\".\nhttps://libphonenumber.appspot.com/phonenumberparser?number=%2B5519997945216\nSome code areas are still migrating from the old numbering system.. ",
    "Phillipip": "Thank you for this answer!. ",
    "rocbar": "PHP 5.6. When I tried running the sample code for 'Mapping Phone Numbers to carrier' from the site page: https://github.com/giggsey/libphonenumber-for-php I get a blank screen.  So, I wasn't sure if that was the problem.. My PHP 5.6.13 is bundled with the pecl intl, do I still need to install php/pear extenion?. No error message from my test page: tel-num.php HTTP/1.1\" 200\nSo far, all the other samples code worked.  I am assuming its the latest version V8.4.2 which is in the METADATA-VERSION.txt file.  And my PHP version does have the mbstring extension.. Package was installed using Composer\n` \n    // get the autoload file\n    $thisFile = str_replace('\\', '/', realpath(dirname(DIR))) . '/'; \n    $loadFiles = $thisFile .'plugins/libphonenumber-for-php-master/vendor/autoload.php';\n// check if autoloader file exist\nif(file_exists($loadFiles))\n    require_once $loadFiles;\n\n    class NumberFormat \n{\n\n    static public function mappingPhoneNumbersToCarrier($num, $cntry) \n    {\n        // Note: The PECL intl and mbstring extension are required for the carrier mapper to be used.\n\n        $phoneUtil = \\libphonenumber\\PhoneNumberUtil::getInstance();\n        $NumberProto = $phoneUtil->parse($num, $cntry);\n\n        $carrierMapper = \\libphonenumber\\PhoneNumberToCarrierMapper::getInstance();\n\n        // Outputs \n        echo $carrierMapper->getNameForNumber($NumberProto, \"en\");\n    }\n}\n\n$showNum = NumberFormat::mappingPhoneNumbersToCarrier($num='+18768591023',$cntry='JM');\n`. Okey, upgraded to v8.4.3 and the carrier info for country code JM is working for the number.  But still seeing a blank screen for carrier number starting with 407421 with Country code 'US'.  Off Topic: looking for a resource on how to use \"As You Type Formatter\" in an HTML5 form input with attr tel.. Thanks a lot for your help.  I started to explore JavaScript version. ",
    "eaba": "Yes that i know.......but the prefixes, is it also a port of it?\nI just want to know how that was achieved?. Okay.....thanks. ",
    "karborator": "Thank you \ud83d\udc4d . ",
    "wojcikcp": "That's great & immediate solution. Thank you.. ",
    "xuanskyer": "thanks!. ",
    "antonkomarev": "Sure @giggsey, I will write a test.. Thanks for the merge! It will be published on next google libphonenumber release?. @giggsey you are welcome! Glad to make such notable project a bit better.. ",
    "amdxypf": "got it !\ngetNumberType() //output `MOBILE` or `FIXED_LINE`\nthank you very much \u0e51\u4e5b\u25e1\u4e5b\u0e51~\n. ",
    "dbhattacharjee": "Hi @giggsey ,\nSure, I can close the issue.\nAs I have said during posting this, this is not an issue, rather question.\nSo, I am guess, you also don't have the concrete answer with you as well.. ",
    "RobinBoersma": "The apache error log says:\n[Sun Sep 24 14:59:49.353438 2017] [core:notice] [pid 9799] AH00052: child pid 14209 exit signal Segmentation fault (11)\nSo I did an strace on the test.php file which outputs the following:\nexecve(\"/usr/local/bin/php\", [\"php\", \"public/test.php\"], [/* 21 vars */]) = 0\nbrk(0)                                  = 0x1964000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d993000\naccess(\"/etc/ld.so.preload\", R_OK)      = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/lib/tls/x86_64/libcrypt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nstat(\"/usr/local/lib/tls/x86_64\", 0x7ffd7aa33f50) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/lib/tls/libcrypt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nstat(\"/usr/local/lib/tls\", 0x7ffd7aa33f50) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/lib/x86_64/libcrypt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nstat(\"/usr/local/lib/x86_64\", 0x7ffd7aa33f50) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/lib/libcrypt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nstat(\"/usr/local/lib\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nopen(\"/usr/local/icu/lib/tls/x86_64/libcrypt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nstat(\"/usr/local/icu/lib/tls/x86_64\", 0x7ffd7aa33f50) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/tls/libcrypt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nstat(\"/usr/local/icu/lib/tls\", 0x7ffd7aa33f50) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/x86_64/libcrypt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nstat(\"/usr/local/icu/lib/x86_64\", 0x7ffd7aa33f50) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libcrypt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nstat(\"/usr/local/icu/lib\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nopen(\"/etc/ld.so.cache\", O_RDONLY)      = 3\nfstat(3, {st_mode=S_IFREG|0644, st_size=33447, ...}) = 0\nmmap(NULL, 33447, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f4e8d98a000\nclose(3)                                = 0\nopen(\"/lib64/libcrypt.so.1\", O_RDONLY)  = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\0\\f@\\0062\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=43928, ...}) = 0\nmmap(0x3206400000, 2318816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3206400000\nmprotect(0x3206407000, 2097152, PROT_NONE) = 0\nmmap(0x3206607000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x3206607000\nmmap(0x3206609000, 184800, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3206609000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libz.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libz.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libz.so.1\", O_RDONLY)      = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0 !\\200\\0042\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=91096, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d989000\nmmap(0x3204800000, 2183696, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3204800000\nmprotect(0x3204815000, 2093056, PROT_NONE) = 0\nmmap(0x3204a14000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x14000) = 0x3204a14000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libexslt.so.0\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\3608\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=281743, ...}) = 0\nmmap(NULL, 2172744, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8d776000\nmprotect(0x7f4e8d788000, 2097152, PROT_NONE) = 0\nmmap(0x7f4e8d988000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x12000) = 0x7f4e8d988000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libdl.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libdl.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libdl.so.2\", O_RDONLY)     = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\340\\r\\0\\0042\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=23088, ...}) = 0\nmmap(0x3204000000, 2109696, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3204000000\nmprotect(0x3204002000, 2097152, PROT_NONE) = 0\nmmap(0x3204202000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x3204202000\nclose(3)                                = 0\nopen(\"/usr/local/lib/librt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/librt.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/librt.so.1\", O_RDONLY)     = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\240!@\\0042\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=47760, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d775000\nmmap(0x3204400000, 2128816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3204400000\nmprotect(0x3204407000, 2093056, PROT_NONE) = 0\nmmap(0x3204606000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6000) = 0x3204606000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libm.so.6\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libm.so.6\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libm.so.6\", O_RDONLY)      = 3\nread(3, \"\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0`>\\300\\0042\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=600048, ...}) = 0\nmmap(0x3204c00000, 2633912, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3204c00000\nmprotect(0x3204c83000, 2093056, PROT_NONE) = 0\nmmap(0x3204e82000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x82000) = 0x3204e82000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libmcrypt.so.4\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\340Q\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=277680, ...}) = 0\nmmap(NULL, 2366912, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8d533000\nmprotect(0x7f4e8d56d000, 2093056, PROT_NONE) = 0\nmmap(0x7f4e8d76c000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x39000) = 0x7f4e8d76c000\nmmap(0x7f4e8d770000, 19904, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d770000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libstdc++.so.6\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libstdc++.so.6\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libstdc++.so.6\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\360c\\305\\0062\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=989840, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d532000\nmmap(0x3206c00000, 3166648, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3206c00000\nmprotect(0x3206ce8000, 2097152, PROT_NONE) = 0\nmmap(0x3206ee8000, 36864, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xe8000) = 0x3206ee8000\nmmap(0x3206ef1000, 82360, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3206ef1000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libcurl.so.4\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libcurl.so.4\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libcurl.so.4\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\260\\343\\300\\0172\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=350872, ...}) = 0\nmmap(0x320fc00000, 2444072, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320fc00000\nmprotect(0x320fc53000, 2093056, PROT_NONE) = 0\nmmap(0x320fe52000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x52000) = 0x320fe52000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libpcre.so.0\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\320%\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=468935, ...}) = 0\nmmap(NULL, 2549400, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8d2c3000\nmprotect(0x7f4e8d331000, 2097152, PROT_NONE) = 0\nmmap(0x7f4e8d531000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6e000) = 0x7f4e8d531000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libnsl.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libnsl.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libnsl.so.1\", O_RDONLY)    = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0p@@\\0042\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=116904, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d2c2000\nmmap(0x3204400000, 2198192, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8d0a9000\nmprotect(0x7f4e8d0bf000, 2093056, PROT_NONE) = 0\nmmap(0x7f4e8d2be000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x15000) = 0x7f4e8d2be000\nmmap(0x7f4e8d2c0000, 6832, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d2c0000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libgssapi_krb5.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libgssapi_krb5.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libgssapi_krb5.so.2\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\220\\254@\\n2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=280520, ...}) = 0\nmmap(0x320a400000, 2373600, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320a400000\nmprotect(0x320a441000, 2097152, PROT_NONE) = 0\nmmap(0x320a641000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x41000) = 0x320a641000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libkrb5.so.3\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libkrb5.so.3\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libkrb5.so.3\", O_RDONLY)   = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0@\\265\\201\\t2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=948840, ...}) = 0\nmmap(0x3209800000, 3041984, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3209800000\nmprotect(0x32098dc000, 2093056, PROT_NONE) = 0\nmmap(0x3209adb000, 49152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xdb000) = 0x3209adb000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libk5crypto.so.3\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libk5crypto.so.3\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libk5crypto.so.3\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\320C\\300\\n2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=177520, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d0a8000\nmmap(0x320ac00000, 2273704, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320ac00000\nmprotect(0x320ac29000, 2097152, PROT_NONE) = 0\nmmap(0x320ae29000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x29000) = 0x320ae29000\nmmap(0x320ae2b000, 424, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x320ae2b000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libcom_err.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libcom_err.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libcom_err.so.2\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\360\\23@\\0072\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=17256, ...}) = 0\nmmap(0x3207400000, 2109872, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3207400000\nmprotect(0x3207403000, 2093056, PROT_NONE) = 0\nmmap(0x3207602000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x3207602000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libssl.so.10\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libssl.so.10\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libssl.so.10\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\0\\202A\\r2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=446344, ...}) = 0\nmmap(0x320d400000, 2538792, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320d400000\nmprotect(0x320d462000, 2097152, PROT_NONE) = 0\nmmap(0x320d662000, 40960, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x62000) = 0x320d662000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libcrypto.so.10\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libcrypto.so.10\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libcrypto.so.10\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\200\\235\\6\\t2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=1974048, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d0a7000\nmmap(0x3209000000, 4083672, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3209000000\nmprotect(0x32091ba000, 2097152, PROT_NONE) = 0\nmmap(0x32093ba000, 159744, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1ba000) = 0x32093ba000\nmmap(0x32093e1000, 16344, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x32093e1000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libfreetype.so.6\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0 \\303\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=3096161, ...}) = 0\nmmap(NULL, 2771432, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8ce02000\nmprotect(0x7f4e8cea0000, 2097152, PROT_NONE) = 0\nmmap(0x7f4e8d0a0000, 28672, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x9e000) = 0x7f4e8d0a0000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libpng16.so.16\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\300S\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=736846, ...}) = 0\nmmap(NULL, 2297760, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8cbd1000\nmprotect(0x7f4e8cc02000, 2093056, PROT_NONE) = 0\nmmap(0x7f4e8ce01000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x30000) = 0x7f4e8ce01000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libicui18n.so.48\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libicui18n.so.48\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\20~\\6\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=2365611, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8cbd0000\nmmap(NULL, 3962256, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8c808000\nmprotect(0x7f4e8c9c3000, 2093056, PROT_NONE) = 0\nmmap(0x7f4e8cbc2000, 53248, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1ba000) = 0x7f4e8cbc2000\nmmap(0x7f4e8cbcf000, 1424, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f4e8cbcf000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libicuuc.so.48\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libicuuc.so.48\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\320z\\4\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=1719977, ...}) = 0\nmmap(NULL, 3577728, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8c49e000\nmprotect(0x7f4e8c5f3000, 2097152, PROT_NONE) = 0\nmmap(0x7f4e8c7f3000, 73728, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x155000) = 0x7f4e8c7f3000\nmmap(0x7f4e8c805000, 10112, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f4e8c805000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libicudata.so.48\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libicudata.so.48\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\200\\2\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0644, st_size=18277796, ...}) = 0\nmmap(NULL, 20373736, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8b12f000\nmprotect(0x7f4e8c29d000, 2097152, PROT_NONE) = 0\nmmap(0x7f4e8c49d000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x116e000) = 0x7f4e8c49d000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libicuio.so.48\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libicuio.so.48\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0@(\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=59129, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8b12e000\nmmap(NULL, 2144016, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8af22000\nmprotect(0x7f4e8af2d000, 2093056, PROT_NONE) = 0\nmmap(0x7f4e8b12c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xa000) = 0x7f4e8b12c000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libxslt.so.1\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0`\\251\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=867941, ...}) = 0\nmmap(NULL, 2350088, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8ace4000\nmprotect(0x7f4e8ad21000, 2093056, PROT_NONE) = 0\nmmap(0x7f4e8af20000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3c000) = 0x7f4e8af20000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libxml2.so.2\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\220\\340\\2\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=4318403, ...}) = 0\nmmap(NULL, 3508824, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8a98b000\nmprotect(0x7f4e8aada000, 2093056, PROT_NONE) = 0\nmmap(0x7f4e8acd9000, 40960, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x14e000) = 0x7f4e8acd9000\nmmap(0x7f4e8ace3000, 2648, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f4e8ace3000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libiconv.so.2\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0p*\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=1489427, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a98a000\nmmap(NULL, 3135968, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e8a68c000\nmprotect(0x7f4e8a788000, 2097152, PROT_NONE) = 0\nmmap(0x7f4e8a988000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xfc000) = 0x7f4e8a988000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libgcc_s.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libgcc_s.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libgcc_s.so.1\", O_RDONLY)  = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\20)\\0\\0072\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=93320, ...}) = 0\nmmap(0x3207000000, 2186584, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3207000000\nmprotect(0x3207016000, 2093056, PROT_NONE) = 0\nmmap(0x3207215000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x15000) = 0x3207215000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libc.so.6\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libc.so.6\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libc.so.6\", O_RDONLY)      = 3\nread(3, \"\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0000\\356\\201\\0032\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=1930416, ...}) = 0\nmmap(0x3203800000, 3750184, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3203800000\nmprotect(0x320398a000, 2097152, PROT_NONE) = 0\nmmap(0x3203b8a000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18a000) = 0x3203b8a000\nmmap(0x3203b90000, 14632, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3203b90000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libresolv.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libresolv.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libresolv.so.2\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\00009\\200\\0052\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=114496, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a68b000\nmmap(0x3205800000, 2202248, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3205800000\nmprotect(0x3205816000, 2097152, PROT_NONE) = 0\nmmap(0x3205a16000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x16000) = 0x3205a16000\nmmap(0x3205a18000, 6792, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3205a18000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libfreebl3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libfreebl3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libfreebl3.so\", O_RDONLY)  = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\220\\n\\300\\0052\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=12776, ...}) = 0\nmmap(0x3205c00000, 2105520, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3205c00000\nmprotect(0x3205c02000, 2093056, PROT_NONE) = 0\nmmap(0x3205e01000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1000) = 0x3205e01000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libpthread.so.0\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libpthread.so.0\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libpthread.so.0\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0000^\\300\\0032\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=146592, ...}) = 0\nmmap(0x3203c00000, 2212848, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3203c00000\nmprotect(0x3203c17000, 2097152, PROT_NONE) = 0\nmmap(0x3203e17000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x17000) = 0x3203e17000\nmmap(0x3203e19000, 13296, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3203e19000\nclose(3)                                = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a68a000\nopen(\"/usr/local/lib/libidn.so.11\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libidn.so.11\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libidn.so.11\", O_RDONLY)   = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\0/@\\0172\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=209120, ...}) = 0\nmmap(0x320f400000, 2301768, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320f400000\nmprotect(0x320f432000, 2093056, PROT_NONE) = 0\nmmap(0x320f631000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x31000) = 0x320f631000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libldap-2.4.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libldap-2.4.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libldap-2.4.so.2\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\0\\364@\\0202\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=333856, ...}) = 0\nmmap(0x3210400000, 2426160, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3210400000\nmprotect(0x321044e000, 2093056, PROT_NONE) = 0\nmmap(0x321064d000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4d000) = 0x321064d000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libssl3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libssl3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libssl3.so\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0 \\302@\\f2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=314528, ...}) = 0\nmmap(0x320c400000, 2410344, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320c400000\nmprotect(0x320c447000, 2097152, PROT_NONE) = 0\nmmap(0x320c647000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x47000) = 0x320c647000\nmmap(0x320c64c000, 1896, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x320c64c000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libsmime3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libsmime3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libsmime3.so\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0`\\236\\0\\f2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=183936, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a689000\nmmap(0x320c000000, 2276480, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320c000000\nmprotect(0x320c028000, 2093056, PROT_NONE) = 0\nmmap(0x320c227000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x27000) = 0x320c227000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libnss3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libnss3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libnss3.so\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\0\\260\\201\\0072\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=1319320, ...}) = 0\nmmap(0x3207800000, 3417832, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3207800000\nmprotect(0x320793a000, 2093056, PROT_NONE) = 0\nmmap(0x3207b39000, 32768, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x139000) = 0x3207b39000\nmmap(0x3207b41000, 5864, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3207b41000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libnssutil3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libnssutil3.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libnssutil3.so\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0@\\303@\\0102\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=186208, ...}) = 0\nmmap(0x3208400000, 2280176, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3208400000\nmprotect(0x3208426000, 2093056, PROT_NONE) = 0\nmmap(0x3208625000, 32768, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x25000) = 0x3208625000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libplds4.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libplds4.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libplds4.so\", O_RDONLY)    = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\220\\r\\0\\0102\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=17096, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a688000\nmmap(0x3208000000, 2109704, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3208000000\nmprotect(0x3208003000, 2093056, PROT_NONE) = 0\nmmap(0x3208202000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x3208202000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libplc4.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libplc4.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libplc4.so\", O_RDONLY)     = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\20\\24\\200\\0102\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=21288, ...}) = 0\nmmap(0x3208800000, 2113912, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3208800000\nmprotect(0x3208804000, 2093056, PROT_NONE) = 0\nmmap(0x3208a03000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x3208a03000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libnspr4.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libnspr4.so\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libnspr4.so\", O_RDONLY)    = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\240\\317\\300\\0072\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=247160, ...}) = 0\nmmap(0x3207c00000, 2350304, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3207c00000\nmprotect(0x3207c39000, 2097152, PROT_NONE) = 0\nmmap(0x3207e39000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x39000) = 0x3207e39000\nmmap(0x3207e3c000, 7392, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x3207e3c000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libssh2.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libssh2.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libssh2.so.1\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\20S\\200\\0172\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=164728, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a687000\nmmap(0x320f800000, 2257376, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320f800000\nmprotect(0x320f827000, 2093056, PROT_NONE) = 0\nmmap(0x320fa26000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x26000) = 0x320fa26000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libkrb5support.so.0\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libkrb5support.so.0\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libkrb5support.so.0\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0@*\\300\\t2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=46368, ...}) = 0\nmmap(0x3209c00000, 2139216, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3209c00000\nmprotect(0x3209c0a000, 2093056, PROT_NONE) = 0\nmmap(0x3209e09000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x9000) = 0x3209e09000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libkeyutils.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libkeyutils.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libkeyutils.so.1\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\360\\v\\200\\n2\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=12592, ...}) = 0\nmmap(0x320a800000, 2105424, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320a800000\nmprotect(0x320a802000, 2093056, PROT_NONE) = 0\nmmap(0x320aa01000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1000) = 0x320aa01000\nclose(3)                                = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a686000\nopen(\"/usr/local/lib/liblber-2.4.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/liblber-2.4.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/liblber-2.4.so.2\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\0206\\0\\0202\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=63336, ...}) = 0\nmmap(0x3210000000, 2155816, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3210000000\nmprotect(0x321000e000, 2093056, PROT_NONE) = 0\nmmap(0x321020d000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xd000) = 0x321020d000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libsasl2.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libsasl2.so.2\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib64/libsasl2.so.2\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\340F\\0\\0172\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=108728, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a685000\nmmap(0x320f000000, 2201520, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x320f000000\nmprotect(0x320f019000, 2093056, PROT_NONE) = 0\nmmap(0x320f218000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18000) = 0x320f218000\nclose(3)                                = 0\nopen(\"/usr/local/lib/libselinux.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/icu/lib/libselinux.so.1\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/lib64/libselinux.so.1\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0PY\\0\\0052\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=124640, ...}) = 0\nmmap(0x3205000000, 2221912, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x3205000000\nmprotect(0x320501d000, 2093056, PROT_NONE) = 0\nmmap(0x320521c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1c000) = 0x320521c000\nmmap(0x320521e000, 1880, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x320521e000\nclose(3)                                = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a684000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a683000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a682000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a681000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a680000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a67f000\nmmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a67d000\narch_prctl(ARCH_SET_FS, 0x7f4e8a67d7e0) = 0\nmprotect(0x320521c000, 4096, PROT_READ) = 0\nmprotect(0x320f218000, 4096, PROT_READ) = 0\nmprotect(0x321020d000, 4096, PROT_READ) = 0\nmprotect(0x320aa01000, 4096, PROT_READ) = 0\nmprotect(0x3209e09000, 4096, PROT_READ) = 0\nmprotect(0x3207e39000, 4096, PROT_READ) = 0\nmprotect(0x3208a03000, 4096, PROT_READ) = 0\nmprotect(0x3208202000, 4096, PROT_READ) = 0\nmprotect(0x3208625000, 28672, PROT_READ) = 0\nmprotect(0x3207b39000, 24576, PROT_READ) = 0\nmprotect(0x320c227000, 16384, PROT_READ) = 0\nmprotect(0x320c647000, 16384, PROT_READ) = 0\nmprotect(0x321064d000, 8192, PROT_READ) = 0\nmprotect(0x3203e17000, 4096, PROT_READ) = 0\nmprotect(0x3205e01000, 4096, PROT_READ) = 0\nmprotect(0x3205a16000, 4096, PROT_READ) = 0\nmprotect(0x3203b8a000, 16384, PROT_READ) = 0\nmprotect(0x32093ba000, 110592, PROT_READ) = 0\nmprotect(0x320d662000, 16384, PROT_READ) = 0\nmprotect(0x3207602000, 4096, PROT_READ) = 0\nmprotect(0x320ae29000, 4096, PROT_READ) = 0\nmprotect(0x3209adb000, 40960, PROT_READ) = 0\nmprotect(0x320a641000, 4096, PROT_READ) = 0\nmprotect(0x7f4e8d2be000, 4096, PROT_READ) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a67c000\nmprotect(0x3206ee8000, 28672, PROT_READ) = 0\nmprotect(0x3204e82000, 4096, PROT_READ) = 0\nmprotect(0x3204606000, 4096, PROT_READ) = 0\nmprotect(0x3204202000, 4096, PROT_READ) = 0\nmprotect(0x3204a14000, 4096, PROT_READ) = 0\nmprotect(0x3206607000, 4096, PROT_READ) = 0\nmprotect(0x3203620000, 4096, PROT_READ) = 0\nmunmap(0x7f4e8d98a000, 33447)           = 0\nset_tid_address(0x7f4e8a67dab0)         = 15672\nset_robust_list(0x7f4e8a67dac0, 24)     = 0\nfutex(0x7ffd7aa3586c, FUTEX_WAKE_PRIVATE, 1) = 0\nfutex(0x7ffd7aa3586c, FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME, 1, NULL, 7f4e8a67d7e0) = -1 EAGAIN (Resource temporarily unavailable)\nrt_sigaction(SIGRTMIN, {0x3203c05cb0, [], SA_RESTORER|SA_SIGINFO, 0x3203c0f7e0}, NULL, 8) = 0\nrt_sigaction(SIGRT_1, {0x3203c05d40, [], SA_RESTORER|SA_RESTART|SA_SIGINFO, 0x3203c0f7e0}, NULL, 8) = 0\nrt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0\ngetrlimit(RLIMIT_STACK, {rlim_cur=10240*1024, rlim_max=RLIM64_INFINITY}) = 0\nstatfs(\"/selinux\", {f_type=\"EXT2_SUPER_MAGIC\", f_bsize=4096, f_blocks=38155803, f_bfree=34145455, f_bavail=32205601, f_files=9699328, f_ffree=9330542, f_fsid={1496488884, 778484626}, f_namelen=255, f_frsize=4096}) = 0\nbrk(0)                                  = 0x1964000\nbrk(0x1985000)                          = 0x1985000\nopen(\"/proc/filesystems\", O_RDONLY)     = 3\nfstat(3, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d992000\nread(3, \"nodev\\tsysfs\\nnodev\\trootfs\\nnodev\\tb\"..., 1024) = 310\nread(3, \"\", 1024)                       = 0\nclose(3)                                = 0\nmunmap(0x7f4e8d992000, 4096)            = 0\nopen(\"/etc/pki/tls/legacy-settings\", O_RDONLY) = -1 ENOENT (No such file or directory)\naccess(\"/usr/share/dracut/modules.d/01fips\", F_OK) = -1 ENOENT (No such file or directory)\nfutex(0x3206ef1d08, FUTEX_WAKE_PRIVATE, 2147483647) = 0\nrt_sigaction(SIGPIPE, {SIG_IGN, [PIPE], SA_RESTORER|SA_RESTART, 0x3203832510}, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGHUP, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGINT, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGQUIT, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGILL, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGTRAP, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGABRT, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGBUS, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGFPE, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGKILL, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGUSR1, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGSEGV, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGUSR2, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGPIPE, NULL, {SIG_IGN, [PIPE], SA_RESTORER|SA_RESTART, 0x3203832510}, 8) = 0\nrt_sigaction(SIGALRM, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGTERM, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGSTKFLT, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGCHLD, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGCONT, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGSTOP, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGTSTP, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGTTIN, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGTTOU, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGURG, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGXCPU, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGXFSZ, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGVTALRM, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGPROF, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGWINCH, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGIO, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGPWR, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGSYS, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_2, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_3, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_4, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_5, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_6, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_7, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_8, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_9, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_10, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_11, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_12, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_13, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_14, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_15, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_16, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_17, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_18, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_19, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_20, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_21, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_22, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_23, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_24, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_25, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_26, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_27, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_28, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_29, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_30, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_31, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGRT_32, NULL, {SIG_DFL, [], 0}, 8) = 0\nmmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a47c000\nmunmap(0x7f4e8a47c000, 2097152)         = 0\nmmap(NULL, 4190208, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a27d000\nmunmap(0x7f4e8a27d000, 1585152)         = 0\nmunmap(0x7f4e8a600000, 507904)          = 0\ngetcwd(\"/home/user/domains/domain.com/public_html\", 4096) = 48\nopen(\"/usr/lib/locale/locale-archive\", O_RDONLY) = 3\nfstat(3, {st_mode=S_IFREG|0644, st_size=99174448, ...}) = 0\nmmap(NULL, 99174448, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f4e8456b000\nclose(3)                                = 0\nopen(\"/etc/localtime\", O_RDONLY)        = 3\nfstat(3, {st_mode=S_IFREG|0644, st_size=2923, ...}) = 0\nfstat(3, {st_mode=S_IFREG|0644, st_size=2923, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d992000\nread(3, \"TZif2\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\r\\0\\0\\0\\r\\0\\0\\0\\0\"..., 4096) = 2923\nlseek(3, -1846, SEEK_CUR)               = 1077\nread(3, \"TZif2\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\16\\0\\0\\0\\16\\0\\0\\0\\0\"..., 4096) = 1846\nclose(3)                                = 0\nmunmap(0x7f4e8d992000, 4096)            = 0\nlstat(\"/usr/local/bin/php\", {st_mode=S_IFREG|0755, st_size=44078415, ...}) = 0\nlstat(\"/usr/local/bin\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat(\"/usr/local\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat(\"/usr\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\naccess(\"/usr/local/bin/php\", X_OK)      = 0\nstat(\"/usr/local/bin/php\", {st_mode=S_IFREG|0755, st_size=44078415, ...}) = 0\nopen(\"/usr/local/bin/php-cli.ini\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/lib/php-cli.ini\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/bin/php.ini\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/local/lib/php.ini\", O_RDONLY) = 3\nioctl(3, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, 0x7ffd7aa33040) = -1 ENOTTY (Inappropriate ioctl for device)\nfstat(3, {st_mode=S_IFREG|0644, st_size=69463, ...}) = 0\nmmap(NULL, 69495, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f4e8a66b000\nfstat(3, {st_mode=S_IFREG|0644, st_size=69463, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d992000\nlseek(3, 0, SEEK_CUR)                   = 0\nbrk(0x19a6000)                          = 0x19a6000\nmunmap(0x7f4e8a66b000, 69495)           = 0\nclose(3)                                = 0\nmunmap(0x7f4e8d992000, 4096)            = 0\nopen(\"/usr/local/lib/php.conf.d\", O_RDONLY|O_NONBLOCK|O_DIRECTORY|O_CLOEXEC) = 3\nfcntl(3, F_GETFD)                       = 0x1 (flags FD_CLOEXEC)\ngetdents(3, /* 4 entries */, 32768)     = 128\ngetdents(3, /* 0 entries */, 32768)     = 0\nclose(3)                                = 0\nstat(\"/usr/local/lib/php.conf.d/10-directadmin.ini\", {st_mode=S_IFREG|0644, st_size=355, ...}) = 0\nopen(\"/usr/local/lib/php.conf.d/10-directadmin.ini\", O_RDONLY) = 3\nioctl(3, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, 0x7ffd7aa33040) = -1 ENOTTY (Inappropriate ioctl for device)\nfstat(3, {st_mode=S_IFREG|0644, st_size=355, ...}) = 0\nmmap(NULL, 387, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f4e8d992000\nfstat(3, {st_mode=S_IFREG|0644, st_size=355, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d991000\nlseek(3, 0, SEEK_CUR)                   = 0\nmunmap(0x7f4e8d992000, 387)             = 0\nclose(3)                                = 0\nmunmap(0x7f4e8d991000, 4096)            = 0\nstat(\"/usr/local/lib/php.conf.d/50-webapps.ini\", {st_mode=S_IFREG|0644, st_size=334, ...}) = 0\nopen(\"/usr/local/lib/php.conf.d/50-webapps.ini\", O_RDONLY) = 3\nioctl(3, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, 0x7ffd7aa33040) = -1 ENOTTY (Inappropriate ioctl for device)\nfstat(3, {st_mode=S_IFREG|0644, st_size=334, ...}) = 0\nmmap(NULL, 366, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f4e8d992000\nfstat(3, {st_mode=S_IFREG|0644, st_size=334, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d991000\nlseek(3, 0, SEEK_CUR)                   = 0\nmunmap(0x7f4e8d992000, 366)             = 0\nclose(3)                                = 0\nmunmap(0x7f4e8d991000, 4096)            = 0\nmmap(NULL, 323584, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a62d000\nbrk(0x19c7000)                          = 0x19c7000\nbrk(0x19f9000)                          = 0x19f9000\nfutex(0x32042030ec, FUTEX_WAKE_PRIVATE, 2147483647) = 0\nopen(\"/usr/local/lib/php/extensions/no-debug-non-zts-20160303/opcache.so\", O_RDONLY) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\320\\255\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=1754551, ...}) = 0\nmmap(NULL, 2522552, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f4e84303000\nmprotect(0x7f4e8435b000, 2097152, PROT_NONE) = 0\nmmap(0x7f4e8455b000, 28672, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x58000) = 0x7f4e8455b000\nmmap(0x7f4e84562000, 36280, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f4e84562000\nclose(3)                                = 0\ngettimeofday({1506258435, 509359}, NULL) = 0\nfutex(0x7f4e8ace3700, FUTEX_WAKE_PRIVATE, 2147483647) = 0\nbrk(0x1a1a000)                          = 0x1a1a000\nbrk(0x1a3d000)                          = 0x1a3d000\ngettid()                                = 15672\nrt_sigaction(SIGPIPE, {SIG_IGN, [], SA_RESTORER, 0x3203832510}, NULL, 8) = 0\ngettimeofday({1506258435, 513588}, NULL) = 0\nbrk(0x1a5e000)                          = 0x1a5e000\nmmap(NULL, 151552, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8a608000\nbrk(0x1a7f000)                          = 0x1a7f000\nbrk(0x1aa4000)                          = 0x1aa4000\nbrk(0x1ac5000)                          = 0x1ac5000\nbrk(0x1ae6000)                          = 0x1ae6000\ngetrlimit(RLIMIT_STACK, {rlim_cur=10240*1024, rlim_max=RLIM64_INFINITY}) = 0\nbrk(0x1b07000)                          = 0x1b07000\nbrk(0x1b28000)                          = 0x1b28000\nbrk(0x1b49000)                          = 0x1b49000\ngettimeofday({1506258435, 519749}, NULL) = 0\nopen(\"/tmp/.ZendSem.xQHOqN\", O_RDWR|O_CREAT|O_EXCL, 0600) = 3\nfchmod(3, 0666)                         = 0\nfcntl(3, F_GETFD)                       = 0\nfcntl(3, F_SETFD, FD_CLOEXEC)           = 0\nunlink(\"/tmp/.ZendSem.xQHOqN\")          = 0\nmmap(NULL, 134217728, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_ANONYMOUS|0x40000, -1, 0) = -1 ENOMEM (Cannot allocate memory)\nmmap(NULL, 134217728, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_ANONYMOUS, -1, 0) = 0x7f4e7c303000\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\ngettimeofday({1506258435, 541487}, NULL) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nopen(\"public/test.php\", O_RDONLY)       = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=370, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e8d992000\nread(4, \"<?php\\n\\ndefine('ABSPATH', dirname\"..., 4096) = 370\nlseek(4, 0, SEEK_SET)                   = 0\ngetcwd(\"/home/user/domains/domain.com/public_html\", 4096) = 48\ngettimeofday({1506258435, 542365}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/public/test.php\", {st_mode=S_IFREG|0644, st_size=370, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/public\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com\", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains\", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0\nlstat(\"/home/user\", {st_mode=S_IFDIR|0710, st_size=4096, ...}) = 0\nlstat(\"/home\", {st_mode=S_IFDIR|0711, st_size=4096, ...}) = 0\nbrk(0x1b76000)                          = 0x1b76000\nbrk(0x1b97000)                          = 0x1b97000\ngettimeofday({1506258435, 543332}, NULL) = 0\nrt_sigaction(SIGPROF, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGPROF, {0x853600, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x3203832510}, NULL, 8) = 0\nrt_sigaction(SIGHUP, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGHUP, {0x853600, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x3203832510}, NULL, 8) = 0\nrt_sigaction(SIGINT, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGINT, {0x853600, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x3203832510}, NULL, 8) = 0\nrt_sigaction(SIGQUIT, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGQUIT, {0x853600, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x3203832510}, NULL, 8) = 0\nrt_sigaction(SIGTERM, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGTERM, {0x853600, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x3203832510}, NULL, 8) = 0\nrt_sigaction(SIGUSR1, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGUSR1, {0x853600, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x3203832510}, NULL, 8) = 0\nrt_sigaction(SIGUSR2, NULL, {SIG_DFL, [], 0}, 8) = 0\nrt_sigaction(SIGUSR2, {0x853600, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x3203832510}, NULL, 8) = 0\nrt_sigaction(SIGPROF, {0x853600, ~[ILL TRAP ABRT BUS FPE KILL SEGV CONT STOP TSTP TTIN TTOU SYS RTMIN RT_1], SA_RESTORER|SA_SIGINFO, 0x3203832510}, NULL, 8) = 0\nrt_sigprocmask(SIG_UNBLOCK, [PROF], NULL, 8) = 0\nmmap(NULL, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e7c2f3000\ngettimeofday({1506258435, 544245}, NULL) = 0\nfstat(0, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\nfstat(0, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\nfstat(0, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e7c2f2000\nlseek(0, 0, SEEK_CUR)                   = -1 ESPIPE (Illegal seek)\nfstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\nfstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\nfstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e7c2f1000\nlseek(1, 0, SEEK_CUR)                   = -1 ESPIPE (Illegal seek)\nfstat(2, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\nfstat(2, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\nlseek(2, 0, SEEK_CUR)                   = -1 ESPIPE (Illegal seek)\ngetcwd(\"/home/user/domains/domain.com/public_html\", 4096) = 48\ngettimeofday({1506258435, 544836}, NULL) = 0\ngetcwd(\"/home/user/domains/domain.com/public_html\", 4096) = 48\nfcntl(3, F_SETLK, {type=F_RDLCK, whence=SEEK_SET, start=1, len=1}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=370, ...}) = 0\nioctl(4, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, 0x7ffd7aa319f0) = -1 ENOTTY (Inappropriate ioctl for device)\nfstat(4, {st_mode=S_IFREG|0644, st_size=370, ...}) = 0\nmmap(NULL, 402, PROT_READ, MAP_PRIVATE, 4, 0) = 0x7f4e7c2f0000\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e7c2f0000, 402)             = 0\nclose(4)                                = 0\nmunmap(0x7f4e8d992000, 4096)            = 0\ngettimeofday({1506258435, 545899}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/autoload.php\", {st_mode=S_IFREG|0664, st_size=178, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/autoload.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=178, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=178, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=178, ...}) = 0\nmmap(NULL, 178, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/autoload.php\", {st_mode=S_IFREG|0664, st_size=178, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 178)             = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 546558}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/autoload_real.php\", {st_mode=S_IFREG|0664, st_size=2414, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\ngettimeofday({1506258435, 546668}, NULL) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/composer/autoload_real.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=2414, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=2414, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=2414, ...}) = 0\nmmap(NULL, 2414, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/composer/autoload_real.php\", {st_mode=S_IFREG|0664, st_size=2414, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 2414)            = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 547645}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/ClassLoader.php\", {st_mode=S_IFREG|0664, st_size=13451, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/composer/ClassLoader.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=13451, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=13451, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=13451, ...}) = 0\nmmap(NULL, 13451, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d98f000\nstat(\"/home/user/domains/domain.com/public_html/vendor/composer/ClassLoader.php\", {st_mode=S_IFREG|0664, st_size=13451, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d98f000, 13451)           = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 549660}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/autoload_static.php\", {st_mode=S_IFREG|0664, st_size=6880, ...}) = 0\ngettimeofday({1506258435, 549740}, NULL) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/composer/autoload_static.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=6880, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=6880, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=6880, ...}) = 0\nmmap(NULL, 6880, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d991000\nstat(\"/home/user/domains/domain.com/public_html/vendor/composer/autoload_static.php\", {st_mode=S_IFREG|0664, st_size=6880, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d991000, 6880)            = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 550835}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/psr7/src/functions_include.php\", {st_mode=S_IFREG|0664, st_size=156, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/psr7/src\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/psr7\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/psr7/src/functions_include.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=156, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=156, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=156, ...}) = 0\nmmap(NULL, 156, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/psr7/src/functions_include.php\", {st_mode=S_IFREG|0664, st_size=156, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 156)             = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 551519}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/psr7/src/functions.php\", {st_mode=S_IFREG|0664, st_size=24452, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/psr7/src\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/psr7\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/psr7/src/functions.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=24452, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=24452, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=24452, ...}) = 0\nmmap(NULL, 24452, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d98d000\nstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/psr7/src/functions.php\", {st_mode=S_IFREG|0664, st_size=24452, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d98d000, 24452)           = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 555457}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/promises/src/functions_include.php\", {st_mode=S_IFREG|0664, st_size=167, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/promises/src\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/promises\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/promises/src/functions_include.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=167, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=167, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=167, ...}) = 0\nmmap(NULL, 167, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/promises/src/functions_include.php\", {st_mode=S_IFREG|0664, st_size=167, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 167)             = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 556045}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/promises/src/functions.php\", {st_mode=S_IFREG|0664, st_size=12054, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/promises/src\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/promises\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/promises/src/functions.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=12054, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=12054, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=12054, ...}) = 0\nmmap(NULL, 12054, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d990000\nstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/promises/src/functions.php\", {st_mode=S_IFREG|0664, st_size=12054, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d990000, 12054)           = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 557984}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/guzzle/src/functions_include.php\", {st_mode=S_IFREG|0664, st_size=160, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/guzzle/src\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../guzzlehttp/guzzle\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/guzzle/src/functions_include.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=160, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=160, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=160, ...}) = 0\nmmap(NULL, 160, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/guzzle/src/functions_include.php\", {st_mode=S_IFREG|0664, st_size=160, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 160)             = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 558642}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/guzzle/src/functions.php\", {st_mode=S_IFREG|0664, st_size=9862, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/guzzle/src\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/guzzle\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/guzzle/src/functions.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=9862, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=9862, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=9862, ...}) = 0\nmmap(NULL, 9862, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d990000\nstat(\"/home/user/domains/domain.com/public_html/vendor/guzzlehttp/guzzle/src/functions.php\", {st_mode=S_IFREG|0664, st_size=9862, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d990000, 9862)            = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 560438}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../swiftmailer/swiftmailer/lib/swift_required.php\", {st_mode=S_IFREG|0664, st_size=632, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../swiftmailer/swiftmailer/lib\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../swiftmailer/swiftmailer\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../swiftmailer\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer/swiftmailer/lib/swift_required.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=632, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=632, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=632, ...}) = 0\nmmap(NULL, 632, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer/swiftmailer/lib/swift_required.php\", {st_mode=S_IFREG|0664, st_size=632, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 632)             = 0\nclose(4)                                = 0\ngettimeofday({1506258435, 561119}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer/swiftmailer/lib/classes/Swift.php\", {st_mode=S_IFREG|0664, st_size=1988, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer/swiftmailer/lib/classes\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer/swiftmailer/lib\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer/swiftmailer\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer\", {st_mode=S_IFDIR|0775, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer/swiftmailer/lib/classes/Swift.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0664, st_size=1988, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=1988, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0664, st_size=1988, ...}) = 0\nmmap(NULL, 1988, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/swiftmailer/swiftmailer/lib/classes/Swift.php\", {st_mode=S_IFREG|0664, st_size=1988, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 1988)            = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/PhoneNumberUtil.php\", F_OK) = 0\ngettimeofday({1506258435, 562155}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/PhoneNumberUtil.php\", {st_mode=S_IFREG|0644, st_size=178807, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/PhoneNumberUtil.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=178807, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=178807, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=178807, ...}) = 0\nmmap(NULL, 178807, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e7c2c5000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/PhoneNumberUtil.php\", {st_mode=S_IFREG|0644, st_size=178807, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e7c2c5000, 178807)          = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/CountryCodeToRegionCodeMap.php\", F_OK) = 0\ngettimeofday({1506258435, 570567}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/CountryCodeToRegionCodeMap.php\", {st_mode=S_IFREG|0644, st_size=9935, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/CountryCodeToRegionCodeMap.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=9935, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=9935, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=9935, ...}) = 0\nmmap(NULL, 9935, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d990000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/CountryCodeToRegionCodeMap.php\", {st_mode=S_IFREG|0644, st_size=9935, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d990000, 9935)            = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/DefaultMetadataLoader.php\", F_OK) = 0\ngettimeofday({1506258435, 571468}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/DefaultMetadataLoader.php\", {st_mode=S_IFREG|0644, st_size=207, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/DefaultMetadataLoader.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=207, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=207, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=207, ...}) = 0\nmmap(NULL, 207, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/DefaultMetadataLoader.php\", {st_mode=S_IFREG|0644, st_size=207, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 207)             = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/MetadataLoaderInterface.php\", F_OK) = 0\ngettimeofday({1506258435, 571904}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/MetadataLoaderInterface.php\", {st_mode=S_IFREG|0644, st_size=249, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/MetadataLoaderInterface.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=249, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=249, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=249, ...}) = 0\nmmap(NULL, 249, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/MetadataLoaderInterface.php\", {st_mode=S_IFREG|0644, st_size=249, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 249)             = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/MultiFileMetadataSourceImpl.php\", F_OK) = 0\ngettimeofday({1506258435, 572466}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/MultiFileMetadataSourceImpl.php\", {st_mode=S_IFREG|0644, st_size=3645, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/MultiFileMetadataSourceImpl.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=3645, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=3645, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=3645, ...}) = 0\nmmap(NULL, 3645, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/MultiFileMetadataSourceImpl.php\", {st_mode=S_IFREG|0644, st_size=3645, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 3645)            = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/MetadataSourceInterface.php\", F_OK) = 0\ngettimeofday({1506258435, 573250}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/MetadataSourceInterface.php\", {st_mode=S_IFREG|0644, st_size=633, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/MetadataSourceInterface.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=633, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=633, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=633, ...}) = 0\nmmap(NULL, 633, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/MetadataSourceInterface.php\", {st_mode=S_IFREG|0644, st_size=633, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 633)             = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/RegexBasedMatcher.php\", F_OK) = 0\ngettimeofday({1506258435, 573874}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/RegexBasedMatcher.php\", {st_mode=S_IFREG|0644, st_size=1484, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/RegexBasedMatcher.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=1484, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=1484, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=1484, ...}) = 0\nmmap(NULL, 1484, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/RegexBasedMatcher.php\", {st_mode=S_IFREG|0644, st_size=1484, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 1484)            = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/MatcherAPIInterface.php\", F_OK) = 0\ngettimeofday({1506258435, 574458}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/MatcherAPIInterface.php\", {st_mode=S_IFREG|0644, st_size=760, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/MatcherAPIInterface.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=760, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=760, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=760, ...}) = 0\nmmap(NULL, 760, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/MatcherAPIInterface.php\", {st_mode=S_IFREG|0644, st_size=760, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 760)             = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/PhoneNumber.php\", F_OK) = 0\ngettimeofday({1506258435, 574969}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/PhoneNumber.php\", {st_mode=S_IFREG|0644, st_size=19389, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/PhoneNumber.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=19389, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=19389, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=19389, ...}) = 0\nmmap(NULL, 19389, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d98e000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/PhoneNumber.php\", {st_mode=S_IFREG|0644, st_size=19389, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d98e000, 19389)           = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/CountryCodeSource.php\", F_OK) = 0\ngettimeofday({1506258435, 576401}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/CountryCodeSource.php\", {st_mode=S_IFREG|0644, st_size=1210, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/CountryCodeSource.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=1210, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=1210, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=1210, ...}) = 0\nmmap(NULL, 1210, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e8d992000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/CountryCodeSource.php\", {st_mode=S_IFREG|0644, st_size=1210, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e8d992000, 1210)            = 0\nclose(4)                                = 0\nmmap(NULL, 65536, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f4e7c2e1000\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/Matcher.php\", F_OK) = 0\ngettimeofday({1506258435, 577171}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/Matcher.php\", {st_mode=S_IFREG|0644, st_size=4223, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/Matcher.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=4223, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=4223, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=4223, ...}) = 0\nmmap(NULL, 4223, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e7c2df000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/Matcher.php\", {st_mode=S_IFREG|0644, st_size=4223, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e7c2df000, 4223)            = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/data/PhoneNumberMetadata_CH.php\", R_OK) = 0\ngettimeofday({1506258435, 578722}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/data/PhoneNumberMetadata_CH.php\", {st_mode=S_IFREG|0644, st_size=4416, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/data\", {st_mode=S_IFDIR|0755, st_size=36864, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/data/PhoneNumberMetadata_CH.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=4416, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=4416, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=4416, ...}) = 0\nmmap(NULL, 4416, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e7c2df000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/data/PhoneNumberMetadata_CH.php\", {st_mode=S_IFREG|0644, st_size=4416, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e7c2df000, 4416)            = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/PhoneMetadata.php\", F_OK) = 0\ngettimeofday({1506258435, 579424}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/PhoneMetadata.php\", {st_mode=S_IFREG|0644, st_size=23752, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/PhoneMetadata.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=23752, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=23752, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=23752, ...}) = 0\nmmap(NULL, 23752, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e7c2db000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/PhoneMetadata.php\", {st_mode=S_IFREG|0644, st_size=23752, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e7c2db000, 23752)           = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/PhoneNumberDesc.php\", F_OK) = 0\ngettimeofday({1506258435, 581655}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/PhoneNumberDesc.php\", {st_mode=S_IFREG|0644, st_size=5552, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/PhoneNumberDesc.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=5552, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=5552, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=5552, ...}) = 0\nmmap(NULL, 5552, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e7c2df000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/PhoneNumberDesc.php\", {st_mode=S_IFREG|0644, st_size=5552, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e7c2df000, 5552)            = 0\nclose(4)                                = 0\naccess(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/NumberFormat.php\", F_OK) = 0\ngettimeofday({1506258435, 582630}, NULL) = 0\nlstat(\"/home/user/domains/domain.com/public_html/vendor/composer/../giggsey/libphonenumber-for-php/src/NumberFormat.php\", {st_mode=S_IFREG|0644, st_size=7097, ...}) = 0\nopen(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/NumberFormat.php\", O_RDONLY) = 4\nfstat(4, {st_mode=S_IFREG|0644, st_size=7097, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=7097, ...}) = 0\nfstat(4, {st_mode=S_IFREG|0644, st_size=7097, ...}) = 0\nmmap(NULL, 7097, PROT_READ, MAP_SHARED, 4, 0) = 0x7f4e7c2df000\nstat(\"/home/user/domains/domain.com/public_html/vendor/giggsey/libphonenumber-for-php/src/NumberFormat.php\", {st_mode=S_IFREG|0644, st_size=7097, ...}) = 0\nfcntl(3, F_SETLKW, {type=F_WRLCK, whence=SEEK_SET, start=0, len=1}) = 0\nfcntl(3, F_SETLK, {type=F_UNLCK, whence=SEEK_SET, start=0, len=1}) = 0\nmunmap(0x7f4e7c2df000, 7097)            = 0\nclose(4)                                = 0\n--- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_ACCERR, si_addr=0x7f4e8455afff} ---\n+++ killed by SIGSEGV (core dumped) +++\nSegmentation fault (core dumped)\nIf you need more info, please let me know.. Yes, I now definitely think the issue is related to PHP (or an extension). I wil try to use gdb to get a backtrace.\nThanks for your time \ud83d\udc4d . After updating PCRE from version 8.20 to 8.41 the problem is solved. I don't know the exact problem but I suspect it has something to do with the pcre.backtrack_limit. Before the update I couldn't set it higher than 19 which is to less to finish the script. You can find more info on stackoverflow.com.. ",
    "monikamni": "Okay, Thank You. ",
    "ajoudeh": "i try it in both demo site. and it give me valid. and get the latest version of code. how i can fix it?. libphonenumber-for-php\n\n. Code\n\n\n. Fixed after update https://github.com/Borales/yii2-phone-input\nThanks to @giggsey \n. ",
    "spacetourist": "Works for me :). ",
    "grzegorztomasiak": "+1. ",
    "Sarahphp1": "Awesome.\nThank you. ",
    "xpetter": "I received this error when I upgraded to PHP 7.2\nBut activating extension mbstring works for me.\nhttps://secure.php.net/manual/en/mbstring.installation.php. ",
    "voorsboy": "@giggsey I could not narrow it down to be reproducible. So, I just migrated the server environment to centOS 7.4 as the previous guy had it on Ubuntu. Everything's working now. \nI was just using basic functionality in a Laravel 5.5 application, PHP 7.2 with the proper extensions enabled. . ",
    "songxk": "Ok, thanks!. ",
    "HeahDude": "I've thought about calling the setter but it would complexify this particular case of unserialize implementation, unless we want to call all the setters. Not sure it is worth it, tell me!. Thank you for maintaining this library and reacting so quickly on this \ud83d\udc4d.\nAnd a happy new year! Cheers!. ",
    "david-vde": "Ok didn't seen this.\nit was a problem with the FR carriers I used the method PhoneNumberUtil::getNumberType() and it solved my problem.\nThank you. ",
    "MatTheCat": "\nI want to try to maintain the same version number as Google's libphonenumber\n\nDo you mean you cannot tag your own releases?\nAnyways I can provide a PR in the eventuality the versioning scheme changes or Google releases libphonenumber 9. The rest will be up to you!. If giggsey/locale is only suggested then it should be used if the user requested it.\ncomposer.json would look like this\ndiff\n\"require\": {\n    \"php\": \">=5.3.2\",\n    \"ext-mbstring\": \"*\",\n-    \"giggsey/locale\": \"^1.2\"\n},\n+\"suggest\": {\n+        \"ext-intl\": \"To get CLDR data from ICU\",\n+        \"giggsey/locale\": \"To get up-to-date CLDR data\"\n+}. I think it's perfectly fine. The only case an exception would be thrown is if both intl and giggsey/locale are missing so the message would be something like \"The intl extension is missing on your system, please require giggsey/locale.\". A runtime exception isn't a bad thing. Look at commerceguys/addressing for example. This is the best way to handle this type of situation.. ",
    "andrelopez": "Thank you!. ",
    "ivok": "I didnt check yet the dependencies. I will try to update it and will write again if problem persist. It works, Sory for issue opening. ",
    "cafferata": "Of course! Bit of a shame that I have not seen it myself by sending the pull request.. \ud83d\ude48. Thank you for merging and keeping up the good work! \ud83e\udd47. ",
    "genepeng": "@giggsey my PHP 7.0.10 running in docker, and my PHP 7.0.22 running on my local machine, \nI used below command to install php in docker\napt-get install -y --no-install-recommends \\\n      nginx \\\n      php7.0-cli=7.0.10-1~dotdeb+8.1 \\\n      php7.0-common=7.0.10-1~dotdeb+8.1 \\\n      php7.0-curl=7.0.10-1~dotdeb+8.1 \\\n      php7.0-fpm=7.0.10-1~dotdeb+8.1 \\\n      php7.0-intl=7.0.10-1~dotdeb+8.1 \\\n      php7.0-json=7.0.10-1~dotdeb+8.1 \\\n      php7.0-mbstring=7.0.10-1~dotdeb+8.1 \\\n      php7.0-mcrypt=7.0.10-1~dotdeb+8.1 \\\n      php7.0-mysql=7.0.10-1~dotdeb+8.1 \\\n      php7.0-opcache=7.0.10-1~dotdeb+8.1 \\\n      php7.0-readline=7.0.10-1~dotdeb+8.1 \\\n      php7.0-xml=7.0.10-1~dotdeb+8.1 \\\n      php7.0=7.0.10-1~dotdeb+8.1\nit worked before, but the format changed recently (at the beginning of  2018 Feb). @giggsey it works on my local machine with pcre.jit=1, but have to set pcre.jit=0 in docker . ",
    "nratifainah": "And the phone number type is FIXED_LINE instead of MOBILE. yes, got same result.\nwhen I key in 62xxxxxxxxx, phone number type is FIXED_LINE and  phone number become 6262xxxxxxxxx.\nBut when I key in 0xxxxxxxxx, it returns correct format and type.. ",
    "boesing": "Ah thats true. Actually, I only work with german numbers. \nIt seems like it works as expected, but I only tried a bunch of numbers.\nGoing to create a feature request for that behavior.\nThanks!. ",
    "likizbajke85": "Ok, thanks for quick answer.. ",
    "Casperhr": "thanks. ",
    "seasoninthesky": "Thanks for the answer. But still, when entering the mobile number without a 0 in a formfield the entered phone number is actually not valid and has to return false, right? Even if the national_number is stored like this. \nIs there a way around it? Or will it always been seen as a valid number?. Will do! :). ",
    "willemstuursma": "Thanks @giggsey. Since I've touched composer.json, I've also added a validation step in the build.. > I'll merge once the tests pass.\nWow, those tests take a lot of time! \nIt's probably the Xdebug + very old PHP versions. Did you consider dropping support for the unsupported PHP versions 5.3-5.5?. Thanks. ",
    "kiler129": "@giggsey Yes... I just checked Google's Java implementation and indeed they do the same. I'm thinking if there's any ~~sane~~standard way to save extension along with extension?. ",
    "IMP-Roland": "use statements at the top of page example that initialises $phoneNumberUtil. ",
    "mrextreme": "Yes, I use ShortNumberInfo::getInstance()->connectsToEmergencyNumber(), but it just caught my eye that this function returns with wrong info instead of doing this step before returning with UNKNOWN.. ",
    "garak": "Great! I'll provide a PR tomorrow. Per travis docs, it should something like this:\nbefore_script:\n  - phpenv config-rm intl.ini\nDo I need to add it to this PR?. Yes I meant phpenv config-rm mbstring.ini (sorry). I'll try.. I tried, but it didn't work :disappointed: \nFound an issue, it looks like it's currently unsupported\nMaybe the only way is using Docker in Travis (never tried myself). What's the purpose of using mb_strcut? Can't mb_substr be enough?. I see that, I was just wondering if it's overkilled.. ",
    "korell": "Hello,\nHere is the same issue for the spanish numbers.\nAs that page explains, there is never leading zero in a spanish phone number : https://en.wikipedia.org/wiki/Telephone_numbers_in_Spain.\nBut, as BenLaMeule reports, the method PhoneNumber::getNumberOfLeadingZeros() returns '1'.\nQuestion : do you think that the result of that method reliable ?\nThanks for your work !\nMatthieu. Thanks Giggsey for your reply.\nYes it's not due to your lib and it was an observation to know if you already observed that behaviour.\nI'll join the Google mailing list of that lib.\nBest regards. ",
    "sjoller": "\nHere is the same issue for the spanish numbers.\n\nThat goes for Danish numbers too. numberOfLeadingZeros() === 1 and hasNumberOfLeadingZeros() === false. Fortunately I can use the latter to get around the former.. ",
    "Robinouh": "The French mobile numbers beginning with \"07\" are used since May 3, 2010 to answer the shortage of mobile numbers beginning with \"06\".\nI did some tests with the following code that returns 10 instead of 1.\n$number = PhoneNumber::parse(\"+33712345678\");\necho $number->getNumberType();. ",
    "samnela": "Thanks @giggsey ,\nAll checks have passed. Yes me too ,\nas Gitlab does . . ",
    "spyjo": "but how this number is considered as valid ?\nhttps://libphonenumber.appspot.com/phonenumberparser?number=0611111111GH&country=FR\n=> valid, because somehow GH disappear\nhttps://libphonenumber.appspot.com/phonenumberparser?number=061111111144&country=FR\n=> invalid because too long\na normal french number is 10 digit long. if G and H were converted from letter to number, it should return \"too long\" error already in the first sample, it's weird. ",
    "cmeheut": "Thanks for the quick answer.\nI've found the same result on Google's demo\nBut even if letters were converted, the number is too long and is truncated. I guess the good behavior would be a returned error because the Phone Number entered is too long.\n. ",
    "Ramzi-Alqrainy": "Google team fixed it but it's not reflected in the library. \nExample: 96872125215\nhttp://libphonenumber.appspot.com/phonenumberparser?number=96872125215&country=OM\nhttps://issuetracker.google.com/issues/120384117. @giggsey . "
}