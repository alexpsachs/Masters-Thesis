{
    "aanand": "Whup! Fixed in 0.3.2.\n. Good point. It now returns an exit code of 1 on all errors. Hope that covers most use cases.\n. Agreed. Fixed in 0.3.2.\n. Well, yuck. Looks like Grit::Git.git_timeout might be what you want. If you have success tweaking it, send me a pull request!\n. I initialize a Grit::Repo object on line 57 of git-up.rb. I don't talk directly to the Git class at any time.\nHope that helps, and sorry I don't have the time to look at it myself!\n. It's nice, but I'm not sure I want it on by default. Perhaps it could be turned on with an environment variable, or\u2014gulp\u2014a ~/.git-up file?\n. I think environment variable are the way to go until either\n1. there are more than, say, 3 configuration options, or\n2. the configuration options' possible values become too long or structured to fit comfortably in a .bashrc string literal.\nNeither of those thresholds are in sight, so environment variables it is.\n. As for naming, how about GIT_UP_BUNDLER_CHECK?\n. \"true\".\n. Ha, made you comment.\n. Thanks Josh! A co-worker of yours has sent me a similar-looking pull request. Looks like I'm going to have to choose one or the other. Did you both try to solve the same problem separately, or have I misunderstood?\n. Fetch all remotes, get the remote branch name right\nClosed by b6d4706628e4909114655b20ed26f829684e060d.\nClosed by b6d4706628e4909114655b20ed26f829684e060d.\n. Fetch all remotes, get the remote branch name right\nClosed by b6d4706628e4909114655b20ed26f829684e060d.\nClosed by b6d4706628e4909114655b20ed26f829684e060d.\n. Just pushed a relevant change - I moved away from using environment variables for configuration to using git's native config system. Can you change this feature accordingly? Instead of reading ENV['GIT_UP_MIGRATION_CHECK'], read config(\"migration.check\") instead.\nTaking a step back, though, this whole feature is a bit more bloat than I'm comfortable with. While it's reasonable to assume that anyone sane is using Bundler, the same can't be said for ActiveRecord. I wonder if a more general 'post-git-up-hook' interface, off of which one might hang checks like this, could be implemented simply? It would certainly be a slimmer solution.\n. Add git-up.bundler.autoinstall option. Closed by b5bfee33c725887b0e75f6e0cdb9caa590831595.\n. Just merged and released as git-up 0.5.2. Great stuff @fbuenemann.\n. I agree. If you implement it as a command-line argument I'll merge it.\n. If you'd rather do nothing by default, feel free to implement it as a command-line switch (off the top of my head, -N/--no-rebase makes sense) or as a config option (git-up.options.no-rebase perhaps). The other pull request seems to have gone silent, in any case.\n. Very strange, the equivalent file on my system just reads \"2011-09-22\". Buggy RubyGems version perhaps?\n. OK. Glad you resolved it in the end, even if the solution was a little scorched-earth. Closing this issue now, as it doesn't seem to be git-up's fault.\n. OK, check out the prune branch. I've made it configurable and added a check to make sure the git version supports it. Any further comments?\n. OK it's in 0.5.4. I ended up rolling my own (one-line) version comparator code, since Gem::Version would introduce a dependency on RubyGems and I had a dream once where someone said that was bad for some reason.\nThanks, everyone!\n. This'll go in the next release.\n. Yikes. Didn't know submodules could do weird things with .git.\nTo be honest, if Grit doesn't know how to handle that then I'm not sure where to begin. You might be best off using a plain git pull --rebase in your submodule directories.\n. I hadn't even tagged them\u2014was meaning to get round to it though. Done and pushed!\n. Yep, this was discussed once before and I decided that a config option would be preferable. Don't have any use for it myself, so don't hold your breath, but pull requests are always welcome :)\n. In that case, allow me to apologise in advance - git-up's code is pretty nasty :(\nThere's a config method that you'll find useful for accessing git config values namespaced under git-up.*. So, for example, config(\"rebase.arguments\") will return the value of the git-up.rebase.arguments config variable.\n. OK, fetch.all sounds legit and I'm all over log-hook. sort sounds like it should just be the default though, so I'd be happy for you to remove the conditional :)\nCould you add docs to the README for the other two options? In particular, it'd be good to have an example log hook. I just knocked up echo \"changes on $1:\"; git diff --stat $1..$2/$1 in 2 minutes, but maybe you have something fancier.\nThanks for the contributions!\n. Cool - do you know offhand whether this will affect issue #22 (the reason change_count exists)?\n. PROVOCATIVE. Stick it in the readme and you've got a deal.\n. Yeah, this has been raised before. I agree it'd be nice, but it's not something I'm personally interested in working on. Pull requests welcome!\n. Can't reproduce, but you're not the only one who's got it - #33 sounds similar, seems either posix-spawn or grit is misbehaving. Let me know if you find anything.\n. My versions (keeping in mind I don't have the bug) are: ruby 1.9.3p194, git-up 0.5.8, grit 2.5.0, posix-spawn 0.3.6.\nNot sure which dev tools I'm using, but my gcc seems to be symlinked to llvm-gcc-4.2.\n. I've created a Google spreadsheet to collect this data; please fill yours in and colour your row appropriately. I've already filled in mine and @ahmeij's as a demonstration.\nhttps://docs.google.com/spreadsheet/ccc?key=0Aj-xJbNYtfg1dDdXajlkTzZ0a0ljTGFyMzc2OTNMcVE\n. I'm away from my computer until tomorrow, but if someone could add an OS column, and everyone could fill theirs in, that'd be great.\nOn Thursday, 18 October 2012 at 20:17, Alex Dancho wrote:\n\nI wouldn't necessarily say that's the case - it's only proven that posix won't work on Windows. Considering the other people who are reporting are on different infrastructures, I'd say that our problem is unrelated but the issue still stands.\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/aanand/git-up/issues/32#issuecomment-9578622).\n. Interesting. I just tried it on a machine with an older Apple Git installed and it worked fine, though:\n\n$ git --version\ngit version 1.7.9.6 (Apple Git-31.1)\n$ git up # works\n$ git-up # works\nCould you add both cases to the spreadsheet, in any case?\n. Excellent work, @boxofrad. Assuming this is the source of everyone's pain, would you care to write up a friendly description of the problem and how to work around it? I'll put it in a separate file in the repo and link to it in the README under a \"Warning for RVM users\" header or something.\nAs for rbenv, no-one seems to have reported a problem under it, according to the spreadsheet.\n. @silasdavis posix-spawn doesn't seem to officially support Windows - you could try following the steps in #34.\n. @akrabat I'm not an RVM user, but I'm gonna guess [ruby-version] and [gemset-name] should be replaced with the ruby version and gemset name that you've installed git-up under. So the command should look like, for example:\nrvm wrapper 1.9.3-p194@mygemset git git-up\n. @wmeyers Have you consulted the RVM guide?\n. Yep, think #32 is the same bug. Unfortunately I can't reproduce it, but let me know if you find anything.\n. Do you have a local version of git-up with the changes you describe? Care to fork/pull-request if so, so I can have a look?\n. @alexdancho @wernight Would one of you care to fork git-up and write a WINDOWS.md describing how to get it running under Windows?\n. Sorry to be slow. Your hypothesis sounds likely - it seems \"Bundler can't bundle itself\". Could you try without bundler in the Gemfile?\n. Does Git expose an API for acquiring and releasing a lock? A cursory Google gives me nothing useful. If you can implement this behaviour using documented Git functionality, I'll accept a pull request.\n. WONTFIX\n. After installing git-up, have you done an rbenv rehash and restarted your shell?\n. Could you elaborate?\n. Looks splendid. I'm making you a collaborator, so push away!\n. I'm skeptical (read: frightened) of a workflow where force-pushing is a regular occurrence. In my opinion, if your feature branch is long-running and you want to keep the remote up-to-date, you ought to be merging, not rebasing.\nEven if it's not an anti-pattern, it's idiosyncratic, and as such I don't think git-up is the right place for such a feature.\n. Cool :)\n. Looks like it. Can't do anything from here really - you'll need a patched grit.\n. Hmm. OK. I wouldn't mind a --quiet flag anyhow, and maybe any non-option args could be treated as directories to run the top-level method in.\nPull request welcome!\n. Good idea. Done.\n. On the --help thing: absolutely right! I'll get on this now.\nI'd love to get a man page working - any idea how to do that with a gem? Google just turns up gem-man, which doesn't look ideal (the end user has to set it up).\n. Damn it, git intercepts the --help switch unless you directly invoke the subcommand\u2014I can make git-up --help work but not git up --help, without the dash.\nJust to mix things up, git up -h does work consistently.\nOh well, it's better than unexpectedly messing with the repo.\n. Just pushed 0.5.9 - help banner in place.\nYeah, it seems running git <subcommand> --help is equivalent to git help <subcommand>, i.e. it looks for a man page.\nFrom my extensive research, it looks like you can't auto-install a man page with a gem. Maybe there could be two new git-up subcommands:\ngit up man: displays a man page\ngit up install-man: installs the man page... somewhere (perhaps present a list of options gleaned from manpath)\nThose commands could then be documented in the help banner.\n. Done: https://github.com/aanand/git-up/commit/ada6066034518f4f40347cefa5992f0984bb9240\n. (Thanks!)\n. Nice.\n. Yes. This is because the upstream branch won't always be set (e.g. if the user hasn't pushed that branch before).\nPerhaps it should check if an upstream is set first, and fall back to name matching if not. Pull requests welcome!\n. This is cool\u2014very cool\u2014but it's definitely feature bloat. Making parallel installation of gems the default seems like it should be Bundler's job, not git-up's. Consequently, I'm closing.\nA cool thing would be to implement a configurable post-run-hook command, a bit like log-hook, which would actually obsolete bundler.check and bundler.autoinstall, as well as enabling you to pass whatever flags you like to bundle install.\n(also, log-hook should probably be called post-rebase-hook. Or maybe they should be called hooks.post-run and hooks.post-rebase...)\n. Have you looked at RVM.md? It talks about a different error message, but might be the same issue.\n. Closing - reopen if you're still getting errors after trying the above advice!\n. Indeed! git-up is a straight fetch + rebase, except:\n1. It works over all your branches, not just the current one.\n2. It also stashes any working tree changes and reapplies them once it's done.\nIt doesn't have any of the magic of git pull --rebase (which, I confess, I'd never heard about).\n. Never heard of ORIG_HEAD before - now that I've done a bit of Googling, I'm not sure I follow. ORIG_HEAD is set by pull and merge before they do their thing, according to this Stack Overflow answer.\nAre you saying git-up should behave similarly and set ORIG_HEAD before it does anything, and if so, what does that have to do with preserving merges?\n. OK. So merges can currently be preserved by setting git-up.rebase.arguments to --preserve-merges. Perhaps we should always set ORIG_HEAD to whatever HEAD was at the time git-up was run. Does that sound sensible, and would you be happy to implement it?\n. Closing due to quiet - if someone wants to implement and PR this, be my guest.\n. Hmm! This shouldn't happen - git-up only pops if it found something to stash in the first place: https://github.com/aanand/git-up/blob/master/lib/git-up.rb#L175-L188\nCould you try it on a few different repositories and report back? I'd like to narrow down the failing case.\n. Yes! This has been suggested before, actually.\nExcept. I'm already uncomfortable with the tool-specific stuff (i.e. git-up.bundler.*) in there already, and really would rather we stripped it out and put in more tool-agnostic hooks that were just shell commands.\nThis would cover your use case, I believe - you'd define a post-run hook, either a one-liner or a sh ./migrate_if_necessary.sh, and that would run every time git-up was finished doing its thing.\nI mused about this over here for a bit, but still haven't had the time to implement it. If you fancy taking a crack, though, go for it!\n. Actually, a >= dependency is almost always a bad idea - grit is probably doing the right thing. But surely this can be fixed by manually installing the older version again, i.e. gem install ruby-mime-types -v 1.25? Both versions should be able to coexist.\n. Agreed. I've tried colouring it in cyan - how do you like it?\n. Merged; will release when I've got a moment.\n. Have you had a look at RVM.md? It describes a different problem, but might also be down to the same RVM oddness.\n. Closing - reopen if you're still getting errors after trying the above advice!\n. Well, that's certainly an embarrassing score. (In my defence, this was\nmostly written 4 years ago.)\nHappy to add a badge, but how do I take ownership of the project on Code\nClimate?\nOn Wed, Dec 18, 2013 at 9:20 AM, Rorsvort notifications@github.com wrote:\n\n\nYou can merge this Pull Request by running\ngit pull https://github.com/borisrorsvort/git-up master\nOr view, comment on, or merge it at:\nhttps://github.com/aanand/git-up/pull/62\nCommit Summary\n- Added Code Climate badge\nFile Changes\n- M README.md https://github.com/aanand/git-up/pull/62/files#diff-0(2)\nPatch Links:\n- https://github.com/aanand/git-up/pull/62.patch\n- https://github.com/aanand/git-up/pull/62.diff\n. Try this (untested):\n\ngit config --global git-up.rebase.log-hook 'git diff --stat $1..$2'\n. I think this would be implementable as a post-run hook, once those are implemented - see #66.\n. https://github.com/mojombo/grit/pull/145 :(\nMaybe it's time to vendor Grit...\n. Oh, interesting! If someone wants to take a crack at converting git-up to use rugged, that'd be incredible - I'm afraid I'm far too busy right now ;_;\n. Thanks, @msiemens!\n. Not strong ones, but this isn't a very maintained project in the first place, and is less relevant now that Git 2.0 has better push behaviour.\n. Prior to Git 2.0, git push tried to push everything. The discrepancy between that and git pull (which only updates the current branch) meant that git push would frequently complain at you that you were trying to push an old commit to some other branch you didn't care about.\nNow that git push only pushes the current branch by default, that's less of an issue. There are other benefits to git up of course - keeping several branches continuously up to date, getting an overview of their status etc - but I haven't personally been on a team with a workflow that makes that particularly valuable for some time now. As a result, I've been using git up less and not really maintaining it.\nI'd still like to find the time for a grand rewrite, for several reasons:\n- I hate distributing command-line tools via language-specific packaging frameworks like RubyGems or PyPi - it's such a barrier to installation\n- There are some arbitrarily Ruby-specific features that I'd rather replace with a more generic hook system (see #66)\n- I don't really like Ruby any more\n...but these days I have so little time.\n. So this is basically equivalent to doing a git fetch with --prune and --all appended according to git-up's configuration, right?\nI'm not sure it adds enough value to be a feature of git-up vs. the user just running git fetch.\n. OK, I think I'm in favour of this feature, but could you rename the flag and the ivar?\nI think it'd be best to call the flag --no-fetch, and call the ivar @fetch (inverting the logic).\n. Nice.\n. Hi folks. I neither use nor maintain this project any more, so I'm not going to merge any more PRs. If someone would like to take ownership of it, I'll happily transfer the repo over to them.\nI'm going to update the README and description so that I don't waste anyone else's time. Sorry for the disappointment.\n. Basically, since Git 2.0, git push with no arguments only pushes the current branch (specifically: the default value for push.default changed from matching to simple). This means it doesn't matter if your other branches are out of date.\nI've clarified the paragraph a bit.\n. I don't believe it did.\n. Here's a one-liner that'll get you a git up that fetches, stashes, rebases and unstashes on just the current branch:\ngit config --global alias.up '!git fetch && git rebase --autostash FETCH_HEAD'\nI've added it to the README.\n. @mauricioklein I don't have a good solution for that, I'm afraid. The only reason I considered it necessary in the first place was because of the default git push behaviour at the time. Now that that's changed, it doesn't seem that a lot of people need to update all local branches.\n. @despairblue Does this work?\n$ git config --global alias.up '!git fetch && git rebase --autostash $(git for-each-ref --format \"%(upstream:short)\" $(git symbolic-ref -q HEAD))'\n. PSA: as of Git 2.9, you can just do this:\ngit config --global alias.up 'pull --rebase --autostash'\n. Thanks for the PR. However, now that Git 2.9 is out and supports git pull --rebase --autostash, I think I'll just recommend that.\n. I'm sorry that your use case isn't met, but I will not be reviving git-up as long as I don't personally need it. There are probably other tools for doing the same thing, but I don't know of any off the top of my head.. Could this be reworded to:\nIf you'd rather this happened on every `git pull`, then you can do this if you're running Git 2.9 or later:.\n",
    "MikeMcQuaid": "I get the same on the Qt repository git://gitorious.org/qt/qt.git\n. I can't quite understand where you've initialised the Git object or I'd have a look at this :)\n. ",
    "elliotcm": "I didn't want to go the .git-up route at this stage without discussing it first.  What's your preference?\n. Sounds good.  \"on\", \"off\", \"true\"?\n. On it.\n. Bundler check should also catch missing git repos.\nClosed by cfe5c6bfa5a8ae099f9a73b807aed9e90ea70a76.\n. Looks like this explodes on Rails 2.3.2\nI'll add another commit to tighten up the permitted Rails versions.\n. I'll have a think about it when I get the drive to revisit this.  I've not really missed it much since I rolled back.  If/when it goes in, I'll update it for the new config system.\n. ",
    "jaw6": "Hey Aanand - Guess I don't get any notification from Github on replies here. Anyway: he and I were talking about git-up, he mentioned that he had \"fixed\" this problem, but it didn't strike me as a problem at the time. Later on, it became a problem, and (at that time) I couldn't find his repo, or it wasn't public, or something. So, I did it my own way. \nFor what it's worth: it looks like his version only fetches from remotes that you have tracking branches for, but does not include any fixes for \"remote_for_branch\".\n. New commit fixes an issue I ran into when trying this out on a \"real\" repo\n. ",
    "twe4ked": "Sounds awesome Elliot, Looking forward to this if it gets merged in :-)\n. +1, worked for me too.\n. @aanand do you have any comments on this?\n. Awesome, I've installed the prune branch locally, all looks great! Thanks.\n. ",
    "bomberstudios": "I have tried to reproduce the error with git-up 0.5.0 and so far it works correctly, so maybe it was a known bug that has been fixed?\nPlease close the issue if that is the case...\n. ",
    "ramen": "I'm using git-up 0.5.0 and I have this happen sometimes. It seems to occur when I have conflicts while running git-up in a subfolder.\n. ",
    "felixbuenemann": "This happened to me today again and it was related to conflicts. I ran git up in app/stylesheets from a feature branch and rebase in develop branch failed. After that I ended up with a new app folder in app/stylesheets/. (git clean -d -f helps clean this up) I'm also using 0.5.0.\n. Im just using a git alias:\n``up = !\"cdgit rev-parse --show-toplevel` && git-up\"\n\n. I took the time to implement a fix, so these hacks should become obsolete soon.\n. I didn't see any problems with automatic stashing for either changed, deleted or added files, so I think it is fully equivalent to the code introduced by #22.\n. Btw. I took a another look and there is a difference:\nThe old code does not stash moved files, while the new code does. But I think the old code was wrong, so it should be ok.\n(You DO want to stash away moved files to avoid merge conflicts...)\n. Feel free to close then. The rationale behind rebasing onto the integration branch is that the feature branch only contains commits related to the feature being implemented.\n. If only I knew the question.\n. ",
    "nhed": "just saw the same thing with 0.5.1 :(\n. FWIW I added the following into my /usr/bin/git-up\n    raise 'Not in a root git dir' unless File.directory? '.git'\nforcing me to cd to to base repo dir\nOn Tue, Dec 20, 2011 at 1:48 PM, Adrian Irving-Beer <\nreply@reply.github.com\n\nwrote:\nSaw it with 0.5.0.\nScenario:  I had four untracked files, and I had one tracked file that I\nmodded, git-add'd, but forgot to git-commit.\n% git-up\nFetching origin\nremote: Counting objects: 159, done.\nremote: Compressing objects: 100% (97/97), done.\nremote: Total 115 (delta 63), reused 0 (delta 0)\nReceiving objects: 100% (115/115), 11.86 KiB, done.\nResolving deltas: 100% (63/63), completed with 20 local objects.\nFrom (git-repo censored)\n  c99c496..c8287f7  master     -> origin/master\nstashing 1 changes\nmaster rebasing...\nFailed to rebase master onto origin/master\nHere's what Git said:\nCannot rebase: You have unstaged changes.\nPlease commit or stash them.\nzsh: exit 1     git-up\nAfter this, I basically had the entire repo checked out into my current\ndirectory, meaning I now have a ton of untracked files corresponding to\neverything in the repo.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aanand/git-up/issues/14#issuecomment-3223218\n. That is better ...\n(though there may be a point to both, in case you are on a shared machine\nand others will end up using git-up)\n\nOn Wed, Dec 21, 2011 at 8:21 AM, Felix Buenemann <\nreply@reply.github.com\n\nwrote:\nIm just using a git alias:\nup = !\"cd git rev-parse --show-toplevel && git-up\"\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aanand/git-up/issues/14#issuecomment-3233544\n. great ... Ill check it out one day ...\n\nOn Thu, Dec 22, 2011 at 11:45 AM, Felix Buenemann <\nreply@reply.github.com\n\nwrote:\nI took the time to implement a fix, so these hacks should become obsolete\nsoon.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/aanand/git-up/issues/14#issuecomment-3251204\n. \n",
    "wisq": "Saw it with 0.5.0.\nScenario:  I had four untracked files, and I had one tracked file that I modded, git-add'd, but forgot to git-commit.\n% git-up\nFetching origin\nremote: Counting objects: 159, done.\nremote: Compressing objects: 100% (97/97), done.\nremote: Total 115 (delta 63), reused 0 (delta 0)\nReceiving objects: 100% (115/115), 11.86 KiB, done.\nResolving deltas: 100% (63/63), completed with 20 local objects.\nFrom (git-repo censored)\n   c99c496..c8287f7  master     -> origin/master\nstashing 1 changes\nmaster rebasing...\nFailed to rebase master onto origin/master\nHere's what Git said:\nCannot rebase: You have unstaged changes.\nPlease commit or stash them.\nzsh: exit 1     git-up\nAfter this, I basically had the entire repo checked out into my current directory, meaning I now have a ton of untracked files corresponding to everything in the repo.\n. ",
    "vguerci": "On second thought, Maybe It would be a better idea to add arguments to git-up, giving it similarities to underlying git commands like git up -p...\n. ",
    "portertech": "closing in favour of rebase arguments (cli) https://github.com/aanand/git-up/pull/15\n. alright, will do.\n. ",
    "ltw": "+1, fix confirmed.\n. ",
    "perplexes": "The resolution involved blowing away the system and rebuilding - I suspect it is RubyGems, and if you google for \"invalid date format in specification\" you'll see a bunch more examples. shrug. It's like Rubygems.org or RubyGems locally is changing the date format into a timestamp instead of a date, then expects it to be a date.\n. ",
    "stigkj": "I am a little late here, but shouldn't it also cd back to where the user was when running git up?\n. Aha...sorry, just me being a newb\n. This sounds like a nice default\n. This looks good...I have not had the time to test it though :-)\n. Sorry for not explaining properly. But first: one uses ORIG_HEAD after git pull/merge to see which changes have been fetched from the server in the git pull/merge, for example like this:\ngit log ORIG_HEAD..\nAs it is, git-up already behaves properly with regards to ORIG_HEAD.\nNow to the issue at hand. When doing a regular rebase, any unpushed merge commits will be \"flattened out\". The rebase command has a --preserve-merges option which preserve merge commits when rebasing. The problem with this option is that it sets ORIG_HEAD incorrectly (look at the \"Downsides to git rebase -p\" section).\nSo if you could add an option to git-up that preserves merges it would be great! An greater still if you could point ORIG_HEAD to the correct commit afterwards.\n. ",
    "rentalcustard": "Dir.chdir only changes the working directory for the process, not the shell running the command. Test it with a simple ruby script:\ntest.rb:\nDir.chdir(\"/some/directory/here\")\nputs `ls`\nshell:\n```\n$ pwd\n/some/dir\n$ ruby test.rb\noutput of ls in /some/directory/here\n$ pwd\n/some/dir\n```\n. ",
    "jasoncodes": "+1 This is pretty awesome. I've been running it since the pull request was opened.\n. The string comparison for the version number may pose a problem in the future. Maybe use Gem::Version?\nEverything else looks good.\n. I like the solution for comparing version numbers. Thanks for your efforts on this.\n. ",
    "gmanley": "Nice, I was running into this issue a couple times as well. Thanks for the fix!\n. ",
    "smith": "Thanks for looking. That's what I've been doing, so there's a workaround. I forgot to mention this only happens on one of my machines and it works fine on the other, both having the same version of git-up, but not sure about ruby or grit or other things' versions. If it continues to be a problem I'll open an issue on Grit or figure something out.\n. ",
    "nschum": "I usually don't write ruby, but I'll give it a shot. :)\n. ",
    "johannesjh": "thank you for this pull request! I would also welcome very much if this was accepted into git-up. FYI, a good article about the necessity of the --preserve-merges flag is given in http://notes.envato.com/developers/rebasing-merge-commits-in-git/\n. ",
    "decklin": "Sure, i'll make those changes when I have a moment.\n. There - I also put the log-hook option under \"rebase\" so it won't clutter up the options namespace (there could be other options for rebase).\n. Haha, sure :)\n. ",
    "ekohl": "I'll look into this. Not that experienced in ruby, but this might be a good time to learn. Btw, if you use #24 it will create a reference in both issues.\n. Looks like you can fix it in a 1-liner which I'll try to upstream in grit. No changes needed in git-up.\ndiff --git a/lib/grit/git-ruby.rb b/lib/grit/git-ruby.rb\nindex 290ebcd..ddf5f69 100644\n--- a/lib/grit/git-ruby.rb\n+++ b/lib/grit/git-ruby.rb\n@@ -116,6 +116,10 @@ module Grit\n     def refs(options, prefix)\n       refs = []\n       already = {}\n+\n+      # submodule\n+      @git_dir = File.read(@git_dir)[/gitdir: (.*)/, 1] if File.file?(@git_dir)\n+\n       Dir.chdir(@git_dir) do\n         files = Dir.glob(prefix + '/**/*')\n         files.each do |ref|\n. ",
    "ot-brett-jones": "It works when I remote to my Ubuntu server running ruby 1.8.7. I'm running ruby 1.9.2p180 at work on a Windows 7 machine and it's not working.\n. I tried running git-up and I got the same error on my work machine (Windows 7)\n. Which version of grit is everyone running? Check with:\ngem list grit --local\nI'm on 2.5.0.\nI'm getting closer to a resolution and it seems to be with grit, but I'm not positive yet.\n. Well there you have it... @aanand, you can probably close this issue since it's not related directly to git-up.\n. @Port3M5, it seems like you meant the other way around like @ahmeij.\n. That's not the same error. You're getting \"Permission Denied\" when you run \"git-up\". Try changing the permissions of the git-up script with \nchmod +x\n. ",
    "ahmeij": "I have the same issue:\n/usr/local/rvm/gems/ruby-1.9.3-p194@sr/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:187:in `_pspawn': Invalid command name (ArgumentError)\nbut it only happens when running git up when I run the separate command git-up it does work as expected\nLooks like this might have something to do with the environment changes RVM makes? as the thread owner also seems to use rvm.\n. My versions: grit (2.5.0), posix-spawn (0.3.6), git-up (0.5.8), rvm 1.16.8, ruby 1.9.3p194, git version 1.7.4.4\nSymptoms: \ngit-up: works\ngit up: fails (spawn.rb:187:in `_pspawn': Invalid command name (ArgumentError))\nI tried making making this ruby default in rvm and installing git-up in the default gemset, both did not change anything\nI'm happy using git-up instead of git up, just trying to help figure out the issue\npspawn 187 is called with these arguments when failing:\nEnv: {}\nArgv: [[\"/usr/libexec/git-core/git\", \"/usr/libexec/git-core/git\"], \"--git-dir=/Users/admin/dev/socialreferral/.git\", \"config\", \"--list\"] \nOptions: {#<IO:0x102acda98>=>:close, :in=>#<IO:0x102acdb88>, :out=>#<IO:0x102acda48>, #<IO:0x102acd980>=>:close, #<IO:0x102acdb10>=>:close, :err=>#<IO:0x102acd930>}\nAnd when succeeding:\nEnv: {}\nArgv: [[\"/usr/bin/git\", \"/usr/bin/git\"], \"--git-dir=/Users/admin/dev/socialreferral/.git\", \"config\", \"--list\"] \nOptions: {:in=>#<IO:fd 5>, #<IO:fd 6>=>:close, :out=>#<IO:fd 8>, #<IO:fd 7>=>:close, :err=>#<IO:fd 10>, #<IO:fd 9>=>:close}\n. ",
    "kikito": "@ahmeij I am using rvm, yes. My hardware is a mac with the latest OSX.\n. I'm also on grit 2.5.0.\nIt might help to say that I'm using OSX gcc instead of the default mac dev stuff.\n. ",
    "danielthor": "I had the same problem (OS X, rvm), but don't anymore. Unfortunately I'm not sure exactly what fixed it. When working on other things I installed the latest Command Line Tools for OS X (https://developer.apple.com/downloads/), and also reinstalled git, and I guess anyone of them could have something to do with it working again.\n. 2.5.0\n. ",
    "youcandanch": "Same problem as ot-brett-jones trying to use either git-up or git up in Win 7, msysgit, RubyInstaller w/ DevKit. Updated the spreadsheet with my information.\n. Balls - actually, according to https://github.com/rtomayko/posix-spawn/pull/30, posix-spawn won't work on a Windows environment, and since grit uses it, by definition it won't work on a Windows machine. Ah well.\n. I wouldn't necessarily say that's the case - it's only proven that posix won't work on Windows. Considering the other people who are reporting are on different infrastructures, I'd say that our problem is unrelated but the issue still stands.\n. Specifically, applying both of these:\nhttps://github.com/wernight/grit/commit/bdc23bd583097812308e1af3a2f73cefe875f014\nhttps://github.com/stereobooster/posix-spawn/commit/67a73c670f3836f137dd06ea854ea71cc1d12154\nTo grit and posix (respectively) fixes the issue. I have it working, though I haven't really bothered with the coloring issue. Black and white is just fine for now.\n. True, and ansicon is pretty great anyway. Not too hard to throw it in path and alias over it. Figured that out about 5 minutes after my post ;]\n. If, like me, you're an idiot and let the msysGit install put it in the default directory (C:\\Program Files (x86)), you're going to get some errors when trying to rebase (command line doesn't escape the parens or spaces properly). Uninstalling / reinstalling in a proper directory structure fixes that.\n. ",
    "pauldyson": "Added my details to spreadsheet\n. ",
    "ghost": "Also seeing bug, details added.\n. ",
    "Port3M5": "Also have this bug for git-up but not for git up. Have added my details to the spreadsheet.\n. No I can confirm that it does in fact work that way round as you can see below\nGandalf:business-report (develop) anthony$ git-up\n/Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:187:in `_pspawn': Permission denied - posix_spawnp (Errno::EACCES)\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:187:in `pspawn'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:160:in `spawn'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:307:in `popen4'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/posix-spawn-0.3.6/lib/posix/spawn/child.rb:105:in `exec!'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/posix-spawn-0.3.6/lib/posix/spawn/child.rb:80:in `initialize'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/grit-2.5.0/lib/grit/git.rb:345:in `new'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/grit-2.5.0/lib/grit/git.rb:345:in `native'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/grit-2.5.0/lib/grit/git.rb:372:in `method_missing'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/grit-2.5.0/lib/grit/config.rb:40:in `config_lines'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/grit-2.5.0/lib/grit/config.rb:32:in `load_config'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/grit-2.5.0/lib/grit/config.rb:27:in `data'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/grit-2.5.0/lib/grit/config.rb:14:in `[]'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/git-up-0.5.8/lib/git-up.rb:262:in `config'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/git-up-0.5.8/lib/git-up.rb:242:in `prune?'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/git-up-0.5.8/lib/git-up.rb:7:in `run'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/gems/git-up-0.5.8/bin/git-up:5:in `<top (required)>'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/bin/git-up:19:in `load'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/bin/git-up:19:in `<main>'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/bin/ruby_noexec_wrapper:14:in `eval'\n    from /Users/anthony/.rvm/gems/ruby-1.9.3-p327-falcon/bin/ruby_noexec_wrapper:14:in `<main>'\nGandalf:business-report (develop) anthony$ git up\nFetching origin\narticle_tags up to date\ncrons        up to date\ndevelop      up to date\nlive         fast-forwarding...\nreturning to develop\n. I do see what you're saying about it being a different issue, however chmodding has not fixed this issue.\nThanks for the help regardless.\n. ",
    "alexspurling": "@Port3M5, you are the first person on the spreadsheet to experience a problem with git-up but not with git up. Are you sure that it works that way round?\n. ",
    "amdprophet": "I was getting the posix issue when I was using git version 1.7.10.2 (Apple Git-33). The issue went away after I installed the latest git from homebrew (git version 1.8.0.1). Make sure that /usr/local/bin appears in $PATH before /usr/bin so that you don't use the older git version bundled with Xcode.\n. ",
    "alexkravets": "Having this issue too on latest MacOS, heroku toolbelt, RVM:\nalex-kravets:enltnd akravets$ git up\n/Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:187:in `_pspawn': Invalid command name (ArgumentError)\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:187:in `pspawn'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:160:in `spawn'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/posix-spawn-0.3.6/lib/posix/spawn.rb:307:in `popen4'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/posix-spawn-0.3.6/lib/posix/spawn/child.rb:105:in `exec!'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/posix-spawn-0.3.6/lib/posix/spawn/child.rb:80:in `initialize'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/grit-2.5.0/lib/grit/git.rb:345:in `new'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/grit-2.5.0/lib/grit/git.rb:345:in `native'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/grit-2.5.0/lib/grit/git.rb:372:in `method_missing'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/grit-2.5.0/lib/grit/config.rb:40:in `config_lines'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/grit-2.5.0/lib/grit/config.rb:32:in `load_config'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/grit-2.5.0/lib/grit/config.rb:27:in `data'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/grit-2.5.0/lib/grit/config.rb:14:in `[]'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/git-up-0.5.8/lib/git-up.rb:262:in `config'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/git-up-0.5.8/lib/git-up.rb:242:in `prune?'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/git-up-0.5.8/lib/git-up.rb:7:in `run'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/gems/git-up-0.5.8/bin/git-up:5\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/bin/git-up:19:in `load'\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/bin/git-up:19\n    from /Users/akravets/.rvm/gems/ruby-1.9.3-p327/bin/ruby_noexec_wrapper:14\nalex-kravets:enltnd akravets$ git-up\nFetching origin\nmaster   up to date\nrelease3 up to date\n. this works for me, thanks!\nOn Tue, Jan 8, 2013 at 11:02 PM, Daniel Upton notifications@github.comwrote:\n\nThis has been bugging me a lot recently so I decided to take a deep dive\nand came up with a workaround.\nIt's definitely an RVM thing, the problem is with what git [some command]does under the hood.\nFirst git looks internally for the command, then if it can't find it: it\nwill attempt to run git-[your command] so git up makes git try to run an\nexecutable in your $PATH called git-up.\nSimples! https://github.com/git/git/blob/master/git.c#L473\nI think the problem is that even though the environmental variables are\nthe same (i think they get copied somewhere in run_command_v_opt()), RVM\ndoesn't get to do it's stuff so which ruby still points to /usr/bin/rubyinstead of RVM's ruby.\nSo to fix the problem we somehow need force git-up to use RVM's instance\nof ruby.\nWe could manually change the shebang, but that's nasty... so here's my\nhacky (probably just as nasty) workaround (tested on OSX Mountain Lion):\nrvm wrapper [ruby-version@gemset] git git-up\nsudo ln -s /Users/me/.rvm/bin/git_git-up /usr/libexec/git-core/git-up\nThat seems to do the trick for me, it works because git adds\n/usr/libexec/git-core to start of the $PATH.\nEnjoy! [image: :smile_cat:]\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aanand/git-up/issues/32#issuecomment-12017058.\n. \n",
    "boxofrad": "This has been bugging me a lot recently so I decided to take a deep dive and came up with a workaround.\nIt's definitely an RVM thing, the problem is with what git [some command] does under the hood.\nFirst git looks internally for the command, then if it can't find it: it will attempt to run git-[your command] so git up makes git try to run an executable in your $PATH called git-up.\nSimples! https://github.com/git/git/blob/master/git.c#L473\nI think the problem is that even though the environmental variables are the same (i think they get copied somewhere in run_command_v_opt()), RVM doesn't get to do it's stuff so which ruby still points to /usr/bin/ruby instead of RVM's ruby.\nSo to fix the problem we somehow need force git-up to use RVM's instance of ruby.\nWe could manually change the shebang, but that's nasty... so here's my hacky (probably just as nasty) workaround (tested on OSX Mountain Lion):\nrvm wrapper [ruby-version@gemset] git git-up\nsudo ln -s /Users/me/.rvm/bin/git_git-up /usr/libexec/git-core/git-up\nThat seems to do the trick for me, it works because git adds /usr/libexec/git-core to start of the $PATH.\nEnjoy! :smile_cat: \n. This presents us with another problem:\nThe RVM wrapper will attempt to exec git-up which works fine normally, but when you're in another ruby project (using bundler) you may hit this lovely bug:\ngems/bundler-1.1.5/lib/bundler/spec_set.rb:90:in `block in materialize': Could not find [some gem] in any of the sources (Bundler::GemNotFound)\nI'm pretty sure this is all to do with ruby_noexec_wrapper.\nIf you take a look at the source it attempts to load rubygems-bundler:\n``` ruby\n!/usr/bin/env ruby\noriginal_file=ARGV[0]\nARGV.shift\n$PROGRAM_NAME=original_file\nrequire 'rubygems'\nbegin\n  require 'rubygems-bundler/noexec'\nrescue LoadError\n  warn \"unable to load rubygems-bundler/noexec\" if ENV.key?('NOEXEC_DEBUG')\nend\neval File.read(original_file), binding, original_file\n```\nI think the issue here is that somewhere along the line bundler is going to incorrectly hit our projects Gemfile.\nSo here's another hack on a hack which fixes it for me, edit the RVM wrapper we generated and change this:\nif [[ -s \"/Users/daniel/.rvm/environments/ruby-1.9.2-p320@global\" ]]\nthen\n  source \"/Users/daniel/.rvm/environments/ruby-1.9.2-p320@global\"\n  exec git-up \"$@\" # <- CHANGE ME! :)\nelse\n  echo \"ERROR: Missing RVM environment file: '/Users/daniel/.rvm/environments/ruby-1.9.2-p320@global'\" >&2\n  exit 1\nfi\nto this:\nif [[ -s \"/Users/daniel/.rvm/environments/ruby-1.9.2-p320@global\" ]]\nthen\n  source \"/Users/daniel/.rvm/environments/ruby-1.9.2-p320@global\"\n  ruby `which git-up`\nelse\n  echo \"ERROR: Missing RVM environment file: '/Users/daniel/.rvm/environments/ruby-1.9.2-p320@global'\" >&2\n  exit 1\nfi\nIt's hack for sure, but I'm not sure if there's a clean fix.\nOut of interest does anyone have this problem on rbenv?\n. Sure thing :)\n. ",
    "silasdavis": "This still fails for both git-up and git up on windows with no RVM, but using the ruby installer and dev kit (to make it build native extensions): http://rubyinstaller.org/\nThe same issue affects the gollum wiki server.... I have updated your spreadsheet\n. ",
    "akrabat": "When I run rvm wrapper [ruby-version@gemset] git git-up in Terminal\nI get:\nawk: nonterminated character class ^[ruby-version=\n source line number 1\n context is\n     >>> /^[ruby-version=/ <<< \nsed: 1: \"s#^[ruby-version=##\n\": unbalanced brackets ([])\nUnknown ruby interpreter string component: '[ruby'.\nCould not load ruby [ruby-version@gemset].\nWhat am I doing wrong?\n. ",
    "wmeyers": "I also have the issue. git up gives Invalid command name error. git-up works. I updated the spreadsheet as well.\n. ",
    "rlpowell": "I have done all the things at the RVM guide; it made no difference:\nrlpowell@shell01> /usr/libexec/git-core/git-up\n/usr/local/rvm/gems/ruby-2.0.0-p247/gems/posix-spawn-0.3.8/lib/posix/spawn.rb:187:in _pspawn': Invalid command name (ArgumentError)\n        from /usr/local/rvm/gems/ruby-2.0.0-p247/gems/posix-spawn-0.3.8/lib/posix/spawn.rb:187:inpspawn'\n        from /usr/local/rvm/gems/ruby-2.0.0-p247/gems/posix-spawn-0.3.8/lib/posix/spawn.rb:160:in spawn'\n        from /usr/local/rvm/gems/ruby-2.0.0-p247/gems/posix-spawn-0.3.8/lib/posix/spawn.rb:312:inpopen4'\n\"git up\" does the same thing, as does many other things I have tried.  No way of calling this program seems to work.\nThe truly strange part is that if I add:\nprint \"#{env}, #{argv}, #{options}\"\nat the line in question in spawn.rb, I get:\n{}, [[\"/usr/bin/git\", \"/usr/bin/git\"], \"--git-dir=/home/rlpowell/src/aws_puppet3/.git\", \"config\", \"--list\"], {:in=>#<IO:fd 7>, #<IO:fd 8>=>:close, :out=>#<IO:fd 10>, #<IO:fd 9>=>:close, :err=>#<IO:fd 12>, #<IO:fd\nwhich seems about as inoccuous as a command could possibly get!\nNo idea what's going on here or what to do about it.\n. Here's the fun part: the following:\nsudo /usr/local/rvm/bin/rvm gemset create git-up\nsudo /usr/local/rvm/bin/rvm ruby-2.0.0-p247@git-up do gem install git-up\n/usr/local/rvm/wrappers/ruby-2.0.0-p247@git-up/ruby /usr/local/rvm/gems/ruby-2.0.0-p247@git-up/bin/git-up\nworks with no trouble.\nHaving done so, the following also works:\nsudo rvm wrapper ruby-2.0.0-p247@git-up  --no-prefix git-up\n  /usr/local/rvm/bin/git-up\n  git up\nSo, no idea, but creating the new gemset fixed it, so there's an addition to\nthe workaround for future use.\n. ",
    "DavidTanner": "This happens for me in windowsXP with Ruby 1.9.3-p362\n. ",
    "wernight": "Yes on my profile page. I'm using it daily exactly with ansicon.\n. Yes correct, I forgot about the second one.\nColoring wouldn't such an issue if it didn't display the ANSI code. HA HA\n. I've updated the summary to describe all the steps. That should be similar. As the commands are pretty advanced I'd advise against doing it manually in an official read-me.\n. ",
    "chasetopher": "I'm pretty sure it works without bundler in the Gemfile. I'm not even sure why we need bundler in our Gemfile, maybe that's our real problem. I've stopped using git-up recently, so this is not a very pressing issue.\n. ",
    "kinjalpadalikar": "How do we make a particular branch private or for limited usage?. ",
    "danielmurphy": "I swear I did that. Really! :) But it works now. Don't I feel silly. Thanks for the great tool!\n. ",
    "yanndinendal": "@aanand I did that (no idea what is rbenv but I installed it), but I still get this error. :/\n. ",
    "sheerun": "My bad. I didn't install bundler for 1.8.7. It raised: \n/Users/sheerun/.rbenv/versions/1.8.7-p371/lib/ruby/gems/1.8/gems/git-up-0.5.8/lib/git-up.rb:170:in `check_bundler': uninitialized constant GitUp::Bundler (NameError)\n    from /Users/sheerun/.rbenv/versions/1.8.7-p371/lib/ruby/gems/1.8/gems/git-up-0.5.8/lib/git-up.rb:23:in `run'\n    from /Users/sheerun/.rbenv/versions/1.8.7-p371/lib/ruby/gems/1.8/gems/git-up-0.5.8/bin/git-up:5\n    from /Users/sheerun/.rbenv/versions/1.8.7-p371/bin/git-up:19:in `load'\n    from /Users/sheerun/.rbenv/versions/1.8.7-p371/bin/git-up:19\nMaybe disable bundle install feature if bundler is not installed or issue warning instead?\n. ",
    "msiemens": "BTW: Issue 42! ;)\n. Are you sure this is a problem with git-up? See: SO#10466566, SO#11481097, SO#12731904\n. Duplicate of #24 and #31?\n. It seems like you confused git-up with PyGitUp. This repository, where you opened the issue, is git-up, the Ruby implementation. You propably want to open this issue in msiemens/PyGitUp, the Python port.\n. I doubt this is a problem with git up. This seems to be the same problem as described here: http://stackoverflow.com/q/22352838/997063. Does the workaround described in the link help?\n. This gist might be of help: https://gist.github.com/timuruski/6072363\n. Concerning tests: I have an integration test suite in my Python port. If git-up gets a test suite, I would try to keep my one in sync with it so both implementations stay compatible.\n. @dlikhten: I think this is not the repo you meant. This is aanand/git-up, a helper command line helper for fetching and rebasing, not git-up/GitUp (a graphical interface).\n. @d33tah: Hey, seems like you're using the Python version. This repo is the original Ruby implementation. Please open a ticket at github.com/msiemens/PyGitUp :)\n. I doubt it's an issue with git-up. Here's a Stack Overflow topic on this error message: \nInstalling gem or updating RubyGems fails with permissions error\n\n. ",
    "nikreiman": "Sorry, it was indeed a missing package. My bad, I'm not a ruby coder at all. :)\n. ",
    "capnslipp": "Interesting\u2026 and that's 3 out of 4 use cases covered though.\nDo you know what git does then if it encounters a --help after a subcommand?\u00a0 Is there a chance that it will abort running of the command if it finds an appropriately named man page?\nSorry, can't help you with installing man pages with a gem; I never bothered to do that for any of my old gems. ;-/\n. So it turns out that that fourth use-case, git up --help, is safe (it doesn't run the git-up) command, albeit not being ideal (showing the man page):\nbash\nslippyd@silverdelicious:~$ git up --help\nNo manual entry for git-up\nI think the scope of this issue is now covered.  If you would like to do the manpage install stuff, it's all you.\nMerci.\n. ",
    "bf4": "Great, thanks, my pleasure!\n. ",
    "exalted": "Yea, thanks. Don\u2019t hold your breath though :wink: \n. ",
    "thenoseman": "Well, thanks for considering anyways :)\n. ",
    "HeyHugo": "Ah I see, the stashing part seems neat.\n. ",
    "jonaswouters": "I'll report back by tomorrow evening.\n. Can't reproduce it now. If I notice it again I'll report back with some more details\n. it does not @Kikobeats . It only updates your current branch. You can try the python port which is still maintained. . ",
    "webgress": "Looks good. Thank you for a quick update.\nYuriy\nOn Sun, Nov 24, 2013 at 6:59 AM, Aanand Prasad notifications@github.comwrote:\n\nAgreed. I've tried colouring it in cyan - how do you like it?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/aanand/git-up/issues/60#issuecomment-29157163\n.\n. \n",
    "borisrorsvort": "Eheh, no problem, your tool still does what its supposed to and its awesome (I use it all the time now :) )\nAbout code climate, they is no ownership for open source project. You just add it and its out there for everybody. otherwise you can make a paid account add read it there if you want other features\n. ",
    "gausie": "The grit devs recommend https://github.com/libgit2/rugged \n. Just ran into this again. Maybe I'll give it a go.\n. ",
    "galenandrew": "+1 for this issue.\nLooks like Grit is no longer maintained so a migration to libgit2/rugged is eventually necessary.\n. ",
    "foozmeat": "+1\n. ",
    "captainju": ":+1: it would be awesome\n. I've switched to https://github.com/msiemens/PyGitUp\n. ",
    "cburgas": "+1\n. ",
    "d4rkd0s": "+1 :+1: \n. Related to #67 \n. ",
    "xgouchet": "Sorry for the confusion, and thanks for the quick reply\n. ",
    "bedge": "I tracked down the actual binary, and that does work when invoked directly:\n%> /usr/local/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/bin/git-up\nFetching origin\n...\nSo, the issue then is, what maps \"git up\" to the above binary?\n. Does this address https://github.com/aanand/git-up/issues/113 ?\n. ",
    "rsobik": "It works for me with the default ruby installation. I think that you are using a custom ruby, because the versions don't match. Mine is ruby 2.0.0p247 (2013-06-27 revision 41674) [universal.x86_64-darwin13] while yours seems to be Version 2.1.\nIs it possible that the gem binary path is not in your PATH?\n. I was able to install git-up on my machine because the dependencies that require building a native extension were already installed.\nCheck out https://github.com/headius/ruby-atomic/issues/43#issuecomment-38201002 that provides a fix for this issue.\n. ",
    "marcoscaceres": "I'm also having issues:\n``` BASH\nBuilding native extensions.  This could take a while...\nERROR:  Error installing git-up:\n    ERROR: Failed to build gem native extension.\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby extconf.rb\n\ncreating Makefile\nmake \"DESTDIR=\"\ncompiling posix-spawn.c\nIn file included from posix-spawn.c:14:\nIn file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/include/ruby-2.0.0/ruby.h:33:\nIn file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/include/ruby-2.0.0/ruby/ruby.h:24:\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/include/ruby-2.0.0/universal-darwin13/ruby/config.h:17:9: warning: '_GNU_SOURCE' macro redefined\ndefine _GNU_SOURCE 1\n    ^\n\nposix-spawn.c:3:9: note: previous definition is here\ndefine _GNU_SOURCE\n    ^\n\n1 warning generated.\nlinking shared-object posix_spawn_ext.bundle\nclang: error: unknown argument: '-multiply_definedsuppress' [-Wunused-command-line-argument-hard-error-in-future]\nclang: note: this will be a hard error (cannot be downgraded to a warning) in the future\nmake: *** [posix_spawn_ext.bundle] Error 1\nGem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/posix-spawn-0.3.8 for inspection.\nResults logged to /Library/Ruby/Gems/2.0.0/gems/posix-spawn-0.3.8/ext/gem_make.out\nFAIL: 1\n```\n. @sjmarshy, this worked for me:\nsudo ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future gem install git-up\n. FWIW, got the same...  also thought I would file it. :heart: git up :)\n\u2570\u2500\u27a4  git up\n/Library/Ruby/Gems/2.0.0/gems/git-up-0.5.12/lib/git-up.rb:95:in `rebase_all_branches': undefined method `+' for nil:NilClass (NoMethodError)\n    from /Library/Ruby/Gems/2.0.0/gems/git-up-0.5.12/lib/git-up.rb:22:in `block (3 levels) in run'\n    from /Library/Ruby/Gems/2.0.0/gems/git-up-0.5.12/lib/git-up.rb:199:in `returning_to_current_branch'\n    from /Library/Ruby/Gems/2.0.0/gems/git-up-0.5.12/lib/git-up.rb:21:in `block (2 levels) in run'\n    from /Library/Ruby/Gems/2.0.0/gems/git-up-0.5.12/lib/git-up.rb:183:in `with_stash'\n    from /Library/Ruby/Gems/2.0.0/gems/git-up-0.5.12/lib/git-up.rb:20:in `block in run'\n    from /Library/Ruby/Gems/2.0.0/gems/grit-2.5.0/lib/grit/git.rb:90:in `with_timeout'\n    from /Library/Ruby/Gems/2.0.0/gems/git-up-0.5.12/lib/git-up.rb:19:in `run'\n    from /Library/Ruby/Gems/2.0.0/gems/git-up-0.5.12/bin/git-up:5:in `<top (required)>'\n    from /usr/local/bin/git-up:23:in `load'\n    from /usr/local/bin/git-up:23:in `<main>'\n. ",
    "sjmarshy": "I'm having the same issue as @marcoscaceres \n. ",
    "kitt": "@marcoscaceres' solution worked for me, also.\n. ",
    "asmod3us": "I was having the same issue as @bedge. Solved it using rvm to install ruby on my Mac and switch to the global gemset:\ncurl -sSL https://get.rvm.io | bash -s stable --ruby\nrvm --default use ruby-2.1.2\ngem update --system\ngem update\nrvm gemset use global\nThen added the ruby gems path to the shell PATH:\nPATH=\"$(ruby -rubygems -e 'puts Gem.user_dir')/bin:$PATH\"\nAnd finally installed with gem install git-up (no admin privileges needed).\n. ",
    "saada": "Thank you @asmod3us! Worked for me on OSX Yosemite Beta...\nI just used rvm --default use ruby-2.1.3 instead since that was the most current version as of this post\n:heart: \n. ",
    "nemoDreamer": "If you are running rbenv, you'll need to run rbenv rehash after installing executable gems, so it can symlink its shims.\n. ",
    "davidchristiandy": "@nemoDreamer thank you. That did it for me.\n. ",
    "mrtrom": "@asmod3us That worked for me! It was a headache before I found this post. Thanks!\n. ",
    "ronanguilloux": "@asmod3us nice trick. Used rvm info to figure out which ruby version to use with the rvm --default use command.\n. ",
    "roddi": "installing a new version of ruby via homebrew helped. Thanks\n. ",
    "skeet70": "Had the same problem! Thanks for posting about this.\n. ",
    "paralin": "+1\n. ",
    "kpcyrd": "I think this should be checked in the colored library.\nSee defunkt/colored#4.\n. ",
    "bloerwald": ":+1: can confirm, has broken my precious stashes often\n. ",
    "DaveRobinson": "I've had the same problem. Checkout out posix-spawn and running it's tests with rake also generates the same errors.\nIt looks like Posix-spawn as of 0.3.9 isn't compatible with ruby1.8.\nI tested on a box running ruby 1.9.3 and had no problems.\nUpdate: raised an issue in posix-spawn at https://github.com/rtomayko/posix-spawn/issues/62\n. ",
    "cgunnels": "This is weird because I'm running ruby 2.1.2p95 and I'm getting this error.\n. ",
    "ccdunder": "Get the same error with ruby 1.8.7. For now rolling back to posix-spawn-0.3.8 works for me.\n. ",
    "amedee": "I am not a Ruby developer, I am just a git user. What do I do to make this work?\n. @gepoch I added to my path just like you wrote, but my ruby gems directory does not have a bin directory.\n```\n$ echo $PATH\n/home/amedee/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/amedee/.rvm/bin:/home/amedee/cov-analysis/bin:/home/amedee/.rvm/bin:~/.gem/ruby/1.8/bin\n$ ls ~/.gem/ruby/1.8/\ncache\n```\n. @gepoch  I uninstalled ruby and I am currently installing it as described on https://coolaj86.com/articles/installing-ruby-on-ubuntu-12-04.html\nWith one change:\ncurl -L https://get.rvm.io | bash -s stable\nshould be\ncurl -L https://get.rvm.io | bash -s stable --ruby --auto-dotfiles\n. ",
    "david-robinson-practiceweb": "Posix-spawn 0.3.10 release resolves the issue for me at least. A fresh gem install of git-up should be fine now\n. ",
    "sheavner": "Logged issue #63 for posix-spawn, it's probably their issue.\n. Editing line 503 of  ~/.gem/ruby/gems/posix-spawn-0.3.9/lib/posix/spawn.rb fixes issue.   Removed override of cygwin to cmd.exe.\n# Returns a platform-specific [[<shell>, <shell>], <command-switch>] array.\n    def system_command_prefixes\n      if RUBY_PLATFORM =~ /(mswin|mingw|cygwin|bccwin)/\n        sh = ENV['COMSPEC'] || 'cmd.exe'\n        [[sh, sh], '/c']\n      else\n        [['/bin/sh', '/bin/sh'], '-c']\n      end\n    end\nRemove keyword cygwin from checks, change to\nif RUBY_PLATFORM =~ /(mswin|mingw|bccwin)/\n. ",
    "RichDickClark": "Me too!\nUbuntu 12.04\ngit version 1.7.9.5\n. ",
    "unoexperto": "It didn't even get installed in my case.\n```\n[zzzz@q2s3 tt_dev]$ gem install git-up\nfWARNING:  Installing to ~/.gem since /usr/lib64/ruby/gems/1.8 and\n          /usr/bin aren't both writable.\nWARNING:  You don't have /home/zzzz/.gem/ruby/1.8/bin in your PATH,\n          gem executables will not run.\nBuilding native extensions.  This could take a while...\nSuccessfully installed colored-1.2\nSuccessfully installed posix-spawn-0.3.9\nSuccessfully installed mime-types-1.25.1\nSuccessfully installed diff-lcs-1.2.5\nSuccessfully installed grit-2.5.0\nSuccessfully installed git-up-0.5.12\n6 gems installed\nInstalling ri documentation for colored-1.2...\nInstalling ri documentation for posix-spawn-0.3.9...\nInstalling ri documentation for mime-types-1.25.1...\nInstalling ri documentation for diff-lcs-1.2.5...\nInstalling ri documentation for grit-2.5.0...\nInstalling ri documentation for git-up-0.5.12...\nInstalling RDoc documentation for colored-1.2...\nInstalling RDoc documentation for posix-spawn-0.3.9...\nInstalling RDoc documentation for mime-types-1.25.1...\nInstalling RDoc documentation for diff-lcs-1.2.5...\nInstalling RDoc documentation for grit-2.5.0...\nInstalling RDoc documentation for git-up-0.5.12...\n[zzzz@q2s3 tt_dev]$\n[zzzz@q2s3 tt_dev]$ git up\ngit: 'up' is not a git command. See 'git --help'.\nDid you mean one of these?\n        pull\n        push\n```\n. ",
    "gepoch": "@cppexpert I think you need to add your ruby gems bin directory to your PATH. \n$ export PATH=\"$PATH:~/.gem/ruby/1.8/bin\"\nPut that in your ~/.bashrc file if you don't want to run it on start.\n. Forgot to mention: I'm also seeing this issue with @jamespsterling's traceback  :smiley:\nReproduced with formatting here:\n/usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require': /var/lib/gems/1.8/gems/posix-spawn-0.3.9/lib/posix/spawn.rb:243: syntax error, unexpected tSYMBEG, expecting tAMPER (SyntaxError)\n          ::Kernel::exec(*argv, :close_others=>false)\n                                 ^\n/var/lib/gems/1.8/gems/posix-spawn-0.3.9/lib/posix/spawn.rb:274: syntax error, unexpected tIDENTIFIER, expecting tAMPER\n...(*system_command_prefixes, cmd, :out => w, r => :close)\n                              ^\n/var/lib/gems/1.8/gems/posix-spawn-0.3.9/lib/posix/spawn.rb:274: syntax error, unexpected tASSOC, expecting tCOLON2 or '[' or '.'\n...command_prefixes, cmd, :out => w, r => :close)\n                              ^\n/var/lib/gems/1.8/gems/posix-spawn-0.3.9/lib/posix/spawn.rb:274: syntax error, unexpected tASSOC, expecting '='\n...prefixes, cmd, :out => w, r => :close)\n                              ^\n/var/lib/gems/1.8/gems/posix-spawn-0.3.9/lib/posix/spawn.rb:526: syntax error, unexpected ',', expecting ']'\n        [*system_command_prefixes, args[0]]\n                                  ^\n/var/lib/gems/1.8/gems/posix-spawn-0.3.9/lib/posix/spawn.rb:526: syntax error, unexpected ']', expecting kEND\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `require'\n    from /var/lib/gems/1.8/gems/posix-spawn-0.3.9/lib/posix-spawn.rb:1\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require'\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `require'\n    from /var/lib/gems/1.8/gems/grit-2.5.0/lib/grit/git.rb:2\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require'\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `require'\n    from /var/lib/gems/1.8/gems/grit-2.5.0/lib/grit.rb:34\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require'\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `require'\n    from /var/lib/gems/1.8/gems/git-up-0.5.12/lib/git-up.rb:2\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `gem_original_require'\n    from /usr/lib/ruby/vendor_ruby/1.8/rubygems/custom_require.rb:36:in `require'\n    from /var/lib/gems/1.8/gems/git-up-0.5.12/bin/git-up:3\n    from /usr/local/bin/git-up:23:in `load'\n    from /usr/local/bin/git-up:23\n. @amedee yeah.. I'm not much of a ruby person, actually..\nI eventually ended up switching to the python port, which works perfectly for me.\n. ",
    "waldyrious": "This is a dupe of #79, and has been fixed with its merge. This PR can thus be closed on both counts.\n. ",
    "endSly": "Stacktrace:\n.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/lib/git-up.rb:95:in rebase_all_branches': undefined method+' for nil:NilClass (NoMethodError)\n    from /Users/endika/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/lib/git-up.rb:22:in block (3 levels) in run'\n    from /Users/endika/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/lib/git-up.rb:199:inreturning_to_current_branch'\n    from /Users/endika/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/lib/git-up.rb:21:in block (2 levels) in run'\n    from /Users/endika/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/lib/git-up.rb:183:inwith_stash'\n    from /Users/endika/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/lib/git-up.rb:20:in block in run'\n    from /Users/endika/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/grit-2.5.0/lib/grit/git.rb:90:inwith_timeout'\n    from /Users/endika/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/lib/git-up.rb:19:in run'\n    from /Users/endika/.rbenv/versions/2.1.2/lib/ruby/gems/2.1.0/gems/git-up-0.5.12/bin/git-up:5:in'\n    from /Users/endika/.rbenv/versions/2.1.2/bin/git-up:23:in load'\n    from /Users/endika/.rbenv/versions/2.1.2/bin/git-up:23:in'\n. ",
    "martinvd": "This is a duplicate of #79.\n. ",
    "lmmx": "Ah :confused: Ok, scratch that!\n. ",
    "rwygand": "I do a lot of jruby development, so this would be super useful. \n. ",
    "Zoe14": "Have to switch to jruby, I miss git up.\n. ",
    "nicosticht": "Yeah jruby support would be great :)\n. ",
    "alairock": ":+1: \n. ",
    "mvz": "Won't this access the remote repository for each branch unlike the current behavior?\n. @bedge doesn't look like it will. Replace rebase with pull will not affect the remote used.\n. For one, it would make it difficult for the user to rewrite their previously unpushed commits later on.\n. ",
    "eclubb": "I'm curious. How does the new push behavior in Git 2.0 make the smart pulling that git-up provides less relevant?\n. ",
    "vdemario": "Adding my two cents as a user.\nI've been a regular user of git up for months now, maybe more than a year. It has become one of those commands that get written by muscle memory, I don't even think about it anymore.\nFor me, those \"other benefits\" are actually the main reason I like to use it. I can understand that in the general case that is not particularly valuable. That said, it feels like the grand rewrite will probably never happen, which is not a problem, so I only ask the maintainers that those behaviors not be lost if an attempt to do the rewrite stumbles.\nIn summary, git up is fine as it is, please don't break it. I'm always afraid of the grand redesign in the sky. :P\n. ",
    "nlutsenko": "@aanand ping ping\nLet me know what you think about this. Would love to change it however you see fit.\n. This is actually the other way around :)\nIt allows to use git-up awesome rebase code to skip git fetch and simply rebase all local branches.\nThe workflow where it's helpful:\n- 5 branches tracking origin/master\n- git push 3 commits\n- git up --local\n- 4 branches get rebased automatically without fetching from remote\n. @aanand Ping :D\n. Yay! Will update, sure.\n. @aanand Just updated with reversed logic.\n. ",
    "nbrew": "Hi @maximveksler. I do not think your error is specific to git-up. You are seeing this issue because you are trying to install into a directory owned by a user other than yourself. (I believe /Library/Ruby/Gems/2.0.0 is installed by Apple as part of Mac OS X.)\nYou have two options:\na) Elevate your user permissions by using sudo when running the gem install command\nsudo gem install git-up\nb) Or, and this is my preferred route, install a ruby version manager, like rbenv, which can be installed using homebrew and build your own ruby and gems. This would permit you to install ruby and whatever gems you'd like without modifying the the ruby installed by Apple.\nThat said, the quick and dirty method using sudo will get git-up installed. If you are interested in exploring additional software for your machine, Homebrew is an easy way to install third-party applications and command line tools.\nAlso, this StackOverflow question may assist you.\n. ",
    "maximveksler": "I can confirm that using rbenv I was able to get git up running on my El Capitan system. I've documented the basic steps required to install rbenv here https://github.com/maximveksler/null/wiki/Mac-Hacker-Install-Guide#ruby and git up here https://github.com/maximveksler/null/wiki/Mac-Hacker-Install-Guide#git\nI wonder if a more streamlined solution would be possible to implement? perhaps based on brew install git-up.\nI shall close this issue for now.\n. Thank you.\nI believe it would also be valuable to explain how pull changed from merge to rebase ?\n. ok, well in that case your software right still be useful. in my use case git pull does rebase for me, compared to say 4 years ago when I was heavy user of git up that did pull, stash, rebase for me, which is why I needed this tool in the first place..\n. ",
    "nacho4d": "I varely use ruby. So i dont use rbenv or alikes. Git-up should work without showing any warning messages i think. I like the idea of having it in brew would be even better.\nbrew install  git-up\n. ",
    "zx8": ":+1:\n. ",
    "jlu5": "Unfortunately, git rev-parse --git-common-dir doesn't work at all on Debian Stable's older git (version 2.1.4). It just prints literally \"--git-common-dir\".\nglolol@millennium:~/test$ git rev-parse --git-common-dir\n--git-common-dir\nglolol@millennium:~/test$ git --version\ngit version 2.1.4\nLooking at the code, that should cause git-up to cd into \"--git-common-dir\", which would obviously break. I haven't tested this, however.\n. Any update on whether this will be merged?\n. Is this part correct for the pull request?\n. ",
    "matan129": "@GLolol OK, so obviously I have to add Git version detection first. Anything below 2.5 (including betas, RCs ...) will use the old method.\nI'll update the code later today or tomorrow.\n. ",
    "vsimonian": "+1\n. ",
    "ramonsnir": "+1\n. ",
    "d33tah": "Ah, sorry.\n. ",
    "williamn": "I just had this same problem. Here is how I reproduce this issue\n1. Create a directory\n2. Add a git remote origin\n3. git up\n4. Error\nHow I fix the issue\n1. git pull origin master\n2. git up\n3. No error appear\nIt seems that this was caused by git-up failed to read HEAD revision, as I got this when I run git log\nfatal: bad default revision 'HEAD'\n. ",
    "alvintownsend": "+1\ngit pull origin master corrected the issue for me as well.\n. ",
    "tehmaspc": "+1 on git up failing on empty git repo (w/ no branches). Should fail gracefully.\n. ",
    "omnidan": "@msiemens I don't think it's the issue you linked. It worked fine on 10.10 and broke after the upgrade to 10.11, this is the case because git-up is trying to install itself to /usr/bin/git-up and /usr/bin is protected on 10.11. I think installing it to /usr/local/bin should work fine (if you already have homebrew installed and working on 10.11, that is)\n. Here is the issue: https://stackoverflow.com/questions/31972968/cant-install-gems-on-macos-x-el-capitan - The solution is installing the gem to /usr/local/bin. I think this can be closed then.\n. ",
    "grepsedawk": "Was just about to make this issue.\n. ",
    "Imunhatep": "$ gem install bundler\n$ bundle install\nThat fixed the issue, but why it happened?\n. ",
    "sepehr": "I really miss this feature. A git up [remote-name] would be great. \n. ",
    "benbarbour": "I'm also finding git to be painfully slow on El Capitan. \n. ",
    "bitboxer": "@benbarbour look into the readme, Git 2.9 does already what this thing did. It is no longer needed.\n. ",
    "vyorkin": "Oops, It seems that its not related to git-up, sorry\n. ",
    "sevenbitsAnmol": "Please help. i am also stucked in same problem. ",
    "mauricioklein": "@aanand is there an option to use the git alias above to update all local branches with the remote?\nThis is, for me, the most useful feature in git-up, so, since the gem isn't going to be maintained anymore, I'm searching for a workaround...\nThanks in advance for the great job done so far!\n. I understand.\nAlright, thanks for the quick explanation.\nCheers o/\n. ",
    "despairblue": "The alias works for me only on master. If I'm on some other branch it starts to rebase from some other branch, e.g.:\nI'm on branch that is 1 day or 10 commits ahead of master.\nMaster has one new commit.\nThe branch's remote and my local copy are up to date.\nI issue git up\nGit fetches all branchen.\nGit starts to rebase my branch on top of some the branch that comes alphabetically first.\nIn my case it started rebasing on a stale branch called addresses from January.\nThe alias does not really to what it's supposed to \ud83d\ude15 \n. @aanand that does work! Thanks \ud83d\ude47 \n. ",
    "harlantwood": "Thanks @aanand for the great project when it was needed, and the alias updates now.\n. Nice!\n. ",
    "steven-lai": "I'm doing !git pull --rebase --autostash && git log --decorate @{1}..HEAD --pretty=format:'%C(yellow)%h %Cred[%an] %Creset%s' in the \"up\" alias to emulate the git-up.rebase.log-hook. Do you see any problems with doing it this way or know of a better approach?\nEDIT: Ah I just realized if I did \"up\" twice in a row, it would show me the same log twice instead of just once (the first time)\n. ",
    "Kikobeats": "but actually the git alias doesn't resolve the same problem, right?. ",
    "augbog": "Thanks for getting back to me and no worries! I just made the changes :) let me know if there's anything else I can do!. ",
    "MatthewBooth": "I agree with @ScreamingDev it definitely doesn't do the same thing. However, @aanand you needn't worry, as this has been working for me for years. It's the solution to keeping my repos up to date. . ",
    "milosm": "Until it's not merged yes (needed clear instructions for people that wanted to install in before), after the pull request will be merged then no it will not be needed anymore.\n. I'll update the pull request.\n. "
}