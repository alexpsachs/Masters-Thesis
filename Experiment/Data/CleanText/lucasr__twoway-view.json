{
    "lucasr": "Fixed in cd83c3b7b9f996d28dda7d6de2893311ab7ab806. Cheers!\n. Could you elaborate on how you managed to reproduce this issue? I couldn't trigger any long presses after finger moved over the dragging threshold.\n. FYI: most of the current logging is just temporary or will change drastically in the coming days. But, yes, I'll add a flag to enable/disable logging.\n. I wouldn't make trackMotionScroll() public as it's directly tied to the internal touch event machinery of TwoWayView. I guess a scrollBy(int offset) would do the trick for you? Or, I could add something like what AbsListView provides: smoothScrollBy(int distance, int duration, boolean linear)?\n. Thanks for the patch, Markus.\nTriggering TOUCH_SCROLL state on ACTION_DOWN is incorrect by definition. It should only be triggered when we know the user is dragging the list. e.g. an ACTION_DOWN might lead to a click event instead of dragging. IIUC, you achieve the same behavior by simply adding a touch listener to the TwoWayView (via setOnTouchListener). Am I missing something about your use case?\n. Sorry for the delay. I wanted to make sure the new scrollBy() method works fine with the state of touch mode and layout mode. Works fine after all.\n. You mean, supporting Android-PullToRefresh somehow? I haven't looked into that but this definitely won't be implemented in TwoWayView itself. I guess it won't be hard to implement support for pull-to-refresh in TwoWayView given how similar it is to ListView and GridView.\n. Known regression. Working on it :-)\n. I reverted the change that causes the regression for now btw (SHA: 06ec5af873bce04bd181c39e2b815b74a5acfb3c)\n. This has been fixed in SHA: e98078ae4d0af35e40d5d898014b0826b1435b9a.\n. Err, I actually meant SHA: 826a9e271d830186afc86080be4fa69d5a63c10b\n. @zaur Yep, wrapping views in a LinearLayout is a good workaround. Right now, TwoWayView forces children to fill width or height depending on the orientation. Maybe something like what is proposed in #11 could help you?\n. Closing this bug as a dup of #11. Feel free to re-open if you think it's a different issue.\n. Need to handle non-recyclable in other parts of the code too. Fix coming now.\n. @sgrekov Are you sure you're using the latest Android Support Library? You need release 11 at least.\n. @FilipeMLFreitas what exactly fixed your issue? Just wondering.\n. @kombucha Thanks for the report. I could not reproduce this locally using emulator running 4.2 with the changes you mentioned. Any more specific steps to reproduce?\n. @eveliotc about using checkstyle: sure, patches are welcome :-)\n. @felipeerias keyboard focus and navigation is already implemented. Give it a try and report bugs accordingly :-)\n. This is almost certainly not caused by TwoWayView itself. Your bitmap handling code is probably doing something wrong here. Does the equivalent code work in, say, a ListView?\n. @Jaap-van-Hengstum Yes, planning to implement it soon ;-)\n. Working on it now. Stay tuned.\n. Ok, landed support for smoothScrollBy() and smoothScrollToPosition() in the 0.1.x branch. I'll be uploading a new release soon.\n. Hmm, I've never seen this problem. Are you sure this is not an issue in your Loader code? A sample app with an easy way to reproduce this issue would be helpful here. \n. This is not a bug. TwoWayView matches the same behaviour than ListView i.e. it always snaps the children to parent's width when in vertical orientation, and parent's height when in horizontal orientation. You can simply wrap children with a layout (say, a FrameLayout) that allows you to size elements the way you want.\n. Yeah, internal spacing requires using padding in each item now. What do you propose instead? gravity support or something?\n. @frogermcs Nice catch. Patch looks good. Could you please change the commit message to follow a consistent format i.e. \"[library] Keep scroll position for notifyDataSetChanged in horizontal orientation\"\n. Dup of #47.\n. This was fixed in SHA: c20bd838ccc4280bc838140fe96f383e039269d8. Thanks.\n. @AlexNab No plans to allow scrolling on both directions, sorry. What kind of interaction are trying to implement?\n. This is used to provide a good default behaviour in the view i.e. show horizontal/vertical scrollbars by default if no attribute is explicit set. Using initializeScrollbars() causes issues on every new Android release though (see #70). I'll probably just change TwoWayView to be less opinionated about scrollbars.\n. This is something you have to implement in your own adapter.\n. I'm not planning to work on it any time soon. PRs are welcome though :-)\n. I've just fixed an issue in the scrollBy(int) method that was apply the delta in the wrong direction (see 2fd1ea785f95afe32133804b988e67d8db9f2da3). It should be working fine now. I've have also landed smoothScrollBy/smoothScrollToPosition() support in #20.\n. This has been fixed in SHA: 9f3e7d841b78c1d29b5e8dee43c213fd66da1d26\n. What exactly is not working on Gingerbread?\n. This is not possible given the recycling nature of TwoWayView (and ListView, GridView, etc.)\n. Even when the view is not scrolled at beginning of the list?\n. Dup of #47 \n. The official RecyclerView release does have support for clipToPadding. I'll ensure the new TwoWayView layouts support it in #93.\n. Closing. Works for me too.\n. This was fixed in 0.1.1.\n. Any specific steps to reproduce?\n. This is because the views get recycled which probably ends up resetting the text color. You should probably just use setItemChecked(int) and have child views that implement the Checkable interface.\n. Working on it.\n. @luciofm TwoWayView and RecyclerView+LinearLayoutManager are an almost exact overlap feature-wise. However, TwoWayView will soon become a little framework for creating custom layouts with view recycling\u2014which again turns out to overlap with the general intent of the new RecyclerView API :-)\nI'm considering rebuilding the new TwoWayView API as a layer on top of an abstract LayoutManager or something. Haven't decided yet.\n. @vishna Done, 0.1.1 uploaded to sonatype.\n. Not sure I follow. Are you saying that using a small margin doesn't work for some reason?\n. @JuhaniLehtimaeki Can't reproduce it locally. Still reproducible?\n. The children of TwoWayView are the 'visible' views. Just do getChildCount()/getChildAt(). smoothScrollTo() is coming soon.\n. Thanks for the patch! Had to rebase to push. \n. Can't reproduce it locally. Could you try to reproduce this with latest master?\n. @luciofm I've landed com important fixes around adapter changes and animations. Could you please try to reproduce this bug again with latest code? \n. These issues are probably fixed now. Filed separate tickets if you find new bugs. Cheers!\n. Thanks for the report, Eric! A stack trace would be helpful here. Can you reproduce this crasher by tweaking the sample app? This would make it easier for me to fix it.\n. Ah, got it. The 0dp exposed at least two bugs. Great, fixed. Cheers!\n. @Shusshu pushed a new snapshot with a proper 'recyclerview-v7:21.0.0-rc1' dependency. Let me know if you still have any issues.\n. Thanks for the report sanyynn. Two reasons why I haven't set a default:\n- I want TWView to be consistent with RecyclerView i.e. no default layout manager is set.\n- I don't want to directly couple TWView with the layouts package.\n. Nice catch, thanks!\n. @gabrielemariotti All built-in layouts share a common Lane-based logic to place its children. So the implementation here should, in theory, only access to the lanes and spans of the last items in the layout. What makes this computation a bit tricky is:\n1. The last items (position < itemCount - laneCount) may span multiple lanes which means some of the last items might not actually be at the very end of a lane.\n2. In order to compute whether or not an item is last in lane, we need access to the layout params (lane and span) for items ahead of the item being handled by the decoration and we don't have that here. The more complex layouts (staggered and spannable grids) dynamically place their child views according to the layout state at the time they are added. So going ahead of the position being decorated is not exactly trivial to implement without breaking certain invariants of the lane system.\nI'm considering using the same approach I used for laying out scrap views being animated (save lane state \u2192 compute layout \u2192 restore lane state). Let's see.\nOther ideas are very welcome :-)\n. @gabrielemariotti To be honest, I haven't put a lot of thought into BaseLayoutManager subclassing yet. For now, I'm just leaning towards hiding policies and implementation details as much as possible.\nWith that said, I'm curious about what kind of layout you're trying to implement based on BaseLayoutManager.\n. Gabriele, I don't see anything actionable in this ticket to keep it open. Closing it for now. Feel free to re-open or file another ticket for any specific feature requests you might have.\n. Thanks for the patch, Gabriele! Supporting different drawables for vertical and horizontal dividers makes sense to me. But let's just simply do this in DividerItemDecoration instead. No need to have separate class as long as we optimize for the most common case (same drawable for both vertical and horizontal dividers). So here's what I suggest:\nConstructors:\nDividerItemDecoration(Drawable divider) // sets both horizontal & vertical with the same drawable\nDividerItemDecoration(Drawable verticalDivider, horizontalDivider)\nAttributes:\napp:divider // sets both horizontal & vertical with the same drawable\napp:horizontalDivider\napp:verticalDivider\n. Wasn't sure if you were working on this on not. I just went and implemented my suggested plan.\n. @darrenhinderer This is awesome feedback, thanks!\n1. Do you mean you start/end spacing on all items independently of whether their at the start/end of the layout? e.g. top spacing on the first items on each column in a staggered grid. The idea behind SpacingItemDecoration is that it only applied spacing between items. I guess you don't want to use padding in the RecyclerView directly because the padding doesn't scroll with the content?\n2. Hmm, spacing logic belongs to the item decoration really. You might have to couple your adapter with a SpacingItemDecoration subclass that skips spacing depending on the type of view in that position.\n3. Do you have any suggestions in mind? I've kinda assumed you'll have logic to dynamically set spans in the adapter and child views.\n4. This is something I've investigated (spans with dynamic row/col sizes) some time ago. I haven't found an efficient way to do it without resorting to multi-pass traversals\u2014which could cause all sorts of performance issues for such a dynamic layout. It's a complex problem. Using a StaggeredGridLayoutManager ensuring the child view dimensions do not stagger sounds like a sane idea for now.\n. @darrenhinderer Yeah, I was planning to allow non-square aspect ratios in SpannableGridLayoutManager. Filed #92 to track this.\n. @darrenhinderer For 1, what we really need is clipToPadding support. Filed #93 to track this.\n. @darrenhinderer I think I filed separate bugs for all pending work suggested here. File separate tickets if you think there's something missing. Cheers!\n. @pakoito For your use case, what API would be feel more natural: an aspect ratio attribute or an exact dimension for the row/column, depending on the orientation?\n. Do you mean you'd prefer to have a setter method instead of an static XML attribute?\n. Thanks for the report. This depends #97. Not sure I'll be able to work on it for 1.0.\n. Updated the gradle instructions in the README file to include the @aar. @kartikey92 The gradle information for the stable was incorrect as well. You should use org.lucasr.twowayview:twowayview:0.1.1.\nClosing. Let me know if you have any other issues.\n. See #114\n. i.e. we'll probably have to prefix TwoWayView's custom attributes to avoid these conflicts.\n. After #114, horizontalDivider and verticalDivider attributes are now named twowayview_horizontalDivider and twowayview_verticalDivider respectively. It should fix any potential conflicts with other libraries. Closing.\n. This was fixed in 7e24609f58a38dc623c5acb8a797e2fc5e8847be.\n. Thanks for the PR! Nice catches. Please use consistent commit messages:\n[core] Fix potential null pointer in TwoWayLayoutManager\n[layouts] Fix potential null pointer in BaseLayoutManager\n. Looking good overall. Please squash changes into 2 commits and use the exact commit messages I suggested.\n. Looking great, just need to revert that change to getItemEntryForPosition().\n. Great, thanks!\n. Yep, I'm considering doing something like a pluggable drag-n-drop support in the same style than the current click and selection support implementations.\n. @Kuloud Depends on what you mean by \"header/footer\". Right now, you can easily mimic a header/footer in a StaggeredGridLayoutManager by using spans, for example. Same with SpannableGridLayoutManager. I might add column/row span to GridLayoutManager as well.\n. @eygraber go for it :-)\nOn Tue, 28 Oct 2014 11:55 eygraber notifications@github.com wrote:\n\n@lucasr https://github.com/lucasr Have you started implementing\ndrag-drop yet? I was going to port my AbsListView version to RecyclerView,\nbut I'd much rather use TwoWayView :-)\nI took a quick look, and the port wouldn't be that complicated\n(RecyclerView actually makes parts of it simpler). Would you mind if I took\na shot at it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lucasr/twoway-view/issues/110#issuecomment-60744216.\n. I still have some work to do around adapter changes, see #131.\n. Thanks for the PR. I don't think this is a good fit for the core library. It would be pretty simple to do this locally if you really need it in your project.\n. You're right. This is just a little hack to force child views to have different layout params. It's especially handy for development. In practice, apps should be defining spans and sizes in the layout files (and related styles) for each view type.\n. I'll update the sample to use item types, just so that TwoWayView users don't assume that setting LayoutParams in the adapter is the way to go. \n. @schwiz I meant the opposite ;-) View types is the right thing to do here. I've been been abusing the sample app for development purposes. I'll update it to use view types to avoid confusion.\n. With that said, there are valid situations to tweak LayoutParams in the adapter. For example, if you want to dynamically define the RecyclerView layout e.g. if spans are not necessarily associated with specific view types.\n. Before we ago ahead with prefixing attributes, could you please be more specific? What conflict does this PR fix?\n. Ok, let's added these prefixes to avoid such problems with random libraries. TwoWayView uses some fairly common attribute names (verticalDivider, numColumns, etc). This kind of error is likely to happen often, unfortunately.\n\nLet's use twowayview_ as the prefix though. And maybe we should use Android plugin's resourcePrefix support instead?\n. Hmm, I assumed the use of resourcePrefix would along auto-prefix all resources for us? Is it not the case?\n. @jacek-marchwicki Great, see you at MCE then ;-)\n. Needs rebase.\n. Sorry, can you please squash all commits in your branch? \n. Thanks!\n. Does the equivalent code work in, say, ListView? What exactly are you trying to accomplish?\n. Got it, cheers. Closing.\n. Could you explain exactly what's you're doing? You mean simply using setSelection() in a TwoWayView with an non-zero item margins cases items to overlap?\n. Fixed in the 0.1.x branch. Thanks.\n. RecyclerView has a different Adapter base class with new API. You can't really use the existing CursorAdapter directly. It shouldn't be hard to create one though. This is one the things I'm considering adding to TwoWayView's core library but I expect Google to release something official around this in L. Let's see.\n. @GolgothSchumi Which TwoWayView version are you using?\n. Which layoutmanager? What orientation?\n. When you say 'scrolls next/previous element', do you mean the element on the right/left of the element from which you triggered the popup?\n. Which LayoutManager are you using?\n. @yrizk Can't reproduce this with the sample app. Any chance you can share sample code to reproduce this crash? \n. @schwiz I suspect this is related to state restoration. Did you happen to add items to the adapter then restoring the app with different adapter contents?\n. TwoWayView doesn't support keyboard navigation yet. See #98, #99, #100, and #101. \n. Closing this as I've already filed tickets for keyboard nav for each layout manager. Thanks for the report.\n. Interesting. Let me try to reproduce this in the sample app. I'll get back to you.\n. Quick update: yeah, BaseLayoutManager is not refreshing its state when the view is resized. I have a fix, just testing it a bit more before landing. \n. New snapshot uploaded, cheers.\n. Cheers!\n. I've just enabled travis CI for twoway-view. This looks good but I guess you want to remove the redundant commit (#125) from this branch?\n. Cheers!\n. Cheers.\n. @pakoito Is this a dup of #92?\n. Dup of #92.\n. TwoWayView's core layout logic is based on the assumption that you either scroll horizontally or vertically. Implementing simultaneous horizontal & vertical panning is probably a topic for a separate library.\n. Yes, swipe-to-dismiss and drag-n-drop (#110) are in the plans. PRs are very welcome :-) \n. You should be using org.lucasr.twowayview.widget.TwoWayView if you're using the latest snapshot btw. As for this crash, it seems the layout manager is being set on your RecyclerView for some reason. Does it work with other values in twowayview_layoutManager? \n. Glad to hear that, thanks for the update.\n. FYI: I've fixed this specific crash in 7e24609f58a38dc623c5acb8a797e2fc5e8847be but I'm still seeing crashes for a different reason. Keeping this open for now.\n. Layout managers don't lay out its children globally (i.e. all at once) due to its view recycling nature. Based on the images, I can't see any fundamental barrier on implementing something like this. This layout is staggered both vertically and horizontally so the layout state will be non-trivial to implement but is doable.\nI don't have any plans to support such layout in TwoWayView so I'm closing this ticket for now.\n. Aren't you seeing any Gradle/Maven errors? \n. This is because the snapshot didn't have TwoWayView in the widget package yet. I've just uploaded a new snapshot now. Should fix this issue.\n. The TwoWayView class has been moved to the layouts library.\nOn Sun, 26 Oct 2014 11:28 Micha\u0142 \u0106wikli\u0144ski notifications@github.com\nwrote:\n\nhttps://oss.sonatype.org/content/repositories/snapshots/org/lucasr/twowayview/core/1.0.0-SNAPSHOT/core-1.0.0-20141026.083632-13.aar\nhas missing core class - TwoWayView - some majot change or mistake?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lucasr/twoway-view/issues/138.\n. To be clear: You should now use org.lucasr.twowayview.widget.TwoWayView\n. @ppamorim Maybe try 0.1.3 and see if it helps?\n. Uploaded a new release (0.1.4) with this fix now. It should be available in Maven Central within the next few hours. Let me know if it works for you.\n. @dommerq You mean scrolling down then back to the top? What layout manager are you using?\n. Do you mean you wanted something like the clipToPadding=\"false\" behaviour that you get from ListView? This will be covered in #93.\n. @dommerq Got it, I'll look into it Thanks for the report.\n. Are you using the latest code? I've recently changed a lot of layout code in master. I've just uploaded a new snapshot with these changes btw.\n. I assume you're defining the res-auto namespace in the layout resource?\n. @jemben08 You should be using twowayview_layoutManager and twowayview_numColumns instead.\n. @finneapps I can't reproduce this issue locally. The sample app uses the twowayview_layoutManager attribute and is working just fine for me. Maybe something broken in your dev setup?\n. Are you talking about the stable 0.1.3 release?\n. Thanks for the report! Before I start digging, any steps to reproduce?\n. Thanks for the report. Same here, any steps to reproduce? \n. @HoracioFilho Sou brasileiro sim \\o/ mas a comunicac\u00e3o em torno dos meus projetos deve ser feita em ingl\u00eas para que contribuidores estrangeiros possam colaborar tamb\u00e9m. Esse ticket, por exemplo, \u00e9 indecifr\u00e1vel para quem n\u00e3o fala portugu\u00eas.\n. This is likely happening because ListLayoutManager forces match_parent layout param to its children when in horizontal orientation. Let me fix this. \n. What layout manager are you using? Did you switch to another app or home screen before scrolling up? Just wondering if state restoration is involved here. Can you reproduce this in TwoWayView's sample app?\n. Thanks for the PR! Sorry for the delay, busy weeks and all. I'll review and merge today or tomorrow.\n. @0legg Unfortunately, this PR breaks scrollToPosition() in grid layout managers. Needs further investigation.\n. Thanks for the PR blazmag! Looks good. Before I merge, could you please update the commit message to be consistent with existing ones? In other words: [readme] Add note for ProGuard users\n. @blazmag Please squash all commits into a single one.\n. Cheers!\n. Hi all, a mix of changing jobs and holidays got in the way of my spare-time hacking lately. I'll resume development next week :-)\n. @paulsowden Yes, javadocs on how to write custom layout managers with TwoWayView would be awesome. I gave an overview of the API in my \"custom layouts\" talk (https://speakerdeck.com/lucasr/custom-layouts?slide=38). Maybe use it as inspiration?\n. \n",
    "greenrobot": "I have no trouble reproducing it by moving the finger slowly in one direction. Is ListView implementing the long press differently?\n. scrollBy sounds good because it gives total control over scrolling. I'm planning to do some infinite scrolling, so smoothScrollBy wouldn't do the trick. (Nevertheless, I'd guess smoothScrollBy would be nice to have too.)\n. Here's my trivial commit on scrollBy, plus a new proposed method getScrollState(), which makes my code easier and I can drop the scrolling listener completely.\nhttps://github.com/greenrobot/twoway-view/commit/981ac5c97efc96fea450ea8a1d1020e51325845b\nI would like to propose to trigger SCROLL_STATE_TOUCH_SCROLL on ACTION_DOWN to notify the listener also when the user just taps on the screen. For example, I want to stop my infinite scrolling as soon as the user starts interacting. This is the commit working for me, but there might be other consequences:\nhttps://github.com/greenrobot/twoway-view/commit/8573f80a739f17f34ad2eddaea5c2832c04d45be\n. Depends on the definition (click would cancel dragging), and yes, using a separate touch listener probably would do the trick for me.\n. Any update on this issue? I updated to the latest version; is 98f2a03ab17bbbdddffebed9f2d3334eba5e386c all it would take?\n. ",
    "tinspu": "How about having a Header/Footer View For now, Just like the default List view \nTwoWayView filterListView = (TwoWayView) findViewById(R.id.lvItems);\nfilterListView .addHeaderView(view);\n. OK, it's working now. my problem was the row item(i.e. the single item row inside the list) was set to android:layout_width=\"match_parent\"\nbut i still don't know why i got a different result on different platforms  \nto reproduce the problem try this one e.g. create a simple list :+1: \nin your  \n```\n        ////////////layout.xml ///////////\n    <org.lucasr.twowayview.TwoWayView \n     xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     android:id=\"@+id/lvItems\"\n     style=\"@style/TwoWayView\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:drawSelectorOnTop=\"false\"\n    />  \n       ////////////end layout.xml ///////////\n\n /////////////////// for the activity ///////////////////\n\nArrayList<String> items = new ArrayList<String>();\nitems.add(\"Item 1\");\nitems.add(\"Item 2\");\nitems.add(\"Item 3\");\nitems.add(\"Item 4\");\nitems.add(\"Item 5\");\nitems.add(\"Item 6\");\nitems.add(\"Item 7\");\nitems.add(\"Item 8\");\n\nArrayAdapter aItems = new ArrayAdapter(this,  android.R.layout.simple_list_item_1, items);, items);\n TwoWayView lvTest = (TwoWayView) findViewById(R.id.lvItems);\n lvTest.setAdapter(aItems);\n       ////////end activity code////////////\n\n```\nNow since the default\n       \"\"\"android.R.layout.simple_list_item_1\"\"\"  TextView item has this set (i.e. android:layout_width=\"match_parent\")\nyou will be able to see the problem\nThanks.\n. Can you Please confirm if you can reproduce the problem?\n. ",
    "zaur": "Fixed all the issues by wrapping the views with LinearLayout.\n. ",
    "marcboeker": "thanks\n. ",
    "eveliotc": "Rebased to latest master, so it is merge-able, for those looking to remove a ViewGroup in their hierarchy but still want to look like this:\n\n. Well it's nothing, indeed thanks for such an useful view :smile: \n\n\nWhat use cases do you have in mind for this feature? I mean, the screenshot you sent could be easily achieved with the use of top/bottom padding on the TwoWayView, no?\n\n\nMain idea behind doing this is to allow a per-item-LinearLayout-like gravity behavior while saving adding that nested ViewGroup per item, it also allows selector to be shown on the actual view only, not in entire item as it would with paddings, also with just paddings it would be tricky in example to have an squared item view.\n\n\nHow is the list selector supposed to be behave on each child gravity?\n\n\nAs mentioned above selector it shown on the actual view only e.g.\n\n\n\nHow is the click targets meant to behave when the user taps outside the boundaries of the child with a non-fill gravity?\n\n\nOutside boundaries are used for scroll only, hit rect is just the size of the actual item (see image above)\n\n\nMy initial impression is that a gravity property on the TwoWayView itself would probably make more sense. I mean, do you really want to allow each children to define its gravity?\n\n\nI thought about that, while it is likely that most of cases items will have the same gravity, this way allows to stick with a LinearLayout-like gravity behavior where each item can have different gravity.\n. No longer relevant given new RecyclerView focus\n. So without that break this happens http://telly.com/BASJ7P\n. Amended, would you consider using checkstyle?\n. @codebutler you wouldn't need to do so, SDK_INT and VERSION_CODES were introduced in Donut (API Level 4), if someone is targeting such old platforms I would say is, you know, their fault, and as per HONEYCOMB compiler will embed values in bytecode as always, it looks more or less like this:\n\nAlthough if you do static imports are always appreciated ;)\n. ",
    "sgrekov": "I used the one from your rep. Also tried to import manually from sdk folder( rev.12), same here(\nI am using Idea12 and imported project from pom.xml\n. ",
    "r4jiv007": "i am getting the same exception, any rescue step ??\n. ",
    "dandar3": "You're probably not exporting the Support Library jar?\nhttp://stackoverflow.com/questions/9831019/updated-sdk-version-getting-classnotfoundexception-android-support-v4-view-vie\n. You can't seem to be able to do it through android:scrollbars=\"none\", and the horizontal or vertical scrollbars are enabled by looking at the orientation - see the code in updateScrollbarsDirection() method.\nYou can disable them yourself through your code though:\nyourTwoWayView.setHorizontalScrollBarEnabled(false);\nhttp://developer.android.com/reference/android/widget/AdapterView.html\nhttp://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)\nhttp://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)\n. See sample, it's using padding:\nhttps://github.com/lucasr/twoway-view/tree/master/sample/src/main/res/layout\nYou might also want to add same amount of padding left and right to your TwoWayView itself, otherwise you'll have half the spacing on start/end - this is actually visible if you run the sample.\n. I agree in a way as I'm trying to use it myself for a horizontal scrolling list of images, with spacing and such. I don't know if @lucasr sees it that way though. I hit a similar thing myself and had to wrap my original item layout, which has its background, in an outer layout that defines the padding to space them out.\nI've been also trying jess-anders/two-way-gridview library, that one behaves more like a GridView.\n. In Eclipse you need to import \"library/src/main\" and add \"java\" as a source folder in the project properties > Java Build Path > Source > Add folder...\nOr easier, you can just import from my clone where I created some of the files required for Eclipse, so you can download it directly if you want.\nSee \nhttps://github.com/dandar3/twoway-view/tree/master/library/src/main\n. Any sample code?\n. ",
    "saikiran501": "Iam also getting the same exception which jar file should i import,I already imported library file but it's showing the same exception..\n. I imported the library everything is working fine,but when iam using set on item click listener why it's not working please tell me,Thanks in advance\n. ",
    "FilipeMLFreitas": "Nevermind, works fine! \nIf you want, you can integrate my code.\n. Not calling notifydatasetchanged on the adapter unnecessarily. Not sure why this worked, but it does.\n. ",
    "tomprt": "Hi , I've also encountered this issue and was able to reproduce somewhat consistently.\nRunning on emulator - Device: Galaxy Nexus Target: API15 CPU: Intel Atom , Using host gpu.\nSetup - Add button to MainActivity wiring it to call mListView.scrollBy(1000)  on click. \nSteps to reproduce:\n1. In horizontal orientation scroll to the end of the list (last item)\n2. Click the button fast\n3. Repeat\nThis is the relevant part of the trace:\n    TwoWayView.fillGap(boolean) line: 5374\n    TwoWayView.scrollListItemsBy(int) line: 3334\n    TwoWayView.scrollBy(int) line: 4008\nAs a fix I've added this at the top of fillGap:\n    if (childCount == 0)\n    return;\n. I've implemented a fix but it's not really tested, so let me know if there are issues.\nhttps://github.com/tomprt/twoway-view/commit/90417c4ea7f01f20a08483ecd62b3630e5863a5e\n. ",
    "ryanamaral": "Hey, this can be useful for someone, so here is the method I think you're looking for:\nbitmap.isRecycled()\nhttp://developer.android.com/reference/android/graphics/Bitmap.html#isRecycled()\n. ",
    "agarrigan": "+1. A very good implementation.\n. any word on this?\n. ",
    "hurelhuyag": "+1\n. ",
    "japostoles": "+1.\nWill try a stab at it myself as well.\n. ",
    "rohanpatel2602": "+1\n. There is a way that I devised, though it's a bit of a hack.\nsetSelection(position) allows you to scroll the view to a certain position but if you want it to animate the scroll, or set the x inbetween two positions, you should call setSelectionFromOffset(position, offset).\nI used that with a ValueAnimator to achieve an animated scroll!\n. @jguilhermeam So for example, one can achieve a 100px animated scroll by doing something like this:\nValueAnimator anim = ValueAnimator.ofInt(100, 0);\n    anim.addUpdateListener(new AnimatorUpdateListener() {\n      public void onAnimationUpdate(ValueAnimator animation) {\n           int value = (Integer) animation.getAnimatedValue();\n           gridView.setSelection(position, value);\n      }\n    });\n anim.start();\nSince we are using setSelection the offscreen views should be drawn. This is by no means the best way to do it, but it does work. \n. Not seeing any issues on 4.4.2 or 4.4.3 myself\n. ",
    "jmaffre": "any update on this one ?\n. works great :+1: \nno more \"jump\"\n. ",
    "sr01": "+1\n. ",
    "ademar111190": "+1\n. A branch with smooth scroll implemented https://github.com/everton-rosario/twoway-view\n. ",
    "DevCCC": "Hey! @ademar111190  its not working properly.\nlist scrolling continuously until reach at first position.\nHave you salved it. \n. ",
    "cycha": "Really need this feature badly. Is there any planification on that ?\n. ",
    "sxua": "Awesome news! :shipit: \n. ",
    "TomIsYourName": "Is there anyone has the same issue?\n. Thanks and sorry for reply late.But i noticed that the lastet modify was 14\ndays ago.So where can i get the fied code?\nOn Sun, Jun 9, 2013 at 10:37 PM, tomprt notifications@github.com wrote:\n\nI've implemented a fix but it's not really tested, so let me know if there\nare issues.\ntomprt@90417c4https://github.com/tomprt/twoway-view/commit/90417c4ea7f01f20a08483ecd62b3630e5863a5e\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/lucasr/twoway-view/issues/22#issuecomment-19167087\n.\n\n\nRather than love,than money ,than faith, than fame ,than fairness give me\nthe truth.\n. Sorry,wrong word.\n:3\n//Thanks and sorry for reply late.But i noticed that the lastet modify was\n14 days ago.So where can i get the fied code?\nThanks and sorry for reply late.But i noticed that the lastet modify was 14\ndays ago.So where can i get the fixed code?\nOn Thu, Jun 13, 2013 at 12:22 PM, Zain Zhu tomisyourname@gmail.com wrote:\n\nThanks and sorry for reply late.But i noticed that the lastet modify was\n14 days ago.So where can i get the fied code?\nOn Sun, Jun 9, 2013 at 10:37 PM, tomprt notifications@github.com wrote:\n\nI've implemented a fix but it's not really tested, so let me know if\nthere are issues.\ntomprt@90417c4https://github.com/tomprt/twoway-view/commit/90417c4ea7f01f20a08483ecd62b3630e5863a5e\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/lucasr/twoway-view/issues/22#issuecomment-19167087\n.\n\n\nRather than love,than money ,than faith, than fame ,than fairness give me\nthe truth.\n\n\nRather than love,than money ,than faith, than fame ,than fairness give me\nthe truth.\n. ",
    "michaelgz": "Downloaded and tried on 11/21/13, had the same problem.\n. Same question, especially for horizontal scrolling.\n. Same problem, though specify maxHeight can set a limit.\n. ",
    "codebutler": "Actually I think this needs to be wrapped in a static lazy-loaded class http://android-developers.blogspot.com/2010/07/how-to-have-your-cupcake-and-eat-it-too.html\n. @eveliotc you're right, sorry about the confusion. \n@lucasr This should be good to go.\n. ping.\n. ",
    "efung": "+1 for getting this PR merged! Resolves my runtime crash in Gingerbread.\n. ",
    "luserdroid": "Do we have here a solution ?\n. Hi, \nmy quickfix see below. Not perfect, but works ! I tested currently only on Galaxy S2 2.3.3, which works and also on > 4.0. Otherwise you have to play with an offset for delta.\nif (Build.VERSION.SDK_INT > Build.VERSION_CODES.HONEYCOMB) {\n            if (Math.abs(delta) <= mTouchSlop && !isOverScroll) {\n                return false;\n            }\n        }\n. ",
    "RKuanysh": "I had the same issue with two horizontal twoway-views laid vertically. Wrapped the whole thing around with ScrollView with height wrap_content and it worked\n. ",
    "mitchross": "I am having the same problem. Any suggested work arounds?\n. ",
    "insomnaicJustin": "Had the same problem. I don't know if it is meant to be, or just bug, but try to make \n android:layout_width=\"wrap_content\"  for TwoWayView\n. ",
    "multiholle": "This works as a workaround. In my case I defined a background color which\noverlaps the item if a padding is defined. A support by the TWV would be\nthe better solution.\nAm 28.11.2013 02:37 schrieb \"dandar3\" notifications@github.com:\n\nSee sample, it's using padding:\nhttps://github.com/lucasr/twoway-view/tree/master/sample/src/main/res/layout\nYou might also want to add same amount of padding left and right to your\nTwoWayView itself, otherwise you'll have half the spacing on start/end -\nthis is actually visible if you run the sample.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/lucasr/twoway-view/issues/30#issuecomment-29433743\n.\n. \n",
    "hearbeathorror": "hi, i tried adding padding to my views, but unfortunately that prevents a square from looking like a square. is there any other way this can be done ?? i need to add spacing, else it will come out as bug in my application. Also is there a way to know that the end has come? i am trying to scroll the view with the help of buttons.\nPlease help..\nThanks\n. ",
    "frogermcs": "Done :)\n. ",
    "silentnuke-old": "I use twoway-view in my app.\ncan't reproduce problem , tested on android 4.4 on Nexus 10 and Nexus 4.\n. ",
    "samwilliamh": "Fix:\nIn TwoWayView.java:\nChange line 5727 from\njava\nthis.width = MATCH_PARENT;\nto\njava\nthis.width = WRAP_CONTENT;\nThe log message just above this suggests that it should be set to WRAP_CONTENT anyway. I'm not sure if there are any problems pre-KitKat.\n. ",
    "lean19881988": "I use TwoWayview to display list of image. why all of items gone when I scroll the list from bottom to top?\n. ",
    "pixnbit": "Looking for this feature too\n. @virusman  My version of the two-way view is way back, before the new Android RecyclerView. I did some hack to this, I check if it's the first and last cell, and pad blank space on the left/right or top bottom for them.\nlucasr rewrote the two-way view with recyclerview. I haven't got time lookinto this. But I feel you can have your own implementation of the recyclerview and customize it.\n. Sorry, most of hacks I did were messed with other stuff. \nBut basic idea is simple: embed your existing view inside a framelayout or relative layout, and when it's the first or last cell, set blank transparent view as the padding with specified size, also check for the gravity. I hope you can figure out \n. ",
    "72lions": "@lucasr this is a nice feature and that the normal list view has. Do you mind having a look at it?\n. ",
    "tomhughesnice": "I have tried your pull request and it does work. But it leaves an empty space where the scrollbar was, so I suggest trimming this.\n. ",
    "AntonyGolovin": "This problem can be solved by this example, but it's worse. \n``` java\ntwoWayView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n        private TextView mLastClickedTextView;\n\n        @Override\n        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n\n            if(mLastClickedTextView != null) {\n                mLastClickedTextView.setBackgroundResource(R.drawable.section_background);\n            }\n\n            TextView textView = (TextView) view.findViewById(R.id.text_section_name);\n            textView.setBackgroundResource(android.R.color.transparent);\n\n            mLastClickedTextView = textView;\n        }\n    });\n\n```\n. ",
    "blundell": ":+1: \n. ",
    "AlexNab": "Any feedback?\n. Hi Lucas,\nI wanted to have a view with scrolling and views reusing in both directions at the same time. \nSomething like a grid. \nFinally I've created my own view group implementation with all that features. So we can close the issue. Thanks.\n. ",
    "rharter": "If I'm understanding your question correctly, this is an issue with the Android ListView class that this library is based on, not the library itself.  A ListView doesn't track scrollX and scrollY since that would involve measuring every child, which AdapterViews are designed not to do.  That's why the AbsListView.OnScrollListener looks so much different by not including an actual scroll position.\nInstead, ListView scrolling is tracked based on the first visible child, mixed with the number of visible children and the size of the children and the view.  You'll notice if you scroll through a list of items of different sizes that the scrollbar size changes as you scroll, that's because the total size that's used to determine the scroll bar size is simply an estimate based on these numbers using something like: height / child count * adapter.getCount().\nYou should do the same for your seekbar, knowing that the size and position are really just approximate.\n. ",
    "abhilash-alex": "I've got the same issue, setting android:listSelector in the layout doesn't seem to help. I've also tried setBackground(Drawable background). Can anyone help with this?\n. ",
    "ogrenichv": "You can hide them from code\n. ",
    "miguelpragosa": "Duplicated issue: #24.\nI already fixed this bug. Please check pull request #38.\n. ",
    "pirdaddigiflare": "Me Too!\n. ",
    "ddcovery": "Me Too\n. ",
    "felipe-silvestre-morais": "Me too\n. ",
    "horaciojcfilho": "Eu tamb\u00e9m :D\n. @DavidBcn @pirdaddigiflare @ddcovery @felipe-silvestre-movile @HoracioFilho @lucasr I've worked on it and with God's blessings we have a result. Please check this class, it implements divider and divider height with the same API used by native android.widget.ListView class, and recently, header views support was added. Footer views support follows the same logic but with some adjustments and will come soon.\nThanks a lot @jacek-marchwicki, based on your answer, I analyzed how android.widget.ListView class internally implements this feature and with God's blessings this is working fine.\nSorry for the code have been written in C#, I'm a Xamarin.Android lover. \n. +1\n. Eu amaria demais ver isso :D\n. @eygraber I've tested your implementation of reordering and it works very well, congratulations, but what do you think about implement the rearranging of the ListView cells on drag/drop events such as we can see in ListViewAnimations -> Item manipulation and in DevBytes - ListView Cell Dragging and Rearranging. Thanks in advance :smile:\n. @eygraber Hello, thanks for the comment, I need to research more, and I'll return with the results, but beforehand, I think it can be done by joining RecyclerView.ItemDecoration + RecyclerView.ItemAnimator + ViewCompat.animate method. Please, look at this commit https://github.com/gabrielemariotti/RecyclerViewItemAnimators/commit/da7abb5e8cef9c1261255200ff2bb11e1628938a, Gabriele Mariotti have worked in a \"Swipe To Dismiss\" pattern implementation  compatible with RecyclerView and he have used similar to that described above.\n. Obrigado pela resposta :smile: Se eu conseguir prosseguir eu te retorno com os resultados.\n. @ppamorim O @lucasr \u00e9 brasileiro :smile:\n. Oi @lucasr desculpas, eu vou excluir esse aqui e criar um novo em ingl\u00eas :smile:, valeu pela aten\u00e7\u00e3o.\n. It would be very nice :smile:\n. @ppamorim This problem is known on StackOverflow, and it is related with RecyclerView and not with TwoWayView as a whole. Please, look at these links http://stackoverflow.com/questions/25178329/recyclerview-and-swiperefreshlayout, http://stackoverflow.com/questions/26698952/swiperefreshlayout-is-hidden-on-empty-recyclerview, http://stackoverflow.com/questions/26493213/android-swiperefreshlayout-no-animation-on-fragment-creation/26692841#26692841, http://stackoverflow.com/questions/24859266/android-sticky-header-recyclerview-section-header-recyclerview (it a little less), http://stackoverflow.com/questions/25985528/recyclerview-pull-up-to-refresh (it a little less too), they may be helpful :smile:\n. @ppamorim If you wish an implemented version of the \"Pull-To-Refresh\" pattern compatible with RecyclerView, there is one library available here https://github.com/dkmeteor/Android-PullToRefresh-RecyclerView-Extention, and you can quickly test its running/behavior through here https://github.com/dkmeteor/RecyclerViewAnimator. I've tested on my Jellybean-phone and it works very well :smile:\n.  There are some workarounds for it in the links. :smile:\n. Please provide a piece of the code used in your RecyclerView.Adapter for analysis. Have you tested Universal-Image-Loader directly with RecyclerView 21.0.1?\n. @ppamorim Thanks for enter your code, I'm analysing it :+1: \n. @ppamorim Have you enabled caching in Universal Image Loader? It is not enabled by default according the documentation, if caching is disabled, when the images reach the memory cache threshold that is relatively small, new threads will be spawned generating new workloads and flickering in RecyclerView at each time that bindViewHolder is hit.\nPlease, look at this https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Useful-Info for how enable caching using Universal Image Loader.\nIf it doesn't yet work well, I will need to create a small sample for analyse \"Thread Windows\" in Eclipse, looking for the Thread generating frequency.\n. @ppamorim If it doesn't yet work again, we'll have to pause the loading of images when scrolling the RecyclerView and an its items come out of the screen. When the item come back to the screen, we resuming the loading.\n. I will love it :smile:. Please, could you send me the apk via email? My email is hjcf@cin.ufpe.br.\n. ",
    "jacek-marchwicki": "@DavidBcn @pirdaddigiflare  @ddcovery @felipe-silvestre-movile @HoracioFilho \nYou can always add footer and header via different types of items getItemViewType(int position) Actually this is more universal solution. ListView internally implement in that way\n. its very simple with recycleradapter\njust create:\n``` java\npublic class AbstractAdapterItem {\n}\npublic class YourAdapterItem extends AbstractAdapterItem {\n}\npublic class HeaderAdapterItem extends AbstractAdapterItem {\n}\npublic class RecylerAdapter {\n  List items;\npublic abstract BaseViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n   if (viewType == 0) {\n      // create header adapter view holder\n   } else {\n   }\n}\n\n@Override\npublic int getItemViewType(int position) {\n    if (items.get(position) instanceOf HeaderAdapterItem) {\n       return 0;\n    } else {\n       return 1;\n    }\n}\n\npublic void swapData(List<AbstractAdapterItem> items) {\n    this.items = items;\n    notifyChange();\n}\n\n}\n```\nand in your fragment:\n``` java\n   new ArrayList allItems = new ArrayList<>();\n   allItems.add(new HeaderAdapterItem());\n   allItems.addAll(youItems);\n   adapter.swapData(allItems);\n```\n. I think this is not supported natively with recycler view. But you can always add one empty cell at the beginning and one at the end of the list (staggered item or grid)\n. I'm talking about this issue:\n```\nFAILURE: Build failed with an exception.\n\nWhat went wrong:\nExecution failed for task ':sample:processDebugResources'.\ncom.android.ide.common.internal.LoggedErrorException: Failed to run command:\n    /Applications/AndroidSdk/build-tools/20.0.0/aapt package -f --no-crunch -I /Applications/AndroidSdk/platforms/android-20/android.jar -M \nAndroidTwoWayView/sample/build/intermediates/manifests/full/debug/AndroidManifest.xml -S /\n\n\n\nAndroidTwoWayView/sample/build/intermediates/res/debug -A \nAndroidTwoWayView/sample/build/intermediates/assets/debug -m -J \nAndroidTwoWayView/sample/build/generated/source/r/debug -F \nAndroidTwoWayView/sample/build/intermediates/res/resources-debug.ap_ --debug-mode --custom-package org.lucasr.twowayview.sample -0 apk --output-text-symbols \nAndroidTwoWayView/sample/build/intermediates/symbols/debug\n  Error Code:\n    1\n  Output:\nAndroidTwoWayView/sample/build/intermediates/res/debug/values/values.xml:110: error: Attribute \"numColumns\" has already been defined\n```\ni.e. You can easily reproduce this issue with those changes:\n``` diff\ndiff --git a/sample/build.gradle b/sample/build.gradle\nindex 30855ba..f5f982b 100644\n--- a/sample/build.gradle\n+++ b/sample/build.gradle\n@@ -2,6 +2,7 @@ apply plugin: 'com.android.application'\nrepositories {\n     mavenCentral()\n+    maven { url 'https://commondatastorage.googleapis.com/maven-repository/' }\n }\nandroid {\n@@ -20,4 +21,5 @@ dependencies {\n     compile project(':core')\n     compile project(':layouts')\n     compile 'com.android.support:appcompat-v7:20.+'\n+    compile(\"com.appunite:listviewbackport:1.5-12947.1\");\n }\n```\nAfter using prefix this should not happen with any lib. (I know this is not a pretty solution but it works ;) )\n. @lucasr what do you think about that?\n. btw... see you at MCE 2015 in Poland ;)\n. resourcePrefix only throws an errors to the lint, when there is no prefix in xml's\n. @lucasr fixed ;)\n. new pull request is here: https://github.com/lucasr/twoway-view/pull/128\n. Should be fixed in a622198f6acbe8caf699c4c21f3793ef2329ad79\n. @pakoito \nIf you would like to test something you can use my private temporary repo, but do not use this in production.\ngroovy\nrepositories {\n    mavenCentral()\n    maven { url 'https://commondatastorage.googleapis.com/maven-repository/' }\n}\ndependencies {\n    compile 'com.appunite.twowayview:core:1.2.0'\n    compile 'com.appunite.twowayview:layouts:1.2.0'\n}\n. Changed in separate branch: https://github.com/lucasr/twoway-view/pull/127\n. also:\njava.lang.IndexOutOfBoundsException: Inconsistency detected. Invalid item position 57(offset:57).state:95\n            at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:3300)\n            at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:3258)\n            at org.lucasr.twowayview.TwoWayLayoutManager.makeAndAddView(TwoWayLayoutManager.java:469)\n            at org.lucasr.twowayview.TwoWayLayoutManager.fillAfter(TwoWayLayoutManager.java:269)\n            at org.lucasr.twowayview.TwoWayLayoutManager.fillGap(TwoWayLayoutManager.java:237)\n            at org.lucasr.twowayview.TwoWayLayoutManager.scrollBy(TwoWayLayoutManager.java:226)\n            at org.lucasr.twowayview.TwoWayLayoutManager.scrollVerticallyBy(TwoWayLayoutManager.java:783)\n            at android.support.v7.widget.RecyclerView$ViewFlinger.run(RecyclerView.java:2715)\n            at android.view.Choreographer$CallbackRecord.run(Choreographer.java:761)\n            at android.view.Choreographer.doCallbacks(Choreographer.java:574)\n            at android.view.Choreographer.doFrame(Choreographer.java:543)\n            at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:747)\n            at android.os.Handler.handleCallback(Handler.java:733)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:136)\n            at android.app.ActivityThread.main(ActivityThread.java:5001)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:515)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\n            at dalvik.system.NativeStart.main(Native Method)\n. For the first one I found simple solution:\n``` diff\ndiff --git a/core/src/main/java/org/lucasr/twowayview/TwoWayLayoutManager.java b/core/src/main/java/org/lucasr/twowa\nindex 543574c..81e5aea 100644\n--- a/core/src/main/java/org/lucasr/twowayview/TwoWayLayoutManager.java\n+++ b/core/src/main/java/org/lucasr/twowayview/TwoWayLayoutManager.java\n@@ -275,6 +275,9 @@ public abstract class TwoWayLayoutManager extends LayoutManager {\n         if (state.getItemCount() == 0) {\n             return;\n         }\n+        if (position >= state.getItemCount()) {\n+            return;\n+        }\n     makeAndAddView(position, Direction.END, recycler);\n\n```\nbut I'm not sure if it is correct, @lucasr what do you think about this?\n. For the second I think this might be corelated with: https://code.google.com/p/android/issues/detail?id=77846\n. @lucasr nope, this is crash from previous version. Its from our production app. After I'll merge master changes to app I will say something more.\n. ",
    "dabitdev": "Yes you are right but if the ListView provides this API you should expose the same. I don't like to put the footer or header inside the adapter as a new type if they don't belong to the models.\n. ",
    "bemusementpark": "@horaciojcfilho your link is broken. Has anyone implemented this cleanly?\n. merge this please.\n. either in your adapter when you getView the last view, or in your RecyclerView when you've scrolled to/near the bottom.\n. ",
    "KoMinkyu": "I think this is adapter level issue..\n. You have to implement footer type viewholder your self.\nI got a help from HeaderFooterRecyclerViewAdapter.\n. Try adding an item decoration at the bottom.\nimplement decoration.\n``` java\nclass BottomSpaceDecoration extends ItemDecoration {\n    private final LayoutManager mLayoutManager;\n    private final int mHeightSize;\npublic BottomSpaceDecoration(LayoutManager layoutManager, int heightSize) {\n    mLayoutManager = layoutManager;\n    mHeightSize = heightSize;\n}\n\n@Override\npublic void getItemOffsets(Rect outRect, View view, RecyclerView recyclerView, RecyclerView.State state) {\n    super.getItemOffsets(outRect, view, recyclerView, state);\n\n    int itemPosition = recyclerView.getChildAdapterPosition(view);\n\n    if (itemPosition == mLayoutManager.getItemCount() - 1) {\n        outRect.bottom = mHeightSize;\n    }\n}\n\n}\n```\nand apply decoration like this.\njava\nint heightSize = mContext.getResources().getDimension(R.dimen.bottom_padding_size);\nmTwoWayView.addItemDecoration(new BottomSpaceDecoration(mTwoWayView.getLayoutManager(), heightSize));\n. Can you attach some screenshots?\n. First of all, what version of TwoWayView are you using?\nI think TwoWayView doesn't support ListView concept anymore.\nYou'd be better to use latest version of TwoWayView.\nAnd with image problem, you should suspect your 'Image Loader' library.\n. I implemented like this.\njava\nif (twoWayView.getLastVisiblePosition() < twoWayView.getAdapter().getItemCount() - 1) {\n    // load next page\n}\n. @summers314 that solution makes performance issue.\nWe have to avoid calling notifyDataSetChanged() with RecyclerView, specially in onScrolled().\nBut making loading state can help us to create more clear HTTP requests when scrolling.\n. Check out my simple implementation with Naver PullToRefresh Library.\n. ",
    "macduy": "Thanks Luca!\n. ",
    "arashsammak": "well, how?!! how to implement this in adapter?!\n. in found solution \nmRecyclerView.setOnScrollListener(new RecyclerView.OnScrollListener() {\n            @Override\n            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n```\n            visibleItemCount = mRecyclerView.getChildCount();\n            totalItemCount = adapter.getItemCount();\n            pastVisiblesItems = mRecyclerView.getFirstVisiblePosition();\n            adapter.notifyDataSetChanged();\n        if (loading) {\n            if ((visibleItemCount + pastVisiblesItems) >= totalItemCount) {\n                loading = false;\n                Log.v(\"...\", \"Last Item Wow !\");\n\n             // REQUEST LOAD MORE\n\n                adapter.notifyDataSetChanged();\n            }\n        }\n    }\n});\n\n```\n. ",
    "summers314": "@arashsammak  I was gonna implement the above method. Are there any updates to it, or does it work fine? \n. Hey. Was this fixed?\n. Hey. You can do this.. Refer my SO answer: \nhttp://stackoverflow.com/questions/39195008/spannable-recyclerview-like-snapchat-discover\n. This helped me too! Thanks @ishratkhan \n. @KoMinkyu  Another solution is mentioned here. Which one is better?\nhttps://github.com/lucasr/twoway-view/issues/49\n. Did you solve this?\n. Solved. \nThis was crashy:\nmItems.remove(position);\n                                                    notifyItemRemoved(position);\n                                                    notifyItemRangeChanged(position, mItems.size());\nChange that to this:\nmItems.remove(position);\n                                                    //notifyItemRemoved(position);\n                                                    //notifyItemRangeChanged(position, mItems.size());\n                                                    notifyDataSetChanged();\n. https://github.com/bumptech/glide/issues/1449\n. ",
    "Wolke": "thanks a lot !!\n. ",
    "ghost": "hi @rohanpatel2602 , how did you do that? can you post your code? I'm trying to animate with ObjectAnimator, but after I change the scroll X property, the offscreen views do not get drawn, just like @colinmadere \n. thanks @rohanpatel2602 !!! the result was really good!\n. ",
    "alliecurry": "Not sure if this is your issue, @colinmadere I got scrollBy(int delta) to work by using negative numbers. When you scroll via drag normally, this method (well, actually the method it wraps, scrollListItemsBy(int incrementalDelta)) gets called with values less than or equal to zero.\n. ",
    "Ekt0s": "There was a conflit with the touch event, I've correct it by filtering swipe event. \nThanks for the answer anyway :)\n. ",
    "virusman": "Hello @laoyang, have you solved this? I'm facing the same problem right now.\n. I'm also using the old version before RecyclerView due to license limitations of Developer Preview libraries. Could you upload your version as a fork? That would help a lot.\n. ",
    "fluffy88": "I'd have to disagree with this issue.\nI am using TwoWay View in my own app which runs perfectly fine on Android 4.4.2 using my own Nexus 4 and I haven't received any feedback from users saying it doesn't work on their device.\n. ",
    "alopix": "No problems on 4.4.2 (cyanogenmod) either.\n. ",
    "patrick91": "Works for me on 4.4.3\n. ",
    "esteluk": "There was some other discussion at #20 \n. ",
    "HappyDr0id": "Same problem for me on a Nexus 4 using Android 4.4.4, but you can also use these methods : setHorizontalScrollBarEnabled(boolean horizontalScrollBarEnabled) or setVerticalScrollBarEnabled(boolean verticalScrollBarEnabled) and it will work.\n. ",
    "abdullahumer": "No. It was random. I was using it for horizontal only. Couldn't find out the exact reason.\nbtw I ended up removing it and using a viewpager instead.\n. ",
    "luciofm": "Lucas, do you will still maintain the lib, or will deprecate it in favor of\nRecyclerView + LinearLayoutManager from the latest support lib (20-preview)?\nL\u00facio Maciel\nluciofm@gmail.com\nOn Tue, Jul 1, 2014 at 11:04 AM, Lucas Rocha notifications@github.com\nwrote:\n\nWorking on it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lucasr/twoway-view/issues/70#issuecomment-47659713.\n. @lucasr awesome, anything that makes it easier to create complex layouts with Recycling support is really awesome...\n. @lucasr will try this weekend again.....\n. @lucasr not the same issue (can't verify the first one), but adding an item to a position that is not on the screen throws an NPE\n\nex: Adding an item to position 3, but I'm not showing position 3 (first visible item is 8 for example).\nnew Handler().postDelayed(new Runnable() {\n        @Override\n        public void run() {\n            urls.add(3, \"http://data2.whicdn.com/images/111530251/large.jpg\");\n            adapter.notifyItemInserted(3);\n        }\n    }, 3000);\n\nE  FATAL EXCEPTION: main\nE  Process: org.lucasr.twowayview.sample, PID: 3317\nE  java.lang.NullPointerException\nE      at org.lucasr.twowayview.TWAbsLayoutManager.getDecoratedTop(TWAbsLayoutManager.java:523)\nE      at org.lucasr.twowayview.TWAbsLayoutManager.getChildStart(TWAbsLayoutManager.java:110)\nE      at org.lucasr.twowayview.TWAbsLayoutManager.handleAdapterChange(TWAbsLayoutManager.java:475)\nE      at org.lucasr.twowayview.TWAbsLayoutManager.onItemsAdded(TWAbsLayoutManager.java:589)\nE      at org.lucasr.twowayview.widget.TWBaseLayoutManager.onItemsAdded(TWBaseLayoutManager.java:263)\nE      at android.support.v7.widget.RecyclerView.dispatchLayoutUpdates(RecyclerView.java:1726)\nE      at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:1456)\nE      at android.support.v7.widget.RecyclerView.onLayout(RecyclerView.java:1600)\nE      at android.view.View.layout(View.java:14817)\nE      at android.view.ViewGroup.layout(ViewGroup.java:4631)\nE      at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\nE      at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\nE      at android.view.View.layout(View.java:14817)\nE      at android.view.ViewGroup.layout(ViewGroup.java:4631)\nE      at com.android.internal.widget.ActionBarOverlayLayout.onLayout(ActionBarOverlayLayout.java:374)\nE      at android.view.View.layout(View.java:14817)\nE      at android.view.ViewGroup.layout(ViewGroup.java:4631)\nE      at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\nE      at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\nE      at android.view.View.layout(View.java:14817)\nE      at android.view.ViewGroup.layout(ViewGroup.java:4631)\nE      at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:1987)\nE      at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1744)\nE      at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1000)\nE      at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5670)\nE      at android.view.Choreographer$CallbackRecord.run(Choreographer.java:761)\nE      at android.view.Choreographer.doCallbacks(Choreographer.java:574)\nE      at android.view.Choreographer.doFrame(Choreographer.java:544)\nE      at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:747)\nE      at android.os.Handler.handleCallback(Handler.java:733)\nE      at android.os.Handler.dispatchMessage(Handler.java:95)\nE      at android.os.Looper.loop(Looper.java:136)\nE      at android.app.ActivityThread.main(ActivityThread.java:5017)\nE      at java.lang.reflect.Method.invokeNative(Native Method)\nE      at java.lang.reflect.Method.invoke(Method.java:515)\nE      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)\nE      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)\nE      at dalvik.system.NativeStart.main(Native Method)\nI  Sending signal. PID: 3317 SIG: 9\n. ",
    "vishna": "@lucasr are you planning to push a snapshot to sonatype soon?\n. ",
    "shivarajp": "yes using small margin doesn't work. I jus want no space between images.\n. ",
    "JuhaniLehtimaeki": "Lucas, I took the source and bundled it into our app and the problem didn't happen anymore. I'm not sure what's up but I wasn't able to debug it with the source properly. \nI guess this could just be closed. It's some strange situation where this was happening but as I can't track it I think we can't really do much.\n. ",
    "llma": "I can get it to crash every time with the stack trace shown in the Calligraphy issue referenced above.  I am including Calligraphy which depends on sdk version 21.  TwoWayView.java fails to compile under 21 since it uses a method which has been removed: TwoWayView.initializeScrollBars(TypedArray).  When I build with gradle and use compile 'org.lucasr.twowayview:twowayview:0.1.4', the crash occurs every time my app runs.  If I compile locally and comment out the call to initializeScrollBars(), the app seems to work fine.  Is there a workaround for this issue?  Is it ok to leave the call to initializeScrollBars() commented out?\n. ",
    "brianhv": "I also just experienced this with the gradle-included version, but not when I include the java file directly. I tried to reproduce it in a minimal sample and failed. No idea where 10.0dip could be coming from.\n@llma I had the same problem with initializeScrollBars, but the current version of the TwoWayView.java file does not appear to include that call.\n. ",
    "NightlyNexus": "I didn't get the exact error in the sample app, but this could be related:\nI made two changes to the sample app.  I immediately did mRecyclerView.setOrientation(Orientation.HORIZONTAL);  (line 89 of TWFragment currently).\nThen, in layout_staggered_grid.xml, I set layout_height = \"0dp\"\nAfter running the sample app with these two changes I received the following after clicking on the staggered grid tab:\n07-29 16:41:08.245  29032-29032/org.lucasr.twowayview.sample E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\nProcess: org.lucasr.twowayview.sample, PID: 29032\njava.lang.NullPointerException: Attempt to invoke virtual method 'void org.lucasr.twowayview.widget.TWLanes.reset(org.lucasr.twowayview.TWAbsLayoutManager$Direction)' on a null object reference\n        at org.lucasr.twowayview.widget.TWBaseLayoutManager.onLayoutChildren(TWBaseLayoutManager.java:237)\n        at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:1461)\n        at android.support.v7.widget.RecyclerView.onLayout(RecyclerView.java:1600)\n        at android.view.View.layout(View.java:15273)\n        at android.view.ViewGroup.layout(ViewGroup.java:4763)\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:457)\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:392)\n        at android.view.View.layout(View.java:15273)\n        at android.view.ViewGroup.layout(ViewGroup.java:4763)\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:457)\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:392)\n        at android.view.View.layout(View.java:15273)\n        at android.view.ViewGroup.layout(ViewGroup.java:4763)\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:457)\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:392)\n        at android.view.View.layout(View.java:15273)\n        at android.view.ViewGroup.layout(ViewGroup.java:4763)\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:457)\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:392)\n        at android.view.View.layout(View.java:15273)\n        at android.view.ViewGroup.layout(ViewGroup.java:4763)\n        at com.android.internal.widget.ActionBarOverlayLayout.onLayout(ActionBarOverlayLayout.java:494)\n        at android.view.View.layout(View.java:15273)\n        at android.view.ViewGroup.layout(ViewGroup.java:4763)\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:457)\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:392)\n        at android.view.View.layout(View.java:15273)\n        at android.view.ViewGroup.layout(ViewGroup.java:4763)\n        at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:2057)\n        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1814)\n        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1044)\n        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5749)\n        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:767)\n        at android.view.Choreographer.doCallbacks(Choreographer.java:580)\n        at android.view.Choreographer.doFrame(Choreographer.java:550)\n        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:753)\n        at android.os.Handler.handleCallback(Handler.java:738)\n        at android.os.Handler.dispatchMessage(Handler.java:95)\n        at android.os.Looper.loop(Looper.java:135)\n        at android.app.ActivityThread.main(ActivityThread.java:5070)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at java.lang.reflect.Method.invoke(Method.java:372)\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:836)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:631)\n. Thank you again!\n. ",
    "gabrielemariotti": "I try to explain better my question. \nI have clear the problem with complex layouts and the points above.\nThe current implementation of this method works well with the built-in layouts, but  with a custom layout which extends the BaseLayoutManager and with the same problems of the StaggeredGrid, I can't return false.\nIt isn't the real and final solution, I know it, but it is a temporary hack to manage own customizations.\n. To be honest I have to learn a lot about the LayoutManager and your BaseLayoutManager.\nI am tempted to write a StickyListHeadersLayout (may be the best way is to extend the ListLayoutManager) and a StackLayout.\n. I agree! It is the optimal solution.\n. Thanks\n. Thanks!\n. ",
    "darrenhinderer": "I stopped this crash by changing SavedState to not extend BaseSavedState. \nIf you look at AbsSavedState you'll see a FIXME which seems to be the culprit:\n // FIXME need class loader\n57        Parcelable superState = (Parcelable) source.readParcelable(null);\nSorry I'm not setup send a pull request at the moment but the changes were pretty minor to parcel the superstate myself.\n. Also once it started working it uncovered another issue where readFromParcel was failing here\nlanes[i].readFromParcel(in);\nI changed it to this:\nRect r = new Rect();\nr.readFromParcel(in);\nlanes[i] = r;\n. 1. Right, I wanted spacing around everything - even start and end items and I needed it to scroll away with the content.\n2. For right now, the designs I have require just the first item in the list to be completely flush. So I'm just passing in a flag to SpacingItemDecoration. \ngetItemOffsets looks like this:\nif (itemPosition == 0 && flushFirstPosition) {\n    outRect.set(0, 0, 0, verticalSpacing / 2);\n    return;\n}\nmItemSpacing.getItemOffsets(outRect, itemPosition, parent);\n1. Well I have a really general purpose adapter - with about 4-5 fragments all using the same adapter. This is probably not a common use case so maybe not such a good idea for the framework. \n4 Ok thanks!  At first I thought I might be able to modify the SpannableGrid to have dynamic row height but I quickly got in over my head. And then realized that the Staggered grid was also able to span columns so I switched over.\n. Sorry one more piece of feedback I forgot. \nOne of my layouts seemed like a perfect match for spannable grids (needing both column and row spanning) but the content isn't perfectly square. I have square images with banners below them.\nTo do that I initialized the SpannableGridLayoutManager with \"additionalRowHeight\" which is the height of the banners.\nprivate int getChildHeight(int rowSpan)\n{\n        return (getLanes().getLaneSize() + additionalRowHeight) * rowSpan;\n}\n. ",
    "ddmytrenko": "Hello! I'm really interested how did you fix this issue. Can you show us some code? ;)\n. ",
    "kenyee": "Thanks for the clue (google finds this page when looking for that error msg)...had the same issue when extending from BaseSavedState. \nRemember to save your superstate though...I didn't see how you did this in your SavedState class but it should be saved and restored.. ",
    "pakoito": "Shamelessly bumping this feat request because my project is on hold until it arrives.\n. If you can move it out of an attribute and into a configurable field, I'd go with exact dimension because as a user I can calculate the measures myself. Otherwise, aspect ratio as an attribute.\nThank you for the fast response.\n. It's worth saying that whatever the case, most of my SpannableGrids (in their current incarnation based off ListView) have their size/ratio values assigned at runtime due to remote configuration, so keeping it as an attribute requires a bit more work from my part.\n. Definitely, even if it required a following invalidate-like method. You can have both pointing to the same field regardless, and allow definition to the user.\n. And the same applies to colSpan and rowSpan in the internal views, having the chance to set them once the view is created but before it is added rather than having to modify the static XML attribute.\n. What is the ETA on Sonatype update? Thank you.\n. Pretty much.\n. ",
    "boylenssen": "I'm fine with either way. As long as I can have say 10 % more height than width. If I need to set a hard value (calculating the height myself) or aspect ratio is all fine by me\n. I also see that setting the imageview asynchronously, via Picasso or via a post(Runnable) gives this issue...\n. ",
    "xawill": "Any news on this ? I'm also kind of stuck by that in my project.\n. ",
    "vladiRoz": "Is there any update on non square aspect ratio on SpannableGridLayoutManager?\n. ",
    "rubinbasha": "Is there an update about this issue ?\n. ",
    "simonkarmy": "Any News About this issue ?? same request here, and it is better to use setters and getters.\n. ",
    "wmbest2": "Definitely a +1 from @RedThirst13 and I on this one.  Any chance you have this on your radar or could point us in the right direction to implement this ourselves?.  \nWe are looking to reverse the SpannedGridLayoutManager.\n. ",
    "iGio90": "+1 !!!!!!!!! need also to reverse the spannable grid!!!!\n. referenced also on stackoverflow http://stackoverflow.com/questions/28852963/reverse-layout-for-twowayview-layout-manager\n. @eygraber I'm using your #149 to drag'n'drop but did you tried for example having different spans on items above the first visible position? if you drag and move an item in the very bottom of the list all the items above needs to verify back the positions to fit the new grid! I think this shoud need the rtl support no?\n. ",
    "tilal6991": "Reference for ListView docs: http://developer.android.com/reference/android/widget/AbsListView.html#attr_android:transcriptMode\n. ",
    "rciovati": "Closing in favor of #115 \n. ",
    "thuytrinh": "With Gradle 1.12, it seems we have to specify @aar like following so that AS can pull the archives. This worked for me.\ncompile 'org.lucasr.twowayview:core:1.0.0-SNAPSHOT@aar'\n  compile 'org.lucasr.twowayview:layouts:1.0.0-SNAPSHOT@aar'\n. ",
    "krtkush": "@lucasr It syncs now. Thank you :)\n@thuytrinh Thanks. \n. ",
    "MuhammadKorany": "Error raise on the grid and list attributes like:\nError:(18) No resource identifier found for attribute 'twowayview_layoutManager' in package 'myPackage'\nError:(18) No resource identifier found for attribute 'twowayview_numColumns' in package 'myPackage'\nError:(18) No resource identifier found for attribute 'twowayview_numRows' in package 'myPackage'\nHow could it get solved?\n. ",
    "sirvon": "nvrmind, i need to slow my mind down more....\ni used the snapshot, and the stable version is right under.\n. ",
    "athornz": "Thanks for the comments. I've fixed those up (hopefully). Let me know if there is anything else :)\n. Ok.... I think I've squashed the commits.\nSorry I've never done that before. Let me know if it looks correct?\n. Ok, done!\n. Well, the minimum should be as low as possible, if it doesn't add work adding backwards compatibility. I still work on apps that have a min api of 8 or 9. I just wondered what influenced the the min api being set to 10, over 9. Were they some api's added that are needed?\n. ",
    "Kuloud": "Will the library support header/footer view?\n. I fork the project and add support for subview click according it, may\nhelps you: https://github.com/Kuloud/RecyclerView\n2014-11-18 10:04 GMT+08:00 thirtythreeforty notifications@github.com:\n\nI have a custom View as the element being presented in my TwoWayView. It\ncontains a checkbox. Before I switched to TwoWayView, I had set\nandroid:descendantFocusability=\"blocksDescendants\" on the root ViewGroup\nof the custom view, and it blocked the ListView from interpreting the\n(un)checking of the box as a click on the list element.\nSince switching to TwoWayView and ItemClickSupport, it does not seem like\ndescendantFocusability is being respected. Clicking the checkbox will\ncause the checkbox \"focused\" animation to play (the check appears), but\nreleasing the touch causes the list element event to fire.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lucasr/twoway-view/issues/169.\n. \n",
    "eygraber": "@lucasr Have you started implementing drag-drop yet? I was going to port my AbsListView version to RecyclerView, but I'd much rather use TwoWayView :-)\nI took a quick look, and the port wouldn't be that complicated (RecyclerView actually makes parts of it simpler). Would you mind if I took a shot at it?\n. Cool. I can implement it as a subclass of TwoWayView, or in TwoWayView itself (via a helper class). Which would you prefer?\n. Implemented in PR https://github.com/lucasr/twoway-view/pull/149\n. @HoracioFilho I believe the way to do this is with a RecyclerView.ItemAnimator. \n. @HoracioFilho I haven't really looked into it, but shouldn't ItemAnimator.animateMove do the trick?\n. I've been seeing a similar issue, when I remove the first item in an adapter (position 0), and then call notifyItemRemoved(0). If I change it to notifyDataSetChanged() I have no problem, but with notifyItemRemoved(0) I get this crash:\njava.lang.IndexOutOfBoundsException: Inconsistency detected. Invalid item position 0(offset:-1).state:2\n            at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:3300)\n            at android.support.v7.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:3258)\n            at org.lucasr.twowayview.TwoWayLayoutManager.makeAndAddView(TwoWayLayoutManager.java:466)\n            at org.lucasr.twowayview.TwoWayLayoutManager.fillBefore(TwoWayLayoutManager.java:256)\n            at org.lucasr.twowayview.TwoWayLayoutManager.fillBefore(TwoWayLayoutManager.java:249)\n            at org.lucasr.twowayview.TwoWayLayoutManager.correctTooHigh(TwoWayLayoutManager.java:335)\n            at org.lucasr.twowayview.TwoWayLayoutManager.fillSpecific(TwoWayLayoutManager.java:301)\n            at org.lucasr.twowayview.TwoWayLayoutManager.onLayoutChildren(TwoWayLayoutManager.java:725)\n            at org.lucasr.twowayview.widget.BaseLayoutManager.onLayoutChildren(BaseLayoutManager.java:369)\n            at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:1872)\n            at android.support.v7.widget.RecyclerView.onLayout(RecyclerView.java:2155)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n            at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n            at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n            at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.support.v4.widget.DrawerLayout.onLayout(DrawerLayout.java:887)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n            at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.support.v7.internal.widget.ActionBarOverlayLayout.onLayout(ActionBarOverlayLayout.java:502)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n            at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1671)\n            at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1525)\n            at android.widget.LinearLayout.onLayout(LinearLayout.java:1434)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n            at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n            at android.view.View.layout(View.java:14937)\n            at android.view.ViewGroup.layout(ViewGroup.java:4651)\n            at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:2132)\n            at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1872)\n            at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1075)\n            at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5878)\n            at android.view.Choreographer$CallbackRecord.run(Choreographer.java:761)\n            at android.view.Choreographer.doCallbacks(Choreographer.java:574)\n            at android.view.Choreographer.doFrame(Choreographer.java:544)\n            at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:747)\n            at android.os.Handler.handleCallback(Handler.java:733)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:136)\n. I'm pretty sure I have a forked repo with these changes. If you want to include it in your project, the maven dependency should be com.staticbloc.twv:layouts:1.0.0 and com.staticbloc.twv:core:1.0.0\n. I think I might've added some stuff to the decorators for convenience. You can look at the commit history in the fork. \n. @ened The issue with fragmenting functionality into subclasses is basically the argument against inheritance vs composition. If every feature is delegated to a subclass in order to keep TwoWayView simple, what happens when I need something that has two custom features?\nI do like what the Android team has done with RecyclerView in terms of decoupling functionality. It would probably be best to emulate that. For example, since an empty view belongs to a more general \"container-like\" functionality, it would be more appropriate to place it in TwoWayView as opposed to LayoutManager (since it doesn't deal with laying out children), or Adapter (managing underlying data set), etc...\n. @ened It's hard to not add clutter to a class when you want to offer a wide range of functionality. For example, in https://github.com/lucasr/twoway-view/pull/149 I add support for reordering items in a TwoWayView. I can think of many situations where I would want the reordering and empty view. Putting those in subclasses makes that much more difficult to achieve.\n. @ened The way ListFragment handled empty views was just a wrapper around ListView.setEmptyView. You could use empty views without needing the Fragment.\nWhile I agree that managing outside views doesn't fit perfectly under the umbrella of TwoWayView there really isn't a better place for it. I feel like it's too trivial a feature to require subclassing or using a fragment, it definitely doesn't belong in Adapter or LayoutManager, and its used too frequently to reimplement it outside of TwoWayView every time you want to use it.\n. ",
    "ErikTheSGRV": "Any news on the drag & drop implementation?\n. ",
    "ertanden": "I would like to see drag&drop support too, as well as swipe to dismiss.\n. ",
    "fnberta": "Any update on this? I need a drag&drop implementation in my app and this seems like a clean solution!\n. ",
    "schwiz": "I'm not understanding what you are suggesting here. It makes sense (to me) to have a view type that would want to be a different span size based on its bound data. Are you saying this is a bad idea?\n. Oh good, I thought I followed your example but I guess I realized this unconsciously :-)\n. After some stackoverflow searching it looks like ListView doesn't do this either (although many people seem to consider it a bug in ListView as well) What I ended up doing is just using the onPreDraw listener instead. What I was trying to accomplish is getting the width of a view once it has been measured. \naddOnGlobalLayoutListener works good for this purpose outside of ViewGroups but using onPreDraw works just as well anywhere and I don't see any reason not to use onPreDraw so this is what I'm doing now. \nThanks for your reply and awesome library! \n. wrap your existing adapter inside a recyleview one\n. StaggeredGrid\n. It was happening when resuming a fragment but wasnt easily reproducable\nOn Oct 29, 2014 6:53 PM, \"Lucas Rocha\" notifications@github.com wrote:\n\n@schwiz https://github.com/schwiz I suspect this is related to state\nrestoration. Did you happen to add items to the adapter then restoring the\napp with different adapter contents?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lucasr/twoway-view/issues/120#issuecomment-61025410.\n. \n",
    "machinezhou": "@lucasr I found a guy who make it though(called ExRecyclerViewLibrary in github), but to consider about stability etc. I'd better wait for the official version.\n. ",
    "theoklink": "Two years on an nothing appears to have happened here. Looks like this project is also half finished, just like smoothie. ",
    "GolgothSchumi": "Snapshot, which is based on RecycleView\n. GridLayoutManager. Orientation: horizontal\n. Yes\n. Solved. The popupwindow was the cause.\n. ",
    "yrizk": "I can confirm this is an issue. putting the app in background and coming back and trying to click an item in the staggered grid throws the exception. \n. I can't , unfortuanately. and I didn't mean to imply that this reliably reproducible on my end , either. it has happened quite a bit, but im able to reliably reproduce it (although it happen once more since yesterday).  the best theory I have for why this happens  is that the StaggeredGridLayoutManager somehow thinks it has fewer columns than it actually does, but I don't know why. \nConsider this pseudocode\n// create the StaggeredGridLayoutManager using the single param constructor passing in a valid context. \n// change the numColumns using setNumColumns right away to 3 or 4 (depending on device config) \nso given those two lines, is it possible that not setting the numColumns directly in the constructor itself is the problem? if the caching of the lanes happens before we change the number of columns, perhaps that doesn't update the cache, which would explain the erratic presentation of this bug. \nI don't know, I'm hoping this sparks an idea on your end. \n. ",
    "muriloandrade": "I'm facing this same issue using SpannableGridLayoutManager.\nI'm using Tollbar with Tabs and it happens when changing tabs.\nI had create a generic project. Tell me how to share.\nThank you.\n. Sharing: https://github.com/muriloandrade/RecyclerTest\n. @Wavesonics Yes I kinda feel the same.\n@lucasr This is an awesome library. Could you tell us about your plans for it?\nI really hope you'll continue.\n. Oh, me neither. I'm sorry if I left this impression.\n. ",
    "Masssou": "Sorry, I forgot to mention that I'm using the stable release :)\n. My bad... adapter code trouble...\nSorry about disturbing\n. ",
    "codelabr": "Lucasr: This is great news! Can't wait to see it working.\n. I have the same issue. Scrolling down then back up, padding keeps added to the view and when the padding exceeds the screen size, the view disappears.\n. @lucasr could you help fix this soon? would greatly appreciate.\n. ",
    "sekharrockz": "waiting for it\n. ",
    "midhun3112": "The issue is solved now. I think it was due to android studio Now it's working fine:)\n. \n. I have uploaded my design above. All the listitems have same height( the height of items are different due to error by designer ) . Please give some suggestions to acheive this\n. ",
    "lvguowei": "I have this same issue, calling notifyItemRemoved(0) will crash, anyone knows if this is a recyclerview bug?\n. Now I am doing some dirty workaround like\n if (index == 0) {notifydatasetchange();} else {notifyItemRemoved(index)} \n. ",
    "mradzinski": "It is indeed a RecyclerView bug and is yet to be fixed.\nFor more information check:\nhttps://code.google.com/p/android/issues/detail?id=77846\nhttps://code.google.com/p/android/issues/detail?id=77232\n. +1, many of the open issues refer to this pull. 21.0.3 version of the compat library has some changes on the RecyclerView.\n. ",
    "shailendraborse": "I have found the same issue, calling notifyItemRemoved(0) will crash with exception IndexOutOfBoundsException\n. Below exception arises when I was going to delete item at 0 postion in GridLayoutManager , StaggeredGridLayoutManager and SpannableGridLayoutManager.\nProcess: org.lucasr.twowayview.sample, PID: 21165\n    java.lang.ArrayIndexOutOfBoundsException: length=22; index=-1\n            at org.lucasr.twowayview.widget.ItemEntries.getItemEntry(ItemEntries.java:69)\n            at org.lucasr.twowayview.widget.BaseLayoutManager.getItemEntryForPosition(BaseLayoutManager.java:213)\n            at org.lucasr.twowayview.widget.SpannableGridLayoutManager.cacheChildLaneAndSpan(SpannableGridLayoutManager.java:216)\n            at org.lucasr.twowayview.widget.BaseLayoutManager.measureChild(BaseLayoutManager.java:474)\n            at org.lucasr.twowayview.TwoWayLayoutManager.setupChild(TwoWayLayoutManager.java:461)\n            at org.lucasr.twowayview.TwoWayLayoutManager.fillFromScrapList(TwoWayLayoutManager.java:449)\n            at org.lucasr.twowayview.TwoWayLayoutManager.onLayoutScrapList(TwoWayLayoutManager.java:740)\n            at org.lucasr.twowayview.widget.BaseLayoutManager.onLayoutScrapList(BaseLayoutManager.java:375)\n            at org.lucasr.twowayview.TwoWayLayoutManager.onLayoutChildren(TwoWayLayoutManager.java:727)\n            at org.lucasr.twowayview.widget.BaseLayoutManager.onLayoutChildren(BaseLayoutManager.java:369)\n            at android.support.v7.widget.RecyclerView.dispatchLayout(RecyclerView.java:1918)\n            at android.support.v7.widget.RecyclerView.resumeRequestLayout(RecyclerView.java:1101)\n            at android.support.v7.widget.RecyclerView$1.run(RecyclerView.java:155)\n            at android.view.Choreographer$CallbackRecord.run(Choreographer.java:761)\n            at android.view.Choreographer.doCallbacks(Choreographer.java:574)\n            at android.view.Choreographer.doFrame(Choreographer.java:543)\n            at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:747)\n            at android.os.Handler.handleCallback(Handler.java:733)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:136)\n            at android.app.ActivityThread.main(ActivityThread.java:5001)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:515)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)\n            at dalvik.system.NativeStart.main(Native Method)\n. ",
    "Hazer": "Still happening in @lucasr master, even with @jacek-marchwicki changes\nI am using SpannableGridLayoutManager and notifyItemRangeRemoved(0, length).\nThis issue got fixed in Google's StaggeredGridLayoutManager in RecyclerView 21.0.2. (I could not reproduce anymore at least)\nI tried to fix it, but no lucky =/\n. Thank you @ishratkhan your answer solved my issue with SpannableGrid and Glide\n. ",
    "joshln87": "i'm facing the same problem as well. Could it be because of the handleAdapterChanges method which clears the entries cache?\n. ",
    "jemben08": "in your example you use\n\nbut \nwhen i import\nrepositories {\n    maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n}\ndependencies {\n    compile 'org.lucasr.twowayview:core:1.0.0-SNAPSHOT@aar'\n    compile 'org.lucasr.twowayview:layouts:1.0.0-SNAPSHOT@aar'\n}\nthis class not fount \norg.lucasr.twowayview.widget.TwoWayView\n. indeed was resolved\n. Error:(147) No resource identifier found for attribute 'layoutManager' in package \nError:(147) No resource identifier found for attribute 'numColumns' in package \n. the problem was\napp:layoutManager=\"GridLayoutManager\"\napp:numColumns=\"2\"\nchange to \napp:twowayview_layoutManager=\"GridLayoutManager\"\napp:twowayview_numColumns=\"2\"\nthanks\n. ",
    "ppamorim": "I can't use the lib, HELP!\n. Not working\n. Here the logcat: http://pastebin.com/M028ERdH\n. Obrigado Lucas! :p\n. Cara escreve em ingl\u00eas poxa '-'\n. This is the ungliest way to do that. I think there is a better way to handle this issue.\n. Yes, with 21.0.1.\nhttp://pastebin.com/wvfTq7KV\n. @HoracioFilho send me your Google Plus or Facebook account. I'll send the APK to show what's happening.\n. Sent\n. Not working yet...\n. @HoracioFilho @lucasr \nENG: \nFrom what I observed the problem seems to be related to the loading of items. The same problem occurs with AdView.\nIt seems that the list moves when finished loading/update of image/banner, would it?\nPT-BR:\nPelo que observei o problema parece ser referente ao carregamento dos itens. Ocorre o mesmo problema com o AdView.\nParece que a lista se move quando termina o carregamento/atualiza\u00e7\u00e3o da imagem/banner, seria isso?\n. Detected : The problem only occurs with the UIL(and bug all views), with Picasso ImageLoader work perfectly without any bug.\nNOT! IGNORE IT.\n. Even with this problem? WHY?!\n. The minimal API should be 14. Why? I want those you have old cell phones suffer pain.\n. +1\n. I recommend you use the Android Studio.\n. I recommend you do this. If not, copy the CORE and LAYOUT directory to inside your application. Will work.\n. What's the purpose of doing this with a list?\n. Same problem here\n. Don't use Eclipse. Use Android Studio.\nFor each question like this, my answer will always be the same.\nWHY?\n- Avoid dependencies project on your project.\n- Easy to update these dependencies.\n. The first version of RecyclerView have a better performance of couse. Things envolve...\n. ",
    "dommerq": "When my two-way view is at the top, and I scroll up, it adds padding \nI'm using ListLayoutManager\n. No, what I'm describing is a bug, not a missing feature :) \nIt adds padding when I'm scrolling up\n. Cheers, \nif you need any help, ping me ;)\n. ",
    "ChristopheVersieux": "I can confirm and send code to reproduce. \nFor me, the bug only appeared (or is worst) when I started using app compat 21. \n. I confirm this issue, \nIf more help needed, I can send code to reproduce and confirm if future fix is working, in case you need help to debug.\n. ",
    "ened": "Similar issue here, when using TwoWayView configured like this:\nxml\n<TwoWayView\n            android:id=\"@+id/pager\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"444dp\"\n            android:clipToPadding=\"false\"\n            android:layout_marginTop=\"32dp\"\n            android:paddingStart=\"20dp\"\n            android:paddingEnd=\"20dp\"\n            android:overScrollMode=\"never\"\n            android:orientation=\"horizontal\"\n            app:twowayview_layoutManager=\"SpannableGridLayoutManager\"\n            app:twowayview_numRows=\"2\"\n            />\nWhenever data is being added to the adapter (content provider changes), the padding seems to be added to the \"start\" side.\nAppCompat v21.\n. @eygraber I had a similar question to solve recently. \nOne way that worked out is to subclass TwoWayView and register a custom observer like this:\n``` java\npublic class ExtTwoWayView extends TwoWayView {\n    private long mEmptyViewId = NO_ID;\npublic void setEmptyViewId(long emptyViewId) {\n    mEmptyViewId = emptyViewId;\n}\n\npublic ExtTwoWayView(Context context) {\n    super(context);\n}\n\npublic ExtTwoWayView(Context context, AttributeSet attrs) {\n    super(context, attrs);\n}\n\npublic ExtTwoWayView(Context context, AttributeSet attrs, int defStyle) {\n    super(context, attrs, defStyle);\n}\n\nprivate AdapterDataObserver mObserver = new AdapterDataObserver() {\n    @Override\n    public void onChanged() {\n        if (mEmptyViewId != NO_ID) {\n            triggerEmptyView();\n        }\n    }\n};\n\nprivate void triggerEmptyView() {\n    final boolean emptyViewRequired = !(getAdapter().getItemCount() > 0);\n\n    final View emptyView = ((ViewGroup) getParent()).findViewById((int) mEmptyViewId);\n    if (emptyView == null) {\n        return;\n    }\n\n    if (emptyViewRequired) {\n        emptyView.setAlpha(1.0f);\n        emptyView.setVisibility(VISIBLE);\n    } else {\n        emptyView.setVisibility(GONE);\n        emptyView.setAlpha(0);\n    }\n}\n\n@Override\npublic void setAdapter(Adapter adapter) {\n    adapter.registerAdapterDataObserver(mObserver);\n    super.setAdapter(adapter);\n}\n\n}\n```\nThat way the core TwoWayView stays \"simple\".\n. It would be also nice to just add a \"behavior\" to TwoWayView for such things.\nHiding/showing an empty view must be customisable to a degree, like the animation of showing/hiding that particular view.\nSimilar to this is the functionality for \"progress bars\" like in http://developer.android.com/reference/android/app/ListFragment.html. \nMaybe that's something a TwoWayViewFragment class could manager best?\n. @eygraber what do you think about a TwoWayViewFragment, in the likes of ListFragment?\nSeemed to be a good solution in the past. Plus we can also add functionality to show/hide a ProgressBar. \nReordering items is definitely a feature for within the View logic. I don't believe the management of other outside views (empty, progress) belongs in it. (Hence the ExtViewPager above is only a temporary solution).\n. ",
    "Denvar": "I have the same issue but am not setting padding:\nxml\n    <org.lucasr.twowayview.widget.TwoWayView\n        android:id=\"@+id/gallery_grid_layout\"\n        android:layout_below=\"@+id/etoolbar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"#ffffff\"\n        android:layout_marginRight=\"2dp\"\n        android:layout_marginLeft=\"2dp\"\n        app:twowayview_layoutManager=\"GridLayoutManager\"\n        app:twowayview_numColumns=\"3\" />\nAlso using AppCompat v21\nVideo of the issue: https://vid.me/ntVs\nWhen I trigger this issue I notice that it happens when scrolling, where newly added items causes the grid to \"snap\" so that the first row of items on the screen are fully visible. This \"movement\" seems to be tied to the extra spacing when scrolled back to the top of the grid.\n\nActually this could be a separate issue\n. Any news on this? These are big issues with most of my Grid Layout implementations\n. \n",
    "0legg": "As far as I've discovered, this behavior can be reproduced when using items that call repaint during scroll.\nExample: I have a list of pictures that are downloaded from internet. I scroll to the screen which have no \"cached\" pictures on it, so they're starting to download. If first visible view on screen needs to be repainted and it's not fully shown now, it'll scroll all the content down/right, so it'll be in the screen, at the very beginning of TwoWayView. This leads us to list flicking, also it affects top padding.\nMaybe, it's also the source of https://github.com/lucasr/twoway-view/issues/156 problem\nYou can try fix proposed in https://github.com/lucasr/twoway-view/pull/167, at least it have fixed issue for me\n. I've dig into library and found out that ImageView image loading causes onLayoutChildren to be called. This method has bug in it, which leads us to scroll to beginning of first visible item nearly every time.\nYou can try https://github.com/lucasr/twoway-view/pull/167 to fix it\n. @leeyc09 Can you please provide code sample? I've tested StaggeredGridLayoutManager with my fix against adapter loading placeholders from Internet, and it performed well.\n. @leohgz I don't think it worth to do \u2014 library looks pretty much abandoned, and I have no enough free time and will to maintain my own fork. \n. ",
    "aqeel-hashim": "I am facing this same issues.\nI am using picasso to load the images from the internet and its causing the padding issue.\nWill there be fix of this in future.. ",
    "evelyne24": "Hi, this crash is still happening.  I'm using the StaggeredGridLayoutManager.\nIt is happening when my adapter calls notifyItemRangeRemoved() then notifyItemRangeInserted() (with notifyDataSetChanged() works OK).\nGoing through the stack, the problem seems to be inside StaggeredGridLayoutManager:\n@Override\n    ItemEntry cacheChildLaneAndSpan(View child, Direction direction) {\n        final int position = getPosition(child);\n...\n}\nThe position here is -1 and I get an ArrayOutOfBoundsException. I've tried to add a couple of guards but then I end up with the exception described above.\nThat getPosition() method comes from the RecyclerView itself:\n/\n         * Returns the adapter position of the item represented by the given View.\n         \n         * @param view The view to query\n         * @return The adapter position of the item which is rendered by this View.\n         /\n        public int getPosition(View view) {\n            return ((RecyclerView.LayoutParams) view.getLayoutParams()).getViewPosition();\n        }\nwhich (going through the method stack) comes down to this:\npublic final int getPosition() {\n            return mPreLayoutPosition == NO_POSITION ? mPosition : mPreLayoutPosition;\n        }\nAny pointers on how to fix this? I'm not very familiar with RecyclerView....\n. Also a couple of other things I changed, in my quest to fix the crashes (https://code.google.com/p/android/issues/detail?id=77846, https://github.com/lucasr/twoway-view/issues/134). I might have got them wrong because I was in a hurry, but just in case something clicks with you.\nIn  BaseLayoutManager I've changed:\nfinal int itemCount = state.getItemCount();\n to\nfinal int itemCount = getAdapter().getItemCount();\nand inside ItemEntries I've added:\nif (position > mAdapterSize) {\n        mAdapterSize = position;\n}\nand changed:\nreturn len; \nto \nreturn Math.max(len, MIN_SIZE + 1);\n. ",
    "sharebooks": "Where I can get the latest code? In github master branch, It is still old code.\n. I did some investigate for a while and I may find the root cause but I did not find a solution  as I did not go very deep into the source code. \nWhat I find is that the issue is related to the async-loading. The extra spaces were added to mLayoutStart (or did not removed properly when the item is removed) in TwoWayLayoutManager.java. When the mLayouutStart is not calculated correctly, the result is there are more extra space right before the first item.  \nHope this is helpful.\n. ",
    "finneapps": "I copied the content from the layout_staggered_grid.xml file and added the gradle dependency\n. ",
    "coreform": "This issue was hijacked and closed when the hijacking issue was resolved...the OP's issue remains, and another issue has been made since: https://github.com/lucasr/twoway-view/issues/155\n. ",
    "clemp6r": "Yes, follow the link I put over pom.xml in my first message. It redirects on the 0.1.3 release.\n. ",
    "schildbach": "The bug is present with 0.1.4 as well. The pom contains this:\n<dependency>\n<groupId>com.android.support</groupId>\n<artifactId>support-v4</artifactId>\n<version>19.0.+</version>\n<scope>compile</scope>\n</dependency>\nVersion \"19.0.+\" is not a valid version. Actually I'm surprised Maven Central accepted this artifact. I suggest replacing this with an actually existing version, like \"19.0.1\".\n. Alternatively: link to more recent version, switching to aar:\n<dependency>\n<groupId>com.android.support</groupId>\n<artifactId>support-v4</artifactId>\n<version>22.0.0</version>\n<type>aar</type>\n</dependency>\n. ",
    "nathanielwolf": "Same same. Minimize with \"Don't Keep Activities\" enabled in ListLayoutManager mode and restore.\n. Not reproducible in the Sample App. I'll try to see what is so different with my implementation. This is the same app as #146. I use StaggeredGridLayoutManager in Landscape and ListLayoutManager in Portrait. \n. Both this and #146 seem to be a regression, since they do not occur in 8e9e815345ccce5752480358729cc16f59e1f8b2 \n. Similar to #120 but with a different stack trace\n. Reproducible by minimizing the app with \"Don't Keep Activities\" enabled and then restoring. I cannot reproduce in the sample app. \n. ",
    "CarlosMChica": "Is this bug fix going to be added soon to the SNAPSHOT version?\n. ",
    "mndfcked": ":+1: for a new SNAPSHOT release. I'm experiencing the very same exception and this looks like the fix for it.  Me and my users would really appreciate it. :grinning: \n. ",
    "dadino": "I'm receiving some crashes from Crashlytics with this error. I'm using a GridLayoutManager.\n. ",
    "xerossia": "new SNAPSHOT release including this fix, please\n. ",
    "pmenager": "Hi,\nI'm interested in using this component but I also need reordering.\nAny info on this pull request ?\nThanks!\nPaul\n. ",
    "emce": "+1\n. @eygraber did you just include your pull request/changes, or any other?\n. @Kuloud and how this should be implemented? I mean subitem click?\n. ",
    "goncalossilva": "This seems like a really elegant approach. What's stopping it from getting merged?\n. ",
    "edoardotognoni": "+1\n. ",
    "nikolavelimirovic": "Hi Lucasr, tnx for replying. I am using StaggeredGridLayoutManager. No state restoration is involved here and i think i found a culprit, before in my adapter i used to add new items via addAll and I called notifyDataSetChanged() after that and everything was fine. Since that was making list UI block for a second i switched to this and that is when crashing started (but performance was better ;) ): \n```\npublic void add(Item item) {\n    if (item != null)\n        mItems.add(item);\n    notifyItemInserted(Math.max(0, mItems.size() - 1));\n}\npublic void addAll(Collection items) {\n    if (items != null) {\n        for(Item item: items){\n            add(item);\n        }\n    }\n}\n```\n. ",
    "pboos": "Having same problem when adding and removing a last item (loading next page indicator view). When adding it comes in nicely, but when removing it somehow still shows the last part (using the SpannableGridLayoutManager). I actually just quickly tried this in the sample. When it is removed, it shows about half of the view. Then when scrolling up it works. But when scrolling down again it crashes with \njava.lang.ArrayIndexOutOfBoundsException: src.length=101 srcPos=0 dst.length=100 dstPos=0 length=101\n. ",
    "martijnvm": "The same error occurred to me when the grid is smoothScrolling and at the same time calling notifyDataSetChanged (or any variant). My quick and easy solution was doing my two actions in a sequence, so first scrolling and when the grid is idle it is notified.\n. Thank you !\n. ",
    "tasomaniac": ":+1: \n. This is not a problem of the library I guess. It will be the same even when you use normal ListView with a custom ripple effect. You have to provide the touch point manually. \n. ",
    "mheras": "Hey Lucas! Still alive?\n. ",
    "hakimrie": "make sure you import \"org.lucasr.twowayview.widget.TwoWayView\" in your class as well as use org.lucasr.twowayview.widget.TwoWayView in your xml, not rg.lucasr.twowayview.TwoWayView\n. make sure to disable/comment stable dependency in your gradle project dependencies\n. ",
    "hybrid2102": "I have the same issue.\nNo resource identifier found for attribute 'twowayview_layoutManager'\nThe xml is the same from the samples.\n. ",
    "murilozas": "Copy the attrs.xml file from layouts folder to your project values folder.\n. ",
    "Mullazman": "Thank you @murilozas \n. ",
    "alekseytimoshchenko": "try to save this file within your project https://github.com/lucasr/twoway-view/blob/master/layouts/src/main/res/values/attrs.xml. ",
    "ubuntudroid": "We observed a similar behavior. We're adapting the height of the items in our recycle view when the actual pictures have been loaded via network. However resizing the items seems to result in an added padding at the very top of the list. Strange enough this only happens on Kitkat and below, but not on Android L.\n. ",
    "easycheese": "Same here. AS 0.9.0\n. ",
    "npike": "Same.\nError:A problem occurred configuring project ':app'.\n\nCould not resolve all dependencies for configuration ':app:_debugCompile'.\nCould not find twoway-view:core:unspecified.\n     Searched in the following locations:\n         https://jcenter.bintray.com/twoway-view/core/unspecified/core-unspecified.pom\n         https://jcenter.bintray.com/twoway-view/core/unspecified/core-unspecified.jar\n         https://repo1.maven.org/maven2/twoway-view/core/unspecified/core-unspecified.pom\n         https://repo1.maven.org/maven2/twoway-view/core/unspecified/core-unspecified.jar\n         file:/Users/npike/.m2/repository/twoway-view/core/unspecified/core-unspecified.pom\n         file:/Users/npike/.m2/repository/twoway-view/core/unspecified/core-unspecified.jar\n         https://oss.sonatype.org/content/repositories/snapshots/twoway-view/core/unspecified/core-unspecified.pom\n         https://oss.sonatype.org/content/repositories/snapshots/twoway-view/core/unspecified/core-unspecified.jar\n         file:/Users/npike/android/extras/android/m2repository/twoway-view/core/unspecified/core-unspecified.pom\n         file:/Users/npike/android/extras/android/m2repository/twoway-view/core/unspecified/core-unspecified.jar\n         file:/Users/npike/android/extras/google/m2repository/twoway-view/core/unspecified/core-unspecified.pom\n         file:/Users/npike/android/extras/google/m2repository/twoway-view/core/unspecified/core-unspecified.jar\n     Required by:\n         Basic:app:unspecified > com.myapp:mylibrary-core:4.0 > org.lucasr.twowayview:layouts:1.0.0-SNAPSHOT\n. \n",
    "neoRiley": "I was able to FINALLY get it to work in as far as downloading the libraries with this in my build:\n``` xml\napply plugin: 'com.android.application'\nandroid {\n    compileSdkVersion 21\n    buildToolsVersion \"21.1.1\"\ndefaultConfig {\n    applicationId \"dreamsocket.com.horizontallistview\"\n    minSdkVersion 14\n    targetSdkVersion 21\n    versionCode 1\n    versionName \"1.0\"\n}\n\ncompileOptions {\n    sourceCompatibility JavaVersion.VERSION_1_7\n    targetCompatibility JavaVersion.VERSION_1_7\n}\nbuildTypes {\n    release {\n        minifyEnabled false\n        android.enforceUniquePackageName=false\n        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n    }\n}\n\n}\nrepositories {\n    mavenCentral()\n    maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n    jcenter()\n}\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    compile 'com.android.support:appcompat-v7:21.0.3'\n    compile 'com.android.support:recyclerview-v7:+'\n    compile 'org.lucasr.twowayview:core:1.0.0-SNAPSHOT@aar'\n    compile 'org.lucasr.twowayview:layouts:1.0.0-SNAPSHOT@aar'\n    compile 'org.lucasr.twowayview:twowayview:0.1.4'\n}\n```\n. notifyDataSetChanged also worked for me - thank you for posting that\n. call notifyDataSetChanged(); in your list adapter after removing the item.  That fixed it for me\n. Just to be thorough - this is code I JUST wrote, and works to remove and reclaim the space in my list:\npublic void removeItem(int position) {\n        this.m_shows.remove(position);\n        notifyItemRemoved(position);\n        this.notifyDataSetChanged();\n    }\n. ",
    "nikhilpanju": "I had the same issue. Solved it by putting the maven url in \nrepositories{ //maven{...}} \ninstead of \nbuildscript{ repositores{ //maven{...} } }\n. I had the same issue. Solved it by putting the maven url in \nrepositories{ //maven{...}} \ninstead of \nbuildscript{\n    repositores{ //maven{...}\n}\n}\n. ",
    "vashisthg": "We get this same problem with Picasso. \n```\n    @Override\n    public void onBindViewHolder(final ViewHolder holder, int position) {\n        DemoEntity demoEntity = demoList.get(position);\n        holder.textView.setText(demoEntity.text);\n        long time = System.currentTimeMillis();\n        loadImage(holder, demoEntity);\n        Log.d(\"LOGTAG\", \"time to load image:\" + (System.currentTimeMillis() - time));\n    }\nprivate void loadImage(final ViewHolder holder, DemoEntity demoEntity) {\n\n    Picasso.with(holder.imageView.getContext())\n            .load(demoEntity.imageDrawable)\n           .transform(transformation)\n            .into(holder.imageView);\n}\n\n```\nThe time to load images is at most 15 milliseconds\n. ",
    "soodabhay": "any one solved this issue?\nfacing the same problem!\n. ",
    "vovkab": "I'm using regular RecyclerView/LayoutManager with Glide, also seeing this issue. Feels like it is RecyclerView bug and not image loader.\n. I looked a little bit into this issue, looks like when you refresh data RecyclerView will get you a new ViewHolder, while old ListView/GridView and other AbsListView, reused exactly the same holder, making flickers \"invisible\".\n. ",
    "iamvijayakumar": "issues was fixed when change one line of code. and tried with Picasso no flicker  \nOpen layout folder of library.\nBrowse the package org.lucasr.twowayview.widget\nOpen BaseLayoutManager class\nJump to Line no. 362\nYou will found code as\nif (anchorItemPosition > 0 && (refreshingLanes || !restoringLanes))\n  {\nreplace this line by this one\nif (anchorItemPosition > 0 && refreshingLanes && !restoringLanes) {\n. Thank you @christian\n. ",
    "christian160984": "@iamvijayakumar workaround is right for me. I don't know if it has any side effect o not, but thank you. It's awesome.\n. ",
    "hnyoumfk": "@iamvijayakumar It works!!! THANKS!\n. ",
    "inaa": "so that's the only option?\n. I can not use Android Studio because I am participating with other developers on a complex eclipse build app. So I already tried to add this library via  copying contents of core and layout into new eclipse project. Everything compiles fine, but when i try to use it in xml, I get unsupported Service: accessibility error.\n. ",
    "Twibit": "In my app, i have nested lists. \nThe first list must be vertical and the inner list can be horizontal or vertical (depending on the user choice)\n\n. @skptl I ended up using a recycler view as you can see here : http://stackoverflow.com/questions/26649406/nested-recycler-view-height-doesnt-wrap-its-content\n. ",
    "skptl": "I have the exact same layout as @Twibit mentioned. If I use height=\"wrap_content\" the view is not visible and if I set the height manually it works. \n. @Twibit Did you sorted out the problem?\n. Thanks @Twibit. I will give it a try.\n. ",
    "SidhNor": "I believe this library is not supposed to handle this. \nIt is up to you to use ItemSelectionSupport along with ItemClickSupport to implement this functionality.\n. ",
    "leeyc09": "do not fix to me. try to StaggeredGridLayoutManager\n. @0legg ASAP.\n. ",
    "markmooibroek": "This bug is preventing me to use this great library in more projects. Any ETA on fixing it @lucasr?\n. ",
    "hijamoya": "Any update about this? I am facing the same problem :(\n. ",
    "drommk": "I patched this and now it works fine, thanks @0legg \n(and yes, you probably should merge it)\n. ",
    "T-Spoon": "If I recall - with this fix, if you try and set an ItemDecorator, scroll down, and then scroll up, everything breaks.  Just as an FYI for those using it.\n. ",
    "Sserra90": "I'm having the same problem, any updates recently on this bug ?\n. ",
    "lidemin": "Same problem for SpannableGridLayoutManager and this fix does work for it. However this fix will import another crash issue... Any update guys? Thanks.\n. ",
    "Erebos1988": "This fix works for me.\n. Same error, if I use Support Library 22.2.\nSupport Library 22.1.1 works.\n. ",
    "KentHawkings": "This causes a crash to occur if you rotate the screen after scrolling down partially and then attempt to scroll up again.\n. I would also love to know if this project is still alive. It has a lot of potential but is too buggy for production in my experience.\n. ",
    "leohgz": "This fix works partialy. However. If i do scroll back... i get \"NullPointerException\"  at     private static int getLaneSpan(SpannableItemEntry entry, boolean isVertical, int position) {\n        return (isVertical ? entry.colSpan : entry.rowSpan);\nCan you people help me with this?\n. Does this issue is also in your fork? wich is the main different? because i see u still keep some packages from this lib.\n. I \u00b4ve algo having this issue. Any help?\n. ",
    "saikiran1220": "Hi,This i am facing this issue , how to fix this\n. ",
    "blazmag": "I've updated the commit message, thanks!\n. my bad, done.\n. Use an image loading library Picasso or Glide to dynamically load images in the onBindViewHolder twoway-view Adapter method. \n. ",
    "gpulido": "Thank you for the help. My actual ripple looks like this:\n< ripple xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:color=\"@color/item_pressed_color\">\n    <item>\n        <shape\n            android:shape=\"rectangle\">\n            <solid android:color=\"@color/item_default_color\" />\n        </shape>\n    </item>\n</ripple >\nAnd I have been able to modify the hotspot on the onclick adapter\nitemClick.setOnItemClickListener(new ItemClickSupport.OnItemClickListener() {\n           @Override\n            public void onItemClick(RecyclerView parent, View child, int position, long id) {\n                mToast.setText(\"Item clicked: \" + position);\n                mToast.show();\n                ((RippleDrawable)child.getBackground()).setHotspot(1,1);\n            }\n        });\nNow the problem is how to know the hotspot point where the use touched on the item element...\nEDITED\nI have found a solution. On the adapter I add a touchlistener\n```\n  public SimpleViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        final View view = LayoutInflater.from(mContext).inflate(R.layout.item, parent, false);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {          \n            view.setOnTouchListener(new View.OnTouchListener() {\n                @Override\n                public boolean onTouch(View v, MotionEvent event) {\n                    ((RippleDrawable)view.getBackground()).setHotspot(event.getX(),event.getY());\n                    return false;\n            }\n        });\n    }\n    return new SimpleViewHolder(view);\n}\n\n```\n. ",
    "TaufikAkbar": "i got same error. i tried to disabled stable dependecy, i got new error.\n\n. ",
    "osrl": "+1\n. Any idea how to do this? \n\n. I did it using viewHolder.itemView.setTranslationY(). But is it the right way?\n. ",
    "isuruch": "Thank you, I've used picasso and it workd great. \n. Thank you Romac, padding was the problem. I've deleted the padding of the two way view tag in xml and the bug goes away. Also if you want padding between photos, just add padding in the \"ImageView\" item. It works fine. Closing the issue.\n. ",
    "winseyli": "Not sure is it what you want.\nYou can programmatically scroll to bottom (last item in the list) by:\nmRecyclerView.post(new Runnable() {\n            @Override\n            public void run() {\n                mRecyclerView.smoothScrollToPosition(itemlist.size() - 1);\n            }\n});\n. ",
    "hrach": "Thanks a lot, in fact, I tried your solution before, but probably it behaved somehow different, my mistake.\n. ",
    "davideavagliano": "I'm looking for the same feature!\nIt would be great to use sticky headers in a RecyclerView!\nCheers!\n. ",
    "RomacLevac": "I have the same issue while using twowayview as a horizontal list view in a scrollview. The list often overscrolls to the right and  disappear from the screen....any help is appreciated..\n. I tried to figure out what is wrong with the code, and i think the issue has something to do with the padding of the view. So, if you have any paddingRight and/or paddingLeft set for your twowayview widget, delete it. It seems to work for me. There is something wrong in the management of the offset in the TwoWayLayoutManager class. I can't reproduce the bug without the padding, so...hope it helps.\n. ",
    "taimur97": "having same problems here\n. ",
    "holance": "Same using SpannableGridView.\n. Not working, still have same empty space. \n. Seems like if I keep adding items into the grid, then scroll the view, then delete these items, this issue won't happen. But if I delete items after adding them without scroll the view manually, empty space will be appended at the end. \n. No luck, still have empty space if I did not scroll the grid before removing items. And item removal animation will not be shown if using notifyDataSetChanged.\n. ",
    "norman-kapschefsky": "Hi, I ran in the same problem, which is/was really annoying. I tested several things and one of them did the trick: I dont know why but you have to set the item animator explicitly to null for the recycler view with [RecyclerView].setItemAnimator(null); ... Especially the first items reordered when scrolling up again in my staggered layout. Now it is gone. Hope this helps you as well. \n[Can one of you post this in stackoverflow as well? I dont have an account (yet) ^^]\nGreetings, Norman\n. ",
    "sumitsharmadesi": "Is the issue resolved becuase i am having the same issue\n. ",
    "petrusgomes": "Same issue here. @norman-kapschefsky suggestion worked for me, as I don't need animator for now. Thanks!\n. ",
    "eternalwsq": "@norman-kapschefsky  I use StaggeredGrid and have the same problem,but it have no effect on my layout.\n. ",
    "Wavesonics": "Just my 2 cents, but there has been no action on the master repro in a while. No action on Issues or PRs. Gives it an unmaintained sorta feel that is scary for using in production.\n. Ya I just want to be clear, I'm not saying the author should be more active, he doesn't owe anyone anything. If he's busy and doesn't have time to or just don't care to actively maintain the lib, that's his prerogative.\n. Would be nice if it could use any, but it would have to degrade functionality for classes that did not extend from TwoWayLayoutManager.\n. ",
    "aldoborrero": "@lucasr Happy to hear that! :dancers: \n. ",
    "JamesBradyBear": "Awesome ... \n. ",
    "Mukul-Sharma": "Thanks for your work. Have you continued back yet?\n. ",
    "Rekubot": "@lucasr this is an awesome library but there are a few kinks that still need ironing out. Do you have any plans to resume development?. ",
    "chpetersen": "Sorry for the late respons, but take a look at this:\nhttps://code.google.com/p/android/issues/detail?id=78191\n. ",
    "qstuff": "this issue will be fixed with PR 214 by md5555 (thx)\n. ",
    "skyfishjy": "@lucasr [build] Update to latest gradle and android plugin fix this issue\n. ",
    "bpillon": "I replaced my adapter by yours in samples and it's worked... After comparison I don't find any difference but it works.\n. ",
    "leeheungsoo": "it's to late....\ni show same issue. \nmember_list.setLayoutManager(new SpannableGridLayoutManager(getActivity()));\ni try add layoutmanger to twowayview, then it's work\n. ",
    "DominikAngerer": ":+1: \n. ",
    "simonwzb": "+1\nAt least combine the two library to one. \nError:Execution failed for task ':app:processDebugResources'.\n\nError: more than one library with package name 'org.lucasr.twowayview'\nYou can temporarily disable this error with android.enforceUniquePackageName=false\nHowever, this is temporary and will be enforced in 1.0\n. I will have to remove this library, because the auther doesnt upgrade it anymore.\n. \n",
    "Diarrhio": "Same here. Followed instructions on Readme and added:\ncompile 'org.lucasr.twowayview:twowayview:0.1.4'\nto my app module's build.gradle. Specifically, I am seeing that I can import org.lucasr.twowayview.TwoWayView, but am unable to import org.lucasr.twowayview.TwoWayLayoutManager and org.lucasr.twowayview.widget.ListLayoutManager\n. Hi. I tried that as well, but without any success.\n. I am on OSX Yosemite.\n. Any word on this? We're kinda stuck with this not working. Have tried both stable and snapshot versions. Each has it's own problems. Would prefer to use the stable version as snapshot still seems to be under heavy development:\n. ",
    "sweggersen": "This goes into the projects build.gradle:\nrepositories {\n    maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n}\nThis goes into the apps build.gradle:\ndependencies {\n    compile 'org.lucasr.twowayview:core:1.0.0-SNAPSHOT@aar'\n    compile 'org.lucasr.twowayview:layouts:1.0.0-SNAPSHOT@aar'\n}\n. ",
    "zepto88": "Does it matter running on Ubuntu or Win7? Ubuntu has version 1.1 of AS while Win7 is 1.0.1 i think\n. ",
    "jodaka": "If you weren't able to import org.lucasr.twowayview.TwoWayLayoutManager that suggests that you either trying to use stable version (and it simply doesn't has that class), or you've made mistakes while trying to include snapshot version. Try putting all of those into app build.graddle \ngroovy\nrepositories {\n    maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n}\ndependencies {\n    compile 'org.lucasr.twowayview:core:1.0.0-SNAPSHOT@aar'\n    compile 'org.lucasr.twowayview:layouts:1.0.0-SNAPSHOT@aar'\n}\n. ",
    "AndrewFinlay": "Same problem here, and I haven't seen an example online where this component is contained.  Sorry I can't help but I can confirm that it doesn't behave as I'd hoped.\n. ",
    "candyss9185": "Hi! I have been facing the same issue and I am trying to figure out why this happens. Have you been able to find a possible solution or the cause of the problem?\n. Thanks! I'll take a look at it. \n. ",
    "ishroid": "SOLVED\nYou may be right but i saw a answer on stackoverflow that work for me.\nTry it by yourself\nhttp://stackoverflow.com/a/29137921/1881611\nOn Mar 20, 2015 2:49 AM, \"sharebooks\" notifications@github.com wrote:\n\nI did some investigate for a while and I may find the root cause but I did\nnot find a solution as I did not go very deep into the source code.\nWhat I find is that the issue is related to the async-loading. The extra\nspaces were added to mLayoutStart (or did not removed properly when the\nitem is removed) in TwoWayLayoutManager.java. When the mLayouutStart is not\ncalculated correctly, the result is there are more extra space right before\nthe first item.\nHope this is helpful.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lucasr/twoway-view/issues/215#issuecomment-83763528.\n. Have you tried this http://stackoverflow.com/a/29137921/1881611\n. \n",
    "duldul1989": "I have a big project migrating things to android studio breaks more things than it fixes...Having said that i do eventually plan to move my project to it..\n. ",
    "gioffy": "Right now, I'm using this approach to declare the number of columns.\njava\nmLayoutManager = new SpannableGridLayoutManager(TwoWayLayoutManager.Orientation.VERTICAL,colsCount,rowsCount);\nmRecyclerView.setLayoutManager(mLayoutManager);\nI don't know your use case so I can't answer a better way.\n. ",
    "Deepscorn": "It works! Thank you!\n. ",
    "xavinuno": "I have the same problem. Any solution please?\n. ",
    "posativ": "Had the same issue here, was related to a fade-in animation.\n. ",
    "agbaandroid": "I have the same problem, help please.\n. ",
    "adenisonafifi": "I am experiencing the scroll position changing as well. Does anyone have any input regarding this?\n. I was able to work around the scroll position changing by ensuring that setNextSelectedPositionInt(int position) is called when an item is selected via the OnItemClickListener.\n. ",
    "ouyanx": "We have the same problem!!!!\n. ",
    "paulsowden": "Updated description.\nSo also, I used the TwoWayLayoutManager to create a custom view and it took me a little while to understand the API (which turned out to be really simple once I understood it), it would help a lot if there was some javadoc explaining the class, would you be open to accepting a pull request for documentation on the base class?\n. ",
    "alfredmack": "I have the same problem ,Any solution\n. @piasy i cant figure it out,help with some sample code.\nI have imageview and textview as two wayview item,i want the height of those item to stretch depending on the orientation of device.i have tried to use wrap_content but it doesnt work\n. if you are using Android studio, i suggest you use gradle\n. ",
    "Piasy": "@alfredmack I have abandoned two way view in my project, the basic function of RecyclerView and LinearLayoutManager is enough for me.\n. ",
    "androidman15": "Hello?\n. Public class ListViewAdapter extends BaseAdapter {\n    private List ObjectList;\n    private Context mContext;\npublic ListViewAdapter(Context context, List<ListViewObject> newList){\nthis.mContext = context;\nthis.ObjectList = newList;\n}\n@Override\npublic int getCount() {\n    return ObjectList.size();\n}\n@Override\npublic ListViewObject getItem(int position) {\n    return ObjectList.get(position);\n}\n@Override\npublic long getItemId(int position) {\n    return position;\n}\n@Override\npublic View getView(final int position, View convertView, ViewGroup parent) {\n  ViewHolder viewHolder = new ViewHolder();\nLayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n  if (convertView == null) {\n      convertView = inflater.inflate(R.layout.listview_layout, parent, false);\n      viewHolder.imageView = (ImageView)convertView.findViewById(R.id.ListViewImage); \n      viewHolder.layout = (RelativeLayout)convertView.findViewById(R.id.ListViewLayout);\n      convertView.setTag(viewHolder);\n  } \n else \n  {\n     viewHolder = (ViewHolder)convertView.getTag();\n  }\nPicasso.with(mContext)\n  .load(getItem(position).getImageUrl())\n  .resize(100, 100)\n  .centerCrop()\n  .into(viewHolder.imageView);   \nreturn convertView;\n}\nclass ViewHolder {\n    RelativeLayout layout;\n    ImageView imageView;\n   }\n }\nListView Layout:\nandroid:layout_width=\"52dp\"\nandroid:layout_height=\"43dp\" >\n\nMain Layout:\n\nMainActivity:\npublic void ListView_Load() {\n        for (File file : listFile){\n            mListViewObject = new ListViewObject();\n            mListViewObject.setImageUrl(\"file:///\" + file.getAbsolutePath());\n            ListViewObject_List.add(mListViewObject); \n        }\n        listViewAdapter = new ListViewAdapter(this, ListViewObject_List);\n        TwoWayListView.setAdapter(listViewAdapter);\n} \nThanks\n. Mr. Lucas, do you ever answer questions regarding to your libraries at all?  I appreciate for all nice works, but I absolutely get no support or what so ever.  I have emailed you, but nothing happened.  I posted here, nothing happened so far.  It's so lack of support! \n. ",
    "eneim": "Could you please upload/paste your crash log report here?\n. ",
    "zhangchaoxu": "the code of method as below \n/**\n         * Called when a child of RecyclerView does not want RecyclerView and its ancestors to\n         * intercept touch events with\n         * {@link ViewGroup#onInterceptTouchEvent(MotionEvent)}.\n         *\n         * @param disallowIntercept True if the child does not want the parent to\n         *            intercept touch events.\n         * @see ViewParent#requestDisallowInterceptTouchEvent(boolean)\n         */\n        public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept);\n. ",
    "pablobaldez": "ok but how can i find the first visible position? where is this method or something like this?\n. nice! thank you\n. ",
    "ramashishb": "I am in the same situation. Any update?\n. ",
    "mateusgrb": "A note in the README about the sample would help. I took some time to notice it was there.\n. ",
    "Knight-ZXW": "too long ago\n. ",
    "nomisRev": "Any solution found?\n. ",
    "kenneth2008": "Your question is: How to set the click event for each button in the item?\nMy answer is: You can do it like the following coding, but better to avoid or please do not update the order of the list.\n```\nTwoWayView mRecyclerView = (TwoWayView) rootView.findViewById(R.id.lstSnapShot);\nfinal ItemClickSupport itemClick = ItemClickSupport.addTo(mRecyclerView);\nitemClick.setOnItemClickListener(new ItemClickSupport.OnItemClickListener() {\n         @Override\n          public void onItemClick(RecyclerView parent, View child, int position, long id) {\n                 // please store the data in the ArrayList, get object back with list.get(position)\n                 // Suggested to do all of your action here\n                Button btnClick = (Button)child.findViewById(R.id.btnClick);\n                btnClick.setOnClickListener(new View.OnClickListener(){\n                        @Override\n                         public void onClick(View v){\n                                   // If you sure to use button click, not the item click, you need to use\n                                   // btnClick .setTag(position) to record which button you are\n                                  //  In this method use getTag to get the position and use list.get(position)\n                                  //  By the way, it is very complex if you need to add object in the front of the list\n                                  //  because the position will be incorrect\n                          }\n                 })\n            }\n });\n```\n. Do you want to see how to implement or what twoway-view can do?\n. #266 has answer.\ncompile 'com.android.support:support-v4:23.1.1'\n    compile 'com.android.support:appcompat-v7:23.1.0'\n    compile 'com.android.support:recyclerview-v7:23.1.0'\ncompile ('com.github.lsjwzh.RecyclerViewPager:lib:v1.1.0'){\n        // Avoid pulling to latest 23.2.0\n        // https://code.google.com/p/android/issues/detail?id=72430\n        exclude group: 'com.android.support', module:'support-v4'\n        exclude group: 'com.android.support', module:'recyclerview-v7'\n    }\nSome library will include the new support library. Found them, and you will see the external library list has a 23.1.0 support library.\n. ",
    "Binghammer": "Adding myself to this \n. ",
    "shineangelic": "ff\n. ",
    "trimf": "It is very buggy, google GridLayoutManager works much better and supports spans.\nI wasted 4 hours trying to use TwoWayView.\nFor those who possibly want to use it. Think! Have a look at google's GridLayoutManager!\n. Thank you for reply.\n. https://developer.android.com/reference/android/support/v7/widget/StaggeredGridLayoutManager.html\nTry this. May be you didn't know about this layout manager.\n. ",
    "grahamsmith": "The GridLayoutManager only supports a span in one direction however this library was attempting to span both columns and rows at the same time. If anyone knows how to achieve that with the GridLayoutManager I would be keen to know, however in the mean time has anyone managed to fork this project and apply some fixes?\nWould be good to move it to a community driven project with multiple owners.\n. ",
    "marbarfa": "@lucasr is this library maintained ?\n. ",
    "Almaral-Engineering": "A how-to would be perfect!. ",
    "Spotik": "Same thing here.\n. @lemoncola still with problem =/\n. @ekinguvencoglu which folder should I run the command?\n. @ekinguvencoglu i got the msg: \"is not recognized as an internal or external command operable program or batch file\"\nOn android studio terminal, the patch is \"C:\\Users\\myuser\\Projetos Android\\my-project>\"\n. @ekinguvencoglu hmmm i dont think so... how I do that?\nAnd thks for helping!\n. ",
    "ekinguvencoglu": "I cannot find the solution of that problem, please help\n. is there any solution about that?\n. @lemoncola thanks a lot, you save my day\n. @Spotik hi, I found many other 3rd party and some offical libraries still demand to use 23.2 support library, did you check that with ./gradlew app:dependencies  command? \n. @Spotik it can be run in terminal window at Android Studio\n. @Spotik do you set the gradle path to your os?\n. @lemoncola it's also very helpful explanation for me, thanks\n. ",
    "Fondesa": "Same thing here.\nThat happens because with support-v4:23.2.0 GestureDetectorCompat became final\n. ",
    "hehuelet": "me too~\n. ",
    "rajeevjaiswal": "Same issue but I am not using Support Library 23.2.0 even then I am getting those errors\n. Thanks I will look into it\nOn 04-Mar-2016 9:44 am, \"LemonCola\" notifications@github.com wrote:\n\n@rajeevjaiswal https://github.com/rajeevjaiswal for my case, facebook\nSDK 'secretly' pulled the version to 23.2.0 even though I have the line:\ncompile 'com.android.support:support-v4:23.1.1'\nI need to explicitly exclude the dependency like this to get back 23.1.1:\ncompile ('com.facebook.android:facebook-android-sdk:4.10.0'){\n    // Avoid pulling to latest 23.2.0\n    // https://code.google.com/p/android/issues/detail?id=72430\n    exclude group: 'com.android.support', module:'support-v4'\n    exclude group: 'com.android.support', module:'cardview-v7'\n}\nTo make sure your dependencies are not force upgraded, run the following\ncommand in the terminal\n./gradlew app:dependencies\nAnd look for 23.2.0\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lucasr/twoway-view/issues/266#issuecomment-192091192.\n. @lemoncola I modified the code but still it is crashing \n. \n",
    "SeanGallahad": "Also getting this issue   - is there a work-around? Thanks!\n. ",
    "lemoncola": "@rajeevjaiswal for my case, facebook SDK 'secretly' pulled the version to 23.2.0 even though I have the line: \ncompile 'com.android.support:support-v4:23.1.1'\nI need to explicitly exclude the dependency like this to get back 23.1.1:\ncompile ('com.facebook.android:facebook-android-sdk:4.10.0'){\n        // Avoid pulling to latest 23.2.0\n        // https://code.google.com/p/android/issues/detail?id=72430\n        exclude group: 'com.android.support', module:'support-v4'\n        exclude group: 'com.android.support', module:'cardview-v7'\n    }\nTo make sure your dependencies are not force upgraded, run the following command in the terminal\n./gradlew app:dependencies\nAnd look for 23.2.0\n. Thanks @ekinguvencoglu for helping~\n@Spotik let's try the GUI way~\n1) Open Gradle Panel (View > Tool Windows > Gradle)\n\n2) Click the 'Execute Gradle Task' button in the toolbar of the Gradle Panel\n\n3) In the dialog, fill in \"Command Line\" with \"app:dependencies\"\n\n4) Then in the Gradle output, you should see a module dependency tree. Search or scroll down to make sure your support lib is not upgraded due to requirements by some 3rd-party library.\n\n. ",
    "anantshah93": "same error but ii will try above solution still wanted to ask is there any other solution we can use with latest version of support library with this library.Is it possible without changing  to compile 'com.android.support:support-v4:23.1.1' \n. ",
    "MustafaAdil": "I'm also facing this issue... whats the proper solution to this?\n. ",
    "pvllnspk": "what about adding a click listener to a cell view inside adapter?\n@Override\n    public void onBindViewHolder(SimpleViewHolder holder, final int position) {\n        ....\n        itemView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                mOnClickListener.onClick(v, position);\n            }\n        });\nand then\nmRecyclerView.setAdapter(new GridAdapter(getActivity(), items, new GridAdapter.GridAdapterListener() {\n            @Override\n            public void onClick(View v, int position) {\n                Toast.makeText(getActivity(), String.valueOf(items.get(position).getId()), Toast.LENGTH_SHORT).show();\n            }\n        }));\n. ",
    "seerazz": "Hi i face the same problem too, just use this class to solve the issue https://gist.github.com/nesquena/231e356f372f214c4fe6\n. Hi i face the same problem too, just use this class to solve the issue https://gist.github.com/nesquena/231e356f372f214c4fe6\n. ",
    "jayakrishnan-pm": "I fixed this issue by adding a separate on item click listener to it like,\n           mRecyclerView.addOnItemTouchListener(\n            new RecyclerItemClickListener(getApplicationContext(), new  RecyclerItemClickListener.OnItemClickListener() {\n                @Override\n                public void onItemClick(View view, int position) {\n\n                    Toast.makeText(getApplicationContext(), \"selected \" + textColorList.get(position), Toast.LENGTH_SHORT).show();\n\n                }\n            })\n    );\n\n`\nRecyclerItemClickListener.java\n import android.content.Context;\n import android.support.v7.widget.RecyclerView;\n import android.view.GestureDetector;\n import android.view.MotionEvent;\n import android.view.View;\n\n public class RecyclerItemClickListener implements RecyclerView.OnItemTouchListener {\n private OnItemClickListener mListener;\n\n public interface OnItemClickListener {\n    public void onItemClick(View view, int position);\n }\n\n\n\nGestureDetector mGestureDetector;\n\npublic RecyclerItemClickListener(Context context, OnItemClickListener listener) {\n    mListener = listener;\n    mGestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener() {\n        @Override\n        public boolean onSingleTapUp(MotionEvent e) {\n            return true;\n        }\n\n\n    });\n}\n\n@Override\npublic boolean onInterceptTouchEvent(RecyclerView view, MotionEvent e) {\n    View childView = view.findChildViewUnder(e.getX(), e.getY());\n    if (childView != null && mListener != null && mGestureDetector.onTouchEvent(e)) {\n        mListener.onItemClick(childView, view.getChildAdapterPosition(childView));\n    }\n    return false;\n}\n\n@Override\npublic void onTouchEvent(RecyclerView view, MotionEvent motionEvent) {\n}\n\n@Override\npublic void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {\n\n}\n\n}`. ",
    "jiulian": "mGestureDetector = new ItemClickGestureDetector(hostView.getContext(),\n                new ItemClickGestureListener(hostView));\nI solved the problem by change the ItemClickGestureDetector to GestureDetectorCompat\nmGestureDetector = new GestureDetectorCompat(hostView.getContext(),\n                new ItemClickGestureListener(hostView));\n. ",
    "Khang-NT": "Same problem\n. ",
    "tuanth89": "@bruthnan i have same this issue, how resolve this ??? Thanks\n. ",
    "aresthelord": "Recyclerview.layoutparams maybe\n. ",
    "juanlabrador": "Same problem. ",
    "blood-mist": "When I have my 1st or last item selected, they get unaligned often,they seem to be out of place for a while and then  re-adjust their alignment. Any solutions to this ?. ",
    "srxffcc1": "https://github.com/lucasr/twoway-view/issues/281. \n. ",
    "stefanionescu": "Nevermind, I solved it : in the adapter I had numerous ArrayLists. When I want to delete items, I get the Arraylists from the adapter, I add the elements that I want to remain in other ArrayLists and the I set the ArrayList again for the Adapter.\nComplicated but works. "
}